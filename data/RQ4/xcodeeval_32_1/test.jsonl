{"similarity_score": 0.7349228611500701, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "aa5ab2e38f7aaeefacb6bde42d317644", "bug_code_uid": "e7118ca41ce77bcdc4fefbe08e61dc38", "src_uid": "128372d890f632494e59e81287abd85a", "apr_id": "60f833c3e0122c1d1e7fe84ffe0b3f32", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,r;\r\n        scanf(\"%d\",&n);\r\n        r=n%7;\r\n        if(n%7==0)\r\n        printf(\"%d\\n\",n);\r\n        else\r\n        printf(\"%d\\n\",n-r);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,p,r;\r\n        scanf(\"%d\",&n);\r\n        r=n%7;\r\n        p=n%10;\r\n        if(n%7==0)\r\n        printf(\"%d\\n\",n);\r\n        else\r\n        {\r\n            if(n<14||p==0)\r\n            printf(\"%d\\n\",n+7-r);\r\n            else if(p>r)\r\n            printf(\"%d\\n\",n-r);\r\n            else\r\n            printf(\"%d\\n\",n+7-r);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.6143344709897611, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "066c389f4133d559b235cdd116d43c7e", "bug_code_uid": "efc346e2d7e3e0d0a5d19905d6b03f61", "src_uid": "101fec8d8e169f941e71281048468121", "apr_id": "a8046d1d4a3c41ce0ff16441a62c26b2", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nconst int MAXN = 3e5;\n\n\nint n;\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tint c[MAXN];\n\tint i,j,max=0;\n\tfor(i=0;i<n;i++) scanf(\"%d\",&c[i]);\n\tfor(i=0;i<n-1;i++) {\n\t\tfor(j=i+1;j<n;j++) {\n\t\t\tif(c[i]!=c[j]&&max<=j-i) max=j-i;\n\t\t}\n\t}\n\tprintf(\"%d\",max);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint c[n];\n\tint i,j,maxl,maxr;\n\tfor(i=0;i<n;i++) scanf(\"%d\",&c[i]);\n\tfor(i=0;i<n-1;i++) {\n\t\tif(c[i]!=c[n-1]) {\n\t\t\tmaxl=n-1-i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=n-1;i>0;i--) {\n\t\tif(c[i]!=c[0]) {\n\t\t\tmaxr=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%d\",maxl>maxr?maxl:maxr);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8070953436807096, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "2205555254b9bd4fcc7547dd55a4c378", "bug_code_uid": "a5b410ddac0ea5a327d24b604b8e40de", "src_uid": "a1951e7d11b504273765fc9fb2f18a5e", "apr_id": "141a6617d901f7681db4053496a98b5a", "difficulty": 1100, "tags": ["sortings", "binary search", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,x,i,j,k,p,a,b,c;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&x);\n        int n,m[200001]={0};\n        p=0; c=0;\n        for(i=0;i<x;i++)\n        {\n            scanf(\"%d\",&n);\n            if(m[n]==0) { c++; m[n]++; }\n            else m[n]++;\n            if(m[n]>p) p=m[n];\n        }\n        if(p>1) p--;\n        k=p>c?c:p;\n        if(x==1) printf(\"0\\n\");\n        else\n        printf(\"%d\\n\",k);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,x,i,j,k,p,a,b,c;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&x);\n        int n,m[200001]={0};\n        p=0; c=0;\n        for(i=0;i<x;i++)\n        {\n            scanf(\"%d\",&n);\n            if(m[n]==0) { c++; m[n]++; }\n            else m[n]++;\n            if(m[n]>p) p=m[n];\n        }\n        k=p>c?c:p;\n        if(c==p) printf(\"%d\\n\",c-1);\n        else\n        printf(\"%d\\n\",k);\n    }\n}\n"}
{"similarity_score": 0.9975369458128078, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "22eae0d67c66d20f228b2fc88d50b440", "bug_code_uid": "8aeb6c28ce58d4f007424c77eb676bad", "src_uid": "753113fa5130a67423f2e205c97f8017", "apr_id": "c4dbd88725d5d3ae58445d52bf168696", "difficulty": 900, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nchar name[101][10] , cg[101][11]  ;\n\nint n , i, j, k ;\n\nint main()\n{\n     scanf(\"%d\" , &n ) ;\n    for ( i = 0 ; i < n ;i++ )\n    {\n        scanf(\"%s %s\" , &name[i] , &cg[i] ) ;\n    }\n    for( i = 0 ; i < n ; i++)\n    {\n        //printf(\"%c \\n\", cg[i][0]) ;\n       if(cg[i][0] ==  'r' )\n       {\n           printf(\"%s\\n\", name[i] ) ;\n       }\n    }\n     for( i = 0 ; i < n ; i++)\n    {\n         if( cg[i][0] == 'w' || cg[i][1] == 'h' )\n       {\n           printf(\"%s\\n\", name[i] ) ;\n       }\n    }\n     for( i = 0 ; i < n ; i++)\n    {\n         if(cg[i][0] == 'm')\n       {\n           printf(\"%s\\n\", name[i] ) ;\n       }\n    }\n     for( i = 0 ; i < n ; i++)\n    {\n         if(  cg[i][0] == 'c'  &&cg[i][1] == 'a')\n       {\n           printf(\"%s\\n\", name[i] ) ;\n       }\n    }\n  return 0 ;\n  }\n", "fixed": "#include <stdio.h>\n\nchar name[101][12] , cg[101][11]  ;\n\nint n , i, j, k ;\n\nint main()\n{\n     scanf(\"%d\" , &n ) ;\n    for ( i = 0 ; i < n ;i++ )\n    {\n        scanf(\"%s %s\" , &name[i] , &cg[i] ) ;\n    }\n    for( i = 0 ; i < n ; i++)\n    {\n        //printf(\"%c \\n\", cg[i][0]) ;\n       if(cg[i][0] ==  'r' )\n       {\n           printf(\"%s\\n\", name[i] ) ;\n       }\n    }\n     for( i = 0 ; i < n ; i++)\n    {\n         if( cg[i][0] == 'w' || cg[i][1] == 'h' )\n       {\n           printf(\"%s\\n\", name[i] ) ;\n       }\n    }\n     for( i = 0 ; i < n ; i++)\n    {\n         if(cg[i][0] == 'm')\n       {\n           printf(\"%s\\n\", name[i] ) ;\n       }\n    }\n     for( i = 0 ; i < n ; i++)\n    {\n         if(  cg[i][0] == 'c'  &&cg[i][1] == 'a')\n       {\n           printf(\"%s\\n\", name[i] ) ;\n       }\n    }\n\n\n  return 0 ;\n  }\n"}
{"similarity_score": 0.9731663685152058, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "10fdb1997e913798ac5f7108892f43b1", "bug_code_uid": "e41b7c218534523d7b94ea7ada5a79a4", "src_uid": "351d8874a10f84d157a7b2e1eb64e2a1", "apr_id": "5d876604e38f9529b4c7fd5d994e9041", "difficulty": 1400, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int main()\n{\n    int n,num,arr[101][2],n1,sum=0,i,j;\n    double min=10000.0;\n    scanf(\"%d %d\",&n,&num);\n    n1=n;\n    \n    for(i=0;i<n;i++)\n    {\n       scanf(\"%d\",&arr[i][0]);\n       sum+=arr[i][0];\n    }\n    for(j=0;j<n;j++)\n    {\n       scanf(\"%d\",&arr[j][1]);\n    }\n    for(i=0;i<n;i++)\n    {\n       if(arr[i][1]/(double)arr[i][0]<min)\n       {\n          min=arr[i][1]/(double)arr[i][0];\n       }\n    }\n    if(min*sum<num)\n    {\n      printf(\"%.5lf\",min*sum);\n    }\n    else\n    {\n      printf(\"%.5lf\",(float)num);\n    }\n    scanf(\"%*d\");\n}\n    \n", "fixed": "int main()\n{\n    int n,num,arr[101][2],n1,sum=0,i,j;\n    double min=10000.0;\n    scanf(\"%d %d\",&n,&num);\n    n1=n;\n    \n    for(i=0;i<n;i++)\n    {\n       scanf(\"%d\",&arr[i][0]);\n       sum+=arr[i][0];\n    }\n    for(j=0;j<n;j++)\n    {\n       scanf(\"%d\",&arr[j][1]);\n    }\n    for(i=0;i<n;i++)\n    {\n       if(arr[i][1]/(double)arr[i][0]<min)\n       {\n          min=arr[i][1]/(double)arr[i][0];\n       }\n    }\n    if(min*sum<num)\n    {\n      printf(\"%.5lf\",min*sum);\n    }\n    else\n    {\n      printf(\"%.5lf\",(float)num);\n    }\n    //scanf(\"%*d\");\n    return 0;\n}\n    \n"}
{"similarity_score": 0.9964539007092199, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "649d728f44763d7d6d70d0d888ccf155", "bug_code_uid": "abe01eeb687b7865bc0ee3f684605414", "src_uid": "e8ba3fb95800806465386ecbfbe924e9", "apr_id": "58dab2ef2cacbb244371c00346970137", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long int a, b;\n        scanf(\"%lld %lld\",&a,&b);\n        if( 2*a <= b )\n        {\n            printf(\"%lld %lld\\n\",a,2*a);\n        }\n        else printf(\"1 1\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long int a, b;\n        scanf(\"%lld %lld\",&a,&b);\n        if( 2*a <= b )\n        {\n            printf(\"%lld %lld\\n\",a,2*a);\n        }\n        else printf(\"-1 -1\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9819494584837545, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "cd90cccee30b58101cf7919a82355460", "bug_code_uid": "71c9d4d636484cfcd87452fbda586f24", "src_uid": "a7e98ed8ee1b0a4fd03dfcd222b68c6f", "apr_id": "e0a809687085c831885f1982aac54c29", "difficulty": 800, "tags": ["two pointers", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\t\n\tint n,i=0,j,s=0,d=0,cnt=0,x=0;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\t\n\tfor(j=0;j<n;j++){\n\t\tscanf(\"%d\",&a[j]);\n\t}\n\n\twhile(i<n){\n\t\tcnt++;\n\t\tif(i==(n-1)){\n\t\t\tx=1;\n\t\t\tbreak;\n\t\t}\n\n\t\tif(a[i]>a[n-1]){\n\t\t\tif(cnt%2==0){\n\t\t\t\td+=a[i];\n\t\t\t\ti++;\t\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\ts+=a[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\telse{\n\n\t\t if(cnt%2==0){\n         \td+=a[n-1];\n            n--;\n          }\n          else{\n          \ts+=a[n-1];\n          \tn--;\n          }\n\n\t\t}\n\n\t}\n\n\tif(x==1){\n\t\tif(cnt%2==0)\n\t\t\td++;\n\t\telse\n\t\t\ts++;\n\n\n\t}\n\n\tprintf(\"%d %d\\n\",s,d);\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\t\n\tint n,i=0,j,s=0,d=0,cnt=0,x=0;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\t\n\tfor(j=0;j<n;j++){\n\t\tscanf(\"%d\",&a[j]);\n\t}\n\n\twhile(i<n){\n\t\tcnt++;\n\t\tif(i==(n-1)){\n\t\t\tx=1;\n\t\t\tbreak;\n\t\t}\n\n\t\tif(a[i]>a[n-1]){\n\t\t\tif(cnt%2==0){\n\t\t\t\td+=a[i];\n\t\t\t\ti++;\t\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\ts+=a[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\telse{\n\n\t\t if(cnt%2==0){\n         \td+=a[n-1];\n            n--;\n          }\n          else{\n          \ts+=a[n-1];\n          \tn--;\n          }\n\n\t\t}\n\n\t}\n\n\tif(x==1){\n\t\tif(cnt%2==0)\n\t\t\td+=a[n-1];\n\t\telse\n\t\t\ts+=a[n-1];\n\t}\n\n\tprintf(\"%d %d\\n\",s,d);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.2391459074733096, "equal_cnt": 33, "replace_cnt": 19, "delete_cnt": 5, "insert_cnt": 10, "fix_ops_cnt": 34, "lang": "GNU C11", "fix_code_uid": "45f14d6daccd0c67bb4d7fe92fd9b99a", "bug_code_uid": "a3d7ef67a970353501b2d17e43731724", "src_uid": "541039ef3c9b8251b758608811533e06", "apr_id": "bf39efcfe914b3fb5367a2c8a6b254fa", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{   long long int a,b,t,x,y,k,j,m;\n    double l;\n    scanf(\"%lli\",&t);\n    while(t--) {\n        scanf(\"%lli %lli\",&a,&b);\n        if(a==b) {\n            printf(\"%d\\n\",0);\n        }\n\n        if(a>b) {\n            x=a;\n            y=b;\n        }\n        else if(b>a) {\n            x=b;\n            y=a;\n        }\n\n\n\n       if(y>0) {\n            k=x/y;\n            l=log2(k);\n            j=l;\n        }\n        if(l-j!=0 ||x%y!=0 ) {\n            printf(\"%d\\n\",-1);\n        }\n\n        else if(j%3==0 ) {\n            m=j/3;\n            printf(\"%lli\\n\",m);\n        } else if(j%3!=0) {\n            m=j/3+1;\n            printf(\"%lli\\n\",m);\n        }\n\n\n\n    }\n}\n", "fixed": "\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint min(int a, int b){\n  return (a < b) ? a : b;\n}\n\nint main(){\n  int casos;\n  long long a, b, res;\n\n  scanf(\"%d\", &casos);\n\n  while(casos--){\n    scanf(\"%lli %lli\", &a, &b);\n\n    res = 0;\n    if(a <= b){\n      while(a < b){\n\ta <<= 1;\n\t++res;\n      }\n\n      if(res % 3 == 0)\n\tres = res / 3;\n      else\n\tres = res / 3 + 1;\n\n      if(a == b)\n\tprintf(\"%lli\\n\", res);\n      else\n\tprintf(\"-1\\n\");\n    }\n    else{\n      while((a > b) && (a & 1) == 0){\n\ta >>= 1;\n\t++res;\n      }\n\n      if(res % 3 == 0)\n\tres = res / 3;\n      else\n\tres = res / 3 + 1;\n\n      if(a == b)\n\tprintf(\"%lli\\n\", res);\n      else\n\tprintf(\"-1\\n\");\n    }\n\n      \n  }\n\n  return 0;\n}"}
{"similarity_score": 0.10407876230661041, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "885f30249d892ea64532b92b0d9b45c9", "bug_code_uid": "d10c09ec710dc392cc6127dd27b766e2", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "a48de6eef1d0a1bbdf178e86574a1545", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\t\tint i,j,e=0,n;\n\t\tint a[n],b[n-1],c[n-2];\n       scanf(\"%d\",&n);\n       for(i=0;i<n;i++)\n              scanf(\"%d\",&a[i]);\n       for(i=0;i<n-1;i++)\n              scanf(\"%d\",&b[i]);\n       for(i=0;i<n-2;i++)\n              scanf(\"%d\",&c[i]);\n       for(i=0;i<n;i++){\n              for(j=0;j<n-2;j++){\n                     if(a[i]!=b[j])\te++;\n              }\n              if(e+2==n)    printf(\"%d\\n\",a[i]);\n       }\n}", "fixed": "#include<stdio.h>\nint main(){\n       int n,i,a=0,b=0,c=0,q;\n       scanf(\"%d\",&n);\n       for(i=0;i<n;i++)     scanf(\"%d\",&q),a+=q;\n       for(i=0;i<n-1;i++)   scanf(\"%d\",&q),b+=q;\n       for(i=0;i<n-2;i++)   scanf(\"%d\",&q),c+=q;\n       printf(\"%d\\n%d\",a-b,b-c);\n}"}
{"similarity_score": 0.0, "equal_cnt": 0, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "49260101b4a16a49899fad0341cbac75", "bug_code_uid": "bef58e4d7eea7637bdd262f6c5baab87", "src_uid": "1a3b22a5a8e70505e987d3e7f97e7883", "apr_id": "fdd5bd21bf97a4b9b5d958fc10e08b98", "difficulty": 1600, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n    long long int n,i,sum=0,count0=0,count1=0;\n    scanf(\"%I64d\",&n);\n    int a[200005]={0};\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        if(a[i]==0) count0++;\n        else if(a[i]==1) count1++;\n    }\n    if(count0<=count1){\n        for(i=0;i<n;i++){\n            if(a[i]==1) sum+=count0;\n            else count0--;\n        }\n    }\n    else if(count1<count0){\n        for(i=n-1;i>=0;i--){\n            if(a[i]==0) sum+=count1;\n            else count1--;\n        }\n    }\n    printf(\"%I64d\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.3622200584225901, "equal_cnt": 27, "replace_cnt": 15, "delete_cnt": 3, "insert_cnt": 8, "fix_ops_cnt": 26, "lang": "GNU C", "fix_code_uid": "c4ba2775ff8d9c1e87499d7e7e5eda92", "bug_code_uid": "feee6fa69f86154eaec3be0e6c20ddac", "src_uid": "ac33b73da5aaf2139b348a9c237f93a4", "apr_id": "349b41d490622b36533ad8555aed46ee", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\n\nint main(){\nint n,x;\nscanf(\"%d %d\",&n,&x);\nint i,j,a[n],b[n];\nfor(i=0;i<n;i++){\n    scanf(\"%d %d\",&a[i],&b[i]);\n}\nint t=1;\nint p=a[0]-1;\nfor(i=p;i>x;i--){\n        p=p-x;\n}\n\n\nt=t+p;\n\nfor(i=1;i<n;i++){\n    int l=a[i]-b[i-1];\n    if(l>=x){\n        for(j=l;j>x;j--){\n            l=l-x;\n        }\n\n    }\n    t=t+l;\n\n}\nfor(i=0;i<n;i++){\n    int q=b[i]-a[i];\n    t=t+q;\n\n}\nprintf(\"%d\",t);\n\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\nint main()\n{\n    int t = 0;\n    int l, r, n, m, x;\n    scanf(\"%d%d\", &n, &x);\n    int sum ;\n    int i,temp =0;\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d%d\", &l, &r);\n        sum = 0;\n        while(1)\n        {\n             t = t+x;\n             if(t>=l)\n             {\n                 t = (t-x);\n                 sum = sum + (r-t);\n                 t = t+sum;\n                 break;\n             }\n        }\n        temp = temp +sum;\n    }\n    printf(\"%d\\n\", temp);\n}\n"}
{"similarity_score": 0.7708553326293559, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "6a4f39373b0944f6929fc49386a192ba", "bug_code_uid": "ddcc6a66955e2d80ec8b04a109630277", "src_uid": "a52ceb8a894809b570cbb74dc5ef76e1", "apr_id": "81e2967502d2c4c71157d1c14bb00f2a", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,i,d,e;\nscanf(\"%d\",&n);\nif(n==1)\n\tprintf(\"1\\n1\");\nelse if(n==2)\n\tprintf(\"1\\n1\");\nelse if(n%2==0)\n{\nprintf(\"%d\\n\",n);\nint arr[n];\nd=n/2;\nfor(i=0;i<n/2;i++)\n{\n\tif(i%2!=0)\n\t{arr[i]=d;arr[n-i-1]=n+1-d;d--;}\n\telse\n\t{arr[n-i-1]=d;arr[i]=n+1-d;d--;}\n}\nfor(i=0;i<n;i++)\nprintf(\"%d \",arr[i]);\n}\nelse\n{\n\tprintf(\"%d\\n\",n-1);\n\tint k=n;\n\tfor(i=1;i<(n+1)/2;i++)\n\t{\n\tprintf(\"%d %d \",i,n+1-i);\n\t}\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n,i,d,e;\nscanf(\"%d\",&n);\nif(n==1)\n\tprintf(\"1\\n1\");\nelse if(n==2)\n\tprintf(\"1\\n1\");\nelse if(n==3)\n\tprintf(\"2\\n1 3\");\nelse if(n%2==0)\n{\nprintf(\"%d\\n\",n);\nint arr[n];\nd=n/2;\nfor(i=0;i<n/2;i++)\n{\n\tif(i%2!=0)\n\t{arr[i]=d;arr[n-i-1]=n+1-d;d--;}\n\telse\n\t{arr[n-i-1]=d;arr[i]=n+1-d;d--;}\n}\nfor(i=0;i<n;i++)\nprintf(\"%d \",arr[i]);\n}\nelse\n{\n\tprintf(\"%d\\n\",n);\n\tint k=n;\n\tfor(i=1;i<=n;i++)\n\t{\n\tif(i%2!=0)\n\tprintf(\"%d \",i);\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\tif(i%2==0)\n\tprintf(\"%d \",i);\n\t}\n\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.5298245614035088, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "7a41742d46691dd123761091f7b0c2ef", "bug_code_uid": "3a1d7a4a1d18dd7890ee6656a0fd7840", "src_uid": "d03ad531630cbecc43f8da53b02d842e", "apr_id": "572510eb3182d0aad5cc9a936b295b15", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N 100000\n\nint main() {\n\tint n, i, e, h_, cnt;\n\n\tscanf(\"%d\", &n);\n\te = h_ = cnt = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tint h;\n\n\t\tscanf(\"%d\", &h);\n\t\te += (h_ - h);\n\t\tif (e < 0) {\n\t\t\tcnt += (-e);\n\t\t\tprintf(\"%d \", i + 1);\n\t\t\te = 0;\n\t\t}\n\t\th_ = h;\n\t}\n\tprintf(\"\\n%d\\n\", cnt);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N 100000\n\nint main() {\n\tint n, e, h_, cnt;\n\n\tscanf(\"%d\", &n);\n\te = h_ = cnt = 0;\n\twhile (n--) {\n\t\tint h;\n\n\t\tscanf(\"%d\", &h);\n\t\te += (h_ - h);\n\t\tif (e < 0) {\n\t\t\tcnt += (-e);\n\t\t\te = 0;\n\t\t}\n\t\th_ = h;\n\t}\n\tprintf(\"\\n%d\\n\", cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9539347408829175, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d6b29ff1cdcacce7b622da4d8cf51e27", "bug_code_uid": "b1d1be0217b4bc3a4eefe73a88019cc7", "src_uid": "20dd260775ea71b1fb5b42bcac90a6f2", "apr_id": "664804a85d6c51c5b1019df6ec57e0ce", "difficulty": 800, "tags": ["greedy", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n        {\r\n        long int x;\r\n        int i;\r\n        scanf(\"%d\",&x);\r\n        long int a[x];\r\n        for(i=0;i<x;i++)\r\n        {\r\n            scanf(\"%ld\",&a[i]);\r\n        }\r\n        long int min=a[0],max=0;\r\n        for(i=0;i<x;i++)\r\n        {\r\n           if(a[i]<min)\r\n           min=a[i];\r\n           max=max+(a[i]-min);\r\n        }\r\n        printf(\"%ld\\n\",max);\r\n        }\r\n     return 0;\r\n    \r\n\r\n}\r\n\r\n    ", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n        {\r\n        long int x;\r\n        int i;\r\n        scanf(\"%d\",&x);\r\n        long int a[x];\r\n        for(i=0;i<x;i++)\r\n        {\r\n            scanf(\"%ld\",&a[i]);\r\n        }\r\n        long int min=a[0],max=0;\r\n        for(i=0;i<x;i++)\r\n        {\r\n           if(a[i]<min)\r\n           min=a[i];\r\n        }\r\n        for(i=0;i<x;i++)\r\n        {\r\n           max=max+(a[i]-min);\r\n        }\r\n        printf(\"%ld\\n\",max);\r\n        }\r\n     return 0;\r\n    \r\n\r\n}\r\n\r\n    "}
{"similarity_score": 0.8638920134983127, "equal_cnt": 15, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "a02a2917fd83da7f3f9a7902a946eb6b", "bug_code_uid": "d2de333a4e6b770536c9a0947a812264", "src_uid": "12a768b502ddb07798830c9728fba5c4", "apr_id": "a3a8a00129b5c5bdca42af403ca9b340", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\ntypedef struct{\n\tlong long row;\n\tlong long col;\n}order;\n\norder list[1000004];\n\nint main(){\n\tlong long n,m,i,j,row[1004],col[1004],ind=0;\n\tchar arr[1004][1004];\n\tscanf(\"%lld %lld\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t\tfor(j=0;j<m;j++){\n\t\t\tscanf(\" %c\",&arr[i][j]);\n\t\t\tif(arr[i][j]=='*'){\n\t\t\t\tlist[ind].row=i;\n\t\t\t\tlist[ind].col=j;\n\t\t\t\tind++;\n\t\t\t}\n\t\t}\n\tlong long x=list[0].row,y=list[0].col;\n\tfor(i=0;i<m;i++){\n\t\tint flag=0;\n\t\tfor(j=1;j<ind;j++){\n\t\t\tif(list[j].row!=x && list[j].col!=i)\n\t\t\t\tflag=1;\n\t\t}\n\t\tif(flag==0){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"%lld %lld\\n\",x+1,i+1);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\tint flag=0;\n\t\tfor(j=1;j<ind;j++){\n\t\t\tif(list[j].row!=i && list[j].col!=y)\n\t\t\t\tflag=1;\n\t\t}\n\t\tif(flag==0){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"%lld %lld\\n\",i+1,y+1);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"NO\\n\");\n\treturn 0;\n}\n\n\n\n\n\n\n\n\n\n\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\ntypedef struct{\n\tlong long row;\n\tlong long col;\n}order;\n\norder list[1000004];\n\nint main(){\n\tlong long n,m,i,j,row[1004],col[1004],ind=0;\n\tchar arr[1004][1004];\n\tscanf(\"%lld %lld\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t\tfor(j=0;j<m;j++){\n\t\t\tscanf(\" %c\",&arr[i][j]);\n\t\t\tif(arr[i][j]=='*'){\n\t\t\t\tlist[ind].row=i;\n\t\t\t\tlist[ind].col=j;\n\t\t\t\tind++;\n\t\t\t}\n\t\t}\n\tlong long x=list[0].row,y=list[0].col;\n\tif(ind>m+n)\n\t\tprintf(\"NO\\n\");\n\telse{\n\t\tfor(i=0;i<m;i++){\n\t\t\tint flag=0;\n\t\t\tfor(j=1;j<ind;j++){\n\t\t\t\tif(list[j].row!=x && list[j].col!=i)\n\t\t\t\t\tflag=1;\n\t\t\t}\n\t\t\tif(flag==0){\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tprintf(\"%lld %lld\\n\",x+1,i+1);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<n;i++){\n\t\t\tint flag=0;\n\t\t\tfor(j=1;j<ind;j++){\n\t\t\t\tif(list[j].row!=i && list[j].col!=y)\n\t\t\t\t\tflag=1;\n\t\t\t}\n\t\t\tif(flag==0){\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tprintf(\"%lld %lld\\n\",i+1,y+1);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n\n\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.9986807387862797, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c1a1222e56c0482d5eb780f549304b6a", "bug_code_uid": "d807cd35359dd1fee3166a606a0c1acb", "src_uid": "807c5ec37b0ea83ef40550698f1ff498", "apr_id": "b31324bab66c84ce14d403eadb390aa3", "difficulty": 900, "tags": ["dp", "implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\r\n#include <stdio.h>\r\n\r\n#define MAX_N (100000)\r\n\r\nint stack[MAX_N];\r\nint sp;\r\n\r\nint N;\r\nint cream[MAX_N];\r\n\r\nint poured[MAX_N];\r\n\r\nvoid Input_Data(void)\r\n{\r\n\tint i;\r\n\tscanf(\"%d\", &N);\r\n\tfor (i=0;i<N;i++)\r\n\t{\r\n\t\tscanf(\"%d\", &cream[i]);\r\n\t}\r\n}\r\n\r\nvoid Get_Solution(void)\r\n{\r\n\tint i;\r\n\tsp = 0;\r\n\tfor (i = 0; i < N; i++)\r\n\t{\r\n\t\tstack[++sp] = i;\r\n\t\twhile (sp > 0 && stack[sp] >= i + 1 - cream[i])\r\n\t\t{\r\n\t\t\tpoured[stack[sp]] = 1;\r\n\t\t\tsp--;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid Print_Output(void)\r\n{\r\n\tint i;\r\n\tfor (i=0;i<N;i++)\r\n\t{\r\n\t\tprintf(\"%d \", poured[i]);\r\n\t\tpoured[i] = 0;\r\n\t}\r\n\tprintf(\"\\n\");\r\n}\r\n\r\nint main(void)\r\n{\r\n\tint T,t;\r\n\tscanf(\"%d\", &T);\r\n\tfor (t=0;t<T;t++)\r\n\t{\r\n\t\tInput_Data();\r\n\t\tGet_Solution();\r\n\t\tPrint_Output();\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#define _CRT_SECURE_NO_WARNINGS\r\n#include <stdio.h>\r\n\r\n#define MAX_N (200000)\r\n\r\nint stack[MAX_N];\r\nint sp;\r\n\r\nint N;\r\nint cream[MAX_N];\r\n\r\nint poured[MAX_N];\r\n\r\nvoid Input_Data(void)\r\n{\r\n\tint i;\r\n\tscanf(\"%d\", &N);\r\n\tfor (i=0;i<N;i++)\r\n\t{\r\n\t\tscanf(\"%d\", &cream[i]);\r\n\t}\r\n}\r\n\r\nvoid Get_Solution(void)\r\n{\r\n\tint i;\r\n\tsp = 0;\r\n\tfor (i = 0; i < N; i++)\r\n\t{\r\n\t\tstack[++sp] = i;\r\n\t\twhile (sp > 0 && stack[sp] >= i + 1 - cream[i])\r\n\t\t{\r\n\t\t\tpoured[stack[sp]] = 1;\r\n\t\t\tsp--;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid Print_Output(void)\r\n{\r\n\tint i;\r\n\tfor (i=0;i<N;i++)\r\n\t{\r\n\t\tprintf(\"%d \", poured[i]);\r\n\t\tpoured[i] = 0;\r\n\t}\r\n\tprintf(\"\\n\");\r\n}\r\n\r\nint main(void)\r\n{\r\n\tint T,t;\r\n\tscanf(\"%d\", &T);\r\n\tfor (t=0;t<T;t++)\r\n\t{\r\n\t\tInput_Data();\r\n\t\tGet_Solution();\r\n\t\tPrint_Output();\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8792007266121707, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "48612f9ff787baa3fc433d59180b27c1", "bug_code_uid": "62150e24ca23d10c3d715535c110990e", "src_uid": "1d9d34dca11a787d6e2345494680e717", "apr_id": "b5f5a3e01ef09c8252dab58decec81b2", "difficulty": 800, "tags": ["dp", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        int  n,c1=0,c2=0;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(int j=0;j<n;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n            \r\n            if(a[j]%2==0)\r\n                c2 += 1;\r\n            else\r\n                c1 +=1;\r\n        }\r\n        if(c1==c2 || (c1%2==0 && c2%2==0))\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        int  n,c1=0,c2=0;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(int j=0;j<n;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n            \r\n            if(a[j]%2==0)\r\n                c2 += 1;\r\n            else\r\n                c1 +=1;\r\n        }\r\n        if(c1==0 &&c2%2==0)\r\n                printf(\"YES\\n\");\r\n        else if(c1 !=0 && c1%2==0)\r\n                printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9982788296041308, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "83659e4fb7ca0fa98a34f0ae31dc9add", "bug_code_uid": "84e0005180303484fd14e2b6f1c10890", "src_uid": "82176739a1dd4fe85ec059058a00fbb9", "apr_id": "307dfd3812d1d95799c603dbb80457d5", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,top=1,count,flag;\n    scanf(\"%d\",&n);\n    int st[n],step[n],ans[n];\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&st[i]);\n\n    for(i=1;i<=n;i++)\n        ans[i]=-1;\n\n    for(i=1;i>=n;i++)\n    {\n        flag=0;\n        count=1;\n        scanf(\"%d\",&step[i]);\n        if(ans[step[i]]==-1)\n        {\n            while(st[top]!=step[i])\n            {\n                ans[st[top++]]=0;\n                count++;\n            }\n            ans[st[top++]]=count;\n        }\n    }\n    for(i=1;i<=n;i++)\n        printf(\"%d \",ans[step[i]]);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,top=1,count,flag;\n    scanf(\"%d\",&n);\n    int st[n],step[n],ans[n];\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&st[i]);\n\n    for(i=1;i<=n;i++)\n        ans[i]=-1;\n\n    for(i=1;i<=n;i++)\n    {\n        flag=0;\n        count=1;\n        scanf(\"%d\",&step[i]);\n        if(ans[step[i]]==-1)\n        {\n            while(st[top]!=step[i])\n            {\n                ans[st[top++]]=0;\n                count++;\n            }\n            ans[st[top++]]=count;\n        }\n    }\n    for(i=1;i<=n;i++)\n        printf(\"%d \",ans[step[i]]);\n    return 0;\n}\n"}
{"similarity_score": 0.9105839416058394, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "2e86fa6359a0459479b08efc9ba60658", "bug_code_uid": "7ae9da9442c8daecf41b09cffde92bbd", "src_uid": "ce27e56433175ebf9d3bbcb97e71091e", "apr_id": "b99645356b9ca3ace7b7ef2729b8f9fc", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint compare (const void * a, const void * b)\n{\n    return ( *(int*)a - *(int*)b );\n}\n\nint main() {\n    int n,x,vet[100010],i,mult;\n    long long sum=0;\n    scanf(\"%d%d\",&n,&x);\n    for (i=0; i<n; i++) {\n        scanf(\"%d\",&vet[i]);\n    }\n    mult = x;\n    qsort(vet,n,sizeof(int),compare);\n    for (i=0; i<n; i++) {\n        sum += vet[i]*mult;\n        mult = mult - vet[i];\n        \n        if (mult < 1) {\n            mult = 1;\n        }\n    }\n    \n    printf(\"%lld\\n\",sum);\n    \n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint compare (const void * a, const void * b)\n{\n    return ( *(int*)a - *(int*)b );\n}\n\nint main() {\n    int n,x,vet[100010],i,mult;\n    long long sum=0;\n    scanf(\"%d%d\",&n,&x);\n    for (i=0; i<n; i++) {\n        scanf(\"%d\",&vet[i]);\n    }\n    mult = x;\n    qsort(vet,n,sizeof(int),compare);\n    for (i=0; i<n; i++) {\n        sum += (long long)((long long)vet[i]*(long long)mult);\n        mult--;\n        if (mult < 1) {\n            mult = 1;\n        }\n    }\n    \n    printf(\"%lld\\n\",sum);\n    \n    \n    return 0;\n}"}
{"similarity_score": 0.9533468559837728, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5908fad202fa1554a2efb71ed9ae7aec", "bug_code_uid": "f40f7d473d41054b194d3df86ae15289", "src_uid": "1cc628b4e03c8b8e0c5086dc4e0e3254", "apr_id": "09515b90a4c2f91d022f139dd6e0888d", "difficulty": 900, "tags": ["brute force", "greedy", "math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    freopen(\"in.txt\", \"r\", stdin);\r\n\r\n    int m;\r\n    scanf(\"%d\", &m);\r\n    while (m--)\r\n    {\r\n        long long int n , a;\r\n        scanf(\"%lld\", &n);\r\n        a = n;\r\n        if (a%2 || a==0)\r\n        {\r\n            printf(\"-1\\n\");\r\n            continue;\r\n        }\r\n        if (a%6)\r\n        {\r\n            printf(\"%lld \",a/6+1);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%lld \",a/6);\r\n        }\r\n        printf(\"%lld\\n\", a/4);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int m;\r\n    scanf(\"%d\", &m);\r\n    while (m--)\r\n    {\r\n        long long int n , a;\r\n        scanf(\"%lld\", &n);\r\n        a = n;\r\n        if (a%2 || a==0 || a==2)\r\n        {\r\n            printf(\"-1\\n\");\r\n            continue;\r\n        }\r\n        if (a%6)\r\n        {\r\n            printf(\"%lld \",a/6+1);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%lld \",a/6);\r\n        }\r\n        printf(\"%lld\\n\", a/4);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9629629629629629, "equal_cnt": 11, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 8, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "4cab79191ee28ab506f18669bc1188a3", "bug_code_uid": "5753f65dd65995db9ebb9645b3408946", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "2fea763958420a98726d74f51f6d63e8", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "# include <stdio.h>\n# include <stdlib.h>\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint num;\n\tscanf(\"%d\",&num);\n\tint zeroes=0,ones=0;\n\t//printf(\"%s\\n\",arr[0] );\n\tfor(int i=0;i<n;i++){\n\t\tif(num%2==0){\n\t\t\tzeroes++;\n\t\t}\n\t\telse{\n\t\t\tones++;\n\t\t}\n\t\tnum=num/10;\n\t}\n\tprintf(\"%d\\n\",abs(zeroes-ones));\n\treturn 0;\n}\n\n/*int main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tchar arr[n];\n\tscanf(\"%s\",&arr);\n\tprintf(\"%s\\n\",arr );\n\tprintf(\"%c\\n\",arr[2]);\n\tint zeroes=0,ones=0;\n\tfor(int i=0;i<n;i++){\n\t\tif(arr[i]==1){\n\t\t\tzeroes++;\n\t\t}\n\t\telse{\n\t\t\tones++;\n\t\t}\n\t}\n\tprintf(\"%d %d\\n\",ones,zeroes );\n\tprintf(\"%d\\n\",abs(zeroes-ones));\n\treturn 0;\n}*/", "fixed": "# include <stdio.h>\n# include <stdlib.h>\n\n/*int main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint num;\n\tscanf(\"%d\",&num);\n\tint zeroes=0,ones=0;\n\t//printf(\"%s\\n\",arr[0] );\n\tfor(int i=0;i<n;i++){\n\t\tif(num%2==0){\n\t\t\tzeroes++;\n\t\t}\n\t\telse{\n\t\t\tones++;\n\t\t}\n\t\tnum=num/10;\n\t\tprintf(\"%d\\n\",num);\n\t}\n\tprintf(\"%d\\n\",abs(zeroes-ones));\n\treturn 0;\n}*/\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tchar arr[n];\n\tscanf(\"%s\",&arr);\n\t//printf(\"%s\\n\",arr );\n\t//printf(\"%c\\n\",arr[2]);\n\tint zeroes=0,ones=0;\n\tfor(int i=0;i<n;i++){\n\t\tif(arr[i]=='1'){\n\t\t\tzeroes++;\n\t\t}\n\t\telse{\n\t\t\tones++;\n\t\t}\n\t}\n\t//printf(\"%d %d\\n\",ones,zeroes );\n\tprintf(\"%d\\n\",abs(zeroes-ones));\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9107142857142857, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9b0a70ba644de7fe3c61582199866e46", "bug_code_uid": "5aaa2b4405f4ba8e741b73c6d35ae3da", "src_uid": "e5a01ebfdca3af987e93b68c96268c16", "apr_id": "ab9eaf0a4c3dd246d5ca7587a73b056a", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n\r\n\r\nint main()\r\n{\r\n\tint t,n,m;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"%d%d\",&n,&m);\r\n\t\tif(n==1||m==1)\tprintf(\"1\\n\");\r\n\t\telse\tprintf(\"2\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n\r\n\r\nint main()\r\n{\r\n\tint t,n,m;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"%d%d\",&n,&m);\r\n\t\tif(n==1&&m==1)\tprintf(\"0\\n\");\r\n\t\telse if(n==1||m==1)\tprintf(\"1\\n\");\r\n\t\telse printf(\"2\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9946524064171123, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a5732ba16010b91c96a74a552b7f316e", "bug_code_uid": "7f34f22dbe01e7d4ab398a607e418b26", "src_uid": "67a70d58415dc381afaa74de1fee7215", "apr_id": "246ffdcdddd1669646bff1930a3359b1", "difficulty": 1200, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nchar Val[26];\n\nint main()\n{\n    int N, M, i, j;\n    char Str[10], x[2], y[2];\n    for(i = 0; i < 26; ++i) {\n        Val[i] = 'a' + i;\n    }\n    scanf(\"%d %d %s\", &N, &M, Str);\n    for(i = 0; i < M; ++i) {\n        scanf(\"%s %s\", x, y);\n        for(j = 0; j < 26; ++j) {\n            if(Val[j] == x[0]) {\n                Val[j] = y[0];\n            } else if(Val[j] == y[0]) {\n                Val[j] = x[0];\n            }\n        }\n    }\n    for(i = 0; i < N; ++i) {\n        putchar(Val[Str[i] - 'a']);\n    }\n    putchar('\\n');\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nchar Val[26];\n\nint main()\n{\n    int N, M, i, j;\n    char Str[200001], x[2], y[2];\n    for(i = 0; i < 26; ++i) {\n        Val[i] = 'a' + i;\n    }\n    scanf(\"%d %d %s\", &N, &M, Str);\n    for(i = 0; i < M; ++i) {\n        scanf(\"%s %s\", x, y);\n        for(j = 0; j < 26; ++j) {\n            if(Val[j] == x[0]) {\n                Val[j] = y[0];\n            } else if(Val[j] == y[0]) {\n                Val[j] = x[0];\n            }\n        }\n    }\n    for(i = 0; i < N; ++i) {\n        putchar(Val[Str[i] - 'a']);\n    }\n    putchar('\\n');\n    return 0;\n}"}
{"similarity_score": 0.9437458636664461, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d2ac55136b7866f02326ce574ca15612", "bug_code_uid": "719949389771d9d6bb1f1f555686b4f0", "src_uid": "a017393743ae70a4d8a9d9dc40410653", "apr_id": "f54d587683b9be4764efd630509bd2d8", "difficulty": 1200, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<string.h>\n#include<stdio.h>\nmain()\n{\n    int i=0,j,l,n,r,m=0,c=0;\n    char word[100][1000];\n    while(gets(word[i])){\n        l=strlen(word[i]);\n        if(l>m)\n            m=l;\n        i++;\n    }\n    n=i;\n    for(i=0;i<m+2;i++)\n        printf(\"*\");\n    printf(\"\\n\");\n    for(i=0;i<n;i++){\n        l=strlen(word[i]);\n        r=(l+m)/2;\n        if((l+m)%2==1){\n            r+=c;\n            c=(c+1)%2;\n        }\n        printf(\"*%*s\",r,word[i]);\n        for(;r<m;r++)\n            printf(\" \");\n        printf(\"*\\n\");\n    }\n    for(i=0;i<m+2;i++)\n        printf(\"*\");\n    printf(\"\\n\");\n    return 0;\n}\n\n                                                                                                        ", "fixed": "#include<string.h>\n#include<stdio.h>\nmain()\n{\n    int i=0,j,l,n,r,m=0,c=0;\n    char word[1000][1000];\n    while(gets(word[i])){\n        l=strlen(word[i]);\n        if(l>m)\n            m=l;\n        i++;\n    }\n    n=i;\n    for(i=0;i<m+2;i++)\n        printf(\"*\");\n    printf(\"\\n\");\n    for(i=0;i<n;i++){\n        l=strlen(word[i]);\n        r=(l+m)/2;\n        if((l+m)%2==1){\n            r+=c;\n            c=(c+1)%2;\n        }\n        printf(\"*%*s\",r,word[i]);\n        for(;r<m;r++)\n            printf(\" \");\n        printf(\"*\\n\");\n    }\n    for(i=0;i<m+2;i++)\n        printf(\"*\");\n    printf(\"\\n\");\n    return 0;\n}\n\n                                                                                                                                                                                            "}
{"similarity_score": 0.5348837209302325, "equal_cnt": 20, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 11, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "e3bfd7022503bda2a42e0ee717f4cabc", "bug_code_uid": "96991565ec0eaa934615f09f805012f7", "src_uid": "00acb3b54975820989a788b9389c7c0b", "apr_id": "5d7a473bcc9aee2406911c0cb6f23b90", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n,L,a;\n\twhile(scanf(\"%d%d%d\",&n,&L,&a)!=EOF)\n\t{\n\tint i;\n\tint t[100],l[100];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d%d\",&t[i],&l[i]);\n\tint j,h;\n\tif(n==0)\n\t{\n\t\th=L/a;\n\t\tprintf(\"%d\\n\",h);\n\t}\n\telse{\n\t\th=t[0]/a;\n\tfor(j=0,h=0;j<n-1;j++)\n\t{\n\t\th=h+(t[j+1]-t[j]-l[j])/a;\n\t\th=h+(L-t[n-1]-l[n-1])/a;\n\t}\n\tprintf(\"%d\",h);}\n}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nmain()\n{\n\tint n,L,a,*t,*l,i;\n\twhile(scanf(\"%d%d%d\",&n,&L,&a)!=EOF)\n\t{\n\t\tt=(int *)calloc(n,4);\n\t\tl=(int *)calloc(n,4);\n\t\tint h;\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d%d\",t+i,l+i);\n\t\tif(n==0)\n\t\t{\n\t\t\th=0;\n\t\t\th=L/a;\n\t\t\tprintf(\"%d\\n\",h);\n\t\t}\n\t\telse\n\t\t{\n\t\t\th=0;\n\t\t\th=*t/a;\n\t\t\tfor(i=0;i<n-1;i++)\n\t\t\t\th=h+(t[i+1]-t[i]-l[i])/a;\n\t\t\th=h+(L-t[n-1]-l[n-1])/a;\n\t\t\tprintf(\"%d\\n\",h);\n\t\t}\t\t\n\t}\n\treturn 0;\n } "}
{"similarity_score": 0.9379310344827586, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "5bd83554899cf964ec891dbee367d963", "bug_code_uid": "b12fcdf32e170c21a08b627892b2c740", "src_uid": "2535fc09ce74b829c26e1ebfc1ee17c6", "apr_id": "0b9a421d2d42e1e1d1e08cf07da245e5", "difficulty": 1500, "tags": ["data structures", "greedy", "trees"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n/*\n  Problem 821C\n  C. Okabe and Boxes\n*/\n\nstatic int *stack;\nstatic int sp = 0;\n\nvoid print_stack(void)\n{\n  int i;\n  \n  puts(\"*********\");\n  for(i = 0; i < sp; i ++)\n    printf(\"%d\\n\", stack[i]);\n}\n\nint compare(const void *x, const void *y)\n{\n  int a = *(int *)x, b = *(int *)y;\n\n  // Order is inverted becouse the it\n  // goes from higher to lower\n  if(a < b)\n    return 1;\n  else if(a > b)\n    return -1;\n  else\n    return 0;\n}\n\nint main()\n{\n  char buffer[64];\n  int i;\n  int n;\n  int a;\n  int swaps = 0, to_pop = 1;\n\n  scanf(\"%d\\n\", &n);\n  stack = malloc(n * sizeof(int));\n  \n  for(i = 0; i < (2 * n); i ++)\n    {\n      fgets(buffer, sizeof(buffer), stdin);\n      if( buffer[0] == 'a' )\n\t{\n\t  a = atoi(&buffer[4]);\n\t  stack[sp ++] = a;\n\t}\n      else\n\t{\n\t  if(stack[sp - 1] != to_pop)\n\t    {\n\t      qsort(stack, sp, sizeof(int), compare);\n\t      swaps ++;\n\t    }\n\n\t  sp --;\n\t  to_pop ++;\n\t}\n    }\n\n  printf(\"%d\\n\", swaps);\n  free(stack);\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n/*\n  Problem 821C\n  C. Okabe and Boxes\n*/\n\nstatic int *stack;\nstatic int sp = 0;\n\nvoid print_stack(void)\n{\n  int i;\n  \n  puts(\"*********\");\n  for(i = 0; i < sp; i ++)\n    printf(\"%d\\n\", stack[i]);\n}\n\nint compare(const void *x, const void *y)\n{\n  int a = *(int *)x, b = *(int *)y;\n\n  // Order is inverted becouse the it\n  // goes from higher to lower\n  if(a < b)\n    return 1;\n  else if(a > b)\n    return -1;\n  else\n    return 0;\n}\n\nint main()\n{\n  char buffer[64];\n  int i;\n  int n;\n  int a;\n  int swaps = 0, to_pop = 1;\n\n  scanf(\"%d\\n\", &n);\n  stack = malloc(n * sizeof(int));\n  \n  for(i = 0; i < (2 * n); i ++)\n    {\n      fgets(buffer, sizeof(buffer), stdin);\n      if( buffer[0] == 'a' )\n\t{\n\t  a = atoi(&buffer[4]);\n\t  stack[sp ++] = a;\n\t}\n      else\n\t{\n\t  if(sp != 0)\n\t    {\n\t      if(stack[sp - 1] != to_pop)\n\t\t{\n\t\t  sp = 0;\n\t\t  swaps ++;\n\t\t}\n\t      else\n\t\tsp --;\n\t    }\n\n\t  to_pop ++;\n\t}\n    }\n\n  printf(\"%d\\n\", swaps);\n  free(stack);\n  return 0;\n}\n"}
{"similarity_score": 0.998719590268886, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "35a4bbb5f6cf2bcd1b44ac4cb9802495", "bug_code_uid": "e75d29a22e78dea1dc1a9fc003db70ba", "src_uid": "0054f9e2549900487d78fae9aa4c2d65", "apr_id": "a78549a8c4cba87796764f58c026990c", "difficulty": 1500, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//\n//  main.c\n//  160331 CF-D\n//\n//  Created by tjua on 16/3/31.\n//  Copyright \u00a9 2016\u5e74 tjua. All rights reserved.\n//\n\n#include <stdio.h>\n\nint getward(int dx,int dy);\nint getward(int dx,int dy)\n{\n    if (dx>0) return 1;\n    if (dy>0) return 2;\n    if (dx<0) return 3;\n    if (dy<0) return 4;\n    return 0;\n}\nint check(int w,int ww);\nint check(int w,int ww)\n{\n    return (w%4+1==ww);\n}\n\n\nint main(int argc, const char * argv[]) {\n    int n;\n    scanf(\"%d\",&n);\n    int i;\n    int x,y,xx,yy;\n    int ward=3,ww;\n    int ans;\n    scanf(\"%d%d\",&x,&y);\n    for (i=0;i<n;i++)\n    {\n        xx=x;yy=y;\n        scanf(\"%d%d\",&x,&y);\n        ww=ward;\n        ward=getward(x-xx,y-yy);\n        ans+=check(ww,ward);\n    }\n    printf(\"%d\\n\",ans);\n//    printf(\"Hello, World!\\n\");\n    return 0;\n}\n", "fixed": "//\n//  main.c\n//  160331 CF-D\n//\n//  Created by tjua on 16/3/31.\n//  Copyright \u00a9 2016\u5e74 tjua. All rights reserved.\n//\n\n#include <stdio.h>\n\nint getward(int dx,int dy);\nint getward(int dx,int dy)\n{\n    if (dx>0) return 1;\n    if (dy>0) return 2;\n    if (dx<0) return 3;\n    if (dy<0) return 4;\n    return 0;\n}\nint check(int w,int ww);\nint check(int w,int ww)\n{\n    return (w%4+1==ww);\n}\n\n\nint main(int argc, const char * argv[]) {\n    int n;\n    scanf(\"%d\",&n);\n    int i;\n    int x,y,xx,yy;\n    int ward=3,ww;\n    int ans=0;\n    scanf(\"%d%d\",&x,&y);\n    for (i=0;i<n;i++)\n    {\n        xx=x;yy=y;\n        scanf(\"%d%d\",&x,&y);\n        ww=ward;\n        ward=getward(x-xx,y-yy);\n        ans+=check(ww,ward);\n    }\n    printf(\"%d\\n\",ans);\n//    printf(\"Hello, World!\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9176470588235294, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "0ab4fe3f312d3762d794613dc2b0aaf3", "bug_code_uid": "ad1aeb70c25517ee84f7478f8f9de333", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "aa235f4342635b38e1a750f9fa1f1b11", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include <stdlib.h>\n#include <stdio.h>\n\nint main(void) {\n    int y, k, n, i, x;\n    scanf(\"%d%d%d\", &y, &k, &n);\n    for (i = 0; i < n; i++){\n        x = i * k - y;\n        if (x <= 0)\n            continue;\n        printf(\"%d \", x);\n    }\n    printf(\"\\n\");\n    return 0;\n}", "fixed": "\n#include <stdlib.h>\n#include <stdio.h>\n\nint main(void) {\n    int y, k, n, i, x, j = 0;\n    scanf(\"%d%d%d\", &y, &k, &n);\n    for (i = 0; i * k <= n; i++){\n        x = i * k - y;\n        if (x <= 0)\n            continue;\n        j++;\n        printf(\"%d \", x);\n    }\n    printf(\"%s\\n\", (j == 0) ? \"-1\" : \"\");\n    return 0;\n}"}
{"similarity_score": 0.988929889298893, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0c4315656d682ff6fbd7a7f6188f9fd5", "bug_code_uid": "ad81452c388a590384e99cfe9139fbd5", "src_uid": "80d3da5aba371f4d572ea928025c5bbd", "apr_id": "06ea427993e2e37003f3692eb425905e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nmain()\n{\n    int n,m;\n    int res =1;\n    //char T[100][100];\n    int i,j;\n    scanf(\"%d %d\",&n,&m);\n    getchar();\n    char ch[n][m+1];\n    int P[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%s\",&ch[i]);\n        for(j=1; j<m; j++)\n        {\n            if(ch[i][0] != ch[i][j])\n            {\n                res = 0;\n            }\n        }\n    }\n    if(res == 0)\n    {\n        printf(\"NO\\n\");\n        return;\n    }\n    else\n    {\n        for(i=0; i<n-1 && strcmp(ch[i],ch[i+1]) != 0; i++)\n        {\n            /**if(strcmp(ch[i],ch[i+1]) == 0 )\n            {\n                printf(\"NO\\n\");\n                return;\n            }*/\n        }\n        if(i == n-1)\n        printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    //printf(\"YES\\n\");\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nmain()\n{\n    int n,m;\n    int res =1;\n    //char T[100][100];\n    int i,j;\n    scanf(\"%d %d\",&n,&m);\n    getchar();\n    char ch[n][m+1];\n    int P[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%s\",&ch[i]);\n        for(j=1; j<m; j++)\n        {\n            if(ch[i][0] != ch[i][j])\n            {\n                res = 0;\n            }\n        }\n    }\n    if(res == 0)\n    {\n        printf(\"NO\\n\");\n    }\n    else\n    {\n        for(i=0; i<n-1 && strcmp(ch[i],ch[i+1]) != 0; i++)\n        {\n            /**if(strcmp(ch[i],ch[i+1]) == 0 )\n            {\n                printf(\"NO\\n\");\n                return;\n            }*/\n        }\n        if(i == n-1)\n        printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    //printf(\"YES\\n\");\n}\n\n"}
{"similarity_score": 0.46706586826347307, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "fb42e35ce0e6a422b991a19a2e4fb496", "bug_code_uid": "484be7c89b9e4dba86df0c2c9f85fbea", "src_uid": "cda949a8fb1f158f3c06109a2d33f084", "apr_id": "562d5244b8b6f4d4ef71cef1f1f9a7f9", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,p[4],i,n=0;\n    for(i=0;i<4;i++)\n        scanf(\"%d %d %d %d\",&p[i]);\n    for(i=0;i<4;i++)\n        if(p[i]>c)\n            c=p[i];\n    for(i=0;i<4;i++)\n        if(p[i]<c)\n            printf(\"%d\",c-p[i]);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int a[4],s=0,n;\n    for(n=0;n<4;n++){\n        scanf(\"%d\",&a[n]);\n    if(a[n]>s)\n        s=a[n];\n    }\n\n    for(n=0;n<4;n++){\n        if(a[n]!=s)\n            printf(\"%d \",s-a[n]);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9835706462212487, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "454c38eb762a1563e3c9a350d65c3ae8", "bug_code_uid": "e8eb91f4a29da8047d2dc7eaabf3f891", "src_uid": "915b4776a6b1fa15886247eb1ad40b60", "apr_id": "2a82084da21e33fec4d4b75e367395b1", "difficulty": 1300, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tchar s[500001];\n    fgets(s, 5000000, stdin);\n\tint leftBracket = -1;\n\tint rightBracket = -1;\n\tint leftColon = -1;\n\tint rightColon = -1;\n\tfor(int i = 0; i < strlen(s); ++i) {\n\t\tif (leftBracket == -1 && s[i] == '[')\n\t\t\tleftBracket = i;\n\t\telse if(s[i] == ']')\n\t\t\trightBracket = i;\n\t\telse if(leftBracket != -1 && s[i] == ':') {\n\t\t\tif(leftColon == -1)\n\t\t\t\tleftColon = i;\n\t\t\trightColon = i;\n\t\t}\n\t}\n\t\n\tif(rightColon > rightBracket) {\n\t\tfor(int i = rightBracket -1; i >= leftColon; --i)\n\t\t\tif(s[i] == ':') {\n\t\t\t\trightColon = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\t\n\tif(leftBracket == -1 || rightBracket == -1|| leftBracket > rightBracket || leftColon == -1 || leftColon == rightColon) {\n\t\tprintf(\"%d\", -1);\n\t}\n\telse {\n\t\tint count = 0;\n\t\tfor(int i = leftColon + 1; i < rightColon; ++i) {\n\t\t\tif(s[i] == '|')\n\t\t\t\tcount++;\n\t\t}\n\t\tprintf(\"%d\", count + 4);\n\t}\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tchar s[500001];\n    fgets(s, 5000000, stdin);\n\tint leftBracket = -1;\n\tint rightBracket = -1;\n\tint leftColon = -1;\n\tint rightColon = -1;\n\tfor(int i = 0; i < strlen(s); ++i) {\n\t\tif (leftBracket == -1 && s[i] == '[')\n\t\t\tleftBracket = i;\n\t\telse if(s[i] == ']')\n\t\t\trightBracket = i;\n\t\telse if(leftBracket != -1 && s[i] == ':') {\n\t\t\tif(leftColon == -1)\n\t\t\t\tleftColon = i;\n\t\t\trightColon = i;\n\t\t}\n\t}\n\t\n\tif(rightColon > rightBracket) {\n\t\tfor(int i = rightBracket -1; i > leftColon; --i)\n\t\t\tif(s[i] == ':') {\n\t\t\t\trightColon = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\t\n\tif(leftBracket == -1 || rightBracket == -1|| leftBracket > rightBracket || leftColon == -1 || leftColon == rightColon || rightColon > rightBracket) {\n\t\tprintf(\"%d\", -1);\n\t}\n\telse {\n\t\tint count = 0;\n\t\tfor(int i = leftColon + 1; i < rightColon; ++i) {\n\t\t\tif(s[i] == '|')\n\t\t\t\tcount++;\n\t\t}\n\t\tprintf(\"%d\", count + 4);\n\t}\n    return 0;\n}\n"}
{"similarity_score": 0.9590909090909091, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0329cd6a2c06a2f373e98526864b5460", "bug_code_uid": "a87c3bb11dae07589fcd804f825840d5", "src_uid": "168dbc4994529f5407a440b0c71086da", "apr_id": "16585cbfc5c4bf6411fd6d1a51d10bee", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n=0;\n    scanf(\"%d\",&n);\n    long long a[n],b[n],x=0;\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%llu\",&a[i]);\n    }\n    for(int i=0;i<n;i++)\n    {\n     if (a[i]%2==0)\n    b[i]=a[i]*4;\n    if(a[i]%2!=0)\n        b[i]=a[i]*2;\n    ++b[i];\n    if(a[i]==0)\n        b[i]=0;\n    }\n    for(int i=0;i<n;i++)\n    {\n        printf(\"%llu\\n\",b[i]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n=0;\n    scanf(\"%d\",&n);\n    long long a[n],b[n],x=0;\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%llu\",&a[i]);\n    }\n    for(int i=0;i<n;i++)\n    {\n     if (a[i]%2==0)\n    b[i]=a[i]*4;\n    if(a[i]%2!=0)\n        b[i]=a[i]*2;\n    if(a[i]%4==3)\n       b[i]=a[i];\n    ++b[i];\n    if(a[i]==0)\n        b[i]=0;\n    }\n    for(int i=0;i<n;i++)\n    {\n        printf(\"%llu\\n\",b[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5470459518599562, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "15efd5f2bdae312d21bdd9d287436b83", "bug_code_uid": "977255dbce59e7e492db71bf22ba94be", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "e8a87c7f0d1acabdad577d33b02be8bd", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <iostream>\n\nusing namespace std;\n\n\nint main()\n{\n   int n,count=0;\n   cin>>n;\n   int x,y,z;\n   for(int i=0;i<n;i++)\n   {\n\n       cin>>x>>y>>z;\n       count+=(x+y+z>=2);\n\n   }\n   cout<<count<<endl ;\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int n,i,count =0;\n   int x,y,z;\n   scanf(\"%d\",&n);\n   for(i=0;i<n;i++)\n   {\n       scanf(\"%d%d%d\",&x,&y,&z);\n       count+=(x+y+z>=2);\n   }\n   printf(\"%d\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.8381079280479681, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "fc8c8abde662ec03dbf311d32b6d0905", "bug_code_uid": "4bba2958cf2ad0796466c83d21d793c0", "src_uid": "51ea912b40b07c1ba097292ffd0cec18", "apr_id": "76f6535ac88a5ef31659f3b5aed43a1b", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    \n    scanf(\"%d\",&t);\n    \n    while(t--)\n    {\n        int h[256]={0},a1[200000]={0},a[200000]={0},i,j,n,m;\n        char ar[200000];\n        \n        scanf(\"%d%d\",&n,&m);\n        \n        scanf(\"%s\",ar);\n        \n        for(i=0;i<m;i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n       \n        for(i=0;i<m;i++)\n        {\n            for(j=0;j<a[i];j++)\n            {\n                a1[j]++;\n            }\n        }\n        for(i=0;i<n;i++)\n        {\n            a1[i]++;\n        }\n        \n        for(i=0;i<n;i++)\n        {\n            h[ar[i]]+=a1[i];\n        }\n        \n        for(i=97;i<=122;i++)\n        {\n            printf(\"%d \",h[i]);\n        }\n        printf(\"\\n\");\n    }\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    \n    scanf(\"%d\",&t);\n    \n    while(t--)\n    {\n        int h[256]={0},a1[200000]={0},a[200000]={0},i,j,n,m;\n        char ar[200000];\n        \n        scanf(\"%d%d\",&n,&m);\n        \n        scanf(\"%s\",ar);\n        \n        for(i=0;i<m;i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n       \n        for(i=0;i<m;i++)\n        {\n            a1[a[i]]--;\n        }\n        a1[0]=m+1;\n        \n        for(i=1;i<n;i++)\n        {\n            a1[i]=a1[i-1]+a1[i];\n        }\n        \n        for(i=0;i<n;i++)\n        {\n            h[ar[i]]+=a1[i];\n        }\n        \n        for(i=97;i<=122;i++)\n        {\n            printf(\"%d \",h[i]);\n        }\n        printf(\"\\n\");\n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.9963154016212233, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "abf67dccad1d9d266979eb3b755e83bd", "bug_code_uid": "d2c5f857537fde440315b46184e2b2c3", "src_uid": "b0b4cadc46f9fd056bf7dc36d1cf51f2", "apr_id": "1ea48ff52244dcc751d3b2639bce4709", "difficulty": 1200, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdarg.h>\n\n\nint primo(int a,int b);\nint main(){\n    int a[10000];\n    int pos[10000];\n    int i,n,p=0,k=0,j;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&a[0]);\n    for(i=1;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        if(primo(a[i],a[i-1])!=1){\n            pos[p]=i; p++;\n        }\n    }\n    if(n==1){\n        printf(\"0\\n\"),\n        printf(\"%d\",a[0]);\n        }else{\n      printf(\"%d\\n\",p);\n    for(j=0;j<n;j++){\n        if(j==pos[k]){\n            printf(\"%d \",1); k++;\n        }\n            printf(\"%d \",a[j]);\n       }\n    }\n}\nint primo(int a,int b){//recursividad\n    if (a==0){\n        return b;\n    }\n    return primo( b%a, a );\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdarg.h>\n\n\nint primo(int a,int b);\nint main(){\n    int a[10000];\n    int pos[10000]={-1};\n    int i,n,p=0,k=0,j;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&a[0]);\n    for(i=1;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        if(primo(a[i],a[i-1])!=1){\n            pos[p]=i; p++;\n        }\n    }\n    if(n==1){\n        printf(\"0\\n\"),\n        printf(\"%d\",a[0]);\n        }else{\n      printf(\"%d\\n\",p);\n    for(j=0;j<n;j++){\n        if(j==pos[k]){\n            printf(\"%d \",1); k++;\n        }\n            printf(\"%d \",a[j]);\n       }\n    }\n}\nint primo(int a,int b){//recursividad\n    if (a==0){\n        return b;\n    }\n    return primo( b%a, a );\n}\n"}
{"similarity_score": 0.34944237918215615, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "de3f72096e2c282a207d618b9a3614aa", "bug_code_uid": "0bb7c0f7414367d8b7052b29b6a52f75", "src_uid": "6ea491419f3ea387cf2aded8a8db914d", "apr_id": "a943fac7ecd5ad9e197668357c0cc522", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int tt;\r\n    \r\n    scanf(\"%d\",&tt);\r\n    \r\n    while(tt--)\r\n    {\r\n        int n,a,b;\r\n        \r\n        scanf(\"%d %d %d\",&n,&a,&b);\r\n        \r\n        int i;\r\n        int min=n,max=0;\r\n        \r\n        if(a-b==1 || b-a==1) goto c_else;\r\n        \r\n        else if((a>n/2+1 || b<=n/2)  ) printf(\"-1\");\r\n        \r\n        else{\r\n        \r\n        c_else:\r\n        \r\n        for(i=n/2+1;i<=n;i++)\r\n        {\r\n            if(i==a || i==b) continue;\r\n            \r\n            printf(\"%d \",i);\r\n        }\r\n        \r\n        printf(\"%d \",a);\r\n        \r\n        for(i=1;i<=n/2;i++)\r\n        {\r\n            if(i==a || i==b) continue;\r\n            \r\n            printf(\"%d \",i);\r\n        }\r\n        \r\n        printf(\"%d \",b);\r\n        \r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n \r\n    return 0;\r\n}\r\n ", "fixed": "#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int tt;\r\n    \r\n    scanf(\"%d\",&tt);\r\n    \r\n    while(tt--)\r\n    {\r\n        int n,a,b;\r\n        \r\n        scanf(\"%d %d %d\",&n,&a,&b);\r\n        \r\n        int i;\r\n        int min=n,max=0;\r\n        \r\n        if((a<=n/2 && b>=(n/2)+1) || a==(n/2)+1 && b==n/2  )\r\n        {\r\n        \r\n        for(i=n/2+1;i<=n;i++)\r\n        {\r\n            if(i==a || i==b) continue;\r\n            \r\n            printf(\"%d \",i);\r\n        }\r\n        \r\n        printf(\"%d \",a);\r\n        \r\n        for(i=1;i<=n/2;i++)\r\n        {\r\n            if(i==a || i==b) continue;\r\n            \r\n            printf(\"%d \",i);\r\n        }\r\n        \r\n        printf(\"%d \",b);\r\n        \r\n        \r\n        printf(\"\\n\");\r\n    }\r\n \r\n    else printf(\"-1\\n\");\r\n    }\r\n    return 0;\r\n}\r\n "}
{"similarity_score": 0.8730964467005076, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "203e4d4e0d2ffec5f05534c54df0b6a2", "bug_code_uid": "b761f83b4252832ba32a90a2a4ca3b75", "src_uid": "84c88932e107e1d1f80b44aec88134e4", "apr_id": "1be5d407c123b0bf7ea391b9dda5bfb0", "difficulty": 800, "tags": ["bitmasks", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n\tint a[1008],n;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=0;i<n;i++){\r\n\t\tint m,k,b[1008]={0},c[1008]={0};\r\n\t\tscanf(\"%d %d\",&m,&k);\r\n\t\tint k1=k-1;\r\n\t\tfor(int j=0;j<m;j++){\r\n\t\t\tscanf(\"%d\",&b[j]);\r\n\t\t\tfor(int o=0;o<k1;o++){\r\n\t\t\t\tc[o]+=b[j]/pow(2,k1);\r\n\t\t\t\tb[j]%=int(pow(2,k1--));\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int y=0;y<k;y++){\r\n\t\t\tif(c[y]>m/2){\r\n\t\t\t\ta[i]+=pow(2,k-y-1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\",a[1]);\r\n\tfor(int r=0;r<n;r++){\r\n\t\tprintf(\"\\n%d\",a[r]);\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n\tint a[1008],n;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=0;i<n;i++){\r\n\t\tint m,k,b[1008]={0},c[1008]={0};\r\n\t\tscanf(\"%d %d\",&m,&k);\r\n\t\t\r\n\t\tfor(int j=0;j<m;j++){\r\n\t\t\tscanf(\"%d\",&b[j]);\r\n\t\t\tint k1=k-1;\r\n\t\t\tfor(int o=0;o<k;o++){\r\n\t\t\t\tc[o]+=b[j]/pow(2,k1);\r\n\t\t\t\tint t=pow(2,k1--);\r\n\t\t\t\tb[j]%=t;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int y=0;y<k;y++){\r\n\t\t\tif(c[y]>m/2){\r\n\t\t\t\ta[i]+=pow(2,k-y-1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\",a[0]);\r\n\tfor(int r=1;r<n;r++){\r\n\t\tprintf(\"\\n%d\",a[r]);\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.7755905511811023, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "7af4bceb97504e66f4050bb12ac8156d", "bug_code_uid": "56d4938391f24eca283b0cf8ae2b1c32", "src_uid": "a850dd88a67a6295823e70e2c5c857c9", "apr_id": "fa6cf1b94d3c61360d1bf9c1cff69e6f", "difficulty": 1500, "tags": ["dp", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main(){\n\tint n,i,j,a=0,max=0;\n\tscanf(\"%d\",&n);\n\tint x[n],h[n];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d %d\",&x[i],&h[i]);\n\tfor(i=0;i<n;i++){\n\t\tif(i==0){\n\t\t\tif(x[i]-h[i]<x[i+1])\n\t\t\t\tmax++;\t\t\t\n\t\t\tif(x[i]+h[i]<x[i+1]){\n\t\t\t\ta=x[i]+h[i];\n\t\t\t\tmax++;\t\t\n\t\t\t}\n\t\t}\n\t\tif(i==n-1){\n\t\t\tif(x[i]-h[i]>a)\n\t\t\t\tmax++;\t\n\t\t\telse{\n\t\t\t\ta=x[i]+h[i];\n\t\t\t\tmax++;\n\t\t\t}\n\t\t\n\t\t}\n\t\tif(i!=n-1){\n\t\t\tif(x[i]-h[i]>a)\n\t\t\t\tmax++;\t\n\t\t\tif(x[i]+h[i]<x[i+1]){\n\t\t\t\ta=x[i]+h[i];\n\t\t\t\tmax++;\t\t\t\n\t\t\t}\t\n\t\t}\n\t\tif(!(a>x[i]))\n\t\t\ta=x[i];\n\t}\n\n\tprintf(\"\\n%d\",max);\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint n,i,j,a=0,max=0;\n\tscanf(\"%d\",&n);\n\tint x[n],h[n];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d %d\",&x[i],&h[i]);\n\tfor(i=0;i<n;i++){\n\t\tif(i==0){\n\t\t\tif(x[i]-h[i]<x[i+1])\n\t\t\t\tmax++;\n\t\t}\n\t\telse if(i==n-1){\n\t\t\tif(x[i]-h[i]>a)\n\t\t\t\tmax++;\t\n\t\t\telse{\n\t\t\t\ta=x[i]+h[i];\n\t\t\t\tmax++;\n\t\t\t}\n\t\t\n\t\t}\n\t\telse{\n\t\t\tif(x[i]-h[i]>a)\n\t\t\t\tmax++;\t\n\t\t\tif(x[i]+h[i]<x[i+1]&&(!(x[i]-h[i]>a))){\n\t\t\t\ta=x[i]+h[i];\n\t\t\t\tmax++;\t\t\t\n\t\t\t}\t\n\t\t}\n\t\tif(!(a>x[i]))\n\t\t\ta=x[i];\n\t}\n\n\tprintf(\"\\n%d\",max);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9847826086956522, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "4b4029dc270b28ef22e9e83f5121827b", "bug_code_uid": "80f7e2e25baba5d3537556f8b38609d8", "src_uid": "cf595689b5cbda4f1d629524ad275650", "apr_id": "14b9ead0180ab0fea43ab6910139996d", "difficulty": 1200, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAX 101\nint count_vowels(char string[])\n{\n    int count = 0;\n    int i = 0;\n    while (string[i] != '\\0') {\n        if (string[i] == 'a' || string[i] == 'e' || string[i] == 'i' ||\n            string[i] == 'o' || string[i] == 'u' || string[i] == 'y') {\n            ++count;\n        }\n        ++i;\n    }\n    return count;\n}\n\nint check(int n, int p[MAX], char strings[MAX][MAX])\n{\n    int i;\n    for (i = 0; i < n; ++i) {\n        if (count_vowels(strings[i]) != p[i]) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\nint main()\n{\n    int n;\n    int p[MAX];\n    char strings[MAX][MAX];\n    int i;\n    scanf(\"%d \", &n);\n    for (i = 0; i < n; ++i) {\n        scanf(\"%d \", &p[i]);\n    }\n    for (i = 0; i < n; ++i) {\n        fgets(strings[i], sizeof strings[i], stdin);\n    }\n    if (check(n, p, strings)) {\n        printf(\"YES\\n\");\n    }\n    else {\n        printf(\"NO\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define MAX 100\nint count_vowels(char string[])\n{\n    int count = 0;\n    int i = 0;\n    while (string[i] != '\\0') {\n        if (string[i] == 'a' || string[i] == 'e' || string[i] == 'i' ||\n            string[i] == 'o' || string[i] == 'u' || string[i] == 'y') {\n            ++count;\n        }\n        ++i;\n    }\n    return count;\n}\n\nint check(int n, int p[MAX], char strings[MAX][MAX+2])\n{\n    int i;\n    for (i = 0; i < n; ++i) {\n        if (count_vowels(strings[i]) != p[i]) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\nint main()\n{\n    int n;\n    int p[MAX];\n    char strings[MAX][MAX+2];\n    int i;\n    scanf(\"%d \", &n);\n    for (i = 0; i < n; ++i) {\n        scanf(\"%d \", &p[i]);\n    }\n    for (i = 0; i < n; ++i) {\n        fgets(strings[i], MAX+2, stdin);\n    }\n    if (check(n, p, strings)) {\n        printf(\"YES\\n\");\n    }\n    else {\n        printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.22840409956076135, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "349c91aebfd3c167745f626cb7be464f", "bug_code_uid": "e47488b28849b1b3a0281ba1cf0da8e5", "src_uid": "8f0172f742b058f5905c0a02d79000dc", "apr_id": "f96f4de3793309f91087b1d65081e3ac", "difficulty": 1200, "tags": ["two pointers", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,i,t[1002],a=0,sum=0,asum=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&t[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n       sum+=t[i];\n    }\n    asum=sum/2;\n    i=0;\n    while(asum>0)\n    {\n       asum=asum-t[i];\n        a++;\n        i++;\n    }\n    printf(\"%d %d\",a,n-a);\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\n\n#define N 100000\n\nint main() {\n\tstatic int tt[N];\n\tint n, i, j, t1, t2;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &tt[i]);\n\tt1 = t2 = 0;\n\tfor (i = 0, j = n - 1; i <= j; )\n\t\tif (t1 <= t2)\n\t\t\tt1 += tt[i++];\n\t\telse\n\t\t\tt2 += tt[j--];\n\tprintf(\"%d %d\\n\", i, n - 1 - j);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8134831460674158, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "b60cd60e32dbffcfdaa58694064dcffd", "bug_code_uid": "29702fc2e017e4e4bc142b76ceeb5e37", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "615e29b74b535ce2160ffe354312f4fd", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n\nint FindF(int n)\n{\n    for(int i=2;i<n;i++){\n        if(n%i==0)\n            return i;\n    }\n    return n;\n}\n\nint main()\n{\n    int t, n , k;\n\n    scanf(\"%d\", &t);\n\n    for(int i=0;i<t;i++)\n    {\n        scanf(\"%d %d\", &n, &k);\n\n        for(int j=0;j<k;j++){\n            n = n + FindF(n);\n        }\n\n        printf(\"%d\\n\", n);\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n\nint FindF(int n)\n{\n    for(int i=2;i<n;i++){\n        if(n%i==0)\n            return i;\n    }\n    return n;\n}\n\nint main()\n{\n    int t, n , k;\n\n    scanf(\"%d\", &t);\n\n    for(int i=0;i<t;i++)\n    {\n        scanf(\"%d %d\", &n, &k);\n\n        int add = FindF(n);\n\n        if (add%2 == 1){\n            add = add+ (k-1)*2;\n        }\n        else\n            add = k*add;\n\n        printf(\"%d\\n\", n+add);\n    }\n}\n"}
{"similarity_score": 0.8253719655442443, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "8a8584d912e6df6eec2ffa0750ca764f", "bug_code_uid": "3183cfa0085ddffb028d3ecfacf7676a", "src_uid": "14fc3a7fef44a02791aee62838c4c8c8", "apr_id": "6309e62304f00c861831351d3707a432", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[1100],b[1100];\nint main()\n{\n    int n,m,i,j,hashg[110]={},hashb[110]={},k=0;\n    scanf(\"%d%d\",&n,&m);\n    if(n>m)\n    {\n        i=n;\n        n=m;\n        m=i;\n    }\n    for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++)\n        {\n            if(!hashg[i] || !hashb[j])\n            {\n                hashg[i]=1;\n                hashb[j]=1;\n                a[k]=i;b[k]=j;\n                k++;\n            }\n        }\n    printf(\"%d\\n\",k);\n    for(i=0;i<k;i++)\n        printf(\"%d %d\\n\",a[i],b[i]);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint a[1100],b[1100];\nint main()\n{\n    int n,m,i,j,hashg[110]={},hashb[110]={},k=0,flag=0;\n    scanf(\"%d%d\",&n,&m);\n    if(n>m)\n    {\n        i=n;\n        n=m;\n        m=i;\n        flag=1;\n    }\n    for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++)\n        {\n            if(!hashg[i] || !hashb[j])\n            {\n                hashg[i]=1;\n                hashb[j]=1;\n                if(!flag)\n                {\n                    a[k]=i;\n                    b[k]=j;\n                }\n                else\n                {\n                    a[k]=j;\n                    b[k]=i;\n                }\n                k++;\n            }\n        }\n    printf(\"%d\\n\",k);\n    for(i=0;i<k;i++)\n        printf(\"%d %d\\n\",a[i],b[i]);\n    return 0;\n}"}
{"similarity_score": 0.9228007181328546, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "94d7b8b0853a36fff1e8985705c14634", "bug_code_uid": "55c6e6e04dfb24a628d34d8748a6c93d", "src_uid": "3bb093fb17d6b76ae340fab44b08fcb8", "apr_id": "b7599620c648fa1bdbe4bdd57b861a24", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n    int main()\n{\n   long int t,i;\n    int a,b;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n       scanf(\"%d %d\",&a,&b);\n       if(a>=b)\n       {\n           if((2*b)>=a)\n           {\n               printf(\"%d\",4*b*b);\n           }\n           else\n           {\n               printf(\"%d\",a*a);\n           }\n       }\n       else\n       {\n            if((2*a)>=b)\n           {\n               printf(\"%d\",4*a*a);\n           }\n           else\n           {\n               printf(\"%d\",b*b);\n           }\n       }\n    }\n\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n    int main()\n{\n   long int t,i;\n    int a,b;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n       scanf(\"%d %d\",&a,&b);\n       if(a>=b)\n       {\n           if((2*b)>=a)\n           {\n               printf(\"%d\\n\",4*b*b);\n           }\n           else\n           {\n               printf(\"%d\\n\",a*a);\n           }\n       }\n       else\n       {\n            if((2*a)>=b)\n           {\n               printf(\"%d\\n\",4*a*a);\n           }\n           else\n           {\n               printf(\"%d\\n\",b*b);\n           }\n       }\n    }\n\n}\n"}
{"similarity_score": 0.7553648068669528, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "1dc7fabc8fddb2f973a2a15b3c01a083", "bug_code_uid": "656f7dddf40cb7b9e6b1884df5edba7e", "src_uid": "6432a543eeee9833c6d849222ad6b93d", "apr_id": "366deb1c8e2e6c5b38c72e62012eef89", "difficulty": 1000, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tlong long int l,u,i,j;\n\tscanf(\"%li%li\",&l,&u);\n\tj=u;\n\tif(((u-l+1)/2)==l){\n\tprintf(\"YES\\n\");\n\t\tprintf(\"%li %li\\n\",u,l);\n\t\tgoto end;\n\t}\n\tprintf(\"YES\\n\");\n\tfor(i=(u-l+1)/2;i>0;i--){\n\t\tprintf(\"%li %li\\n\",j,j-1);\n\t\tj=j-2;\n\t}\n\t\n\tend:\n\t\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n\tlong long int l,u,j;\n\tint i;\n\tscanf(\"%lli%lli\",&l,&u);\n\n\tprintf(\"YES\\n\");\n\tfor(i=(u-l+1)/2;i>0;i--){\n\t\tprintf(\"%lli %lli\\n\",u,(u)-1);\n\t\tu=u-2;\n\t}\n\t\n\t\n\t\treturn 0;\n}"}
{"similarity_score": 0.9513381995133819, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e79bb456ecaa0122d0f20db6a34c84fe", "bug_code_uid": "0a2773a811dabc20f3cdcff73ebde487", "src_uid": "3270260030fc56dda3e375af4dad9330", "apr_id": "3a7f00f896bfd9a83cc178551799533e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <iostream>\nusing namespace std;\n\nint main() {\n\t\n\tint i,j,n,k,l,ctr=0;\n\t\n\tchar m[100][100];\n\t\n\tscanf(\"%d\",&n);\n\t\n\tfor(i=0;i<=n;i++)\n\t{\n\t\tfor(j=0;j<=n;j++)\n\t\t{\n\t\t\tscanf(\"%c\",&m[i][j]);\n\t\t}\n\t}\n\tfor(k=0;k<=n;k++)\n\t{\n\t\tfor(l=0;l<=n;l++)\n\t\t{\n\t\t   \tif( (m[k][l]=='X') && (m[k-1][l-1]=='X') && (m[k-1][l+1]=='X') && (m[k+1][l-1]=='X') && (m[k+1][l+1]=='X') )\n\t\t\t{\n\t\t\t\tctr++;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",ctr);\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\t\n\tint i,j,n,k,l,ctr=0;\n\t\n\tchar m[1000][1000];\n\t\n\tscanf(\"%d\",&n);\n\t\n\tfor(i=0;i<=n;i++)\n\t{\n\t\tfor(j=0;j<=n;j++)\n\t\t{\n\t\t\tscanf(\"%c\",&m[i][j]);\n\t\t}\n\t}\n\tfor(k=0;k<=n;k++)\n\t{\n\t\tfor(l=0;l<=n;l++)\n\t\t{\n\t\t   \tif( (m[k][l]=='X') && (m[k-1][l-1]=='X') && (m[k-1][l+1]=='X') && (m[k+1][l-1]=='X') && (m[k+1][l+1]=='X') )\n\t\t\t{\n\t\t\t\tctr++;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",ctr);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9886246122026887, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "026682e6d10e94b86b847f8e7a2f71a8", "bug_code_uid": "a1db870df5d173870e81e9af21aa4642", "src_uid": "09f5623c3717c9d360334500b198d8e0", "apr_id": "90c1206c31f2adcb7f44be251ffbe39d", "difficulty": 1600, "tags": ["binary search", "sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n\nint main(){\nint i,j,x,aux=0,n;\nfloat cant,count=0;\nint *friends;\nscanf(\"%d\",&n);\nfriends=malloc(n*sizeof(int));\nfor(i=0;i<n;i++){\n    friends[i]=0;\n}\nfor(i=0;i<n;i++){\n    scanf(\"%d\",&friends[i]);\n    count+=friends[i];\n}\nfor(i=0;i<n;i++){\n    if(friends[i]>aux){\n        aux=friends[i];\n    }\n}\ncant=ceil(count/(n-1));\nif(cant>aux){\n    printf(\"%d\",(int)cant);\n}\nelse{\n    printf(\"%d\",aux);\n}\n//printf(\"%d\",aux);\n\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n\nint main(){\nint i,j,x,aux=0,n;\ndouble cant,count=0;\nint *friends;\nscanf(\"%d\",&n);\nfriends=malloc(n*sizeof(int));\nfor(i=0;i<n;i++){\n    friends[i]=0;\n}\nfor(i=0;i<n;i++){\n    scanf(\"%d\",&friends[i]);\n    count+=friends[i];\n}\nfor(i=0;i<n;i++){\n    if(friends[i]>aux){\n        aux=friends[i];\n    }\n}\ncant=ceil(count/(n-1));\nif(cant>aux){\n    printf(\"%d\",(int)cant);\n}\nelse{\n    printf(\"%d\",aux);\n}\n//printf(\"%d\",aux);\n\n\nreturn 0;\n}\n"}
{"similarity_score": 0.9694002447980417, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "05fd3581f182475df316e8cb32168f03", "bug_code_uid": "c1058ea9d2d30ca9036f56459cac5797", "src_uid": "ec09b2df4ed3abbca4c47f48f12010ca", "apr_id": "0a2f20cf9377d1d597e706595920e0cc", "difficulty": 800, "tags": ["sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n, a[101], m, b[201], maxa, maxb, i;\nint main()\n{\n    scanf(\"%d\" , &n);\n    for (i = 1; i <= n; i++)\n    scanf(\"%d\" , &m);\n    for (i = 1; i <= m; i++)\n    scanf(\"%d\" , &b[i]);\n    maxa = a[1];\n    for (i = 2; i <= n; i++)\n    if (a[i] > maxa) maxa = a[i];\n    maxb = b[1];\n    for (i = 2; i <= m; i++)\n    if (b[i] > maxb) maxb = b[i];\n    printf(\"%d %d\" , maxa, maxb);\n}", "fixed": "#include <stdio.h>\n\nint n, a[101], m, b[201], maxa, maxb, i;\nint main()\n{\n    scanf(\"%d\" , &n);\n    for (i = 1; i <= n; i++)\n    scanf(\"%d\" , &a[i]);\n    scanf(\"%d\" , &m);\n    for (i = 1; i <= m; i++)\n    scanf(\"%d\" , &b[i]);\n    maxa = a[1];\n    for (i = 2; i <= n; i++)\n    if (a[i] > maxa) maxa = a[i];\n    maxb = b[1];\n    for (i = 2; i <= m; i++)\n    if (b[i] > maxb) maxb = b[i];\n    printf(\"%d %d\" , maxa, maxb);\n}"}
{"similarity_score": 0.9905482041587902, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "afaa125df8ef1c2eefa046bbc088fdcb", "bug_code_uid": "ab3171e3aaf9df17732af8a4dd885f32", "src_uid": "369b6390417723799c5c0a19005e78f1", "apr_id": "a84f6471604dceaafacee28f28ecbb68", "difficulty": 1700, "tags": ["dp", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n#include <stdint.h>\n#include <inttypes.h>\n#include <memory.h>\n#define N 200005\nint a[N];\nint64_t yc[2][N];\nsize_t n;\n\nint64_t walk(size_t i, int odd) {\n\tif (!i)\n\t\treturn -1;\n\n\tif (yc[odd][i]) {\n\t\treturn yc[odd][i];\n\t} else {\n\t\tint j = odd ? (i - a[i]) : (i + a[i]);\n\t\tif (j < 0 || j >= n)\n\t\t\treturn (yc[odd][i] = a[i]);\n\t\telse {\n\t\t\tint64_t y;\n\t\t\tyc[odd][i] = -1;\n\t\t   \ty = walk(j, !odd);\n\t\t\tif (y < 0)\n\t\t\t\treturn -1;\n\t\t\treturn (yc[odd][i] = a[i] + y);\n\t\t};\n\t};\n};\n\nint main(void) {\n\tsize_t i;\n\tscanf(\"%zd\", &n);\n\tfor (i = 1; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t};\n\tmemset(yc[0], 0, sizeof(yc[0]));\n\tmemset(yc[1], 0, sizeof(yc[1]));\n\tfor (i = 1; i < n; i++) {\n\t\tint64_t y = walk(i, 1);\n\t\tprintf(\"%\" PRId64 \"\\n\", (y < 0)?(int64_t)-1:(i+y));\n\t};\n\treturn 0;\n};\n", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n#include <stdint.h>\n#include <inttypes.h>\n#include <memory.h>\n#define N 200005\nint a[N];\nint64_t yc[2][N];\nint n;\n\nint64_t walk(size_t i, int odd) {\n\tif (!i)\n\t\treturn -1;\n\n\tif (yc[odd][i]) {\n\t\treturn yc[odd][i];\n\t} else {\n\t\tint j = odd ? (i - a[i]) : (i + a[i]);\n\t\tif (j < 0 || j >= n)\n\t\t\treturn (yc[odd][i] = a[i]);\n\t\telse {\n\t\t\tint64_t y;\n\t\t\tyc[odd][i] = -1;\n\t\t   \ty = walk(j, !odd);\n\t\t\tif (y < 0)\n\t\t\t\treturn -1;\n\t\t\treturn (yc[odd][i] = a[i] + y);\n\t\t};\n\t};\n};\n\nint main(void) {\n\tint i;\n\tscanf(\"%d\", &n);\n\tfor (i = 1; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t};\n\tmemset(yc[0], 0, sizeof(yc[0]));\n\tmemset(yc[1], 0, sizeof(yc[1]));\n\tfor (i = 1; i < n; i++) {\n\t\tint64_t y = walk(i, 1);\n\t\tprintf(\"%\" PRId64 \"\\n\", (y < 0)?(int64_t)-1:(i+y));\n\t};\n\treturn 0;\n};\n"}
{"similarity_score": 0.8987161198288159, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d6596bd111044b69134d6eda1046275e", "bug_code_uid": "0f64f34f52c8c0020ffc2b53d544c601", "src_uid": "be9138aca8e1b8a5d722f99fcd70b685", "apr_id": "1ca9e22537f2f549b819b9b1c3601ddc", "difficulty": 1400, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<math.h>\nint main()\n{\n    long long int result[10005],n,g,b,t,xx,xxx;\n    int i,j;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld %lld %lld\",&n,&g,&b);\n        if(n<g)\n        {\n            result[i]=n;\n        }\n        else\n        {\n            if(n%2==0)\n            n=n/2;\n            else\n            n=(n/2)+1;\n            xx=(n/g);\n            xxx=(n%g);\n            if(xxx==0)\n            result[i]=((xx*g)+(--xx*b));\n            else\n            {\n                result[i]=(xx*(g+b)+xxx);\n            }\n        }\n    }\n    for(i=0;i<t;i++)\n    printf(\"%lld\\n\",result[i]);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include<math.h>\nint main()\n{\n    long long int result[10005],n,g,b,t,xx,xxx,ans,n1;\n    int i,j;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld %lld %lld\",&n,&g,&b);\n        if(n<g)\n        {\n            result[i]=n;\n        }\n        else\n        {\n            n1=n;\n            if(n%2==0)\n            n=n/2;\n            else\n            n=(n/2)+1;\n            xx=(n/g);\n            xxx=(n%g);\n            if(xxx==0)\n            ans=((xx*g)+(--xx*b));\n            else\n            {\n                ans=(xx*(g+b)+xxx);\n            }\n            if(ans>n1)\n            result[i]=ans;\n            else\n            result[i]=n1;\n        }\n    }\n    for(i=0;i<t;i++)\n    printf(\"%lld\\n\",result[i]);\n    return 0;\n}\n"}
{"similarity_score": 0.9936102236421726, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4c44177b0f26c21d5218f11fac63e69d", "bug_code_uid": "1abb02656a5811ebd906b6c5ad0daa68", "src_uid": "4c0b0cb8a11cb1fd40fef47616987029", "apr_id": "e8a69250f75d912e69480a336b0db547", "difficulty": 800, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    char a[4];\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%s\",a);\r\n        if((a[0]=='Y'||a[0]=='y')&&(a[1]=='E'||a[1]=='e')&&(a[2]=='S'||a[2]=='s'))\r\n\r\n            printf(\"YES\");\r\n        else\r\n            printf(\"NO\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    char a[4];\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%s\",a);\r\n        if((a[0]=='Y'||a[0]=='y')&&(a[1]=='E'||a[1]=='e')&&(a[2]=='S'||a[2]=='s'))\r\n\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.866913123844732, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "6b344024b63dc7ab8c56221395782c30", "bug_code_uid": "e272460d92dfadc21c4692d9e24a4fe3", "src_uid": "7a48218582b90f735a09083df9e15b96", "apr_id": "3f124203ccd67ddf7db923e721f1a3a0", "difficulty": 1200, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <limits.h>\nint c1;\nint c2;\nvoid max_dig(int a)\n{\n\tint m1=INT_MIN;\n\tint m2=INT_MAX;\n\twhile (a!=0)\n\t{\n\t\tif (m1<a%10)\n\t\t{\n\t\t\tm1=a%10;\n\t\t}\n\t\tif (m2>a%10)\n\t\t{\n\t\t\tm2=a%10;\n\t\t}\n\t\ta/=10;\n\t}\n\tc1=m1;\n\tc2=m2;\n}\nint main (int argc, char *argv[])\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile (t--)\n\t{\n\t\tint a1,k;\n\t\tscanf(\"%d%d\",&a1,&k);\n\t\tint t=1;\n\t\twhile (t<k)\n\t\t{\n\t\t\tt++;\n\t\t\tmax_dig(a1);\n\t\t\ta1+=(c1*c2);\n\t\t}\n\t\tprintf(\"%d\\n\",a1);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <limits.h>\nint c1;\nint c2;\nvoid max_dig(long long int a)\n{\n\tint m1=INT_MIN;\n\tint m2=INT_MAX;\n\twhile (a!=0)\n\t{\n\t\tif (m1<a%10)\n\t\t{\n\t\t\tm1=a%10;\n\t\t}\n\t\tif (m2>a%10)\n\t\t{\n\t\t\tm2=a%10;\n\t\t}\n\t\ta/=10;\n\t}\n\tc1=m1;\n\tc2=m2;\n}\nint main (int argc, char *argv[])\n{\n\tint t;\n\tc1=0;\n\tc2=0;\n\tscanf(\"%d\",&t);\n\twhile (t--)\n\t{\n\t\tlong long int a1,k;\n\t\tscanf(\"%lld%lld\",&a1,&k);\n\t\tint t=1;\n\t\twhile (t<k)\n\t\t{\n\t\t\tt++;\n\t\t\tmax_dig(a1);\n\t\t\tif (c2==0 || c1==0)\n\t\t\t{\n\t\t\t\t//printf(\"t=%d\\n\",t);\n\t\t\t\tbreak;\n\t\t\t}\n\t//\t\tprintf(\"%d %d\\n\",c1,c2);\n\t\t\ta1+=(c1*c2);\n\t\t}\n\t\tprintf(\"%lld\\n\",a1);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.7731843575418994, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b9e78dbb6521d1ef03abea255525b405", "bug_code_uid": "52f10a01eec17b1ec25c5d87aa0e00d7", "src_uid": "a375dd323b7adbfa9f1cad9aa48f7247", "apr_id": "500033ee5d7a1910775b1dad0ed959d5", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <string.h>\n#include <math.h>\n#include <stdio.h>\nvoid solve()\n{\n    int a1, b1;\n    int a2, b2;\n    scanf(\"%d%d\", &a1,&b1);\n    scanf(\"%d%d\", &a2,&b2);\n    int area = a1 * b1 + a2 * b2;\n    int temp = ceil(sqrt(area));\n    if(temp * temp == area)\n    {\n        printf(\"Yes\\n\");\n    }\n    else\n    {\n        printf(\"No\\n\");\n    }\n    \n}\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        solve();\n    }\n}", "fixed": "#include <string.h>\n#include <math.h>\n#include <stdio.h>\nvoid solve()\n{\n    int a1, b1;\n    int a2, b2;\n    scanf(\"%d%d\", &a1,&b1);\n    scanf(\"%d%d\", &a2,&b2);\n    if((a1 == a2 && a1 == b1 + b2) || (a1 == b2 && a1 == b1 + a2) || (b1 == a2 && b1 == a1 + b2) || (b1 == b2 && b1 == a1 + a2))\n    {\n        printf(\"Yes\\n\");\n    }\n    else\n    {\n        printf(\"No\\n\");\n    }\n}\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        solve();\n    }\n}"}
{"similarity_score": 0.18217821782178217, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "bf22f3977c6eae5215106efc543f42f4", "bug_code_uid": "1931f95fa71e016dadf2ddc77aca802e", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "fbde7c4db375e1bf5c93fd6f034cb698", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\nint i,a=0,b=0,n;\nchar c[1000];\nscanf(\"%d\",&n);\nscanf(\"%s\",c);\nfor(i=0;i<strlen(c);i++)\n{\n\tif(c[i]=='A')\n\ta++;\n\telse \n\tb++;\n}\nif(a>b)\nprintf(\"Anton\");\nif(b>a)\nprintf(\"Danik\");\nif(a==b)\nprintf(\"Friendship\");\n}", "fixed": "#include<stdio.h>\nint main(){\n\tint i,A=0;int d=0,p,n;\n\tscanf(\"%d\",&n);\n\tchar a[n];\n\tscanf(\"%s\",a);\n\tp=strlen(a);\n\tfor(i=0;i<p;i++){\n\t\tif(a[i]=='A')A++;\n\t\telse d++;\n\t}\n\tif(A>d)\n\tprintf(\"Anton\\n\");\n\telse if(d>A)\n\tprintf(\"Danik\\n\");\n\t\n\telse\n\t printf(\"Friendship\\n\");\n\n}"}
{"similarity_score": 0.9971181556195965, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b018be6ed9b5d65fb99823db5077cb8c", "bug_code_uid": "8cfbc307b1e135574235d14d3efdb600", "src_uid": "d7fe15a027750c004e4f50175e1e20d2", "apr_id": "938d19000522cfd5165100a8c7d0236b", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <string.h>\n#include<stdlib.h>\n \nint main()\n{\nint count=0, sum=0,tmp,j=0; char str[100]=\" \";\n \nwhile (gets(str)!='\\0') {\nif (str[0]=='\\0') { break;}\nif(str[0]=='+') { count++;\n} else if(str[0]=='-') { count--;\n} else {\nj=1;\nwhile (str[j-1]!=':') {\nj++;\n}\nj=strlen(str)-j;\nsum+=j*count;\n}\n}\nprintf (\"%d\",sum);\nreturn 0;\n}\n}", "fixed": "#include<stdio.h>\n#include <string.h>\n#include<stdlib.h>\n \nint main()\n{\nint count=0, sum=0,tmp,j=0; char str[100]=\" \";\n \nwhile (gets(str)!='\\0') {\nif (str[0]=='\\0') { break;}\nif(str[0]=='+') { count++;\n} else if(str[0]=='-') { count--;\n} else {\nj=1;\nwhile (str[j-1]!=':') {\nj++;\n}\nj=strlen(str)-j;\nsum+=j*count;\n}\n}\nprintf (\"%d\",sum);\nreturn 0;\n}"}
{"similarity_score": 0.26762589928057556, "equal_cnt": 21, "replace_cnt": 11, "delete_cnt": 3, "insert_cnt": 7, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "0d7cdf23cb2fe16eed3a846b66265160", "bug_code_uid": "0e8d7da82eff8ffbc25ea22389c10ee1", "src_uid": "d497431eb37fafdf211309da8740ece6", "apr_id": "8103c3609d4514c237d33de4e8f2b39d", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h> \n#include<string.h>\nint h1,a1,c1;\nint h2,a2;\nint main()\n{\n\tscanf(\"%d%d%d\",&h1,&a1,&c1);\n\tscanf(\"%d%d\",&h2,&a2);\n\tint x1 = h1;\n\tint x2 = h2;\n\tint strike;\n\tif(h2 % a1 == 0) \n\t \tstrike = h2 / a1;\n\telse strike = h2 / a1 + 1;\n\t\n\tint heal = 0;\n\tif(h1 - (strike - 1) * a1 <= 0)\n\t{\n\t\twhile(1)\n\t\t{\n\t\t\theal++;\n\t\t\tif(h1 - (strike - 1) * a1 + heal * c1 > 0)\n\t\t\tbreak;\t\n\t\t}\t\n\t}\n\tint res = heal + strike;\n\tprintf(\"%d\\n\",res);\n\t x1 = h1;\n\t x2 = h2;\n\twhile (x2 > 0)\n\t{\n\t\tif(x1 - a2 > 0) \n\t\t{\n\t\t\tprintf(\"STRIKE\\n\");\n\t\t\tx1 = x1 - a2;\n\t\t\tx2 = x2 - a1;\n\t\t}else{\n\t\t\tprintf(\"HEAL\\n\");\n\t\t\tx1 += c1;\n\t\t}\n\t\t \n\t}\n\t   return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n#define mian main\n#define inf 1061109567\nint min(int a,int b){return a>b?b:a;}\nint max(int a,int b){return a<b?b:a;}\nint s[1000000];\nint main()\n{\n\tmemset(s,0,sizeof(s));\n\tint h1,a1,c1,h2,a2;\n\tscanf(\"%d %d%d\",&h1,&a1,&c1);\n\tscanf(\"%d %d\",&h2,&a2);\n\tint pk;\n\tint cnt;\n\tpk=0;\n\twhile(h2>0)\n\t{\n\t\tif(a2>=h1&&h2>a1)\n\t\t{\n\t\t\t\n\t\t\th1+=c1;\n\t\t\th1-=a2;\n\t\t\t//printf(\"HEAL\\n\");\n\t\t\ts[pk]=1;\n\t\t\tpk++;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\telse \n\t\t{\n\t\t\th2-=a1;\n\t\t\th1-=a2;\n\t\t\t//printf(\"STRIKE\\n\");\n\t\t\ts[pk]=2;\n\t\t\tpk++;\n\t\t}\n\t\n\t\t}\n\t\tprintf(\"%d\\n\",pk);\n\t\tfor(int i=0;i<pk;i++)\n\t\t{\n\t\t\tswitch(s[i])\n\t\t\t{\n\t\t\t\tcase 1:printf(\"HEAL\\n\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:printf(\"STRIKE\\n\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n}\n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.32139201637666326, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "592c7c92fd68114b867a75180f611c3c", "bug_code_uid": "0f0f811958cbe22c8e6bffdfaea7f55e", "src_uid": "cf7bf89a6038586b69d3b8021cee0b27", "apr_id": "d9e886600626b9307ff59cee13aa3868", "difficulty": 800, "tags": ["implementation", "geometry"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,i,x,y,c1=0,c2=0,c3=0,c4=0;\n    scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d %I64d\",&x,&y);\n        if(x>=0&& y>=0){\n            c1++;\n        }\n         if(x<=0&& y>=0){\n            c2++;\n         }\n         if(x>=0&& y<=0){\n            c4++;\n         }\n          if(x<=0&& y<=0){\n            c3++;\n         }\n    }\n    if(c1=1 || c2=1 || c3=1 || c4==1 )\n    {\n        printf(\"YES\");\n    }\n    else if(c1==n || c2==n || c3==n || c4==n )\n    {\n        printf(\"YES\");\n    }\n    else if(c1==1 && c2==1 && c3==1 && c4==1 )\n    {\n        printf(\"NO\");\n    }\n    else\n    {\n        printf(\"NO\");\n    }\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n   int n,l=0,r=0,i;\n   int x,y;\n   scanf(\"%d\",&n);\n   for(i=0;i<n;i++){\n   scanf(\"%d %d\",&x,&y);\n\n\n   if(x>0)\n   {\n      r++;\n   }\n    else\n   {\n       l++;\n   }\n}\n  // printf(\"%d %d\",l,r);\n   if(l<=1||r<=1)\n   {\n       printf(\"YES\");\n   }\n   else{\n    printf(\"NO\");\n   }\n}\n"}
{"similarity_score": 0.9376053962900506, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7e6197bed9da86a32a74d64fb702e746", "bug_code_uid": "642c3cd89a69bd196cb6341eac26f6db", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "fd0d5137b12ebcdced2d2809b6fde0de", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n\nint n,i,j,k=1,c;\nint a[1000], b[1000];\nscanf(\"%d\", &n);\nfor (i=0; i<n; i++) {\n    scanf(\"%d\", &a[i]);\n    scanf(\"%d\", &b[i]);\n\n\n}\n\nj=b[0]-a[1]+b[1];\n\nfor (c=1; c<n-1; c++)  {\n    if (k<j) k=j;\n    j=j-a[c+1]+b[c+1];\n\n\n}\n\nprintf(\"%d\", k);\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main() {\n\nint n,i,j=0,k=0,c,d;\nint a[1000], b[1000];\nscanf(\"%d\", &n);\nfor (i=0; i<n; i++) {\n    scanf(\"%d\", &a[i]);\n    scanf(\"%d\", &b[i]);\n\n\n}\nd=b[0];\n\nj=b[0]-a[1]+b[1];\nif(d>j) k=d;\n\nfor (c=1; c<n-1; c++)  {\n    if (k<j) k=j;\n    j=j-a[c+1]+b[c+1];\n\n\n}\n\nprintf(\"%d\", k);\n\nreturn 0;\n}\n"}
{"similarity_score": 0.9670552458185504, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "0d23a7201906ee6120d16d1cf2fd7274", "bug_code_uid": "0abdb3857f5b2ecc5f3b918f7b5305d4", "src_uid": "8f02891aa9d2fcd1963df3a4028aa5c0", "apr_id": "c12f3901487b23cce3e86b466816750c", "difficulty": 800, "tags": ["games", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include \"stdio.h\"\r\n#include \"string.h\"\r\nint main()\r\n{\r\n    int t;\r\n    char str[20000];\r\n    int k,q,i,j,sumodd,sumeve;\r\n    scanf(\"%d\",&t);\r\n    for(k=0;k<t;++k)\r\n    {\r\n        sumeve=0;\r\n        sumodd=0;\r\n        scanf(\"%s\",str);\r\n        q=strlen(str);\r\n        if((q&1)==1)\r\n        {\r\n            for(i=0;i<q;++i)\r\n                sumeve=sumeve + str[i]-96;\r\n            i=str[0];\r\n            j=str[q-1];\r\n            if(i>j)\r\n            {\r\n                sumeve=sumeve-str[q-1]+96;\r\n                sumodd=sumodd+str[q-1]-96;\r\n            }\r\n            else\r\n            {\r\n                sumeve=sumeve-str[0]+96;\r\n                sumodd=sumodd+str[0]-96;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            for(i=0;i<q;++i)\r\n                sumeve=sumeve + str[i]-96;\r\n        }\r\n        if(sumeve>sumodd)\r\n            printf(\"Alice %d\\n\",sumeve-sumodd);\r\n        else\r\n            printf(\"Bob %d\\n\",sumodd-sumeve);\r\n    }\r\n}\r\n", "fixed": "#include \"stdio.h\"\r\n#include \"string.h\"\r\nint main()\r\n{\r\n    int t;\r\n    char str[200000];\r\n    int k,q,i,j,sumodd,sumeve;\r\n    scanf(\"%d\",&t);\r\n    for(k=0;k<t;++k)\r\n    {\r\n        sumeve=0;\r\n        sumodd=0;\r\n        scanf(\"%s\",str);\r\n        q=strlen(str);\r\n        if((q&1)==1)\r\n        {\r\n            for(i=0;i<q;++i)\r\n                sumeve=sumeve + str[i];\r\n            sumeve=sumeve-(q*96);\r\n            i=str[0];\r\n            j=str[q-1];\r\n            if(i>j)\r\n            {\r\n                sumeve=sumeve-str[q-1]+96;\r\n                sumodd=sumodd+str[q-1]-96;\r\n            }\r\n            else\r\n            {\r\n                sumeve=sumeve-str[0]+96;\r\n                sumodd=sumodd+str[0]-96;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            for(i=0;i<q;++i)\r\n                sumeve=sumeve + str[i];\r\n            sumeve=sumeve-(q*96);\r\n        }\r\n        if(sumeve>sumodd)\r\n            printf(\"Alice %d\\n\",sumeve-sumodd);\r\n        else\r\n            printf(\"Bob %d\\n\",sumodd-sumeve);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9985401459854014, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f904d421a7c2280108cc82c34a25f4b5", "bug_code_uid": "e1dc87f2924dfdd98733a6ba61cfb4f1", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "e53b0a6c6c23f4354266153a678e4778", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint t, m, c, mis=0, cis=0;\n\tscanf (\"%d\", &t);\n\twhile (t--) {\n\t\tscanf (\"%d %d\", &m, &c);\n\t\tif (m>=1 && c>=1 && m<=6 && c<=6) {\n\t\t\tif (m>c) mis++;\n\t\t\telse if (m<c) cis++;\n\t\t}\n\t}\n\tif (mis>cis) printf (\"Mishka\");\n\telse if (mis<cis) printf (\"Chris\");\n\telse printf (\"Friendship is magic! ^^\");\n\treturn 0;\n}\t\n\t\n\t\t\t\t\t\t", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint t, m, c, mis=0, cis=0;\n\tscanf (\"%d\", &t);\n\twhile (t--) {\n\t\tscanf (\"%d %d\", &m, &c);\n\t\tif (m>=1 && c>=1 && m<=6 && c<=6) {\n\t\t\tif (m>c) mis++;\n\t\t\telse if (m<c) cis++;\n\t\t}\n\t}\n\tif (mis>cis) printf (\"Mishka\");\n\telse if (mis<cis) printf (\"Chris\");\n\telse printf (\"Friendship is magic!^^\");\n\treturn 0;\n}\t\n\t\n\t\t\t\t\t\t"}
{"similarity_score": 0.9566517189835575, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8ff2952d1380c382fc431eaa9b03035b", "bug_code_uid": "f3df2416e27801837a91222fb6a30bb5", "src_uid": "fcb6a715dfe302d7ae5a6695ca8976aa", "apr_id": "6a0771492a99ce992bcb08db858e61eb", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    long int n,i,max,c1=0,c2=0,c3=0,a[100000];\n    scanf(\"%ld\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld\",&a[i]);\n        if(a[i]==1) c1++;\n        if(a[i]==2) c2++;\n        if(a[i]==3) c3++;\n    } max=c1;\n    if(c2>max) max=c2;\n    if(c3>max) max=c3;\n    printf(\"%ld\",n-max);\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nmain()\n{\n    long int n,i,max,c1=0,c2=0,c3=0;\n    scanf(\"%ld\",&n);\n    long int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld\",&a[i]);\n        if(a[i]==1) c1++;\n        if(a[i]==2) c2++;\n        if(a[i]==3) c3++;\n    } max=c1;\n    if(c2>max) max=c2;\n    if(c3>max) max=c3;\n    printf(\"%ld\",n-max);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9856985698569857, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "57d69e4bd46f3ef30ab246ac99ac7558", "bug_code_uid": "c30fcd48972a02f4ffb0af7d5886477f", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "111f5c5e269430aa99c6782bbb91e45f", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MAX 150000\nint main()\n{\nlong int n;\nlong int k;\nlong int j;\nint h[MAX+1];\nlong int min=0;\nlong int tmp=0;\nscanf(\"%ld%ld\",&n,&k); \nlong int i;\n\nfor(i=1;i<=n;i++)\n    scanf(\"%d\",&h[i]);\n\nfor(i=1;i<=k;i++)\n    tmp+=h[i];\n\nmin=tmp;\ni=1;\nwhile(i<=n-k)\n{\n    tmp=tmp-h[i]+h[i+k];\n    if(h[i]>h[i+k])\n    {   \n        if(tmp<min)\n        {   min=tmp;\n            j=i+1;\n        }\n    }\n        i++;\n}\n\nprintf(\"%ld\",j);\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#define MAX 150000\nint main()\n{\nlong int n;\nlong int k;\nlong int j;\nint h[MAX+1];\nlong int min=0;\nlong int tmp=0;\nscanf(\"%ld%ld\",&n,&k); \nlong int i;\n\nfor(i=1;i<=n;i++)\n    scanf(\"%d\",&h[i]);\n\nfor(i=1;i<=k;i++)\n    tmp+=h[i];\n\nmin=tmp;\n\ni=1;\nj=1;\nwhile(i<=n-k)\n{\n    tmp=tmp-h[i]+h[i+k];\n    if(h[i]>h[i+k])\n    {   \n        if(tmp<min)\n        {   min=tmp;\n            j=i+1;\n        }\n    }\n        i++;\n}\n\nprintf(\"%ld\",j);\nreturn 0;\n}\n    "}
{"similarity_score": 0.9019823788546255, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "188b171f989a7777938c2050a42c131f", "bug_code_uid": "f9ffeaa74116287aef091c5f4b3c9385", "src_uid": "268f90d0595f7c51fb336ce377409dde", "apr_id": "bc8d5066e32b405a87f5482d2aec42ec", "difficulty": 1700, "tags": ["combinatorics", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#define MOD 1000000007\nlong long int fun(long long int b,long long int a)\n{\n\tif(!a)\treturn 1;\n\tif(a==1)\treturn b;\n\tlong long int x=fun(b,a/2);\n\tlong long int y;\n\tif(a%2)\n\t{\n\t\tlong long int z=fun(b,(a/2)+1);\n\t\ty=(x*z)%MOD;\n\t}\n\telse\n\t{\n\t\ty=(x*x)%MOD;\t\n\t}\n\treturn y;\n};\nlong long int inv(long long int a)\n{\n\tlong long int div=fun(2,a)-1;\n\tdiv=fun(div,MOD-2);\n\treturn div;\n}\nint main()\n{\n\tlong long int i,j,k,len,ans=0;\n\tchar s[100004];\n\tscanf(\"%s\",s);\n\tscanf(\"%lld\",&k);\n\tlen=strlen(s);\n\t//calculate 2^i\n\tfor(i=0;i<len;i++)\n\t{\n\t\tif(s[i]=='5' || s[i]=='0')\n\t\t{\n\t\t\tans = (ans+fun(2,i))%MOD;\n\t\t}\n\t}\n\t\n\t//calculate 2^0+2^n+...+2^(k-1)*n ==> \t2^(k*n)-1 / 2^n -1\n\t//Instead of dividing take modular multiplicative inverse of 2^n-1\n\t\n\tlong long int div=inv(len);\n\tlong long int mul=fun(2,(k*len))-1;\n\tdiv=(div*mul)%MOD;\n\tans=(ans*div)%MOD;\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#define MOD 1000000007\nlong long int fun(long long int b,long long int a)\n{\n\tif(!a)\treturn 1;\n\tif(a==1)\treturn b;\n\tlong long int y=(b*b)%MOD;\n\tif(a%2)\n\t{\n\t\tlong long int z=(b*fun(y,(a-1)/2))%MOD;\n\t\treturn z;\n\t}\n\telse\treturn fun(y,a/2);\n};\nlong long int inv(long long int a)\n{\n\tlong long int div=fun(2,a)-1;\n\tdiv=fun(div,MOD-2);\n\treturn div;\n}\nint main()\n{\n\tlong long int i,j,k,len,ans=0;\n\tchar s[100004];\n\tscanf(\"%s\",s);\n\tscanf(\"%lld\",&k);\n\tlen=strlen(s);\n\t//calculate 2^i\n\tfor(i=0;i<len;i++)\n\t{\n\t\tif(s[i]=='5' || s[i]=='0')\n\t\t{\n\t\t\tans = (ans+fun(2,i))%MOD;\n\t\t}\n\t}\n\t\n\t//calculate 2^0+2^n+...+2^(k-1)*n ==> \t2^(k*n)-1 / 2^n -1\n\t//Instead of dividing take modular multiplicative inverse of 2^n-1\n\t\n\tlong long int div=inv(len);\n\tlong long int mul=fun(2,(k*len))-1;\n\tdiv=(div*mul)%MOD;\n\tans=(ans*div)%MOD;\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9488372093023256, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "fdea9d964fa6a4ec18de82eceea3cb4f", "bug_code_uid": "eecf5aa5e3a9c43d8776500db4413a11", "src_uid": "d9e4a9a32d60e75f3cf959ef7f894fc6", "apr_id": "25ea0a0621f1ba444ffe7575339ec997", "difficulty": 800, "tags": ["constructive algorithms", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\t long long m,n,i,j,s=0,a,b,c;\n\t scanf(\"%d\",&n);\n\t\n\t for(i=1;i<=n;i++){\n\t \t scanf(\"%d %d %d\",&a,&b,&c);\n\t \t s=a+b+c;\n\t \t printf(\"%d\\n\",s/2);\n\t \t s=0;\n\t }\n\t \t\t\n\t\n\t\n\t\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\t long long m,n,i,j,s=0,a,b,c;\n\t scanf(\"%lld\",&n);\n\t\n\t for(i=1;i<=n;i++){\n\t \t scanf(\"%lld %lld %lld\",&a,&b,&c);\n\t \t s=a+b+c;\n\t \t printf(\"%lld\\n\",s/2);\n\t \t s=0;\n\t }\n\t \t\t\n\t\n\t\n\t\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.3022113022113022, "equal_cnt": 22, "replace_cnt": 20, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "e7da4409b0a3ba9b2750f00c6d7b489e", "bug_code_uid": "e9ea76378add53fe8684d2a61b59815b", "src_uid": "8ad06ac90b258a8233e2a1cf51f68078", "apr_id": "f0b472645e5755312622b86d71e16e47", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint i, j, len, c=0, d, a=0, b=0, r;\n\tchar s[200001];\n\tscanf(\"%d\", &d);\n\tscanf(\"%s\", s);\n\tlen=strlen(s);\n\tfor(i=0; i<len-1; i++)\n\t{\n\t\tif(s[i]=='a' && s[i+1]=='a')\n\t\t{\n\t\t   s[i+1]='b';\n\t\t   c++;\n\t    }\n\t\telse if(s[i]=='b' && s[i+1]=='b')\n\t\t{\n\t\t   s[i+1]='a';\n\t\t   c++;\n\t    }\n\t}\n\tprintf(\"%d\\n\", c);\n\tfor(i=0; i<len; i++)\n\tprintf(\"%c\", s[i]);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,t=0,ans=0;\n    char a[200000+5];\n    scanf(\"%d\",&n);\n    scanf(\"%s\",a);\n    while(t<n)\n    {\n        if(a[t]=='a'&&a[t+1]=='a')\n        {\n            ans++;\n            a[t]='b';\n        }\n        else if(a[t]=='b'&&a[t+1]=='b')\n        {\n            ans++;\n            a[t]='a';\n        }\n        t+=2;\n    }\n    printf(\"%d\\n\",ans);\n    printf(\"%s\",a);\n    return 0;\n}"}
{"similarity_score": 0.9984447900466563, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "91650c03d97f84a12d6072f4ed2907d7", "bug_code_uid": "5cf2cfc64c86433edff4bc94309f9751", "src_uid": "da2fb0ea61808905a133021223f6148d", "apr_id": "5b2e3075250a67072b41b34d4757f3f0", "difficulty": 1300, "tags": ["brute force", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nlong long int min(long long int a,long long int b)\r\n{\r\n    return a<b?a:b;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    long long int a,b,ans=1000000000000000;\r\n    scanf(\"%d\",&n);\r\n    long long int aa[n];\r\n    for(int i=0;i<n;i++)\r\n    scanf(\"%lld\",&aa[i]);\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        b=0;\r\n        a=0;\r\n        for(int j=i-1;j>=0;j--)\r\n        {\r\n        b=b+a/aa[j]+1;\r\n        a=(a/aa[j]+1)*aa[j];\r\n        }\r\n        a=0;\r\n        for(int j=i+1;j<n;j++)\r\n        {\r\n        b=b+a/aa[j]+1;\r\n        a=(a/aa[j]+1)*aa[j];\r\n        }\r\n        ans=min(ans,b);\r\n    }\r\n    printf(\"%lld\",ans);\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nlong long int min(long long int a,long long int b)\r\n{\r\n    return a<b?a:b;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    long long int a,b,ans=100000000000000000;\r\n    scanf(\"%d\",&n);\r\n    long long int aa[n];\r\n    for(int i=0;i<n;i++)\r\n    scanf(\"%lld\",&aa[i]);\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        b=0;\r\n        a=0;\r\n        for(int j=i-1;j>=0;j--)\r\n        {\r\n        b=b+a/aa[j]+1;\r\n        a=(a/aa[j]+1)*aa[j];\r\n        }\r\n        a=0;\r\n        for(int j=i+1;j<n;j++)\r\n        {\r\n        b=b+a/aa[j]+1;\r\n        a=(a/aa[j]+1)*aa[j];\r\n        }\r\n        ans=min(ans,b);\r\n    }\r\n    printf(\"%lld\",ans);\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.21367521367521367, "equal_cnt": 27, "replace_cnt": 21, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "5dc7156bfaacec78b63af00d9b830b33", "bug_code_uid": "e96de38ffbf6efbe38668750bac3ab01", "src_uid": "f9fbb45e45d3040e3be19a39ea8faa1f", "apr_id": "c31d51a8ff8b256e89eb44b7a860afb0", "difficulty": 900, "tags": ["sortings", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nlong long x[100];\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i=0;\n    for(;i<n;i++)\n    {\n    \tscanf(\"%lld\",&x[i]);\n\t}\n\tsort(x,x+n);\n\tlong long j,k,sum1=0,sum2=0;\t\n\t\tfor(j=0;j<n/2;j++)\n\t\t{\n\t\t\tsum1+=x[j];\n\t\t}\n\t\tfor(k=n/2;k<n;k++)\n\t\t{\n\t\t\tsum2+=x[k];\n\t    }\n\tprintf(\"%lld\",sum1*sum1+sum2*sum2);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint length[100000];\nlong long max=0,min=0;\nint n,i;\nvoid Quick_Sort(int length[],int x,int y)\n{\n    int a=x,b=y,num=length[x];\n    int temp;\n    if(x<y)\n    {\n        while(a<b)\n        {\n            while(num<length[b] && a<b) b--;\n            if(a<b)\n            {\n                temp=length[a];\n                length[a]=length[b];\n                length[b]=temp;\n                a++;\n            }\n            while(length[a]<num && a<b) a++;\n            if(a<b)\n            {\n                temp=length[a];\n                length[a]=length[b];\n                length[b]=temp;\n                b--;\n            }\n        }\n        Quick_Sort(length,x,a-1);\n        Quick_Sort(length,a+1,y);\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&length[i]);\n    }\n    Quick_Sort(length,0,n-1);\n    for(i=0;i<n/2;i++)\n    {\n        min+=length[i];\n    }\n    for(i=n/2;i<n;i++)\n    {\n        max+=length[i];\n    }\n    printf(\"%lld\\n\",max*max+min*min);\n    return 0;\n}"}
{"similarity_score": 0.9707401032702238, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e65a8acf9fab485fd04f5ba30b6f3d93", "bug_code_uid": "a24acec096e3ad47fa03d6e0b465ce8b", "src_uid": "db9065d975878227a749083f0036a169", "apr_id": "f714c77a6d86336a09fa473dd02a5c8a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//\n//  main.c\n//  Black Square\n//\n//  Created by Luis Nolasco on 21/05/14.\n//  Copyright (c) 2014 Luis Nolasco. All rights reserved.\n//\n\n#include <stdio.h>\n#include <string.h>\n\nint main(int argc, const char * argv[])\n{\n\n    long long int calorias=0,A[4];\n    int i, aux;\n    char S[100000];\n    \n    for(i=0; i<4; i++){\n        scanf(\"%lld\",&A[i]);\n    }\n    \n    scanf(\"%s\", S);\n    \n    \n    for(i=0; i<strlen(S); i++){\n        aux = (int)S[i];\n        aux = aux-50;\n        calorias = calorias + A[aux-1];\n    }\n    \n    printf(\"%lld\",calorias);\n    return 0;\n}\n\n", "fixed": "//\n//  main.c\n//  Black Square\n//\n//  Created by Luis Nolasco on 21/05/14.\n//  Copyright (c) 2014 Luis Nolasco. All rights reserved.\n//\n\n#include <stdio.h>\n#include <string.h>\n\nint main(int argc, const char * argv[])\n{\n\n    long long int calorias=0,A[4];\n    int i, aux;\n    char S[100000];\n    \n    for(i=0; i<4; i++){\n        scanf(\"%lld\",&A[i]);\n    }\n    \n    scanf(\"%s\", S);\n    \n    \n    for(i=0; i<strlen(S); i++){\n        aux = (int)S[i];\n        aux = aux-48;\n        //printf(\"\\n%d\",aux);\n        calorias = calorias + A[aux-1];\n    }\n    \n    printf(\"%lld\",calorias);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9808580858085808, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b20aa37c2ce0445f24bd5e2a2f01928a", "bug_code_uid": "4c8b44bb5346f732442bae37a7b483ab", "src_uid": "45e51f3dee9a22cee86e1a98da519e2d", "apr_id": "bae38fb608fb7db5eed72056fc41d7e0", "difficulty": 800, "tags": ["sortings", "implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint cmp(const void *a,const void *b)\n{\n    return *(int*)a-*(int*)b;\n}\nint main()\n{\n    int n,a[1100],i,k,sum,t,num;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        sum=0;num=0;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n        qsort(a,n,sizeof(a[0]),cmp);\n        t=a[0];\n        for(i=1;i<n-1;i++)\n        {\n            if(t==a[i]&&t!=0)\n            {\n                sum++;\n                if(t==a[i+1])\n                {\n                    num=1;break;\n                }\n            }\n            else\n            {\n                t=a[i];\n            }\n        }\n        if(num==1)\n        printf(\"-1\\n\");\n        else\n        printf(\"%d\\n\",sum);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint cmp(const void *a,const void *b)\n{\n    return *(int*)a-*(int*)b;\n}\nint main()\n{\n    int n,a[1100],i,k,sum,t,num;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        sum=0;num=0;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n        qsort(a,n,sizeof(a[0]),cmp);\n        t=a[0];\n        for(i=1;i<n;i++)\n        {\n            if(t==a[i]&&t!=0)\n            {\n                sum++;\n                if(i+1!=n)\n                if(t==a[i+1])\n                {\n                    num=1;break;\n                }\n            }\n            else\n            {\n                t=a[i];\n            }\n        }\n        if(num==1)\n        printf(\"-1\\n\");\n        else\n        printf(\"%d\\n\",sum);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9415292353823088, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d53f70c028e3ae3b5061769e734394ac", "bug_code_uid": "569903cd6a6594c9137ada1cade2cd47", "src_uid": "d1926feaeec151f4a2f186a46a863d90", "apr_id": "e4284e87a4dc63e582bfb2132254985b", "difficulty": 1400, "tags": ["constructive algorithms", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n__int64 max(__int64 a, __int64 b)\n{\n\treturn a>b?a:b;\n}\nint main()\n{\n\t__int64 n;\n\twhile(scanf(\"%I64d\", &n)!=EOF)\n\t{\n\t\t__int64 num[50000];\n\t\tchar str[50000];\n\t\t__int64 i;\n\t\tfor(i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &num[i]);\n\t\tscanf(\"%s\", str);\n\t\t__int64 sa = 0, sb = 0;\n\t\tfor(i= 0; i < n; i++)\n\t\t{\n\t\t\tif(str[i]=='A')\n\t\t\t\tsa+=num[i];\n\t\t\telse\n\t\t\t\tsb+=num[i];\n\t\t}\n\t\t__int64 ans = max(sa, sb);\n\t\t__int64 na = 0, nb = 0;\n\t\tfor(i = 0; i< n; i++)\n\t\t{\n\t\t\tif(str[i] == 'A')\n\t\t\t\tna+=num[i];\n\t\t\telse\n\t\t\t\tnb+=num[i];\n\t\t\t__int64 xa = sa-na;\n\t\t\t__int64 xb = sb-nb;\n\t\t\tans = max(ans, max(xa+nb, xb+na));\n\t\t}\n\t\tprintf(\"%I64d\\n\", ans);\n\t}\n\t\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n__int64 max(__int64 a, __int64 b)\n{\n\treturn a>b?a:b;\n}\n__int64 num[500001];\nchar str[500001];\nint main()\n{\n\t__int64 n;\n\twhile(scanf(\"%I64d\", &n)!=EOF)\n\t{\n\t\n\t\t__int64 i;\n\t\tfor(i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &num[i]);\n\t\tscanf(\"%s\", str);\n\t\t__int64 sa = 0, sb = 0;\n\t\tfor(i= 0; i < n; i++)\n\t\t{\n\t\t\tif(str[i]=='A')\n\t\t\t\tsa+=num[i];\n\t\t\telse\n\t\t\t\tsb+=num[i];\n\t\t}\n\t\t__int64 ans = max(sa, sb);\n\t\t__int64 na = 0, nb = 0;\n\t\tfor(i = 0; i< n; i++)\n\t\t{\n\t\t\tif(str[i] == 'A')\n\t\t\t\tna+=num[i];\n\t\t\telse\n\t\t\t\tnb+=num[i];\n\t\t\t__int64 xa = sa-na;\n\t\t\t__int64 xb = sb-nb;\n\t\t\tans = max(ans, max(xa+nb, xb+na));\n\t\t}\n\t\tprintf(\"%I64d\\n\", ans);\n\t}\n\t\treturn 0;\n}"}
{"similarity_score": 0.6745796241345203, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "25f43e2d1d23b31c20499ac66607a5c2", "bug_code_uid": "3e395e6945bd54458cd0c2050b64c0d5", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "99113bbe8a148f4aa138ff60a9deca51", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nchar s[100000][32];\nint ss[100000];\nint main()\n{\n    int n, i, j, flag = 0;\n    \n    scanf(\"%d\", &n);\n    \n    for(i=0; i<n; i++){\n        scanf(\"%s\", s[i]);\n        for(j=0; j<i; j++){\n            if(strcmp(s[i], s[j]) == 0) ss[i] = ss[j] + 1;\n        }\n         if(ss[i] == 0) printf(\"OK\\n\");\n        else printf(\"%s%d\\n\", s[i], ss[i]);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nchar ts[33];\nchar s[100001][33];\nint ss[100001];\nint main()\n{\n    int n, i, j, flag = 0, k = 0;\n    \n    scanf(\"%d\", &n);\n    \n    for(i=0; i<n; i++){\n        scanf(\"%s\", ts);\n        \n        for(j=0; j<k; j++){\n            if(strcmp(ts, s[j]) == 0){\n                flag = 1;\n                ss[j]++;\n                break;\n            }\n        }\n        \n        if(flag == 0){\n            strcpy(s[k], ts);\n            k++;\n            printf(\"OK\\n\");\n        }\n        else{\n            printf(\"%s%d\\n\", ts, ss[j]);\n            flag = 0;\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9830699774266366, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "1b2e9d78066bf6813d0955d426784b86", "bug_code_uid": "618342363ec606307ad2012e7232208a", "src_uid": "1fba9a290d0492a3d658a7a33388db13", "apr_id": "3096b163d478b0f0436daa51d5cd8247", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint min(int x,int y)\n{\n\tif (x<y) return x; else return y;\n}\n\nint main()\n{\n\tint\torder[100]; \n\torder['L']=1;order['R']=2;\n\torder['U']=3;order['D']=4;\n\tint group;\n\tchar ch;\n\tscanf(\"%d\",&group);\n\tch=getchar();\n\tint t,i,j;\n\tfor (t=1;t<=group;t++);\n\t{\n\t\tchar s[100000];\n\t\tint count[5]={0,0,0,0,0};\n\t\tint lr,ud;\n\t\tscanf(\"%s\",s);\n\t\tint len;\n\t\tlen=strlen(s);\t\n\t\tfor (i=0;i<len;i++)\t++count[order[s[i]]];\n\t\tlr=min(count[1],count[2]);\n\t\tud=min(count[3],count[4]);\n\t\tif (lr==0)\n\t\t{\n\t\t\tif (ud==0) printf(\"0\\n\");\n\t\t\telse printf(\"2\\nUD\\n\");\n\t\t}\n\t\telse \n\t\tif (ud==0)\n\t\t{\n\t\t\tif (lr==0) printf(\"0\\n\");\n\t\t\telse printf(\"2\\nLR\\n\");\n\t\t}\n\t\telse \n\t\t{\n\t\t\tprintf(\"%d\\n\",2*(lr+ud));\n\t\t\tfor (i=1;i<=ud;i++) printf(\"U\");\n\t\t\tfor (i=1;i<=lr;i++) printf(\"L\");\n\t\t\tfor (i=1;i<=ud;i++) printf(\"D\");\n\t\t\tfor (i=1;i<=lr;i++) printf(\"R\");\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint min(int x,int y)\n{\n\tif (x<y) return x; else return y;\n}\n\nint main()\n{\n\tint\torder[100]; \n\torder['L']=1;order['R']=2;\n\torder['U']=3;order['D']=4;\n\tint group,cs=0;\n\tchar ch;\n\tscanf(\"%d\",&group);\n\tch=getchar();\n\tint t,i,j;\n\tfor (t=0;t<group;t++)\n\t{\n\t\tchar s[100000];\n\t\tint count[10]={0,0,0,0,0};\n\t\tint lr,ud;\n\t\tscanf(\"%s\",s);\n\t\tint len;\n\t\tlen=strlen(s);\t\n\t\tfor (i=0;i<len;i++)\t++count[order[s[i]]];\n\t\tlr=min(count[1],count[2]);\n\t\tud=min(count[3],count[4]);\n\t\tif (lr==0)\n\t\t{\n\t\t\tif (ud==0) printf(\"0\\n\");\n\t\t\telse printf(\"2\\nUD\\n\");\n\t\t}\n\t\telse \n\t\tif (ud==0)\n\t\t{\n\t\t\tif (lr==0) printf(\"0\\n\");\n\t\t\telse printf(\"2\\nLR\\n\");\n\t\t}\n\t\telse \n\t\t{\n\t\t\tprintf(\"%d\\n\",2*(lr+ud));\n\t\t\tfor (i=1;i<=ud;i++) printf(\"U\");\n\t\t\tfor (i=1;i<=lr;i++) printf(\"L\");\n\t\t\tfor (i=1;i<=ud;i++) printf(\"D\");\n\t\t\tfor (i=1;i<=lr;i++) printf(\"R\");\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\tch=getchar();\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.25793650793650796, "equal_cnt": 20, "replace_cnt": 14, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "8d3cec9a6bfb51b6de7dfc9faa6de39b", "bug_code_uid": "acfd4613d265f6db710f75083a6c3845", "src_uid": "3bb093fb17d6b76ae340fab44b08fcb8", "apr_id": "cf120e724f25ad70c0901c8fb390af0c", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint i,n,a,b;\n\tscanf(\"%d\",&n);\n\tint arr[i];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tif(a>b)\n\t\t{\t\n\t\t\tif(2*b>a)\n\t\t\tarr[i]=4*b*b;\n\t\t\telse\n\t\t\tarr[i]=a*a;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(2*a>b)\n\t\t\tarr[i]=4*a*a;\n\t\t\telse\n\t\t\tarr[i]=b*b;\n\t\t\t}\t\n\t}\n\tfor(i=0;i<n;i++)\n\tprintf(\"%d\\n\",arr[i]);\n}\n\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int t, a, b, i;\n    scanf(\"%d\", &t);\n    for(i=0; i<t; i++)\n    {\n        scanf(\"%d\", &a);\n        scanf(\"%d\", &b);\n        if(a>b)\n        {\n            if(2*b>=a)\n            {\n                printf(\"%d\\n\", 4*b*b);\n            }\n            else\n            {\n                printf(\"%d\\n\", a*a);\n            }\n        }\n        else if(b>a)\n        {\n            if(2*a>=b)\n            {\n                printf(\"%d\\n\", 4*a*a);\n            }\n            else\n            {\n                printf(\"%d\\n\", b*b);\n            }\n        }\n        else\n        {\n            printf(\"%d\\n\", 4*a*a);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.4878993223620523, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "2bf032a885c1d3ea04791475ef4f34c2", "bug_code_uid": "94fbbd1a5f6fbca1b7341f882ea9278c", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "ef6cff82764a2d320bb1d34d68e88c93", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n    int s,n,d,ns;\n    scanf(\"%d %d\",&s,&n);\n    while(n--){\n        scanf(\"%d %d\",&d,&ns);\n        if(s>d){\n            s = s + ns;\n        }\n        else{\n            printf(\"NO\");\n            exit(0);\n        }\n    }\n    printf(\"YES\");\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n    int s,n,d,ns,arr[1000],narr[1000];\n    scanf(\"%d %d\",&s,&n);\n    for(int i = 0;i<n;i++){\n        scanf(\"%d %d\",&arr[i],&narr[i]);\n    }\n    for (int i = 0; i < n-1; i++){\n       for (int j = 0; j < n-i-1; j++){ \n           if (arr[j] > arr[j+1]){\n               int temp = arr[j+1];\n               arr[j+1] = arr[j];\n               arr[j] = temp;\n               temp = narr[j+1];\n               narr[j+1] = narr[j];\n               narr[j] = temp;\n           }\n       }\n    }\n    for(int i = 0;i<n;i++){\n        if(s>arr[i]){\n            s = s + narr[i];\n        }\n        else{\n            printf(\"NO\");\n            exit(0);\n        }\n    }\n    printf(\"YES\");\n}\n           \n              \n\n\n"}
{"similarity_score": 0.8587677725118483, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "efabe1f395bef4d520baa91c5b5986a2", "bug_code_uid": "24b19913ca6e6b6f136b17a597ff566a", "src_uid": "0816295355375a2d3f1cd45852b86360", "apr_id": "c2c57f8c0e1930cd988e5f17bacfa2ac", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "# include <stdio.h>\n\nint result ( int a, int b, int c) {\n\tint tb = a + b + c;\n\ttb % 2 == 0 ? tb = tb / 2 : tb = (tb / 2 ) + 1;\n\treturn tb - b;\n}\n\nint main () {\n\tint T;\n\tscanf(\"%d\", &T);\n\tlong a[T*3];\n\tlong results[T];\n\tint i = 0, j = 0;\n\twhile (T > 0) {\n\t\tscanf(\"%ld%ld%ld\", &a[i], &a[i + 1], &a[i + 2]);\n\t\tint res = result(a[i], a[i + 1], a[i + 2]);\n\t\tresults[j++] = res;\n\t\ti += 3;\n\t\tT--;\n\t}\n\tfor (int k = 0; k < j; k++)\n\t\tprintf(\"%d\\n\", results[k]);\n\treturn 0;\n}\n\n\n\n\n", "fixed": "# include <stdio.h>\n\nint result ( int a, int b, int c) {\n\tint tb = a + b + c;\n\ttb = tb % 2 == 0 ? tb / 2 : (tb / 2 ) + 1;\n\tif ( c == 0 && a > b) return 1;\n\tif ( c == 0 && a < b) return 0;\n\tif ( tb - b >  c + 1 ) return c + 1;\n\treturn tb - b < 0 ? 0 : tb - b;\n}\n\nint main () {\n\tint T;\n\tscanf(\"%d\", &T);\n\tlong a[T*3];\n\tlong results[T];\n\tint i = 0, j = 0;\n\twhile (T > 0) {\n\t\tscanf(\"%ld%ld%ld\", &a[i], &a[i + 1], &a[i + 2]);\n\t\tint res = result(a[i], a[i + 1], a[i + 2]);\n\t\tresults[j++] = res;\n\t\ti += 3;\n\t\tT--;\n\t}\n\tfor (int k = 0; k < j; k++)\n\t\tprintf(\"%d\\n\", results[k]);\n\treturn 0;\n}\n\n\n\n\n\n"}
{"similarity_score": 0.4683357879234168, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "c93b8c0d054cb04e254065f6991df8ad", "bug_code_uid": "f397409f6ec366bae034e51d18f24643", "src_uid": "43b8e9fb2bd0ec5e0250a33594417f63", "apr_id": "882a7376172ba2554c26b8731c9de079", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tlong num;\n\tlong i;\n\tlong n;\n\tlong k;\n\tlong res = 0;\n\tlong d1;\n\tlong d2;\n\tscanf(\"%ld\", &num);\n\tfor(i = 0; i < num; i++){\n\t\tscanf(\"%ld %ld\", &n, &k);\n\t\tif(n % k != 0)\n\t\t\td1 = n / k + 1;\n\t\telse\n\t\t\td1 = n / k;\n\t\tif(k % 2 != 0)\n\t\t\td2 = k / 2 + 1;\n\t\telse\n\t\t\td2 = k / 2;\n\t\tres = (d1) * (k / 2) + (n / k) * (d2);\n\t\tif(res <= n)\n\t\t\tprintf(\"%ld\\n\", res);\n\t\telse\n\t\t\tprintf(\"%ld\\n\", n / k * k);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tlong num;\n\tlong i;\n\tlong n;\n\tlong k;\n\tscanf(\"%ld\", &num);\n\tfor(i = 0; i < num; i++){\n\t\tscanf(\"%ld %ld\", &n, &k);\n\t\tif(n % k > k / 2)\n\t\t\tprintf(\"%ld\\n\", n / k * k + k / 2);\n\t\telse\n\t\t\tprintf(\"%ld\\n\", n);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.3613312202852615, "equal_cnt": 17, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "23bd39731c21f616c97c71048cd3f301", "bug_code_uid": "84d5023abc4a556dff8c360193bbee38", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "503de65de59fc696f175f8ce81322789", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() \n{\n\tint n,m;\n\tscanf(\"%d\",&n);\n\twhile (n--) \n\t{\n\t\tint p = 0;\n\t\tscanf(\"%d\",&m);\n\t\tif (m % 2 != 0)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\twhile (m)\n\t\t{\n\t\t\tm /= 2;\n\t\t\tif (m % 2 != 0 && m > 1)\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tp = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (p == 0)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n \t\t    \t\t\t \t\t     \t\t\t     \t", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tlong long  n, t;\n\tscanf(\"%lld\", &t);\n\twhile (t--)\n\t{\n\t\tscanf(\"%lld\", &n);\n\t\twhile (n % 2 == 0)\n\t\t{\n\t\t\tn /= 2;\n\t\t}\n\t\tif (n == 1)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n \t   \t\t\t\t\t\t \t   \t\t\t\t \t   \t\t\t\t"}
{"similarity_score": 0.9582790091264668, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "8f86c30030da56ed7f3ba564dbedf8b1", "bug_code_uid": "2e5891c63556f43a35e3909e5db11484", "src_uid": "267c04c77f97bbdf7697dc88c7bfa4af", "apr_id": "b0f988d1f868fafd2113c8d8d070e388", "difficulty": 1300, "tags": ["data structures", "implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "# include <stdio.h>\n\nint main()\n{\n\tlong n, s, s1, s2, s3, i, p, q, k;\n\tlong a[100001] = {0};\n\tlong b[100001] = {0};\n\tchar c;\n\n\t\n\tscanf(\"%ld%ld\\n\", &n, &s);\n\ts1 = s;\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%c%ld%ld\\n\", &c, &p, &q);\n\t\tif (c == 'B') \n\t\t{\n\t\t\ta[p] += q;\n\t\t\tif (p > a[0]) a[0] = p;\n\t\t}\n\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tb[p] += q;\n\t\t\t\t\tif (p > b[0]) b[0] = p;\n\t\t\t\t}\t\t\n\t}\n\n    s2 = 0;\n    s3 = 0;\n\tfor (i = 1; i <= b[0]; i++)\n\t{\n\t\tif (b[i] != 0)\n\t\t{\n\t\t\ts2 += 1;\n\t\t\ts3 = i;\n\t\t\tif (s2 == s) break;\n\t\t}\n\t}\n\n\tfor (i = s3; i >= 1; i--)\n\t{\n\t\tif (s == 0) break;\n\t\tif (b[i] != 0)\n\t\t{\n\t\t\tprintf(\"S %ld %ld\\n\", i, b[i]);\n\t\t\ts -= 1;\n\t\t}\n\t}\n\n\tfor (i = a[0]; i >= 1; i--)\n\t{\n\t\tif (s1 == 0) break;\n\t\tif (a[i] != 0)\n\t\t{\n\t\t\tprintf(\"B %ld %ld\\n\", i, a[i]);\n\t\t\ts1 -= 1;\n\t\t}\n\t}\n\n\treturn 0;\n}", "fixed": "# include <stdio.h>\n\nint main()\n{\n\tlong n, s, s1, s2, s3, i, p, q, k, x, y;\n\tlong a[100001] = {0};\n\tlong b[100001] = {0};\n\tchar c;\n\n\tx = 0;\n\ty = 0;\n\tscanf(\"%ld%ld\\n\", &n, &s);\n\ts1 = s;\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%c%ld%ld\\n\", &c, &p, &q);\n\t\tif (c == 'B') \n\t\t{\n\t\t\ta[p] += q;\n\t\t\tif (p > x) x = p;\n\t\t}\n\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tb[p] += q;\n\t\t\t\t\tif (p > y) y = p;\n\t\t\t\t}\t\t\n\t}\n\n    s2 = 0;\n    s3 = 0;\n\tfor (i = 0; i <= y; i++)\n\t{\n\t\tif (b[i] != 0)\n\t\t{\n\t\t\ts2 += 1;\n\t\t\ts3 = i;\n\t\t\tif (s2 == s) break;\n\t\t}\n\t}\n\n\tfor (i = s3; i >= 0; i--)\n\t{\n\t\tif (s == 0) break;\n\t\tif (b[i] != 0)\n\t\t{\n\t\t\tprintf(\"S %ld %ld\\n\", i, b[i]);\n\t\t\ts -= 1;\n\t\t}\n\t}\n\n\tfor (i = x; i >= 0; i--)\n\t{\n\t\tif (s1 == 0) break;\n\t\tif (a[i] != 0)\n\t\t{\n\t\t\tprintf(\"B %ld %ld\\n\", i, a[i]);\n\t\t\ts1 -= 1;\n\t\t}\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.9460227272727273, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d422ac459e605671779579c8462ce48c", "bug_code_uid": "183578fe60496ff454e47b4dd8186fdb", "src_uid": "d11b56fe172110d5dfafddf880e48f18", "apr_id": "4f6e9ee71b037983d08c7727d1008e15", "difficulty": 1600, "tags": ["geometry", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <ctype.h>\n#define LL long long\n#define min(a,b) (((a)<(b))?(a):(b))\n#define max(a,b) (((a)>(b))?(a):(b))\nLL num[1000000];\nLL map[100],map2[100];\nLL gcd64(LL a,LL b)\n{\n    while (a>0)\n    {\n        b=(b%a)^a;\n        a=a^b;\n        b=a^b;\n    }\n    return b;\n}\nLL calc(LL ang)\n{\n    return 360/gcd64(360,ang);\n}\nint main()\n{\n    //freopen(\"in.in\",\"r\",stdin);\n    char ch;\n    LL i,j,k,a,b,c,d,min,max,iq,qq,n,left,ans,right;\n    scanf(\"%lld\",&n);\n    for (i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&a);\n        a=a*2;\n        b=360/gcd64(360,a);\n        d=a/gcd64(360,a);\n        if (((d==b-1)||(d==1))&&(a>180)) {b=b*2;}\n        printf(\"%lld\\n\",b);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <ctype.h>\n#define LL long long\n#define min(a,b) (((a)<(b))?(a):(b))\n#define max(a,b) (((a)>(b))?(a):(b))\nLL num[1000000];\nLL map[100],map2[100];\nLL gcd64(LL a,LL b)\n{\n    while (a>0)\n    {\n        b=(b%a)^a;\n        a=a^b;\n        b=a^b;\n    }\n    return b;\n}\nint main()\n{\n    //freopen(\"in.in\",\"r\",stdin);\n    char ch;\n    LL i,j,k,a,b,c,d,min,max,iq,qq,n,left,ans,right;\n    scanf(\"%lld\",&n);\n    for (i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&a);\n        a=a*2;\n        b=360/gcd64(360,a);\n        d=a/gcd64(360,a);\n        if (((d==b-1)||(d==1))&&(a>180)) {b=b*2;}\n        if (b==2) {b=4;}\n        printf(\"%lld\\n\",b);\n    }\n    return 0;\n}"}
{"similarity_score": 0.49564134495641343, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "1390acd4bcf34b7e82d4ae449451f462", "bug_code_uid": "59842e29dc41ca828431e30859ecab2c", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "5fe8b49ce7413eb5a09fb02c76113b33", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint n,k,i,sum,arr[3000000];\nint main(){\n\tscanf(\"%d %d\",&n,&k);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&arr[i]);\n\n\tfor(i=1;i<n;i++){\n\t\tif(arr[i+1] <= arr[i]){\n\t\t\t\n\t\t\tsum += (arr[i+1] - arr[i])/k;\n\t\t\t\n\t\t\tarr[i+1] += ((arr[i+1]-arr[i])/k)*k;\n\t\t}\n\t\tif(arr[i+1] <= arr[i]){\n\t\t\t\tarr[i+1] += (arr[i+1] - arr[i]+k);\n\t\t\t\tsum+=2;\n\t\t}\n//\tprintf(\"%d\\n\",sum);\t\t\t\n} \n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint n,k,i,sum,arr[3000000],t;\nint main(){\n\tscanf(\"%d %d\",&n,&k);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&arr[i]);\n\n\tfor(i=1;i<n;i++){\n\t\tt = arr[i] - arr[i+1];\n\n\t\tif(t<0)\n\t\t\tcontinue;\n\n\t\tif(!t){\n\t\t\tsum++;\n\t\t\tarr[i+1]+=k;\n\t\t\tcontinue;\n\t\t}\n\t\tsum += t/k;\n\t\tarr[i+1] += (t/k)*k;\n\n\t\tif(arr[i] >= arr[i+1]){\n\t\t\tsum++;\n\t\t\tarr[i+1]+=k;\n\t\t}\n\n\t\n\t}\n//\tprintf(\"%d\\n\",sum);\t\t\t\n\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7445255474452555, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "5ca576964a9e6a44491a827bd94a90fb", "bug_code_uid": "24d8bf64fb3f78e430840a1e285c2743", "src_uid": "907893a0a78a7444d26bdd793d9c7499", "apr_id": "c550f1eab9acda17646e6a4d37154aaa", "difficulty": 1300, "tags": ["data structures", "implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n   int n,m;\n   int col1,col2,i,med;\n   \n   scanf(\"%d%d\",&n,&m);\n      \n   med=(m+1)/2;\n   col1=med;\n   col2=med+1;\n   \n   for(i=0;i<n;++i)\n   {\n      if(col1&&(med-col1<=col2-med))\n      {\n         printf(\"%d\\n\",col1);\n         col1--;\n      }\n      else if(col2<=m)\n      {\n         printf(\"%d\\n\",col2);\n         col2++;\n      }\n      if(col2>m)\n      {\n         col1=med;\n         col2=med+1;\n      }\n   }\n   system(\"pause\");\n   return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n   int n,m;\n   int col1,col2,i;\n   float med;\n   \n   scanf(\"%d%d\",&n,&m);\n      \n   med=(m+1)/2.0;\n   col1=med;\n   col2=med+1;\n   \n   for(i=0;i<n;++i)\n   {\n      if(col1&&(med-col1<=col2-med))\n      {\n         printf(\"%d\\n\",col1);\n         col1--;\n      }\n      else if(col2<=m)\n      {\n         printf(\"%d\\n\",col2);\n         col2++;\n      }\n      if(col2>m)\n      {\n         col1=med;\n         col2=med+1;\n      }\n   }\n   return 0;\n}\n"}
{"similarity_score": 0.9959072305593452, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1565c7f2d6f90596022fbd797b221cda", "bug_code_uid": "25f406e74e9b23e6e1b4b2b0a895a76e", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "975f457f93464c5734b76690623e6c00", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n    int n,max,i,ara[100],t;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++) scanf(\"%d\",&ara[i]);\n\n    max=ara[n-1];\n    ara[n-1]=0;\n    for(i=n-2;i>=0;i--)\n    {\n        if(ara[i]>max) t=0;\n        else\n            t=max+1-ara[i];\n        if(ara[i]>=max) max=ara[i];\n        ara[i]=t;\n\n    }\n\n    for(i=0;i<n;i++) printf(\"%d \",ara[i]);\n}\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n    int n,max,i,ara[100009],t;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++) scanf(\"%d\",&ara[i]);\n\n    max=ara[n-1];\n    ara[n-1]=0;\n    for(i=n-2;i>=0;i--)\n    {\n        if(ara[i]>max) t=0;\n        else\n            t=max+1-ara[i];\n        if(ara[i]>=max) max=ara[i];\n        ara[i]=t;\n\n    }\n\n    for(i=0;i<n;i++) printf(\"%d \",ara[i]);\n}\n\n\n"}
{"similarity_score": 0.9980769230769231, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b1798a75c5a205eb588371960a25a1cf", "bug_code_uid": "e3c5d38225391c9a409c5e6fee6eb501", "src_uid": "9438ce92e10e846dd3ab7c61a1a2e3af", "apr_id": "733d58d3c69da61bd17fc61dcd6a9768", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n#include<time.h>\n\n#define SORT int t=y;while(t--){for(i=0;i<x-1;i++)if(arr[i]>arr[i+1]){o=arr[i];arr[i]=arr[i+1];arr[i+1]=o;}}\n#define R return 0;\n#define and &&\n#define or ||\nmain(){\n\tint arr[105][105],s[105]={0},x,y,i,j,t;\n\tscanf(\"%d %d\",&x,&y);\n\tfor(i=0;i<x;i++){\n\t\tscanf(\"%d\",&t);\n\t\tfor(j=0;j<t;j++){\n\t\t\tscanf(\"%d\",&arr[j][i]);\n\t\t\ts[arr[j][i]-1]++;\n\t\t}\n\t}\n\tfor(i=0;i<x;i++){\n\t\tif(!s[i]){\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"YES\");\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n#include<time.h>\n\n#define SORT int t=y;while(t--){for(i=0;i<x-1;i++)if(arr[i]>arr[i+1]){o=arr[i];arr[i]=arr[i+1];arr[i+1]=o;}}\n#define R return 0;\n#define and &&\n#define or ||\nmain(){\n\tint arr[105][105],s[105]={0},x,y,i,j,t;\n\tscanf(\"%d %d\",&x,&y);\n\tfor(i=0;i<x;i++){\n\t\tscanf(\"%d\",&t);\n\t\tfor(j=0;j<t;j++){\n\t\t\tscanf(\"%d\",&arr[j][i]);\n\t\t\ts[arr[j][i]-1]++;\n\t\t}\n\t}\n\tfor(i=0;i<y;i++){\n\t\tif(!s[i]){\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"YES\");\n}\n"}
{"similarity_score": 0.4057377049180328, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "34eadea00dbb1e2a4d17d839799bab00", "bug_code_uid": "fdf1342c5b8453fdb2b590a962e796be", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "4a36758156a328afa12db401ea65dd1b", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n//using namespace std;\nint main(void)\n{\n\tint n,a[3],y,z,i,j;\n\tscanf(\"%d\",&n);\n\tfor(j=0;j<n;j++)\n\t{\n\tfor(i=0;i<3;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tz=0;\n\tfor(i=0;i<3;i++)\n\t{\n\t\tif(a[i]==1)\n\t\t{\n\t\t\tz++;\n\t\t}\n\t}\n\tif(z>=2)\n\t{\n\t\ty++;\n\t}\n\t}\n\tprintf(\"%d\",y);\n}", "fixed": "#include<stdio.h>\n//using namespace std;\nint main(void)\n{\n\tint n,a,b,c,j,y=0;\n\tscanf(\"%d\",&n);\n\tfor(j=0;j<n;j++)\n\t{\n\t\t\n\t\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\t\n\t\n\t\n\t\tif((a+b+c)>1)\n\t\t{\n\t\t\ty++;\n\t\t}\n\t}\n\tprintf(\"%d\",y);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9989806320081549, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c2c590f6d39d6e3693ee12b8c2d0359c", "bug_code_uid": "ec78d77377196547161e0a305d9a49ea", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "1077a40d3ff26b4fd9556334bd993fa7", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n   int n, a, b, bofa[100000]={0,}; //bofa[a]=b\n   int i, prevb=0;\n   \n   scanf(\"%d\", &n);\n   for(i=0; i<n; i++)\n   {\n      scanf(\"%d %d\", &a, &b);\n      bofa[a] = b;\n   }\n   \n   for(i=0; i<n; i++)\n   {\n      if(bofa[i]!=0)\n      {\n         if(bofa[i]>prevb)\n         {\n            prevb = bofa[i];\n         }\n         else\n         {\n            printf(\"Happy Alex\");\n            return 0;\n         }\n      }\n   }\n   \n   printf(\"Poor Alex\");\n   return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n   int n, a, b, bofa[100000]={0,}; //bofa[a]=b\n   int i, prevb=0;\n   \n   scanf(\"%d\", &n);\n   for(i=0; i<n; i++)\n   {\n      scanf(\"%d %d\", &a, &b);\n      bofa[a] = b;\n   }\n   \n   for(i=0; i<=n; i++)\n   {\n      if(bofa[i]!=0)\n      {\n         if(bofa[i]>prevb)\n         {\n            prevb = bofa[i];\n         }\n         else\n         {\n            printf(\"Happy Alex\");\n            return 0;\n         }\n      }\n   }\n   \n   printf(\"Poor Alex\");\n   return 0;\n}\n"}
{"similarity_score": 0.9409616555082166, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "4333b68a0210a8cd92fdfe32c3557cf4", "bug_code_uid": "f2eb3ed71a2f9eb3756e1593571a1c8a", "src_uid": "4ecbfc792da55f458342c6eff2d5da5a", "apr_id": "3acf4014a24b7b0f87ccc45f74ab7528", "difficulty": 1500, "tags": ["dsu", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint i, x, y, n, m, succs[101][100], nsuccs[101], seen[101], cedge[101], ncycles ;\n\nint dfs(int root, int from)\n{\n\tint k ;\n\t\n\tseen[root] = 1 ;\n\t\t\n\tfor (k = 0 ; k < nsuccs[root] ; k++)\n\t{\n\t\tif (!seen[succs[root][k]])\n\t\t{\n\t\t\tif (dfs(succs[root][k], root))\n\t\t\t{\n\t\t\t\treturn 1 ;\n\t\t\t}\t\t\t\t\n\t\t}\n\t\telse if (succs[root][k] != from && cedge[root] != succs[root][k])\n\t\t{\n\t\t\tcedge[succs[root][k]] = root ;\n\t\t\t\n\t\t\tif (++ncycles == 2)\n\t\t\t{\n\t\t\t\treturn 1 ;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0 ;\n}\n\nint main(void)\n{\n\tscanf(\"%d %d\", &n, &m) ;\n\t\t\n\tfor (i = 0 ; i < m ; i++)\n\t{\n\t\tscanf(\"%d %d\", &x, &y) ;\n\t\t\n\t\tsuccs[x][nsuccs[x]++] = y ;\n\t\tsuccs[y][nsuccs[y]++] = x ;\n\t}\n\t\n\tif (n != m)\n\t{\n\t\tprintf(\"NO\") ;\n\t}\n\telse\n\t{\n\t\tdfs(1, 0) ;\n\n\t\tprintf((ncycles == 1 ? \"FHTAGN!\" : \"NO\")) ;\n\t}\n\t\n\treturn 0 ;\n}\n", "fixed": "#include <stdio.h>\n\nint i, x, y, n, m, succs[101][100], nsuccs[101], seen[101], cedge[101], ncycles ;\n\nint dfs(int root, int from)\n{\n\tint k ;\n\t\n\tseen[root] = 1 ;\n\t\t\n\tfor (k = 0 ; k < nsuccs[root] ; k++)\n\t{\n\t\tif (!seen[succs[root][k]])\n\t\t{\n\t\t\tif (dfs(succs[root][k], root))\n\t\t\t{\n\t\t\t\treturn 1 ;\n\t\t\t}\t\t\t\t\n\t\t}\n\t\telse if (succs[root][k] != from && cedge[root] != succs[root][k])\n\t\t{\n\t\t\tcedge[succs[root][k]] = root ;\n\t\t\t\n\t\t\tif (++ncycles == 2)\n\t\t\t{\n\t\t\t\treturn 1 ;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0 ;\n}\n\nint main(void)\n{\n\tscanf(\"%d %d\", &n, &m) ;\n\t\t\n\tfor (i = 0 ; i < m ; i++)\n\t{\n\t\tscanf(\"%d %d\", &x, &y) ;\n\t\t\n\t\tsuccs[x][nsuccs[x]++] = y ;\n\t\tsuccs[y][nsuccs[y]++] = x ;\n\t}\n\t\n\tif (n != m)\n\t{\n\t\tprintf(\"NO\") ;\n\t}\n\telse\n\t{\n\t\tfor (i = 1 ; i <= n ; i++)\n\t\t{\n\t\t\tif (!seen[i] && dfs(i, 0))\n\t\t\t{\n\t\t\t\tbreak ;\n\t\t\t}\n\t\t}\n\n\t\tprintf((ncycles == 1 ? \"FHTAGN!\" : \"NO\")) ;\n\t}\n\t\n\treturn 0 ;\n}\n"}
{"similarity_score": 0.8435814455231931, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6a597a7e0439c0c239958ad5d7631031", "bug_code_uid": "8f9298c4ce51a9e8606ec557f64a8085", "src_uid": "06898c5e25de2664895f512f6b766915", "apr_id": "b4484434213d29eb9f8559ae0c5f68e5", "difficulty": 1100, "tags": ["implementation", "sortings", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define N 100\n#define L 100\n\nint main() {\n\tstatic char ss[N][L + 1], s[L + 1];\n\tstatic int kk[L + 1];\n\tint n, k, i, l, min, max;\n\n\tscanf(\"%d%d\", &n, &k);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%s\", ss[i]);\n\t\tkk[(int) strlen(ss[i])]++;\n\t}\n\tscanf(\"%s\", s);\n\tmin = 0;\n\tfor (l = 1; l < (int) strlen(s); l++)\n\t\tmin += kk[l];\n\tmax = min + kk[(int) strlen(s)];\n\tprintf(\"%d %d\\n\", min + 1, max + ((max - 1) / k) * 5);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\n#define N 100\n#define L 100\n\nint main() {\n\tstatic char ss[N][L + 1], s[L + 1];\n\tstatic int kk[L + 1];\n\tint n, k, i, l, x, min, max;\n\n\tscanf(\"%d%d\", &n, &k);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%s\", ss[i]);\n\t\tkk[(int) strlen(ss[i])]++;\n\t}\n\tscanf(\"%s\", s);\n\tmin = 0;\n\tx = strlen(s);\n\tfor (l = 1; l < x; l++)\n\t\tmin += kk[l];\n\tmax = min + kk[x];\n\tprintf(\"%d %d\\n\", min + 1 + (min / k) * 5, max + ((max - 1) / k) * 5);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9638055842812823, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "14b382fd7d4e8af5e080e3b5ac1d6a04", "bug_code_uid": "80c79e789f47762098eadaab7653887d", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "3e3153c719a292f6288c82e2fb566dd3", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,num,i,j=0,r25=0,r50=0;\n\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&num);\n\n        if(num==25)r25++;\n        else if(num==50){\n            r50++;\n            if(r25>0)r25--;\n            else j++;\n        }\n        else {\n            if(r25>0 && r50>0)r25--,r50--;\n            else if(r25>=3)r25-=3;\n            else if(r50>=2)r50-=2;\n            else j++;\n        }\n    }\n\n    if(j==0)printf(\"YES\");\n    else printf(\"NO\");\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,num,i,j=0,r25=0,r50=0;\n\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&num);\n\n        if(num==25)r25++;\n        else if(num==50){\n            r50++;\n            if(r25>0)r25--;\n            else j++;\n        }\n        else {\n            if(r25>0 && r50>0)r25--,r50--;\n            else if(r25>=3)r25-=3;\n            else j++;\n        }\n    }\n\n    if(j==0)printf(\"YES\");\n    else printf(\"NO\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.5490196078431373, "equal_cnt": 19, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 10, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "93bcf29a1070159f53ee7fb7671d8dae", "bug_code_uid": "dba475a976bdf7757d5d97403cbf1a2e", "src_uid": "a544dd9fd96379f66a960de6f973dd50", "apr_id": "a4a834ca9c046f07b6f7dacd452e9e57", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\nint a,b,ans,i,n,t;\r\nscanf(\"%d\",&t);\r\nwhile(t--){\r\nans=0;\r\nscanf(\"%d\",&n);\r\nscanf(\"%d\",&a);\r\nfor(i=1;i<n;i++)\r\n{scanf(\"%d\",&b);\r\n\tif((b<a&&a>2*b)||(b>a&&b>2*a))\r\n\t{ans+=1;\r\n\tcount+=(b-a)/2;}\t\r\n\ta=b;\r\n}\r\nprintf(\"%d\",ans);\r\n}\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\nint main(){\r\n\tint t,i,ans = 0,a,n,b,x;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\tans=0;\r\n\tscanf(\"%d\",&n);\r\n\tscanf(\"%d\",&a);\r\n\tfor(i=1;i<n;i++){\r\n\t\tscanf(\"%d\",&b);\r\n\t\tif((a>b&&a>2*b)||(b>a&&b>2*a)){\r\n\t\tx=abs(log2((float)a/b));\r\n\t\tx=a>b?(b*pow(2,x)==a?(x-1):x):(a*pow(2,x)==b?(x-1):x);\r\n\t\tans+=x;\r\n\t   }\r\n\r\n\t\ta=b;\r\n\t}\r\n\t\tprintf(\"%d\\n\",ans);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.3136094674556213, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "1d9ce726e93cac2a42edb65e20d4059a", "bug_code_uid": "5b72ac62586a9496a173eba31dbbfd2d", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "ed872b4003e2b64f01664098014bfaa1", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    char s[1000];\n    int i,j=0,k=0,l;\n    scanf(\"%s\",&s);\n    l=strlen(s);\n        for(i=0;i<l;i=i+2){\n            if(s[i]=='A'&&s[i+1]=='B') j++;\n            if(s[i]=='B'&&s[i+1]=='A') k++;\n        }\n        if(j>=1&&k>=1) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nmain()\n{char s[100000];long long int i,j,k,l;scanf(\"%s\",&s);l=strlen(s);for(i=0;i<l-1;i++){if(s[i]=='A'&&s[i+1]=='B'){for(j=i+2;j<l-1;j++){if(s[j]=='B'&&s[j+1]=='A'){printf(\"YES\\n\");return 0;\n}}}}for(i=0;i<l-1;i++){if(s[i]=='B'&&s[i+1]=='A'){for(j=i+2;j<l-1;j++){if(s[j]=='A'&&s[j+1]=='B'){printf(\"YES\\n\");return 0;\n}}}}printf(\"NO\\n\");}\n"}
{"similarity_score": 0.9264475743348983, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "de8aad3067ccb894df00a6c367a238ed", "bug_code_uid": "e09e5ac2557e318c8dea8596f5e599c6", "src_uid": "f10aa45956e930df3df0e23f2592c8f1", "apr_id": "aa9fdf2c5710630104d0d8da99c01e0a", "difficulty": 1000, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n       int t;\r\n       for(scanf(\"%d\",&t);t--;){\r\n              long int a,b;\r\n              scanf(\"%ld%ld\",&a,&b);\r\n              if(b==1)\r\n                     printf(\"NO\\n\");\r\n              else{\r\n                     printf(\"YES\\n%ld %ld %ld\\n\",a*b,a,a*b+a);\r\n              }\r\n       }\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n       int t;\r\n       for(scanf(\"%d\",&t);t--;){\r\n              long long int a,b;\r\n              scanf(\"%lld %lld\",&a,&b);\r\n              if(b==1)\r\n                     printf(\"NO\\n\");\r\n              else\r\n                     printf(\"YES\\n%lld %lld %lld\\n\",a*b,a,a*b+a);\r\n       }\r\n}"}
{"similarity_score": 0.8452982810920121, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "0f8ba37244558a7cea82b1a7eb98e492", "bug_code_uid": "21e1ccf92afc1605a23f733fbd95e0ff", "src_uid": "7ff7f47cee182d2542754e412f6aab1a", "apr_id": "314946f1c8b2042f60e3396b844381b7", "difficulty": 1600, "tags": ["dp", "two pointers", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main(){\n//\tlong long int \n    double a[100001],b[100001]={0};\n\tlong n;\n\tint i;\n\tdouble f=0;\n\t\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++){\n\t\tscanf(\"%lf\",&a[i]);\n\t\tif (i) a[i-1]=fabs(a[i-1]-a[i]);\n\t}\n\tb[n-1]=a[n-1];\n\tb[n-2]=a[n-2];\n\tf=b[n-2];\n\tfor (i=n-3;i>-1;i--){\n\t\tif (a[i]>(b[i+2]-a[i+1]+a[i])) b[i]=a[i];\n\t\telse b[i]=b[i+2]-a[i+1]+a[i];\n\t\tif (b[i]>f) f=b[i];\n\t}\n\tprintf(\"%.0f\\n\",f);\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main(){\n//\tlong long int \n    double a[100001],b[100001]={0};\n\tlong n;\n\tint i;\n\tdouble f=0;\n\t\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++){\n\t\tscanf(\"%lf\",&a[i]);\n\t\tif (i) a[i-1]=fabs(a[i-1]-a[i]);\n\t}\n\ta[n-1]=0;\n\tb[n-1]=a[n-1];\n\tb[n-2]=a[n-2];\n\tf=b[n-2];\n\tfor (i=n-3;i>-1;i--){\n\t\tif (a[i]>(b[i+2]-a[i+1]+a[i])) b[i]=a[i];\n\t\telse b[i]=b[i+2]-a[i+1]+a[i];\n\t\tif (b[i]>f) f=b[i];\n\t}\n//\tfor (i=0;i<n;i++){\n//\t\tprintf(\"%.0f \",a[i]);\n//\t}printf(\"\\n\"); \n//\tfor (i=0;i<n;i++){\n//\t\tprintf(\"%.0f \",b[i]);\n//\t}printf(\"\\n\"); \n\tprintf(\"%.0f\\n\",f);\n}"}
{"similarity_score": 0.2113323124042879, "equal_cnt": 20, "replace_cnt": 10, "delete_cnt": 4, "insert_cnt": 7, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "ac4d874cc3646fb47448f405639f0eba", "bug_code_uid": "1ffb3925e11fa4033b797d847f44454d", "src_uid": "e4381bd9f22c0e49525cc05cc5cd2399", "apr_id": "3133686f75d5125d782436b1cec8d9f1", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int x=0,len=0,n,i,count=0,b,c;\n    scanf(\"%d\",&n);\n    char str[n+1];\n    scanf(\"%s\",str);\n    len=strlen(str);\n    if(len<=2)\n        printf(\"0\\n\");\n\n    else if(len>=3)\n    {\n        for(i=1; i<=n; i++)\n        {\n            if(str[i-1]=='U' && str[i]=='U' && str[i+1]=='U')\n                count++;\n            else if(str[i-1]=='R' && str[i]=='U' && str[i+1]=='U')\n                count++;\n            else if(str[i-1]=='U' && str[i]=='U' && str[i+1]=='R')\n                count++;\n            else if(str[i-1]=='R' && str[i]=='R' && str[i+1]=='R')\n                count++;\n        }\n        printf(\"%d\\n\",count-1);\n    }\n    return 0;\n}\n", "fixed": "//codeforces\n#include<Stdio.h>\n#include<string.h>\n\nint main()\n{\n    char str1[1000000];\n\n    int n=0,i,j,num,a=0,b=0;\n    scanf(\"%d\", &num);\n    if(num==1)\n    {\n        //need to print\n        printf(\"0\\n\");\n        return 0;\n    }\n    scanf(\"%s\", &str1);\n    for(i=0; i<num-1; i++)\n    {\n        if(str1[i]=='U')  b++;\n\n        else\n        {\n            //need count;\n            a++;\n\n        }\n\n        if(a==b)\n        {\n            if(str1[i+1]==str1[i])\n            {\n                //count\n                n++;\n            }\n        }\n    }\n    //need to print\n    printf(\"%d\\n\",n);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9925373134328358, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "adec50e0d87ac21a9c352ccf2ee260c8", "bug_code_uid": "d55af9c07c0ba65f896a019e91c672d3", "src_uid": "14fc3a7fef44a02791aee62838c4c8c8", "apr_id": "bfe779606b21f29ba2f25a01ab881c1b", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,i;\n    scanf(\"%d %d\",&n,&m);\n    printf(\"%d\\n\",n+m-1);\n    for(i=1;i<=n;i++){\n        printf(\"%d \",i);\n        printf(\"1\\n\");\n    }\n    for(i=1;i<=n;i++){\n        printf(\"1 \");\n        printf(\"%d\\n\",i);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i;\n    scanf(\"%d %d\",&n,&m);\n    printf(\"%d\\n\",n+m-1);\n    for(i=1;i<=n;i++){\n        printf(\"%d \",i);\n        printf(\"1\\n\");\n    }\n    for(i=2;i<=m;i++){\n        printf(\"1 \");\n        printf(\"%d\\n\",i);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8960931005818786, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "dfb5a051bc2a76789de1f606d34443a0", "bug_code_uid": "ec3f080e7579be3fd7521030eac2c4a3", "src_uid": "e32f0615541d97a025bc99c3cbf5380e", "apr_id": "a412033953a36fee1974ceb49ebbaa14", "difficulty": 1300, "tags": ["combinatorics", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int casos;\n    int breakUno[10010];\n    breakUno[0]=1;\n    for (int i=1; i<10001; i++){\n        breakUno[i] = breakUno[i-1]+i;\n    }\n    \n    \n    scanf(\"%d\", &casos);\n    while (casos--)\n    {\n       long int n, k;\n       scanf(\"%ld %ld\", &n, &k);\n       //Calcular breakpoint\n       int bk;\n       char cad[n+1];\n       for (bk=0; bk<10001 && breakUno[bk]<=k; bk++);\n       for (int i=0; i<n; i++) cad[i] = 'a';\n       cad[n] = '\\0';\n       cad[n-bk-1] = 'b';\n       cad[n-(k-breakUno[bk-1]+1)] = 'b';\n        printf(\"%s\\n\", cad);\n    }\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n#define tam 2000000\nint main(){\n    int casos;\n    int breakUno[tam];\n    breakUno[0]=1;\n    for (int i=1; i<tam; i++){\n        breakUno[i] = breakUno[i-1]+i;\n    }\n    \n    \n    scanf(\"%d\", &casos);\n    while (casos--)\n    {\n       long int n, k;\n       scanf(\"%ld %ld\", &n, &k);\n       //Calcular breakpoint\n       int bk;\n       char cad[n+1];\n       for (bk=0; bk<tam && breakUno[bk]<=k; bk++);\n       for (int i=0; i<n; i++) cad[i] = 'a';\n       cad[n] = '\\0';\n       cad[n-bk-1] = 'b';\n       cad[n-(k-breakUno[bk-1]+1)] = 'b';\n        printf(\"%s\\n\", cad);\n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.9007633587786259, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "915f00493eb676c1e8930ac1cb9d7ea9", "bug_code_uid": "8305f8b2ce1ab8e7e29fc030089a0230", "src_uid": "5c12573b3964ee30af0349c11c0ced3b", "apr_id": "cb7c61ad26d2d34c574ea3b8ba6b9d7c", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <memory.h>\n\nint main(void){\n\tint n, s, time = 0;\n\tscanf(\"%d %d\", &n, &s);\n\tint pnr[n];\n\tmemset(pnr, 0, sizeof(pnr));\n\tfor(int i = 0, pos, temp; i < n; i++){\n\t\tscanf(\"%d\", &pos);\n\t\tscanf(\"%d\", &temp);\n\t\tif(temp > pnr[n - pos]) pnr[n - pos] = temp;\n\t}\n\tfor(int i = 0; i < n; i++){\n\t\tif(pnr[i] <= time) time++;\n\t\telse  time = pnr[i];\n\t}\n\tprintf(\"%d\", time);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <memory.h>\n\nint main(void){\n\tint n, s, time = 0;\n\tscanf(\"%d %d\", &n, &s);\n\tint pnr[s];\n\tmemset(pnr, 0, sizeof(pnr));\n\tfor(int i = 0, pos, temp; i < n; i++){\n\t\tscanf(\"%d\", &pos);\n\t\tscanf(\"%d\", &temp);\n\t\tif(temp > pnr[s - pos]) pnr[s - pos] = temp;\n\t}\n\tfor(int i = 0; i < s; i++){\n\t\tif(pnr[i] > time) time = pnr[i];\n\t\ttime ++;\n\t}\n\tprintf(\"%d\", time);\n\treturn 0;\n}\n"}
{"similarity_score": 0.5638031693077564, "equal_cnt": 21, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "cdceba9296f08c3c346a8d0ac44b9a4c", "bug_code_uid": "ce83e953216452ead0fc8ef07c1a9ce0", "src_uid": "c569b47cf80dfa98a7105e246c3c1e01", "apr_id": "5d003ae4a00e6ef6daa618cfa2dc63fe", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int n,k,d=0;\r\n    scanf(\"%d\",&n);\r\n    char s[50];\r\n    char c;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        d=0;\r\n        scanf(\"%s\",s);\r\n        scanf(\"%c\",&c);\r\n    k=strlen(s);\r\n    if(k%2==0)\r\n    {\r\n        printf(\"NO\\n\");\r\n    }\r\n    else\r\n    {\r\n        for(int j=0;j<k;j++)\r\n        {\r\n            if(s[j]==c)\r\n            {\r\n                printf(\"YES\\n\");\r\n                d=1;\r\n                j=k;\r\n            }\r\n        }\r\n   if(d==0)\r\n   printf(\"NO\\n\");\r\n    }\r\n   return 0; \r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int n, d = 0;\r\n    scanf(\"%d\", &n);\r\n    char s[n][50];\r\n    char c[n][1];\r\n    int k[n];\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        scanf(\"%s\", s[i]);\r\n        k[i] = strlen(s[i]);\r\n        scanf(\"%s\", c[i]);\r\n    }\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        d = 0;\r\n        for (int j = 0; j < k[i]; j++)\r\n        {\r\n            if (s[i][j] == c[i][0])\r\n            {\r\n                printf(\"YES\\n\");\r\n                d = 1;\r\n                j = k[i];\r\n            }\r\n            j++;\r\n        }\r\n        if (d == 0)\r\n            printf(\"NO\\n\");\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.5725699067909454, "equal_cnt": 18, "replace_cnt": 10, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "9620f1bce4ebffbb7a751849548cdf0a", "bug_code_uid": "65de0aa780b8d37fc85a297caee0788e", "src_uid": "2584fa8c1adb1aa8cd5c28a8610ff72d", "apr_id": "23e70c79ed03f4eedbcc5e6e9d4aa18b", "difficulty": 1000, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,y,div=1,i,t=0;;\n    scanf(\"%d\",&n);\n\n    if(n==4) printf(\"4\\n\");\n    else if(n==7) printf(\"7\\n\");\n    else {\n    y=1;\n    while(div%7!=0)\n    {\n    div= (n-(4*y));\n    y++;\n    if(div<0) { printf(\"-1\\n\"); t=1; break;  }\n    }\n    div=div/7;\n    if(t==0){\n    for(i=0;i<y-1;i++) printf(\"4\");\n    for(i=0;i<div;i++) printf(\"7\");\n    }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,y,four=0,seven=0,i,t=0;;\n    scanf(\"%d\",&n);\n\n        while(n%7!=0)\n        {\n            n=n-4;\n            four++;\n            if(n<0) { printf(\"-1\\n\"); t=1; break;  }\n        }\n        seven=n/7;\n\n    if(t==0){\n    for(i=1;i<=four;i++) printf(\"4\");\n    for(i=1;i<=seven;i++) printf(\"7\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.42718446601941745, "equal_cnt": 10, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "eee8959313898a3a49c33e91a070886c", "bug_code_uid": "e061873f5b51a3ccf4e1c628a8024d66", "src_uid": "3a93a6f78b41cbb43c616f20beee288d", "apr_id": "9e96d57cd693266f4abe02ec1a1678d3", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<cstdio>\n#include<iostream>\n#include<deque>\n#include<utility>\nusing namespace std;\n\ndeque<pair<int, int> > d;\n\nint main () {\n  int n, k, sum, i, l, r;\n  \n  scanf(\"%d%d\", &n, &k);\n  d.clear();\n  for(i=sum=0; i<n; ++i) {\n    scanf(\"%d%d\", &l, &r);\n    sum += r-l+1;\n    d.push_back(make_pair(l, r));\n  }\n  printf(\"%d\\n\", (sum%k) ? k-(sum%k) : 0);\n  \n  return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main () {\n  long long int n, k, sum, i, l, r;\n  \n  scanf(\"%I64d%I64d\", &n, &k);\n  for(i=sum=0; i<n; ++i) {\n    scanf(\"%I64d%I64d\", &l, &r);\n    sum += r-l+1;\n  }\n  printf(\"%I64d\\n\", (sum%k) ? k-(sum%k) : 0);\n  \n  return 0;\n}\n"}
{"similarity_score": 0.9981308411214953, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ce719cf3a11b384e229d43383f924ca1", "bug_code_uid": "c1a2f20e176f3ca022afbf4873f5ff16", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "4cd6d65e3fdc030b3f416c8e795c169c", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\r\n\r\n#include <stdio.h>\r\n\r\nvoid check(int w, int h, int n) {\r\n\tint count = 0;\r\n\r\n\tif (n == 1) {\r\n\t\tprintf(\"YES\\n\");\r\n\t\treturn;\r\n\t}\r\n\r\n\twhile (count < n) {\r\n\t\tif (w % 2 != 0 && h % 2 != 0) {\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (w % 2 == 0) {\r\n\t\t\tcount *= 2;\r\n\t\t\tw /= 2;\r\n\t\t}\r\n\t\tif (h % 2 == 0) {\r\n\t\t\tcount *= 2;\r\n\t\t\th /= 2;\r\n\t\t}\r\n\r\n\t}\r\n\tprintf(\"YES\\n\");\r\n}\r\n\r\nint main() { \r\n\tint t, w, h, n;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tscanf(\"%d %d %d\", &w, &h, &n);\r\n\t\tcheck(w, h, n);\r\n\t}\r\n\treturn 0; \r\n}", "fixed": "#define _CRT_SECURE_NO_WARNINGS\r\n\r\n#include <stdio.h>\r\n\r\nvoid check(int w, int h, int n) {\r\n\tint count = 1;\r\n\r\n\tif (n == 1) {\r\n\t\tprintf(\"YES\\n\");\r\n\t\treturn;\r\n\t}\r\n\r\n\twhile (count < n) {\r\n\t\tif (w % 2 != 0 && h % 2 != 0) {\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (w % 2 == 0) {\r\n\t\t\tcount *= 2;\r\n\t\t\tw /= 2;\r\n\t\t}\r\n\t\tif (h % 2 == 0) {\r\n\t\t\tcount *= 2;\r\n\t\t\th /= 2;\r\n\t\t}\r\n\r\n\t}\r\n\tprintf(\"YES\\n\");\r\n}\r\n\r\nint main() { \r\n\tint t, w, h, n;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tscanf(\"%d %d %d\", &w, &h, &n);\r\n\t\tcheck(w, h, n);\r\n\t}\r\n\treturn 0; \r\n}"}
{"similarity_score": 0.24586628324946083, "equal_cnt": 20, "replace_cnt": 16, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "9d95d40412a840e125cd42f5132d85c9", "bug_code_uid": "0de1034a6fb0d6c2cb061330fbbcdc8b", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "8203a1c4391a26403ea81e684962e1b7", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n\nint main()\n{\n    long long int n1,n;\n    long long int i,j,k=0,l,m;\n    scanf(\"%I64d\",&m);\n    char a[m][5];\n    for(i=0; i<m; i++)\n    {\n        scanf(\"%I64d\",&n);\n        k=0;\n        n1=sqrt(n);\n        //printf(\"%I64d\",n1);\n        if(n>=4&&(n1*n1==n)){\n        if(n==4)strcpy(a[i],\"YES\");\n        else\n        {\n            for(j=2; j<n1; j++)\n            {\n                if(n1%j==0)k++;\n            }\n            if(k==0)strcpy(a[i],\"YES\");\n            else strcpy(a[i],\"NO\");\n            k=0;\n        }}\n        else  strcpy(a[i],\"NO\");\n        //else\n\n    }\n    for(i=0; i<m; i++)printf(\"%s\\n\",a[i]);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nlong long int a[1000002];\n\nvoid pp()\n{\n    int i,j,k=0,l;\n    a[0]=0;\n    a[1]=0;\n    a[2]=1;\n    for(i=3;i<1000002;i++)\n    {\n        if(i%2==0){a[i]=0;continue;}\n        l=sqrt(i);\n        for(j=3;j<=l;j++)\n        {\n           if(i%j==0) {a[i]=0;k++;break;}\n        }\n        if(k==0)a[i]=1;\n        k=0;\n    }\n}\nint main()\n{\n    long long int i,l,h,o,f;\n    pp();\n    scanf(\"%I64d\",&l);\n    long long int  ar[l];\n    for(i=0;i<l;i++)\n    {\n        scanf(\"%I64d\",&ar[i]);\n    }\n    for(i=0;i<l;i++)\n    {\n        o=sqrt(ar[i]);\n        if(o*o==ar[i]){\n        if(a[o]==1)printf(\"YES\\n\");\n        else printf(\"NO\\n\");}\n        else printf(\"NO\\n\");\n    }\n    return 0;\n\n\n}\n"}
{"similarity_score": 0.6890243902439024, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "45e1b8d01895135c6f7b3135776d1d3b", "bug_code_uid": "3fa65389ffc1a74d03ca46c0688c0a38", "src_uid": "b46244f39e30c0cfab592a97105c60f4", "apr_id": "6b75961387772f760cb29c1a355bae85", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint gcd(int i,int j)\n{\n    if(i==j)\n    return i;\n    else if(j%i==0)\n    return i;\n    else if(i%j==0)\n    return j;\n    else if(i>j)\n    return gcd(i%j,i);\n    else if(i<j)\n    return gcd(i,j%i);\n}\n\nint main() {\n\t//code\n\tint j,t;\n\tscanf(\"%d\",&t);\n\tfor(j=0;j<t;j++)\n\t{\n\t    int n,i,k,l=0,m;\n\t    int a[100000];\n\t    scanf(\"%d\",&n);\n\t    for(i=1;i<n;i++)\n\t    {\n\t        for(k=i+1;k<=n;k++)\n\t        {\n\t            a[l]=gcd(i,k);   \n\t            l++;\n\t        }\n\t    }\n\t    m=a[0];\n\t    for(i=0;i<l;i++)\n\t    {\n\t        if(m<a[i])\n\t        m=a[i];\n\t    }\n\t    printf(\"%d\\n\",m);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint gcd(int i,int j)\n{\n    if(i==j)\n    return i;\n    else if(j%i==0)\n    return i;\n    else if(i%j==0)\n    return j;\n    else if(i>j)\n    return gcd(i%j,i);\n    else if(i<j)\n    return gcd(i,j%i);\n}\n\nint main() {\n\t//code\n\tint j,t;\n\tscanf(\"%d\",&t);\n\tfor(j=0;j<t;j++)\n\t{\n\t    int n,i,k,l=0,m;\n\t    scanf(\"%d\",&n);\n\t    printf(\"%d\\n\",n/2);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9935649935649936, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2a1d0707685b16f668d74876ebc6b206", "bug_code_uid": "2c72366c744b97905e859d19dc831d12", "src_uid": "5139d222fbbfa70d50e990f5d6c92726", "apr_id": "be6dcff1011f16795e96112056bcc0bb", "difficulty": 1100, "tags": ["brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a[100],q,n,i,k,c,j;\n\tscanf(\"%d\",&q);\n\tfor(k=0;k<q;k++)\n\t{\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tc=0;\n\t\tfor(i=0;i<n-2;i++)\n\t\t{\n\t\t\tfor(j=2;j<n;j++)\n\t\t\t{\n\t\t    if(a[i]==a[j])\n\t\t    {\n\t\t    printf(\"YES\\n\");\n\t\t    c=1;\n\t\t    break;\n     \t    }\n     \t    }\n     \tif(c==1)\n     \tbreak;\t   \n    \t}\n    \tif(c!=1)\n    \tprintf(\"NO\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a[5000],q,n,i,k,c,j;\n\tscanf(\"%d\",&q);\n\tfor(k=0;k<q;k++)\n\t{\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tc=0;\n\t\tfor(i=0;i<n-2;i++)\n\t\t{\n\t\t\tfor(j=i+2;j<n;j++)\n\t\t\t{\n\t\t    if(a[i]==a[j])\n\t\t    {\n\t\t    printf(\"YES\\n\");\n\t\t    c=1;\n\t\t    break;\n     \t    }\n     \t    }\n     \tif(c==1)\n     \tbreak;\t   \n    \t}\n    \tif(c!=1)\n    \tprintf(\"NO\\n\");\n    }\n}\n"}
{"similarity_score": 0.6628489620615605, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "ac94c588bd94edc5f1197e39604fc912", "bug_code_uid": "eb2fe5c9b28e4585a7ac3b883c7c741e", "src_uid": "2b346d5a578031de4d19edb4f8f2626c", "apr_id": "a1f9f6922216ba46cb8945332fcb0140", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[100],b[100];\n    int c,d=0;\n    scanf(\"%s %s\",&a,&b);\n    if (strlen(a)!=strlen(b))\n            printf(\"No\");\n    else if (strlen(a)==strlen(b)){\n        for(c=0;c<strlen(a);c++){\n            if(a[c]=='a'||a[c]=='e'||a[c]=='i'||a[c]=='o'||a[c]=='u'){\n                if(b[c]=='a'||b[c]=='e'||b[c]=='i'||b[c]=='o'||b[c]=='u')\n                d++;\n            }\n           else if(a[c]!='a'||a[c]!='e'||a[c]!='i'||a[c]!='o'||a[c]!='u')\n                {\n                   if(b[c]!='a'||b[c]!='e'||b[c]!='i'||b[c]!='o'||b[c]!='u')\n                    d++;\n            }\n        }\n        if(d==strlen(a))\n            printf(\"Yes\");\n        else printf(\"No\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[2000],b[2000];\n    int c,d=0;\n    scanf(\"%s %s\",&a,&b);\n    if (strlen(a)!=strlen(b))\n            printf(\"No\");\n    else if (strlen(a)==strlen(b)){\n        for(c=0;c<strlen(a);c++){\n            if((a[c]=='a'||a[c]=='e'||a[c]=='i'||a[c]=='o'||a[c]=='u')&&(b[c]=='a'||b[c]=='e'||b[c]=='i'||b[c]=='o'||b[c]=='u'))\n                d++;\n           else if((a[c]!='a'&&a[c]!='e'&&a[c]!='i'&&a[c]!='o'&&a[c]!='u')&&(b[c]!='a'&&b[c]!='e'&&b[c]!='i'&&b[c]!='o'&&b[c]!='u'))\n                d++;\n        }\n        if(d==strlen(a))\n            printf(\"Yes\");\n        else printf(\"No\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.994413407821229, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "aa7192ba75a7f7bc181644f49e6d2d7d", "bug_code_uid": "0c83a2ed295d1286d77376efaefd70bc", "src_uid": "f110b9351fe8ff20676d11ecfc92aee3", "apr_id": "0bb447ab6df7e828f962ce3fa38fb290", "difficulty": 1300, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint a[1000000];\nint main()\n{\n\n\tint i=0;\n\tlong m,n;\n\tscanf(\"%d %d\",&n,&m);\n\tint sum=0;n=m;\n\twhile(n--)\n\t{\t\n\t\tmemset(a, 0, sizeof(a));\n\t\tint c=0,j,x,k,z,b=0;\n\t\tscanf(\"%d\",&k);\n\t\tfor(j=0;j<k;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&b);\n\t\t\tif(b>0) a[b]++;\n\t\t\tif(b<0)\ta[b+1000000]++;\n\t\t}\n\t\tfor(i=0;i<1000000;i++)\n\t\t{\n\t\t\tif(a[i]>0&&a[(1000000-i)]>0)\tc=1;\n\t\t}\n\t\tif(c==1) sum++;\n\t} \n\tif(sum==m) \tprintf(\"NO\\n\");\n\telse printf(\"YES\\n\");\n\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint a[100000];\nint main()\n{\n\n\tint i=0;\n\tlong m,n;\n\tscanf(\"%d %d\",&n,&m);\n\tint sum=0;n=m;\n\twhile(n--)\n\t{\t\n\t\tmemset(a, 0, sizeof(a));\n\t\tint c=0,j,x,k,z,b=0;\n\t\tscanf(\"%d\",&k);\n\t\tfor(j=0;j<k;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&b);\n\t\t\tif(b>0) a[b]++;\n\t\t\tif(b<0)\ta[b+100000]++;\n\t\t}\n\t\tfor(i=0;i<100000;i++)\n\t\t{\n\t\t\tif(a[i]>0&&a[(100000-i)]>0)\tc=1;\n\t\t}\n\t\tif(c==1) sum++;\n\t} \n\tif(sum==m) \tprintf(\"NO\\n\");\n\telse printf(\"YES\\n\");\n\n}\n"}
{"similarity_score": 0.9796954314720813, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9b31533d1d9d7a1ba30ffab37052e7f8", "bug_code_uid": "01c264f00c1a50bfde532f8b2ccacfbc", "src_uid": "f60ea0f2caaec16894e84ba87f90c061", "apr_id": "b9dbdd31786342e4b4bda72431c6b01e", "difficulty": 1500, "tags": ["constructive algorithms", "number theory", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n;\n\n\tlong long int x,y,z;\n\tscanf(\"%d\",&n);\n\n\tx=n;\n\ty=n+1;\n\tz=x*y;\n\tif(z>1000000000)\n\t\tprintf(\"-1\\n\");\n\telse\n\t\tprintf(\"%lld %lld %lld\\n\",x,y,z);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n;\n\n\tlong long int x,y,z;\n\tscanf(\"%d\",&n);\n\n\tx=n;\n\ty=n+1;\n\tz=x*y;\n\tif(z>1000000000 || n==1)\n\t\tprintf(\"-1\\n\");\n\telse\n\t\tprintf(\"%lld %lld %lld\\n\",x,y,z);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6921119592875318, "equal_cnt": 16, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "a35b6e4d5e87f6d1256d9752980eb37b", "bug_code_uid": "b20633cab7ba1b9e9b6dca1e0038bd09", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "92dec452c90e7588ff43a397bad4846c", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(){\n\tchar c[20000];\n\tint p,ans=23333;\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++){\n\t\t\n\t\tscanf(\"%d\",&p);\n\t\tif(p<11){\n\t\t\tputs(\"NO\");\n\t\t\tcontinue;\n\t\t}ans=p;\n\t\tscanf(\"%s\",&c);\n\t\tfor(int j=0;j<p;j++){\n\t\t\tif(c[j]=='8'){\n\t\t\t\tans=j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(p-ans<11||ans==p){\n\t\t\tputs(\"NO\");\n\t\t}\n\t\telse\n\t\tputs(\"YES\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(){\n\tchar c[23333];\n\tint p,ans=23333;\n\tint n,j,x;\n\tint flag=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++){\n\t\tflag=0;\n\t\tscanf(\"%d\",&p);\n\t\tj=p;\n\t\tscanf(\"%s\",&c);\n\t\tif(p<11){\n\t\t\tputs(\"NO\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int k=0;k<p;k++){\n\t\t\t\n\t\t\tif(c[k]=='8'){\n\t\t\t\tj=k;\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(p-j>=11&&flag){\n\t\t\tputs(\"YES\");\n\t\t}\n\t\telse\n\t\tputs(\"NO\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.19611470860314523, "equal_cnt": 18, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "6952acafbb95f7504ffc50a8daf584f4", "bug_code_uid": "08db1162eec8288968aeddc4dd9da5b7", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "3aa9171b416ea5ee8988d725d457f443", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\nint n;\nscanf(\"%d\", &n);\n\n//int ams[n];\n\nfor(int i=0;i<n;i++){\n    int x;\n    scanf(\"%d\", &x);\n\n    int arr[x];\n    for(int i=0;i<x;i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n\n    int freq[10]={0};\n\n    // printf(\"%d\",num);\n\n    for(int i=0;i<x;i++)\n    {\n        int ans = arr[i];\n        freq[ans-1]++;\n    }\n    int count = 0;\n    int d = 0;\n    for(int i=0;i<x;i++)\n    {\n        if(freq[i]>=3){\n            //freq[i] = ams[i];\n            count++;\n            d = freq[i];\n        }\n    }\n    if(count==0){\n        printf(\"-1\\n\");\n    }\n    else{\n        printf(\"%d\\n\", d);\n    }\n}\n \t \t \t\t\t\t \t \t\t\t  \t\t \t   \t\t\t \t\t", "fixed": "#include <stdio.h>\n\ncounter[200010];\nint main(void)\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\", &n);\n        memset(counter, 0, sizeof(counter));\n        int found = -1;\n        for(int i = 0; i < n; i++)\n        {\n            int a;\n            scanf(\"%d\", &a);\n            if(++counter[a]>=3) found = a;\n        }\n        printf(\"%d\\n\", found);\n    }\n}\n\t     \t\t\t\t\t \t \t \t  \t\t\t \t\t\t \t\t"}
{"similarity_score": 0.5371207230471272, "equal_cnt": 19, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "853c8b9bf9c6f3f811539b12a993395a", "bug_code_uid": "d048e7eb5ab2cf291c87a2437312866a", "src_uid": "ecd9bbc05b97f3cd43017dd0eddd014d", "apr_id": "6e60acc309125bb667a51e7462ee8f5c", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAX 1000000\n\nint Index(int *array,int size,int most);\nint main()\n{\n\tint size,i,x,most=-1,mostn,times[MAX],start[MAX],end[MAX],tmp_most=0,tmp_x;\n\n\tmemset(times,0,sizeof(int)*MAX);\n\tmemset(start,0,sizeof(int)*MAX);\n\tmemset(end,0,sizeof(int)*MAX);\n\n\tscanf(\"%d\",&size);\n\tint array[size];\n\tfor(i=0;i<size;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\ttimes[x] +=1;\n\t\tif(times[x] == 1)\n\t\t\tstart[x]=i;\n\t\tend[x]=i;\n\n\t\tif(times[x] > mostn)\n\t\t{\n\t\t\tmost = x;\n\t\t\tmostn = times[x];\n\t\t\t\n\t\t}\n\n\t\telse if(times[x] == mostn)\n\t\t{\n\t\t\t\n\t\t\tint New = (end[x] - start[x]);\n\t\t\tint Old = (end[most] - start[most]);\n\t\t\tif(Old>New)\n\t\t\t\tmost = x;\n\n\t\t}\n\n\n\t}\n\n\tprintf(\"%d %d\\n\",start[most]+1,end[most]+1);\n\treturn 0;\n}\n\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAX 1000001\n\nint main()\n{\n\tint most,size,i,x,mostn=0;\n\t//printf(\"%d\\n\",most);\n\tint *times = (int *)malloc(sizeof(int)*MAX);\n\tint *start = (int *)malloc(sizeof(int)*MAX);\n\tint *end =  (int *)malloc(sizeof(int)*MAX);\n\n\tmemset(times,0,sizeof(int)*MAX);\n\n\tscanf(\"%d\",&size);\n\tfor(i=0;i<size;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\ttimes[x]+=1;\n\t\t//printf(\"mostn=%d\\n\",mostn);\n\t\tif(times[x] == 1)\n\t\t\tstart[x]=i;\n\t\tend[x]=i;\n\t\t//printf(\"x=%d\\ntimes[x]=%d\\nmostn=%d\\n\",x,times[x],mostn);\n\t\tif(times[x] > mostn)\n\t\t{\n\t\t\tmost = x;\n\t\t\tmostn = times[x];\n\t\t\t//printf(\"\\nmost=%d\\n\",most);\n\t\t}\n\n\t\telse if(times[x] == mostn)\n\t\t{\n\t\t\tif((end[most] - start[most])>(end[x] - start[x]))\n\t\t\t\tmost = x;\n\t\t}\n\t}\n\n\tprintf(\"%d %d\\n\",(start[most])+1,(end[most])+1);\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.9717114568599717, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "dd3eba6c3a3d61070c78f502d716a115", "bug_code_uid": "22ea488fde9014959632b11f02e0d5bf", "src_uid": "3d0685162fbb432c37bb6aeb5fe51f94", "apr_id": "9615ca6aa83d2ee5ca12d3cbc35e2048", "difficulty": 1200, "tags": ["binary search"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<stdbool.h>\r\n#include<limits.h>\r\nint main()\r\n{\r\n    long long int z;\r\n    scanf(\"%lld\",&z);\r\n    for (int i=0;i<z;i++){\r\n        long long int n,h;\r\n        scanf(\"%lld %lld\",&n,&h);\r\n        int arr[n];\r\n        for (int j=0;j<n;j++){\r\n            scanf(\"%lld\",&arr[j]);\r\n        }\r\n        long long int lol=1,hol=h;\r\n        do{\r\n            long int mol=(lol+hol)/2,draugr=0;\r\n            for (int j=0;j<n-1;j++){\r\n                (arr[j]+mol>arr[j+1])?(draugr+=arr[j+1]-arr[j]):(draugr+=mol);\r\n            }while (lol<=hol);\r\n            draugr+=mol;\r\n            (draugr>=h)?(hol=mol-1):(lol=mol+1);\r\n        }\r\n        printf(\"%lld\\n\",lol);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<stdbool.h>\r\n#include<limits.h>\r\nint main()\r\n{\r\n    long long int z;\r\n    scanf(\"%lld\",&z);\r\n    for (int i=0;i<z;i++){\r\n        long long int n,h;\r\n        scanf(\"%lld %lld\",&n,&h);\r\n        int arr[n];\r\n        for (int j=0;j<n;j++){\r\n            scanf(\"%lld\",&arr[j]);\r\n        }\r\n        long long int lol=1,hol=h;\r\n         do{\r\n            long long int mol=(lol+hol)/2,draugr=0;\r\n            for (int j=0;j<n-1;j++){\r\n                (arr[j]+mol>arr[j+1])?(draugr+=arr[j+1]-arr[j]):(draugr+=mol);\r\n            }\r\n            draugr+=mol;\r\n            (draugr>=h)?(hol=mol-1):(lol=mol+1);\r\n        }while (lol<=hol);\r\n        printf(\"%lld\\n\",lol);\r\n    }\r\n}"}
{"similarity_score": 0.7650130548302873, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "011ae5c90375135509031e3b32b48c08", "bug_code_uid": "3ed1d2160f99e578ffdb377997a19f26", "src_uid": "7100fa11adfa0c1f5d33f9e3a1c3f352", "apr_id": "2496a86a73f239b3fa2a6fe4920acb47", "difficulty": 800, "tags": ["geometry", "greedy", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\ntypedef struct stu \r\n{ \r\n\tlong long int x;\r\n\tlong long int y; \r\n}stu;\r\nint cmp( const void *c ,const void *b) \r\n{ \r\n\treturn (*(stu *)c).x < (*(stu *)b).x ? 1 : -1; \r\n}\r\nint max(int x,int y)\r\n{\r\n\treturn x>y?x:y;\r\n}\r\nstu a[200005];\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tconst int k=t;\r\n\tfor(int j=0;j<k;j++)\r\n\t{\r\n\t\tint n;\r\n\t\tlong long sum=0,h,m=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tmemset(a,0,sizeof(a));\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%lld %lld\",&a[i].x,&a[i].y);\r\n\t\t\tif(a[i].x<a[i].y)\r\n\t\t\t{\r\n\t\t\t\th=a[i].x;\r\n\t\t\t\ta[i].x=a[i].y;\r\n\t\t\t\ta[i].y=h;\r\n\t\t\t}\r\n\t\t\tsum+=(a[i].x+a[i].y)*2;\r\n\t\t\tm=max(m,a[i].x);\r\n\t\t\tsum-=2*a[i].x;\r\n//\t\t\tprintf(\"sum1=%lld\\n\",sum);\r\n\t\t}\r\n\t\tsum+=2*m;\r\n//\t\tfor(int i=0;i<n;i++)\r\n//\t\t\tprintf(\"x=%lld y=%lld\\n\",a[i].x,a[i].y);\r\n\t\tif(n==1)\r\n\t\t\tprintf(\"%lld\\n\",(a[0].x+a[0].y)*2);\r\n\t\telse\r\n\t\t\tprintf(\"%lld\\n\",sum);\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\ntypedef struct stu \r\n{ \r\n\tlong long int x;\r\n\tlong long int y; \r\n}stu;\r\nint max(int x,int y)\r\n{\r\n\treturn x>y?x:y;\r\n}\r\nstu a[200005];\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tconst int k=t;\r\n\tfor(int j=0;j<k;j++)\r\n\t{\r\n\t\tint n;\r\n\t\tlong long sum=0,h,m=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%lld %lld\",&a[i].x,&a[i].y);\r\n\t\t\tsum+=(a[i].x+a[i].y)*2;\r\n\t\t\tm=max(m,max(a[i].x,a[i].y));\r\n\t\t\tsum-=2*max(a[i].x,a[i].y);\r\n\t\t}\r\n\t\tsum+=2*m;\r\n\t\tif(n==1)\r\n\t\t\tprintf(\"%lld\\n\",(a[0].x+a[0].y)*2);\r\n\t\telse\r\n\t\t\tprintf(\"%lld\\n\",sum);\r\n\t}\r\n}"}
{"similarity_score": 0.991701244813278, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5e670bd5af4b76b84fbb2ab0835421fd", "bug_code_uid": "bfd23972cde3d2e92ac6a131b7682536", "src_uid": "808611f86c70659a1d5b8fc67875de31", "apr_id": "223c5d40ca472086b4329a31bc2d9cf2", "difficulty": 1100, "tags": ["games", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    int n;\n    int i,x;\n    scanf(\"%d\",&n);\n    for(i = 0;i<n;i++){\n        scnaf(\"%d\",&x);\n        x%=2;\n        if(x)break;\n    }\n    if(x)printf(\"First\\n\");\n    else printf(\"Second\\n\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int n;\n    int i,x;\n    scanf(\"%d\",&n);\n    for(i = 0;i<n;i++){\n        scanf(\"%d\",&x);\n        x%=2;\n        if(x)break;\n    }\n    if(x)printf(\"First\\n\");\n    else printf(\"Second\\n\");\n    return 0;\n}"}
{"similarity_score": 0.0611353711790393, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "a157d46b6abfc9ba8997533d3bd5d883", "bug_code_uid": "7565655c84b490e69c41fae1070a8cf6", "src_uid": "34dd4c8400ff7a67f9feb1487f2669a6", "apr_id": "f389b8ee71ecb512e1b1891fdea218b0", "difficulty": 1300, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   int i,j;\n   int num[2];\n   for(i=1;i<=2;i++)\n       scanf(\"%d\",num+i);\n       int size=num[1];\n       int len=num[2];\n    char ch[size];\n        scanf(\"%s\",ch);\n        int a=0,b=size-1;\nif(ch[a]==ch[b]&&a<b){\n    while(ch[a]==ch[b]&&a<b)\n    {\n        a++;\n        b--;\n    }\n}\n    else if(size%2==0&&ch[0]==ch[size/2])\n    {\n        a=0;\n        b=size/2;\n        while(ch[a]==ch[b]&&a<size/2)\n    {\n        a++;\n        b++;\n    }\n    }\n    else {\n    int m=0,z=size;\n    int count=0;\n    int kl=z/2+1;\n    int end;\n   while(ch[m]){\n    if(ch[m]==ch[kl])\n    {\n        count++;\n        m++;\n        kl++;\n        end=kl;\n    }else{\n    \n        kl++;\n        count=0;\n    }\n   }\n   \n   a=count;}\n    for(i=0;i<size;i++)\n        printf(\"%c\",ch[i]);\n    for(i=1;i<len;i++)\n    {\n        for(j=a;j<size;j++){\n          printf(\"%c\",ch[j]);\n        }\n\n    }\n return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint n,k;\nchar s[99];\nint main() {\n\tscanf(\"%d%d%s\",&n,&k,s);\n\tint maxl=n-1;\n\tfor(;maxl;--maxl) if(0==strncmp(s,s+n-maxl,maxl)) break;\n\tprintf(\"%s\",s);\n\twhile(--k) {\n\t\tprintf(\"%s\",s+maxl);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9301675977653632, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "c359e89a66a83b412c88d97b498cfb42", "bug_code_uid": "2c4e30ba65f7439d682c421b2cd8f902", "src_uid": "782b819eb0bfc86d6f96f15ac09d5085", "apr_id": "2bf9219da0b6cf6c17eb0b7ff619e433", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\ntypedef long long int lint;\nlint mod= 1000000007;\nlint qexp(lint a)\n{\n\tlint ans=1,b=2;\n\twhile(a)\n\t{\n\t\tif(a&1==1)\n\t\t{\n\t\t\tans*=b%mod;\n\t\t}\n\t\tb*=b%mod;\n\t\ta/=2;\n\t}\n\treturn ans%mod;\n}\nint main()\n{\n\tlint n;\n\tscanf(\"%I64d\",&n);\n\tlint p= qexp(n);\n\tp%=mod;\n\tlint ans = (p*(p+1))%mod;\n\tans/=2;\n\tans%= mod;\n\n\tprintf(\"%I64d\\n\",ans);\n\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\ntypedef long long int lint;\nlint mod= 1000000007;\nlint qexp(lint a)\n{\n\tlint ans=1,b=2;\n\twhile(a)\n\t{\n\t\tif(a&1==1)\n\t\t{\n\t\t\tans= (ans *(b%mod))%mod;\n\t\t}\n\t\tb=(b*b)%mod;\n\t\ta/=2;\n\t}\n\treturn ans%mod;\n}\nint main()\n{\n\tlint n;\n\tscanf(\"%I64d\",&n);\n\tlint p= qexp(n);\n\tlint ans = (p*(p+1)/2)%mod;\n\tans%= mod;\n\n\tprintf(\"%I64d\\n\",ans);\n\n}\n"}
{"similarity_score": 0.985209003215434, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "eb701ebcc8a3132694c21ad5931ae87c", "bug_code_uid": "a9dcb92d77370cf3ba0d9bd647b5b89f", "src_uid": "7c778289806ceed506543ef816c587c9", "apr_id": "cff399584cfa9385cb30db10ceac0b35", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<limits.h>\nint storage[25][22];\nstruct solve{\n    int status;\n    int value;\n}arr[250000];\nint main(){\nint a,b,c,d,e,f,g;\nint first=0;\nscanf(\"%d%d%d\",&a,&b,&c);\nint i;int added=0;\nfor(i=0;i<a;i++){\nscanf(\"%d\",&arr[i+1].value);\n}\nfor(i=0;i<c;i++){\nint x,y;\nscanf(\"%d%d\",&x,&y);\nif(x==2){\nif(arr[y].status==1){\n        printf(\"YES\\n\");\n}\nelse{ printf(\"NO\\n\");\n        }\n}\nif(x==1 && added!=b){\narr[y].status=1;\nstorage[first][0]=arr[y].value;\nstorage[first++][1]=y;\nadded++;\n}\nelse if(x==1 && added==b){\nint min=INT_MAX; int pos=0;\nfor(f=0;f<b;f++){\nif(storage[f][0]<min){\n    min=storage[f][0];\n    pos=f;\n}\n}\nif(arr[y].value>storage[pos][0]){\narr[storage[pos][1]].status=0;\nstorage[pos][0]=arr[y].value;\nstorage[pos][1]=y;\narr[y].status=1;\nbreak;\n}\n}\n}\n}\n", "fixed": "#include<stdio.h>\n#include<limits.h>\nint storage[25][22];\nstruct solve{\n    int status;\n    int value;\n}arr[250000];\nint main(){\nint a,b,c,d,e,f,g;\nint first=0;\nscanf(\"%d%d%d\",&a,&b,&c);\nint i;int added=0;\nfor(i=0;i<a;i++){\nscanf(\"%d\",&arr[i+1].value);\n}\nfor(i=0;i<c;i++){\nint x,y;\nscanf(\"%d%d\",&x,&y);\nif(x==2){\nif(arr[y].status==1){\n        printf(\"YES\\n\");\n}\nelse{ printf(\"NO\\n\");\n        }\n}\nif(x==1 && added!=b){\narr[y].status=1;\nstorage[first][0]=arr[y].value;\nstorage[first++][1]=y;\nadded++;\n}\nelse if(x==1 && added==b){\nint min=INT_MAX; int pos=0;\nfor(f=0;f<b;f++){\nif(storage[f][0]<min){\n    min=storage[f][0];\n    pos=f;\n}\n}\nif(arr[y].value>storage[pos][0]){\narr[storage[pos][1]].status=0;\nstorage[pos][0]=arr[y].value;\nstorage[pos][1]=y;\narr[y].status=1;\n}\n}\n}\n}\n"}
{"similarity_score": 0.9718100890207715, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "c77ae69bdb080017a34404bbe0253321", "bug_code_uid": "e6aba218ea9addbf90f01c161e666ed8", "src_uid": "ac7d117d58046872e9d665c9f99e5bff", "apr_id": "d8d9a0bde68775887274e6bd02bdf9fc", "difficulty": 800, "tags": ["brute force", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for(int i = 0 ; i < t ; ++i)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int x = -1;\r\n        int power = 1;\r\n        while(power <= n)\r\n        {\r\n            x++;\r\n            power = power*10;\r\n        }\r\n\r\n        if(power == 10)\r\n        {\r\n            printf(\"%d\\n\", n);\r\n            continue;\r\n        }\r\n\r\n        \r\n        int y = 9;\r\n        int temp = (power-1)/9;\r\n        power= power-1;\r\n        while(power > n)\r\n        {\r\n            y--;\r\n            power = power-temp;\r\n        }\r\n\r\n        printf(\"%d\\n\", 9*x + y);\r\n\r\n\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for(int i = 0 ; i < t ; ++i)\r\n    {\r\n        long long int n;\r\n        scanf(\"%lld\", &n);\r\n        int x = -1;\r\n        long long int power = 1;\r\n        while(power <= n)\r\n        {\r\n            x++;\r\n            power = power*10;\r\n        }\r\n        if(power == 10)\r\n        {\r\n            printf(\"%lld\\n\", n);\r\n            continue;\r\n        }\r\n\r\n        \r\n        int y = 9;\r\n        long long int temp = (power-1)/9;\r\n        power= power-1;\r\n        while(power > n)\r\n        {\r\n            y--;\r\n            power = power-temp;\r\n        }\r\n        printf(\"%d\\n\", 9*x + y);\r\n\r\n\r\n    }\r\n}"}
{"similarity_score": 0.98583951449764, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dd0c4125af29850df4de8c15632a350b", "bug_code_uid": "c47952ffca36402a2fb65d08392ec2f4", "src_uid": "ee9ba877dee1a2843e885a18823cbff0", "apr_id": "e1dd9c3a0e16901888fc7b3de3ce748f", "difficulty": 1100, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n\tchar c[100];\n\tint n,l;\n\tint f1,f2;\n\tf1=0;\n\tf2=0;\n\tscanf(\"%d\",&n);\n\tchar a[100];\n\tgets(c);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tf1=0;\n\t\tf2=0;\n\t\t\n\t\tgets(a);\n\t\tl=strlen(a);\n\t\tprintf(\"%d\\t\",l);\n\n\t\tif(l>=5)\n\t\t{\n\t\t\tif(a[0]=='m' && a[1]=='i' && a[2]=='a' && a[3]=='o' && a[4]=='.')\n\t\t\t{\n\t\t\t\tf1=1;\n\t\t\t}\n\t\t\tif(a[l-1]=='.' && a[l-2]=='a' && a[l-3]=='l' && a[l-4]=='a' && a[l-5]=='l')\n\t\t\t{\n\t\t\t\tf2=1;\n\t\t\t}\n\t\t\tif(f1==1 && f2==1)\n\t\t\t{\n\t\t\t\tprintf(\"OMG>.< I don't know!\\n\");\t\t\n\t\t\t}\n\t\t\telse if(f1==1)\n\t\t\t{\n\t\t\t\tprintf(\"Rainbow's\\n\");\n\t\t\t}\n\t\t\telse if(f2==1)\n\t\t\t{\n\t\t\t\tprintf(\"Freda's\\n\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"OMG>.< I don't know!\\n\");\n\t\t\t}\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"OMG>.< I don't know!\\n\");\n\t\t}\n\t}\n\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n\tchar c[100];\n\tint n,l;\n\tint f1,f2;\n\tf1=0;\n\tf2=0;\n\tscanf(\"%d\",&n);\n\tchar a[100];\n\tgets(c);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tf1=0;\n\t\tf2=0;\n\t\t\n\t\tgets(a);\n\t\tl=strlen(a);\n\t\tif(l>=5)\n\t\t{\n\t\t\tif(a[0]=='m' && a[1]=='i' && a[2]=='a' && a[3]=='o' && a[4]=='.')\n\t\t\t{\n\t\t\t\tf1=1;\n\t\t\t}\n\t\t\tif(a[l-1]=='.' && a[l-2]=='a' && a[l-3]=='l' && a[l-4]=='a' && a[l-5]=='l')\n\t\t\t{\n\t\t\t\tf2=1;\n\t\t\t}\n\t\t\tif(f1==1 && f2==1)\n\t\t\t{\n\t\t\t\tprintf(\"OMG>.< I don't know!\\n\");\t\t\n\t\t\t}\n\t\t\telse if(f1==1)\n\t\t\t{\n\t\t\t\tprintf(\"Rainbow's\\n\");\n\t\t\t}\n\t\t\telse if(f2==1)\n\t\t\t{\n\t\t\t\tprintf(\"Freda's\\n\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"OMG>.< I don't know!\\n\");\n\t\t\t}\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"OMG>.< I don't know!\\n\");\n\t\t}\n\t}\n\n}"}
{"similarity_score": 0.2696629213483146, "equal_cnt": 30, "replace_cnt": 23, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 30, "lang": "GNU C", "fix_code_uid": "717530fef10994facda2c2ec4d54b95b", "bug_code_uid": "6a3a38d40b02ad869237d2e591c9a417", "src_uid": "d7fe15a027750c004e4f50175e1e20d2", "apr_id": "f00f1bc6330a5d54b15d2df9273443ea", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\nint main (){\n  char string[100][100];\n  int i=0 ;\n  int j ;\n  int qntd=0;\n  int tam;\n  int bytes;\n  scanf(\" %[^\\n]\" , string[i]);\n  while (string[i]!=EOF){\n    tam = strlen(string[i]);\n    if(string[i][0]=='+'){\n      qntd++;\n    }\n    else if(string[i][0]=='-'){\n      qntd--;\n    }\n    else{\n      for(j=0;j<tam;j++){\n        if(string[i][j]==':'){\n         bytes= qntd *(tam - j);\n        }\n      }\n    }\n  }\n  printf(\"%d\" , bytes);\n  return 0;\n}\n  \n/* 1534712336197 */\n", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n\nint main() {\n\tchar frase[1000];\n\tint on, bites, i, ans = 0, aux;\n\ton = 0;\n\n\twhile(fgets(frase,1000,stdin) != NULL) {\n\t\tif(frase[0] == '+') on++;\n\t\telse if(frase[0] == '-' && on != 0) on--;\n\t\telse {\n\t\t\tint tam = 0, pos = 0;\n\t\t\ttam = strlen(frase);\n\t\t\taux = 0;\n\t\t\tfor (i = 0; i < tam; i++) {\n\t\t\t\tif(frase[i] == ':') {\n\t\t\t\t    pos = i + 1; \n\t\t\t\t    i = tam;\n\t\t\t\t}\n\t\t\t}\n\t\t\taux = tam - 1 - pos;\n\t\t\tans += aux*on;\n\t\t}\n\t}\n\tprintf(\"%d\", ans);\n}\n/* 1534950559908 */\n"}
{"similarity_score": 0.9941520467836257, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "46b9a601b05a443f5648547b26f1b651", "bug_code_uid": "b55d24759788f77660fcaa7c557de584", "src_uid": "5e23f02afc7446ecf8688ad2a8fa284d", "apr_id": "6d36217a81b50abc22489f8788768345", "difficulty": 1200, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define MAX     111111\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    int arr[MAX] = {0};\n\n    int start = 0;\n    int nextStart = n;\n    int num = 2;\n    arr[start] = 1;\n    start++;\n\n    while (1 == 1) {\n        if (nextStart == 2 * n - 1) {\n            if (arr[nextStart] == 0) {\n                arr[nextStart] = num;\n                num++;\n                nextStart++;\n            }\n        } else if (nextStart != 2 * n) {\n            arr[nextStart] = num;\n            nextStart++;\n            num++;\n            arr[nextStart] = num;\n            nextStart++;\n            num++;\n        }\n\n        if (arr[start] != 0) break;\n        else {\n            arr[start] = num;\n            start++;\n            num++;\n            arr[start] = num;\n            start++;\n            num++;\n        }\n    } \n    if (n % 2 == 0) {\n        printf(\"NO\\n\");\n    } else {\n        printf(\"YES\\n\");\n        for (int i = 0; i < 2 * n; i++) {\n            printf(\"%d \", arr[i]);\n        }\n        putchar('\\n');\n    }\n}", "fixed": "#include <stdio.h>\n\n#define MAX     222222\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    int arr[MAX] = {0};\n\n    int start = 0;\n    int nextStart = n;\n    int num = 2;\n    arr[start] = 1;\n    start++;\n\n    while (1 == 1) {\n        if (nextStart == 2 * n - 1) {\n            if (arr[nextStart] == 0) {\n                arr[nextStart] = num;\n                num++;\n                nextStart++;\n            }\n        } else if (nextStart != 2 * n) {\n            arr[nextStart] = num;\n            nextStart++;\n            num++;\n            arr[nextStart] = num;\n            nextStart++;\n            num++;\n        }\n\n        if (arr[start] != 0) break;\n        else {\n            arr[start] = num;\n            start++;\n            num++;\n            arr[start] = num;\n            start++;\n            num++;\n        }\n    } \n    if (n % 2 == 0) {\n        printf(\"NO\\n\");\n    } else {\n        printf(\"YES\\n\");\n        for (int i = 0; i < 2 * n; i++) {\n            printf(\"%d \", arr[i]);\n        }\n        putchar('\\n');\n    }\n}"}
{"similarity_score": 0.6197183098591549, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "cf6d901e398363251e6bbcdbd233744c", "bug_code_uid": "2694196d41cc1f0f2bfd9227fe97971e", "src_uid": "080a3458eaea4903da7fa4cf531beba2", "apr_id": "2a9023521a7246b225d2fb0f203b11c8", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n, x, i, j, len = 0;\n    scanf(\"%d %d\", &n, &x);\n    int encoding[n + 1];\n    for(i = 0; i < n; i++)\n        scanf(\"%d\", &encoding[i]);\n    for(i = 0; i < n; i++)\n    {\n        len = len + encoding[i];\n    }\n    if(len == x && n > 1)\n        printf(\"NO\\n\");\n    else if(x - len > n)\n        printf(\"NO\\n\");\n    else\n        printf(\"YES\\n\");\n    main();\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n, x, i, j, numOfOne = 0;\n    scanf(\"%d %d\", &n, &x);\n    int encoding[n + 1];\n    for(i = 0; i < n; i++){\n        scanf(\"%d\", &encoding[i]);\n        numOfOne = numOfOne + encoding[i];\n    }\n    ///printf(\"numOfOne = %d, n = %d, x = %d, numOfone + n - 1 = %d\\n\", numOfOne, n, x, numOfOne + n - 1);\n    if( numOfOne + n - 1 == x)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n    return 0;\n\n}\n"}
{"similarity_score": 0.9162303664921466, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4ad7718b4b94a8193e50f89ded5e0f6e", "bug_code_uid": "e713eda206d39ce5cb150cd15ec02b7f", "src_uid": "6d4744d7356e709f73891270becd14e3", "apr_id": "d7b146586037280d4ff8e5d6f553c044", "difficulty": 800, "tags": ["brute force", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main(void)\r\n{\r\n\tint t,n,cnt,max,i;\r\n\tfreopen(\"in.txt\",\"r\",stdin);\r\n\tfreopen(\"out.txt\",\"w\",stdout);\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tcnt=1;\r\n\t\tmax=1;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint a[n];\r\n\t\tfor(i=0;i<n;i++){\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t\tif(i>=1&&a[i]==a[i-1]){\r\n\t\t\t\tcnt++;\r\n\t\t\t\tif(max<cnt){\r\n\t\t\t\t\tmax=cnt;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tcnt=1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",max);\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main(void)\r\n{\r\n\tint t,n,cnt,max,i;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tcnt=1;\r\n\t\tmax=1;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint a[n];\r\n\t\tfor(i=0;i<n;i++){\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t\tif(i>=1&&a[i]==a[i-1]){\r\n\t\t\t\tcnt++;\r\n\t\t\t\tif(max<cnt){\r\n\t\t\t\t\tmax=cnt;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tcnt=1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",max);\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9708454810495627, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "7a5287ce30ea0456f2506bca80c037e3", "bug_code_uid": "962dc5750d33a4c9a928a4b52f08ea64", "src_uid": "d5fc2bc618dd9d453a5e7ae30ccb73f3", "apr_id": "ca181666fc6c7af77b12fba7597228e9", "difficulty": 800, "tags": ["brute force", "dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define ll long long\n\nint main() {\n    ll t,i,ii,g,array[100],Min,Max,temp,c;\n    scanf(\"%lld\", &t);\n    for (i = 0; i < t; i++) {\n        scanf(\"%lld\", &ii);\n        for(g = 0; g < ii; ++g) {\n            scanf(\"%d\", &array[g]);\n            array[g] == 1?Min = g + 1:\"\";\n            array[g] == ii?Max = g + 1:\"\";\n        }\n        if (Min > Max) {\n            temp = Min;\n            Min = Max;\n            Max = temp;\n        }\n        c = Max;\n        /**\n         * @p (\"HI!!!!!!!!!!\")\n         * @p (\"Nothing\\0at\\0here\")\n         * */\n        c > ii - Min + 1?c = ii + 1 - Min:\"\";\n\t\tc > Min + ii + 1 - Max?c = Min + ii + 1 - Max:\"\";\n\t\tprintf(\"%d\\n\",c);\n    }\n}", "fixed": "#include<stdio.h>\n#define i int\n#define ll long long\ni main() {\n    i t,n,ii,g,array[100],Min,Max,temp,c;\n    scanf(\"%d\", &t);\n    for (n = 0; n < t; n++) {\n        scanf(\"%d\", &ii);\n        for(g = 0; g < ii; ++g) {\n            scanf(\"%d\", &array[g]);\n            array[g] == 1?Min = g + 1:\"\";\n            array[g] == ii?Max = g + 1:\"\";\n        }\n        if (Min > Max) {\n            temp = Min;\n            Min = Max;\n            Max = temp;\n        }\n        c = Max;\n        /**\n         * @p (\"HI!!!!!!!!!!\")\n         * @p (\"Nothing\\0at\\0here\")\n         * */\n        c > ii - Min + 1?c = ii + 1 - Min:\"\";\n\t\tc > Min + ii + 1 - Max?c = Min + ii + 1 - Max:\"\";\n\t\tprintf(\"%d\\n\",c);\n    }\n}"}
{"similarity_score": 0.993993993993994, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "456f21dfd55ee64e3f7f4f8104038702", "bug_code_uid": "dc0423af1f42da2d6d2398af70fcb762", "src_uid": "3bbe48918a7bf3faf01c74cb7296f6e0", "apr_id": "44896187af4bc1e6b4df539af8ebfa0f", "difficulty": 800, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n      int n,i,p;\n      float c=200.0;\n      scanf(\"%d\",&n);\n       scanf(\"%d\",&p);\n      for(i=0;i<n;i++)\n      {\n         int a,b;\n         float r;\n         scanf(\"%d%d\",&a,&b);\n         r=(float)a/b;\n         if((r*p)<c)\n         {\n         \tc=r*p;\n\t\t }\n            \n      }\n      printf(\"%f\",c);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n      int n,i,p;\n      float c=30000.0;\n      scanf(\"%d\",&n);\n       scanf(\"%d\",&p);\n      for(i=0;i<n;i++)\n      {\n         int a,b;\n         float r;\n         scanf(\"%d%d\",&a,&b);\n         r=(float)a/b;\n         if((r*p)<c)\n         {\n         \tc=r*p;\n\t\t }\n            \n      }\n      printf(\"%f\",c);\n}"}
{"similarity_score": 0.3486238532110092, "equal_cnt": 28, "replace_cnt": 17, "delete_cnt": 6, "insert_cnt": 4, "fix_ops_cnt": 27, "lang": "GNU C11", "fix_code_uid": "2c46085e8f3b68ad0a0bf60670ab09f6", "bug_code_uid": "472754aca98799502921d988beaaa38a", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "624c40fb9b8cb196fe61f2a4c2da6c47", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n     long long int n,m,i,j,k,l,ans;\n     scanf(\"%I64d %I64d\",&n,&m);\n     long long int a[n];\n     for(i=1;i<=n;i++)\n     {\n          scanf(\"%I64d\",&a[i]);\n     }\n     j=100000000;\n     for(i=2;i<=n;i++)\n     {\n          l=a[i]-a[i-1];\n          if(l<j)\n          j=l;\n     }\n     if(j/2>=a[1] && j/2>=l-a[n])\n     ans=j/2;\n     else \n     {\n          if(a[1]>=j/2 && a[1]>=l-a[n])\n          ans=a[1];\n          if(l-a[n]>=j/2 && l-a[n]>=a[1])\n          ans=l-a[n];\n     }\n     printf(\"%I64d\",ans);\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long int n, l, i, j;\n    double max, k;\n    scanf(\"%ld%ld\",&n,&l);\n    long int a[n];\n    for(i=0;i<n;i++) scanf(\"%ld\",&a[i]);\n    for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(a[i]>a[j])\n            {\n                a[i]=a[i]+a[j];\n                a[j]=a[i]-a[j];\n                a[i]=a[i]-a[j];\n            }\n        }\n    }\n    max=a[0];\n    for(i=1;i<n;i++)\n    {\n        k=(a[i]-a[i-1]);\n        if((k/2)> max) max=k/2;\n    }\n    if(l-a[n-1]>max) max=l-a[n-1];\n    printf(\"%f\\n\",max);\n}"}
{"similarity_score": 0.995575221238938, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fbd22e7a569b37aa895c8963e17e5d2a", "bug_code_uid": "8824ac895c7693068b8730877c286d6a", "src_uid": "241157c465fe5dd96acd514010904321", "apr_id": "facb4a79f763defdf65cc9707f8a23b2", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nint compre( void *a, void *b){\n    return strlen(a)-strlen(b);\n}\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag,flag2,b1,l,p,i1,i2,m,u,r,q,d,x,max,max2,min,f,sum1,sum,a[10000],b,c;\n\n\nscanf(\"%lld\",&n);\nsum=0;\nfor(i=0;i<n;i++){\n    \nscanf(\"%lld\",&a[i]);\nsum+=a[i];\n}\nsum1=sum/2+sum%2;\ni1=1;\n\ni=0;\nwhile(sum1>0){\n    sum1-=a[i];\n    i++;\n}\nprintf(\"%lld\",i);\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nint compre( void *a, void *b){\n    return strlen(a)-strlen(b);\n}\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag,flag2,b1,l,p,i1,i2,m,u,r,q,d,x,max,max2,min,f,sum1,sum,a[2000000],b,c;\n\n\nscanf(\"%lld\",&n);\nsum=0;\nfor(i=0;i<n;i++){\n    \nscanf(\"%lld\",&a[i]);\nsum+=a[i];\n}\nsum1=sum/2+sum%2;\ni1=1;\n\ni=0;\nwhile(sum1>0){\n    sum1-=a[i];\n    i++;\n}\nprintf(\"%lld\",i);\nreturn 0;\n}\n"}
{"similarity_score": 0.6494252873563219, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "564d87de4a1e2f255a0eb6ac9867fad7", "bug_code_uid": "1acbac0851b2ffd09f6b57d0df30dc90", "src_uid": "acaa8935e6139ad1609d62bb5d35128a", "apr_id": "d917c6191457acc98b5586ea2107e30f", "difficulty": 900, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N 100000\n\nint main() {\n\tstatic int aa[N];\n\tint n, i, j, cnt;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tcnt = n;\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = i + 1; j < n; j++)\n\t\t\tif (aa[i] == aa[j])\n\t\t\t\tcnt--;\n\tprintf(\"%d\\n\", cnt - 2);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N 100000\n#define INF 0x3f3f3f3f\n\nint main() {\n\tstatic int aa[N];\n\tint n, i, max, min, cnt;\n\n\tscanf(\"%d\", &n);\n\tmax = 0;\n\tmin = INF;\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &aa[i]);\n\t\tif (max < aa[i])\n\t\t\tmax = aa[i];\n\t\tif (min > aa[i])\n\t\t\tmin = aa[i];\n\t}\n\tcnt = 0;\n\tfor (i = 0; i < n; i++)\n\t\tcnt += (aa[i] == min || aa[i] == max) ? 0 : 1;\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.808199121522694, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "56ae47d5b901613c68c6d694209579ba", "bug_code_uid": "6b0629a299c08e9f1e1bf647a235e98c", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "52fd89c04fc532ef7211c0a6192f7491", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint i;\n\tchar s[100001];\n\tscanf(\"%s\",s);\n\tint a[strlen(s)];\n\ta[0]=0;\n\tfor(i=0;i<strlen(s)-1;i++)\n\t{\n\t\tif(s[i]==s[i+1])\n\t\t{\n\t\t\ta[i+1]=a[i]+1;\n\t\t}\n\t}\n\tint d;\n\tscanf(\"%d\",&d);\n\tfor(i=0;i<d;i++)\n\t{\n\t\tint w,e;\n\t\tscanf(\"%d %d\",&w,&e);\n\t\tprintf(\"%d\\n\",a[e-1]-a[w-1]);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint i;\n\tchar s[100001];\n\tscanf(\"%s\",s);\n\tint a[strlen(s)];\n\ta[0]=0;\n\tfor(i=1;i<strlen(s);i++)\n\t{\n\t\tif(s[i]==s[i-1])\n\t\t{\n\t\t\ta[i]=a[i-1]+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ta[i]=a[i-1];\n\t\t}\n\t}\n\tint d;\n\tscanf(\"%d\",&d);\n\tfor(i=0;i<d;i++)\n\t{\n\t\tint w,e;\n\t\tscanf(\"%d %d\",&w,&e);\n\t\tprintf(\"%d\\n\",a[e-1]-a[w-1]);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9945115257958288, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f8f70f028be4dd0ff148d54cf0751c2a", "bug_code_uid": "f2d25609f12737341305cd5c6e5b6c13", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "dd0965544f3c2912c947746276345a74", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int i,n,t;\n    int x=0;\n    int a[40000],b[40000];\n    scanf(\"%d%d\",&n,&t);\n    for(i=0;i<n-1;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=1;i<=n-1;i++){\n        b[i]=a[i-1]+i;\n    }\n    for(i=1;i<=n-1;i++){\n        if(i==t){\n            printf(\"YES\");\n            x=1;\n            break;\n        }\n        if(b[i]!=0){\n            i=b[i]-1;\n        }\n    }\n    if(x==0)printf(\"NO\");\n    scanf(\" \");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int i,n,t;\n    int x=0;\n    int a[40000],b[40000];\n    scanf(\"%d%d\",&n,&t);\n    for(i=0;i<n-1;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=1;i<=n-1;i++){\n        b[i]=a[i-1]+i;\n    }\n    for(i=1;i<=n-1;i++){\n        if(b[i]==t){\n            printf(\"YES\");\n            x=1;\n            break;\n        }\n        if(b[i]!=0){\n            i=b[i]-1;\n        }\n    }\n    if(x==0)printf(\"NO\");\n    scanf(\" \");\n    return 0;\n}\n"}
{"similarity_score": 0.9929453262786596, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "778e7b990608fa396d3682cecfe69fa7", "bug_code_uid": "19276f8a1406b4d17860eb7d52218f0b", "src_uid": "bdce4761496c88a3de00aa863ba7308d", "apr_id": "7a9765a5d4c5f09f251d61f4a0367c2e", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(){\n\tlong long int n, h, a, b, m;\n\tscanf(\"%lld %lld %lld %lld %lld\", &n, &h, &a, &b, &m);\n\tlong long int ta, fa, tb, fb;\n\tfor(long long int i = 0 ; i < m ; i++){\n\t\tscanf(\"%lld %lld %lld %lld\", &ta, &fa, &tb, &fb);\n\t\tlong long int count;\n\t\tif(ta == tb){\n\t\t\tcount = labs(tb-ta);\n\t\t}\n\t\telse if(fa < a && fb < a){\n\t\t\tcount = (a - fa) + (a - fb) + labs(tb-ta);\n\t\t}\n\t\telse if(fa > b && fb > b){\n\t\t\tcount = (fa - b) + (fb - b) + labs(tb-ta);\n\t\t}\n\t\telse{\n\t\t\tcount = labs(fa-fb) + labs(ta-tb);\n\t\t}\n\t\tprintf(\"%lld\\n\", count);\n\t}\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(){\n\tlong long int n, h, a, b, m;\n\tscanf(\"%lld %lld %lld %lld %lld\", &n, &h, &a, &b, &m);\n\tlong long int ta, fa, tb, fb;\n\tfor(long long int i = 0 ; i < m ; i++){\n\t\tscanf(\"%lld %lld %lld %lld\", &ta, &fa, &tb, &fb);\n\t\tlong long int count;\n\t\tif(ta == tb){\n\t\t\tcount = labs(fb-fa);\n\t\t}\n\t\telse if(fa < a && fb < a){\n\t\t\tcount = (a - fa) + (a - fb) + labs(tb-ta);\n\t\t}\n\t\telse if(fa > b && fb > b){\n\t\t\tcount = (fa - b) + (fb - b) + labs(tb-ta);\n\t\t}\n\t\telse{\n\t\t\tcount = labs(fa-fb) + labs(ta-tb);\n\t\t}\n\t\tprintf(\"%lld\\n\", count);\n\t}\n}\n"}
{"similarity_score": 0.9928716904276986, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "fc17dc75567c5648ec3ef270ff4e5945", "bug_code_uid": "e006e7239d5933f2761b67522d0c47b4", "src_uid": "f55c824d8db327e531499ced6c843102", "apr_id": "45f40cb0d9cc989ef547502afde80920", "difficulty": 900, "tags": ["implementation", "dfs and similar", "brute force", "graphs"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j;\n    scanf(\"%d %d\",&m,&n);\n    char a[m][n];\n    for(i=0;i<m;i++)\n    scanf(\"%s\",a[i]);\n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            if(a[i][j]=='S')\n            {\n                if(a[i+1][j]=='W' ||a[i][j+1]=='W' ||a[i-1][j]=='W' ||a[i][j-1]=='W')\n                {\n                    printf(\"No\\n\");\n                    return 0;\n                }\n             else\n                {\n                if(a[i+1][j]=='.' && i+1!=m)\n                    a[i+1][j]='D';\n                if(a[i-1][j]=='.' && i-1>=0)\n                    a[i-1][j]='D';\n                if(a[i][j+1]=='.' && j+1!=n)\n                    a[i][j+1]='D';\n                if(a[i][j-1]=='.' && j-1>=0)\n                    a[i][j-1]='D';\n                }\n            }\n        }\n    }\n    printf(\"Yes\\n\");\n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++)\n        printf(\"%c\",a[i][j]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j;\n    scanf(\"%d %d\",&m,&n);\n    char a[1000][1000];\n    for(i=0;i<m;i++)\n    scanf(\"%s\",a[i]);\n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            if(a[i][j]=='S')\n            {\n                if(a[i+1][j]=='W' ||a[i][j+1]=='W' ||a[i-1][j]=='W' ||a[i][j-1]=='W')\n                {\n                    printf(\"No\\n\");\n                    return 0;\n                }\n             else\n                {\n                if(a[i+1][j]=='.' && i+1!=m)\n                    a[i+1][j]='D';\n                if(a[i-1][j]=='.' && i-1>=0)\n                    a[i-1][j]='D';\n                if(a[i][j+1]=='.' && j+1!=n)\n                    a[i][j+1]='D';\n                if(a[i][j-1]=='.' && j-1>=0)\n                    a[i][j-1]='D';\n                }\n            }\n        }\n    }\n    printf(\"Yes\\n\");\n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++)\n        printf(\"%c\",a[i][j]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.3922369765066394, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "e708bcff86da31710afb6933fea35b37", "bug_code_uid": "a00eb787d8766e04285b9dd556ffbfef", "src_uid": "259e39c9e63e43678e596c0d8c66937c", "apr_id": "7656a28e41d3989df4773adfd2aef821", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\r\n#include<stdio.h>\r\n\r\nint main()\r\n{\r\n     int t,a = 2,b = 2;\r\n\r\n     scanf(\"%d\",&t);\r\n\r\n     while(t--)\r\n     {\r\n          long long int p;\r\n\r\n          scanf(\"%lld\",&p);\r\n\r\n          while(a != p)\r\n          {\r\n               while(b != p)\r\n               {\r\n\r\n                    if(a == b)\r\n                    {\r\n                         b++;\r\n                    }\r\n                    \r\n                    if(p % a == p % b)\r\n                    {\r\n                         break;\r\n                    }\r\n\r\n                    b++;\r\n               }\r\n\r\n               if(b != p)\r\n               {\r\n                    break;\r\n               }\r\n\r\n               a++;\r\n\r\n          }\r\n\r\n          printf(\"%d %d\\n \",a,b);\r\n\r\n\r\n     }\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n     int t,a = 2,b;\r\n\r\n     scanf(\"%d\",&t);\r\n\r\n     while(t--)\r\n     {\r\n          long long int p;\r\n\r\n          scanf(\"%lld\",&p);\r\n\r\n          b = p - 1;\r\n\r\n          printf(\"%d %d\\n \",a,b);\r\n\r\n     }\r\n}"}
{"similarity_score": 0.9967923015236567, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "62cfe4f23c53a2e3472df1f097506adb", "bug_code_uid": "f26aea84c2b424193f7bed7f0a899aa9", "src_uid": "6b7a083225f0dd895cc48ca68af695f4", "apr_id": "a81589088c3494813c55ba0de3216d0e", "difficulty": 2000, "tags": ["dp", "combinatorics", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#define LL long long\nint flag[1000001]={0},a[1000051][18],ss[100001];\nlong long qsm(int n,int p)\n{\n\tif (p==0) return 1;\n\tif (p==1) return n;\n\tlong long ans=qsm(n,p/2);\n\tif (p%2) ans=n*ans%1000000007*ans%1000000007; else ans=(ans*ans)%1000000007;\n\treturn ans;\n}\nint main()\n{\n\tflag[1]=1;\n\tint i,j,T,x,y;\n\tlong long ans=0;\n\tfor (i=2;i<=500000;i++)\n\t{\n\t\tif (flag[i]) continue;\n\t\tfor (j=2*i;j<=1000000;j+=i) flag[j]=1;\n\t}\n\tss[0]=0;\n\tfor (i=2;i<=1000000;i++)\n\t\tif (!flag[i])\n\t\t{\n\t\t\tss[++ss[0]]=i;\n\t\t}\n\tfor (i=0;i<=1000050;i++)\n\t{\n\t\ta[i][0]=1;\n\t\ta[0][i]=1;\n\t}\n\tfor (i=1;i<=1000050;i++)\n\t\tfor (j=1;j<=17&&j<=i;j++)\n\t\t{\n\t\t\tif (i==j)\n\t\t\t{\n\t\t\t\ta[i][j]=1; continue;\n\t\t\t}\n\t\t\ta[i][j]=a[i-1][j-1]+a[i-1][j];\n\t\t\ta[i][j]%=1000000007;\n\t\t}\n\tscanf(\"%d\",&T);\n\twhile (T--)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\ti=1; ans=1;\n\t\twhile (x!=1)\n\t\t{\n\t\t\tif (!flag[x])\n\t\t\t{\n\t\t\t\tans*=y;\n\t\t\t\tans%=1000000007;\n\t\t\t\tx=1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (;i<=ss[0];i++)\n\t\t\t{\n\t\t\t\tif (x%ss[i]==0)\n\t\t\t\t{\n\t\t\t\t\tint k=0;\n\t\t\t\t\twhile (x%ss[i]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tk++; x/=ss[i];\n\t\t\t\t\t}\n\t\t\t\t\tans*=a[y+k-1][k];\n\t\t\t\t\tans%=1000000007;\n\t\t\t\t\ti++; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint p=qsm(2,y-1);\n\t\tans*=p;\n\t\tans%=1000000007;\n\t\tprintf(\"%I64d\\n\",ans);\n\t}\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#define LL long long\nint flag[1000001]={0},a[1000051][21],ss[100001];\nlong long qsm(int n,int p)\n{\n\tif (p==0) return 1;\n\tif (p==1) return n;\n\tlong long ans=qsm(n,p/2);\n\tif (p%2) ans=n*ans%1000000007*ans%1000000007; else ans=(ans*ans)%1000000007;\n\treturn ans;\n}\nint main()\n{\n\tflag[1]=1;\n\tint i,j,T,x,y;\n\tlong long ans=0;\n\tfor (i=2;i<=500000;i++)\n\t{\n\t\tif (flag[i]) continue;\n\t\tfor (j=2*i;j<=1000000;j+=i) flag[j]=1;\n\t}\n\tss[0]=0;\n\tfor (i=2;i<=1000000;i++)\n\t\tif (!flag[i])\n\t\t{\n\t\t\tss[++ss[0]]=i;\n\t\t}\n\tfor (i=0;i<=1000050;i++)\n\t{\n\t\ta[i][0]=1;\n\t\ta[0][i]=1;\n\t}\n\tfor (i=1;i<=1000050;i++)\n\t\tfor (j=1;j<=20&&j<=i;j++)\n\t\t{\n\t\t\tif (i==j)\n\t\t\t{\n\t\t\t\ta[i][j]=1; continue;\n\t\t\t}\n\t\t\ta[i][j]=a[i-1][j-1]+a[i-1][j];\n\t\t\ta[i][j]%=1000000007;\n\t\t}\n\tscanf(\"%d\",&T);\n\twhile (T--)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\ti=1; ans=1;\n\t\twhile (x!=1)\n\t\t{\n\t\t\tif (!flag[x])\n\t\t\t{\n\t\t\t\tans*=y;\n\t\t\t\tans%=1000000007;\n\t\t\t\tx=1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (;i<=ss[0];i++)\n\t\t\t{\n\t\t\t\tif (x%ss[i]==0)\n\t\t\t\t{\n\t\t\t\t\tint k=0;\n\t\t\t\t\twhile (x%ss[i]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tk++; x/=ss[i];\n\t\t\t\t\t}\n\t\t\t\t\tans*=a[y+k-1][k];\n\t\t\t\t\tans%=1000000007;\n\t\t\t\t\ti++; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint p=qsm(2,y-1);\n\t\tans*=p;\n\t\tans%=1000000007;\n\t\tprintf(\"%I64d\\n\",ans);\n\t}\n    return 0;\n}\n"}
{"similarity_score": 0.9340232858990944, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "86784c84cef098d0be3d4cc2f68e1c01", "bug_code_uid": "a421d246cafd3e3d06add105d7545ef9", "src_uid": "14fc3a7fef44a02791aee62838c4c8c8", "apr_id": "3a97830f52f29c63e0428b11ad31cec7", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define min(a,b) ((a)<(b)?(a):(b))\nint main(){\n    int m,n,t,i,j,k,a,b;\n        scanf(\"%d %d\",&a,&b);\n        m = min(a,b);\n        n = a+b-m;\n        t = -min(0,-(n+m-1));\n        printf(\"%d\\n\",t);\n        if(t>0)\n        for(i=1;i<=n;i++){\n                printf(\"%d %d\\n\",1,i);\n        }\n        if(t)\n        for(i=2;i<=m;i++)\n                printf(\"%d %d\\n\",i,1);\n        return 0;\n}", "fixed": "#include<stdio.h>\n#define min(a,b) ((a)<(b)?(a):(b))\nint main(){\n    int m,n,t,i,j,k,a,b;\n        scanf(\"%d %d\",&n,&m);\n        t = -min(0,-(n+m-1));\n        printf(\"%d\\n\",t);\n        if(t>0)\n        for(i=1;i<=m;i++){\n                printf(\"%d %d\\n\",1,i);\n        }\n        if(t)\n        for(i=2;i<=n;i++)\n                printf(\"%d %d\\n\",i,1);\n        return 0;\n}"}
{"similarity_score": 0.9939117199391172, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "03dd29fb6200d82ea6d33cc4e660b480", "bug_code_uid": "8298b7f75202c6865e05d6380074d2b1", "src_uid": "62f5798bdcea237c0df9b4cd288b97de", "apr_id": "9b99a6ddd170a25044014cd61b60aaae", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n    int t;\r\n    char s[10];\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%s\",&s);\r\n        int l=strlen(s);\r\n        int count1=0,count2=0;\r\n        for(int j=0;j<l;j++){\r\n            if(s[j]=='0'){\r\n                count1++;\r\n            }\r\n            if(s[j]=='1'){\r\n                count2++;\r\n            }\r\n        }\r\n        if(count1==count2){\r\n            printf(\"%d\\n\",count1-1);\r\n        }\r\n        else if(count1>count2){\r\n            printf(\"%d\\n\",count2);\r\n        }\r\n        else if(count1<count2){\r\n            printf(\"%d\\n\",count1);\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n    int t;\r\n    char s[200002];\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%s\",&s);\r\n        int l=strlen(s);\r\n        int count1=0,count2=0;\r\n        for(int j=0;j<l;j++){\r\n            if(s[j]=='0'){\r\n                count1++;\r\n            }\r\n            if(s[j]=='1'){\r\n                count2++;\r\n            }\r\n        }\r\n        if(count1==count2){\r\n            printf(\"%d\\n\",count1-1);\r\n        }\r\n        else if(count1>count2){\r\n            printf(\"%d\\n\",count2);\r\n        }\r\n        else if(count1<count2){\r\n            printf(\"%d\\n\",count1);\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9953810623556582, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "36c404335877b1eed5d93e977e05423c", "bug_code_uid": "f94201660a063e1d614d31b29ff42f0f", "src_uid": "1bb5b64657e16fb518d49d3c799d4823", "apr_id": "0118c94f9534cb57cf7da51d3138d855", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long s,i,j,k,n,f,t,max;\n    while(scanf(\"%I64d %I64d\",&n,&k)!=EOF)\n    {\n        max=-3200000;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%I64d %I64d\",&f,&t);\n            if(t>k)\n                s=f-(t-k);\n            else\n                s=f;\n            if(max<s)\n            {\n                max=s;\n            }\n        }\n        printf(\"%I64d\\n\",max);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long s,i,j,k,n,f,t,max;\n    while(scanf(\"%I64d %I64d\",&n,&k)!=EOF)\n    {\n        max=-32000000000;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%I64d %I64d\",&f,&t);\n            if(t>k)\n                s=f-(t-k);\n            else\n                s=f;\n            if(max<s)\n            {\n                max=s;\n            }\n        }\n        printf(\"%I64d\\n\",max);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9978991596638656, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5b118475fde033b68ef9aa50856802a9", "bug_code_uid": "d9f6318f32857355bf2fb128d054f61c", "src_uid": "d08e39db62215d7817113aaa384e3f59", "apr_id": "a8bb2c0ff1231c6acfab29028208c675", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        int a,b,c=0,p,q;\r\n        scanf(\"%d%d\",&a,&b);\r\n        \r\n        int x=b-1;\r\n        p=x/2+(x%2>0);\r\n        q=p+(a-b);\r\n        printf(\"%d\\n\",q);//printf(\"%d\",p);\r\n        for(int j=1;j<=p;j++)\r\n        {\r\n            printf(\"%d \",j);\r\n        }\r\n        for(int j=b+1;j<=a;j++)\r\n        {\r\n            printf(\"%d \",j);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        int a,b,c=0,p,q;\r\n        scanf(\"%d%d\",&a,&b);\r\n        \r\n        int x=b-1;\r\n        p=x/2+(x%2>0);\r\n        q=p+(a-b);\r\n        printf(\"%d\\n\",q);//printf(\"%d\",p);\r\n        for(int j=1;j<=p;j++)\r\n        {\r\n            printf(\"%d \",b-j);\r\n        }\r\n        for(int j=b+1;j<=a;j++)\r\n        {\r\n            printf(\"%d \",j);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n\r\n}"}
{"similarity_score": 0.997229916897507, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c5f5f2104da45c05e741c13e3031f389", "bug_code_uid": "3192f8fb795c4860abf506b448027b5d", "src_uid": "091e91352973b18040e2d57c46f2bf8a", "apr_id": "2b2e6a8354e222ba552badadc3b831d8", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    long long int q, l, r, d;\n    long long int ans;\n    scanf(\"%d\", &q);\n    while(q--)\n    {\n        scanf(\"%lld%lld%lld\", &l, &r, &d);\n        if(l > d)\n            ans = d;\n        else\n        {\n            int tmp = (r / d) + 1;\n            ans = tmp * d;\n        }\n        printf(\"%lld\\n\", ans);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n    long long int q, l, r, d;\n    long long int ans;\n    scanf(\"%lld\", &q);\n    while(q--)\n    {\n        scanf(\"%lld%lld%lld\", &l, &r, &d);\n        if(l > d)\n            ans = d;\n        else\n        {\n            int tmp = (r / d) + 1;\n            ans = tmp * d;\n        }\n        printf(\"%lld\\n\", ans);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9952830188679245, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "af7c699c821f513103ae5d0293306fd4", "bug_code_uid": "579b9bc5d2ec7df9fe3d06ac91214112", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "65370e532b76d13e00ac990cd2fc0dab", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(int argc, const char *argv[])\n{\n    int i, x, n, max = 0, min = 1000000001, n_max, n_min;\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; i++) {\n        scanf(\"%d\", &x);\n        if (x > max)\n        {\n            max = x;\n            n_max = 1;\n        }\n        else if (x == max)\n            ++n_max;\n\n        if (x < min)\n        {\n            min = x;\n            n_min = 1;\n        }\n        else if (x == min)\n            ++n_min;\n    }\n    if (max == min)\n        printf(\"0 %d\\n\", (long long) n * (n - 1) / 2);\n    else\n        printf(\"%d %d\\n\", max - min, (long long) n_max * n_min);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(int argc, const char *argv[])\n{\n    int i, x, n, max = 0, min = 1000000001, n_max, n_min;\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; i++) {\n        scanf(\"%d\", &x);\n        if (x > max)\n        {\n            max = x;\n            n_max = 1;\n        }\n        else if (x == max)\n            ++n_max;\n\n        if (x < min)\n        {\n            min = x;\n            n_min = 1;\n        }\n        else if (x == min)\n            ++n_min;\n    }\n    if (max == min)\n        printf(\"0 %I64d\\n\", (long long) n * (n - 1) / 2);\n    else\n        printf(\"%d %I64d\\n\", max - min, (long long) n_max * n_min);\n    return 0;\n}\n"}
{"similarity_score": 0.06771653543307087, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "07fb6f3bb79fbb00b75ce99a4e9fa43a", "bug_code_uid": "64efdc0859da79aaa35ef29f9595b93f", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "ce32e8fb44fec7462d3b8a0660d44e54", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n   int Z;\n   cin >> Z;\n   for (int s = 0; s < Z; s++)\n   {\n      int w, h, n, count = 1, dos = 0, yu = 0;\n      cin >> w >> h >> n;\n      while (w % 2 == 0 || h % 2 == 0)\n      {\n         if (w % 2 == 0)\n         {\n            w = w / 2;\n            dos++;\n         }\n         if (h % 2 == 0)\n         {\n            h = h / 2;\n            yu++;\n         }\n         if (dos == 1 && yu == 1)\n         {\n            count *= 4;\n         }\n         else if (dos == 0 && yu == 1 || dos == 1 && yu == 0)\n         {\n            count *= 2;\n         }\n         dos = 0;\n         yu = 0;\n      }\n      if (count >= n)\n      {\n         cout << \"YES\" << endl;\n      }\n      else\n      {\n         cout << \"NO\" << endl;\n      }\n   }\n   return 0;\n}\n  \t\t \t \t \t\t\t\t\t   \t\t     \t \t \t \t", "fixed": "#include <stdio.h>\n int main()\n{\n    int i,t,w,h,n;\n    scanf(\"%d\",&t);\n     for(i=0;i<t;i++)\n    {\n        int s=1;\n        scanf(\"%d%d%d\",&w,&h,&n);\n         while(w%2==0)\n      {\n          w=w/2,\n          s=s*2;\n      }\n        while(h%2==0)\n      {\n\t        h=h/2,\n         s=s*2;\n       }\n        if(s>=n){\n\t        printf(\"YES\\n\");\n      }\n       else \n\t       printf(\"No\\n\");\n       \n    }\n    return 0;\n }\n\t\t   \t   \t  \t \t\t\t\t\t \t\t \t \t  \t\t"}
{"similarity_score": 0.9814814814814815, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2a216c7d6c358688802d76e60b12ec87", "bug_code_uid": "5a6be7b5049b32741fc10f87d798427e", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "b22c96ed8aa0109345cf24fb09d2c929", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{   int n, h, m, h0, m0, c, cash;\n    scanf(\"%d\", &n);\n    scanf(\"%d%d\", &h0, &m0);\n    while (--n)\n    {\n        scanf(\"%d%d\", &h, &m);\n        if (h == h0 && m == m0)\n        {\n            c += 1;\n            if (c > cash) {\n                cash = c;\n            }\n        }\n        else {\n            c = 1;\n        }\n        h0 = h;\n        m0 = m;\n    }\n    printf(\"%d\\n\", cash);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{   int n, h, m, h0, m0, c=1, cash=1;\n    scanf(\"%d\", &n);\n    scanf(\"%d%d\", &h0, &m0);\n    while (--n)\n    {\n        scanf(\"%d%d\", &h, &m);\n        if (h == h0 && m == m0)\n        {\n            c += 1;\n            if (c > cash) {\n                cash = c;\n            }\n        }\n        else {\n            c = 1;\n        }\n        h0 = h;\n        m0 = m;\n    }\n    printf(\"%d\\n\", cash);\n    return 0;\n}"}
{"similarity_score": 0.6915167095115681, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "4a74f381138e49a3ae08f358bb28eef5", "bug_code_uid": "47a8d173313ede0e25592d35ae2229da", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "fb696054bcb45acaba11d96fa64109e3", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int a[100],b[100],i,j,sum=0,sum1=0,l;\n    scanf(\"%d\",&l);\n    for(i=0,j=0;i<l;i++,j++){\n        scanf(\"%d %d\",&a[i],&b[j]);\n        sum=sum+a[i];\n        sum1=sum1+b[j];\n    }\n    if(sum>sum1){\n        printf(\"Mishka\\n\");\n    }\n   else if(sum<sum1){\n        printf(\"Chris\\n\");\n    }\n    else{\n        printf(\"Friendship is magic!^^\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int a,b,l,ct=0,ct1=0,i;\n    scanf(\"%d\",&l);\n    for(i=0;i<l;i++){\n        scanf(\"%d %d\",&a,&b);\n\n\n    if(a>b){\n        ct++;\n    }\n   else if(a<b){\n        ct1++;\n    }\n\n    }\n    if(ct>ct1){\n        printf(\"Mishka\\n\");\n    }\n  else if(ct<ct1){\n        printf(\"Chris\\n\");\n    }\n    else{\n    printf(\"Friendship is magic!^^\\n\");\n  }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9652061855670103, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "98d877e4ee866e73a0518f441fb306eb", "bug_code_uid": "8b9464873586f7cc2c77e47a8fe105da", "src_uid": "c4d464f1770d2c1b41f8123df4325615", "apr_id": "916f8165b5abee8302bbfc0342ac1c4f", "difficulty": 2000, "tags": ["data structures", "dsu", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MOD 1000000007LL\n\nint root[100001];\nlong long path2root[100001];\n\nint\nfind_all(int x)\n{\n    if(root[x] == x){\n        return x;\n    }\n    int tmp = find_all(root[x]);\n    path2root[x] += path2root[root[x]];\n    path2root[x] %= MOD;\n    return root[x] = tmp;\n}\n\nint\nmain(void)\n{\n    int i, n;\n    scanf(\"%d\", &n);\n    long long ans = 0;\n    for(i = 1; i <= n; ++i){\n        root[i] = i;\n        int k, j;\n        scanf(\"%d\", &k);\n        for(j = 0; j < k; ++j){\n            int v, x, q;\n            scanf(\"%d%d\", &v, &x);\n            q = find_all(v);\n            root[q] = i;\n            path2root[q] = (path2root[v] + x) % MOD;\n            ans += path2root[q];\n            ans %= MOD;\n        }\n    }\n    printf(\"%I64d\", ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define MOD 1000000007LL\n\nint root[100001];\nlong long path2root[100001];\n\nint\nfind_all(int x)\n{\n    if(root[x] == x){\n        return x;\n    }\n    int tmp = find_all(root[x]);\n    path2root[x] += path2root[root[x]] + MOD;\n    path2root[x] %= MOD;\n    return root[x] = tmp;\n}\n\nint\nmain(void)\n{\n    int i, n;\n    scanf(\"%d\", &n);\n    long long ans = 0;\n    for(i = 1; i <= n; ++i){\n        root[i] = i;\n        int k, j;\n        scanf(\"%d\", &k);\n        for(j = 0; j < k; ++j){\n            int v, x, q;\n            scanf(\"%d%d\", &v, &x);\n            q = find_all(v);\n            root[q] = i;\n            path2root[q] = (path2root[v] + x + MOD) % MOD;\n            ans += path2root[q];\n            ans %= MOD;\n        }\n    }\n    printf(\"%I64d\", ans);\n    return 0;\n}\n"}
{"similarity_score": 0.9236430542778289, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "6665f040033d91499f44e17a198cd008", "bug_code_uid": "e143a8fa60e2514410854e08d7ce494a", "src_uid": "ac33b73da5aaf2139b348a9c237f93a4", "apr_id": "9c756377648c8c5c5a8399529f17a32b", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint a[100001];\nint main() {\n\tint n,x;\n\tscanf(\"%d %d\",&n,&x);\n\tint i,j,max=0;\n\tfor (i = 0; i < n; i++) {\n\t\tint l,r;\n\t\tscanf(\"%d %d\",&l,&r);\n\t\tif (r > max) {\n\t\t\tmax = r;\n\t\t}\n\t\tfor (j = l; j <= r; j++) {\n\t\t\ta[j] = 1;\n\t\t}\n\t}\n\tint ans = 0,f,st=-1;\n\ti=1;\n\twhile (i <= max) {\n\t\t//printf(\"val = %d\\n\",i);\n\t\tst = 0,f = 0;\n\t\tfor (j = (x+i)-1; j > i-1; j--) {\n\t\t\tst++;\n\t\t\tif (a[j] != 0) {\n\t\t\t\t//printf(\"ans = %d, %d\\n\",ans,st);\n\t\t\t\tans = ans + (j-i+1);\n\t\t\t\ti = j+1;\n\t\t\t\tf = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (f == 0) {\n\t\t\ti = i + x;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint a[1000001];\nint main() {\n\tint n,x;\n\tscanf(\"%d %d\",&n,&x);\n\tint i,j,max=0;\n\tfor (i = 0; i < n; i++) {\n\t\tint l,r;\n\t\tscanf(\"%d %d\",&l,&r);\n\t\tif (r > max) {\n\t\t\tmax = r;\n\t\t}\n\t\tfor (j = l; j <= r; j++) {\n\t\t\ta[j] = 1;\n\t\t}\n\t}\n\tint ans = 0,f,st=-1;\n\ti=1;\n\twhile (i <= max) {\n\t\tst = 0,f = 0;\n\t\tfor (j = (x+i)-1; j >= i; j--) {\n\t\t\tst++;\n\t\t\tif (a[j] != 0) {\n\t\t\t\tans = ans + (j-i) + 1;\n\t\t\t\ti = j+1;\n\t\t\t\tf = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (f == 0) {\n\t\t\ti = i + x;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9274924471299094, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "943edf8a3cd793db02f793a6814169d7", "bug_code_uid": "00ae72227a01bc56a0dd4e815ca15cf2", "src_uid": "c01fc2cb6efc7eef290be12015f8d920", "apr_id": "e569181ab0edba79ffee5fa358013394", "difficulty": 1200, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n, i;\n\tint flag = 0;\n\n\tscanf(\"%d\", &n);\n\n\tchar a[n], key = '\\0';\n\tscanf(\"%s\", a);\n\n\tfor (i=0; i<n; i++)\n\t\tif (a[i] > a[i+1])\n\t\t{\n\t\t\tkey = a[i];\n\t\t\tbreak;\n\t\t}\n\n\tif (key == '\\0')\n\t\tkey = a[n-1];\n\n\tfor (i=0; i<n; i++)\n\t{\n\t\tif (a[i] != key)\n\t\t\tprintf(\"%c\", a[i]);\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n, i;\n\tint flag = 0;\n\tscanf(\"%d\", &n);\n\n\tchar a[n], key = '\\0';\n\tscanf(\"%s\", a);\n\n\tfor (i=0; i<n; i++)\n\t\tif (a[i] > a[i+1])\n\t\t{\n\t\t\tkey = a[i];\n\t\t\tbreak;\n\t\t}\n\n\tif (key == '\\0')\n\t\tkey = a[n-1];\n\n\tfor (i=0; i<n; i++)\n\t{\n\t\tif (a[i] == key && flag == 0)\n\t\t\tflag = 1;\n\t\telse\n\t\t\tprintf(\"%c\", a[i]);\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.5454545454545454, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "b79e0dbe5525ae32ef1b34e351d95492", "bug_code_uid": "e0a95e6d4859afae88eabcc19bded17c", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "88488be156aa9f71d0407cd7320f3705", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int main(int argc, char** argv){\n    int q;\n    scanf(\"%d\", &q);\n    for(int i = 0; i < q; i++){\n        int a;\n        int b;\n        int n;\n        int s;\n        scanf(\"%d %d %d %d\", &a &b &n &s);\n        for(int j = 0; j < b+1; j++){\n            if((s-j)%n==0){\n                printf(\"YES\\n\");\n                break;\n            }\n            if(j==b+1)printf(\"NO\\n\");\n        }\n    }\n}", "fixed": "#include <stdio.h>\nint main(int argc, char** argv){\n    int q;\n    scanf(\"%d\", &q);\n    for(int i = 0; i < q; i++){\n        long long a;\n        long long b;\n        long long n;\n        long long s;\n        scanf(\"%lld %lld %lld %lld\", &a, &b, &n, &s);\n        if(n*a + b < s){ //mam malo penez\n            printf(\"NO\\n\");\n            continue;\n        }\n        long long p = (s/n);\n        if(p>a) p=a;\n        if((p*n)+b>=s){ //\n            printf(\"YES\\n\");\n        }else{\n            printf(\"NO\\n\");\n        }\n    }\n}"}
{"similarity_score": 0.13110539845758354, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "b3d7420a47d89a49c1e4ade24117527c", "bug_code_uid": "41fb2dfeeadddade21367f75f44f2fa7", "src_uid": "cdafe800094113515e1de1acb60c4bb5", "apr_id": "f6b7d829e5ebff912c233b7a4b316a72", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <iostream>\n#include <cstdlib>\nusing namespace std;\n\nint main()\n{\n    int q,l1,r1,l2,r2,a,b,i;\n    cin >> q;\n    for(i=0;i<q;i++){\n        cin >> l1 >> r1 >> l2 >> r2;\n        while(a==b){\n            a = rand()%((r1 - l1) + 1) + l1 ;\n            b = rand()%((r2 - l2)+ 1) + l2 ;\n        }\n        cout << a << b;\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int a[1000],b[1000],c[1000],d[1000],e,f,g,n;\n    scanf(\"%d\",&n);\n    for(e=0;e<n;e++){\n        scanf(\"%d %d %d %d\",&a[e],&b[e],&c[e],&d[e]);\n        for(f=a[e];f<=b[e];f++){\n            for(g=c[e];g<=d[e];g++){\n                if(f!=g){\n                    printf(\"%d %d\\n\",f,g);\n                    break;\n                }\n\n            }\n           if(f!=g) break;\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.975609756097561, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "3e36006ce7d6b4e013fb6122f44887e0", "bug_code_uid": "eab55421660c6ed6467ca3e74ecebdd9", "src_uid": "17cf2d6f59773925b228188b5a47b710", "apr_id": "ef5587a3134ade942df307b1edef87f4", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,k,t,x,y,i;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++){\n        scanf(\"%d%d%d%d%d\",&a,&b,&c,&d,&k);\n        y=(b/d)+(b%d);\n        x=(a+c-1)/c;\n        if(x+y>k){\n            printf(\"-1\\n\");\n        }\n        else{\n            printf(\"%d %d\\n\",x,y);\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,k,t,x,y,i;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++){\n        scanf(\"%d%d%d%d%d\",&a,&b,&c,&d,&k);\n        y=(b+d-1)/d;\n        x=(a+c-1)/c;\n        if(x+y>k){\n            printf(\"-1\\n\");\n        }\n        else{\n            printf(\"%d %d\\n\",x,k-x);\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.125, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "1b5e5473746151d60b0228c23cca211e", "bug_code_uid": "ea7383ae1405c937e2529388c3a0a6a5", "src_uid": "7f98c9258f3e127a782041c421d6317b", "apr_id": "338b4bdc059f1a9f3119bbb8d361d856", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(int argc, char const *argv[])\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n],b[n];\n\t\tint i;\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&a[i]);\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&b[i]);\n\t\tlong long int sum1=0,sum2=0;\n\t\tint flag=0;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(flag==0)\n\t\t\t{\n\t\t\t\tsum1+=a[i];\n\t\t\t\tflag=1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsum1+=b[i];\n\t\t\t\tflag=0;\n\t\t\t}\n\t\t}\n\t\tflag=1;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(flag==0)\n\t\t\t{\n\t\t\t\tsum2+=a[i];\n\t\t\t\tflag=1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsum2+=b[i];\n\t\t\t\tflag=0;\n\t\t\t}\n\t\t}\n\t\tif(sum1<sum2)\n\t\t\tprintf(\"%lld\\n\",sum1 );\n\t\telse\n\t\t\tprintf(\"%lld\\n\",sum2 );\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main ()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[2*n];\n\tint i;\n\tint b[n+1];\n\tfor(i=0;i<n+1;i++)\n\t\tb[i]=0;\n\tint counter=0;\n\tint max=0;\n\tfor(i=0;i<2*n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tif(b[a[i]]==0)\n\t\t\t\t{\n\t\t\t\t\tb[a[i]]=1;\n\t\t\t\t\tcounter++;\n\t\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(max<counter)\n\t\t\t\t\tmax=counter;\n\t\t\t\tcounter--;\n\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\n}"}
{"similarity_score": 0.46875, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "d0ac328b887aadf897eb603059e84bea", "bug_code_uid": "26d4889637197d5e4f3347ac4d89f65c", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "dd5970abbfc5a0072e91708b9673abf5", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\nint t,w,h,n,i,ans=1;\r\nscanf(\"%d\",&t);\r\nfor(i=0;i<t;i++)\r\n\r\n{\r\nscanf(\"%d%d%d\",&w,&h,&n);\r\n\r\nwhile(w%2==0)\r\nans*=2;\r\nw=w/2;\r\nwhile(h%2==0)\r\nans*=2;\r\nh=h/2;\r\nif(n<=ans)\r\nprintf(\"yes\");\r\nelse\r\nprintf(\"no\");\r\n}\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int i,t;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        int w,h,n,n1=1;\r\n        scanf(\"%d %d %d\",&w,&h,&n);\r\n        while(w%2==0)\r\n        {\r\n            w=w/2;\r\n            n1=n1*2;\r\n        }\r\n        while(h%2==0)\r\n        {\r\n            h=h/2;\r\n            n1=n1*2;\r\n        }\r\n        if(n1>=n)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else if(n1<n)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n   return 0;\r\n\r\n\r\n}\r\n"}
{"similarity_score": 0.9344, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "3c53e646a996ab4c3b4f4a5d6f942bc2", "bug_code_uid": "d55211800130a02dc4cbfa2d08c384d2", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "6ec7569dd7edd78c81fdc4f9ddff51bf", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,a,b,sum=0,i,c=0,s;\n    scanf(\"%d\",&n);\n    int ar[n];\n    for(i=0;i<n-1;i++)\n    {\n        scanf(\"%d\",&ar[i]);\n        c++;\n    }\n    scanf(\"%d %d\",&a,&b);\n    s=b-a;\n    i=0;\n    while(i<s)\n    {\n       sum=sum+ar[i];\n       i++;\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,a,b,sum=0,i,j,t,s;\n    scanf(\"%d\",&n);\n    int ar[n];\n    for(i=0;i<n-1;i++)\n    {\n        scanf(\"%d\",&ar[i]);\n    }\n    scanf(\"%d %d\",&a,&b);\n    s=b-1;\n    i=a-1;\n    while(i<s)\n    {\n       sum=sum+ar[i];\n       i++;\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.8694779116465864, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "489785aeed9aa894f7134939e1f26b34", "bug_code_uid": "60fd2e327b06c7c31f6ffca9f24d0d9c", "src_uid": "3bb093fb17d6b76ae340fab44b08fcb8", "apr_id": "00fdbbb82c012e5fcd3e2203afea925b", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint max(int a,int b)\n{\n    if(a>b)\n    return a;\n    else\n    return b;\n}\nint main()\n{\n    int t;int a,b;int i;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        if(a==b)\n        {\n            printf(\"%d\\n\",4*a*a);\n            continue;\n        }\n        double d=((double)max(a,b)/(a+b-max(a,b)));\n        printf(\"%1.0f\\n\",pow(ceil(d)*(a+b-max(a,b)),2));\n    }\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint max(int a,int b)\n{\n    if(a>b)\n    return a;\n    else\n    return b;\n}\nint main()\n{\n    int t;int a,b;int i;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        if(max(a,b)/2.0 > (a+b-max(a,b)))\n        {\n            printf(\"%d\\n\",max(a,b)*max(a,b));\n            continue;\n        }\n        if(a==b)\n        {\n            printf(\"%d\\n\",4*a*a);\n            continue;\n        }\n        double d=((double)max(a,b)/(a+b-max(a,b)));\n        printf(\"%1.0f\\n\",pow(ceil(d)*(a+b-max(a,b)),2));\n    }\n}"}
{"similarity_score": 0.35984848484848486, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "c5eaf70b073cc667b11bad123124bca5", "bug_code_uid": "313e7946ad6cc2f403c4c7bef7d9a19e", "src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "apr_id": "7b6b78d41df53dde371c6e72a9cba30c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n\n{\n    int t,n,m,i;\n\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n\n      printf(\"%d\\n\",n);\n\n    }\n\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n\n{\n    int n,i,j,k,min;\n\n    scanf(\"%d\",&n);\n\n    int x[n];\n\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&x[i]);\n\n    min=(x[n-1]>x[0])?x[n-1]-x[0]:x[0]-x[n-1];\n    j=0;\n    for(i=1;i<n;i++)\n    {\n        k=(x[i]>x[i-1])?x[i]-x[i-1]:x[i-1]-x[i];\n\n        if(min>k) {min=k; j=i;}\n\n    }\n\n    if(j)  printf(\"%d %d\",j,j+1);\n    else printf(\"1 %d\",n);\n}\n"}
{"similarity_score": 0.9714562167392357, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "2a7e0b692f445cc90fbc59679fd2927d", "bug_code_uid": "c9eff656cfb3f35fae7669dabe35a25c", "src_uid": "81492d3b77bc0674102af17f22bf0664", "apr_id": "ddfb830b26e4220bd3d93ebc8c272676", "difficulty": 1800, "tags": ["probabilities", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n, k, a;\ndouble max = 0;\nint b[8], l[8];\nint c[8] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};\n\nvoid dfs(int x, int y)\n{\n     int i, j;\n\n     if (x == k) {\n\t  int p[8];\n\t  double all = 0;\n\n\t  for (i = 0; i < n; i++) {\n\t       p[i] = l[i] + y / c[i] % 10 * 10;\n\n\t       if (p[i] > 100) p[i] = 100;\n\t  }\n\n\t  for (i = 0; i < (1 << n); i++) {\n\t       int num = 0, sum = 0;\n\t       double m = 1;\n\n\t       for (j = 0; j < n; j++) {\n\t\t    if ((i >> j) & 1) {\n\t\t\t m *= p[j] / 100.0;\n\t\t\t num++;\n\t\t    } else {\n\t\t\t m *= (100 - p[j]) / 100.0;\n\t\t\t sum += b[j];\n\t\t    }\n\t       }\n\n\t       if (num <= n / 2) {\n\t\t    m *= (double)a / (a + sum);\n\t       }\n\n\t       all += m;\n\t  }\n\n\t  if (all > max) max = all;\n     } else {\n\t  for (i = 0; i < n; i++) {\n\t       dfs(x + 1, y + c[i]);\n\t  }\n     }\n}\n\nint main()\n{\n     int i;\n\n     scanf(\"%d %d %d\", &n, &k, &a);\n\n     for (i = 0; i < n; i++) scanf(\"%d %d\", &b[i], &l[i]);\n\n     dfs(0, 0);\n\n     printf(\"%.9lf\\n\", max);\n\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint n, k, a;\ndouble max = 0;\nint b[8], l[8];\nint c[8] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};\nchar f[80000001];\n\nvoid dfs(int x, int y)\n{\n     int i, j;\n\n     if (x == k) {\n\t  int p[8];\n\t  double all = 0;\n\n\t  if (f[y] == 1) return;\n\n\t  f[y] = 1;\n\n\t  for (i = 0; i < n; i++) {\n\t       p[i] = l[i] + y / c[i] % 10 * 10;\n\n\t       if (p[i] > 100) p[i] = 100;\n\t  }\n\n\t  for (i = 0; i < (1 << n); i++) {\n\t       int num = 0, sum = 0;\n\t       double m = 1;\n\n\t       for (j = 0; j < n; j++) {\n\t\t    if ((i >> j) & 1) {\n\t\t\t m *= p[j] / 100.0;\n\t\t\t num++;\n\t\t    } else {\n\t\t\t m *= (100 - p[j]) / 100.0;\n\t\t\t sum += b[j];\n\t\t    }\n\t       }\n\n\t       if (num <= n / 2) {\n\t\t    m *= (double)a / (a + sum);\n\t       }\n\n\t       all += m;\n\t  }\n\n\t  if (all > max) max = all;\n     } else {\n\t  for (i = 0; i < n; i++) {\n\t       dfs(x + 1, y + c[i]);\n\t  }\n     }\n}\n\nint main()\n{\n     int i;\n\n     scanf(\"%d %d %d\", &n, &k, &a);\n\n     for (i = 0; i < n; i++) scanf(\"%d %d\", &b[i], &l[i]);\n\n     dfs(0, 0);\n\n     printf(\"%.9lf\\n\", max);\n\n     return 0;\n}\n"}
{"similarity_score": 0.45472837022132795, "equal_cnt": 19, "replace_cnt": 5, "delete_cnt": 5, "insert_cnt": 9, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "9344ad838782ad084ef570cea240e7d4", "bug_code_uid": "cbb024a3e44f98dcca169139eaf041cb", "src_uid": "2b6e670b602a89b467975edf5226219a", "apr_id": "7b870579ab7ed46a06072cb4e92d3042", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\nint a,b,min;\r\nscanf(\"%d%d\",&a,&b);\r\nif(a==0)\r\nprintf(\"minimum=%d\",1);\r\nelse\r\n{min=(a*1+b*2)+1;\r\nprintf(\"minimum =%d\",min);\r\n}\r\nreturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a,b,c,m,n,i;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d%d\",&a,&b);\r\n        if(a==0)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else\r\n        {\r\n            m=a+2*b+1;\r\n            printf(\"%d\\n\",m);\r\n        }\r\n\r\n    }\r\n      return 0;}\r\n"}
{"similarity_score": 0.8433451118963486, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "633a59b74c3925635d5464fd5eeae23c", "bug_code_uid": "4fd1be7a0a2431c1739a9da2171bc0cd", "src_uid": "9363df0735005832573ef4d17b6a8302", "apr_id": "849b706764d8892f46096372f943781b", "difficulty": 800, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n\tint t;\r\n\tint l, r, k;\r\n\tint oddNum;\r\n\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tscanf(\"%d %d %d\", &l, &r, &k);\r\n\t\tif (l == r) {\r\n\t\t\tif (l == 1)\r\n\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\telse\r\n\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (l % 2 == 1 && r % 2 == 1)\r\n\t\t\toddNum = (r-l)/2+1;\r\n\t\telse\r\n\t\t\toddNum = (r-l)/2;\r\n\t\tif (oddNum > k)\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"YES\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n\tint t;\r\n\tint l, r, k;\r\n\tint oddNum;\r\n\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tscanf(\"%d %d %d\", &l, &r, &k);\r\n\t\tif (l == r) {\r\n\t\t\tif (l == 1)\r\n\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\telse\r\n\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (l % 2 == 1 && r % 2 == 1)\r\n\t\t\toddNum = (r-l)/2;\r\n\t\telse\r\n\t\t\toddNum = (r-l)/2+1;\r\n\t\tif (r-l+1-oddNum <= k)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.96398891966759, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e809b8c39f8ca0a86d2f6b5ee52d65c6", "bug_code_uid": "306a69670373d0358a59c6e49cb33bb7", "src_uid": "c7f31e0c57cf15f71c401d826c3ee0ef", "apr_id": "d330aec85e08e80972285cc1e4d0c5b6", "difficulty": 1900, "tags": ["interactive", "bitmasks", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint i, a, b;\n\n\tprintf(\"?\");\n\tfor (i = 0; i < 100; i++)\n\t\tprintf(\" %d\", i);\n\tprintf(\"\\n\");\n\tfflush(stdout);\n\tscanf(\"%d\", &a);\n\tprintf(\"?\");\n\tfor (i = 0; i < 100; i++)\n\t\tprintf(\" %d\", i << 7);\n\tprintf(\"\\n\");\n\tfflush(stdout);\n\tscanf(\"%d\", &b);\n\tprintf(\"! %d\\n\", (a >> 7) << 7 | (b & (1 << 7) - 1));\n\tfflush(stdout);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n\tint i, a, b;\n\n\tprintf(\"?\");\n\tfor (i = 1; i <= 100; i++)\n\t\tprintf(\" %d\", i);\n\tprintf(\"\\n\");\n\tfflush(stdout);\n\tscanf(\"%d\", &a);\n\tprintf(\"?\");\n\tfor (i = 1; i <= 100; i++)\n\t\tprintf(\" %d\", i << 7);\n\tprintf(\"\\n\");\n\tfflush(stdout);\n\tscanf(\"%d\", &b);\n\tprintf(\"! %d\\n\", (a >> 7) << 7 | (b & (1 << 7) - 1));\n\tfflush(stdout);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6163793103448276, "equal_cnt": 18, "replace_cnt": 12, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "2b613caa369a58351e1e9f7e3acf4cd6", "bug_code_uid": "9ffae20e529fe6b9ba7666eff2cf5229", "src_uid": "daabf732540e0f66d009dc211c2d7b0b", "apr_id": "0eb293adfccfd8ebed6cc0e9f4acb2e1", "difficulty": 1500, "tags": ["number theory", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint a[1000010],b[1000010];\nint cmp(const void *a,const void *b)\n{\n\treturn (* (int *)a-*  (int *)b);\n}int main()\n{\n\tint n,i,j,k,t,t1;\n\tlong long s,t2;\n\twhile(scanf(\"%d%d\",&n,&k)!=EOF)\n\t{\n\t\ts=0;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tb[i]=0;\n\t\t}\n\t\tqsort(a,n,sizeof(a[0]),cmp);\n\t\tb[0]=1;\n\t\tt=0;\n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\tif(a[i]==a[i-1])\n\t\t\tb[t]++;\n\t\t\telse\n\t\t\t{\n\t\t\t\tt++;\n\t\t\t\tb[t]=1;\n\t\t\t\ta[t]=a[i];\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<=t;i++)\n\t\t{\n\t\t\tt1=a[i]^k;\n\t\t\tif(a[i]==t1)\n\t\t\t{\n\t\t\t\tt2=(long long)b[i]*(b[i]-1)/2;\n\t\t\t\ts=s+t2;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tt2=0;\n\t\t\tfor(j=i+1;j<=t;j++)\n\t\t\t{\n\t\t\t\tif(a[j]>t1)\n\t\t\t\tbreak;\n\t\t\t\tif(a[j]==t1)\n\t\t\t\t{\n\t\t\t\t\tt2=(long long)b[j]*b[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\ts=s+t2;\n\t\t}\n\t\tprintf(\"%__int 64\\n\",s);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint a[1000010],b[1000010];\nint cmp(const void *a,const void *b)\n{\n\treturn (* (int *)a-* (int *)b);\n}\nint main()\n{\n\tint n,m,i,j,k;\n\tlong long s,t;\n\twhile(scanf(\"%d%d\",&n,&k)!=EOF)\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tb[a[i]]++;\n\t\t}\n\t\tqsort(a,n,sizeof(a[0]),cmp);\n\t\tm=1;\n\t\ts=0;\n\t\tfor(i=1;i<n;i++)\n\t\tif(a[i]!=a[i-1])\n\t\t{\n\t\t\ta[m]=a[i];\n\t\t\tm++;\n\t\t}\n\t\tfor(i=0;i<m;i++)\n\t\t{\n\t\t\tj=a[i]^k;\n\t\t\tif(j==a[i])\n\t\t\t{\n\t\t\t\ts=s+(long long)b[a[i]]*(b[a[i]]-1)/2;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(j>a[i])\n\t\t\t\ts=s+(long long)b[a[i]]*b[j];\n\t\t\t}\n\t\t}\n\t\tprintf(\"%I64d\\n\",s);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9724770642201835, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "c647857cc472f1f007549e987cb55d17", "bug_code_uid": "e52f604f6d25225ae3f4b124a0141cdc", "src_uid": "74cbcbafbffc363137a02697952a8539", "apr_id": "a9ca2f9a668279768156cdf7b629a224", "difficulty": 1200, "tags": ["number theory", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tlong long n;\n\tscanf(\"%f\",&n);\n\t(n%4==0)? printf(4):printf(0);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main(){\n\tlong long n;\n\tscanf(\"%d\",&n);\n\t(n%4==0)? printf(\"4\"):printf(\"0\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9642857142857143, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b07de90dc5540484185e0d44a7121546", "bug_code_uid": "c985c6009f014986e6168833f7181b09", "src_uid": "07db573b0db736d798b6c18c06c32f3d", "apr_id": "3b3f08ab15190ed72c88e3579ab8d03d", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint t,n,f;\n\tscanf(\"%d\",&t);\n\tfor(int i=1;i<=t;++i){\n\t\tf=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n/2;++i){\n\t\t\tif(n%2==1&&f==0)printf(\"7\");\n\t\t\telse printf(\"1\");\n\t\t\tf=1;\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint t,n,f;\n\tscanf(\"%d\",&t);\n\tfor(int i=1;i<=t;++i){\n\t\tf=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n/2;++i){\n\t\t\tif(n%2==1&&f==0)printf(\"7\");\n\t\t\telse printf(\"1\");\n\t\t\tf=1;\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.982010582010582, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ef9105953f1273ad2daceeb900001719", "bug_code_uid": "51c7e0789630f3eca074ce12db6ce846", "src_uid": "c9da10199ad1a5358195b693325e628b", "apr_id": "b66b51d9db355fbe807b2296e80ad4d3", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main () {\n  int t = 0;\n  int n = 0;\n  int a[200000] = {};\n  int m = 0;\n  int b = 0;\n  \n  int res = 0;\n  \n  res = scanf(\"%d\", &t);\n  \n  while (t > 0) {\n    int bsum = 0;\n    res = scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n      res = scanf(\"%d\", a+i);\n    }\n    res = scanf(\"%d\", &m);\n    for (int i = 0; i < m; i++) {\n      res = scanf(\"%d\", &b);\n      bsum += b;\n    }\n    printf(\"%d\\n\", a[bsum%n]);\n    t--;\n  }\n  \n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main () {\n  int t = 0;\n  int n = 0;\n  int a[200000] = {};\n  int m = 0;\n  int b = 0;\n  \n  int res = 0;\n  \n  res = scanf(\"%d\", &t);\n  \n  while (t > 0) {\n    int bsum = 0;\n    res = scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n      res = scanf(\"%d\", a+i);\n    }\n    res = scanf(\"%d\", &m);\n    for (int i = 0; i < m; i++) {\n      res = scanf(\"%d\", &b);\n      bsum += b;\n      bsum %= n;\n    }\n    printf(\"%d\\n\", a[bsum%n]);\n    t--;\n  }\n  \n  return 0;\n}\n"}
{"similarity_score": 0.9867695700110254, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "3f6105e6e2df4f3b01975b917011f15b", "bug_code_uid": "90a9e7494460b37f0c5f3e406a1534b8", "src_uid": "7e6a2329633ee283e3327413114901d1", "apr_id": "ece6b0ec63f1655a7577d1ae096f8842", "difficulty": 1700, "tags": ["dp", "bitmasks"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define MODULO 998244353\n\n\nvoid main(){\n    unsigned long long a[2001] , temp_a[2001], b[2001], temp_b[2001]; // a[k] = a(n,k), b[k] = b(n,k)\n    \n    // n = 1\n    a[0] = 0llu;\n    a[1] = 2llu;\n    a[2] = 0llu;\n    b[0] = 0llu;\n    b[1] = 0llu;\n    b[2] = 2llu;\n    for (int i = 3; i < 2001; ++i){\n        a[i] = 0;\n        b[i] = 0;\n    }\n    int k,n;\n    scanf(\"%d%d\", &n, &k);\n\n    for (int count = 2; count <= n; ++count ){\n        for (int i = 0; i <= k; ++i){\n            temp_a[i] = a[i] % MODULO;\n            temp_b[i] = b[i] % MODULO;\n        }\n        //update a[k] = a(count,k)\n        for (int i = 0; i < k; ++i){\n            a[i+1] = 2*temp_b[i+1] + temp_a[i] + temp_a[i+1];\n        }\n        \n        for (int i = 1; i < k; ++i){\n            b[i+1] = temp_b[i+1] + temp_b[i-1] + 2*temp_a[i];\n        }\n    }\n    printf(\"%llu\", (a[k]%MODULO + b[k]%MODULO)%MODULO);\n}\n", "fixed": "#include <stdio.h>\n\n#define MODULO 998244353\n\n\nint main(){\n    unsigned long long a[2001] , temp_a[2001], b[2001], temp_b[2001]; // a[k] = a(n,k), b[k] = b(n,k)\n    \n    // n = 1\n    a[0] = 0llu;\n    a[1] = 2llu;\n    a[2] = 0llu;\n    b[0] = 0llu;\n    b[1] = 0llu;\n    b[2] = 2llu;\n    for (int i = 3; i < 2001; ++i){\n        a[i] = 0;\n        b[i] = 0;\n    }\n    int k,n;\n    scanf(\"%d%d\", &n, &k);\n\n    for (int count = 2; count <= n; ++count ){\n        for (int i = 0; i <= k; ++i){\n            temp_a[i] = a[i] % MODULO;\n            temp_b[i] = b[i] % MODULO;\n        }\n        //update a[k] = a(count,k)\n        for (int i = 0; i < k; ++i){\n            a[i+1] = 2*temp_b[i+1] + temp_a[i] + temp_a[i+1];\n        }\n        \n        for (int i = 1; i < k; ++i){\n            b[i+1] = temp_b[i+1] + temp_b[i-1] + 2*temp_a[i];\n        }\n    }\n    printf(\"%llu\\n\", (a[k]%MODULO + b[k]%MODULO)%MODULO);\n    return 0;\n}"}
{"similarity_score": 0.968944099378882, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "26a03ebb4579962a905e201c707b0f8c", "bug_code_uid": "82d11dd4cc91d7adfb5794f71890d6e0", "src_uid": "b4b69320c6040d2d264ac32e9ba5196f", "apr_id": "c049f63585d156cfce61052cd08c5cf7", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int p;\n  long long  int n, t,i,sum;\n    scanf(\"%d\",&p);\n    while(t--)\n    {\n        scanf(\"%lld\",&n);\n        n=n/2;\n        sum=(8*n*(n+1)*(2*n+1))/6;\n            printf(\"%lld\\n\",sum);\n\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  long long  int n, t,i,sum;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        scanf(\"%lld\",&n);\n        n=n/2;\n        sum=(8*n*(n+1)*(2*n+1))/6;\n            printf(\"%lld\\n\",sum);\n\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5189028910303929, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "6202669b0135c78b7740c615022b6018", "bug_code_uid": "7130447a06302c2df49ead9069206178", "src_uid": "a4eeaf7252b9115b67b9eca5f2bf621d", "apr_id": "36851e58de274ffc0339f7c025a75b65", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        long long n1,p1,n2,p2;\n        scanf(\"%lld %lld\",&n1,&p1);\n        scanf(\"%lld %lld\",&n2,&p2);\n\n        long long num1 = n1*pow(10,p1);\n        long long num2 = n2*pow(10,p2); \n\n        if(num1 > num2)\n            printf(\">\\n\");\n        else if(num1 < num2)\n            printf(\"<\\n\");\n        else\n            printf(\"=\\n\");              \n    }\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n\nlong long minv(long x, long y)\n{\n    if(x>=y)\n        return y;\n    else\n        return x;    \n}\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        long long n1,p1,n2,p2;\n        scanf(\"%lld %lld\",&n1,&p1);\n        scanf(\"%lld %lld\",&n2,&p2);\n\n        long long small = minv(p1,p2);\n        p1 = p1 - small;\n        p2 = p2 - small;\n\n        if(p1 >= 7)\n            printf(\">\\n\");\n        else if(p2 >= 7)\n            printf(\"<\\n\");\n        else\n        {\n            for(int i=0;i<p1;i++)\n                n1 = n1*10;\n            for(int j=0;j<p2;j++)\n                n2 = n2*10;\n            if(n1 > n2)\n                printf(\">\\n\");\n            else if(n2 > n1)\n                printf(\"<\\n\");\n            else\n                printf(\"=\\n\");                \n        }        \n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9095154699357851, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "ecfcd4e3658d91b602759bca960b50e6", "bug_code_uid": "e3c6bc7da8d23b5cc0c6ceaab5c0197c", "src_uid": "48e323edc41086cae52cc0e6bdd84e35", "apr_id": "cc54e4e04d0f85b4aa33dda7b928e5d8", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint cf(void const *a, void const *b)\n{\n\treturn (*(char*)a) - (*(char*)b);\n}\nint main()\n{\n\tchar s[1][1], c[1][51], t[51], x[51], y[51];\n\tint n, i, j, k, h, a[51], p, f=0, r=0;\n\t\n\tscanf(\"%d %s %s\", &n, c[0], t);\n\tstrcpy(x, c[0]);\n\tstrcpy(y, t);\n\t\n\tqsort(x, n, sizeof(char), cf);\n\tqsort(y, n, sizeof(char), cf);\n\t\n\tfor(p=0; p<n; p++)\n\t{\n\t\tif(x[p]!=y[p]){\n\t\t\tf=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(f==1){\n\t\tprintf(\"-1\");\n\t}\n\telse\n\t{\n\t\tfor(i=0; i<n-1; i++)\n\t\t{\n\t\t\tfor(k=i; k<n; k++)\n\t\t\t{\n\t\t\t\tif(t[i]==c[0][k]){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(k==i){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(h=k; h>i; h--)\n\t\t\t\t{\n\t\t\t\t\ta[r]=h;\n\t\t\t\t\tr++;\n\t\t\t\t\t\n\t\t\t\t\ts[0][0]=c[0][h];\n\t\t\t\t\tc[0][h]=c[0][h-1];\n\t\t\t\t\tc[0][h-1]=s[0][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", r);\n\t\t\n\t\tfor(j=0; j<r; j++)\n\t\t{\n\t\t\tprintf(\"%d \", a[j]);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint cf(void const *a, void const *b)\n{\n\treturn (*(char*)a) - (*(char*)b);\n}\nint main()\n{\n\tchar s[1][1], c[1][51], t[51], x[51], y[51], a[5000]={\"\\0\"},  b[1][5];\n\tint n, i, j, k, h, p, f=0, r=0;\n\t\n\tscanf(\"%d %s %s\", &n, c[0], t);\n\tstrcpy(x, c[0]);\n\tstrcpy(y, t);\n\t\n\tqsort(x, n, sizeof(char), cf);\n\tqsort(y, n, sizeof(char), cf);\n\t\n\tfor(p=0; p<n; p++)\n\t{\n\t\tif(x[p]!=y[p]){\n\t\t\tf=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(f==1){\n\t\tprintf(\"-1\");\n\t}\n\telse\n\t{\n\t\tfor(i=0; i<n-1; i++)\n\t\t{\n\t\t\tfor(k=i; k<n; k++)\n\t\t\t{\n\t\t\t\tif(t[i]==c[0][k]){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(k==i){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(h=k; h>i; h--)\n\t\t\t\t{\n\t\t\t\t\tsprintf(b[0], \"%d \", h);\n\t\t\t\t\tstrcat(a, b[0]);\n\t\t\t\t\tr++;\n\t\t\t\t\t\n\t\t\t\t\ts[0][0]=c[0][h];\n\t\t\t\t\tc[0][h]=c[0][h-1];\n\t\t\t\t\tc[0][h-1]=s[0][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n%s\", r, a);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.24516129032258063, "equal_cnt": 8, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "b7caef9c076cbf26d9b4724c5e4815fd", "bug_code_uid": "7b6ae5d2e5aecf0c7d2b3b831b4b28fa", "src_uid": "80fdb95372c1e8d558b8c8f31c9d0479", "apr_id": "a58adb1898196fe3ad46375d5986a3ed", "difficulty": 1100, "tags": ["hashing", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tint n,i,j;\n\tscanf(\"%d\",&n);\n\tchar*arr=(char*)malloc(sizeof(char)*(2*(n-1)));\n\tchar*key=(char*)malloc(sizeof(char)*(n-1));\n\tchar*door=(char*)malloc(sizeof(char)*(n-1));\n\tint d=0;\n\tscanf(\" %[^\\n]\",arr);\n\tfor(i=0;i<2*(n-1);i=i+2)\n\t{\n\t\tkey[d]=arr[i];\n\t\tdoor[d]=arr[i+1];\n\t\td++;\n\t}\n//\tprintf(\"\\n\");\n//\tprintf(\"%s\\n\",key);\n//\tprintf(\"%s\\n\",door);\n\tint count=0;\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tfor(j=0;j<=i;j++)\n\t\t{\n\t\t\tif(door[i]==key[j]-32)\n\t\t\t{\n\t\t\t\tkey[j]=1;\n\t\t\t\tcount++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",(n-count-1));\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nchar arr[1000004];\nint b[26]={0};\nint main()\n{\n\tint n,i,j;\n\tscanf(\"%d\",&n);\n\tint d=0,count=0;\n\tscanf(\" %[^\\n]\",arr);\n\tfor(i=0;i<2*(n-1);i++)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\tint s=(int)arr[i]-97;\n\t\t\tb[s]++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint h=(int)arr[i]-65;\n\t\t\tif(b[h]>0)\n\t\t\t{\n\t\t\t\tb[h]--;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",(n-count-1));\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.32238805970149254, "equal_cnt": 23, "replace_cnt": 12, "delete_cnt": 4, "insert_cnt": 7, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "a09566abb70284f620950f092e94362b", "bug_code_uid": "5c5be5e52844d6065f8071f133af908b", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "3aa9171b416ea5ee8988d725d457f443", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int count[10]= {0};\n    int n,tem= -1;\n    for(int tc=0; tc<t; tc++)\n    {   scanf(\"%d\",&n);\n        int ar[n];\n        for(int i=0; i<n; i++)\n        {\n            scanf(\"%d\",&ar[i]);\n        }\n        for(int i=0;i<n;i++){\n            int valu=ar[i];\n            count[valu]++;\n        }\n        for(int i=0;i<10;i++){\n            if(count[i]>=3){\n                printf(\"%d\\n\",i);\n                return 0;\n            }\n        }\n        printf(\"%d\\n\",tem);\n\n    }\n    return 0;\n}\n\n\t \t\t\t \t \t   \t   \t     \t \t \t\t \t", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t,n,x;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a[200001] = {},e = -1;\n        scanf(\"%d\",&n);\n        for(int i=0;i<n;i++){\n                scanf(\"%d\",&x);\n                a[x]++;\n\n                if(a[x]>2){\n                    e = x;\n                }\n\n        }\n        printf(\"%d\\n\",e);\n\n    }\n\n\n\n\n\n\n\n\n    return 0;\n}\n\n \t\t\t\t            \t \t \t  \t  \t\t"}
{"similarity_score": 0.6945514584479912, "equal_cnt": 42, "replace_cnt": 23, "delete_cnt": 5, "insert_cnt": 14, "fix_ops_cnt": 42, "lang": "GNU C11", "fix_code_uid": "1bb5d4e79e0e254adadf6b63b79a5947", "bug_code_uid": "08576561893b270bef7867eb104a4213", "src_uid": "e5fac4a1f3a724234990fe758debc33f", "apr_id": "864609960dac5cc7e7cd91d93318fa97", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n,c=0,b,d,j,l,i;\n    scanf(\"%d\",&t);\n\n    for(i=0;i<t;i++){\n    scanf(\"%d%d\",&n,&b);\n    int a[n];\n    for(i=0;i<n;i++){\n\n        scanf(\"%d\",&a[i]);\n\n    }\n    for(i=0;i<n;i++){\n        c = 0;\n        for(j=0;j<n;j++){\n            if(a[i]==a[j]){\n                    c++;\n                    if(c>1){\n                        a[j]=1000;\n                }\n            }\n        }\n    }\n    for(i=0;i<n;i++){\n        l=1000;\n        for(j=0;j<n;j++){\n            if(a[j]<l){\n                l = a[j];\n                d = j;\n\n            }\n          }\n          if(l<=b){\n            b++;\n          }\n          else if(b+1==l){\n            b++;\n          }\n          else {\n            break;\n          }\n          a[d]=1000;\n        }\n        printf(\"%d\\n\",b);\n    }\n\n   return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a[100],t,n,x;\n    scanf(\"%d\",&t);\n    while(t>0)\n    {\n        int c,i=0,j=0,la,in;\n        scanf(\"%d%d\",&n,&x);\n        while(i!=n)\n        {\n            scanf(\"%d\",&a[i]);\n            i++;\n        }\n        for(i=0; i<n; i++)\n        {\n            c=0;\n            for(j=0; j<n; j++)\n            {\n                if(a[i]==a[j])\n                {\n                    c++;\n                    if(c>1)\n                        a[j]=1000;\n                }\n            }\n        }\n        for(i=0; i<n; i++)\n        {\n            la=1000;\n            for(j=0; j<n; j++)\n            {\n                if(a[j]<la)\n                {\n                    la=a[j];\n                    in=j;\n                }\n            }\n            if(la<=x)\n                x++;\n            else if(la==x+1)\n            {\n                x++;\n            }\n            else\n                break;\n            a[in]=1000;\n        }\n        printf(\"%d\\n\",x);\n        t--;\n    }\n}"}
{"similarity_score": 0.9967637540453075, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "caf1cb0b1733764400f3fd5c06dad917", "bug_code_uid": "836e8eba6004a8fde79a2572abd6cd87", "src_uid": "23ef311011b381d0ca2e84bc861f0a31", "apr_id": "00de331b650b25d7a289f5896cf1562d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint solve(void)\r\n{\r\n    int n;\r\n    int input[100] = {0, };\r\n    int mem[101] = {0, };\r\n    int temp;\r\n    int ret;\r\n\r\n    ret = 0;\r\n    scanf(\"%d\", &n);\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        scanf(\"%d\", &input[i]);\r\n        temp = input[i];\r\n        if (temp < 0)\r\n           temp = -temp;\r\n        if (temp && mem[temp])\r\n            ret++;\r\n        if (!mem[temp])\r\n            ret++;\r\n        mem[temp]++;\r\n    }\r\n    return (ret);\r\n}\r\n\r\nint main (void)\r\n{\r\n    int t;\r\n    int *ret;\r\n\r\n    scanf(\"%d\", &t);\r\n    ret = (int *)malloc(sizeof(int) * t);\r\n    for (int i = 0; i < t; i++)\r\n        ret[i] = solve();\r\n    for (int i = 0; i < t; i++)\r\n        printf(\"%d\\n\", ret[i]);\r\n    free(ret);\r\n    return (0);\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint solve(void)\r\n{\r\n    int n;\r\n    int input[100] = {0, };\r\n    int mem[101] = {0, };\r\n    int temp;\r\n    int ret;\r\n\r\n    ret = 0;\r\n    scanf(\"%d\", &n);\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        scanf(\"%d\", &input[i]);\r\n        temp = input[i];\r\n        if (temp < 0)\r\n           temp = -temp;\r\n        if (temp && mem[temp] == 1)\r\n            ret++;\r\n        if (!mem[temp])\r\n            ret++;\r\n        mem[temp]++;\r\n    }\r\n    return (ret);\r\n}\r\n\r\nint main (void)\r\n{\r\n    int t;\r\n    int *ret;\r\n\r\n    scanf(\"%d\", &t);\r\n    ret = (int *)malloc(sizeof(int) * t);\r\n    for (int i = 0; i < t; i++)\r\n        ret[i] = solve();\r\n    for (int i = 0; i < t; i++)\r\n        printf(\"%d\\n\", ret[i]);\r\n    free(ret);\r\n    return (0);\r\n}"}
{"similarity_score": 0.9974587039390089, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "15a8202f11df71a3d19ecefc239e3155", "bug_code_uid": "40d539bb4b2f512acce5d6e7bbb14401", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "4c0946d2d537ecbadf419ab73ca087c0", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint cmpfunc(const void *a, const void *b)\n{\n    return(*(int*)a-*(int*)b);\n}\nint main()\n{\n    int n,i;\n    scanf(\"%d\", &n);\n    int arr[n], arr1[n-1], arr2[n-2];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n    for(i=0;i<n-1;i++)\n    {\n        scanf(\"%d\", &arr1[i]);\n    }\n    for(i=0;i<n-2;i++)\n    {\n        scanf(\"%d\", &arr2[i]);\n    }\n    qsort(arr,n,sizeof(int),cmpfunc);\n    qsort(arr1,n-1,sizeof(int),cmpfunc);\n    qsort(arr2,n-2,sizeof(int),cmpfunc);\n\n    for(i=0;i<n-1;i++)\n    {\n        if(arr[i]!=arr1[i])\n        {\n            printf(\"%d\\n\", arr[i]);\n            break;\n        }\n    }\n    for(i=0;i<n-2;i++)\n    {\n        if(arr1[i]!=arr2[i])\n        {\n            printf(\"%d\", arr1[i]);\n            break;\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint cmpfunc(const void *a, const void *b)\n{\n    return(*(int*)a-*(int*)b);\n}\nint main()\n{\n    int n,i;\n    scanf(\"%d\", &n);\n    int arr[n], arr1[n-1], arr2[n-2];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n    for(i=0;i<n-1;i++)\n    {\n        scanf(\"%d\", &arr1[i]);\n    }\n    for(i=0;i<n-2;i++)\n    {\n        scanf(\"%d\", &arr2[i]);\n    }\n    qsort(arr,n,sizeof(int),cmpfunc);\n    qsort(arr1,n-1,sizeof(int),cmpfunc);\n    qsort(arr2,n-2,sizeof(int),cmpfunc);\n\n    for(i=0;i<n;i++)\n    {\n        if(arr[i]!=arr1[i])\n        {\n            printf(\"%d\\n\", arr[i]);\n            break;\n        }\n    }\n    for(i=0;i<n-1;i++)\n    {\n        if(arr1[i]!=arr2[i])\n        {\n            printf(\"%d\", arr1[i]);\n            break;\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.990990990990991, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "e88157ca99255f3688cc2d78a310b73f", "bug_code_uid": "2dd91603fc5985d484b8c3f337ed3226", "src_uid": "d00696cb27c679dda6e2e29314a8432b", "apr_id": "f44403f268da5fdfea28f206b51577ac", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n  int n,m;\n  scanf(\"%d\",&n);\n  for(int i=0;i<n;i++){\n    scanf(\"%d\",&m);\n    if(m%2==0) printf(\"%d\",m-1);\n    else printf(\"%d\",m)\n  }\n}", "fixed": "#include<stdio.h>\nint main(){\n  int n,m;\n  scanf(\"%d\",&n);\n  for(int i=0;i<n;i++){\n    scanf(\"%d\",&m);\n    if(m%2==0) printf(\"%d \",m-1);\n    else printf(\"%d \",m);\n  }\n}"}
{"similarity_score": 0.8451519536903039, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "dcbdcc78708c8a59b2b3a8db34300644", "bug_code_uid": "7b005353579078606126db4d02bb5631", "src_uid": "fb58bc3be4a7a78bdc001298d35c6b21", "apr_id": "5c19141bd5ce9eb032c9e503458f165f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,c,i;\n    scanf(\"%d %d\",&n,&c);\n    int a[n],x,k=1;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=1;i<n;i++){\n        x=a[i]-a[i-1];\n        if(x<=c)\n         k++;\n        else\n        k=1;\n    }\n    if(n==1)\n    printf(\"1\\n\");\n    else if(k==1)\n    printf(\"0\\n\");\n    else\n    printf(\"%d\\n\",k);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,c,i;\n    scanf(\"%d %d\",&n,&c);\n    int a[n],x,k=1;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=1;i<n;i++){\n        x=a[i]-a[i-1];\n        if(x<=c)\n         k++;\n        else\n        k=1;\n    }\n    \n    printf(\"%d\\n\",k);\n    return 0;\n}"}
{"similarity_score": 0.9454887218045113, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "73c49af4be12827b5b873a9b16812345", "bug_code_uid": "496a1dc2f59c02eff5076c46450dbe12", "src_uid": "cf7bf89a6038586b69d3b8021cee0b27", "apr_id": "2981c44eda633053ddc4d22e247c789a", "difficulty": 800, "tags": ["implementation", "geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,k,c=0,d=0,e=0,f=0;\n    long long int a,b;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%lld %lld\",&a,&b);\n        if(a>0 && b>0)\n            c++;\n        else if(a>0 && b<0)\n            d++;\n        else if(a<0 && b<0)\n            e++;\n        else\n            f++;\n\n    }\n    j=c+d;\n    k=e+f;\n    if(j==1 || k==1)\n        printf(\"YES\");\n    else if(j==0 || k==0)\n        printf(\"YES\");\n    else if(j>1 || k>1)\n        printf(\"NO\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,k,c=0,d=0,e=0,f=0;\n    long long int a,b;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%lld %lld\",&a,&b);\n        if((a>0 && b>0) || (a>0 && b==0))\n            c++;\n        else if(a>0 && b<0)\n            d++;\n        else if((a<0 && b<0) || (a<0 && b==0))\n            e++;\n        else\n            f++;\n\n    }\n    j=c+d;\n    k=e+f;\n    if(j==1 || k==1)\n        printf(\"YES\");\n    else if(j==0 || k==0)\n        printf(\"YES\");\n    else if(j>1 || k>1)\n        printf(\"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.521087160262418, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "da51f4215e7cdb8866bac794c6ef41eb", "bug_code_uid": "c7e6ff6772574eeccff999070a8083f4", "src_uid": "a003d645999934c255f7b05d8494fa40", "apr_id": "14f80819c18f4a2d26b8c2a22d1c1d69", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\nmain()\n{\nint n;\nint val;\nval=n/2;\nmid=val+1;\nscanf(\"%d\",&n);\n   for(j=1;j<n;j++)\n   if(j<=mid)\n   val=j-1;\n   left=mid-val;\n   right=mid+val;\n   for(k=1;k<left;k++)\n   printf(\"*\");\n   for(k=left;k<=right;k++)\n   printf(\"D\");\n   for(k=right+1;k<=n;k++)\n   printf(\"*\");\n   else\n   {\n   val=n-j;\n   left=mid-val;\n   right=mid+val;\n   for(k=1;k<left;k++)\n   printf(\"*\");\n   for(k=left;k<=right;k++)\n   printf(\"D\");\n   for(k=right+1;k<=n;k++)\n   printf(\"*\");    \n   }\n   printf(\"\\n\");\n   }\n}", "fixed": "#include<stdio.h>\n#include<conio.h>\nmain()\n{\nint n;\nint val,right,left,j,k,mid;\nscanf(\"%d\",&n);\nval=n/2;\nmid=val+1;\n   for(j=1;j<=n;j++)\n   {if(j<=mid)\n   {val=j-1;\n   left=mid-val;\n   right=mid+val;\n   for(k=1;k<left;k++)\n   printf(\"*\");\n   for(k=left;k<=right;k++)\n   printf(\"D\");\n   for(k=right+1;k<=n;k++)\n   printf(\"*\");}\n   else\n   {\n   val=n-j;\n   left=mid-val;\n   right=mid+val;\n   for(k=1;k<left;k++)\n   printf(\"*\");\n   for(k=left;k<=right;k++)\n   printf(\"D\");\n   for(k=right+1;k<=n;k++)\n   printf(\"*\");    \n   }\n   printf(\"\\n\");\n   }\n}"}
{"similarity_score": 0.9874213836477987, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1215353ea88750b9dd93fc725672fc2a", "bug_code_uid": "bb5f4923ce49435ffd456e8e7c6aa6ec", "src_uid": "5d5dfa4f129bda46055fb636ef33515f", "apr_id": "cea1b5bcd88108b07def12bf417ae7e7", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long int n,p,x=0,i,j,flag1=0,a[100],a1[100],min;\n\n    scanf(\"%lld%lld\",&p,&n);\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    min=n+1;\n    for(i=0;i<n;i++)\n    {\n        a[i]=a[i]%p;\n        printf(\"%lld\\t\",a[i]);\n    }\n\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            if(a[j]==a[i]&&j>i)\n            {\n                a1[x]=j+1;\n                flag1++;\n                x++;\n            }\n        }\n\n    }\n    for(i=0;i<x;i++)\n    {\n        if(a1[i]<min)min=a1[i];\n    }\n    if(flag1)printf(\"%lld\",min);\n\n    else printf(\"-1\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long int n,p,x=0,i,j,flag1=0,a[1000],a1[1000],min;\n\n    scanf(\"%lld%lld\",&p,&n);\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    min=n+1;\n    for(i=0;i<n;i++)\n    {\n        a[i]=a[i]%p;\n        //printf(\"%lld\\t\",a[i]);\n    }\n\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            if(a[j]==a[i]&&j>i)\n            {\n                a1[x]=j+1;\n                flag1++;\n                x++;\n            }\n        }\n\n    }\n    for(i=0;i<x;i++)\n    {\n        if(a1[i]<min)min=a1[i];\n    }\n    if(flag1)printf(\"%lld\",min);\n\n    else printf(\"-1\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.9910600255427842, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ff2737676e6b76e4d8dae8d272140333", "bug_code_uid": "66619c7ea28a94309598cdbae829fd96", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "7baf06d5b141a0211491a07d5bd5d7ec", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n     int n;\n     int a,b,count=0,count1=0;\n     scanf(\"%d\",&n);\n     while(n--){\n          scanf(\"%d %d\",&a,&b);\n     if(a>b){\n          count++;\n     }else {\n          count1++;\n     }\n}\nif(count > count1){\n     printf(\"Mishka\");\n}else if(count < count1){\n     printf(\"Chris\");\n}else if(count == count1){\n     printf(\"Friendship is magic!^^\");\n}\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n     int n;\n     int a,b,count=0,count1=0;\n     scanf(\"%d\",&n);\n     while(n--){\n          scanf(\"%d %d\",&a,&b);\n     if(a>b){\n          count++;\n     }else if(a<b){\n          count1++;\n     }\n}\nif(count > count1){\n     printf(\"Mishka\");\n}else if(count < count1){\n     printf(\"Chris\");\n}else if(count == count1){\n     printf(\"Friendship is magic!^^\");\n}\nreturn 0;\n}"}
{"similarity_score": 0.9994921279837481, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5512b754b90e1b2f8df00d3a09b800a3", "bug_code_uid": "ed6d84a740f5f8430048836b46655f59", "src_uid": "480defc596ee5bc800ea569fd76dc584", "apr_id": "78a88cae109ff8e6e8987ea35f8fc728", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    unsigned long long n,k,a[100005],x[26],temp,i,j,gold=0;\n    scanf(\"%llu %llu\",&n,&k);\n    getchar();\n    for(i=0;i<26;i++) x[i]=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%c\",&a[i]);\n        x[a[i]-'A']++;\n      //  printf(\"%llu %llu\\n\",x[a[i]-'A'],a[i]-'A');\n    }\n    getchar();\n\n\n   //  for(i=0;i<26;i++) printf(\" %llu\\n\",x[i]);\n\n    for(i=0;i<25;i++)\n    {\n        for(j=0;j<25-i;j++)\n        {\n            if(x[j]<x[j+1])\n            {\n                temp=x[j];\n                x[j]=x[j+1];\n                x[j+1]=temp;\n            }\n        }\n    }\n\n  // for(i=0;i<26;i++) printf(\"%llu\\n\",x[i]);\n    for(i=0;k>0 ;i++)\n    {\n        if(k<x[i])\n        {\n            gold+=(k*k);\n            k-=k;\n            //printf(\"gold %llu\\n\",k*k);\n        }\n        else\n        {\n            gold+=x[i]*x[i];\n            k-=x[i];\n          //  printf(\"g  %llu\\n\",gold);\n        }\n    }\n\n   printf(\"%llu\\n\",gold);\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    unsigned long long n,k,a[1000005],x[26],temp,i,j,gold=0;\n    scanf(\"%llu %llu\",&n,&k);\n    getchar();\n    for(i=0;i<26;i++) x[i]=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%c\",&a[i]);\n        x[a[i]-'A']++;\n      //  printf(\"%llu %llu\\n\",x[a[i]-'A'],a[i]-'A');\n    }\n    getchar();\n\n\n   //  for(i=0;i<26;i++) printf(\" %llu\\n\",x[i]);\n\n    for(i=0;i<25;i++)\n    {\n        for(j=0;j<25-i;j++)\n        {\n            if(x[j]<x[j+1])\n            {\n                temp=x[j];\n                x[j]=x[j+1];\n                x[j+1]=temp;\n            }\n        }\n    }\n\n  // for(i=0;i<26;i++) printf(\"%llu\\n\",x[i]);\n    for(i=0;k>0 ;i++)\n    {\n        if(k<x[i])\n        {\n            gold+=(k*k);\n            k-=k;\n            //printf(\"gold %llu\\n\",k*k);\n        }\n        else\n        {\n            gold+=x[i]*x[i];\n            k-=x[i];\n          //  printf(\"g  %llu\\n\",gold);\n        }\n    }\n\n   printf(\"%llu\\n\",gold);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.12064965197215777, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "0b563ec9173616f19a58ed3fa27690e9", "bug_code_uid": "ddfd52ce15b47119c56cf2eac1c4eeb5", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "972d06ecbd3f4460238f8d1312c88a83", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n, i, j, m, a;\n    scanf(\"%d\", &n);\n    int ara[n];\n    scanf(\"%d\", &ara[0]);\n    for(i = 1; i <n; i++){\n        scanf(\"%d\", &ara[i]);\n        ara[i] = ara[i]+ ara[i-1];\n    }\n    scanf(\"%d\", &m);\n    for( i = 0; i <m; i++){\n            scanf(\"%d\", &a);\n         //   printf(\"value of a is %d\\n\", a);\n            if(a<= ara[0]){\n                printf(\"1\\n\");\n            }\n            else{\n        for(j = 1; j <n-1; j++){\n            if(a>ara[j] && a<= ara[j+1]){\n                printf(\"%d\\n\", j+2);\n                break;\n            }\n        }\n    }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint j,i,n,sum=0,m,x,a[1000000];\nscanf(\"%d\",&n);\nj=0;\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&x);\nsum+=x;\nfor( ;j<sum;j++)\na[j]=i+1;\n}\nscanf(\"%d\",&m);\nfor(i=0;i<m;i++)\n{\nscanf(\"%d\",&x);\nprintf(\"%d\\n\",a[x-1]);\n}\nreturn 0;\n}"}
{"similarity_score": 0.9965397923875432, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "247d8557d6228c4f91a05ae69a2d8bd3", "bug_code_uid": "b3d1ef8c28c6c006c7ac456f961ad5ad", "src_uid": "e6753e3f71ff13cebc1aaf04d3d2106b", "apr_id": "97cdba28fd647e2a239e5048ef3897e2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main(){\r\n    int testcases;\r\n    scanf(\"%i\",&testcases);\r\n    int height,width;\r\n    for(int i=0;i<testcases;i++){\r\n        scanf(\"%i\",&height);\r\n        scanf(\"%i\",&width);\r\n        printf(\"%i %i\",height/2+1,width/2+1);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main(){\r\n    int testcases;\r\n    scanf(\"%i\",&testcases);\r\n    int height,width;\r\n    for(int i=0;i<testcases;i++){\r\n        scanf(\"%i\",&height);\r\n        scanf(\"%i\",&width);\r\n        printf(\"%i %i\\n\",height/2+1,width/2+1);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9948453608247423, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f134f9613d4eb87f0f6ac6cc048ca5ba", "bug_code_uid": "e6d9395a839eab0a461b71a2d776a3bc", "src_uid": "4dddcf0ded11672a4958fb0d391dbaf5", "apr_id": "b92f280316ebb12fcff06d372f5958f9", "difficulty": 1900, "tags": ["constructive algorithms", "math", "combinatorics"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#define blabla 10e-12\nint main()\n{\n    int n,d,i,j;\n    long long int k;\n    scanf(\"%d %I64d %d\",&n,&k,&d);\n    if(k>=n)\n        for(i = 0 ; i<d ; i++)\n        {\n            for(j = 0 ; j<n ; j++){\n                printf(\"%d\",j+1);\n                if(j<n-1) printf(\" \");\n            }\n            if(i < d-1) printf(\"\\n\");\n            }\n    else if(1.0*n - pow(k,d) > blabla ) printf(\"-1\");\n    else {\n                int arr[d][n],s2,s;\n                for(i = 0 ; i < d ; i++){\n                    s2 = 0, s= s2%k;\n                    for(j = 0 ; j < n ; j++){\n                        if(j >= n*s2/pow(k,i+1)){\n                            s2++;\n                            s = s2%k;\n                        }\n                        printf(\"%d\",s+1);\n                        if(j<n-1) printf(\" \");\n                    }\n                    if(i < d-1) printf(\"\\n\");\n                }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#define blabla 10e-12\nint main()\n{\n    int n,d,i,j;\n    long long int k;\n    scanf(\"%d %I64d %d\",&n,&k,&d);\n    if(k>=n)\n        for(i = 0 ; i<d ; i++)\n        {\n            for(j = 0 ; j<n ; j++){\n                printf(\"%d\",j+1);\n                if(j<n-1) printf(\" \");\n            }\n            if(i < d-1) printf(\"\\n\");\n            }\n    else if(1.0*n - pow(k,d) > blabla ) printf(\"-1\");\n    else {\n                int arr[d][n],s2,s;\n                for(i = 0 ; i < d ; i++){\n                    s2 = 0, s= s2%k;\n                    for(j = 0 ; j < n ; j++){\n                        if(j >= ceil(1.0*n*s2/pow(k,i+1))){\n                            s2++;\n                            s = s2%k;\n                        }\n                        printf(\"%d\",s+1);\n                        if(j<n-1) printf(\" \");\n                    }\n                    if(i < d-1) printf(\"\\n\");\n                }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5720620842572062, "equal_cnt": 27, "replace_cnt": 15, "delete_cnt": 4, "insert_cnt": 8, "fix_ops_cnt": 27, "lang": "GNU C", "fix_code_uid": "e179f6b0052d401805dbdf854b34a35b", "bug_code_uid": "4e59523b27cc67a6cf7adb9db1e0a956", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "48f0c3bb0cb449e844e31564b99395bb", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n   int i,n,s=0;\n   scanf(\"%d\",&n);\n   char a[3];\n   for(i=0;i<n;i++)\n       {\n          gets(a);\n          if(a[1]=='+')\n             s = s+1;\n          else if(a[1]=='-')\n             s = s-1;\n\n       }\n    printf(\"%d\",s);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,i,num=0;\n\tscanf(\"%d\",&t);\n\tchar a[4];\n\tnum = t;\n\tfor(i=0;i<t;i++)\n\t{\n\t\tscanf(\"%s\",a);\n\t\tif(a[1] == '-')\n\t\t\tnum-=2;\n\t}\t\n\tprintf(\"%d\",num);\n}\n\n"}
{"similarity_score": 0.23815028901734103, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "0954fc67e877fbf870fa935dac0333bf", "bug_code_uid": "652952e6680a75a02082475949d9830d", "src_uid": "a7e98ed8ee1b0a4fd03dfcd222b68c6f", "apr_id": "30b607d750c30ae7d64a278f73a256a4", "difficulty": 800, "tags": ["two pointers", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n int t;\n scanf(\"%d\",&t);\n while(t--)\n {\n  int a[1000],n,s[2]={0,0},f=0,l,flag=0,i;\n  scanf(\"%d\",&n);\n  l=n-1;\n  for(i=0;i<n;i++)\n  scanf(\"%d\",&a[i]);\n  for(i=0;i<n;i++)\n  {\n   if(a[f]>=a[l])\n   {\n    s[flag]+=a[f];\n    if(flag)\n    flag=0;\n    else\n    flag=1;\n    f++;\n   }\n   else\n   {\n    s[flag]+=a[l];\n    if(flag)\n    flag=0;\n    else\n    flag=1;\n    l--;\n   }\n  }\n  printf(\"%d %d\\n\",s[0],s[1]);\n }\n return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int t;\n  int a[1000],n,s[2]={0,0},f=0,l,flag=0,i;\n  scanf(\"%d\",&n);\n  l=n-1;\n  for(i=0;i<n;i++)\n  scanf(\"%d\",&a[i]);\n  for(i=0;i<n;i++)\n  {\n   if(a[f]>=a[l])\n   {\n    s[flag]+=a[f];\n    if(flag)\n    flag=0;\n    else\n    flag=1;\n    f++;\n   }\n   else\n   {\n    s[flag]+=a[l];\n    if(flag)\n    flag=0;\n    else\n    flag=1;\n    l--;\n   }\n  }\n  printf(\"%d %d\\n\",s[0],s[1]);\n  return 0;\n}\n"}
{"similarity_score": 0.9852941176470589, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2ddaae270e2b5fe738a8a61773441a9b", "bug_code_uid": "d8993b7570132cc7269d674313df5692", "src_uid": "34aa41871ee50f06e8acbd5eee94b493", "apr_id": "5287821e1bc9867d7e04960cc762c1a3", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tlong long r,g,b;\n\t\tscanf(\"%lld %lld %lld\",&r,&g,&b);\n\t\tif(r+g>=b && r+b>=g && b+g>=r)printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tlong long r,g,b;\n\t\tscanf(\"%lld %lld %lld\",&r,&g,&b);\n\t\tif(r+g+1>=b && r+b+1>=g && b+g+1>=r)printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n}\n"}
{"similarity_score": 0.9990393852065321, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4a354af2f2d9bbbbe5ace25bc9a1134c", "bug_code_uid": "67e54f1d481999cab42944fbf271892a", "src_uid": "ae7c80e068e267673a5f910bb0b121ec", "apr_id": "f00c0175214c5a889cee3a602e111a18", "difficulty": 1500, "tags": ["data structures", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint i,j,k,n,m,x,y,x1,z,t1=0;\n\tscanf(\"%d%d\",&n,&k);\n\tchar a[n+1][k+1];\n\tfor(i=1;i<=n;i++)\n\tscanf(\"%s\",&a[i]);\n\tstrcpy(a[0],a[1]);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tfor(j=i+1;j<=n;j++)\n\t\t{\n\t\t\tif(strcmp(a[i],a[j])==1)\n\t\t\t{\n\t\t\t\tstrcpy(a[0],a[i]);\n\t\t\t\tstrcpy(a[i],a[j]);\n\t\t\t\tstrcpy(a[j],a[0]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=n-2;i++)\n\t{\n\t\tfor(j=i+1;j<=n-1;j++)\n\t\t{\n\t\t\tfor(x=0;x<k;x++)\n\t\t\t{\n\t\t\t\tif(a[i][x]==a[j][x])\n\t\t\t\ta[0][x]=a[i][x];\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(a[i][x]!='S'&&a[j][x]!='S')\n\t\t\t\t\ta[0][x]='S';\n\t\t\t\t\telse if(a[i][x]!='E'&&a[j][x]!='E')\n\t\t\t\t\ta[0][x]='E';\n\t\t\t\t\telse\n\t\t\t\t\ta[0][x]='T';\n\t\t\t\t}\n\t\t\t}\n\t\t\tchar h[k+1],l[k+1],m[k+1];\n\t\t\t\tstrcpy(h,a[n]);strcpy(l,a[1]);y=n;x1=1;z=0;\n\twhile(1)\n\t{\n\t\tstrcpy(l,a[x1]);\n\t\tstrcpy(h,a[y]);\n\t\tstrcpy(m,a[x1+(y-x1)/2]);\n\t\tif(strcmp(a[0],m)==0)\n\t\t{\n\t\t\tz=1;\n\t\t\tbreak;\n\t\t}\n\t\telse if(strcmp(a[0],m)==-1)\n\t\t\ty=y-(y-x1)/2-1;\n\t\t\telse\n\t\t\tx1=x1+(y-x1)/2+1;\n\t\t\tif((x1==y)&&(strcmp(a[0],a[x1])!=0)&&(strcmp(a[0],a[y])!=0))\n\t\t\tbreak;\n\t}\n\tif(z==1)\n\tt1++;\n\t\t\t\n\t\t}\n\t}\n\tprintf(\"%d\",t1);\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint i,j,k,n,m,x,y,x1,z,t1=0;\n\tscanf(\"%d%d\",&n,&k);\n\tchar a[n+1][k+1];\n\tfor(i=1;i<=n;i++)\n\tscanf(\"%s\",&a[i]);\n\tstrcpy(a[0],a[1]);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tfor(j=i+1;j<=n;j++)\n\t\t{\n\t\t\tif(strcmp(a[i],a[j])==1)\n\t\t\t{\n\t\t\t\tstrcpy(a[0],a[i]);\n\t\t\t\tstrcpy(a[i],a[j]);\n\t\t\t\tstrcpy(a[j],a[0]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=n-2;i++)\n\t{\n\t\tfor(j=i+1;j<=n-1;j++)\n\t\t{\n\t\t\tfor(x=0;x<k;x++)\n\t\t\t{\n\t\t\t\tif(a[i][x]==a[j][x])\n\t\t\t\ta[0][x]=a[i][x];\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(a[i][x]!='S'&&a[j][x]!='S')\n\t\t\t\t\ta[0][x]='S';\n\t\t\t\t\telse if(a[i][x]!='E'&&a[j][x]!='E')\n\t\t\t\t\ta[0][x]='E';\n\t\t\t\t\telse\n\t\t\t\t\ta[0][x]='T';\n\t\t\t\t}\n\t\t\t}\n\t\t\tchar h[k+1],l[k+1],m[k+1];\n\t\t\t\tstrcpy(h,a[n]);strcpy(l,a[1]);y=n;x1=j;z=0;\n\twhile(1)\n\t{\n\t\tstrcpy(l,a[x1]);\n\t\tstrcpy(h,a[y]);\n\t\tstrcpy(m,a[x1+(y-x1)/2]);\n\t\tif(strcmp(a[0],m)==0)\n\t\t{\n\t\t\tz=1;\n\t\t\tbreak;\n\t\t}\n\t\telse if(strcmp(a[0],m)==-1)\n\t\t\ty=y-(y-x1)/2-1;\n\t\t\telse\n\t\t\tx1=x1+(y-x1)/2+1;\n\t\t\tif((x1==y)&&(strcmp(a[0],a[x1])!=0)&&(strcmp(a[0],a[y])!=0))\n\t\t\tbreak;\n\t}\n\tif(z==1)\n\tt1++;\n\t\t\t\n\t\t}\n\t}\n\tprintf(\"%d\",t1);\n}"}
{"similarity_score": 0.8123711340206186, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "f022f9f83789a84cc879b50c30e42ff8", "bug_code_uid": "5308d4e0b452391307cc7a56fed440a8", "src_uid": "5358fff5b798ac5e500d0f5deef765c7", "apr_id": "ff032752145bfd7c12a97807551baf7a", "difficulty": 1200, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,c=0;\n    int ara[10100];\n    int cumsum[10100];\n    scanf(\"%d\",&n);\n  for(i=0;i<n;i++){\n      scanf(\"%d\",&ara[i]);\n      if(i>0)\n      cumsum[i]=ara[i]+cumsum[i-1];\n      else\n      cumsum[i]=ara[i];\n                  }\n  for(i=0;i<n;i++){\n\n    if(cumsum[i]>=0&&i<n-1){\n        if(cumsum[i]==(cumsum[n-1]-cumsum[i]))\n           {\n               c++;\n              }\n                    }}\n                    printf(\"%d\",c);\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,c=0;\n    int ara[101000];\n    int cumsum[101000];\n    scanf(\"%d\",&n);\n  for(i=0;i<n;i++){\n      scanf(\"%d\",&ara[i]);\n      if(i>0)\n      cumsum[i]=ara[i]+cumsum[i-1];\n      else\n      cumsum[i]=ara[i];\n                  }\n  for(i=0;i<n-1;i++){\n \n  //  if(cumsum[i]>=0){\n        if(cumsum[i]==(cumsum[n-1]-cumsum[i]))\n           {\n               c++;\n              }\n                    }//}\n                    printf(\"%d\",c);\n    return 0;\n}"}
{"similarity_score": 0.9981203007518797, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e61a2c5ccbe3aa4c628022213ac5067b", "bug_code_uid": "99d3faec4561c567835dbaacdcd14ca3", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "e1214387d9d3230d55bf577c2074e942", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    char a[1000];\n    int i,move=-1;\n    gets(a);\n    for (i=0;a[i] != '\\0';i++)\n        {\n           if (a[i] -'0'== 0){\n                move = i;\n                break;\n           }\n        }\n    if (move == -1)\n    {\n        for (i = 1;a[i] !='\\0' ;i++)\n            printf(\"%d\",a[i]-'0');\n    }\n    else\n    {\n        for (i= 0;a[i] != '\\0';i++)\n        {\n            if (i != move)\n                printf(\"%d\",a[i] - '0');\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    char a[100000];\n    int i,move=-1;\n    gets(a);\n    for (i=0;a[i] != '\\0';i++)\n        {\n           if (a[i] -'0'== 0){\n                move = i;\n                break;\n           }\n        }\n    if (move == -1)\n    {\n        for (i = 1;a[i] !='\\0' ;i++)\n            printf(\"%d\",a[i]-'0');\n    }\n    else\n    {\n        for (i= 0;a[i] != '\\0';i++)\n        {\n            if (i != move)\n                printf(\"%d\",a[i] - '0');\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.999043062200957, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9bee9f11912d3499c1a559be035bdce4", "bug_code_uid": "3967052ee32f4a001d1c9742eb74ac9d", "src_uid": "b20e98f2ea0eb48f790dcc5dd39344d3", "apr_id": "e532263f211a23be3eeae93b64d6a2de", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"stdio.h\"\n#include \"stdlib.h\"\n#include \"string.h\"\n#include \"math.h\"\n\nint a, b, c, d, i, j, k, l, n, m, p;\n\nint arr[101][101];\nint votes[101];\nint maxInCity, maxAll, maxP, theBest;\n\nint main() {\n    \n    scanf(\"%d %d\", &n, &m);\n    \n    for (i = 0; i < m; i++) {\n        for (j = 0; j < n; j++) {\n            scanf(\"%d\", &arr[i][j]);\n            //printf(\"%d \", arr[m][n]);\n        }\n    }\n    \n    for (k = m - 1; k >= 0; k--) {\n        maxInCity = 0;\n        maxP = 0;\n        for (l = n - 1; l >= 0; l--) {\n            //printf(\"%d \", arr[k][l]);\n            if (arr[k][l] >= maxInCity) {\n                //printf(\"%d %d %d\\n\", maxInCity, arr[k][l],maxP);\n                maxInCity = arr[k][l];\n                maxP = l;\n            }\n        }\n        votes[maxP]++;\n        //printf(\"%d %d\\n\", maxP, votes[maxP]);\n        \n    }\n    \n    for (p = m - 1; p >= 0; p--) {\n        if (votes[p] >= maxAll) {\n            maxAll = votes[p];\n            theBest = p;\n        }\n    }\n    \n    printf(\"%d\", theBest + 1);\n    \n    return 0;\n}\n", "fixed": "#include \"stdio.h\"\n#include \"stdlib.h\"\n#include \"string.h\"\n#include \"math.h\"\n\nint a, b, c, d, i, j, k, l, n, m, p;\n\nint arr[101][101];\nint votes[101];\nint maxInCity, maxAll, maxP, theBest;\n\nint main() {\n    \n    scanf(\"%d %d\", &n, &m);\n    \n    for (i = 0; i < m; i++) {\n        for (j = 0; j < n; j++) {\n            scanf(\"%d\", &arr[i][j]);\n            //printf(\"%d \", arr[m][n]);\n        }\n    }\n    \n    for (k = m - 1; k >= 0; k--) {\n        maxInCity = 0;\n        maxP = 0;\n        for (l = n - 1; l >= 0; l--) {\n            //printf(\"%d \", arr[k][l]);\n            if (arr[k][l] >= maxInCity) {\n                //printf(\"%d %d %d\\n\", maxInCity, arr[k][l],maxP);\n                maxInCity = arr[k][l];\n                maxP = l;\n            }\n        }\n        votes[maxP]++;\n        //printf(\"%d %d\\n\", maxP, votes[maxP]);\n        \n    }\n    \n    for (p = n - 1; p >= 0; p--) {\n        if (votes[p] >= maxAll) {\n            maxAll = votes[p];\n            theBest = p;\n        }\n    }\n    \n    printf(\"%d\", theBest + 1);\n    \n    return 0;\n}\n"}
{"similarity_score": 0.9482288828337875, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "4f1065e61eb5e07808e13411c94bc2bd", "bug_code_uid": "1b8f594d527aaebd2469fb6a7bad0bcc", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "47aafdec99963f53dbb886907cbbc94e", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n\n    int n;\n    int i, array[100],sum=0,k, flag=1;;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&array[i]);\n         sum=sum+array[i];\n    }\n    \n    for(i=0;i<n-1;i++)\n    {\n\n        for(int j=0;j<n-1-i;j++)\n        {\n\n            if(array[j]>array[j+1])\n            {\n                int temp=array[j];\n                array[j]=array[j+1];\n                array[j+1]=temp;\n            }\n        }\n    }\n    int max=array[n-1];\n    sum =sum-max;\n    if(max<=sum)\n    {\n       k=max;\n        for(i=n-1;i>=0;i--)\n        {\n\n            k=k+array[i];\n            sum =sum-array[i];\n            flag++;\n            if(k>sum)\n             break;\n        }\n}\n\nprintf(\"%d\",flag);\n}\n\n\n", "fixed": "#include<stdio.h>\nint main ()\n{\n\n    int n;\n    int i, array[100],sum=0,k, flag=1;;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&array[i]);\n         sum=sum+array[i];\n    }\n\n    for(i=0;i<n-1;i++)\n    {\n\n        for(int j=0;j<n-1-i;j++)\n        {\n\n            if(array[j]>array[j+1])\n            {\n                int temp=array[j];\n                array[j]=array[j+1];\n                array[j+1]=temp;\n            }\n        }\n    }\n    int max=array[n-1];\n    sum =sum-max;\n    if(max<=sum)\n    {\n       k=max;\n        for(i=n-2;i>=0;i--)\n        {\n\n            k=k+array[i];\n\n            sum =sum-array[i];\n\n\n\n            flag++;\n\n\n            if(k>sum)\n             break;\n        }\n}\n printf(\"%d\",flag);\n\n\n}\n\n\n"}
{"similarity_score": 0.9780564263322884, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "00defec8d22d4c2f609a2be15dbacb51", "bug_code_uid": "9e2746925452da0675818490660ef087", "src_uid": "33e751f5716cbd666be36ab8f5e3977e", "apr_id": "2ff3eb4462b590d3632360085de04e2c", "difficulty": 800, "tags": ["brute force", "combinatorics", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int i,j,n,t,f[1000];\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%d\",&f[j]);\n            \n        }\n        \n         printf(\"%d\",3*(10-n)*(9-n));\n        \n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int i,j,n,t,f[1000];\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%d\",&f[j]);\n           \n           \n        }\n        \n         printf(\"%d \\n\",3*(10-n)*(9-n));\n        \n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.996328029375765, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "924b2934d2768a11731f4ad8d551a84a", "bug_code_uid": "dad4727cc16f138512685a514ef26029", "src_uid": "48bb148e2c4d003cad9d57e7b1ab78fb", "apr_id": "ffc7b12e9e3187415ba4796c56ffd2ef", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\n\n        #include<stdio.h>\n        #include<conio.h>\n        main()\n        {\n        int n,i,j,num=1;\n        int a[100];\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d \",&a[i]);\n        }\n        for(i=0;i<n;i++)\n        {\n        for(j=0;j<n;j++)\n        {\n            if(a[j]==num)\n            {printf(\"%d\",j+1);\n            num=num+1;\n            }\n        }}\n        }", "fixed": "        #include<stdio.h>\n        #include<conio.h>\n        main()\n        {\n        int n,i,j,num=1;\n        int a[100];\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d \",&a[i]);\n        }\n        for(i=0;i<n;i++)\n        {\n        for(j=0;j<n;j++)\n        {\n            if(a[j]==num)\n            {printf(\"%d \",j+1);\n            num=num+1;\n            }\n        }}\n        }"}
{"similarity_score": 0.9483870967741935, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "7152d4cfbfb0955323ab3c4ff0a6e327", "bug_code_uid": "8fb43be77c4b2c23d6c52aeeafa9fc67", "src_uid": "8a4a46710104de78bdf3b9d5462f12bf", "apr_id": "3e360a7d5722d4f55be3f3af2e55f668", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 1000\n\nint m, n, need[N - 2][N - 2];\n\nint main (void) {\n  int i, j, k, x, y, ans = -1;\n  scanf (\"%d %d\", &n, &m);\n  for (i = 0; i < n - 2; ++i)\n    for (j = 0; j < n - 2; ++j)\n      need[i][j] = 9;\n  for (i = 0; i < m && ans == -1; ++i) {\n    scanf (\"%d %d\", &x, &y); --x, --y;\n    for (j = -2; j <= 0; ++j) {\n      for (k = -2; k <= 0; ++k) {\n        if (0 <= x+j && x+j < n && 0 <= y+k && y+k < n) {\n          int *p = &need[x + j][y + k];\n          --*p;\n          if (*p == 0) ans = i + 1;\n        }\n      }\n    }\n  }\n  printf (\"%d\\n\", ans);\n  exit (EXIT_SUCCESS);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 1000\n\nint m, n, need[N - 2][N - 2];\n\nint main (void) {\n  int i, j, k, x, y, ans = -1;\n  scanf (\"%d %d\", &n, &m);\n  for (i = 0; i < n - 2; ++i)\n    for (j = 0; j < n - 2; ++j)\n      need[i][j] = 9;\n  for (i = 0; i < m && ans == -1; ++i) {\n    scanf (\"%d %d\", &x, &y); --x, --y;\n    for (j = -2; j <= 0; ++j) {\n      for (k = -2; k <= 0; ++k) {\n        if (0 <= x+j && x+j < n - 2 && 0 <= y+k && y+k < n - 2) {\n          --need[x + j][y + k];\n          if (need[x + j][y + k] == 0) ans = i + 1;\n        }\n      }\n    }\n  }\n  printf (\"%d\\n\", ans);\n  exit (EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.8794992175273866, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "148127b253f94e2fcb3921f125a4d173", "bug_code_uid": "eb4506fd19d19eec51afb8420bbac20d", "src_uid": "8e89fc6c3dfa30ac8c3495e2b1a1e106", "apr_id": "54d4ced0fe65ee853998968109b420f5", "difficulty": 1800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdint.h>\n#include <inttypes.h>\n\nint64_t solve (const int N, const int M, const int X1, const int Y1,\n        const int X2, const int Y2)\n{\n    int64_t distx = X1 > X2 ? X1 - X2 : X2 - X1;\n    int64_t disty = Y1 > Y2 ? Y1 - Y2 : Y2 - Y1;\n    int64_t width = N - distx, height = M - disty;\n    int64_t result = N * M - width * height * 2;\n    if (distx < width && disty < height)\n        result += (width - distx) * (height - disty);\n    return result;\n}\n\nint main ()\n{\n    int T;\n    scanf (\"%d\", &T);\n    int N[T], M[T], X1[T], Y1[T], X2[T], Y2[T];\n    for (int i = 0; i < T; i++)\n        scanf (\"%d%d%d%d%d%d\", \n                &N[i], &M[i], &X1[i], &Y1[i], &X2[i], &Y2[i]);\n    int64_t result[T];\n    for (int i = 0; i < T; i++)\n        result[i] = solve (N[i], M[i], X1[i], Y1[i], X2[i], Y2[i]);\n    for (int i = 0; i < T; i++)\n        printf (\"%\"PRId64\"\\n\", result[i]);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdint.h>\n#include <inttypes.h>\n\nint64_t solve (const int64_t N, const int64_t M, \n        const int64_t X1, const int64_t Y1,\n        const int64_t X2, const int64_t Y2)\n{\n    int64_t distx = X1 > X2 ? X1 - X2 : X2 - X1;\n    int64_t disty = Y1 > Y2 ? Y1 - Y2 : Y2 - Y1;\n    int64_t width = N - distx, height = M - disty;\n    int64_t result = N * M - width * height * 2;\n    if (distx < width && disty < height)\n        result += (width - distx) * (height - disty);\n    return result;\n}\n\nint main ()\n{\n    int T;\n    scanf (\"%d\", &T);\n    int64_t N[T], M[T], X1[T], Y1[T], X2[T], Y2[T];\n    for (int i = 0; i < T; i++)\n        scanf (\"%\"SCNd64\"%\"SCNd64\"%\"SCNd64\"%\"SCNd64\"%\"SCNd64\"%\"SCNd64, \n                &N[i], &M[i], &X1[i], &Y1[i], &X2[i], &Y2[i]);\n    int64_t result[T];\n    for (int i = 0; i < T; i++)\n        result[i] = solve (N[i], M[i], X1[i], Y1[i], X2[i], Y2[i]);\n    for (int i = 0; i < T; i++)\n        printf (\"%\"PRId64\"\\n\", result[i]);\n    return 0;\n}\n"}
{"similarity_score": 0.9989550679205852, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2712c334cf359e083dac92f1a92f41b0", "bug_code_uid": "47b64de2fddeba6cc9b17810a8b2dee0", "src_uid": "37cf6edce77238db53d9658bc92b2cab", "apr_id": "8c819a22431f68ffce15234bac14d0ab", "difficulty": 1400, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,m,a[100],b[100],i;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n+1;i++)\n    scanf(\"%d\",&a[i]);\n\n    for(i=0;i<m+1;i++)\n    scanf(\"%d\",&b[i]);\n\n\n    if(n>m)\n    {\n        if(a[0]*b[0]>0) printf(\"Infinity\");\n        else  printf(\"-Infinity\");\n    }\n    if(n==m)\n    {\n        reducing (a[0],b[0]);\n    }\n    if(n<m)\n    printf(\"0/1\");\n    return 0;\n}\nvoid reducing(int n, int d)\n{\n     int max,p,q,i,n1,d1;\n     if(n<0) n1=(-1)*n;\n     else n1=n;\n     if(d<0) d1=(-1)*d;\n     else d1=d;\n     if(n1>d1) max = n1;\n     else max=d1;\n     p=n1;\n     q=d1;\n\n     for(i=2;i<=max/2;i++)\n     {\n      if(n1%i ==0 && d1%i ==0)\n      {\n          while (n1%i ==0 && d1%i ==0)\n        {n1/=i;\n        d1/=i;}\n        }\n      }\n      if(d<0 && n>0)\n     printf(\"-%d/%d\",n1,d1);\n     if(d<0 && n<0)\n     printf(\"%d/%d\",n1,d1);\n     if(n<0 && d>0)\n     printf(\"-%d/%d\",n1,d1);\n     if(n>0 && d>0)\n     printf(\"%d/%d\",n1,d1);\n     return 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,m,a[100],b[100],i;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n+1;i++)\n    scanf(\"%d\",&a[i]);\n\n    for(i=0;i<m+1;i++)\n    scanf(\"%d\",&b[i]);\n\n\n    if(n>m)\n    {\n        if(a[0]*b[0]>0) printf(\"Infinity\");\n        else  printf(\"-Infinity\");\n    }\n    if(n==m)\n    {\n        reducing (a[0],b[0]);\n    }\n    if(n<m)\n    printf(\"0/1\");\n    return 0;\n}\nvoid reducing(int n, int d)\n{\n     int max,p,q,i,n1,d1;\n     if(n<0) n1=(-1)*n;\n     else n1=n;\n     if(d<0) d1=(-1)*d;\n     else d1=d;\n     if(n1>d1) max = n1;\n     else max=d1;\n     p=n1;\n     q=d1;\n\n     for(i=2;i<=max;i++)\n     {\n      if(n1%i ==0 && d1%i ==0)\n      {\n          while (n1%i ==0 && d1%i ==0)\n        {n1/=i;\n        d1/=i;}\n        }\n      }\n      if(d<0 && n>0)\n     printf(\"-%d/%d\",n1,d1);\n     if(d<0 && n<0)\n     printf(\"%d/%d\",n1,d1);\n     if(n<0 && d>0)\n     printf(\"-%d/%d\",n1,d1);\n     if(n>0 && d>0)\n     printf(\"%d/%d\",n1,d1);\n     return 0;\n}\n"}
{"similarity_score": 0.6617336152219874, "equal_cnt": 4, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "144838b029db08f63f333e4391120d06", "bug_code_uid": "74a311bcf97204d2ee2ace888125bc16", "src_uid": "681ee82880ddd0de907aac2ccad8fc04", "apr_id": "f3acc6f55e6738e03504b174db95e8d4", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint fx(int x, int a){\r\n    return x/a + x%a;\r\n} \r\nint max(int a, int b ){\r\n    if(a>b)\r\n    return a;\r\n    else\r\n    return b;\r\n}\r\nint main(void) {\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--){\r\n\t    int l, r, a, m1, m2=0;\r\n\t    scanf(\"%d %d %d\", &l, &r, &a);\r\n\t    m1 = fx(r, a);\r\n\t    while(r!=l){\r\n\t      if(r%a==0){\r\n\t      m2 = fx(r-1, a);\r\n\t      break;\r\n\t      }\r\n\t      r--;\r\n\t    } \r\n\t        \r\n\t    printf(\"%d\\n\", max(m1, m2));\r\n\t}\r\n\treturn 0;\r\n}\r\n \r\n", "fixed": "#include <stdio.h>\r\n\r\nint fx(int x, int a){\r\n    return x/a + x%a;\r\n} \r\nint max(int a, int b ){\r\n    if(a>b)\r\n    return a;\r\n    else\r\n    return b;\r\n}\r\nint main(void) {\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--){\r\n\t    int l, r, a, m1, m2=0;\r\n\t    scanf(\"%d %d %d\", &l, &r, &a);\r\n\t    m1 = fx(r, a);\r\n\t   if(r%a==0&&r!=l)\r\n\t   m2 = fx(r-1, a);\r\n\t   else if(r - r%a - 1>=l)\r\n\t   m2 = fx(r-r%a-1, a);\r\n\t        \r\n\t    printf(\"%d\\n\", max(m1, m2));\r\n\t}\r\n\treturn 0;\r\n}\r\n \r\n"}
{"similarity_score": 0.9556451612903226, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "5ddb6082ef1e7689883abd7b2a75b329", "bug_code_uid": "cfa2dae113b1849d1641ca8e9ec6c260", "src_uid": "e80088bee9c0df6adf280f8ffbeaa4a9", "apr_id": "7cce161d17731044092c6f299b8d8415", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k;\n    scanf(\"%d %d\",&n,&k);\n    int x = k-n+1;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            printf(\"%d \",i==j?x:1);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,i,j;\n    scanf(\"%d %d\",&n,&k);\n    int x = k-n+1;\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            printf(\"%d \",(i==j)?x:1);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9455890121500264, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "6980a59c96c87ca812d7de9f5e0e105e", "bug_code_uid": "be9da9b3ca63c281fbdbe99a2fbb5310", "src_uid": "cd2519f4a7888b2c292f05c64a9db13a", "apr_id": "de3fb1a8438fef3e4880bb8addbac193", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid number(int num);\n\nint main(void){\n\n    int t, i, usrInp;\n    scanf(\"%d\",&t);\n\n    for(i=0; i<t; i++){\n        scanf(\"%d\",&usrInp);\n        number(usrInp);\n    }\n\n    return 0;\n}\n\nvoid number(int num){\n    int temp, hold, i, j, numLength=0, forMulti=1, showMoves=1;\n\n    temp = num;\n\n    while(temp != 0){\n        temp /=10;\n        numLength++;\n        if(temp%10 > 0 && num%10 !=0){\n            showMoves++;\n        }\n    }\n\n    printf(\"%d\\n\", (showMoves));\n\n    for(i=1; i<=numLength; i++){\n\n        temp = num;\n        num /= 10;\n        num *= 10;\n        hold = temp-num;\n        num /=10;\n\n        for(j=1; j<i;j++){\n            forMulti *= 10;\n        }\n\n        if(i != numLength){\n            if(hold != 0){\n                printf(\"%d \",hold*forMulti);\n            }\n        }\n        else{\n            printf(\"%d\\n\",hold*forMulti);\n        }\n\n        forMulti = 1;\n\n    }\n\n}\n", "fixed": "#include <stdio.h>\n\nvoid number(int num);\n\nint main(void){\n\n    int t, i, usrInp;\n    scanf(\"%d\",&t);\n\n    for(i=0; i<t; i++){\n        scanf(\"%d\",&usrInp);\n        number(usrInp);\n    }\n\n    return 0;\n}\n\nvoid number(int num){\n    int temp, hold, i, j, numLength=0, forMulti=1, showMoves=0;\n\n    temp = num;\n\n    while(temp != 0){\n        temp /=10;\n        numLength++;\n        if(temp%10 > 0){\n            showMoves++;\n        }\n    }\n\n    if(num % 10 == 0){\n        showMoves--;\n    }\n    printf(\"%d\\n\", (showMoves+1));\n\n    for(i=1; i<=numLength; i++){\n\n        temp = num;\n        num /= 10;\n        num *= 10;\n        hold = temp-num;\n        num /=10;\n\n        for(j=1; j<i;j++){\n            forMulti *= 10;\n        }\n\n        if(i != numLength){\n            if(hold != 0){\n                printf(\"%d \",hold*forMulti);\n            }\n        }\n        else{\n            printf(\"%d\\n\",hold*forMulti);\n        }\n\n        forMulti = 1;\n\n    }\n\n}\n\n//have to fix error for input 110\n"}
{"similarity_score": 0.9746835443037974, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6476c41dc4967b6071a7716d16f458e1", "bug_code_uid": "9e9901629f39924962b0bed08a38e128", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "270a9c0d94d34323c3cbf1ef9e2e399d", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int b[101]={0},g[101]={0},n,i,r,j;\n    scanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\tscanf(\"%d\",&j);\n\tb[j]++;\n\t}\n    scanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\tscanf(\"%d\",&j);g[j]++;\n\t}\n\n    for(i=1,r=0;i<101;i++){\n        while(g[i-1]&&b[i])\n\t\t{\n\t\tr++;\n\t\tb[i]--;\n\t\tg[i-1]--;\n\t\t}\n        while(g[i]&&b[i])\n\t\t{\n\t\tr++;\n\t\tb[i]--;\n\t\tg[i]--;\n\t\t}\n        while(g[i+1]&&b[i])\n\t\t{\n\t\tr++;\n\t\tb[i]--;\n\t\tg[i+1]--;\n\t\n\t\t}\n    }\n\n    printf(\"%d\",r);\n\n     return 0;}", "fixed": "#include <stdio.h>\nint main()\n{\n    int b[111]={0},g[111]={0},n,i,r,j;\n    scanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\tscanf(\"%d\",&j);\n\tb[j]++;\n\t}\n    scanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\tscanf(\"%d\",&j);g[j]++;\n\t}\n\n    for(i=1,r=0;i<101;i++){\n        while(g[i-1]&&b[i])\n\t\t{\n\t\tr++;\n\t\tb[i]--;\n\t\tg[i-1]--;\n\t\t}\n        while(g[i]&&b[i])\n\t\t{\n\t\tr++;\n\t\tb[i]--;\n\t\tg[i]--;\n\t\t}\n        while(g[i+1]&&b[i])\n\t\t{\n\t\tr++;\n\t\tb[i]--;\n\t\tg[i+1]--;\n\t\n\t\t}\n    }\n\n    printf(\"%d\",r);\n\n     return 0;}"}
{"similarity_score": 0.9324324324324325, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "023fc2f4953b27f1c19811e7f371cc13", "bug_code_uid": "9354c0ba4f6d185a7acb145eea6f38cc", "src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "apr_id": "26582c9f8238f050bc46b17c6e246a4d", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\nint x,y,a,b,c;\nscanf(\"%d\",&a);\nb=1;\nc=2;\nfor(x=1;x<a;x=x+1)\n{\nprintf(\"%d \",c);\nb=b+1;\nc=(c+b)%a;\n}\nreturn 0;\n\n}", "fixed": "#include<stdio.h>\nmain()\n{\nint x,y,a,b,c;\nscanf(\"%d\",&a);\nb=1;\nc=2;\nfor(x=1;x<a;x=x+1)\n{\nprintf(\"%d \",c);\nb=b+1;\nc=(c+b)%a;\nif(c==0)\n{\nc=c+a;\n}\n}\nreturn 0;\n\n}"}
{"similarity_score": 0.972318339100346, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8b3f56aa354806a9373807973c6db4cc", "bug_code_uid": "2c1285fd760d8b7fee50d5925768e7af", "src_uid": "a37c3f2828490c70301b5b5deeee0f88", "apr_id": "804d752965e4071c083f7bdaadbd12b2", "difficulty": 800, "tags": ["graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include<stdio.h>\nint main()\n{\n    int i,j,n,a[5001];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==a[a[a[a[i]]]]){\n            printf(\"Yes\");\n            return 0;\n        }\n    }\n    printf(\"No\");\n\n}\n", "fixed": "\n#include<stdio.h>\nint main()\n{\n    int i,j,n,a[5001];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        --a[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==a[a[a[a[i]]]]){\n            printf(\"Yes\");\n            return 0;\n        }\n    }\n    printf(\"No\");\n\n}\n"}
{"similarity_score": 0.4332210998877666, "equal_cnt": 28, "replace_cnt": 19, "delete_cnt": 5, "insert_cnt": 5, "fix_ops_cnt": 29, "lang": "GNU C11", "fix_code_uid": "d46f3a2a37f9688725bce6568c0d9e74", "bug_code_uid": "b6a6696352ffce97a4b468081f0a94af", "src_uid": "044c2a3bafe4f47036ee81f2e40f639a", "apr_id": "2d8efe2dc2eca0630f87a221763baa89", "difficulty": 800, "tags": ["greedy", "implementation", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,n,d,num;\n    scanf(\"%d\",&t);\n    while (t--)\n    {\n        scanf(\"%d %d\",&n,&d);\n        int a[101]= {0},min=1;\n        for (int i=0; i<n ; i++)\n        {\n            scanf(\"%d\",&num);\n            a[num]++;\n            if (min>num)\n            {\n                min=num;\n            }\n        }\n        int minnum[2],flag=0;\n        for (int i=0; i<n ; i++)\n        {\n            while (a[i])\n            {\n                minnum[flag]=i;\n                flag++;\n                if (flag==2)\n                {\n                    if (minnum[0]+minnum[1]<=d)\n                    {\n                        printf(\"YES\\n\");\n                    }\n                    else\n                        printf(\"NO\\n\");\n                    break;\n                    flag=1;\n                }\n\n            }\n            if (flag)\n            {\n                break;\n            }\n        }\n\n    }\n\n}\n\n\n\t  \t       \t\t\t\t   \t\t\t\t\t\t\t \t\t\t", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t,n,d;\n    int i,j,k;\n    int m;\n    scanf(\"%d\",&t);\n    for(i=0;i<=t-1;i++)\n    {\n        scanf(\"%d %d\",&n,&d);\n        int a[n];\n        for(j=0;j<=n-1;j++)\n        {\n            scanf(\"%d\",&a[j]);\n\n        }\n        for(j=0;j<=n-1;j++)\n        {\n            for(k=j+1;k<=n-1;k++)\n            {\n                if(a[j]>a[k])\n                {\n                    m=a[j];\n                    a[j]=a[k];\n                    a[k]=m;\n                }\n            }\n        }\n\n        if(a[0]+a[1]<=d)\n\n        {\n            printf(\"YES\\n\");\n        }\n        else if(a[n-1]<=d)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n\n    }\n    return 0;\n}\n\n     \t   \t  \t \t\t \t  \t \t\t\t\t\t\t \t\t"}
{"similarity_score": 0.35665914221218964, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "2ae064bbd06d555daf4fe4bc16201f80", "bug_code_uid": "0d3c2e546ca57ee4178ba913a2fba063", "src_uid": "3bb093fb17d6b76ae340fab44b08fcb8", "apr_id": "0248f49ed499ee91fe6d388282c538fa", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    int a = 0, b = 0, c, s, count;\n    scanf(\"%d\", &count);\n    for (int i = 0; i < count ; ++i) {\n        scanf(\"%d %d\", &a, &b);\n        if (a > b && a > 1 && b > 1) {\n            c = b * 2;\n            s = c * c;\n            printf(\"%d\\n\", s);\n        } else if (b > a&& a > 1 && b > 1) {\n            c = a * 2;\n            s = c * c;\n            printf(\"%d\\n\", s);\n        } else if (b == a&& a > 1 && b > 1) {\n            c = a * 2;\n            s = c * c;\n            printf(\"%d\\n\", s);\n        }\n        else if (b == 1 && a == 1) {\n            s = 4;\n            printf(\"%d\\n\", s);\n        }\n        else if (b > a) {\n            s = b * b;\n            printf(\"%d\\n\", s);\n        }\n        else if (b < a) {\n            s = a * a;\n            printf(\"%d\\n\", s);\n        }\n        else if (b == a) {\n            s = a * a;\n            printf(\"%d\\n\", s);\n        }\n    }\n}", "fixed": "#include <stdio.h>\n\nint min(int a,int b){\n    if (a > b)\n        return b;\n    else return a;\n}\nint max(int a,int b){\n    if (a < b)\n        return b;\n    else return a;\n}\nint main() {\n    int a = 0, b = 0, c, s, count;\n    scanf(\"%d\", &count);\n    for (int i = 0; i < count ; ++i) {\n        scanf(\"%d %d\", &a, &b);\n        c = min(max(2*b, a),max(2*a, b));\n        s = c * c;\n        printf(\"%d\\n\",s);\n        }\n    }\n"}
{"similarity_score": 0.9958368026644463, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7c1cb726daecf513fe43865a7d34307f", "bug_code_uid": "fd7602aab5d55ef4d7c40d65643726b1", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "2b51cccc219106e146d8289d8a417aa1", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main (){\n  int temp, n, n25 = 0, n50 = 0, n100 = 0;\n  scanf(\"%i\", &n);\n  scanf(\"%i\", &temp);\n  n--;\n  if (temp != 25)\n  {\n    printf(\"NO\");\n    return 0;\n  }\n  else\n  {\n    n25++;\n  }\n  while (n != 0)\n  {\n    scanf(\"%i\", &temp);\n    if (temp == 25)\n      n25++;\n    if (temp == 50)\n    {\n      n50++;\n      n25--;\n    }\n    if (temp == 100 && n50 != 0)\n    {\n      n100++;\n      n50--;\n      n25--;\n    }\n    if (temp == 100 && n50 == 0)\n    {\n      n25 -= 3;\n    }\n    if (n25 < 0 || n50 < 0)\n    {\n      printf(\"NO\");\n      return 0;\n    }\n    n--;\n  }\n  printf(\"YES\");\n}\n", "fixed": "#include <stdio.h>\n\nint main (){\n  int temp, n, n25 = 0, n50 = 0, n100 = 0;\n  scanf(\"%i\", &n);\n  scanf(\"%i\", &temp);\n  n--;\n  if (temp != 25)\n  {\n    printf(\"NO\");\n    return 0;\n  }\n  else\n  {\n    n25++;\n  }\n  while (n != 0)\n  {\n    scanf(\"%i\", &temp);\n    if (temp == 25)\n      n25++;\n    if (temp == 50)\n    {\n      n50++;\n      n25--;\n    }\n    if (temp == 100 && n50 != 0)\n    {\n      n100++;\n      n50--;\n      n25--;\n    }\n    else if (temp == 100 && n50 == 0)\n    {\n      n25 -= 3;\n    }\n    if (n25 < 0 || n50 < 0)\n    {\n      printf(\"NO\");\n      return 0;\n    }\n    n--;\n  }\n  printf(\"YES\");\n}\n"}
{"similarity_score": 0.9971264367816092, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "05e968afca2d469b4f1b324609402fed", "bug_code_uid": "84ee46f45d5e683619da06c84a0f0632", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "22b18228692983d9c6fd5436c3e3acdc", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,j;\n    char N[1000];\n    gets(N);\n    for(i=0; N[i]!=0; i++)\n    {\n         if(N[i]=='0')\n         {\n            for(j=i; N[j-1]!=0; j++)\n                N[j]=N[j+1];\n            break;\n         }\n         else if (N[i+1]==0)\n            N[i]='\\0';\n    }\n    puts(N);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,j;\n    char N[100000];\n    gets(N);\n    for(i=0; N[i]!=0; i++)\n    {\n         if(N[i]=='0')\n         {\n            for(j=i; N[j-1]!=0; j++)\n                N[j]=N[j+1];\n            break;\n         }\n         else if (N[i+1]==0)\n            N[i]='\\0';\n    }\n    puts(N);\n    return 0;\n}\n"}
{"similarity_score": 0.5693035835023664, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "fb13af6c20d016a8647597f443e79c30", "bug_code_uid": "99d65e6b67914c0a78785881b7abc25f", "src_uid": "d08e39db62215d7817113aaa384e3f59", "apr_id": "19f9f08b7782b6408fefaa5378021f29", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,t,k,s=1,i,j;\r\n    scanf(\"%d\",&t);\r\n    for(i=1; i<=t; i++)\r\n    {\r\n        s=1;\r\n        scanf(\"%d%d\",&n,&k);\r\n        if(n==1&&k==1)\r\n        {\r\n            printf(\"0\\n\");\r\n            continue;\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\\n\",k);\r\n            for(j=n; s<=k; s++)\r\n            {\r\n                if(j==k)\r\n                {\r\n                    j=j-1;\r\n                    printf(\"%d \",j);\r\n                }\r\n                else\r\n                    printf(\"%d \",j);\r\n                j--;\r\n            }\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,t,k,s,i,j,l,o;\r\n    int a[1000];\r\n    scanf(\"%d\",&t);\r\n    for(i=1; i<=t; i++)\r\n    {\r\n        s=0;\r\n        o=0;\r\n        scanf(\"%d%d\",&n,&k);\r\n        if(k%2==0)\r\n        {\r\n            printf(\"%d\\n\",n-k/2);\r\n            for(j=n; j>=k/2; j--)\r\n            {\r\n                if(j==k)\r\n                    continue;\r\n                else\r\n                {\r\n                    printf(\"%d \",j);\r\n                }\r\n            }\r\n        }\r\n        if(k%2!=0)\r\n        {\r\n            printf(\"%d\\n\",n-k/2-1);\r\n            for(j=n; j>=(k/2+1); j--)\r\n            {\r\n                if(j==k)\r\n                    continue;\r\n                else\r\n                {\r\n                    printf(\"%d \",j);\r\n                }\r\n            }\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.7343096234309623, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "de994e755ccc18fc4f98849cc4dbd408", "bug_code_uid": "0ec137ca3fb52c233822390b4e528e2e", "src_uid": "002801f26568a1b3524d8754207d32c1", "apr_id": "51667534e85ca977644497d4572fd71a", "difficulty": 1000, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint t;\n\tscanf(\"%d\",&t);\n\tint i;\n\tfor(i=0;i<t;i++)\n\t{\n\t    long long int a,b,c;\n\t    scanf(\"%lld %lld %lld\",&a,&b,&c);\n\t    if(a>=c && b>=1)\n\t    {printf(\"-1 \");}\n\t    else\n\t    {printf(\"1 \");}\n\t    \n\t    if(a*b<=c)\n\t    {printf(\"-1\\n\");}\n\t    else\n\t    {\n\t        long long int x=1;\n\t        long long int temp=x/b;\n\t        if(x%b)\n\t        {temp++;}\n\t        while(x*a<=temp*c)\n\t        {\n\t            x++;\n\t            temp=x/b;\n\t            if(x%b)\n\t            {temp++;}\n\t        }\n\t        printf(\"%lld\\n\",x);\n\t    }\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint t;\n\tscanf(\"%d\",&t);\n\tint i;\n\tfor(i=0;i<t;i++)\n\t{\n\t    long long int a,b,c;\n\t    scanf(\"%lld %lld %lld\",&a,&b,&c);\n\t    if(a>=c && b>=1)\n\t    {printf(\"-1 \");}\n\t    else\n\t    {printf(\"1 \");}\n\t    \n\t    if(a*b<=c)\n\t    {printf(\"-1\\n\");}\n\t    else\n\t    {printf(\"%lld\\n\",b);}\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.8940188877229801, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "765d6f7e0f9e93f2c576ad98b5ead73b", "bug_code_uid": "1159188f82a86e5fbe4f1800fd468141", "src_uid": "c3120f96894c17957bd8acb968bf37cd", "apr_id": "a9665c9d79ea1b3f8c423f592af928dc", "difficulty": 1400, "tags": ["dp", "implementation", "data structures"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<limits.h>\n#define min(a, b) (a < b ? a : b)\n#define TRUE 1\n#define FALSE 0\n#define ll long long int\n\nll arr[100001];\nint q[100001][3];\nll op[100003];\nll sum;\n\nint main(void) {\n    int n, m, k, i, j, x, y;\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &m);\n    scanf(\"%d\", &k);\n    for(i = 1; i <= n; i++) {\n        scanf(\"%d\", &arr[i]);\n    }\n    for(i = 1; i <= m ; i++) {\n        scanf(\"%d\", &q[i][0]);\n        scanf(\"%d\", &q[i][1]);\n        scanf(\"%d\", &q[i][2]);\n    }\n    for(i = 0; i < k; i++) {\n        scanf(\"%d\", &x);\n        scanf(\"%d\", &y);\n        for(j = x; j <= y; j++) {\n            op[q[j][0]] += q[j][2];\n            op[q[j][1]+1] -= q[j][2];\n        }\n    }\n    sum = 0;\n    for(i = 1; i <= n; i++) {\n        sum += op[i];\n        arr[i] += sum;\n        printf(\"%I64d \", arr[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<limits.h>\n#define min(a, b) (a < b ? a : b)\n#define TRUE 1\n#define FALSE 0\n#define ll long long int\n\nll arr[100001];\nll q[100001][3];\nll op[100003];\nll c[100003];\nll sum;\n\nint main(void) {\n    int n, m, k, i, j, x, y;\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &m);\n    scanf(\"%d\", &k);\n    for(i = 1; i <= n; i++) {\n        scanf(\"%d\", &arr[i]);\n    }\n    for(i = 1; i <= m ; i++) {\n        scanf(\"%d\", &q[i][0]);\n        scanf(\"%d\", &q[i][1]);\n        scanf(\"%d\", &q[i][2]);\n    }\n    for(i = 0; i < k; i++) {\n        scanf(\"%d\", &x);\n        scanf(\"%d\", &y);\n        c[x]++;\n        c[y+1]--;\n    }\n    for(i = 1; i <= m; i++) {\n        c[i] += c[i-1];\n    }\n    for(j = 1; j <= m; j++) {\n        if(c[j] == 0) {\n            continue;\n        }\n        op[q[j][0]] += q[j][2]*c[j];\n        op[q[j][1]+1]-= q[j][2]*c[j];\n    }\n    sum = 0;\n    for(i = 1; i <= n; i++) {\n        sum += op[i];\n        arr[i] += sum;\n        printf(\"%I64d \", arr[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9984567901234568, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ce1f1b943b59aa88d8ba083980e0ce3e", "bug_code_uid": "607e207e7269518e94714da89205a3f2", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "ee4bcd5f249b91819969d8e17d00d110", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int i,j,t,r,s,n;\n    scanf(\"%d %d\",&s,&n);\n    int a[n][2];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a[i][0],&a[i][1]);\n    }\n     for(i=0;i<n-1;i++)\n    {\n        for(j=0;j<n-i-1;j++)\n        {\n            if(a[j][0]<a[j+1][0])\n            {\n                t=a[j][0];r=a[j][1];\n                a[j][0]=a[j+1][0];a[j][1]=a[j+1][1];\n                a[j+1][0]=t;a[j+1][1]=r;\n            }\n        }\n    }\n\n   //for(i=0;i<n;i++) printf(\"%d %d\\n\",a[i][0],a[i][1]);\n\n\n  for(i=0;i<n;i++)\n    {\n        if(s>a[i][0]) s=s+a[i][1];\n        else {printf(\"NO\");return 0;}\n    }\n    printf(\"YES\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int i,j,t,r,s,n;\n    scanf(\"%d %d\",&s,&n);\n    int a[n][2];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a[i][0],&a[i][1]);\n    }\n     for(i=0;i<n-1;i++)\n    {\n        for(j=0;j<n-i-1;j++)\n        {\n            if(a[j][0]>a[j+1][0])\n            {\n                t=a[j][0];r=a[j][1];\n                a[j][0]=a[j+1][0];a[j][1]=a[j+1][1];\n                a[j+1][0]=t;a[j+1][1]=r;\n            }\n        }\n    }\n\n   //for(i=0;i<n;i++) printf(\"%d %d\\n\",a[i][0],a[i][1]);\n\n\n  for(i=0;i<n;i++)\n    {\n        if(s>a[i][0]) s=s+a[i][1];\n        else {printf(\"NO\");return 0;}\n    }\n    printf(\"YES\");\n    return 0;\n}\n"}
{"similarity_score": 0.8993630573248408, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "bffb9dd24144ee8436d7aa0469480cc1", "bug_code_uid": "0d9842f7475ed37a67b0751ea717593d", "src_uid": "0ee86e75ff7a47a711c9eb41b34ad1a5", "apr_id": "1e762e02b472503ad2b6928e3144c1e3", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,count=0,a[2000],k=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    if(a[i]==1)\n        count++;\n    }\n    printf(\"%d\\n\",count);\n    for(i=1;i<n;i++){\n        if(a[i]==1){\n            printf(\"%d \",a[i-1]);\n            k++;\n    }\n    }\n    if(k!=0){\n    for(i=0;i<(count-k);i++)\n        printf(\"1 \");\n    }\n    else\n        printf(\"%d\",a[n-1]);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,count=0,a[2000],k=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    if(a[i]==1)\n        count++;\n    }\n    printf(\"%d\\n\",count);\n    for(i=1;i<n;i++){\n        if(a[i]==1){\n            printf(\"%d \",a[i-1]);\n            k++;\n    }\n    }\n    for(i=0;i<(count-k);i++)\n        printf(\"%d \",a[n-1]);\n\n}\n"}
{"similarity_score": 0.9880636604774535, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "02e97138161640d950c0b30812471b8e", "bug_code_uid": "32c1e37375e32f625120868976f0aeb1", "src_uid": "3ae468c425c7b156983414372fd35ab8", "apr_id": "9928fcf1119bc66dc9dc18dbfd496372", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nlong long int six[14], three[19];\n\nint main(){\n\tint n, j;\n\tlong long int num;\n\tsix[0] = 1;\n\tint flag = 0;\n\tfor(int i = 0; i < 13; i ++)\n\t\tsix[i + 1] = six[i] * 6;\n\tthree[0] = 1;\n\tfor(int i = 0; i < 18; i ++)\n\t\tthree[i + 1] = three[i] * 3;\n\tscanf(\"%d\", &n);\n\tfor(int i = 0; i < n; i ++){\n\t\tscanf(\"%lld\", &num);\n\t\tif(num == 1)\n\t\t\tprintf(\"0\\n\");\n\t\telse if(num == 3)\n\t\t\tprintf(\"2\\n\");\n\t\telse{\n\t\t\tflag = 0;\n\t\t\tfor(j = 0; j < 14; j ++){\n\t\t\t\tfor(int k = 0; k < 19; k ++){\n\t\t\t\t\tif(six[j] * three[k] == num){\n\t\t\t\t\t\tflag = k;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if(six[j] * three[k] > num)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(flag != 0)\t\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(flag == 0)\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"%d\\n\", j + 2 * flag);\t\n\t\t}\t\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nlong long int six[14], three[19];\n\nint main(){\n\tint n, j;\n\tlong long int num;\n\tsix[0] = 1;\n\tint flag = 0;\n\tfor(int i = 0; i < 13; i ++)\n\t\tsix[i + 1] = six[i] * 6;\n\tthree[0] = 1;\n\tfor(int i = 0; i < 18; i ++)\n\t\tthree[i + 1] = three[i] * 3;\n\tscanf(\"%d\", &n);\n\tfor(int i = 0; i < n; i ++){\n\t\tscanf(\"%lld\", &num);\n\t\tif(num == 1)\n\t\t\tprintf(\"0\\n\");\n\t\telse if(num == 3)\n\t\t\tprintf(\"2\\n\");\n\t\telse{\n\t\t\tflag = 0;\n\t\t\tfor(j = 0; j < 14; j ++){\n\t\t\t\tfor(int k = 0; k < 19; k ++){\n\t\t\t\t\tif(six[j] * three[k] == num){\n\t\t\t\t\t\tflag = k + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if(six[j] * three[k] > num)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(flag != 0)\t\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(flag == 0)\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"%d\\n\", j + 2 * (flag - 1));\t\n\t\t}\t\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.7429102742910274, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "e4c72072911fbda63dab9a42ee8837d1", "bug_code_uid": "2f262b1786dc49055369df32fe2963a6", "src_uid": "cf912f6efc3c0e3fabdaa5f878a777c5", "apr_id": "425036672bb103fdb02411831dc87f67", "difficulty": 1000, "tags": ["constructive algorithms", "greedy", "implementation", "two pointers"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n\tint testcase = 0;\r\n\tscanf(\"%i\", &testcase);\r\n\tfor (int i = 0; i < testcase; i++)\r\n\t{\r\n\t\tint n = 0;\r\n\t\tscanf(\"%i\", &n);\r\n\t\tint s[n];\r\n\t\tint max = 0;\r\n\t\tint start = 1;\r\n\t\tint end = 0;\r\n\t\tint answer = 0;\r\n\t\tint iteration = 0;\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%i\", &s[i]);\r\n\t\t}\r\n\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tif (s[i] > max)\r\n\t\t\t{\r\n\t\t\t\tmax = s[i];\r\n\t\t\t\tif (s[i] != s[i + 1])\r\n\t\t\t\t{\r\n\t\t\t\t\tanswer = -1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (answer == -1)\r\n\t\t{\r\n\t\t\tprintf(\"%i\\n\", answer);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tmax = 0;\r\n\t\t\tfor (int i = 0; i < n; i++)\r\n\t\t\t{\r\n\t\t\t\tif (s[i] > max)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (iteration > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprintf(\"%i \", end);\r\n\t\t\t\t\t\tfor (int j = 1; j < end; j++)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprintf(\"%i \", start);\r\n\t\t\t\t\t\t\tstart++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmax = s[i];\r\n\t\t\t\t\titeration++;\r\n\t\t\t\t\tstart = i + 1;\r\n\t\t\t\t\tend = i;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tend++;\r\n\t\t\t}\r\n\r\n\t\t\tprintf(\"%i \", end);\r\n\t\t\tfor (int i = start; i < end; i++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%i \", i);\r\n\t\t\t}\r\n\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n\tint testcase = 0;\r\n\tscanf(\"%i\", &testcase);\r\n\tfor (int i = 0; i < testcase; i++)\r\n\t{\r\n\t\tint n = 0;\r\n\t\tscanf(\"%i\", &n);\r\n\t\tint s[n];\r\n\t\tint max = 0;\r\n\t\tint start = 1;\r\n\t\tint end = 0;\r\n\t\tint answer = 0;\r\n\t\tint iteration = 0;\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%i\", &s[i]);\r\n\t\t}\r\n\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tif (s[i] > max)\r\n\t\t\t{\r\n\t\t\t\tmax = s[i];\r\n\t\t\t\tif (s[i] != s[i + 1])\r\n\t\t\t\t{\r\n\t\t\t\t\tanswer = -1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (answer == -1)\r\n\t\t{\r\n\t\t\tprintf(\"%i\\n\", answer);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//2 2 3 3 3 4 4\r\n\r\n\t\t\t//2 1 5 3 4 5 6 7 6 \r\n\t\t\tmax = 0;\r\n\t\t\tfor (int i = 0; i < n; i++)\r\n\t\t\t{\r\n\t\t\t\tif (s[i] > max)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (iteration > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprintf(\"%i \", end);\r\n\t\t\t\t\t\tfor (int j = 1; start < end; j++)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprintf(\"%i \", start);\r\n\t\t\t\t\t\t\tstart++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmax = s[i];\r\n\t\t\t\t\titeration++;\r\n\t\t\t\t\tstart = i + 1;\r\n\t\t\t\t\tend = i;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tend++;\r\n\t\t\t}\r\n\r\n\t\t\tprintf(\"%i \", end);\r\n\t\t\tfor (int i = start; i < end; i++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%i \", i);\r\n\t\t\t}\r\n\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.5, "equal_cnt": 8, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "fb69b480cd26965b117e904460536cea", "bug_code_uid": "007a26e5826f6c927d221bcd4660b7b5", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "45a8df557df8ac9fe8b8e9e8c4ef53be", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,div,i;\n    scanf(\"%d\",&n);\n    div=2;\n    while(div<=n && n%div>0)\n        div++;\n    printf(\"%d\\n\",n/div);\n    for(i=1; i<=n/div; i++)\n        printf(\"%d \",div);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,i,nr;\n    scanf(\"%d\",&n);\n    if(n%2==1) nr=(n-3)/2;\n    else nr=n/2;\n    printf(\"%d\\n\",nr+(n%2==1));\n    for(i=1; i<=nr; i++) printf(\"2 \");\n    if(n%2==1) printf(\"3\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.359375, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "f7d5d55e8fb774873b4ec7f51a404371", "bug_code_uid": "d0f6e80a4952b31f11c0a63faacc4f35", "src_uid": "f6e219176e846b16c5f52dee81601c8e", "apr_id": "bc5c13b639f2f44beae05f4ae55e6149", "difficulty": 1100, "tags": ["implementation", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint A[1002];\nint main()\n{\n\tint i;\n\tint t;\n\tint T;\n\tint n, m;\n\tint S;\n\tint fM, sM;\n\tscanf(\"%d\", &T);\n\twhile (T--)\n\t{\n\t\tscanf(\"%d %d\", &n, &m);\n\t\tfor (i = 0; i < n; i++)\n\t\t{\n\t\t\tscanf(\"%d\", &A[i]);\n\t\t}\n\t\tif (m >= n)\n\t\t{\n\t\t\tS = 0;\n\t\t\tfor (i = 0; i < n; i++)\n\t\t\t{\n\t\t\t\tS += A[i];\n\t\t\t}\n\t\t\tA[n] = 10001;\n\t\t\tfM = n;\n\t\t\tsM = n;\n\t\t\tfor (t = 0; t < n; t++)\n\t\t\t{\n\t\t\t\tif (A[t] < A[fM])\n\t\t\t\t{\n\t\t\t\t\tsM = fM;\n\t\t\t\t\tfM = t;\n\t\t\t\t}\n\t\t\t\telse if (A[t] < A[sM])\n\t\t\t\t{\n\t\t\t\t\tsM = t;\n\t\t\t\t}\n\t\t\t}\n\t\t\tS <<= 1;\n\t\t\tm -= n;\n\t\t\tS += m * (A[fM] + A[sM]);\n\t\t\tprintf(\"%d\\n\", S);\n\t\t\tfor (t = 1; t < n; t++)\n\t\t\t{\n\t\t\t\tprintf(\"%d %d\\n\", t, t + 1);\n\t\t\t}\n\t\t\tprintf(\"1 %d\\n\", n);\n\t\t\tfor (i = 0; i < m; i++)\n\t\t\t{\n\t\t\t\tprintf(\"%d %d\\n\", fM + 1, sM + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"-1\\n\");\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint A[1002];\nint main()\n{\n\tint i;\n\tint t;\n\tint T;\n\tint n, m;\n\tint S;\n\tint fM, sM;\n\tscanf(\"%d\", &T);\n\twhile (T--)\n\t{\n\t\tscanf(\"%d %d\", &n, &m);\n\t\tfor (i = 0; i < n; i++)\n\t\t{\n\t\t\tscanf(\"%d\", &A[i]);\n\t\t}\n\t\tif (n == 2)\n\t\t{\n\t\t\tprintf(\"-1\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (m >= n)\n\t\t\t{\n\t\t\t\tS = 0;\n\t\t\t\tfor (i = 0; i < n; i++)\n\t\t\t\t{\n\t\t\t\t\tS += A[i];\n\t\t\t\t}\n\t\t\t\tA[n] = 10001;\n\t\t\t\tfM = n;\n\t\t\t\tsM = n;\n\t\t\t\tfor (t = 0; t < n; t++)\n\t\t\t\t{\n\t\t\t\t\tif (A[t] < A[fM])\n\t\t\t\t\t{\n\t\t\t\t\t\tsM = fM;\n\t\t\t\t\t\tfM = t;\n\t\t\t\t\t}\n\t\t\t\t\telse if (A[t] < A[sM])\n\t\t\t\t\t{\n\t\t\t\t\t\tsM = t;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tS <<= 1;\n\t\t\t\tm -= n;\n\t\t\t\tS += m * (A[fM] + A[sM]);\n\t\t\t\tprintf(\"%d\\n\", S);\n\t\t\t\tfor (t = 1; t < n; t++)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d %d\\n\", t, t + 1);\n\t\t\t\t}\n\t\t\t\tprintf(\"1 %d\\n\", n);\n\t\t\t\tfor (i = 0; i < m; i++)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d %d\\n\", fM + 1, sM + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.5250596658711217, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "066a442bc6fa8360bd31d73a8e07b294", "bug_code_uid": "e213ed0938bc1fefad9cbe4ca547f6b4", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "a4fef729d1ee59c5ef871a3313c731f8", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    char * str;\n    str=malloc((n+1)*sizeof(int));\n    scanf(\"%s\",str);\n    int j,traversed=0;\n    int ans=n;\n    for(int i=1;i<n;i++){\n        j=i-1;\n        while(str[i]!=str[j] && i<n && j>=traversed){\n            ans-=2;\n            i++;\n            j--;\n        }\n        if(j!=i-1){   // enters while loop or not\n            traversed=i;\n        }\n    }\n    printf(\"%d\\n\",ans);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    char * str;\n    int count=0;\n    str=malloc((n+1)*sizeof(int));\n    scanf(\"%s\",str);\n    for(int i=0;i<n;i++){\n        if(str[i]=='0'){\n            count++;\n        }\n        else{\n            count--;\n        }\n    }\n    printf(\"%d\\n\",(int)fabs(count));\n    return 0;\n}\n"}
{"similarity_score": 0.9952153110047847, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b8a434d7698f0f8a6102d2c52d80ac98", "bug_code_uid": "669ff16911596c3b0d302ad06ae1a238", "src_uid": "07e56d4031bcb119d2f684203f7ed133", "apr_id": "a1049d340759dece56a583fe4eb0c61c", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,i;\n    scanf(\"%d\",&a);\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\",&b);\n        if(b%2==0){printf(\"YES\\n\"); }\n        else{printf(\"NO\\n\"); }\n    }\n    return 0 ;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,i;\n    scanf(\"%d\",&a);\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\",&b);\n        if(b%4==0){printf(\"YES\\n\"); }\n        else{printf(\"NO\\n\"); }\n    }\n    return 0 ;\n}\n"}
{"similarity_score": 0.7113163972286374, "equal_cnt": 15, "replace_cnt": 7, "delete_cnt": 7, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "3615f7e329a165e20bd6d8074a439e1d", "bug_code_uid": "eaacd48ef2006c8c4b8be9e722e76fdc", "src_uid": "9afcf090806cc9c3b87120b1b61f8f17", "apr_id": "e173e31535fb00aa6b1097ea97d0a6f3", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\n    int x,y,a,b,t,i,j,k;\n    scanf (\"%d\",&t);\n    for (i=0;i<t;i++)\n    {\n        scanf (\"%d%d%d%d\",&x,&y,&a,&b);\n        for (j=1;j<y+x;j++)\n        {\n            x = x + a;\n            y = y - b;\n            if (x == y)\n            {\n                printf(\"%d\\n\",j);\n                break;\n            }\n            else if (x>y)\n            {\n                k = - 1;\n                printf (\"%d\\n\",k);\n                break;\n            }\n\n        }\n    }\n}\n", "fixed": "#include <stdio.h>\nint main ()\n{\n    int x,y,a,b,t,i,j,k,c;\n    scanf (\"%d\",&t);\n    for (i=0;i<t;i++)\n    {\n        scanf (\"%d%d%d%d\",&x,&y,&a,&b);\n        c = a + b;\n        k = y - x;\n        if (k%c==0)\n        {\n            j = k/c;\n            printf(\"%d\\n\",j);\n        }\n        else\n        {\n            j = - 1;\n            printf(\"%d\\n\",j);\n        }\n    }\n}\n"}
{"similarity_score": 0.7457322551662174, "equal_cnt": 15, "replace_cnt": 7, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "2019e72df4e64b3965ff46f1cc78a8e5", "bug_code_uid": "2b8d42ce3cf9cd5b9b090afc98d5accd", "src_uid": "09276406e16b46fbefd6f8c9650472f0", "apr_id": "8bb534124197716abbdaf7c5fb8edbdb", "difficulty": 1300, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    long long n;\n    scanf(\"%I64d\",&n);\n    long long i,sum=0,factof5=1,factof6=1,factof7=1;\n    for(i=1;i<=7;i++){\n        if(i<=6){\n            factof6*=i;\n        }\n        if(i<=5){\n            factof5*=i;\n        }\n        factof7*=i;\n    }\n    long long x1=1,x2=1,x3=1;\n    for(i=n;i>=n-6;i--){\n        if(i>=n-4){\n            x3*=i;\n        }\n        if(i>=n-5){\n            x2*=i;\n        }\n        x1*=i;\n    }\n    sum+=(x1/factof7)+(x2/factof6)+(x3/factof5);\n    printf(\"%I64d\\n\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    long long n;\n    scanf(\"%I64d\",&n);\n    unsigned long long i,sum=0,factof5=1,factof6=1,factof7=1;\n    for(i=1;i<=7;i++){\n        if(i<=6){\n            factof6*=i;\n        }\n        if(i<=5){\n            factof5*=i;\n        }\n        factof7*=i;\n    }\n    unsigned long long x1=1,x2=1,x3=1;\n    for(i=n;i>=n-4;i--){\n        x1*=i;\n    }\n    x1=x1/factof5;\n    x2=(x1*(n-5))/(factof6/factof5);\n    x3=(x2*(n-6))/(factof7/factof6);\n    sum+=x1+x2+x3;\n    //printf(\"%I64d %I64d %I64d\\n\",x1,x2,x3);\n    printf(\"%I64d\\n\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.8994845360824743, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a718f1b87dc48a999a6a46ff700f36e3", "bug_code_uid": "33692cf628e85f221d494b4bba1c347b", "src_uid": "241157c465fe5dd96acd514010904321", "apr_id": "76626311c5c55e26f95dcc2b42719299", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n\n{\n    int n,i,a,sum=0,s=0,b[200000];\n\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++)\n       {\n        scanf(\"%d\",&a);\n        sum=sum+a;\n\n        b[i]=a;\n       }\n\n\n      for(i=0;i<n;i++)\n         {\n             s=b[i]+s;\n             if(s>=(sum/2))\n                break;\n         }\n\n       printf(\"%d\",i+1);\n\n       return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n\n{\n    int n,i,a,sum=0,s=0,p=0,b[200000];\n\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++)\n       {\n        scanf(\"%d\",&a);\n        sum=sum+a;\n\n        b[i]=a;\n       }\n\n    if(sum%2==0)\n        p=sum/2;\n    else\n        p=(sum/2)+1;\n\n\n\n      for(i=0;i<n;i++)\n         {\n             s=b[i]+s;\n             if(s>=p)\n                break;\n         }\n\n       printf(\"%d\",i+1);\n\n       return 0;\n}\n"}
{"similarity_score": 0.4117647058823529, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "51b5e56739752a57780dc519bf42bf66", "bug_code_uid": "5a74b985ec7d3b3a9387a2c6564f9245", "src_uid": "fcd55a1ca29e96c05a3b65b7a8103842", "apr_id": "14eff0f9f7282d39cfe5aa6992dbd499", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint a,b,t;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++){\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tif(a==b){\n\t\t\tprintf(\"0\");\n\t\t}\n\t\telse if(a<b && b-a%2!=0 || a>b && a-b%2==0){\n\t\t\tprintf(\"1\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"2\");\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n \nint main() {\n\tint t;\n \n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tint a, b;\n \n\t\tscanf(\"%d%d\", &a, &b);\n\t\tprintf(\"%d\\n\", a == b ? 0 : (a > b && (a - b) % 2 == 0 || a < b && (b - a) % 2 == 1 ? 1 : 2));\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9901234567901235, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "903c9611c5d49a48760090f2874071f5", "bug_code_uid": "ccccf45c6a1d7fb83f500d48c4519d37", "src_uid": "371100da1b044ad500ac4e1c09fa8dcb", "apr_id": "85c4028355ff1609ade5db1bc82f873d", "difficulty": 1100, "tags": ["implementation", "*special", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,g=0,i,k,a=0,b=0,c=0,min;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&k);\nif(k==4)\ng++;\nelse if(k==1)\na=a+k;\nelse if(k==2)\nb=b+k;\nelse\nc++;\n}\nif(a<=c)\nmin=a;\nelse\nmin=c;\nif(min!=0)\n{\na=a-min;\nc=c-min;\ng=g+min;\n}\ng=g+(a/4)+(b/4);\na=a%4;\nb=b%4;\nif(a>b)\n{\na=a-b;\nb=0;\ng++;\n}\nif((a<=b&&a!=0&&b!=0)||(a==1)||(a==2)||(a==3)||(b==2))\ng++;\ng=g+c;\nprintf(\"%d\",g);\n}\n\n\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n,g=0,i,k,a=0,b=0,c=0,min;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&k);\nif(k==4)\ng++;\nelse if(k==1)\na=a+k;\nelse if(k==2)\nb=b+k;\nelse\nc++;\n}\nif(a<=c)\nmin=a;\nelse\nmin=c;\nif(min!=0)\n{\na=a-min;\nc=c-min;\ng=g+min;\n}\ng=g+(a/4)+(b/4);\na=a%4;\nb=b%4;\nif(a>b && b!=0)\n{\na=a-b;\nb=0;\ng++;\n}\nif((a<=b&&a!=0&&b!=0)||(a==1)||(a==2)||(a==3)||(b==2))\ng++;\ng=g+c;\nprintf(\"%d\",g);\n}\n\n\n\n\n\n"}
{"similarity_score": 0.7245508982035929, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "dee7a3d05fd53a620d213458a859e15e", "bug_code_uid": "b062588eae188b3e0defc72b7deae653", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "6e4074125579973799a3ebeb39f0972c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int a;\n    char h[] = \"I hate\", l[] = \"I love\", t[] = \"that\", temp[] = \"\";\n    scanf(\"%i\",&a);\n    if(a>1)\n    {\n        printf(\"%s \" \" \",h);\n    }\n    for(int i=0;i<a;i++)\n    {\n        printf(\"%s \" \" \",t);\n        if(i%2==0)\n        {\n            printf(\"%s \" \" \",h);\n        }\n        else\n        {\n            printf(\"%s \" \" \",l);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int a;\n    char h[] = \"I hate\", l[] = \"I love\", t[] = \"that\", temp[] = \"\";\n    scanf(\"%i\",&a);\n    if(a>1)\n    {\n        printf(\"%s \" \"\",h);\n        for(int i=1;i<a;i++)\n        {\n            printf(\"%s \" \"\",t);\n            if(i%2==0)\n            {\n                printf(\"%s \" \"\",h);\n            }\n            else\n            {\n                printf(\"%s \" \"\",l);\n            }\n        }\n\n    }\n    else\n    {\n        printf(\"%s \" \"\",h);\n    }\n    printf(\"it\");\n    return 0;\n}\n"}
{"similarity_score": 0.9907773386034255, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "00dd71fc29c3c41fc83798c01793a25d", "bug_code_uid": "25486ab11e71baeec1adc6ba5e855771", "src_uid": "6f52388b652a900e63ec39406225392c", "apr_id": "af33a3619020ec38339962357c16aad3", "difficulty": 1500, "tags": ["greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{int i,k,cnt1=0,cnt2=0,n,t=0,x=0,y=0;\nchar a[2000001],b[2000001],f[3];\nscanf(\"%d\",&n);gets(f);\ngets(a);gets(b);\nfor(i=0;i<2*n;i++){\nif(a[i]==b[i]&&a[i]=='1'){t++;}\nelse if(a[i]=='1'){x++;}\nelse if(b[i]=='1'){y++;}\nelse{continue;}}\nif(x==0&&y==0){\nif(t%2!=0){printf(\"First\");return 0;}\nelse if(t%2==0&&t!=2*n&&t!=0){printf(\"Draw\");return 0;}\nelse{printf(\"Second\");return 0;}}\nelse{\nif(t%2!=0){y--;if(y-x==1){printf(\"Draw\");return 0;}else if(x>y){printf(\"First\");return 0;}\nelse if(x==y){printf(\"Draw\");return 0;}else{printf(\"Second\");return 0;}}\nelse{ if(y-x==1){printf(\"Draw\");return 0;}   else if(x>y){printf(\"First\");return 0;}\nelse if(x==y){printf(\"Draw\");return 0;}else{printf(\"Second\");return 0;}}}\nreturn 0;}\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{int i,k,cnt1=0,cnt2=0,n,t=0,x=0,y=0;\nchar a[2000001],b[2000001],f[3];\nscanf(\"%d\",&n);gets(f);\ngets(a);gets(b);\nfor(i=0;i<2*n;i++){\nif(a[i]==b[i]&&a[i]=='1'){t++;}\nelse if(a[i]=='1'){x++;}\nelse if(b[i]=='1'){y++;}\nelse{continue;}}\nif(x==0&&y==0){\nif(t%2!=0){printf(\"First\");return 0;}\nelse if(t%2==0){printf(\"Draw\");return 0;}\nelse{printf(\"Second\");return 0;}}\nelse{\nif(t%2!=0){y--;if(y-x==1){printf(\"Draw\");return 0;}else if(x>y){printf(\"First\");return 0;}\nelse if(x==y){printf(\"Draw\");return 0;}else{printf(\"Second\");return 0;}}\nelse{ if(y-x==1){printf(\"Draw\");return 0;}   else if(x>y){printf(\"First\");return 0;}\nelse if(x==y){printf(\"Draw\");return 0;}else{printf(\"Second\");return 0;}}}\nreturn 0;}\n\n"}
{"similarity_score": 0.8184438040345822, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "ef0eae7bbc908e7f10555ab986925eb1", "bug_code_uid": "4b805f73402278d618dd3a425e6757cc", "src_uid": "bcf75978c9ef6202293773cf533afadf", "apr_id": "53bb3c53f5129c8eba610cf165b9f8d2", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n\nint main()\n{\n    char num[100000];\n\n    gets(num);\n    long int l=strlen(num);\n\n    printf(\"%s%s\\n\",num,strrev(num));\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\n\nint main()\n{\n    char num[100000];\n\n    scanf(\"%s\",num);\n\n\n    printf(\"%s\",num);\n    printf(\"%s\\n\",strrev(num));\n    return 0;\n\n}\n"}
{"similarity_score": 0.9984709480122325, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "32a7879d5e2dab5edfe2a67312da5632", "bug_code_uid": "b8d678732da95cbf6d21f2932cb11358", "src_uid": "62a672fcaee8be282700176803c623a7", "apr_id": "a387b89ca5de646056e4340bfec74db3", "difficulty": 1200, "tags": ["constructive algorithms", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    char T[10000],P[100000];\n    int len_P,i,K,c=0;\n    int k=-1,t_lenth,p_lenth,tot,j,m,n,count;\n\n    gets(T);\n    gets(P);\n\n    len_P=strlen(P);\n    t_lenth=strlen(T);\n    p_lenth=strlen(P);\n\n    tot=t_lenth-p_lenth+1;\n    for(i=0,j=0;i<tot;i++){\n        if(T[i]==P[j]){\n            for(m=i+1,n=j+1,count=1;n<p_lenth;m++,n++){\n                if(T[m]==P[n])\n                    count++;\n                else\n                    break;\n            }\n            if(count==p_lenth){\n                c++;\n                i=i+len_P-1;\n            }\n        }\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    char T[1000000],P[100000];\n    int len_P,i,K,c=0;\n    int k=-1,t_lenth,p_lenth,tot,j,m,n,count;\n\n    gets(T);\n    gets(P);\n\n    len_P=strlen(P);\n    t_lenth=strlen(T);\n    p_lenth=strlen(P);\n\n    tot=t_lenth-p_lenth+1;\n    for(i=0,j=0;i<tot;i++){\n        if(T[i]==P[j]){\n            for(m=i+1,n=j+1,count=1;n<p_lenth;m++,n++){\n                if(T[m]==P[n])\n                    count++;\n                else\n                    break;\n            }\n            if(count==p_lenth){\n                c++;\n                i=i+len_P-1;\n            }\n        }\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9644416718652526, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "aea6671022ee89d21b50238b10a2dca5", "bug_code_uid": "cacc21594c205a6d2a15f17bac421c9a", "src_uid": "3adc75a180d89077aa90bbe3d8546e4d", "apr_id": "4edec19035717129a75c0b5fbf0d68cd", "difficulty": 1400, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint max(int x,int y)\n{\n    if(x>y)\n    {\n        return x;\n    }\n    else\n    {\n        return y;\n    }\n}\nint main()\n{\n    int i,n,numr,numb,ans;\n    char s[1001];\n    scanf(\"%d\",&n);\n    scanf(\"%s\",s);\n    numr=0;\n    numb=0;\n    for(i=0;s[i]!='\\0';i++)\n    {\n        if(i%2==0&&s[i]=='r')\n        {\n            numr++;\n        }\n        else if(i%2==1&&s[i]=='b')\n        {\n            numb++;\n        }\n    }\n    ans=max(numr,numb);\n    numr=0;\n    numb=0;\n    for(i=0;s[i]!='\\0';i++)\n    {\n        if(i%2==1&&s[i]=='r')\n        {\n            numr++;\n        }\n        else if(i%2==0&&s[i]=='b')\n        {\n            numb++;\n        }\n    }\n    if(ans>max(numr,numb))\n    {\n        ans=max(numr,numb);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n\n\t \t  \t\t\t\t  \t\t \t\t\t \t  \t\t  \t    \t", "fixed": "#include <stdio.h>\nint max(int x,int y)\n{\n    if(x>y)\n    {\n        return x;\n    }\n    else\n    {\n        return y;\n    }\n}\nint main()\n{\n    int i,n,numr,numb,ans;\n    char s[100001];\n    scanf(\"%d\",&n);\n    scanf(\"%s\",s);\n    numr=0;\n    numb=0;\n    for(i=0;s[i]!='\\0';i++)\n    {\n        if(i%2==0&&s[i]=='r')\n        {\n            numr++;\n        }\n        else if(i%2==1&&s[i]=='b')\n        {\n            numb++;\n        }\n    }\n    ans=max(numr,numb);\n    numr=0;\n    numb=0;\n    for(i=0;s[i]!='\\0';i++)\n    {\n        if(i%2==1&&s[i]=='r')\n        {\n            numr++;\n        }\n        else if(i%2==0&&s[i]=='b')\n        {\n            numb++;\n        }\n    }\n    if(ans>max(numr,numb))\n    {\n        ans=max(numr,numb);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n\n\t \t\t\t\t\t \t\t\t\t  \t \t  \t  \t\t\t    \t"}
{"similarity_score": 0.8, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "dab95fa58229f46d8f499546ccc381e0", "bug_code_uid": "23c33c875235b47846225f04fccb26e8", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "fd2269c812c5328ac1a8ffef5cdec526", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain(){\n int arr[100][2], cnt, rooms=0, n;\n scanf(\"%d\", &n);\n for(cnt=0;cnt<n*2;cnt++)\n scanf(\"%d\", &arr[0][cnt]);\n for(cnt=0;cnt<2*n-1;cnt+=2){\n   if(arr[0][cnt+1]-arr[0][cnt]>=2)\n   rooms++;\n }\n printf(\"%d\", rooms);\n}", "fixed": "#include<stdio.h>\nmain(){\n int arr[100][2], cnt, rooms=0, n;\n scanf(\"%d\", &n);\n for(cnt=0;cnt<n*2;cnt++)\n scanf(\"%d\", &arr[0][cnt]);\n for(cnt=0;cnt<n;cnt++){\n  if(arr[cnt][1]-arr[cnt][0]>=2)\n  rooms++;\n }\n printf(\"%d\", rooms);\n}"}
{"similarity_score": 0.3333333333333333, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "2cd2e29bb1336bfbfbfad6a651a121cf", "bug_code_uid": "9585976ef06d2e54ee47c21cad939beb", "src_uid": "ee295fd90ee9283709447481f172c73c", "apr_id": "0a81430c8eabfd623c10536d4276229e", "difficulty": 1100, "tags": ["data structures", "brute force", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main(){\n\n    int ans=0;\n    char ch;\n    while(1){\n        scanf(\"%c\",&ch);\n        if(ch=='\\n')break;\n    }\n    while(1){\n        if(ch=='\\n'||scanf(\"%c\",&ch)==EOF){\n            printf(\"%d\\n\",ans);\n            ans=0;\n            continue;\n        }\n\n        if((ans==0&&ch=='B')||ch=='A')ans++;\n        else if(ans!=0&&ch=='B')ans--;\n    }\n    return;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\n    int i,ans,n;\n    char ch;\n    scanf(\"%d\",&n);\n    getchar();\n    for(i=1;i<=n;i++){\n        ans=0;\n        while(1){\n            ch=getchar();\n            if(ch=='\\n')break;\n            if(ans==0||ch=='A')\n                ans++;\n            else ans--;\n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9567617295308187, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "448e1c98740730c20433867819dc35a2", "bug_code_uid": "40028be856beca3ab6c54e630b14921a", "src_uid": "88390110e4955c521867864a6f3042a0", "apr_id": "294af0f0838f0ad363ab8ea22fad3d01", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n],b[n],i,j,total=0,can=0,temp;\n    for (i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        total+=a[i];\n\n    }\n    for (i=0;i<n;i++){\n        scanf(\"%d\",&b[i]);\n    }\n    for (i=0;i<2;i++){\n        for (j=i;j<n-i-1;j++){\n            if (b[j]>b[j+1]){\n                temp=b[j];\n                b[j]=b[j+1];\n                b[j+1]=temp;\n            }\n        }\n    }\n    can=b[n-1]+b[n-2];\n    if (can>=total) printf(\"YES\");\n    else printf(\"NO\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n],b[n],i,j,temp;\n    long long int total=0,can=0;\n    for (i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        total+=a[i];\n\n    }\n    for (i=0;i<n;i++){\n        scanf(\"%d\",&b[i]);\n    }\n    for (i=0;i<2;i++){\n        for (j=i;j<n-i-1;j++){\n            if (b[j]>b[j+1]){\n                temp=b[j];\n                b[j]=b[j+1];\n                b[j+1]=temp;\n            }\n        }\n    }\n    can=b[n-1]+b[n-2];\n    if (can>=total) printf(\"YES\");\n    else printf(\"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.5761166818596172, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "31ac129a50272413da74e7130f4b3dde", "bug_code_uid": "2110f895bcebf7aa01c1a974fca85281", "src_uid": "178876bfe161ba9ccfd80c9310f75cbc", "apr_id": "b89416a9de041c583f9f67b6b8d94d10", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n        int n;\n     \n        while(scanf(\"%d\",&n)!=EOF)\n        {\n                while(1)\n        {\n                if(n==1)\n        {\n            printf(\"3\\n\");\n        }\n        if((n==2)){\n            printf(\"2\\n\");\n        }\n        if(n%2!=0)\n        {\n            printf(\"1\\n\");\n        }\n        if(n%2==0)\n        {\n            printf(\"0\\n\");\n        }\n\n        }\n        \n        }\n        \n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n        int a,n,i;\n\n        scanf(\"%d\",&a);\n\n        for(i=1;i<=a;i++)\n        {\n            scanf(\"%d\",&n);\n        {\n            while(1)\n            {\n                if(n==1)\n            {\n                printf(\"3\\n\");\n                break;\n            }\n            if(n==2){\n                printf(\"2\\n\");\n                break;\n            }\n            if(n%2!=0)\n            {\n                printf(\"1\\n\");\n                break;\n            }\n            if(n%2==0)\n            {\n                printf(\"0\\n\");\n                break;\n            }\n\n            }\n\n        }\n\n        }\n\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.4657863145258103, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "5fe2277537f5e81918e332c2ba6b8079", "bug_code_uid": "e8a7a13f3eedfdb7f71dcd566683015b", "src_uid": "e435a009962a7056d0fa00edb13ad01d", "apr_id": "e9ccbf535aa19d61415685a44d48fb03", "difficulty": 1600, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n    long int i = 3, j = 3, n, k = 2;\n    scanf(\"%ld\", &n);\n    while (n >= j) {\n        k++;\n        j += i;\n        i++;\n    } \n    printf(\"%ld\", k);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main(void) {\n    int x[1000][1000], d[1000];\n    long int i, j = 3, n, k = 2;\n    for (i = 0; i < 1000; i++)\n        d[i] = 0;\n    scanf(\"%ld\", &n);\n    i = 3;\n    while (n >= j) {\n        k++;\n        j += i;\n        i++;\n    } \n    printf(\"%ld\\n\", k);\n    n = 0;\n    for (i = 1; i < k; i++) {\n        for (j = i+1; j <= k; j++) {\n            n++;\n            d[i]++;\n            d[j]++;\n            x[i][d[i]] = n;\n            x[j][d[j]] = n;\n        }\n    }   \n    for (i = 1; i <= k; i++) {\n        for (j = 1; j < k; j++) \n            printf(\"%d \",x[i][j]); \n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9961389961389961, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dca7a73389a5c76539fa6540055bd8d9", "bug_code_uid": "4cc46aed9ec384a8f6bf0e2176720c85", "src_uid": "b7e36ca8a96dd7951359070d4953beec", "apr_id": "a72ab6520b7ed57ac81c0536a07cf8a1", "difficulty": 800, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        if(a==2)\r\n            printf(\"7\\n\");\r\n        else{\r\n            printf(\"5\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        if(n==2)\r\n            printf(\"7\\n\");\r\n        else{\r\n            printf(\"5\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.7239263803680982, "equal_cnt": 18, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 12, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "d7688edaa5c5efb86a1809f9395c378f", "bug_code_uid": "de40fd68640a781e75b1cf879393d84d", "src_uid": "8b0a9c7e997034d3ecce044b9f64aeba", "apr_id": "53ac4dc8d876eb9ba131dd5819532ae1", "difficulty": 800, "tags": ["dp", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int n, m, bourleys;\r\n\r\n    for (int i = 1; i <= t; i++) {\r\n        scanf(\"%d %d %d\", n, m, bourleys);\r\n\r\n        int max;\r\n        if (n > m)\r\n            max = n;\r\n        else\r\n            max = m;\r\n\r\n        if (n == 1)\r\n            if (m - 1 == bourleys)\r\n                printf(\"YES\");\r\n            else\r\n                printf(\"NO\");\r\n        else if (m == 1)\r\n            if (n - 1 == bourleys)\r\n                printf(\"YES\");\r\n            else\r\n                printf(\"NO\");\r\n        else if (bourleys > max && bourleys < n*m)\r\n            printf(\"YES\");\r\n        else\r\n            printf(\"NO\");\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int n, m, bourleys;\r\n\r\n    for (int i = 1; i <= t; i++) {\r\n        scanf(\"%d %d %d\", &n, &m, &bourleys);\r\n\r\n        if (bourleys == 0)\r\n            if (n == 1 && m == 1)\r\n                printf(\"\\nYES\");\r\n            else\r\n                printf(\"\\nNO\");\r\n        else if (n == 1)\r\n            if (m - 1 == bourleys)\r\n                printf(\"\\nYES\");\r\n            else\r\n                printf(\"\\nNO\");\r\n        else if (m == 1)\r\n            if (n - 1 == bourleys)\r\n                printf(\"\\nYES\");\r\n            else\r\n                printf(\"\\nNO\");\r\n        else if (n * m - 1 == bourleys)\r\n            printf(\"\\nYES\");\r\n        else\r\n            printf(\"\\nNO\");\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.338958180484226, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "0702d5f1df44de481a81807a14e8a5da", "bug_code_uid": "cb1dcefcfe62320e7ffeeb9129bdd6e2", "src_uid": "0671972bc2b6452d51d048329e6e0106", "apr_id": "607dcb34d6b84e7b2347c864c4033850", "difficulty": 900, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\tlong long x, y;\n\tfor (int i = 0; i < t; i++) {\n\t\tscanf(\"%I64d %I64d\", &x, &y);\n\t\tif ((y - x) >=2 ) {\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\n\treturn 0;\n}\n", "fixed": "//#include<stdio.h>\n//int is(char x[], int n) {\n//\tint flag = 0;\n//\tfor (int i = 0; i < n; i++) {\n//\t\tif (x[i] == 'B') {\n//\t\t\tflag = 1;\n//\t\t\tbreak;\n//\t\t}\n//\t}\n//\treturn flag;\n//}\n//int main() {\n//\tchar x[51] = {0};\n//\tint n;\n//\tscanf(\"%d\", &n);\n//\tgetchar();\n//\tfor (int i = 0; i < n; i++) {\n//\t\tscanf(\"%c\", &x[i]);\n//\t}\n//\tint re = 0;\n//\tint j = n;\n//\twhile (is(x,n))\n//\t{\n//\t\t\n//\t\twhile (x[n-j] == 'R') {\n//\t\t\tx[n-j] = ' ';\n//\t\t\tj--;\n//\t\t}\n//\t\tif (x[n-j] == 'B') {\n//\t\t\tx[n-j] = 'R';\n//\t\t}\n//\t\twhile (j < n) {\n//\t\t\tj++;\n//\t\t\tx[n-j] = 'B';\n//\t\t}\n//\t\tre++;\n//\t\t\n//\t}\n//\tprintf(\"%d\", re);\n//\treturn 0;\n//}\n//#include<stdio.h>\n//int main() {\n//\tint n,result;\n//\tlong a;\n//\tint min=1000000;\n//\n//\tscanf(\"%d\", &n);\n//\tfor (int i = 0; i < n; i++) {\n//\t\tscanf(\"%ld\", &a);\n//\t\tif (min >a / n) {\n//\t\t\tresult = i + 1;\n//\t\t\tmin = a / n;\n//\t\t}\n//\t}\n//\t\t\n//\tprintf(\"%d\", result);\n//\n//\n//\n//\treturn 0;\n//}\n#include<stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\tlong long x, y;\n\tfor (int i = 0; i < t; i++) {\n\t\tscanf(\"%I64d %I64d\", &x, &y);\n\t\tif ((x- y) >=2 ) {\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9658273381294964, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "e60dcd57749e532ec356120207358de9", "bug_code_uid": "8fbaa456565c1c87de290e182263ac16", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "478eb9e0b774cd1e087be72f086a4f3d", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int y,k,n,i,j,h[7111];\n    while(scanf(\"%d%d%d\",&y,&k,&n)!=EOF)\n    {\n        j=0;\n        for(i=y+1;i<=n;i++)\n        {\n            if(i%k==0)\n            {\n                h[j]=i-y;\n                j++;\n            }\n        }\n        if(j)\n        {\n            printf(\"%d\",h[0]);\n            for(i=1;i<j;i++)\n            {\n                printf(\" %d\",h[i]);\n            }\n            printf(\"\\n\");\n        }\n        else\n        {\n            printf(\"-1\\n\");\n        }\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint h[1000005];\nint main()\n{\n    int y,k,n,i,j;\n    while(scanf(\"%d%d%d\",&y,&k,&n)!=EOF)\n    {\n        j=0;\n        for(i=1;i*k<=n;i++)\n        {\n            if(k*i>y)\n            {\n                h[j]=k*i-y;\n                j++;\n            }\n        }\n        if(j)\n        {\n            printf(\"%d\",h[0]);\n            for(i=1;i<j;i++)\n            {\n                printf(\" %d\",h[i]);\n            }\n            printf(\"\\n\");\n        }\n        else\n        {\n            printf(\"-1\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.30198019801980197, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "fa45301ceafdf9360197b5c36f05e47b", "bug_code_uid": "a512c54bf6ef4c52c01e56054b4ea8ac", "src_uid": "3545385c183c29f9b95aa0f02b70954f", "apr_id": "a0bef059c08bd67833ad8a6dee61823f", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <math.h>\n#include <stdio.h>\n#include <stdlib.h>\n\n#define N 13845\n\nint main() {\n\tint n, x;\n\n\tscanf(\"%d\", &n);\n\tx = 0;\n\twhile (n--) {\n\t\tint a, b, c, d;\n\n\t\tscanf(\"%d\", &a);\n\t\tb = floor((double) a / 2);\n\t\tc = ceil((double) a / 2);\n\t\td = abs(x + b) < abs(x + c) ? b : c;\n\t\tprintf(\"%d\\n\", d);\n\t\tx += d;\n\t}\n\treturn 0;\n}\n", "fixed": "/* Coached by rainboy */\n#include <math.h>\n#include <stdio.h>\n\n#define N 13845\n\nint main() {\n\tstatic int aa[N];\n\tint n, i, k, x;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tk = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif (aa[i] % 2)\n\t\t\tk++;\n\tx = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif (aa[i] % 2 == 0)\n\t\t\tprintf(\"%d\\n\", aa[i] / 2);\n\t\telse if (x < k / 2)\n\t\t\tprintf(\"%d\\n\", (int) floor((double) aa[i] / 2)), x++;\n\t\telse\n\t\t\tprintf(\"%d\\n\", (int) ceil((aa[i] + 1) / 2));\n\treturn 0;\n}\n"}
{"similarity_score": 0.35851183765501693, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "5a472787f788ee703767c7c88c56e481", "bug_code_uid": "000181cbd6c647ea206ba50b77a0bd1a", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "666ca34519a2353b87a03e1c26cc8054", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(void){\r\n    int t,k;\r\n    scanf(\"%d\",&t);\r\n    int a[1000],b[1000];\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%d\",scanf(\"%d\",&a[i]));\r\n    }\r\n    for(int i=0;i<1000;i++){\r\n        for(int j=1;;j++){\r\n            if((j%3 == 0) || (j%10) == 3)\r\n                j++;\r\n            else b[i] = j;\r\n        }\r\n    }\r\n    for(int i=0;i<t;i++){\r\n        if(i = t-1) printf(\"%d\",b[a[i]]);\r\n        else printf(\"%d\\n\",b[a[i]]);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(void){\r\n    int a[2000];\r\n    int t,k;\r\n    scanf(\"%d\",&t);\r\n    int g=1;\r\n    for(int i=0;i<2000;i++){\r\n        if(i%3 != 0 && i%10 != 3){\r\n            a[g] = i;\r\n            g++;\r\n        }\r\n    }\r\n\r\n        \r\n\r\n\r\n    for(int i=0;i<t;i++){\r\n        int temp;\r\n        scanf(\"%d\",&temp);\r\n        printf(\"%d\",a[temp]);\r\n        if(i!=t-1) printf(\"\\n\");\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9430633520449078, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "01f5fe5925799bc6c63fdf94e35b3e49", "bug_code_uid": "e5c839d4db1c93b34031d9065f4109e8", "src_uid": "89b4a7b4a6160ce784c588409b6ce935", "apr_id": "2a6b95aa2dad8a4c287c5af376ffa733", "difficulty": 1600, "tags": ["data structures", "implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint top=-1;\n\nchar arr[100000];\n\nvoid push(char c)\n{\n    if(top==100000)\n        printf(\"Stack Overflow\");\n    else\n    arr[++top]=c;\n}\nvoid pop()\n{\n     top--;\n}\nint isEmpty()\n{\n    if(top == -1) return 1;\n    else return 0;\n}\nchar *Top()\n{\n    return arr[top];\n}\n\nint main()\n{\n    int i;\n    //scanf(\"%s\",arr);\n    fgets(arr, sizeof(arr), stdlin);\n    for(i=0;i<strlen(arr);i++)\n    {\n        if (isEmpty()==1 || Top()!=arr[i])\n               push(arr[i]);\n\n        else\n           pop();\n\n\n    }\n    isEmpty()==1? printf(\"YES\"):printf(\"NO\");\n     return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint top=-1;\n\nchar arr[100000];\n\nvoid push(char c)\n{\n    if(top==100000)\n        printf(\"Stack Overflow\");\n    else\n    arr[++top]=c;\n}\nvoid pop()\n{\n     top--;\n}\nint isEmpty()\n{\n    if(top == -1) return 1;\n    else return 0;\n}\nchar *Top()\n{\n    return arr[top];\n}\n\nint main()\n{\n    int i,length;\n    //scanf(\"%s\",arr);\n    gets(arr);\n    length= strlen(arr);\n    for(i=0;i<length;i++)\n    {\n        if (isEmpty()==1 || Top()!=arr[i])\n               push(arr[i]);\n\n        else\n           pop();\n\n\n    }\n    isEmpty()==1? printf(\"YES\"):printf(\"NO\");\n     return 0;\n\n}\n"}
{"similarity_score": 0.6998616874135546, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "8687be39d5a2063d20b0056f80116e29", "bug_code_uid": "485d901d6ddca9bf870020d6fefa01a1", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "94f9610a15bb1cc7f539ca9b8412f53a", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n;\n    char s[101],s2[4];\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        scanf(\"%s\",s);\n        x=strlen(s);\n        if(s<=10) printf(\"%s\",s);\n        else \n        {\n            s2[0]=s[0];\n            s2[1]=x-2;\n            s2[2]=s[x-1];\n            printf(\"%s\",s2);\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,x;\n    char s[101],s2[4];\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        scanf(\"%s\",s);\n        x=strlen(s);\n        if(x<=10)\n        printf(\"%s\\n\",s);\n        else\n        {\n           printf(\"%c\",s[0]);printf(\"%d\",x-2);printf(\"%c\",s[x-1]); \n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.5696969696969697, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "9ad525b81cd512e9bd55c680c037c591", "bug_code_uid": "57628e6ad3123e0006dae17daf400902", "src_uid": "0c7e019e1e955cadacca55b4e823a3e5", "apr_id": "994eaa744518f68f50e3af2a72e9e316", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\tint t;\n\tscanf(\"%d\", &t);\n\tint a[t];\n\tint b[100];\n\tfor (int i = 0; i < t; i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor (int i = 0; i < t; i++){\n\t\tint n = a[i];\n\t\tif ((n / 2) % 2 != 0){\n\t\t\tprintf(\"NO\");\n\t\t}\n\t\telse {\n\t\t\tint sum = 0;\n\t\t\tprintf(\"YES\\n\");\n\t\t\tint temp = 2;\n\t\t\tfor (int j = 0; j < (n / 2); j++){\n\t\t\t\tb[j] = temp;\n\t\t\t\ttemp += 2;\n\t\t\t\tsum += b[j];\n\t\t\t}\n\t\t\ttemp = 1;\n\t\t\tfor (int j = (n / 2); j < (n-1); j++){\n\t\t\t\tb[j] = temp;\n\t\t\t\ttemp += 2;\n\t\t\t\tsum -= b[j];\n\t\t\t}\n\t\t\tb[n-1] = sum;\n\t\t\tfor (int j = 0; j < n; j++){\n\t\t\t\tprintf(\"%d \",b[j]);\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n\tint t;\n\tscanf(\"%d\", &t);\n\tint a[t];\n\tint b[100];\n\tfor (int i = 0; i < t; i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor (int i = 0; i < t; i++){\n\t\tint n = a[i] / 2;\n\t\tif (n % 2 != 0){\n\t\t\tprintf(\"NO\");\n\t\t}\n\t\telse {\n\t\t\tprintf(\"YES\\n\");\n\t\t\tint temp = 0;\n\t\t\tfor (int j = 0; j < n; j++){\n\t\t\t\ttemp += 2;\n\t\t\t\tprintf(\"%d \",temp);\n\t\t\t}\n\t\t\tint final_even_num = temp;\n\t\t\ttemp = 1;\n\t\t\tfor (int j = n; j < (a[i]-1); j++){\n\t\t\t\tprintf(\"%d \",temp);\n\t\t\t\ttemp += 2;\n\t\t\t}\n\t\t\tprintf(\"%d\",final_even_num + n - 1);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9813278008298755, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "0dfdae094da22b3049b357a006aafb0b", "bug_code_uid": "b4cfc3eeec9e8cf1b79f2b95f32e8703", "src_uid": "0b229ddf583949d43d6f1728e38c3cad", "apr_id": "414d7e216a194b3d59ba4bad207fb2de", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,x,i,c=1,a,s=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&x);\n    for(i=1;i<n;i++)\n    {\n       //  printf(\"x=%d\\ta=%d\\ts=%d\\n\",x,a,s);\n        scanf(\"%d\",&a);\n       // printf(\"x=%d\\t,a=%d\\t,s=%d\\n\",x,a,s);\n        if(x==a)\n            c++;\n        else\n        {\n            s=s+c*(c-1)/2;\n            c=1;\n            x=a;\n        }\n\n    }\n    if(c!=1)\n        s=s+c*(c-1)/2;\n    printf(\"%d\",n+s);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long int n,x,i,c=1,a,s=0;\n    scanf(\"%lld\",&n);\n    scanf(\"%lld\",&x);\n    for(i=1;i<n;i++)\n    {\n       //  printf(\"x=%d\\ta=%d\\ts=%d\\n\",x,a,s);\n        scanf(\"%lld\",&a);\n       // printf(\"x=%d\\t,a=%d\\t,s=%d\\n\",x,a,s);\n        if(x==a)\n            c++;\n        else\n        {\n            s=s+c*(c-1)/2;\n            c=1;\n            x=a;\n        }\n\n    }\n    if(c!=1)\n        s=s+c*(c-1)/2;\n    printf(\"%lld\",n+s);\n    return 0;\n}\n"}
{"similarity_score": 0.5626666666666666, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "140a5e5907e7979744064a9932843e9d", "bug_code_uid": "d47ae9b4e65807750e6a55bf2c3aeb97", "src_uid": "a28b84c9d1a54e322ab2d54bd5ab45c8", "apr_id": "6dcb18329803375eb5300a683c060816", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,k,j=1,ans;\r\n        double x;\r\n        scanf(\"%d%d\",&n,&k);\r\n        if(n>k)\r\nx=(double)n/k;\r\n        else\r\n x=(double)k/n;\r\n        if((int)x==x)\r\n                ans=(int)x;\r\n            else\r\n                ans=(int)x+1;\r\n        printf(\"%lld\\n\",ans);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,k,j=1,ans;\r\n        scanf(\"%d%d\",&n,&k);\r\n        if((double)n/k==n/k) j=n/k;\r\n        else j=n/k+1;\r\n        if(k*j%n!=0) ans=k*j/n+1;\r\n        else ans=k*j/n;\r\n        printf(\"%d\\n\",ans);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.7276190476190476, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9b47a6e5854e3c4eaed318a51b229a5c", "bug_code_uid": "e8d0a2ca15075f76ab895eb404c6e77c", "src_uid": "91be5db48b44a44adff4c809ffbb8e3e", "apr_id": "a669acaecdf3f3475c103a0107b330cb", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint n,s,i,ans=-1,x,y;\n\t\n\tfor(scanf(\"%d%d\",&n,&s),i=0;i<n;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\t\n\t\tif(x<=s && y){\n\t\t\tif(100 - y>ans) ans = 100-y;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\\n\",ans);\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\tint n,s,i,ans=-1,x,y;\n\t\n\tfor(scanf(\"%d%d\",&n,&s),i=0;i<n;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\t\n\t\tif(x<s){\n\t\t\t if(y && 100-y>ans) ans = 100 - y;\n\t\t\t if(!y){\n\t\t\t \tif(ans==-1) ans=0;\n\t\t\t }\n\t\t}\n\t\telse if(x==s && y==0){\n\t\t\tif(ans==-1) ans = 0;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\\n\",ans);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9941520467836257, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a03b093e44fb63144e68f7dee9425760", "bug_code_uid": "50d610cf92c974b953d60c0f6d0879e4", "src_uid": "8864c6a04fed970fcbc04e220df9d88d", "apr_id": "21959368b0425af703b770c03a6f564b", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#define min(x,y) x>y?y:x\n#define max(x,y) x>y?x:y\n\nint main() {\n\tint T, x, y, big, small;\n\tscanf(\"%d\", &T);\n\twhile(T--) {\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tbig = max(x,y);\n\t\tsmall = min(x,y);\n\t\tif(big-small>=2){\n\t\t\tprintf(\"%d\", big*2-1);\n\t\t}\n\t\telse printf(\"%d\", big + small);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#define min(x,y) x>y?y:x\n#define max(x,y) x>y?x:y\n\nint main() {\n\tint T, x, y, big, small;\n\tscanf(\"%d\", &T);\n\twhile(T--) {\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tbig = max(x,y);\n\t\tsmall = min(x,y);\n\t\tif(big-small>=2){\n\t\t\tprintf(\"%d\\n\", big*2-1);\n\t\t}\n\t\telse printf(\"%d\\n\", big + small);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.7123287671232876, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "6c7f1a9f20da4405210e5c628c257999", "bug_code_uid": "9ba5ce1b1f5f2ba797d73022da959439", "src_uid": "d5627b9fe5f6c5a7247e1f9d9e9b0c6a", "apr_id": "13eec27e1577d89d21be1e18462399c1", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <stdbool.h>\r\n#include <string.h>\r\n#include <ctype.h>\r\n#include <math.h>\r\n\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0; i<t ; i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n\r\n        int sum=0, avg;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            sum += a[i];\r\n        }\r\n        avg = sum/n;\r\n        int count=0;\r\n\r\n         for (int i = 0; i < n; i++)\r\n        {\r\n            if(a[i] > avg)count++;\r\n        }\r\n\r\n        printf(\"%d\\n\",count);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <stdbool.h>\r\n#include <string.h>\r\n#include <ctype.h>\r\n#include <math.h>\r\n\r\nint findmin(int a[], int n)\r\n{\r\n    int min=a[0];\r\n     for (int i = 0; i < n; i++)\r\n        {\r\n            if(a[i] < min)min = a[i];\r\n        }\r\n    return min;\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0; i<t ; i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        int min = findmin(a,n);\r\n        \r\n        int count=0;\r\n         for (int i = 0; i < n; i++)\r\n        {\r\n            if(a[i] > min)count++;\r\n        }\r\n\r\n        printf(\"%d\\n\",count);\r\n    }\r\n}"}
{"similarity_score": 0.7924970691676436, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "62cb9c5983d7a3b12b61e44e79499b2c", "bug_code_uid": "875b29d6e20c23868705d9e037531ff0", "src_uid": "7975af65a23bad6a0997921c7e31d3ca", "apr_id": "e8d0a4f6ed658f5f86b943a5d28f4000", "difficulty": 1100, "tags": ["brute force", "dp", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int T,q,d,inr,a,b,i;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d%d\",&q,&d);\r\n        while(q--)\r\n        {\r\n            scanf(\"%d\",&inr);\r\n            if(inr>=d*11){printf(\"YES\\n\");continue;}\r\n            a=inr/d;b=inr%d;\r\n            for(i=0;i<a;i++)if((i*d+b)%10==0){printf(\"YES\\n\");break;}\r\n            if(i==a)printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int T,q,d,inr,a,b,i;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d%d\",&q,&d);\r\n        while(q--)\r\n        {\r\n            scanf(\"%d\",&inr);\r\n            if(inr>=d*10){printf(\"YES\\n\");continue;}\r\n            while(inr>=0){i=0;inr-=d;if(inr%10==0){i=1;break;}}\r\n            if(i==1){printf(\"YES\\n\");continue;}\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9451114922813036, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "9970499669b3bc4b2fc3c87844815a65", "bug_code_uid": "e934e627284329428258cadf0582b50d", "src_uid": "b7aef95015e326307521fd59d4fccb64", "apr_id": "0ecbb9f5d88a24443b374302ceecbf06", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//set many funcs template\n//Ver.20190820\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<stdbool.h>\n#include<time.h>\n#include<assert.h>\n#include <math.h>\n#define inf 1072114514\n#define llinf 4154118101919364364\n#define mod 1000000007\n#define pi 3.1415926535897932384\n\n\n\nint main(){\nint t;\n\n   int i,n,m,j,x=0,y=0;\n\n  scanf(\"%d\",&n);\n  int b[n+1];\n\n  for(i=0;i<n;i++)\n  {\n     scanf(\"%d\",&j);\n     b[j]=i+1;\n  }\nscanf(\"%d\",&m);\nfor(i=0;i<m;i++)\n{\n    scanf(\"%d\",&j);\n    x+=(b[j]);\n    y+=(n-b[j]+1);\n}\n    printf(\"%d %d\\n\",x,y);\n\n  return 0;\n}\n", "fixed": "//set many funcs template\n//Ver.20190820\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<stdbool.h>\n#include<time.h>\n#include<assert.h>\n#include <math.h>\n#define inf 1072114514\n#define llinf 4154118101919364364\n#define mod 1000000007\n#define pi 3.1415926535897932384\n\n\n\nint main(){\n\n  int i,n,m,j;\n  long long int x=0,y=0;\n\n  scanf(\"%d\",&n);\n  int b[n+1];\n\n  for(i=0;i<n;i++)\n  {\n     scanf(\"%d\",&j);\n     b[j]=i+1;\n  }\nscanf(\"%d\",&m);\nfor(i=0;i<m;i++)\n{\n    scanf(\"%d\",&j);\n    x+=(long long int)(b[j]);\n    y+=(long long int)(n-b[j]+1);\n}\n    printf(\"%lld %lld\\n\",x,y);\n\n\n  return 0;\n}\n"}
{"similarity_score": 0.2542134831460674, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "b20074070f6b7d63ddb5bd03723cefa6", "bug_code_uid": "0c32b64c080521eaf7e3da32375a5f0a", "src_uid": "fcd55a1ca29e96c05a3b65b7a8103842", "apr_id": "ad68cd2a8bc484f987391d714daedd4f", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\t\t  int t,i,j,a,b,c=0;\n\t\t\t\tscanf(\"%d\",&t);\n\t\t\t\twhile(t--)\n\t\t\t\t{\n\t\t\t\t\t\t\t\tscanf(\"%d %d\",&a,&b);\n\t\t\t\t\t\t\t\tfor(i=0;i<1000;i+=2)\n\t\t\t\t\t\t\t\t{ for(j=1;j<1000;j+=2)\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(a==b)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tc=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\telse if(a<b)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\t\t\tif((a+j)==b)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc+=1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if((a-i)+j==b)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{c+=2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse \n\t\t\t\t\t          {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif((a-i)==b)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\tc+=1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if((a-i)+j==b)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{c+=2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\n\t\t\t\tprintf(\"%d\",c);\n\t\t\t}\t\t\t\t\t\n\t\t\t\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\t\t  int t,a,b;\n\t\t\t\tscanf(\"%d\",&t);\n\t\t\t\twhile(t--)\n\t\t\t\t{\n\t\t\t\t\t\t\t\tscanf(\"%d %d\",&a,&b);\n\t\t\t\t\t\t\t\tif(a==b)\n\t\t\t\t\t\t\t\tprintf(\"0\\n\");\n\t\t\t\t\t\t\t\telse if(a>b)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tif((a-b)%2==0)\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprintf(\"1\\n\");\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\telse { printf(\"2\\n\");}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tif((b-a)%2==0)\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprintf(\"2\\n\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\telse {printf(\"1\\n\");}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t}\t\n\t\t\t\treturn 0;\n}"}
{"similarity_score": 0.902332361516035, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "192fc683e5067861cd4f726c428554c8", "bug_code_uid": "163a678df2822c3e053dd420b519b5c8", "src_uid": "848ead2b878f9fd8547e1d442e2f85ff", "apr_id": "f6a8d43f422ee4a8e9e760b682836f15", "difficulty": 1400, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,j,n,v,b,p,q,remain=0,total=0;\n\tscanf(\"%d%d\",&n,&v);\n\tn++;\n\tb=v;\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\t\ta[i]=0;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&p,&q);\n\t\ta[p]+=q;\n\t}\n\t//for(i=0;i<n;i++)\n\t//printf(\"%d  \",a[i]);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tv=b;\n\t\tif(a[i]!=0 || a[i-1]!=0)\n\t\t{\n\t\t\tif(v<=a[i-1])\n\t\t\t{\n\t\t\t\ttotal+=v;\n\t\t\t\tv=0;\n\t\t\t}\n\t\t\telse if(v>a[i-1])\n\t\t\t{\n\t\t\t\ttotal+=a[i-1];\n\t\t\t\tv-=a[i-1];\n\t\t\t}\n\t\t\tif(v<=a[i])\n\t\t\t{\n\t\t\t\ttotal+=v;\n\t\t\t\ta[i]-=v;\n\t\t\t\tv=0;\n\t\t\t}\n\t\t\telse if(v>a[i])\n\t\t\t{\n\t\t\t\ttotal+=a[i];\n\t\t\t\tv-=a[i];\n\t\t\t\ta[i]=0;\n\t\t\t}\n\t\t}\n\t\t//v=b;\n\t}\n\tv=b;\n\tif(v<=a[i-1])\n\t{\n\t\ttotal=total+v;\n\t}\n\telse if(v>a[i-1])\n\t{\n\t\ttotal+=a[i-1];\n\t}\n\tprintf(\"%d\",total);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,n,v,b,p,q,min=0,total=0;\n\tscanf(\"%d%d\",&n,&v);\n\tn++;\n\tb=v;\n\tint a[3002]={};\n\t//for(i=0;i<n;i++)\n\t//\ta[i]=0;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&p,&q);\n\t\ta[p]+=q;\n\t}\n\t//printf(\"%d\",a[3000]);\n\tfor(i=1;i<3001;i++)\n\t{\n\t\t//printf(\"%d \",i );\n\t\tv=b;\n\t\tif(a[i]!=0 || a[i-1]!=0)\n\t\t{\n\t\t\tif(v<=a[i-1])\n\t\t\t{\n\t\t\t\ttotal+=v;\n\t\t\t\tv=0;\n\t\t\t}\n\t\t\telse if(v>a[i-1])\n\t\t\t{\n\t\t\t\ttotal+=a[i-1];\n\t\t\t\tv-=a[i-1];\n\t\t\t}\n\t\t\tif(v<=a[i])\n\t\t\t{\n\t\t\t\ttotal+=v;\n\t\t\t\ta[i]-=v;\n\t\t\t\tv=0;\n\t\t\t}\n\t\t\telse if(v>a[i])\n\t\t\t{\n\t\t\t\ttotal+=a[i];\n\t\t\t\tv-=a[i];\n\t\t\t\ta[i]=0;\n\t\t\t}\n\t\t}\n\t}\n\tv=b;\n\tif(v<=a[i-1])\n\t{\n\t\ttotal=total+v;\n\t}\n\telse if(v>a[i-1])\n\t{\n\t\ttotal+=a[i-1];\n\t}\n\tprintf(\"%d\",total);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6972972972972973, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "351349c4202f9b5496205092f051127d", "bug_code_uid": "357f31c92d204547dc217a756f47c991", "src_uid": "fce9d78ad7d4ea01be1704f588e42d37", "apr_id": "34e88a8f10ef9167c9f7c1ed53f78969", "difficulty": 1100, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "# include <stdio.h>\n# include <stdlib.h>\n# include <math.h>\n\nint main()\n{\n\tint i,n,x,y,count=0;\n\tfloat r,d,r1,distance;\n\tscanf(\"%f %f \",&r,&d);\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d %f\",&x,&y,&r1);\n\t\tdistance=sqrt((x*x)+(y*y));\n\t\tprintf(\"distance = %f\\n\",distance);\n\t\tif(((distance-r1)>=(r-d))&&((distance+r1)<=r))\n\t\t{\t\n\t\t\tcount++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}", "fixed": "# include <stdio.h>\n# include <stdlib.h>\n# include <math.h>\n\nint main()\n{\n\tint i,n,x,y,count=0;\n\tfloat r,d,r1,distance;\n\tscanf(\"%f %f \",&r,&d);\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d %f\",&x,&y,&r1);\n\t\tdistance=sqrt((x*x)+(y*y));\n\t\tif(((distance-r1)>=(r-d))&&((distance+r1)<=r))\n\t\t{\t\n\t\t\tcount++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}"}
{"similarity_score": 0.7860843819393042, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "65b7127d151c82b3434827fccb042a9c", "bug_code_uid": "aa593843697cfea72157eaec486f1f9b", "src_uid": "224a0b09547ec1441474efbd8e06353b", "apr_id": "ec1ffd19c9fa4bf962274b33d172a798", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t, j;\r\n    int *A;\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        int n;\r\n        j = 0;\r\n        scanf(\"%d\", &n);\r\n        A = (int *)malloc(n * sizeof(int));\r\n        int key=0;\r\n\r\n        for (int i = 1; i <= n; i++)\r\n        {\r\n            scanf(\"%d\", &A[i]);\r\n            key = A[1];\r\n\r\n            if (A[i] != key)\r\n            {\r\n                j = i;\r\n            }\r\n        }\r\n        if (j == n)\r\n        {\r\n            printf(\"%d\\n\", 1);\r\n        }\r\n        else\r\n        {\r\n\r\n            printf(\"%d\\n\", j);\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t, j;\r\n    int A[100];\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        int n;\r\n        j = 1;\r\n        scanf(\"%d\", &n);\r\n\r\n        //A = (int *)malloc(n * sizeof(int));\r\n        int key = 0;\r\n\r\n        for (int i = 1; i <= n; i++)\r\n        {\r\n            scanf(\"%d\", &A[i]);\r\n            key = A[1];\r\n\r\n            if (A[i] != key)\r\n            {\r\n                j = i;\r\n            }\r\n            if (j == n)\r\n            {\r\n                if (A[1] != A[2])\r\n                {\r\n                    j = 1;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\", j);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.999096657633243, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "4b8e101cba54ff74c8385d2caadf5469", "bug_code_uid": "7668b7fd4706786524bc85ac74fa6569", "src_uid": "097e35b5e9c96259c54887158ebff544", "apr_id": "6df480f4ed8e5d92d631f1f23ab083ce", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint x[100001],fp[100001],d[100001];\nint main(){\n\tint n,i;\n\tscanf(\"%d\", &n);\n\tint a[n],count=0;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(x[a[i]]==0)\n\t\t{\n\t\t\tfp[a[i]]=i;\n\t\t\td[a[i]]=0;\n\t\t\tcount++;\n\t\t}\n\t\telse if(x[a[i]]==1)\n\t\t{\n\t\t\td[a[i]]=i-fp[a[i]];\n\t\t}\n\t\telse if(x[a[i]]>1){\n\t\t\tif((i-fp[a[i]])!=d[a[i]]*x[a[i]])\n\t\t\t{\n\t\t\t\tcount--;\n\t\t\t\tx[a[i]]=-1;\n\t\t\t}\n\t\t}\n\t\tif(x[a[i]]>=0)\t\n\t\t\tx[a[i]]++;\n\t}\n\tprintf(\"%d\\n\", count);\n\tfor(i=0;i<=10000;i++)\n\t\tif(x[i]>0)\n\t\t{\n\t\t\tprintf(\"%d %d\\n\", i, d[i]);\n\t\t\tx[i]=-1;\n\t\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint x[100001],fp[100001],d[100001];\nint main(){\n\tint n,i;\n\tscanf(\"%d\", &n);\n\tint a[n],count=0;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(x[a[i]]==0)\n\t\t{\n\t\t\tfp[a[i]]=i;\n\t\t\td[a[i]]=0;\n\t\t\tcount++;\n\t\t}\n\t\telse if(x[a[i]]==1)\n\t\t{\n\t\t\td[a[i]]=i-fp[a[i]];\n\t\t}\n\t\telse if(x[a[i]]>1){\n\t\t\tif((i-fp[a[i]])!=d[a[i]]*x[a[i]])\n\t\t\t{\n\t\t\t\tcount--;\n\t\t\t\tx[a[i]]=-1;\n\t\t\t}\n\t\t}\n\t\tif(x[a[i]]>=0)\t\n\t\t\tx[a[i]]++;\n\t}\n\tprintf(\"%d\\n\", count);\n\tfor(i=0;i<=100000;i++)\n\t\tif(x[i]>0)\n\t\t{\n\t\t\tprintf(\"%d %d\\n\", i, d[i]);\n\t\t\tx[i]=-1;\n\t\t}\n\treturn 0;\n}"}
{"similarity_score": 0.98856416772554, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "bb181fe96b80c01770a734aab50fcf26", "bug_code_uid": "34c74d771098c3411f467961bdcfbfd4", "src_uid": "6bb26991c9ea70e51a6bda5653de8131", "apr_id": "1ec8c5ea3f76f22dce90e0a3c15c006b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint check(int t)\n{\n   int x=0;\n   while(t!=0)\n   {\n       if(t%10!=4&&t%10!=7) t=t/10;\n       else x++;\n   }\n   return x;\n}\nint main()\n{\n    int n,k,i,j,temp,flag=0;\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&temp);\n        j=check(temp);\n        if(j<=k)\n        {\n            flag++;\n        }\n    }\n    printf(\"%d\",flag);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint check(int t)\n{\n   int x=0;\n   while(t!=0)\n   {\n       if(t%10!=4&&t%10!=7) t=t/10;\n       else {x++;t=t/10;}\n   }\n   return x;\n}\nint main()\n{\n    int n,k,i,j,temp,flag=0;\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&temp);\n        j=check(temp);\n        if(j<=k)\n        {\n            flag++;\n        }\n    }\n    printf(\"%d\",flag);\n    return 0;\n}\n"}
{"similarity_score": 0.9968701095461658, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "62f8cacedc570595d82022619d8c340d", "bug_code_uid": "8767cccf85742c6ff7a94d187d17b8ba", "src_uid": "a28b84c9d1a54e322ab2d54bd5ab45c8", "apr_id": "00bdb2bad6fa74c9773bca593ccb718c", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,k;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d%d\",&n,&k);\r\n        if(n<k)\r\n        {\r\n            if(k%n==0)\r\n            {\r\n                printf(\"%d\\n\",k/n);\r\n            }\r\n            else\r\n            {\r\n                printf(\"%d\\n\",k/n+1);\r\n            }\r\n        }\r\n        else if(n==k)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else\r\n        {\r\n            if(k%2==0)\r\n            {\r\n                printf(\"1\\n\");\r\n            }\r\n            else\r\n            {\r\n                printf(\"2\\n\");\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,k;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d%d\",&n,&k);\r\n        if(n<k)\r\n        {\r\n            if(k%n==0)\r\n            {\r\n                printf(\"%d\\n\",k/n);\r\n            }\r\n            else\r\n            {\r\n                printf(\"%d\\n\",k/n+1);\r\n            }\r\n        }\r\n        else if(n==k)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else\r\n        {\r\n            if(n%k==0)\r\n            {\r\n                printf(\"1\\n\");\r\n            }\r\n            else\r\n            {\r\n                printf(\"2\\n\");\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.32759468765371375, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "3ca8ca7ca9deb550ae4d25783d25ca78", "bug_code_uid": "cd2bdaf3ea643f2dd5ea18d6ce406c51", "src_uid": "faf1abdeb6f0cf34972d5cb981116186", "apr_id": "e4d375ca1e2cbc82ae52b30ac9935431", "difficulty": 1200, "tags": ["data structures", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long n,m;\n    scanf(\"%lld%lld\", &n, &m);\n    int arra[n],arrb[n],i;\n    for(i=0;i<n;i++)\n    {\n        arra[i]=0;\n        arrb[i]=0;\n    }\n    int x,y;\n    long long rows = 0, cols = 0;\n    long long ans;\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d%d\", &x, &y);\n        x--;\n        y--;\n        if(arra[x]==0&&arrb[y]==0)\n        {\n            rows++;\n            cols++;\n            arra[x]=1;\n            arrb[y]=1;\n            ans = (n-rows)*(n-cols);\n            printf(\"%I64d \", ans);\n        }\n        else if(arrb[y]==0)\n        {\n            rows++;\n            arrb[y]=1;\n            ans = (n-rows)*(n-cols);\n            printf(\"%%I64d \", ans);\n        }\n        else if(arra[x]==0)\n        {\n            cols++;\n            arra[x]=1;\n            ans = (n-rows)*(n-cols);\n            printf(\"%I64d \", ans);\n        }\n        else\n        {\n            ans = (n-rows)*(n-cols);\n            printf(\"%I64d \", ans);\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long n,m;\n    scanf(\"%I64d%I64d\", &n, &m);\n    int arra[n],arrb[n],i;\n    for(i=0;i<n;i++)\n    {\n        arra[i]=0;\n        arrb[i]=0;\n    }\n    int x,y;\n    long long rows = 0, cols = 0;\n    long long ans;\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d%d\", &x, &y);\n        x--;\n        y--;\n        if(arra[x]==0&&arrb[y]==0)\n        {\n            rows++;\n            cols++;\n            arra[x]=1;\n            arrb[y]=1;\n            ans = (n-rows)*(n-cols);\n            printf(\"%I64d \", ans);\n        }\n        else if(arrb[y]==0)\n        {\n            rows++;\n            arrb[y]=1;\n            ans = (n-rows)*(n-cols);\n            printf(\"%I64d \", ans);\n        }\n        else if(arra[x]==0)\n        {\n            cols++;\n            arra[x]=1;\n            ans = (n-rows)*(n-cols);\n            printf(\"%I64d \", ans);\n        }\n        else\n        {\n            ans = (n-rows)*(n-cols);\n            printf(\"%I64d \", ans);\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9589442815249267, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "91635a05f857ede34e1d03792bef0c8b", "bug_code_uid": "51cc82f4aaaf010259a0a3b86c0c60f1", "src_uid": "7bbb4b9f5eccfe13741445c815a4b1ca", "apr_id": "64c92aef3e41f833d6de453c10f08fd4", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint read() {\n\tint x = 0;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9') {\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9') {\n\t\tx = x * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn x;\n}\n\n\nint main() {\n\tint tests, n_hays,days;\n\tscanf(\"%d\", &tests);\n\tint result;\n\tint curr;\n\tfor(int i = 0; i < tests; i++) {\n\t\tresult = 0;\n\t\tn_hays = read();\n\t\tdays = read();\n\t\tfor (int j = 0; j < n_hays; j++) {\n\t\t\tcurr = read();\n\t\t\tif (j == 0) {\n\t\t\t\tresult = curr;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (curr && days) {\n\t\t\t\tif (curr * j > days) {\n\t\t\t\t\tresult += days/j;\n\t\t\t\t\tdays = 0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult += curr;\n\t\t\t\t\tdays -= curr*j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint read() {\n\tint x = 0;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9') {\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9') {\n\t\tx = x * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn x;\n}\n\n\nint main() {\n\tint tests, n_hays,days;\n\tscanf(\"%d\", &tests);\n\tint result;\n\tint curr;\n\tfor(int i = 0; i < tests; i++) {\n\t\tresult = 0;\n\t\tn_hays = read();\n\t\tdays = read();\n\t\tfor (int j = 0; j < n_hays; j++) {\n\t\t\tcurr = read();\n\t\t\tif (j == 0) {\n\t\t\t\tresult = curr;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (curr && days) {\n\t\t\t\tif (curr * j > days) {\n\t\t\t\t\tresult += days/j;\n\t\t\t\t\tdays = 0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult += curr;\n\t\t\t\t\tdays -= curr*j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", result);\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.16497175141242937, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "981f261d8ceb44a3265e3f9540883c87", "bug_code_uid": "1a53f762b9c66008d36a417986f9a570", "src_uid": "80a03e6d513f4051175cd5cd1dea33b4", "apr_id": "65494b76ba077df6b3a26ac116d9f98f", "difficulty": 1100, "tags": ["dp", "binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    long long int price[100000], m;\n    int n, q, i, j, count;\n    scanf(\"%d\", &n);\n\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%lld\", &price[i]);\n    }\n    scanf(\"%d\", &q);\n\n    for(i = 0; i < q; i++)\n    {\n        scanf(\"%lld\", &m);\n        count = 0;\n        for(j = 0; j < n; j++)\n        {\n            if(m >= price[j])\n            {\n                count ++;\n            }\n        }\n        printf(\"%d\\n\", count);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n, q, i, j, count[100001] = {0};\n    \n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &q);\n        count[q]++;\n    }\n    for(i = 1; i < 100001; i ++)\n    {\n        count[i] += count[i - 1];\n    }\n    scanf(\"%d\", &n);\n    while(n--)\n    {\n        scanf(\"%d\", &q);\n        printf(\"%d\\n\", count[q <= 100000 ? q : 100000]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9984544049459042, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ad53d7101bb78b134c820c519b79f781", "bug_code_uid": "db17c1fadfe5ede0df73aeb3d5c97618", "src_uid": "0eab9d2dd60d38f68d49f30cff918fce", "apr_id": "8e7e2d561e1e68d67dfb42cbee4974cb", "difficulty": 1100, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "/* C program for Merge Sort */\n#include <stdio.h> \n#include <stdlib.h> \nint main(){int t,i,n,m,j,k,l,f,g1[505][505],g2[505][505],g2j,g1k;\n scanf(\"%d\",&t);\n for(i=0;i<t;i++)\n {\n  scanf(\"%d%d\",&n,&m);\n  for(j=0;j<n;j++)\n  {\n   for(k=0;k<m;k++)\n   {\n    scanf(\"%d\",&g1[j][k]);\n    if(g1[j][k]==1)\n    {\n    g1k=k;\n   }\n  }}\n  for(j=0;j<m;j++)\n  {\n   for(k=0;k<n;k++)\n   {\n    scanf(\"%d\",&g2[j][k]);\n   }\n   if(g2[j][k]==1)\n    {g2j=j;\n   }\n  }\n  for(k=0;k<n;k++)\n  {\n   for(f=0;f<n;f++)\n   {\n    if(g1[f][g1k]==g2[g2j][k])\n    {\n     for(l=0;l<m;l++)\n     {\n      printf(\"%d \",g1[f][l]);\n     }\n     printf(\"\\n\");\n    }\n   }\n  }\n }\n return 0;\n}\n\n\n\n\n\n", "fixed": "/* C program for Merge Sort */\n#include <stdio.h> \n#include <stdlib.h> \nint main(){int t,i,n,m,j,k,l,f,g1[505][505],g2[505][505],g2j,g1k;\n scanf(\"%d\",&t);\n for(i=0;i<t;i++)\n {\n  scanf(\"%d%d\",&n,&m);\n  for(j=0;j<n;j++)\n  {\n   for(k=0;k<m;k++)\n   {\n    scanf(\"%d\",&g1[j][k]);\n    if(g1[j][k]==1)\n    {\n    g1k=k;\n   }\n  }}\n  for(j=0;j<m;j++)\n  {\n   for(k=0;k<n;k++)\n   {\n    scanf(\"%d\",&g2[j][k]);\n   \n   if(g2[j][k]==1)\n    {g2j=j;\n   }}\n  }\n  for(k=0;k<n;k++)\n  {\n   for(f=0;f<n;f++)\n   {\n    if(g1[f][g1k]==g2[g2j][k])\n    {\n     for(l=0;l<m;l++)\n     {\n      printf(\"%d \",g1[f][l]);\n     }\n     printf(\"\\n\");\n    }\n   }\n  }\n }\n return 0;\n}\n\n\n\n\n\n"}
{"similarity_score": 0.82744702320888, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "360171ae6a138555c875471562ea1a0e", "bug_code_uid": "933267db4d38d43230cf8b8273c60a31", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "9300c237298805b24d6cb0aad283db98", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int *p,*q,*set,n,i,j,k=0,sum_actual,sum_game=0,count;\n    scanf(\"%d\",&n);\n    p=(int*)malloc(n*sizeof(int));\n    q=(int*)malloc(n*sizeof(int));\n    set=(int*)malloc(n*sizeof(int));\n    for(i=0;i<n;i++)\n        set[i]=-1;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&p[i]);\n        count=0;\n        for(j=0;j<n;j++)\n            if(p[i]!=set[j])\n                count++;\n        if(count==n)\n        {\n            set[k++]=p[i];\n            sum_game+=p[i];\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        count=0;\n        scanf(\"%d\",&q[i]);\n        for(j=0;j<n;j++)\n        {\n            if(q[i]!=set[j])\n                count++;\n        }\n        if(count==n)\n        {\n            set[k++]=q[i];\n            sum_game+=q[i];\n        }   \n    }\n        \n    sum_actual=n*(n+1)/2;\n    if(sum_game==sum_actual)\n        printf(\"I become the guy\");\n    else\n        printf(\"Oh, my keyboard!\");\n    return 0;   \n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int *p,*q,*set,n,i,j,k=0,sum_actual,sum_game=0,count,x;\n    scanf(\"%d\",&n);\n    set=(int*)malloc(n*sizeof(int));\n    for(i=0;i<n;i++)\n        set[i]=-1;\n        \n    scanf(\"%d\",&x);\n    p=(int*)malloc(x*sizeof(int));\n    for(i=0;i<x;i++)\n    {\n        scanf(\"%d\",&p[i]);\n        count=0;\n        for(j=0;j<n;j++)\n            if(p[i]!=set[j])\n                count++;\n        if(count==n)\n        {\n            set[k++]=p[i];\n            sum_game+=p[i];\n        }\n    }\n    scanf(\"%d\",&x);\n    q=(int*)malloc(x*sizeof(int));\n    for(i=0;i<x;i++)\n    {\n        count=0;\n        scanf(\"%d\",&q[i]);\n        for(j=0;j<n;j++)\n        {\n            if(q[i]!=set[j])\n                count++;\n        }\n        if(count==n)\n        {\n            set[k++]=q[i];\n            sum_game+=q[i];\n        }   \n    }\n        \n    sum_actual=n*(n+1)/2;\n    if(sum_game==sum_actual)\n        printf(\"I become the guy.\");\n    else\n        printf(\"Oh, my keyboard!\");\n    return 0;   \n}"}
{"similarity_score": 0.9809045226130654, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c01b30db09577aa75675229ef7f9dcd3", "bug_code_uid": "e9feeb83b3563d3eaa55f843cca3a0f0", "src_uid": "91be5db48b44a44adff4c809ffbb8e3e", "apr_id": "5249d8e46e9d42036d7cd9e3f93a823a", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint dollars[100],cents[100];\nint main()\n{\n\tint i,val,n,s,max=0,flag=0;\n\tscanf(\"%d%d\",&n,&s);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&dollars[i],&cents[i]);\n\t\tif(dollars[i]<=s)\n\t\t{\n\t\t\tif(dollars[i]==s)\n\t\t\t{\n\t\t\t\tif(cents[i]==0)\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tval=0;\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tif(cents[i]==0)\n\t\t\t\t\tval=0;\n\t\t\t\telse\n\t\t\t\t\tval=100-cents[i];\n\t\t\t}\n\t\t\tif(max<val)\n\t\t\t\tmax=val;\n\t\t}\n\n\t}\n\tif(flag==1)\n\tprintf(\"%d\\n\",max);\n\telse\n\t\tprintf(\"-1\\n\");\n\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint dollars[100],cents[100];\nint main()\n{\n\tint i,val=0,n,s,max=0,flag=0;\n\tscanf(\"%d%d\",&n,&s);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&dollars[i],&cents[i]);\n\t\tif(dollars[i]<=s)\n\t\t{\n\t\t\tif(dollars[i]==s)\n\t\t\t{\n\t\t\t\tif(cents[i]==0)\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tval=0;\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tif(cents[i]==0)\n\t\t\t\t\tval=0;\n\t\t\t\telse\n\t\t\t\t\tval=100-cents[i];\n\t\t\t}\n\t\t\tif(flag==1)\n\t\t\t\tif(max<val)\n\t\t\t\t\tmax=val;\n\t\t}\n\n\t}\n\tif(flag==1)\n\tprintf(\"%d\\n\",max);\n\telse\n\t\tprintf(\"-1\\n\");\n\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9788273615635179, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "fb604b424fac64c3cefa5a2ef3e6ea63", "bug_code_uid": "889fe465e1d98c01c17f92d0c88b0c61", "src_uid": "3b3b2408609082fa5c3a0d55bb65d29a", "apr_id": "b3cd57302788ca04dc944f9977ad080c", "difficulty": 900, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    int n,i,c=0,s=0,c1=1;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&arr[i]);\n    for(i=0; i<n; i++)\n    {\n        if(arr[i]<0)\n            c++;\n    }\n    for(i=0; i<n; i++)\n    {\n        if(arr[i]< 0)\n            s= s +(-1-arr[i]);\n        else\n            s= s+ abs(arr[i]-1);\n    }\n    if(c%2)\n    {\n        for(i=0; i<n; i++)\n        {\n            if(arr[i]==0)\n            {\n                c1= 0;\n                break;\n            }\n        }\n        if(c1)\n            s= s+2;\n    }\n\n    printf(\"%d\",s);\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    long long int n,i,c=0,s=0,c1=1;\n    scanf(\"%lld\",&n);\n    long long int arr[n];\n    for(i=0; i<n; i++)\n        scanf(\"%lld\",&arr[i]);\n    for(i=0; i<n; i++)\n    {\n        if(arr[i]<0)\n            c++;\n    }\n    for(i=0; i<n; i++)\n    {\n        if(arr[i]< 0)\n            s= s +(-1-arr[i]);\n        else\n            s= s+ abs(arr[i]-1);\n    }\n    if(c%2)\n    {\n        for(i=0; i<n; i++)\n        {\n            if(arr[i]==0)\n            {\n                c1= 0;\n                break;\n            }\n        }\n        if(c1)\n            s= s+2;\n    }\n\n    printf(\"%lld\",s);\n}\n"}
{"similarity_score": 0.6820428336079077, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "01f682cd09cd2cbfe7ddc1799c605c55", "bug_code_uid": "c377e2c060cd48c0f26f30e8190692ec", "src_uid": "0816295355375a2d3f1cd45852b86360", "apr_id": "6de5fb402780db2e42598092c2be5925", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void){\n    long long int k,t,str,in,fr,ans;\n    scanf(\"%lld\",&t);\n    while(t--){\n        scanf(\"%lld %lld %lld\",&str,&in,&fr);\n        k=n-(str-in)/2;\n        ans=n-k;\n        if(k<=0){\n            ans=fr+1;\n        }\n        printf(\"%lld\\n\",ans);\n    }\n\n}", "fixed": "#include<stdio.h>\nint main(void){\n    long long int k,t,str,in,fr,ans;\n    scanf(\"%lld\",&t);\n    while(t--){\n        scanf(\"%lld %lld %lld\",&str,&in,&fr);\n        k=(fr-(str-in))/2;\n        ans=fr-k;\n        if((fr-(str-in))<0){\n            ans=fr+1;\n        }\n        if(ans<0)ans=0;\n        printf(\"%lld\\n\",ans);\n    }\n\n}"}
{"similarity_score": 0.6059171597633136, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "0b33197f3656c8136799b701dd065bfa", "bug_code_uid": "89c605965f786e68276dedff912531fc", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "18db6b827f191e7ec32ac29addb3c6bd", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a,x,y,i,cnt=0;\n        scanf(\"%d\",&a);\n\n        for(i=1;i<180;i++)\n        {\n            if(180%i==0)\n            {\n                x=(i-2)*180;\n                y=x/i;\n                //printf(\"%d\\n\",y);\n                if(a==y)\n                {\n                    cnt=1;\n                    break;\n                }\n            }\n        }\n        if(cnt)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a;\n        scanf(\"%d\",&a);\n\n        a=180-a;\n\n        if(360%a==0)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.715660542432196, "equal_cnt": 12, "replace_cnt": 3, "delete_cnt": 7, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "f949e150a07bd3621a6d747e469f390f", "bug_code_uid": "a8fb8253ad4bccacf3c24c9a09705840", "src_uid": "2bb893703cbffe9aeaa0bed02f42a05c", "apr_id": "0da42d316baf56e2b88b7714fc1b72ac", "difficulty": 1300, "tags": ["implementation", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdbool.h>\n\n#define MAX 100010\n#define clr(ar) memset(ar, 0, sizeof(ar))\n#define read() freopen(\"lol.txt\", \"r\", stdin)\n\nint n, ar[MAX];\n\nint main(){\n    int i, j, l, x, flag;\n\n    while (scanf(\"%d\", &n) != EOF){\n        l = -1;\n        for (i = 0; i < n; i++){\n            scanf(\"%d\", &x);\n            while ((x + 1) & 1) x >>= 1;\n            while ((x % 3) == 0) x /= 3;\n            if (l != -1 && l != x){\n                puts(\"No\");\n                break;\n            }\n            l = x;\n        }\n        if (i == n) puts(\"Yes\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdbool.h>\n\n#define MAX 100010\n#define clr(ar) memset(ar, 0, sizeof(ar))\n#define read() freopen(\"lol.txt\", \"r\", stdin)\n\nint n, ar[MAX];\n\nint main(){\n    int i, j, l, x, flag;\n\n    scanf(\"%d\", &n);\n    l = -1;\n    for (i = 0; i < n; i++){\n        scanf(\"%d\", &x);\n        while ((x + 1) & 1) x >>= 1;\n        while ((x % 3) == 0) x /= 3;\n        if (l != -1 && l != x){\n            puts(\"No\");\n            break;\n        }\n        l = x;\n    }\n    if (i == n) puts(\"Yes\");\n    return 0;\n}\n"}
{"similarity_score": 0.284434490481523, "equal_cnt": 15, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "3fa1422eb79d0b01ca04de152d70c6dc", "bug_code_uid": "5781dd0400406c8eb28a093bc12abe7c", "src_uid": "8fd51c391728b433cc94923820e908ff", "apr_id": "7274a176c8768314a7d8761ef616cc56", "difficulty": 1200, "tags": ["data structures", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char a[2000][100500];\n    long len,i,flag=1,t=0,y,cs=0,z;\n    scanf(\"%s\",a[0]);\n    len=strlen(a[0]);\n    while(flag)\n    {\n        flag=0;\n        y=0;\n        for(i=0;i<=len-1;i++)\n        {\n            if(a[t][i]==a[t][i+1]&&i<=len-2)\n            {\n                flag=1;\n                cs++;\n                i++;\n\n            }\n            else\n            {\n                a[t+1][y]=a[t][i];\n                y++;\n            }\n        }\n        t++;\n        len=strlen(a[t]);\n    }\n    if(cs%2)\n    printf(\"Yes\\n\");\n    else\n    printf(\"No\\n\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tchar a[1000005];\n\tint cs=0,i=0;\n\twhile(scanf(\"%c\",&a[i])!=EOF)\n\t{\n\t\tif(a[i]=='\\n')\n\t\tbreak;\n\t\tif(a[i-1]==a[i]&&i>0)\n\t\t{\n\t\t\ti=i-2;\n\t\t\tcs++;\n\t\t}\n\t\ti++;\n\t}\n\tif(cs%2)\n\tprintf(\"Yes\\n\");\n\telse\n\tprintf(\"No\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.30925221799746516, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "382a378d977e6d970dc3a9b3b2bb2eb6", "bug_code_uid": "2365c47f0a8c6cb99b888d41d19ac26a", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "01fb46e326e86b80694d931eb95a6709", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n\tint n, i, j, l;\n\tchar stri[100][100], stro[100][100];\n\tscanf(\"%d\", &n);\n\tfor(i=0; i<n; i++)\n\tscanf(\"%s\", stri[i]);\n\t\n\tfor(i=0; i<n; i++)\n\t{ l = strlen(stri[i]);\n\t  j = l-2;\n\t  stro[i][0]=stri[i][0];\n\t  stro[i][3]=stri[i][l-1];\n\t  stro[i][1]=j/10;\n\t  stro[i][2]=j%10;\n\t}\n\tfor(i=0; i<n; i++)\n\t{ l = strlen(stri[i]);\n\t  if(l<10)\n\t  printf(\"%s\\n\",stri[i]);\n\t  else\n\t  printf(\"%c%d%d%c\\n\",stro[i][0],stro[i][1],stro[i][2],stro[i][3]);\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n\tchar str[100][100];\n\tint i, n;\n\tscanf(\"%d\", &n);\n\t\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%s\", str[i]);\n\t\tint l;\n\t\tl = strlen(str[i]);\n\t\tif(l<=10)\n\t\tprintf(\"%s\\n\", str[i]);\n\t\telse\n\t\tprintf(\"%c%d%c\\n\",str[i][0], l-2, str[i][l-1]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.4447457627118644, "equal_cnt": 14, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "163698d1a500255a8fd99d17e24b2f46", "bug_code_uid": "a8b13caaf46248eddbfcf34caa781ea5", "src_uid": "531746ba8d93a76d5bdf4bab67d9ba19", "apr_id": "59340109415193b528126bc6cb192448", "difficulty": 1900, "tags": ["data structures", "constructive algorithms", "greedy", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n;\nint has[1000];\n\nint main() {\n  scanf(\"%d\", &n);\n  int yes = 1;\n  for (int i = 0; i < n - 1; i++) {\n    int u, v;\n    scanf(\"%d %d\", &u, &v);\n    has[u - 1]++;\n    if (v != n) yes = 0;\n  }\n  {\n    int i = n - 2;\n    while (i >= 0 && has[i]) {\n      i -= has[i];\n    }\n    if (i != 0) yes = 0;\n  }\n  if (!yes) {\n    puts(\"NO\");\n    return 0;\n  }\n  puts(\"YES\");\n  int i = 0;\n  while (i < n - 1) {\n    int j = i;\n    while (i < n - 1 && !has[i]) i++;\n    printf(\"%d %d\\n\", j + 1, n);\n    while (j < i) {\n      printf(\"%d %d\\n\", j + 1, j + 2);\n      j++;\n    }\n    i++;\n  }\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint n;\nint has[1000];\nint stk[1000], ptr;\nint us[1000], vs[1000], p;\n\nint main() {\n  scanf(\"%d\", &n);\n  int yes = 1;\n  for (int i = 0; i < n - 1; i++) {\n    int u, v;\n    scanf(\"%d %d\", &u, &v);\n    has[u - 1]++;\n    if (v != n) yes = 0;\n  }\n  if (!yes) {\n    puts(\"NO\");\n    return 0;\n  }\n  int i = 0;\n  for (int i = 0; i < n - 1; i++) {\n    if (!has[i]) {\n      stk[ptr++] = i;\n    } else {\n      int r = i;\n      while (ptr > 0 && has[i] >= 2) {\n        us[p] = r;\n        r = stk[--ptr];\n        vs[p] = r;\n        p++;\n        has[i]--;\n      }\n      us[p] = r;\n      vs[p] = n - 1;\n      p++;\n      if (has[i] != 1) {\n        puts(\"NO\");\n        return 0;\n      }\n    }\n  }\n  if (ptr > 0) {\n    puts(\"NO\");\n  } else {\n    puts(\"YES\");\n    for (int i = 0; i < p; i++) {\n      printf(\"%d %d\\n\", us[i] + 1, vs[i] + 1);\n    }\n  }\n  return 0;\n}"}
{"similarity_score": 0.8486646884272997, "equal_cnt": 12, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "ac65273e37282c22b743b8c5ffcb7a9e", "bug_code_uid": "6135332ab913c079e41c491ba1fd3f4f", "src_uid": "ec092209aa9f45409e5aa01d7fc784e1", "apr_id": "b70111950d57d4cfe2ae64ccb9a7a577", "difficulty": 1800, "tags": ["binary search", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define M 20010\n#define MAX(x,y) (x>(y)?x:(y))\n\nint a[M];\nint b[M];\nint p[M];\n\n\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d\",a+i);\n\t\tp[a[i]]=0;\n\t}\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d\",b+i);\n\t\tp[b[i]]=i;\n\t}\n\tint j,ans=0;\n\tif(p[1])\n\t{\n\t\tfor(i=2;p[i]==p[i-1]+1&&i<=n;i++);\n\t\tif(p[i-1]==n)\n\t\t{\n\t\t\tfor(j=i;j<=n&&p[j]<=j-i;j++);\n\t\t\tif(j>n)\n\t\t\t{\n\t\t\t\tprintf(\"%d\",n-i);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)ans=MAX(ans,p[i]+n-i);\n\tprintf(\"%d\",ans);\n\treturn 0;\n} \n", "fixed": "#include<stdio.h>\n#define M 200010\n#define MAX(x,y) (x>(y)?x:(y))\n\nint a[M];\nint b[M];\nint p[M];\n\n\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",a+i);\n\t\tp[a[i]]=0;\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",b+i);\n\t\tp[b[i]]=i;\n\t}\n\tint j,ans=0;\n\tif(p[1])\n\t{\n\t\tfor(i=2;p[i]==p[1]+i-1;i++);\n\t\tif(p[i-1]==n)\n\t\t{\n\t\t\tfor(j=i;j<=n&&p[j]<=j-i;j++);\n\t\t\tif(j>n)\n\t\t\t{\n\t\t\t\tprintf(\"%d\",1+n-i);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)ans=MAX(ans,1+p[i]+n-i);\n\tprintf(\"%d\",ans);\n\treturn 0;\n} \n"}
{"similarity_score": 0.5981554677206851, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "97d09f5d02220a1b401c4954a00fb915", "bug_code_uid": "6c1e8437185d462168b651c40784cf95", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "30118526387714b9034ae0df6b0fc59e", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint a,i=0,n,m,v,k;\nint x[100],y[100],z[100];\nscanf(\"%d\",&n);\nscanf(\"%d%d%d\",&x[0],&y[0],&z[0]);\nm=x[0];\nk=y[0];\nv=z[0];\nif(n==1){\nif(m==0 && v==0 && k==0){printf(\"yes\");}\nelse{printf(\"no\");}}\nelse{\ndo{\ni=i+1;\nscanf(\"%d%d%d\",&x[i],&y[i],&z[i]);\nm=m+x[i];\nk=k+y[i];\nv=v+z[i];}\n}while(i<n-1);\nif( m==0 && k==0 && v==0){printf(\"yes\");}\nelse{printf(\"no\");}}}", "fixed": "#include<stdio.h>\nint main(){\nint a,i=0,n,m,v,k;\nint x[100],y[100],z[100];\nscanf(\"%d\",&n);\nscanf(\"%d%d%d\",&x[0],&y[0],&z[0]);\nm=x[0];\nk=y[0];\nv=z[0];\nif(n==1){\nif(m==0 && v==0 && k==0){printf(\"YES\");}\nelse{printf(\"NO\");}}\nelse{\nfor(i=1;i<n;i++){\nscanf(\"%d%d%d\",&x[i],&y[i],&z[i]);\nm=m+x[i];\nk=k+y[i];\nv=v+z[i];\n}\nif( m==0 && k==0 && v==0){printf(\"YES\");}\nelse{printf(\"NO\");}}}"}
{"similarity_score": 0.9937369519832986, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "69c12c4b4dafcb3b75779e3f3274f624", "bug_code_uid": "110333f0cd5f1a65165ea65053626dc5", "src_uid": "f288d7dc8cfcf3c414232a1b1fcdff3e", "apr_id": "8573d705fabd74463db6a1a2b819b760", "difficulty": 1000, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define MAX 100000\nint Max(int a, int b)\n{\n\tif (a>b)\n\t\treturn a;\n\telse\n\t\treturn b;\n}\nint Equal(char s1[], char s2[])\n{\n\tint i, l;\n\tif (strlen(s1)!=strlen(s2))\n\t\treturn -1;\n\telse\n\t{\n\t\tfor (i=0, l=strlen(s1); i<l; i++)\n\t\t\tif (s1[i]!=s2[i])\n\t\t\t\treturn -1;\n\t\treturn 1;\t\t\t\n\t}\n}\nint main()\n{\n\tchar s1[MAX], s2[MAX];\n\tscanf(\"%s%s\", s1, s2);\n\tif (Equal(s1, s2)==1)\n\t\tprintf(\"-1\");\n\telse\n\t\tprintf(\"%d\", Max(strlen(s1), strlen(s2)));\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#define MAX 100000\nint Max(int a, int b)\n{\n\tif (a>b)\n\t\treturn a;\n\telse\n\t\treturn b;\n}\nint Equal(char s1[], char s2[])\n{\n\tint i, l;\n\tif (strlen(s1)!=strlen(s2))\n\t\treturn -1;\n\telse\n\t{\n\t\tfor (i=0, l=strlen(s1); i<l; i++)\n\t\t\tif (s1[i]!=s2[i])\n\t\t\t\treturn -1;\n\t\treturn 1;\t\t\t\n\t}\n}\nint main()\n{\t\n\tchar s1[MAX+1], s2[MAX+1];\n\tscanf(\"%s%s\", s1, s2);\t\n\tif (Equal(s1, s2)==1)\n\t\tprintf(\"-1\");\n\telse\n\t\tprintf(\"%d\", Max(strlen(s1), strlen(s2)));\t\n\treturn 0;\n}"}
{"similarity_score": 0.1831610044313146, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "d930647e231107bd3bf2923e2a6bf87d", "bug_code_uid": "8ba4b1cde88c76b24355b6c773ebcafc", "src_uid": "091e91352973b18040e2d57c46f2bf8a", "apr_id": "8bd408314268eab407d3193ef45b36ba", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int q,l,r,d,i,d1,ans;\n    scanf(\"%d\",&q);\n    for(i=1;i<=q;i++)\n    {scanf(\"%d %d %d\",&l,&r,&d);\n        int t=1;\nwhile(t<=10000000)\n{       d1=d*t;\n        if(d1>=l && d1<=r)\n        {t=t+1;}\n        else{ans=d1;\n        break;\n        }\n}\nprintf(\"%d\\n\",ans);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int q,a,b,c;\n    scanf(\"%d\", &q);\n    for(q; q>0; q=q-1){\n        scanf(\"%d %d %d\", &a, &b, &c);\n        if(c<a){\n            printf(\"%d\\n\", c);\n        }\n        else if(c>b){\n            printf(\"%d\\n\", c);\n        }\n        else{\n            c=(b/c+1)*c;\n            printf(\"%d\\n\", c);\n        }\n        \n}\n\n    return 0;\n}\n"}
{"similarity_score": 0.9597780859916782, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "9f17387a1057e1acaa2e41f175b9f239", "bug_code_uid": "6b48eaaceb6b51d0c119db346fd11ac9", "src_uid": "08c4d8db40a49184ad26c7d8098a8992", "apr_id": "b1f49b6420ecc60739f5f0baccf1c7cc", "difficulty": 1300, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint cmpfunc (const void * a, const void * b)\n{\n\treturn ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tint n,i,a[100005],count=0;\n\tlong long int wait=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tqsort(a,n,sizeof(int),cmpfunc);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(wait<=a[i])\n\t\t\tcount++;\n\t\twait+=a[i];\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint cmpfunc (const void * a, const void * b)\n{\n\treturn ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tint n,i,a[100005],count=0;\n\tlong long int wait=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tqsort(a,n,sizeof(int),cmpfunc);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(wait<=a[i])\n\t\t{\n\t\t\tcount++;\n\t\t\twait+=a[i];\n\t\t}\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9897142857142858, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c5218862eb24276d73e1ee37175a271b", "bug_code_uid": "5ea17d576c43242e53c32bdb9aabe134", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "ddde67b3c42674006cf80055de69645c", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint isprime(long long int n){\n\tint i;\n\tif(n==1) return 0;\n\tfor(i=2;i<n;i++){\n\t\tif(n%i==0)\n\t\t\treturn 0;\n\t}\n\treturn 1;\n}\nint main(){\n\tint n,i;\n\tlong long int A,j;\n\tdouble B;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%I64d\",&A);\n\t\tB=sqrt(A);\n\t//\tprintf(\"%lf\",B);\n\t\t\n\t\tif(B-(int)B==0){\n\t\t\tif(isprime(B))\tprintf(\"YES\\n\");\n\t\t\telse printf(\"NO\\n\");\t\t\n\t\t}\n\t\telse{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint isprime(long long int n){\n\tint i;\n\tif(n==1) return 0;\n\tfor(i=2;i<=sqrt(n);i++){\n\t\tif(n%i==0)\n\t\t\treturn 0;\n\t}\n\treturn 1;\n}\nint main(){\n\tint n,i;\n\tlong long int A,j;\n\tdouble B;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%I64d\",&A);\n\t\tB=sqrt(A);\n\t//\tprintf(\"%lf\",B);\n\t\t\n\t\tif(B-(int)B==0){\n\t\t\tif(isprime(B))\tprintf(\"YES\\n\");\n\t\t\telse printf(\"NO\\n\");\t\t\n\t\t}\n\t\telse{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9984591679506933, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0566fc845b3b7a71a3d402beb298c8ee", "bug_code_uid": "c277fe91c98dbc4801d43b5c98f8fc49", "src_uid": "d9e9c53b391eb44f469cc92fdcf3ea0a", "apr_id": "f25ccaf7838e9375e960c306c095ec99", "difficulty": 1000, "tags": ["constructive algorithms", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int n,i,j,hash[26],count=0;\n\tscanf(\"%I64d\",&n);\n\tchar c[n];\n\tfor(i=0;i<26;++i)\thash[i]=0;\n\tscanf(\"%s\",c);\n\tfor(i=0;i<n;++i)\n\t{\n\t\thash[c[i]-'a']++;\n\t}\n\tfor(i=0;i<26;++i)\n\t{\n\t\tif(hash[i]>1)\n\t\tcount=count+hash[i]-1;\n\t}\n\tif(n>=26&&count>0)\n\tprintf(\"-1\");\n\telse\n\tprintf(\"%I64d\",count);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int n,i,j,hash[26],count=0;\n\tscanf(\"%I64d\",&n);\n\tchar c[n];\n\tfor(i=0;i<26;++i)\thash[i]=0;\n\tscanf(\"%s\",c);\n\tfor(i=0;i<n;++i)\n\t{\n\t\thash[c[i]-'a']++;\n\t}\n\tfor(i=0;i<26;++i)\n\t{\n\t\tif(hash[i]>1)\n\t\tcount=count+hash[i]-1;\n\t}\n\tif(n>26&&count>0)\n\tprintf(\"-1\");\n\telse\n\tprintf(\"%I64d\",count);\n}\n"}
{"similarity_score": 0.8621673003802282, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "bccacd6b85da1e68ff04702e88122f2e", "bug_code_uid": "27ba504d9e619f236421ccff6ac2f374", "src_uid": "f9375003a3b64bab17176a05764c20e8", "apr_id": "d341a8ce4b2d133487ef86af873d770b", "difficulty": 1400, "tags": ["sortings", "math", "dfs and similar"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint check(long long a, long long b) {\n\treturn a * 2 == b || b * 3 == a;\n}\n\nint is_ok(long long *x, int n) {\n\tfor (int i = 1; i < n; i++)\n\t\tif (!check(x[i - 1], x[i]))\n\t\t\treturn 0;\n\n\treturn 1;\n}\n\nvoid sort(long long *numbers, int n) {\n\tfor (int i = 0; i < n; i++) {\n\t\tlong long tmp = numbers[i];\n\t\tint j = i;\n\n\t\twhile (j > 0 && !check(numbers[j - 1], tmp)) {\n\t\t\tnumbers[j] = numbers[j - 1];\n\t\t\tj--;\n\t\t}\n\n\t\tnumbers[j] = tmp;\n\t}\n}\n\nint main() {\n\tint n;\n\tlong long *numbers;\n\n\tscanf(\"%d\", &n);\n\n\tnumbers = (long long *) malloc(2 * n * sizeof(long long));\n\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%I64d\", &numbers[i]);\n\t\tnumbers[n + i] = numbers[i];\n\t}\n\n\tint index = 0;\n\n\twhile (!is_ok(numbers, n)) {\n\t\tlong long tmp = numbers[index];\n\t\tnumbers[index] = numbers[index + n];\n\n\t\tint i = 0;\n\t\twhile (i < n && numbers[i] != numbers[i + n])\n\t\t\ti++;\n\n\t\tnumbers[i] = tmp;\n\n\t\tsort(numbers, n);\n\n\t\tindex++;\n\t}\n\n\tfor (int i = 0; i < n; i++)\n\t\tprintf(\"%I64d \", numbers[i]);\n\n\tfree(numbers);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint check(long long a, long long b) {\n\treturn a * 2 == b || b * 3 == a;\n}\n\nint is_ok(long long *x, int n) {\n\tfor (int i = 1; i < n; i++)\n\t\tif (!check(x[i - 1], x[i]))\n\t\t\treturn 0;\n\n\treturn 1;\n}\n\nvoid sort(long long *numbers, int n) {\n\tfor (int i = 0; i < n; i++) {\n\t\tlong long tmp = numbers[i];\n\t\tint j = i;\n\n\t\twhile (j > 0 && !check(numbers[j - 1], tmp)) {\n\t\t\tnumbers[j] = numbers[j - 1];\n\t\t\tj--;\n\t\t}\n\n\t\tnumbers[j] = tmp;\n\t}\n}\n\nint main() {\n\tint n;\n\tlong long *numbers;\n\n\tscanf(\"%d\", &n);\n\n\tnumbers = (long long *) malloc(2 * n * sizeof(long long));\n\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%I64d\", &numbers[i]);\n\t\tnumbers[n + i] = numbers[i];\n\t}\n\n\tint index = 0;\n\n\twhile (!is_ok(numbers, n)) {\n\t\t/*for (int i = 0; i < n; i++)\n\t\t\tnumbers[i] = numbers[i + n];\n\n\t\tif (index > 0) {\n\t\t\tlong long tmp = numbers[index];\n\t\t\tnumbers[index] = numbers[0];\n\t\t\tnumbers[0] = tmp;\n\t\t}*/\n\n\t\tsort(numbers, n);\n\n\t\tindex++;\n\t\t//printf(\"index: %d\\n\", index);\n\t}\n\n\tfor (int i = 0; i < n; i++)\n\t\tprintf(\"%I64d \", numbers[i]);\n\n\tfree(numbers);\n\n\treturn 0;\n}"}
{"similarity_score": 0.9387069689336692, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "587babbdb27b7d031ecaccfc05096429", "bug_code_uid": "784c302da309a0eaf15a3a572a591bc6", "src_uid": "8fcec28fb4d165eb58f829c03e6b31d1", "apr_id": "1bc9a01414af9eaebc7ddae4b02a7a1a", "difficulty": 1500, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nlong long int power(long long int x, long long int n)\n{\n   long long int sum=1;\n    while(n--)\n        sum*=x;\n\n    return sum;\n}\n\nint main()\n{\n    long long int n1,n2,x,num=0,n=0,flag=0;\n    scanf(\"%I64d %I64d %I64d\",&n1,&n2,&x);\n\n   long long int m=n1;\n    while(m>0)\n    {\n        m=m/x;\n        n++;\n    }\n\n    n--;\n    while(num<=n2)\n    {\n        num=power(x,n);\n        n++;\n        if(num>=n1 && num<=n2)\n            {printf(\"%I64d \",num);\n\n            flag=1;\n            }\n    }\n\n    if(flag==0) printf(\"-1\\n\");\n\n\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n\nlong long int power(long long int x, long long int n)\n{\n   long long int sum=1;\n    while(n--)\n        sum*=x;\n\n    return sum;\n}\n\nint main()\n{\n    long long int n1,n2,x,num=0,n=0,flag=0,count=0,numx=0;\n    scanf(\"%I64d %I64d %I64d\",&n1,&n2,&x);\n\n   long long int m=n1;\n\n   long long up=n2;\n\n\n\n    while(m>0)\n    {\n        m=m/x;\n        n++;\n    }\n\n    n--;\n    while(num<=n2)\n    {\n\n        num=power(x,n);\n\n        n++;\n        if(num>=n1 && num<=n2)\n            {printf(\"%I64d \",num);\n\n            flag=1;\n            }\n\n        if(num>(n2/x)) break;\n    }\n\n   if(flag==0) printf(\"-1\\n\");\n\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.894649751792609, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "21d4c717dcf7a303260f646975b9034e", "bug_code_uid": "0ce39b57cec42c0a857648bb274d5f1b", "src_uid": "f3e413954c9c02520fd25bd2cba4747e", "apr_id": "0f8fc3793213cdd539bdf79d23731324", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nlong long power(long long a,long long b)\r\n{\r\n    long long ans=1,x=a;\r\n    while(b)\r\n    {\r\n        if(b&1)\r\n            ans=ans*x;\r\n        x=x*x;\r\n        b=b>>1;\r\n    }\r\n    return ans;\r\n}\r\nint main()\r\n{\r\n    int t,count,len;\r\n    long long n,x,a;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%lld\",&n);\r\n        x=n/2050;\r\n        if(x==0)\r\n        {\r\n            printf(\"-1\\n\");\r\n            continue;\r\n        }\r\n        count=0;\r\n        while(x)\r\n        {\r\n            len=0;\r\n            a=x;\r\n            while(a)\r\n            {\r\n                len++;\r\n                a/=10;\r\n            }\r\n            // printf(\"%lld %d \",x,len);\r\n            a=power(10,len-1);\r\n            // printf(\"%lld \",a);\r\n            count+=(x/a);\r\n            x%=a;\r\n            // printf(\"%lld %d\\n\",x,count);\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nlong long power(long long a,long long b)\r\n{\r\n    long long ans=1,x=a;\r\n    while(b)\r\n    {\r\n        if(b&1)\r\n            ans=ans*x;\r\n        x=x*x;\r\n        b=b>>1;\r\n    }\r\n    return ans;\r\n}\r\nint main()\r\n{\r\n    int t,count,len;\r\n    long long n,x,a;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%lld\",&n);\r\n        if((n%2050)!=0)\r\n        {\r\n            printf(\"-1\\n\");\r\n            continue;\r\n        }\r\n        x=n/2050;\r\n        count=0;\r\n        while(x)\r\n        {\r\n            len=0;\r\n            a=x;\r\n            while(a)\r\n            {\r\n                len++;\r\n                a/=10;\r\n            }\r\n            // printf(\"%lld %d \",x,len);\r\n            a=power(10,len-1);\r\n            // printf(\"%lld \",a);\r\n            count+=(x/a);\r\n            x%=a;\r\n            // printf(\"%lld %d\\n\",x,count);\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.11328671328671329, "equal_cnt": 17, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "f6f7b1dda30d440e41562acf2951bab3", "bug_code_uid": "03fdf82fcabb799f3687a841e8f11f4a", "src_uid": "2fa543c8b8f9dc500c36cf719800a6b0", "apr_id": "520165cce21c3a1253da762e3716754e", "difficulty": 1500, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,j;\n\tscanf(\"%d\",&n);\n\tchar s[n],t[n];\n\tint a[200000]={0},sum=0,left,right,flag=0;\n\tscanf(\"%s\",s);\n\tscanf(\"%s\",t);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]!=t[i])\n\t\t{\n\t\t\ta[i]=1;\n\t\t\tsum++;\n\t\t}\n\t}\n\tint temp=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=i+1;j<n;j++)\n\t\t{\n\t\t\tif(a[i]==1 && a[j]==1)\n\t\t\t{\n\t\t\t\tif( t[i]==s[j] && s[i]==t[j])\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tleft=i+1;\n\t\t\t\t\tright=j+1;\n\t\t\t\t\tif(temp==1)\n\t\t\t\t\t\tsum-=1;\n\t\t\t\t\telse\n\t\t\t\t\t\tsum-=2;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if((t[i]==s[j] || s[i]==t[j]) && (temp==0))\n\t\t\t\t{\n\t\t\t\t\tflag=2;\n\t\t\t\t\tleft=i+1;\n\t\t\t\t\tright=j+1;\n\t\t\t\t\tsum-=1;\n\t\t\t\t\ttemp=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag==1)\n\t\t\t\tbreak;\n\t\t}\n\t\tif(flag==1)\n\t\t\tbreak;\n\t}\n\tif(flag==0)\n\t{\n\t\tprintf(\"%d\\n-1 -1\\n\",sum);\n\t}\n\telse\n\t\tprintf(\"%d\\n%d %d\\n\",sum,left,right);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    char s[200001],t[200001];\n    int a[26][26],n,dis=0,p=0,q=0,i,j,k;\n    for (i=0;i<26;i++)\n\tfor (j=0;j<26;j++)\n\t    a[i][j]=0;\n    scanf(\"%d%s%s\",&n,s,t);\n    for (i=0;i<n;i++)\n    {\n\t\tif (s[i]!=t[i])\n\t\t{\n\t    \ta[s[i]-'a'][t[i]-'a']=i+1;\n\t    \tdis++;\n\t\t}\n\t}\n    for (i=0;i<26;i++)\n\tfor (j=0;j<26;j++)\n\t    if (a[i][j])\n\t\tif (a[j][i])\n\t\t{\n\t\t    printf(\"%d\\n%d %d\",dis-2,a[i][j],a[j][i]);\n\t\t    return 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t    for (k=0;k<26;k++)\n\t\t\tif ((a[k][i])&&(a[i][j]))\n\t\t\t{\n\t\t\t    p=a[i][j];\n\t\t\t    q=a[k][i];\n\t\t\t}\n\t\t}\n    if (p!=0)\n\t\tprintf(\"%d\\n%d %d\",dis-1,p,q);\n    else\n\t\tprintf(\"%d\\n-1 -1\\n\",dis);\n    return 0;\n}"}
{"similarity_score": 0.32493483927019984, "equal_cnt": 25, "replace_cnt": 15, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 24, "lang": "GNU C", "fix_code_uid": "cf4f5689dd31659c76b6029af9f014ba", "bug_code_uid": "1ae31db329b8a0c7bb4d2cde6af839b2", "src_uid": "88390110e4955c521867864a6f3042a0", "apr_id": "15434388b5e18d3cd6761a6d3a44e311", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,i,f=0,j;\n    scanf(\"%d\",&n);\n    long long a[n],b[n],s;\n    s=0;\n    for (i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    for (i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&b[i]);\n    }\n\n    for (i=0;i<n;i++)\n    {\n        s=s+a[i];\n    }\n\n    for (i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(b[i]+b[j]>=s){\n                f=1;\n                break;\n            }\n        }\n    }\n    if (f==1)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    int i;\n    long long tot = 0;\n    for (i = 1;i <= n;++i) {\n        int v;\n        scanf(\"%d\", &v);\n        tot += v;\n    }\n    int mmax=-1;\n    int max=-1;\n    for ( i = 1;i <= n;++i) {\n        int v;\n        scanf(\"%d\", &v);\n        if(v>mmax){\n            max = mmax;\n            mmax = v;\n        }\n        else if (v >= max) {\n            max = v;\n        }\n    }\n    if (tot > (mmax + max)) {\n        printf(\"NO\\n\");\n    }\n    else\n        printf(\"YES\\n\");\n//  system(\"pause\");\n    return 0;\n}\n"}
{"similarity_score": 0.9935622317596566, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d7306db08f6ad8f28a347dd901732c23", "bug_code_uid": "30b20d230204c82e9b9111a0e0863ac4", "src_uid": "b7aef95015e326307521fd59d4fccb64", "apr_id": "9a64a45f3d086cd4f79b2ebef8532838", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() \n{\n   \tint n,arr[100000],m,q[100000],t[100001],i,j;\n    \tlong long int v=0,p=0;\n    \tscanf(\"%d\",&n);\n       \tfor(i=0;i<n;i++)\n    \t    scanf(\"%d\",&arr[i]);    \t\n    \tscanf(\"%d\",&m);\n    \tfor(i=0;i<m;i++)\n    \t    scanf(\"%d\",&q[i]);    \t\n    \tt[0]=0;\n    \tfor(i=0;i<n;i++)\n    \t    t[arr[i]]=i;        \n        for(j=0;j<m;j++)\n            v=v+t[q[j]]+1;\n    \t    p=p+n-t[q[j]];\n        printf(\"%lld \",v);\n\tprintf(\"%lld\\n\",p);    \t\n}\n", "fixed": "#include <stdio.h>\nint main() \n{\n   \tint n,arr[100000],m,q[100000],t[100001],i,j;\n    \tlong long int v=0,p=0;\n    \tscanf(\"%d\",&n);\n       \tfor(i=0;i<n;i++)\n    \t    scanf(\"%d\",&arr[i]);    \t\n    \tscanf(\"%d\",&m);\n    \tfor(i=0;i<m;i++)\n    \t    scanf(\"%d\",&q[i]);    \t\n    \tt[0]=0;\n    \tfor(i=0;i<n;i++)\n    \t    t[arr[i]]=i;        \n        for(j=0;j<m;j++)\n\t{\n            v=v+t[q[j]]+1;\n    \t    p=p+n-t[q[j]];\n\t}\n        printf(\"%lld \",v);\n\tprintf(\"%lld\\n\",p);    \t\n}\n"}
{"similarity_score": 0.9627586206896551, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "072bae5ce412a878b3a1dfdbb559a4de", "bug_code_uid": "13a04d60b2ba6056e2f79207911548ce", "src_uid": "14fccd50d5dfb557dd53f2896ed844c3", "apr_id": "3ff45742cd62a26c7ac0276f5c113041", "difficulty": 800, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint t,a,b,c,d,e,f,k;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++)\n\t{\n\t\tscanf(\"%d %d %d\",&a,&b,&c);\n\t\td=c/2;\n\t\tk=b;\n\t\tif(d<=b&&d!=0)\n\t\t\tb=b-d;\n\t\telse if(d==0)\n\t\t\tb=b;\n\t\telse\n\t\t\tb=0;\n\t\te=b/2;\n\t\tif(e<=a&&k!=0)\n\t        f=3*(d+e);\n\t    else if(e>a&&k!=0)\n\t    \tf=3*d+3*a;\n\t    else\n\t    \tf=0;\n\t    printf(\"%d\\n\",f);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint t,a,b,c,d,e,f,k;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++)\n\t{\n\t\tscanf(\"%d %d %d\",&a,&b,&c);\n\t\td=c/2;\n\t\tk=b;\n\t\tif(d<=b&&d!=0)\n\t\t\tb=b-d;\n\t\telse if(d==0)\n\t\t\tb=b;\n\t\telse\n\t\t{\n\t\t\td=b;\n\t\t\tb=0;\n\t\t}\n\n\t\te=b/2;\n\t\tif(e<=a&&k!=0)\n\t        f=3*(d+e);\n\t    else if(e>a&&k!=0)\n\t    \tf=3*d+3*a;\n\t    else\n\t    \tf=0;\n\t    printf(\"%d\\n\",f);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9972781709308656, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "e37f2ae397fb61c6686033ec815b38dc", "bug_code_uid": "03de1ee3ac5166582361e4673d14c311", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "877b58a9a9d6415eb8dee5414e5619da", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\nint main()\n{\n long long int n,c0=0,c1=0;\n char  x[22000];\n int i;\n    scanf(\"%I64d\",&n);\n    if(n<10000)\n    {\n    for(i=0;i<n;i++)\n    {\n        scanf(\" %c\",&x[i]);\n        if(x[i]=='1')\n            c1++;\n        if(x[i]=='0')\n            c0++;\n    }\n    if(c1==c0)\n        printf(\"0\");\n    else if(c1>c0)\n        printf(\"%I64d\",c1-c0);\n    else\n        printf(\"%I64d\",c0-c1);\n}\n    if(n>=10000)\n    {\n    for(i=0;i<10000;i++)\n    {\n        scanf(\" %c\",&x[i]);\n        if(x[i]=='1')\n            c1++;\n        if(x[i]=='0')\n            c0++;\n    }\n            for(i=10000;i<n;i++)\n    {\n        scanf(\" %c\",&x[i]);\n        if(x[i]=='1')\n            c1++;\n        if(x[i]=='0')\n            c0++;\n    }\n    if(c1==c0)\n        printf(\"0\");\n    else if(c1>c0)\n        printf(\"%I64d\",c1-c0);\n    else\n        printf(\"%I64d\",c0-c1);\n    }\n    }\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\nint main()\n{\n long long int n,c0=0,c1=0;\n char  x[220000];\n int i;\n    scanf(\"%I64d\",&n);\n    if(n<100000)\n    {\n    for(i=0;i<n;i++)\n    {\n        scanf(\" %c\",&x[i]);\n        if(x[i]=='1')\n            c1++;\n        if(x[i]=='0')\n            c0++;\n    }\n    if(c1==c0)\n        printf(\"0\");\n    else if(c1>c0)\n        printf(\"%I64d\",c1-c0);\n    else\n        printf(\"%I64d\",c0-c1);\n}\n    if(n>=100000)\n    {\n    for(i=0;i<100000;i++)\n    {\n        scanf(\" %c\",&x[i]);\n        if(x[i]=='1')\n            c1++;\n        if(x[i]=='0')\n            c0++;\n    }\n            for(i=100000;i<n;i++)\n    {\n        scanf(\" %c\",&x[i]);\n        if(x[i]=='1')\n            c1++;\n        if(x[i]=='0')\n            c0++;\n    }\n    if(c1==c0)\n        printf(\"0\");\n    else if(c1>c0)\n        printf(\"%I64d\",c1-c0);\n    else\n        printf(\"%I64d\",c0-c1);\n    }\n    }\n"}
{"similarity_score": 0.45755395683453237, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "59996a924fd394d4be8d2808f599483c", "bug_code_uid": "62731ec3743ab5f60551a615bf31a9d3", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "5a50bee16d8ae24278ac0ecc06231ce4", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int T,a,b,n,S,i,j,c=0;\n    scanf(\"%lld\",&T);\n    while(T--)\n    {\n        scanf(\"%lld%lld%lld%lld\",&a,&b,&n,&S);\n        for(i=0;i<=a;i++)\n        {\n            for(j=0;j<=b;j++)\n            {\n                if(S==i*n+j)\n                c++;\n            }\n        }\n        if(c==0)\n        printf(\"NO\\n\");\n        else\n        printf(\"YES\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main() {\n    long long int T;\n    scanf(\"%lld\",&T);\n    while(T--)\n    {\n        long long int a,n,b,s;\n        scanf(\"%lld %lld %lld %lld\",&a,&b,&n,&s);\n        if(s%n<=b && a*n+b>=s)\n        puts(\"YES\");\n        else\n        puts(\"NO\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9368131868131868, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "93dcd49fe2ca98a1f22660b3c850b9f6", "bug_code_uid": "2801846c320cc2f27e1d2cbedbc3ccf7", "src_uid": "863a8124d46bb09b49fc88939fb5f364", "apr_id": "28747ff979e225b43713b6d759b6e0aa", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "    #include <stdio.h>\n\n    int main()\n     {\n         long long int x,y,z,l,a,b,k;\n    \tscanf(\"%d %d %d\",&x,&y,&z);\n    \tl=(x+y)/z;\n    \ta=x%z;\n    \tb=y%z;\n    \tif((a+b)>=z)\n        {\n            if(a>b)\n\n        {\n        k=z-a;\n        }\n        else\n        {\n        k=z-b;\n        }\n        }\n        printf(\"%d %d\\n\",l,k);\n    \treturn 0;\n    }\n", "fixed": "    #include <stdio.h>\n     \n    int main()\n     {\n         long long int x,y,z,l,a,b,k=0;\n    \tscanf(\"%I64d %I64d %I64d\",&x,&y,&z);\n    \tl=(x+y)/z;\n    \ta=x%z;\n    \tb=y%z;\n    \tif((a+b)>=z)\n        {\n            if(a>b)\n     \n        {\n        k=z-a;\n        }\n        else\n        {\n        k=z-b;\n        }\n        }\n        printf(\"%I64d %I64d\\n\",l,k);\n    \treturn 0;\n    }"}
{"similarity_score": 0.9606299212598425, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "4fda26e556d75095b9cb5df87994c56c", "bug_code_uid": "1ed610f2197642bd7f5b89d8e5ea0cb2", "src_uid": "03e5f71810b10318fed344878d226a10", "apr_id": "e143d27c71a3c35fc2a97d24ed38a869", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\nint solve(int a)\r\n{\r\n    int p;\r\n    int d=a;\r\n    int count=0;\r\n    while(d!=0){\r\n        d/=10;\r\n        count++;\r\n    }\r\n    int b[count];\r\n    int c=0;\r\n    int e=0;\r\n    while(a!=0){\r\n        b[count-e-1]=a%10;\r\n        a=a/10;\r\n        e++;\r\n    }\r\n    \r\n    for (int i=0; i<count; )\r\n    {\r\n        if((b[i]%2)!=0)\r\n        {\r\n            c++;\r\n        }\r\n        i++;\r\n    }\r\n    if(c==count){\r\n        p=-1;\r\n    }\r\n    else if (b[0]%2==0)\r\n    {\r\n        p=1;\r\n    }\r\n    else if(b[count-1]%2==0)\r\n    {\r\n        p=0;\r\n    }    \r\n    else{\r\n        p=2;\r\n    }\r\n    return p;\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int h[t];\r\n    int out[t];\r\n    for (int i=0; i<t; i++)\r\n    {\r\n        scanf(\"%d\", &h[i]);}\r\n    for (int i=0; i<t; i++){\r\n        out[i] = solve(h[i]);\r\n        printf(\"%d\\n\", out[i]);\r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\nint solve(int a)\r\n{\r\n    int p;\r\n    int d=a;\r\n    int count=0;\r\n    while(d!=0){\r\n        d/=10;\r\n        count++;\r\n    }\r\n    int b[count];\r\n    int c=0;\r\n    int e=0;\r\n    while(a!=0){\r\n        b[count-e-1]=a%10;\r\n        a=a/10;\r\n        e++;\r\n    }\r\n    \r\n    for (int i=0; i<count; )\r\n    {\r\n        if((b[i]%2)!=0)\r\n        {\r\n            c++;\r\n        }\r\n        i++;\r\n    }\r\n    if(c==count){\r\n        p=-1;\r\n    }\r\n    else if(b[count-1]%2==0)\r\n    {\r\n        p=0;\r\n    }  \r\n    else if (b[0]%2==0 && count!=1)\r\n    {\r\n        p=1;\r\n    } \r\n    else{\r\n        p=2;\r\n    }\r\n    return p;\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int h[t];\r\n    int out[t];\r\n    for (int i=0; i<t; i++)\r\n    {\r\n        scanf(\"%d\", &h[i]);}\r\n    for (int i=0; i<t; i++){\r\n        out[i] = solve(h[i]);\r\n        printf(\"%d\\n\", out[i]);\r\n    }\r\n    \r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.5707547169811321, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "65c836f09077d4ceee9639e3283a6919", "bug_code_uid": "5b4d3c42932fdf1c2594a25dd564cdd9", "src_uid": "591372383cf3624f69793c41370022de", "apr_id": "8c844d5dcfa152ce7580b00c35f5c824", "difficulty": 1000, "tags": ["greedy", "constructive algorithms", "math", "implementation", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n,i,cnt=0,a;\n        scanf(\"%d\",&n);\n        a=n;\n        printf(\"2\\n\");\n        for(i=n;cnt<n-2;i--){\n            cnt+=1;\n            if(cnt==2){\n                printf(\"%d %d\\n\",a,a);\n            }\n            \n            printf(\"%d %d\\n\",a,i-2);\n            a=(i+(i-2))/2;\n            if(n==3){\n               printf(\"%d %d\\n\",a,a); \n            }\n            \n            }\n        }\n    \n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n,i,a,b;\n        scanf(\"%d\",&n);\n        a=n;\n        b=n-1;\n        printf(\"2\\n\");\n        for(i=1;i<n;i++){\n           printf(\"%d %d\\n\",a,b);\n           a=(a+b+1)/2; //rounding up ke liye +1 6.2->7\n           b-=1;\n            }\n        }\n    \n\treturn 0;\n}"}
{"similarity_score": 0.9335604770017035, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f58e7974f9223b5abbe88370a34a63ed", "bug_code_uid": "b3292beb9f12481fdb9311ad7ba714c5", "src_uid": "840a4e16454290471faa5a27a3c795d9", "apr_id": "f49985ae11118654a02b9fa2b3b79130", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef unsigned long long int ll;\nint main()\n{\n\tll t;\n\tscanf(\"%llu\",&t);\n\tll x[1008];\n\tfor(ll i=0;i<t;i++)\n\t\tscanf(\"%llu\",&x[i]);\n\tfor(ll i=0;i<t;i++)\n\t{\n\t\tif(x[i]%14<=6 && x[i]%14>0)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\ntypedef unsigned long long int ll;\nint main()\n{\n\tll t;\n\tscanf(\"%llu\",&t);\n\tll x[1008];\n\tfor(ll i=0;i<t;i++)\n\t\tscanf(\"%llu\",&x[i]);\n\tfor(ll i=0;i<t;i++)\n\t{\n\t\tif(x[i]<=13)\n\t\t\tprintf(\"NO\\n\");\n\t\telse if(x[i]%14<=6 && x[i]%14>0)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9862475442043221, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "cc434b9082f74af50d4000474da96df4", "bug_code_uid": "d2cbe41b36596e57a73b8924c28e176d", "src_uid": "52f4f2a48063c9d0e412a5f78c873e6f", "apr_id": "94c34451b0c074f983423658f73ea4ce", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define MAX     111111\n\nint main() {\n    int n, result;\n    long sum = 0;\n    result = 1;\n\n    long nums[MAX] = {0};\n\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n        scanf(\"%ld\", &nums[i]);\n        sum += nums[i];\n    }\n\n\n    for (int i = 0; i < n; i++) {\n        if (sum - nums[i] < nums[i]) {\n            result = 0;\n            break;\n        }\n    }\n\n    if (result) {\n        printf((sum % 2 == 0) ? \"YES\\n\" : \"NO\\n\");\n    } else {\n        printf(\"NO\\n\");\n    }\n}", "fixed": "#include <stdio.h>\n\n#define MAX     111111\n\nint main() {\n    int n, result;\n    long long sum = 0;\n    result = 1;\n\n    long long nums[MAX] = {0};\n\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n        scanf(\"%I64d\", &nums[i]);\n        sum += nums[i];\n    }\n\n\n    for (int i = 0; i < n; i++) {\n        if (sum - nums[i] < nums[i]) {\n            result = 0;\n            break;\n        }\n    }\n\n    if (result) {\n        printf((sum % 2 == 0) ? \"YES\\n\" : \"NO\\n\");\n    } else {\n        printf(\"NO\\n\");\n    }\n}"}
{"similarity_score": 0.8072976054732041, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "4989748924b22c25cd104c7b84bbd5d2", "bug_code_uid": "25ec8ac3d05513bf1598d7b0f5f1c1bd", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "0e05ac9f3ffc4b30903f05f46f28c56a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int lst[2*n];\n    for(int i=0;i<2*n;i++)\n    {\n        scanf(\"%d\",&lst[i]);\n    }\n    int m=0;\n    for(int i=0;i<2*n;i=i+2)\n    {\n        m=m+lst[i];\n    }\n    int c=0;\n    for(int i=1;i<2*n;i=i+2)\n    {\n        c=c+lst[i];\n    }\n    if(m>c)\n        printf(\"Mishka\");\n    else if(m<c)\n        printf(\"Chris\");\n    else\n        printf(\"Friendship is magic!^^\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int lst[2*n];\n    for(int i=0;i<2*n;i++)\n    {\n        scanf(\"%d\",&lst[i]);\n    }\n    int m=0,c=0;\n    for(int i=1;i<(2*n);i=i+2)\n    {if(lst[i]>lst[i-1])\n        c=c+1;\n     else if(lst[i]<lst[i-1])\n        m=m+1;\n    }\n    if(m>c)\n        printf(\"Mishka\");\n    else if(m<c)\n        printf(\"Chris\");\n    else\n        printf(\"Friendship is magic!^^\");\n    return 0;\n}\n"}
{"similarity_score": 0.9962406015037594, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b45df8955ddb996896f58ab9cdac5f23", "bug_code_uid": "8228fed810bd6baccc87608551f74d14", "src_uid": "fbde1e2ee02055592ff72fb04366812b", "apr_id": "1fe8bced1ee744772e1ad1444323f2b8", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,i,j,x,y,count=0;\n    scanf(\"%d %d\",&n,&k);\n    int a[n];\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(k+a[i]<=5) \n        {\n            count++;\n        }\n    }\n    printf(\"%d\\\",count/3);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,i,j,x,y,count=0;\n    scanf(\"%d %d\",&n,&k);\n    int a[n];\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(k+a[i]<=5)\n        {\n            count++;\n        }\n    }\n    printf(\"%d\",count/3);\n    return 0;\n}"}
{"similarity_score": 0.8112798264642083, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "e3829d77d51ba0ff1b857ec0f126dd72", "bug_code_uid": "58a9af7e90c3b131789f9caf0f1b46af", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "69bce2ceb80bf7566e5cd674d1313c8c", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,j=0,n,t=0,s[n];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d \",&s[i]);\n\t\tif(s[i]==5)\n\t\t{\n\t\t\t\n\t\t\tt=t+1;\n\t\t\tif(t%9==0)\n\t\t\t{\n\t\t\t\tj=t;\n\t\t\t}\n\t\t}\n\t}\n\tif(j>0)\n\t{\n\t\tif(t!=n)\n\t\t{\n\t\t\tfor(i=0;i<j;i++)\n\t\t\t{\n\t\t\t\tprintf(\"5\");\n\t\t\t}\n\t\t\tfor(i=0;i<n-t;i++)\n\t\t\t{\n\t\t\t\tprintf(\"0\");\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(i=0;i<j;i++)\n\t\t\t{\n\t\t\t\tprintf(\"5\");\n\t\t\t}\t\n\t\t}\n\t}\n\tif(j=0)\n\t{\n\t\tif(t==n)\n\t\t{\n\t\t\tprintf(\"-1\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"0\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}", "fixed": "\n#include<stdio.h>\nint main()\n{\n\tint i,j=0,n,t=0,s;\n\tscanf(\"%d\",&n);\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d \",&s);\n\t\tif(s==5)\n\t\t{\n\t\t\t \n\t\t\tt=t+1;\n\t\t\tif(t%9==0)\n\t\t\t{\n\t\t\t\tj=t;\n\t\t\t}\n\t\t}\n\t\t \n\t} \n\t\n\tif(j>0)\n\t{\n\t\tif(t!=n)\n\t\t{\n\t\t\tfor(i=0;i<j;i++)\n\t\t\t{\n\t\t\t\tprintf(\"5\");\n\t\t\t}\n\t\t\tfor(i=0;i<n-t;i++)\n\t\t\t{\n\t\t\t\tprintf(\"0\");\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"-1\");\n\t\t}\n\t}\n\tif(j==0)\n\t{\n\t\tif(t==n)\n\t\t{\n\t\t\tprintf(\"-1\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"0\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.4302721088435374, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "04bf7ad8377dd8e3f23c415eeedf4a14", "bug_code_uid": "eb30282b51a8aa8e43989832d2b44e66", "src_uid": "0151a87d0f82a9044a0ac8731d369bb9", "apr_id": "632c98cb3d7bdecad7da61e99b86a25c", "difficulty": 1500, "tags": ["dp", "two pointers", "binary search", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "// Vasya and Strings\n// https://codeforces.com/problemset/problem/676/C\n#include <stdio.h>\n#include <string.h>\n\n\nint main() {\n\tint n=0, k=0;\n\n\n\tscanf(\"%i%i\", &n, &k);\n\tchar str[n];\n\tscanf(\"%s\", str);\n\n\n\tint l=0, aux=0; //\n\tchar letra='a';\n\tfor(l=0; l<n ;l++) {\n\t\tif(str[l] == 'b') {\n\t\t\t\n\t\t\taux++;\n\t\t\tif(aux > (int) n/2) {\n\t\t\t\tletra='b';\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\t}\n\n\n\taux=k;\n\tint cont=0, maior=0, gambiarra=0;\n\tfor(l=0; l<n ;l++) {\n\t\tcont++;\n\t\tif((str[l] != letra) && (k==0)) {\n\t\t\tif(cont > maior) maior = cont-1;\n\n\t\t\tcont=0;\n\t\t\tk=aux;\n\t\t\tl=gambiarra;\n\t\t}else if(str[l] != letra) {\n\t\t\tk--;\n\t\t\tgambiarra=l;\n\t\t}\n\t}\n\tif(cont > maior) maior = cont;\n\n\tprintf(\"%i\\n\", maior);\n\treturn 0;\n}", "fixed": "// Vasya and Strings\n// https://codeforces.com/problemset/problem/676/C\n#include <stdio.h>\n\n\nint main() {\n\tint n=0, k=0;\n\n\n\tscanf(\"%i%i\", &n, &k);\n\tchar str[n]; // \n\tscanf(\"%s\", str);\n\n\n\tint inicio=0, fim=0, cont[2]={0}, maior=0; //\n\tfor(fim=0; fim<n ;fim++) {\n\n\t\tcont[str[fim]-'a']++; //\n\t\tif((cont[0] <= k) || ((cont[1] <= k))) { //\n\n\t\t\tint aux = (fim-inicio)+1;\n\t\t\tif(aux > maior) maior = aux;\n\n\t\t}else { // \n\t\t\tcont[str[inicio]-'a']--;\n\t\t\tinicio++;\n\n\t\t}\n\t}\n\n\tprintf(\"%i\\n\", maior);\n\treturn 0;\n}"}
{"similarity_score": 0.9992277992277993, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "061db1680ea54c92c62f2c36658ca1e4", "bug_code_uid": "d6dfee2a115985dcd42b73d503a41f53", "src_uid": "b36d7f840abe998185a988fe8dd2ec75", "apr_id": "c90e9badba6e523d9941d518ef6c567c", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n       int n,x;\r\n       long long int min=0,max=0,sum=0;\r\n       scanf(\"%%d\",&n,&x);\r\n       int b[n];\r\n       for(int i=0;i<n;i++)\r\n       {\r\n           scanf(\"%d\",&b[i]);\r\n           sum=sum+b[i];\r\n           if(b[i]%x==0)\r\n           {\r\n               max=max+(b[i]/x);\r\n           }\r\n           else\r\n           {\r\n               max=max+(b[i]/x)+1 ;\r\n           }\r\n       }\r\n       if(sum%x==0)\r\n       {\r\n           min=sum/x;\r\n       }\r\n       else\r\n       {\r\n           min=(sum/x)+1;\r\n       }\r\n       printf(\"%lli %lli\\n\",min,max);\r\n\r\n\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n       int n,x;\r\n       long long int min=0,max=0,sum=0;\r\n       scanf(\"%d%d\",&n,&x);\r\n       int b[n];\r\n       for(int i=0;i<n;i++)\r\n       {\r\n           scanf(\"%d\",&b[i]);\r\n           sum=sum+b[i];\r\n           if(b[i]%x==0)\r\n           {\r\n               max=max+(b[i]/x);\r\n           }\r\n           else\r\n           {\r\n               max=max+(b[i]/x)+1 ;\r\n           }\r\n       }\r\n       if(sum%x==0)\r\n       {\r\n           min=sum/x;\r\n       }\r\n       else\r\n       {\r\n           min=(sum/x)+1;\r\n       }\r\n       printf(\"%lli %lli\\n\",min,max);\r\n\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.8092783505154639, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a288e9c98e092fba95c235b4d676abf5", "bug_code_uid": "626765d8858df0828ff04d6f3ecf02e6", "src_uid": "bc5fb5d6882b86d83e5c86f21d806a52", "apr_id": "59e40b608d74ead5f73d2703efe83f23", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,n,x,i=0,t,l,s;\n    scanf(\"%d\",&t);\n    while(i<t)\n    {\n    s=0;\n    scanf(\"%d%d%d%d\",&a,&b,&c,&n);\n    s=a+b+c+n;\n    if(a>b && a>c)\n        x=a;\n    if(b>c && b>a)\n        x=b;\n    if(c>b && c>a)\n        x=c;\n    n=n-((x-a)+(x-b)+(x-c));\n    if(n%3==0 && s/3>=x)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n    i++;\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,c,n,x,i=0,t,l,s;\n    scanf(\"%d\",&t);\n    while(i<t)\n    {\n    s=0;\n    scanf(\"%d%d%d%d\",&a,&b,&c,&n);\n    s=a+b+c+n;\n    if(a>=b && a>=c)\n        x=a;\n    if(b>=c && b>=a)\n        x=b;\n    if(c>=b && c>=a)\n        x=c;\n    n=n-((x-a)+(x-b)+(x-c));\n    if(n%3==0 && s/3>=x)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n    i++;\n    }\n}\n"}
{"similarity_score": 0.8627450980392157, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "dc7cc7e7ebdb707a0e58f4fb766e19c6", "bug_code_uid": "d11bc2895bd96ebbb6b74eb0355b187d", "src_uid": "bcf75978c9ef6202293773cf533afadf", "apr_id": "868b021fbfcbda4b07a0254f2edef00d", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\n#include <math.h>\n#include <string.h>\nint main()\n{\n\tchar s[100007],q[100007];\n\tlong long int i,len;\n\tgets(s);\n\tlen=strlen(s);\n\tfor(i=0;i<len;i++){\n\t\tq[len-i-1]=s[i];\n\t\tprintf(\"%c\",s[i]);\n\t}\n\tprintf(\"%s\",q);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <conio.h>\n#include <math.h>\n#include <string.h>\nint main()\n{\n\tchar s[100007],q[100007];\n\tlong long int i,len;\n\tgets(s);\n\tlen=strlen(s);\n\tfor(i=0;i<len;i++){\n\t\tq[len-i-1]=s[i];\n\t\tprintf(\"%c\",s[i]);\n\t}\n\tfor(i=0;i<len;i++){\n\t\tq[len-i-1]=s[i];\n\t\tprintf(\"%c\",q[i]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9184692179700499, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "418d80884c71bb090199c7aee94ef2b7", "bug_code_uid": "5baea16b73185b4c401d3abe8dd384bc", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "142a193480749ed1fc97aa681adbec19", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <malloc.h>\n#include <stdlib.h>\n\nlong long int cmpfunc (const void * a, const void * b)\n{\n   return ( *(long long int*)a - *(long long int*)b );\n}\n\nint main()\n{\n long long int n,i;\n scanf(\"%lld\",&n);\n long long int a[n];\n for(i=0;i<n;i++){scanf(\"%lld\",a+i);}\n qsort(a, n, sizeof(long long int), cmpfunc);\n long long int low = a[0], high = a[n-1];\n long long int diff = high - low;\n \n long long int x=0,y=0;\n for(i=0;i<n;i++)\n {\n     if(a[i]==low){x++;}\n     else if(a[i]==high){y++;}\n }\n printf(\"%lld %lld\",diff,x*y);\n \n return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <malloc.h>\n\nlong long int cmpfunc (const void * a, const void * b)\n{\n   return ( *(long long int*)a - *(long long int*)b );\n}\n\nint main()\n{\n long long int n,i;\n scanf(\"%lld\",&n);\n long long int a[n];\n for(i=0;i<n;i++){scanf(\"%lld\",a+i);}\n qsort(a, n, sizeof(long long int), cmpfunc);\n long long int low = a[0], high = a[n-1];\n long long int diff = high - low;\n\n long long int x=0,y=0,count;\n for(i=0;i<n;i++)\n {\n     if(a[i]==low){x++;}\n     else if(a[i]==high){y++;}\n }\n if(low==high){count = x*(x-1)/2;}\n else {count = x*y;}\n printf(\"%lld %lld\",diff,count);\n\n return 0;\n}\n"}
{"similarity_score": 0.9983164983164983, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "50f0427dfa25d690dfb2ffb767b4cd3b", "bug_code_uid": "48a171b40bf68b40192f831764f9ed29", "src_uid": "09c8db43681d7bc72f83287897a62f3c", "apr_id": "c552ed60e8a776f65c3a5a4d13e6483a", "difficulty": 1100, "tags": ["brute force", "greedy", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\t\tlong long int tc,p,q,n, i,j, x,m, k,r;\r\n       scanf(\"%lld\",&tc);\r\n       while(tc--)\r\n       {\r\n       \tlong long int s=0;\r\n       \tscanf(\"%lld%lld\",&n,&x);\r\n       \tint a[n];\r\n       \tfor(i=0;i<n;i++){\r\n       \t\tscanf(\"%d\",&a[i]);\r\n       \t\ts+=a[i];\r\n       \t}\r\n       \tk=x;\r\n       \tfor(i=0;i<=n;)\r\n       \t{\r\n       \t\tif(i==n){ k*=x; i=0; }\r\n       \t\telse if(a[i]%x) break;\r\n       \t\telse {\r\n       \t\t\ta[i]/=x;\r\n       \t\t\ts+=a[i]*k;\r\n       \t\t\r\n       \t\t\ti++;\r\n       \t\t}\r\n       \t}\r\n       \r\n       \tprintf(\"%lld\",s);\r\n       }\r\n\r\n\r\n\r\n\r\n\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\t\tlong long int tc,p,q,n, i,j, x,m, k,r;\r\n       scanf(\"%lld\",&tc);\r\n       while(tc--)\r\n       {\r\n       \tlong long int s=0;\r\n       \tscanf(\"%lld%lld\",&n,&x);\r\n       \tint a[n];\r\n       \tfor(i=0;i<n;i++){\r\n       \t\tscanf(\"%d\",&a[i]);\r\n       \t\ts+=a[i];\r\n       \t}\r\n       \tk=x;\r\n       \tfor(i=0;i<=n;)\r\n       \t{\r\n       \t\tif(i==n){ k*=x; i=0; }\r\n       \t\telse if(a[i]%x) break;\r\n       \t\telse {\r\n       \t\t\ta[i]/=x;\r\n       \t\t\ts+=a[i]*k;\r\n       \t\t\r\n       \t\t\ti++;\r\n       \t\t}\r\n       \t}\r\n       \r\n       \tprintf(\"%lld\\n\",s);\r\n       }\r\n\r\n\r\n\r\n\r\n\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9850746268656716, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "033987eaa4fd1f4ec8b8ff7ba080d18a", "bug_code_uid": "d80c5f7b3cfdfbd454630196fa356403", "src_uid": "dc9c2703aa7aaf1d254211cf06030329", "apr_id": "4a6a72044d4d569cb0cdfedaa08d7185", "difficulty": 1200, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define N 100000\n#define INF 0x3f3f3f3f\n\nint main() {\n\tstatic int ii[N], jj[N];\n\tint n, i, a, sum;\n\n\tscanf(\"%d\", &n);\n\tmemset(ii, -1, n * sizeof *ii);\n\tmemset(jj, -1, n * sizeof *jj);\n\tfor (i = 0; i < n * 2; i++) {\n\t\tscanf(\"%d\", &a), a--;\n\t\tif (ii[a] == -1)\n\t\t\tii[a] = i;\n\t\telse\n\t\t\tjj[a] = i;\n\t}\n\tsum = ii[0] + jj[0];\n\tfor (a = 1; a < n; a++)\n\t\tsum += abs(ii[a] - ii[a - 1]) + abs(jj[a] - jj[a - 1]);\n\tprintf(\"%d\\n\", sum);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define N 100000\n#define INF 0x3f3f3f3f\n\nint main() {\n\tstatic int ii[N], jj[N];\n\tint n, i, a;\n\tlong long sum;\n\n\tscanf(\"%d\", &n);\n\tmemset(ii, -1, n * sizeof *ii);\n\tmemset(jj, -1, n * sizeof *jj);\n\tfor (i = 0; i < n * 2; i++) {\n\t\tscanf(\"%d\", &a), a--;\n\t\tif (ii[a] == -1)\n\t\t\tii[a] = i;\n\t\telse\n\t\t\tjj[a] = i;\n\t}\n\tsum = ii[0] + jj[0];\n\tfor (a = 1; a < n; a++)\n\t\tsum += abs(ii[a] - ii[a - 1]) + abs(jj[a] - jj[a - 1]);\n\tprintf(\"%lld\\n\", sum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9340277777777778, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "eb5732e28ca6bcfbc82f4e02a71df995", "bug_code_uid": "944e6850b7f98883854d095b32b209c9", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "c98462a82b8f53672a3d0f7e00ee4aaf", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <ctype.h>\n\n// program by Mircea Rebengiuc\n// written for codeforces round 747D2\n// written on 2021.10.08\n\nint main(){\n  long long t, n, i;\n\n  for( scanf(\"%d\", &t) ; t-- ; ){\n    scanf(\"%lld\", &n);\n    printf(\"%lld %lld\\n\", -(n - 1) , n);\n  }\n  \n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <ctype.h>\n\n// program by Mircea Rebengiuc\n// written for codeforces round 747D2\n// written on 2021.10.08\n\nint main(){\n  int t;\n  long long n;\n\n  for( scanf(\"%d\", &t) ; t-- ; ){\n    scanf(\"%lld\", &n);\n    printf(\"%lld %lld\\n\", -(n - 1), n);\n  }\n  \n  return 0;\n}\n"}
{"similarity_score": 0.7973219720024346, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "d8ab2b986ca023532b7cc66c1e00d087", "bug_code_uid": "a371a96969b11fef308fa97a9dbb889a", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "230bc6e868def5812925d6769c675800", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)b - *(int*)a );\n}\n\nint main()\n{\n    int n,a[100],i,j,sum=0,sum1=0,k;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    qsort(a,n,sizeof(int),cmpfunc);\n    if(n==1)\n    {\n        printf(\"1\");\n    }\n    else\n    {\n        i=1;\n        while(sum<=sum1)\n        {\n            if(i<n)\n            {\n                sum=0;\n                sum1=0;\n                for(j=0;j<i;j++)\n                {\n                    sum=sum+a[j];\n                }\n            \n                for(k=i;k<n;k++)\n                {\n                    sum1=sum1+a[k];\n                }\n            }\n            i++;\n        }\n        printf(\"%d\",i+1);\n    }\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)b - *(int*)a );\n}\n\nint main()\n{\n    int n,a[100],i,j,sum=0,sum1=0,k;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    qsort(a,n,sizeof(int),cmpfunc);\n    if(n==1)\n    {\n        printf(\"1\");\n    }\n    else if(n==2)\n    {\n        if(a[0]>a[1])\n        {\n            printf(\"1\");\n        }\n        else\n        {\n            printf(\"2\");\n        }\n    }\n    else\n    {\n        i=1;\n        while(sum<=sum1&&i<n)\n        {\n            \n            sum=0;\n            sum1=0;\n            for(j=0;j<i;j++)\n            {\n                sum=sum+a[j];\n            }\n        \n            for(k=i;k<n;k++)\n            {\n                sum1=sum1+a[k];\n            }\n            \n            i++;\n        }\n        printf(\"%d\",i-1);\n\n    }\n}"}
{"similarity_score": 0.19499744767738642, "equal_cnt": 35, "replace_cnt": 15, "delete_cnt": 5, "insert_cnt": 15, "fix_ops_cnt": 35, "lang": "GNU C", "fix_code_uid": "0307321b8c6b06b9e092d259c646ace8", "bug_code_uid": "dc2af0a492484d85db488acc1dc6decd", "src_uid": "0dc5469831c1d5d34aa3b7b172e3237b", "apr_id": "dfd6ea4793dc034eaf23f92eee74364f", "difficulty": 1100, "tags": ["brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\nint n,m,k,i,j,c1=0;\n   int *c[1000];\n    for (i=0; i<1000; i++)\n    c[i] = (int *)malloc(1000 * sizeof(int));\n\nint *a = (int *) malloc( 1000*sizeof(int) );\n\nint *b = (int *) malloc( 1000*sizeof(int) );\nscanf(\"%d%d%d\",&n,&m,&k);\nfor(i=0;i<=n;i++)\n{\n    for(j=0;j<=m;j++)\n        c[i][j]=0;\n}\nfor(i=0;i<=n+1;i++)\n{\n    for(j=0;j<=m+1;j++)\n        c[i][j]=0;\n}\nfor(i=1;i<=k;i++)\n{\n    scanf(\"%d%d\",&a[i],&b[i]);\n}\nc[a[1]][b[1]]=1;\nc[a[2]][b[2]]=1;\nc[a[3]][b[3]]=1;\n\nfor(i=4;i<=k;i++)\n{\n   c[a[i]][b[i]]=1;\n   if( c[a[i]][b[i]+1]==1 && c[a[i]-1][b[i]]==1 && c[a[i]-1][b[i]+1]==1)\n   {\n   c1=1;\n   break;\n   }\n   if( c[a[i]][b[i]-1]==1 && c[a[i]-1][b[i]]==1 && c[a[i]-1][b[i]-1]==1)\n   {c1=1;break;}\n   if( c[a[i]][b[i]+1]==1 && c[a[i]+1][b[i]]==1 && c[a[i]+1][b[i]+1]==1)\n   {c1=1;break;}\n   if( c[a[i]][b[i]-1]==1 && c[a[i]+1][b[i]-1]==1 && c[a[i]+1][b[i]]==1)\n   {c1=1;break;}\n}\nif(c1==0)\n    printf(\"0\");\nelse\n    printf(\"%d\",i);\n\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long int n,m,k,i,j,row,col,ans;\n    scanf(\"%ld%ld%ld\",&n,&m,&k);\n    int color[n+2][m+2];\n    ans=0;\n   for(i=0;i<n+2;i++)\n   {\n       for(j=0;j<m+2;j++)\n        color[i][j]=0;\n   }\n\n    for(i=1;i<=k;i++)\n    {\n        scanf(\"%ld%ld\",&row,&col);\n        color[row][col]=1;      //1 means black color\n        if(color[row][col+1]==1 &&  color[row+1][col]==1 &&  color[row+1][col+1]==1)\n        {\n            ans=i;\n            break;\n        }\n        else if(color[row][col-1]==1 &&  color[row+1][col]==1 && color[row+1][col-1]==1)\n        {\n            ans=i;\n            break;\n        }\n        else if(color[row][col-1]==1 &&  color[row-1][col]==1 && color[row-1][col-1]==1)\n        {\n            ans=i;\n            break;\n        }\n        else if( color[row][col+1]==1 &&  color[row-1][col]==1&& color[row-1][col+1]==1)\n        {\n            ans=i;\n            break;\n        }\n    }\n    printf(\"%ld\",ans);\n    return 0;\n}\n\n"}
{"similarity_score": 0.8927973199329984, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0ce35b4e3dbf664b8a46035f1bdaea38", "bug_code_uid": "95d47a6f23596a2c137ce10e6c4a783a", "src_uid": "92bf30e66f4d5ddebb697d2fa4fa0689", "apr_id": "bf385fe8ad980159d50a14c752ac47f4", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\" %d\", &t);\n\tfor (int i=0;i<t;i++) {\n\t\tint b, p, f;\n\t\tscanf(\"%d %d %d\", &b, &p, &f);\n\t\tint h, c;\n\t\tscanf(\"%d %d\", &h, &c);\n\t\tb/=2;\n\t\tint sum=0;\n\t\tfor (;b!=0&&(p>0||f>0);) {\n\t\t\tif (h<c) {\n\t\t\t\tif (f>0) {\n\t\t\t\t\tsum+=c;\n\t\t\t\t\tb--;\n\t\t\t\t\tf--;\n\t\t\t\t}\n\t\t\t\telse if (p>0) {\n\t\t\t\t\tsum+=h;\n\t\t\t\t\tb--;\n\t\t\t\t\tp--;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (h>c) {\n\t\t\t\tif (p>0) {\n\t\t\t\t\tsum+=h;\n\t\t\t\t\tb--;\n\t\t\t\t\tp--;\n\t\t\t\t}\n\t\t\t\telse if (f>0) {\n\t\t\t\t\tsum+=c;\n\t\t\t\t\tb--;\n\t\t\t\t\tf--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", sum);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\" %d\", &t);\n\tfor (int i=0;i<t;i++) {\n\t\tint b, p, f;\n\t\tscanf(\"%d %d %d\", &b, &p, &f);\n\t\tint h, c;\n\t\tscanf(\"%d %d\", &h, &c);\n\t\tb/=2;\n\t\tint sum=0;\n\t\tfor (;b!=0&&(p>0||f>0);) {\n\t\t\tif (h<c) {\n\t\t\t\tif (f>0) {\n\t\t\t\t\tsum+=c;\n\t\t\t\t\tb--;\n\t\t\t\t\tf--;\n\t\t\t\t}\n\t\t\t\telse if (p>0) {\n\t\t\t\t\tsum+=h;\n\t\t\t\t\tb--;\n\t\t\t\t\tp--;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (h>c) {\n\t\t\t\tif (p>0) {\n\t\t\t\t\tsum+=h;\n\t\t\t\t\tb--;\n\t\t\t\t\tp--;\n\t\t\t\t}\n\t\t\t\telse if (f>0) {\n\t\t\t\t\tsum+=c;\n\t\t\t\t\tb--;\n\t\t\t\t\tf--;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (p>0) {\n\t\t\t\t\tsum+=h;\n\t\t\t\t\tb--;\n\t\t\t\t\tp--;\n\t\t\t\t}\n\t\t\t\telse if (f>0) {\n\t\t\t\t\tsum+=h;\n\t\t\t\t\tb--;\n\t\t\t\t\tf--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", sum);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.5753424657534246, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "6ff6333b3d2f567b663d7082f33c2d30", "bug_code_uid": "5cbdb0ee7d2148f3b5441f49e9e9f766", "src_uid": "c34db7897f051b0de2f49f2696c6ee2f", "apr_id": "1a2add49406c28dfc6c4e3efe407ef52", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    long i, j, k;\n    long  l, m, r=0;\n    scanf(\"%d\", &n);\n    for(i = 0; i<n; i++)\n    {\n        scanf(\"%ld %ld\", &l, &m);\n        for(j = m; j>=l; j--)\n        {\n            for(k = j; k>=l; k--)\n            {\n                if (j%k>r)\n                {\n                    r = j%k;\n                }\n            }\n        }\n        printf(\"%ld\\n\", r);\n        r = 0;\n    }\n    \n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n, i;\n    long  l, m, r=0;\n    scanf(\"%d\", &n);\n    for(i = 0; i<n; i++)\n    {\n        scanf(\"%ld %ld\", &l, &m);\n        if(m/2>=l)\n        {\n        r = (m%(m/2+1));\n        }\n        else r = m%l;\n        \n        printf(\"%ld\\n\", r);\n        r = 0;\n    }\n    \n}\n"}
{"similarity_score": 0.6396123561477892, "equal_cnt": 17, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 8, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "819d9344ba73017ed6a96f762e7bc231", "bug_code_uid": "b6d647267454d8d57b52d170bf2d87ff", "src_uid": "eee23388aa7cda50302fc4da6e50e172", "apr_id": "2b23ec3f1caf517ce116e5743fb657c0", "difficulty": 800, "tags": ["2-sat", "constructive algorithms", "greedy", "string suffix structures", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<string.h>\r\nint main() {\r\n    int t,i,n,m,x;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n            scanf(\"%d %d\",&n,&m);\r\n            int arr[n];\r\n            char s[m];\r\n            for(i=0;i<m;i++)\r\n                s[i] = 'B';\r\n            for(i=0;i<n;i++)\r\n                scanf(\"%d\",&arr[i]);\r\n            for(i=0;i<n;i++){\r\n                x = m-arr[i];\r\n                if(arr[i]<x&&s[arr[i]-1]!='A')\r\n                    s[arr[i]-1] = 'A';\r\n                else if(arr[i>=x]&&s[x]=='A')\r\n                    s[arr[i]-1] = 'A';\r\n                else\r\n                    s[x] = 'A';\r\n            }\r\n            for(i=0;i<m;i++)\r\n        printf(\"%c\",s[i]);\r\n        printf(\"\\n\");\r\n    }\r\n       return 0;\r\n    }\r\n", "fixed": "#include <stdio.h>\r\n#include<string.h>\r\nint main() {\r\n    int t,i,n,m,x,max,min;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n            scanf(\"%d %d\",&n,&m);\r\n            int arr[n+1];\r\n            char s[m+1];\r\n            for(i=1;i<=m;i++)\r\n                s[i] = 'B';\r\n            for(i=1;i<=n;i++)\r\n                scanf(\"%d\",&arr[i]);\r\n            for(i=1;i<=n;i++){\r\n                x = m+1-arr[i];\r\n                if(x>arr[i]){\r\n                    max = x;\r\n                    min = arr[i];\r\n                }\r\n                else\r\n                {\r\n                    max = arr[i];\r\n                    min = x;\r\n                }\r\n                if(s[min]=='B')\r\n                    s[min] = 'A';\r\n                else\r\n                    s[max] = 'A';\r\n            }\r\n            for(i=1;i<=m;i++)\r\n        printf(\"%c\",s[i]);\r\n        printf(\"\\n\");\r\n    }\r\n       return 0;\r\n    }\r\n"}
{"similarity_score": 0.5375170532060027, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "4148095e8db71bba88933537e06ae4fb", "bug_code_uid": "ebf6ce70830d80fd54a7df7bb2213104", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "b63f6cd0741e6f236b281565c6df96de", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint i;\n\tchar arr[100002];\n\tscanf(\"%s\",arr);\n\ti=0;\n\twhile(arr[i]!='\\0')\n\t{if(arr[i]=='0')\n\t{arr[i]='a'; break;}\n\ti++;\n\t}\n\t\n//\tprintf(\"%s\",arr);\n\ti=0;\n\twhile(arr[i]!='\\0')\n\t{\n\t    if(arr[i]!='a')\n\t     printf(\"%c\",arr[i]);\n\t    i++;\n\t}\n\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint i,l;\n\tchar arr[100002];\n\tscanf(\"%s\",arr);\n\ti=0;\n\tl=strlen(arr);\n\t\n    for(i=0;i<l;i++)\n\t{\n\t    if(arr[i]=='0')\n\t{\n\t    arr[i]='a'; \n\t    break;\n\t    \n\t}\n\t\n\t}\n\t\nif(i<l){\n    for(i=0;i<l;i++)\n\t{\n\t    if(arr[i]!='a')\n\t     printf(\"%c\",arr[i]);\n\t   \n\t}\n}\nelse {\n    for(i=0;i<l-1;i++)\n\t{\n\t    if(arr[i]!='a')\n\t     printf(\"%c\",arr[i]);\n\t   \n\t}\n}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.6270150083379655, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "5f6e323b5d96cbd0683d1e89695562c3", "bug_code_uid": "1d85bb73c5bbabe7caed9f52f4b5a165", "src_uid": "5c33d1f970bcc2ffaea61d5407b877b2", "apr_id": "bafc57bc82e1d9d5c57a1be9463c5b03", "difficulty": 1100, "tags": ["sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nint n, len[111], num, max;\nchar *inp[111];\nint substr(char *a, char *b)\n{\n    int aln=strlen(a), bln=strlen(b), i, j, k;\n    for (i=0; i<=bln-aln; i++)\n    {\n        for (j=0, k=i; j<aln; j++, k++) if (a[j]!=b[k]) break;\n        if (j==aln) return 1;\n    }\n    return 0;\n}\nint comp (const void *a, const void *b)\n{\n    return (*(int *)a - *(int *)b);\n}\nint main()\n{\n    scanf(\"%d%*c\", &n);\n    for (int i=1; i<=n; i++) inp[i]=(char *) malloc(sizeof(char)*111);\n    for (int i=1; i<=n; i++)\n    {\n        scanf(\"%s%*c\", inp[i]);\n        int ln=strlen(inp[i]);\n        len[i]=ln;\n        if (ln>max) {max=ln; num=i;}\n    }\n    for (int i=1; i<=n; i++) if (!substr(inp[i], inp[num])) {printf(\"NO\"); return 0;}\n    printf(\"YES\\n\");\n    qsort(len, n+1, sizeof(int), comp);\n    for (int i=1; i<=n; i++) for (int j=1; j<=n; j++) if (strlen(inp[j])==len[i]) {printf(\"%s\\n\", inp[j]); break;}\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint n;\nchar *inp[111];\nint substr(char *a, char *b)\n{\n    int aln=strlen(a), bln=strlen(b), i, j, k;\n    for (i=0; i<=bln-aln; i++)\n    {\n        for (j=0, k=i; j<aln; j++, k++) if (a[j]!=b[k]) break;\n        if (j==aln) return 1;\n    }\n    return 0;\n}\nint comp(const void *a, const void *b)\n{\n    const char *aa=*(const char **)a, *bb=*(const char **)b;\n    int aln=strlen(aa), bln=strlen(bb);\n    return (aln<bln?-1:(aln>bln?1:0));\n}\nint main()\n{\n    scanf(\"%d%*c\", &n);\n    for (int i=0; i<n; i++) inp[i]=(char *) malloc(sizeof(char)*111);\n    for (int i=0; i<n; i++) scanf(\"%s%*c\", inp[i]);\n    qsort(inp, n, sizeof(char *), comp);\n    for (int i=1; i<n; i++) if (!substr(inp[i-1], inp[i])) {printf(\"NO\"); return 0;}\n    printf(\"YES\\n\");\n    for (int i=0; i<n; i++) printf(\"%s\\n\", inp[i]);\n}\n"}
{"similarity_score": 0.7364016736401674, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "ce9306aa966ddc588e3ebd0d6aaaa819", "bug_code_uid": "1b640888ca556b784d493493e47a578d", "src_uid": "614aa068ce74090b6577006c45e549cf", "apr_id": "9714857824d7ad20cabab1970d2245b7", "difficulty": null, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\ntypedef long long ll;\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define max(l,r) ((l)>(r)?(l):(r))\n#define min(l,r) ((l)<(r)?(l):(r))\n#define chmax(l,r) (l=max(l,(r)))\n#define chmin(l,r) (l=min(l,(r)))\nconst ll MOD = 1000000007;\nconst int INF = (1 << 30);      // > 10^9\n\n\nint main(){\n    int t; scanf(\"%d\", &t);\n    while(t--){\n        int ans = 0;\n        int n; scanf(\"%d\", &n);\n        \n        while(n > 1) {\n            for(ll i = 2; i*i <= n; i++) {\n                if (n%i == 0) {\n                    n = i;\n                    ans++;\n                    break;\n                }\n            }\n            if(n != 1) {\n                n--;\n                ans++;\n            }\n        }\n        \n\n\n\n        printf(\"%d\\n\", ans);\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\ntypedef long long ll;\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define max(l,r) ((l)>(r)?(l):(r))\n#define min(l,r) ((l)<(r)?(l):(r))\n#define chmax(l,r) (l=max(l,(r)))\n#define chmin(l,r) (l=min(l,(r)))\nconst ll MOD = 1000000007;\nconst int INF = (1 << 30);      // > 10^9\n\n\nint main(){\n    int t; scanf(\"%d\", &t);\n    while(t--){\n        int ans = 0;\n        int n; scanf(\"%d\", &n);\n        \n        if (n%2 == 0) {\n            ans = (n == 2? 1 : 2);\n        } else {\n            ans = (n == 1? 0 : (n == 3 ? 2 : 3 ));\n        }\n\n        printf(\"%d\\n\", ans);\n    }\n}\n"}
{"similarity_score": 0.6476323119777159, "equal_cnt": 19, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 19, "lang": "GNU C", "fix_code_uid": "6a785c8fe4f0b2932cca9920cdcdd143", "bug_code_uid": "1c7a88a952b25161087c1a2941bdc7bc", "src_uid": "d43d4fd6c1e2722da185f34d902ace97", "apr_id": "4ed0b56cc0b2dcdd4d680c76bdf536a8", "difficulty": 1600, "tags": ["dp", "constructive algorithms", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MAX 1000000\nint main()\n{\nfloat a;\n\nint arr[MAX];\narr[0]=0;\na=0;\nint n=1;\nint q=1; \nscanf(\"%d\", &q);\nwhile (q-->0)\n        {\n\t\tint t;\n\t\tscanf(\"%d\", &t);\n\t\tif ( t==1)\n\t\t\t{\n\t\t\t\tint x,y;\n\t\t\t\tscanf(\"%d\", &y);\n\t\t\t\tscanf(\"%d\", &x);\n\t\t\t\ta= ((float)a*(float)n+(float)x*(float)y)/(float)n;\n\t\t\t\tint m=0;\n\t\t\t\tfor(m=0; m<y; m++)\n\t\t\t\tarr[m]+=x;\n\n\t\t\t} \n\t\telse if( t==2)\n\t\t\t{\n\t\t\t\tint k;\n\t\t\t\tscanf(\"%d\", &k);\n\t\t\t\tarr[n]=k;\n\t\t\t\ta= (float)(a*(float)n +(float) arr[n])/(float)(n+1);\n\t\t\t\tn++;\n\t\t\t}\n\n\t\telse \n\t\t\t{\n\t\t\t\tn--;\n\t\t\t\ta= (a*(float)(n+1)- (float)arr[n])/(float)n;\n\t\t\t}\n\t\tprintf(\"%f\\n\",a); \n        }\nreturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#define MAX 1000000\ntypedef  long double ld;\nint hash[MAX];\nint main()\n{\nld a;\n\nint arr[MAX];\narr[0]=0;\na=0;\nint n=1;\nint q=1; \n\n\nscanf(\"%d\", &q);\nwhile (q-->0)\n        {\n\t\tint t;\n\t\tscanf(\"%d\", &t);\n\t\tif ( t==1)\n\t\t\t{\n\t\t\t\tint x,y;\n\t\t\t\tscanf(\"%d\", &y);\n\t\t\t\tscanf(\"%d\", &x);\n\t\t\t\ta= ((ld)a*(ld)n+(ld)x*(ld)y)/(ld)n;\n\t\t\t\tint m=0;\n\t\t\t\t//for(m=0; m<y; m++)\n\t\t\t\t//arr[m]+=x;\n\t\t\t\thash[y]+=x;\n\n\t\t\t} \n\t\telse if( t==2)\n\t\t\t{\n\t\t\t\tint k;\n\t\t\t\tscanf(\"%d\", &k);\n\t\t\t\tarr[n]=k;\n\t\t\t\ta= (ld)(a*(ld)n +(ld) arr[n])/(ld)(n+1);\n\t\t\t\tn++;\n\t\t\t}\n\n\t\telse \n\t\t\t{\n\t\t\t\tif(hash[n]==0)\n\t\t\t\t{\n\t\t\t\tn--;\n\t\t\t\ta= (a*(ld)(n+1)- (ld)arr[n])/(ld)n;\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tn--;\n\t\t\t\t\ta= (a*(ld)(n+1)- (ld)arr[n]-hash[n+1])/(ld)n;\n\t\t\t\t\thash[n]+=hash[n+1];\n\t\t\t\t\thash[n+1]=0;\n\n\t\t\t\t}\n\t\t\t}\n\t\tprintf(\"%f\\n\",(float)a); \n        }\nreturn 0;\n}\n\n"}
{"similarity_score": 0.7895424836601307, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "3ec0aa6abee95dd43703c1ce910b3057", "bug_code_uid": "1f4e14ca782e2a987bce56f763a5504d", "src_uid": "1eaff8e0ec4614753699128af74b2471", "apr_id": "3378c35add7ec29a23758e2ca263b5f3", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    while (t-- > 0) {\n        int n;\n        scanf(\"%d\", &n);\n        int a[200];\n        for (int i = 0; i < n; i++) {\n            scanf(\"%d\", &a[i]);\n        }\n        printf(\"%d\", a[n - 1]);\n        for (int i = 1; i < n - 1; i++) {\n            printf(\" %d\", a[i]);\n        }\n        printf(\" %d\\n\", a[0]);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    while (t-- > 0) {\n        int n;\n        scanf(\"%d\", &n);\n        int a[200];\n        for (int i = 0; i < n; i++) {\n            scanf(\"%d\", &a[i]);\n        }\n        for (int i = 0; i < n - 1; i++) {\n            printf(\"%d \", a[n - i - 1]);\n        }\n        printf(\"%d\\n\", a[0]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9159159159159159, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6929685c647568b1fdb9c1b3e1197de5", "bug_code_uid": "6a246ce9777ef41db85507a0d348f9c7", "src_uid": "c569b47cf80dfa98a7105e246c3c1e01", "apr_id": "2e83d091e82197529ed78b076ea7c6d7", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h> \r\n\r\nint main(){\r\n\tint T;\r\n\tscanf(\"%d\", &T);\r\n\tchar s[50];\r\n\twhile(T>0) { \r\n\t      char c;\r\n\t\tscanf(\"%s%c\", s, &c);\r\n\t\tint flat=0, i;\r\n\t\tfor(i=0; i<strlen(s); i=i+2) { \r\n\t\t\tif(s[i]==c) {\r\n\t\t\t\tflat=1; \r\n\t\t\t}\r\n\t\t} \r\n\t\tif(flat==0) printf(\"NO\\n\"); else printf(\"YES\\n\");  \t\t\r\n\t\tT--; \r\n\t}  \r\n\treturn 0; \r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h> \r\n\r\nint main(){\r\n\tint T;\r\n\tscanf(\"%d\", &T);\r\n\twhile(T>0) { \r\n\t      char s[50],c;\r\n\t\tscanf(\"%s %c\", s,&c);\r\n\t\tint flat=0, i;\r\n\t\tfor(i=0; i<strlen(s); i=i+2) { \r\n\t\t\tif(s[i]==c) {\r\n\t\t\t\tflat=1; \r\n\t\t\t}\r\n\t\t} \r\n\t\tif(flat==0) printf(\"NO\\n\"); else printf(\"YES\\n\");  \t\t\r\n\t\tT--; \r\n\t}  \r\n\treturn 0; \r\n}"}
{"similarity_score": 0.9672386895475819, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c8bcd76c9075fa2135c3468b7303b756", "bug_code_uid": "a9d021a623751913b1e5876521900649", "src_uid": "c7a5b4a015e28dd3759569bbdc130e93", "apr_id": "910d1505f38365fb3a1a04460ba28c01", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main(void)\r\n{\r\n\r\n\tint n;\r\n\tchar str[6];\r\n \tint i;\r\n\r\n\tn = 0;\r\n\ti = 0;\r\n\tscanf(\"%i\", &n);\r\n\r\n\twhile (i < n)\r\n\t{\r\n\t\tprintf(\"%i\\n\",i);\r\n\t\tscanf(\"%s\", str);\r\n\t\tif ( (str[0] + str[1] + str[2]) == (str[3] + str[4] + str[5]))\r\n\t\t\tprintf(\"%s\\n\",\"yes\");\r\n\t\telse\r\n\t\t\tprintf(\"%s\\n\", \"no\");\r\n\t\ti++;\r\n\t}\r\n\treturn(0);\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main(void)\r\n{\r\n\r\n\tint n;\r\n\tchar str[6];\r\n \tint i;\r\n\r\n\tn = 0;\r\n\ti = 0;\r\n\tscanf(\"%i\", &n);\r\n\r\n\twhile (i < n)\r\n\t{\r\n\t\tscanf(\"%s\", str);\r\n\t\tif ( (str[0] + str[1] + str[2]) == (str[3] + str[4] + str[5]))\r\n\t\t\tprintf(\"%s\\n\",\"yes\");\r\n\t\telse\r\n\t\t\tprintf(\"%s\\n\", \"no\");\r\n\t\ti++;\r\n\t}\r\n\treturn(0);\r\n}"}
{"similarity_score": 0.5611510791366906, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "904f5a0a35643a5d23318f3b1354edab", "bug_code_uid": "a03d5fac3cbcfa7b47a9615f93ad26c4", "src_uid": "ebd4411d03bbce51e2b53064146644d4", "apr_id": "133058d5e1845b1eceafd3174d6965ec", "difficulty": 1900, "tags": ["constructive algorithms", "sortings", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tint n;\n\tint i, j, k;\n\tint a[1003];\n\tint ans[2003], l;\n\tint cnt[1003];\n\tfor (; t > 0; t--)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tfor (i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &a[i]);\n\t\tl = 0;\n\t\tfor (i = 0; i <= n; i++)\n\t\t\tcnt[i] = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tcnt[a[i]]++;\n\t\tk = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t{\n\t\t\tif (a[i] != i)\n\t\t\t{\n\t\t\t\tfor (j = 0; j < n; j++)\n\t\t\t\t{\n\t\t\t\t\tif (a[j] == i)\n\t\t\t\t\t{\n\t\t\t\t\t\twhile (cnt[k] > 0)\n\t\t\t\t\t\t\tk++;\n\t\t\t\t\t\tans[l] = j + 1;\n\t\t\t\t\t\tl++;\n\t\t\t\t\t\tcnt[i]--;\n\t\t\t\t\t\ta[j] = k;\n\t\t\t\t\t\tcnt[k]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tans[l] = i + 1;\n\t\t\t\tl++;\n\t\t\t\tcnt[a[i]]--;\n\t\t\t\ta[i] = i;\n\t\t\t\tcnt[i]++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", l);\n\t\tif (l > 0)\n\t\t{\n\t\t\tfor (i = 0; i < l - 1; i++)\n\t\t\t\tprintf(\"%d \", ans[i]);\n\t\t\tprintf(\"%d\\n\", ans[l - 1]);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tint n;\n\tint i, j, k;\n\tint a[1003];\n\tint ans[2003];\n\tint cnt[1003];\n\tint l, r;\n\tfor (; t > 0; t--)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tfor (i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &a[i]);\n\t\tk = 0;\n\t\tfor (i = 0; i <= n; i++)\n\t\t\tcnt[i] = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tcnt[a[i]]++;\n\t\tl = 0;\n\t\tr = n - 1;\n\t\twhile (a[l] == l)\n\t\t\tl++;\n\t\twhile (a[r] == r + 1)\n\t\t\tr--;\n\t\twhile (l <= r)\n\t\t{\n\t\t\tj = 0;\n\t\t\twhile (cnt[j] > 0)\n\t\t\t\tj++;\n\t\t\tif (j == l)\n\t\t\t{\n\t\t\t\tans[k] = j + 1;\n\t\t\t\tk++;\n\t\t\t\tcnt[a[j]]--;\n\t\t\t\ta[j] = j;\n\t\t\t\tcnt[j]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tans[k] = j;\n\t\t\t\tk++;\n\t\t\t\tcnt[a[j - 1]]--;\n\t\t\t\ta[j - 1] = j;\n\t\t\t\tcnt[j]++;\n\t\t\t}\n\t\t\twhile (a[l] == l)\n\t\t\t\tl++;\n\t\t\twhile (a[r] == r + 1)\n\t\t\t\tr--;\n\t\t}\n\t\tprintf(\"%d\\n\", k);\n\t\tif (k > 0)\n\t\t{\n\t\t\tfor (i = 0; i < k - 1; i++)\n\t\t\t\tprintf(\"%d \", ans[i]);\n\t\t\tprintf(\"%d\\n\", ans[k - 1]);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8345864661654135, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "951efa6ec0eef1f34a8b0f9ca29a5e2e", "bug_code_uid": "1f914eb98e501438ef150b8bc211c29e", "src_uid": "0646a23b550eefea7347cef831d1c69d", "apr_id": "1c47a23c42349f71f0d778e753c2c52e", "difficulty": 1600, "tags": ["dp", "two pointers", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint k[27][1501];\nchar s[1501];\nint main()\n{\n\tint n,cat;\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\", s);\n\tmemset(k, 0, sizeof(k));\n\tfor(int i=0;i<=25;i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t{\n\t\t\tint num = 0,cost = 0;\n\t\t\tfor (int m = j; m <= n; m++)\n\t\t\t{\n\t\t\t\tif (s[m] == 'a' + i)\n\t\t\t\t\tnum++;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnum++;\n\t\t\t\t\tcost++;\n\t\t\t\t}\n\t\t\t\tif (k[i][cost] < num)\n\t\t\t\t\tk[i][cost] = num;\n\t\t\t}\n\t\t}\n\tscanf(\"%d\", &cat);\n\tfor (int i = 1; i <= cat; i++)\n\t{\n\t\tint cost;\n\t\tchar c;\n\t\tscanf(\"%d %c\", &cost, &c);\n\t\tprintf(\"%d\\n\", k[c - 'a'][cost]);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint k[27][1501];\nchar s[1501];\nint main()\n{\n\tint n,cat;\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\", s);\n\tmemset(k, 0, sizeof(k));\n\tfor(int i=0;i<=25;i++)\n\t{\n\t\tint num = 0, cost = 0;\n\t\tfor (int j = 1; j <= n; j++)\n\t\t{\n\t\t\tnum = 0, cost = 0;\n\t\t\tfor (int m = j - 1; m < n; m++)\n\t\t\t{\n\t\t\t\tif (s[m] == 'a' + i)\n\t\t\t\t\tnum++;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnum++;\n\t\t\t\t\tcost++;\n\t\t\t\t}\n\t\t\t\tif (k[i][cost] < num)\n\t\t\t\t{\n\t\t\t\t\tk[i][cost] = num;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int m = cost + 1; m <= n; m++)\n\t\t\t{\n\t\t\t\tif(k[i][m]<k[i][m-1])\n\t\t\t\tk[i][m] = k[i][m - 1];\n\t\t\t}\n\t\t}\n\t\t}\n\tscanf(\"%d\", &cat);\n\tfor (int i = 1; i <= cat; i++)\n\t{\n\t\tint cost;\n\t\tchar c;\n\t\tscanf(\"%d %c\", &cost, &c);\n\t\tprintf(\"%d\\n\", k[c - 'a'][cost]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.3634298693923907, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5d630db99727103d039922eca55a49e7", "bug_code_uid": "8e13988ee89e7c1e7af1d4b33d835888", "src_uid": "bed2d2e4a33bf133f7e9d5ebc1557c3e", "apr_id": "6945d986c9d9c9d031806a3975348271", "difficulty": 1800, "tags": ["bitmasks", "dfs and similar", "divide and conquer", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\n#define N\t100000\r\n#define L\t30\r\n\r\nint solve(int *aa, int *bb, int n, int l) {\r\n\tint n1, n2, i, j, tmp;\r\n\r\n\tif (l < 0)\r\n\t\treturn 0;\r\n\tfor (i = 0, j = 0; j < n; j++)\r\n\t\tif ((aa[j] & 1 << l) == 0) {\r\n\t\t\ttmp = aa[i], aa[i] = aa[j], aa[j] = tmp;\r\n\t\t\ti++;\r\n\t\t}\r\n\tn1 = i;\r\n\tfor (i = 0, j = 0; j < n; j++)\r\n\t\tif ((bb[j] & 1 << l) != 0) {\r\n\t\t\ttmp = bb[i], bb[i] = bb[j], bb[j] = tmp;\r\n\t\t\ti++;\r\n\t\t}\r\n\tn2 = i;\r\n\treturn n1 != n2 ? solve(aa, bb, n, l - 1) : (solve(aa, bb, n1, l - 1) & solve(aa + n1, bb + n1, n - n1, l - 1)) | 1 << l;\r\n}\r\n\r\nint main() {\r\n\tint t;\r\n\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tstatic int aa[N], bb[N];\r\n\t\tint n, i;\r\n\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor (i = 0; i < n; i++)\r\n\t\t\tscanf(\"%d\", &aa[i]);\r\n\t\tfor (i = 0; i < n; i++)\r\n\t\t\tscanf(\"%d\", &bb[i]);\r\n\t\tprintf(\"%d\\n\", solve(aa, bb, n, L - 1));\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\n#define N\t100000\r\n#define L\t30\r\n\r\nint main() {\r\n\tint t;\r\n\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tstatic int aa[N], bb[N];\r\n\t\tint n, g, g1, g2, h, i, j, l, b, yes, tmp;\r\n\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor (i = 0; i < n; i++)\r\n\t\t\tscanf(\"%d\", &aa[i]);\r\n\t\tfor (i = 0; i < n; i++)\r\n\t\t\tscanf(\"%d\", &bb[i]);\r\n\t\tb = 0;\r\n\t\tfor (l = L - 1; l >= 0; l--) {\r\n\t\t\tyes = 1;\r\n\t\t\tfor (i = 0; i < n; i = j) {\r\n\t\t\t\tj = i + 1;\r\n\t\t\t\twhile (j < n && (aa[i] & b) == (aa[j] & b))\r\n\t\t\t\t\tj++;\r\n\t\t\t\tfor (g = i, h = i; h < j; h++)\r\n\t\t\t\t\tif ((aa[h] & 1 << l) == 0) {\r\n\t\t\t\t\t\ttmp = aa[g], aa[g] = aa[h], aa[h] = tmp;\r\n\t\t\t\t\t\tg++;\r\n\t\t\t\t\t}\r\n\t\t\t\tg1 = g;\r\n\t\t\t\tfor (g = i, h = i; h < j; h++)\r\n\t\t\t\t\tif ((bb[h] & 1 << l) != 0) {\r\n\t\t\t\t\t\ttmp = bb[g], bb[g] = bb[h], bb[h] = tmp;\r\n\t\t\t\t\t\tg++;\r\n\t\t\t\t\t}\r\n\t\t\t\tg2 = g;\r\n\t\t\t\tif (g1 != g2) {\r\n\t\t\t\t\tyes = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (yes)\r\n\t\t\t\tb |= 1 << l;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", b);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.7064160725858717, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "0289cbc70f1e24a8bf512df3d7ffd77d", "bug_code_uid": "d43d30d2ce08975f591be3415e097951", "src_uid": "91c3af92731cd7d406674598c0dcbbbc", "apr_id": "1286be7fb766d79cef603b7a6c5631e3", "difficulty": 1900, "tags": ["dp", "greedy", "constructive algorithms", "sortings", "data structures", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main() {\n\tchar s[1000001];\n\tgets(s);\n\tint n=strlen(s);\n\tint a[n],b[n];\n\tint i,j;\n\tfor( i=0;i<n;i++)\n\t{\n\t\ta[i]=0;\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint k=0;\n\t\tfor(j=i;j<n;j++)\n\t\t{\n\t\t\t\n\t\t\tif(s[j]=='(') k++;\n\t\t\telse k--;\n\t\t\tif(k<0) {i=j;break;}\n\t\t\ta[i]++;\n\t\t\tif(j==n-1)\n\t\t\t{\n\t\t\t\tint h;\n\t\t\t\tfor(h=n-1;h>=i;h--)\n\t\t\t\t{\n\t\t\t\t\tif(s[h]=='(') k--;\n\t\t\t\t\telse k++;\n\t\t\t\t\tif(k==0) {a[i]=h-i;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\tint max=0;\n\tint dem=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(max<a[i]) max=a[i];\n\t}\n\tif(max==0) printf(\"0 1\");\n\telse \n\t{\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(max==a[i]) dem++;\n\t}\n\tprintf(\"%d %d\",max,dem);}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main() {\n\tchar s[1000001];\n\tgets(s);\n\tint n=strlen(s);\n\tint a[n],b[n];\n\tint i,j;\n\tfor( i=0;i<n;i++)\n\t{\n\t\ta[i]=0;b[i]=0;\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\twhile(s[i]==')' && i<n) {i++;}\n\t\tint k=0;\n\t\tfor(j=i;j<n;j++)\n\t\t{\n\t\t\t\n\t\t\tif(s[j]=='(') k++;\n\t\t\telse k--;\n\t\t\tif(k<0) {i=j;break;}\n\t\t\ta[i]++;\n\t\t\tif(k==0) b[i]=a[i];\n\t\t\tif(j==n-1)\n\t\t\t{\n\t\t\t\tif(k>0){\n\t\t\t\ta[i]=0;\n\t\t\t\tfor(int x=n-1;x>=i;x--)\n\t\t\t\t{\n\t\t\t\t\twhile(s[x]=='(') {x--;} \n\t\t\t\t\tint z=0;\n\t\t\t\t\tfor(int y=x;y>=i;y--)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(s[y]==')') z++;\n\t\t\t\t\t\telse z--;\n\t\t\t\t\t\tif(z<0) {x=y;break;}\n\t\t\t\t\t\ta[x]++;\n\t\t\t\t\t\tif(z==0) b[x]=a[x];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti=n;}\n\t\t\t\telse i=n;\n\t\t\t}\n\t\t}\n\t}\n\tint max=0;\n\tint dem=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(max<b[i]) max=b[i];\n\t}\n\tif(max==0) printf(\"0 1\");\n\telse \n\t{\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(max==b[i]) dem++;\n\t}\n\tprintf(\"%d %d\",max,dem);}\n\treturn 0;\n}"}
{"similarity_score": 0.863941427699817, "equal_cnt": 11, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "a7b659faf340d74b1863b1e5fc58bc64", "bug_code_uid": "d793a832647ccf251aa6f0644680f055", "src_uid": "41b3e726b8146dc733244ee8415383c0", "apr_id": "7c31da88a3c85a5cd6e62cb94bd274bd", "difficulty": 1500, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint max(int a,int b)\n{\n    if(a>b)\n        return a;\n    else\n        return b;\n}\nint main()\n{\n    int arr[100001];\n    int val[100001];\n    int dp[100001];\n    int n;\n    scanf(\"%d\",&n);\n    int i;\n    for(i=0;i<100001;i++)\n        val[i]=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n        val[arr[i]]++;\n    }\n    int len=0;\n    for(i=0;i<100001;i++)\n    {\n        if(val[i]!=0)\n        {\n            arr[len]=i;\n            len++;\n        }\n    }\n    dp[0]=0;\n    dp[1]=arr[0]*val[arr[0]];\n\n    for(i=2;i<=len;i++)\n    {\n        if(arr[i-1]==arr[i-2]+1)\n            dp[i]=max(dp[i-1], arr[i-1]*val[arr[i-1]] + dp[i-2]);\n        else\n            dp[i]=arr[i-1]*val[arr[i-1]] + dp[i-1];\n    }\n    printf(\"%d\\n\",dp[len]);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int max(long long int a,long long int b)\n{\n    if(a>b)\n        return a;\n    else\n        return b;\n}\nlong long int arr[100001];\n    long long int val[100001];\n    long long int dp[100001];\nint main()\n{\n\n    long long int n;\n    scanf(\"%lld\",&n);\n    long long int i;\n    for(i=0;i<100001;i++)\n        val[i]=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&arr[i]);\n        val[arr[i]]++;\n    }\n    long long int len=0;\n    for(i=0;i<100001;i++)\n    {\n        if(val[i]!=0)\n        {\n            arr[len]=i;\n            len++;\n        }\n    }\n    dp[0]=0;\n    dp[1]=arr[0]*val[arr[0]];\n\n    for(i=2;i<=len;i++)\n    {\n        if(arr[i-1]==arr[i-2]+1)\n            dp[i]=max(dp[i-1], arr[i-1]*val[arr[i-1]] + dp[i-2]);\n        else\n            dp[i]=arr[i-1]*val[arr[i-1]] + dp[i-1];\n    }\n    printf(\"%lld\\n\",dp[len]);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9729155602761551, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3c242efafdc98c08f040c4bc29e16de8", "bug_code_uid": "3f78aebbb849de6c0c13cde5c5343dbb", "src_uid": "d15a758cfdd7a627822fe8be7db4f60b", "apr_id": "01e8524cd88e4aa2393d28885104d06e", "difficulty": 1600, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n\n#define ll long long int\n\nint sf(const void *a, const void *b)\n{\n    size_t fa = strlen((const char *)a);\n    size_t fb = strlen((const char *)b);\n    return (fa > fb) - (fa < fb);\n}\nint cf(void const *a, void const *b)\n{\n    return (*(int*)a - *(int*)b);\n}\nint main()\n{\n    #ifndef ONLINE_JUDGE\n        freopen(\"test.in\",\"r\",stdin);\n        freopen(\"test.out\",\"w\",stdout);\n    #endif\n    \n    ll n, i;\n\n    scanf(\"%lld\", &n);\n    ll a[n+1], b[n+1];\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%lld\", &a[i]);\n    }\n    printf(\"1 %lld\\n\", n);\n\n    for(i=0; i<n; i++)\n    {\n        b[i]=(n*a[i])*(-1);\n\n        printf(\"%lld \", b[i]);\n\n        b[i]=b[i]+a[i];\n    }\n    printf(\"\\n1 1\\n%lld\\n\", b[0]*-1);\n\n    if(n>1)\n    {\n        printf(\"2 %lld\\n\", n);\n    }\n    for(i=1; i<n; i++)\n    {\n        printf(\"%lld \", b[i]*-1);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n\n#define ll long long int\n\nint sf(const void *a, const void *b)\n{\n    size_t fa = strlen((const char *)a);\n    size_t fb = strlen((const char *)b);\n    return (fa > fb) - (fa < fb);\n}\nint cf(void const *a, void const *b)\n{\n    return (*(int*)a - *(int*)b);\n}\nint main()\n{\n    #ifndef ONLINE_JUDGE\n        freopen(\"test.in\",\"r\",stdin);\n        freopen(\"test.out\",\"w\",stdout);\n    #endif\n    \n    ll n, i;\n\n    scanf(\"%lld\", &n);\n    ll a[n+1], b[n+1];\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%lld\", &a[i]);\n    }\n    printf(\"1 %lld\\n\", n);\n\n    for(i=0; i<n; i++)\n    {\n        b[i]=(n*a[i])*(-1);\n\n        printf(\"%lld \", b[i]);\n\n        b[i]=b[i]+a[i];\n    }\n    printf(\"\\n1 1\\n%lld\\n\", b[0]*-1);\n\n    if(n>1)\n    {\n        printf(\"2 %lld\\n\", n);\n    }\n    for(i=1; i<n; i++)\n    {\n        printf(\"%lld \", b[i]*-1);\n    }\n    if(n==1)\n    {\n        printf(\"1 1\\n0\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.6499261447562777, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "624825b2ff90f8063475b904a09b9e05", "bug_code_uid": "811ad004988385084dd3a5c74370c58c", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "97ff8d879769748358a1f3e41c23e90e", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint sd(int n) {\n  for (int i = 2; i <= n; i++) {\n    if (n % i == 0) {\n      return i;\n    }\n  }\n}\n\nint main() {\n  int t, n, k;\n  scanf(\"%d\", &t);\n  for (int i = 0; i < t; i++) {\n    scanf(\"%d %d\", &n, &k);\n    for (int j = 0; j < k; j++) {\n      n += sd(n);\n    }\n    printf(\"%d\\n\", n);\n  }\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n\n\nint sd(int n) {\n  for (int i = 3; i <= n; i += 2) {\n    if (n % i == 0) {\n      return i;\n    }\n  }\n}\n\nint main() {\n  int t, n;\n  long int k;\n  scanf(\"%d\", &t);\n  for (int i = 0; i < t; i++) {\n    scanf(\"%d %d\", &n, &k);\n    if (n & 1) {\n      n += sd(n);\n      k -= 1;\n    }\n    n += 2*k;\n    printf(\"%d\\n\", n);\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.99375, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "afdd51514ca27e9dd46d81ef9f02682f", "bug_code_uid": "c7af5eb144532fcac7c70d3d5507c0b5", "src_uid": "915b4776a6b1fa15886247eb1ad40b60", "apr_id": "0fdb482da1a25c9aca6d44617a5d10c6", "difficulty": 1300, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main() {\n\tchar s[500001];\n\tscanf(\"%s\", s);\n\tint open_bracket=-1, close_bracket=-1, len=strlen(s);\n\t// cari open dari depan cari close dari belakang\n\tfor (int i=0;s[i]!='\\0';i++) {\n\t\tif (s[i]=='[') {\n\t\t\topen_bracket=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor (int i=len-1;i>=0;i--) {\n\t\tif (s[i]==']') {\n\t\t\tclose_bracket=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (open_bracket==-1||close_bracket==-1) printf(\"-1\\n\");\n\telse {\n\t\tint first_colon=-1, sec_colon=-1;\n\t\t//cari first_colon, ubah ke titik tidak overlap\n\t\tfor (int i=open_bracket+1;i<close_bracket;i++) {\n\t\t\tif (s[i]==':') {\n\t\t\t\tfirst_colon=i;\n\t\t\t\ts[i]='.';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (int i=close_bracket-1;i>open_bracket;i--) {\n\t\t\tif (s[i]==':') {\n\t\t\t\tsec_colon=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (first_colon==-1||sec_colon==-1) printf(\"-1\\n\");\n\t\treturn 0;\n\t\t//cari jumlah |\n\t\tint count=0;\n\t\tfor (int i=first_colon+1;i<sec_colon;i++) {\n\t\t\tif (s[i]=='|') count++;\n\t\t}\n\t\tprintf(\"%d\\n\", 4+count);\n\t}\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main() {\n\tchar s[500001];\n\tscanf(\"%s\", s);\n\tint open_bracket=-1, close_bracket=-1, len=strlen(s);\n\t// cari open dari depan cari close dari belakang\n\tfor (int i=0;s[i]!='\\0';i++) {\n\t\tif (s[i]=='[') {\n\t\t\topen_bracket=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor (int i=len-1;i>=0;i--) {\n\t\tif (s[i]==']') {\n\t\t\tclose_bracket=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (open_bracket==-1||close_bracket==-1) printf(\"-1\\n\");\n\telse {\n\t\tint first_colon=-1, sec_colon=-1;\n\t\t//cari first_colon, ubah ke titik tidak overlap\n\t\tfor (int i=open_bracket+1;i<close_bracket;i++) {\n\t\t\tif (s[i]==':') {\n\t\t\t\tfirst_colon=i;\n\t\t\t\ts[i]='.';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (int i=close_bracket-1;i>open_bracket;i--) {\n\t\t\tif (s[i]==':') {\n\t\t\t\tsec_colon=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (first_colon==-1||sec_colon==-1) {\n\t\t\tprintf(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\t\t//cari jumlah |\n\t\tint count=0;\n\t\tfor (int i=first_colon+1;i<sec_colon;i++) {\n\t\t\tif (s[i]=='|') count++;\n\t\t}\n\t\tprintf(\"%d\\n\", 4+count);\n\t}\n}\n"}
{"similarity_score": 0.9961759082217974, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4415fe0c9785ad137b84608053234162", "bug_code_uid": "24c2023b151d3f79137ba193fa9d50e9", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "8d1622311653bcf62f107e68a9c8f4ae", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,sum1=0,sum2=0,sum3=0,a,b,c,i;\n    scanf(\"%d\",&n);\n    if(n>=1&&n<=100)\n    {\n        for(i=0;i<n;i++)\n            {\n                scanf(\"%d%d%d\",&a,&b,&c);\n                if(a>=-100&a<=100)\n                sum1+=a;\n                if(b>=-100&b<=100)\n                sum2+=b;\n                if(c>=-100&c<=100)\n                sum3+=c;\n    \n            }\n        if(sum1==0&&sum2==0&&sum3==0)\n        printf(\"Yes\");\n        else\n        printf(\"NO\");\n    }\n    \n    return (0);\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,sum1=0,sum2=0,sum3=0,a,b,c,i;\n    scanf(\"%d\",&n);\n    if(n>=1&&n<=100)\n    {\n        for(i=0;i<n;i++)\n            {\n                scanf(\"%d%d%d\",&a,&b,&c);\n                if(a>=-100&a<=100)\n                sum1+=a;\n                if(b>=-100&b<=100)\n                sum2+=b;\n                if(c>=-100&c<=100)\n                sum3+=c;\n    \n            }\n        if(sum1==0&&sum2==0&&sum3==0)\n        printf(\"YES\");\n        else\n        printf(\"NO\");\n    }\n    \n    return (0);\n}"}
{"similarity_score": 0.7967914438502673, "equal_cnt": 12, "replace_cnt": 3, "delete_cnt": 6, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "b0022a039ab9303a183c9cb3a9cb1206", "bug_code_uid": "7c9e1e917b44b1be9afbfa16e15a489d", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "5b9ec54996387dacca866582b8ddab05", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint y,k,n,flag=0,i;\n\tscanf(\"%d%d%d\",&y,&k,&n);\n\tfor(i=1;i<=n-y;i++)\n\t{\n\t\tif((y+i)%k==0)\n\t\t\tprintf(\"%d \",i);\n\t\telse\n\t\t\tflag++;\n\t}\n\tif(flag==n-y)\n\t\tprintf(\"-1\");\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint y,k,n,flag=0,i;\n\tscanf(\"%d%d%d\",&y,&k,&n);\n\tint a=(y/k)+1;\n\ta=a*k;\n\tfor(i=a;i<=n;i+=k)\n\t{\n\t\tprintf(\"%d \",i-y);\t\n\t}\n\tif(a>n)\n\t\tprintf(\"-1\");\n}\n"}
{"similarity_score": 0.2850644427596664, "equal_cnt": 31, "replace_cnt": 14, "delete_cnt": 10, "insert_cnt": 7, "fix_ops_cnt": 31, "lang": "GNU C11", "fix_code_uid": "721d424508d362290dafa560927ecb6a", "bug_code_uid": "bef454f637b455e4e6b4feb5ebf596b3", "src_uid": "6ca98e655007bfb86f1039c9f096557e", "apr_id": "776828c8d7481c68d6b5ba4f5235013b", "difficulty": 900, "tags": ["greedy", "math", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tcin >> t;\r\n\twhile (t--)\r\n\t{\r\n\t\tint n, a[102], b[102], flag = 0;\r\n\t\tcin >> n;\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tcin >> a[i];\r\n\t\t}\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tcin >> b[i];\r\n\t\t}\r\n\t\tsort(a, a + n); sort(b, b + n);\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tif ((b[i] - a[i]) != 1 && (b[i] - a[i]) != 0)\r\n\t\t\t\tflag = 1;\r\n\t\t}\r\n\t\tif (flag == 1)\r\n\t\t\tcout << \"NO\\n\";\r\n\t\telse\r\n\t\t\tcout << \"YES\\n\";\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n#include <string.h>\r\n\r\n#define min(n, m) ((n)<(m))?(n):(m)\r\n#define max(n, m) ((n)>(m))?(n):(m)\r\n\r\nvoid swap(int *xp, int *yp)\r\n{\r\n    int temp = *xp;\r\n    *xp = *yp;\r\n    *yp = temp;\r\n}\r\n\r\nvoid Sort(int arr[], int n)\r\n{\r\n   int i, j;\r\n   for (i = 0; i < n-1; i++)\r\n       for (j = 0; j < n-i-1; j++)\r\n           if (arr[j] > arr[j+1])\r\n              swap(&arr[j], &arr[j+1]);\r\n}\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,a[102],b[102],flag=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(int i =0;i<n;i++)   scanf(\"%d\",&a[i]);\r\n\r\n\t\tfor(int i =0;i<n;i++)   scanf(\"%d\",&b[i]);\r\n\r\n\t\tSort(a,n); Sort(b,n);\r\n\r\n\t\tfor(int i =0;i<n;i++)\r\n\t\t{\r\n\t\t\tif((b[i]-a[i])!=1 && (b[i]-a[i])!=0)\r\n\t\t\t\tflag=1;\r\n\t\t}\r\n\t\tif(flag==1)\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"YES\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9545049063336307, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "fc89b051b2d8a7bb458a3be5fef5ddf8", "bug_code_uid": "b82a033329c9e92dd572a94b1c53c844", "src_uid": "4cf0fe49f7ebf058317ac848043031a5", "apr_id": "bc00788dbf58f58558051db20d56411a", "difficulty": 1300, "tags": [], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N \t200002\n#define M \t1000001\n\nlong long a[N], ans[N], chk[M];\n\nint main () {\n\tlong long n, i, c, num, s;\n\tscanf(\"%lld\", &n);\n\n\tfor (i = 1; i <= n; i++) {\n\t\tscanf(\"%lld\", &a[i]);\n\t\t++chk[a[i]];\n\t\ta[i] += a[i - 1];\n\t} \n\n\n\tc = 0;\n\tfor (i = 1; i <= n; i++) {\n\t\tnum = a[i] - a[i - 1];\n\t\ts = a[n] - num;\n\t\tif (s & 1) {\n\t\t\tcontinue;\n\t\t}\n\t\ts = s / 2;\n\t\tif ( (s != num && chk[s] == 1) || (s == num && chk[s] > 1) ) {\n\t\t\tans[c++] = i;\n\t\t}\n\t}\n\n\tprintf(\"%lld\\n\", c);\n\tfor (i = 0; i < c; i++) {\n\t\tprintf(\"%lld \", ans[i]);\n\t}\n}", "fixed": "#include <stdio.h>\n\n#define N \t200002\n#define M \t1000001\n\nlong long a[N], ans[N], chk[M];\n\nint main () {\n\tlong long n, i, c, num, s;\n\tscanf(\"%lld\", &n);\n\n\tfor (i = 1; i <= n; i++) {\n\t\tscanf(\"%lld\", &a[i]);\n\t\t++chk[a[i]];\n\t\ta[i] += a[i - 1];\n\t} \n\n\tc = 0;\n\tfor (i = 1; i <= n; i++) {\n\t\tnum = a[i] - a[i - 1];\n\t\ts = a[n] - num;\n\t\t\n\t\tif (s & 1) {\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\ts = s / 2;\n\t\t\n\t\tif (s >= M) {\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif ( (s != num && chk[s]) || (s == num && chk[s] > 1) ) {\n\t\t\tans[c++] = i;\n\t\t}\n\t}\n\n\tprintf(\"%lld\\n\", c);\n\tfor (i = 0; i < c; i++) {\n\t\tprintf(\"%lld \", ans[i]);\n\t}\n}"}
{"similarity_score": 0.9905362776025236, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "852c2944112f93483b5152f0844fa59e", "bug_code_uid": "d9a66b2b5ba4c58f06cb7052aae8c73b", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "2547adc541fcc05951bc76e6136f2fe4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int i,n,cnt=0,sum=0;\n    scanf(\"%d\",&n);\n    int ar[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&n);\n    }\n    for(i=0;i<n;i++){\n        if(ar[i]>0)\n        sum+=ar[i];\n        else if(sum>0)\n        sum--;\n        else\n        cnt++;\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int i,n,cnt=0,sum=0;\n    scanf(\"%d\",&n);\n    int ar[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ar[i]);\n    }\n    for(i=0;i<n;i++){\n        if(ar[i]>0)\n        sum+=ar[i];\n        else if(sum>0)\n        sum--;\n        else\n        cnt++;\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n}"}
{"similarity_score": 0.866965620328849, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "37ea9dd7b2e3790db9d2438bb20e3385", "bug_code_uid": "def8fb16ea19a00ecf7ae4d737ef13fd", "src_uid": "2eb7234904b28b4793b7c482a2370092", "apr_id": "d227ab19ea08be3e230460a0da947559", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    int n, a, max1, max2, min1, min2, i;\n\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &a);\n    max1=max2=min1=min2=a;\n\n    for(i=1; i<n; i++)\n    {\n        scanf(\"%d\", &a);\n        if(a>max1)\n        {\n            max2=max1;\n            max1=a;\n        }\n        else if(a>max2)\n            max2=a;\n        if(a<min1)\n        {\n            min2=min1;\n            min1=a;\n        }\n        else if(a<min2)\n        {\n            min2=a;\n        }\n    }\n    if(max2-min1<max1-min2)\n    {\n        printf(\"%d\\n\", max2-min1);\n\n    }\n    else printf(\"%d\\n\", max1-min2);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int n, a, a1, max1, max2, min1, min2, i;\n\n    scanf(\"%d\", &n);\n    scanf(\"%d %d\", &a, &a1);\n    if(a1>a)\n    {\n        max1=min2=a1;\n        max2=min1=a;\n    }\n    else\n    {\n        max1=min2=a;\n        max2=min1=a1;\n    }\n\n\n    for(i=2; i<n; i++)\n    {\n        scanf(\"%d\", &a);\n        if(a>max1)\n        {\n            max2=max1;\n            max1=a;\n        }\n        else if(a>max2)\n            max2=a;\n        if(a<min1)\n        {\n            min2=min1;\n            min1=a;\n        }\n        else if(a<min2)\n        {\n            min2=a;\n        }\n    }\n    if(max2-min1<max1-min2)\n    {\n        printf(\"%d\\n\", max2-min1);\n\n    }\n    else printf(\"%d\\n\", max1-min2);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9993891264508247, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8add10ad7a6851b993042b8bb7ae6da9", "bug_code_uid": "47e9b8d28ea6dd8d0b6bb7f38a0fcc47", "src_uid": "0eab9d2dd60d38f68d49f30cff918fce", "apr_id": "15b647e2a45dcbcae077cb39808097f9", "difficulty": 1100, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,m;\n        scanf(\"%d %d\",&n,&m);\n        int a[n][m],c[(n*m)+1];\n         for(int k=0;k<(n*m)+1;k++)\n            c[k]=-1;\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<m;j++)\n            {\n            scanf(\"%d\",&a[i][j]);\n            c[a[i][j]]=i;\n            }\n        }\n        for(int i=0;i<n;i++)\n        {\n            int kutta;\n            scanf(\"%d\",&kutta);\n            int pos=c[kutta];\n            for(int j=0;j<m;j++)\n            {\n                printf(\"%d \",a[pos][j]);\n            }\n            printf(\"\\n\");\n        }\n        for(int i=0;i<m-1;i++)\n        {\n            int manju;\n            for(int j=0;j<n;j++)\n                scanf(\"%d\",&manju);\n        }\n\n\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,m;\n        scanf(\"%d %d\",&n,&m);\n        int a[n][m],c[(n*m)+1];\n         for(int k=0;k<(n*m)+1;k++)\n            c[k]=-1;\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<m;j++)\n            {\n            scanf(\"%d\",&a[i][j]);\n            c[a[i][j]]=i;\n            }\n        }\n        for(int i=0;i<n;i++)\n        {\n            int kutta;\n            scanf(\"%d\",&kutta);\n            int pos=c[kutta];\n            for(int j=0;j<m;j++)\n            {\n                printf(\"%d \",a[pos][j]);\n            }\n            printf(\"\\n\");\n        }\n        for(int i=0;i<m-1;i++)\n        {\n            int manju;\n            for(int j=0;j<n;j++)\n                scanf(\"%d\",&manju);\n        }\n\n\n    }\n    return 0;\n}"}
{"similarity_score": 0.9294460641399417, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "01b441137a2a7d09e0b9f72ea388b965", "bug_code_uid": "2089344db5f5fa9612d41be43bf45028", "src_uid": "94a38067fc8dd8619fa6e5873ca60220", "apr_id": "6756b8e5fd998d92f7438682194acdac", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <math.h>\n#include <time.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#define eps 1e-8\n#define oo 1000000000\n#define pi 3.14159265359\n#define zero(a) (abb(a)<=eps)\n#define lowbit(a) ((a)&(-(a)))\n#define abb(a) ((a)>0?(a):(-(a)))\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define cj(x1,y1,x2,y2) ((x1)*(y2)-(x2)*(y2))\n#define dj(x1,y1,x2,y2) ((x1)*(y1)+(y1)*(y2))\n#define dis(x1,y1,x2,y2) sqrt(((x2)-(x1))*((x2)-(x1))+((y2)-(y1))*((y2)-(y1)))\n\nlong a[101]={0};\n\nint main()\n{\n   long i,j,k,n;\n   scanf(\"%ld\",&n);\n   for (i=1;i<=n;i++)\n   {\n      scanf(\"%ld\",&a[i]);\n      for (j=2;j<i;j++)\n         for (k=1;k<j;k++)\n            if (a[i]==a[j]+a[k])\n               goto out;\n   }\n   out:\n   if (i>n)\n      printf(\"-1\\n\");\n   else\n      printf(\"%ld %ld %ld\\n\",i,j,k);\n   return 0;\n}\n", "fixed": "#include <math.h>\n#include <time.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#define eps 1e-8\n#define oo 1000000000\n#define pi 3.14159265359\n#define zero(a) (abb(a)<=eps)\n#define lowbit(a) ((a)&(-(a)))\n#define abb(a) ((a)>0?(a):(-(a)))\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define cj(x1,y1,x2,y2) ((x1)*(y2)-(x2)*(y2))\n#define dj(x1,y1,x2,y2) ((x1)*(y1)+(y1)*(y2))\n#define dis(x1,y1,x2,y2) sqrt(((x2)-(x1))*((x2)-(x1))+((y2)-(y1))*((y2)-(y1)))\n\nlong a[101]={0};\n\nint main()\n{\n   long i,j,k,n;\n   scanf(\"%ld\",&n);\n   for (i=1;i<=n;i++)\n      scanf(\"%ld\",&a[i]);\n   for (i=1;i<=n;i++)\n      for (j=1;j<n;j++)\n         if (j!=i)\n            for (k=j+1;k<=n;k++)\n               if (k!=i&&a[i]==a[j]+a[k])\n                  goto out;\n   out:\n   if (i>n)\n      printf(\"-1\\n\");\n   else\n      printf(\"%ld %ld %ld\\n\",i,j,k);\n   return 0;\n}\n"}
{"similarity_score": 0.3538355217691776, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "4c9b117f74d382f8ac18adb5379b0e79", "bug_code_uid": "c8ae196bf3da9e9723d49d91717bbbba", "src_uid": "e702594a8e993e135ea8ca78eb3ecd66", "apr_id": "136f650c08ac18cf8da090fa9cc4a28f", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\n\tint segmento,conteo1,x,y,L,R,L_max,R_max;\n\tscanf(\"%d\",&segmento);\n\tfor(conteo1=x=y=0;conteo1<segmento;conteo1++)\n\t{\n\t\tscanf(\"%d\",&L);\n\t\tscanf(\"%d\",&R);\n\t\t\n\t\tif(conteo1!=0)\n\t\t{\n\t\t\tif(L<=L_max)\n\t\t\t{\n\t\t\t\tL_max=L;\n\t\t\t\tif(R>=R_max)\n\t\t\t\t{\n\t\t\t\t\tR_max=R;\n\t\t\t\t\tx=conteo1+1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tR_max=R;\n\t\t\tL_max=L;\n\t\t}\n\t}\n\tif(!x)\n\t{\n\t\tprintf(\"-1\");\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\",x);\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint lugar(int segmento,int segmentos[segmento][2],int,int);\nint main()\n{\n\tint segmento,conteo1,pos,izquierda,derecha;\n\tscanf(\"%d\",&segmento);\n\tint segmentos[segmento][2];\n\tfor(conteo1=0;conteo1<segmento;conteo1++)\n\t{\n\t\tscanf(\"%d\",&segmentos[conteo1][0]);\n\t\tscanf(\"%d\",&segmentos[conteo1][1]);\n\t\tif(conteo1!=0)\n\t\t{\n\t\t\tif(segmentos[conteo1][0]<=izquierda)izquierda=segmentos[conteo1][0];\n\t\t\tif(segmentos[conteo1][1]>=derecha)derecha=segmentos[conteo1][1];\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tizquierda=segmentos[conteo1][0];\n\t\t\tderecha=segmentos[conteo1][1];\n\t\t}\n\t}\n\tpos=lugar(segmento,segmentos,izquierda,derecha);\n\tprintf(\"%d\\n\",pos);\n\treturn 0;\n}\nint lugar(int segmento,int segmentos[segmento][2],int izquierda,int derecha)\n{\n\tint posicion,conteo1;\n\tposicion=-1;\n\tfor(conteo1=0;conteo1<segmento;conteo1++)\n\t{\n\t\tif(segmentos[conteo1][0]==izquierda && segmentos[conteo1][1]==derecha)\n\t\t{\n\t\t\tposicion=conteo1+1;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn posicion;\n}"}
{"similarity_score": 0.35989717223650386, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "6ed89d93c34a9b8c8dd237602ec2e7f7", "bug_code_uid": "a7017e3d4828a66f000af6ebcb92ca69", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "8e09b21e2f3f24fd1f57a657e3a7ecc1", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\nint main()\n{\n\tint n,a,b,p[102],q[102],c=0,i,j,l;\n\tint level[102];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<=n;i++){\n\t\tlevel[i]=0;\n\t}\n\tfor(i=0;i<101;i++){\n\t\tscanf(\"%d\",&p[i]);\n\t\tif(i>0){\n\t\t\tl=p[i];\n\t    \tlevel[l]=1;\n\t\t}\n\t}\n\tfor(i=0;i<101;i++){\n\t\tscanf(\"%d\",&q[i]);\n\t\tif(i>0){\n\t\t\tl=q[i];\n\t    \tlevel[l]=1;\n\t    }\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(level[i]==1){\n\t\t\tc++;\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%d\\n\",i);\n\t\t}\n\t}\n\tif(c==n){\n\t\tprintf(\"I become the guy.\");\n\t}\n\telse{\n\t\tprintf(\"%d\\n%d\\nOh, my keyboard!\",c,n);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <conio.h>\nint main()\n{\n\tint n,p,q,i,j,c,a[500]={0},b[101]={0},d[101]={0},temp;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&p);\n\tfor(i=0;i<p;i++){\n\t\tscanf(\"%d\",&b[i]);\n\t\ta[i]=b[i];\n\t}\n\tscanf(\"%d\",&q);\n\tfor(i=0;i<q;i++){\n\t\tscanf(\"%d\",&d[i]);\n\t\ta[i+p]=d[i];\n\t}\n\tfor (i = 1; i <= n; ++i) {\n\t\tfor (j = i + 1; j <= n; ++j){\n\t\t\tif (a[i] > a[j]){\n\t\t\t\ttemp =  a[i];\n\t\t\t\ta[i] = a[j];\n\t\t\t\ta[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(j=1;j<=n;j++){\n\t\tfor(i=0;i<=p+q+10;i++){\n\t\t\tif(j==a[i]){\n\t\t\t\tc++;\n\t\t\t\tgoto finish;\n\t\t\t}\n\t\t}\n\t\tfinish:\n\t\tc+=0;\n\t}\n\tif(c==n){\n\t\tprintf(\"I become the guy.\");\n\t}\n\telse{\n\t\tprintf(\"Oh, my keyboard!\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9417040358744395, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "b7db4cfc4f19bfea871f08a44861b3e8", "bug_code_uid": "2703e705dd6cd573c0c82acf9e16ecf5", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "0168edc5d03beb615ce25c6e734f0b3d", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    unsigned long long n, i, j, k, max;\n    scanf(\"%I64d\", &n);\n    unsigned long long a[n];\n\n    for(i=1; i<=n; i++)\n        scanf(\"%I64d\", &a[i]);\n    max=a[n-1];\n\n    for(i=n; i>=1; i--)\n    {\n        if(a[i]>=max)\n        {\n            max=a[i];\n            a[i]=0;\n        }\n        else a[i]= (max-a[i])+1;\n    }\n    for(i=1; i<=n; i++)\n        printf(\"%I64d \", a[i]);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    unsigned long long n, i, j, k, max;\n    scanf(\"%I64d\", &n);\n    unsigned long long a[n];\n\n    for(i=1; i<=n; i++)\n        scanf(\"%I64d\", &a[i]);\n    max=a[n];\n\n    for(i=n; i>=1; i--)\n    {\n        if(i==n) a[i]=0;\n        else{\n        if(a[i]>max)\n        {\n            max=a[i];\n            a[i]=0;\n        }\n        else a[i]= (max-a[i])+1;\n        }\n    }\n    for(i=1; i<=n; i++)\n        printf(\"%I64d \", a[i]);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9614791987673343, "equal_cnt": 10, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "47c737f7c51cef4b5521273743ed8dd2", "bug_code_uid": "f5795fc147e39bd3cef7517b4ab52bac", "src_uid": "1ae2942b72ebb7c55359c41e141900d7", "apr_id": "2821a4bcd9c7b0d8745fd769405b0b66", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a[51], cost[6], num[6];\n\nint main()\n{\n    int n, i, j, money=0;\n    scanf(\"%d\", &n);\n    for(i=0; i<n; i++)\n        scanf(\"%d\", &a[i]);\n    for(i=0; i<5; i++)\n        scanf(\"%d\", &cost[i]);\n    for(i=0; i<n; i++)\n    {\n        money+=a[i];\n        //printf(\"money=%d\\n\", money);\n        int times=0;\n        for(j=4; j>=0; j--)\n            if(money>=cost[j])\n            {\n                int times=money/cost[j];\n                money=money%cost[j];\n                num[j]+=times;\n            }\n    }\n    for(i=0; i<5; i++)\n        printf(\"%d \", num[i]);\n    printf(\"\\n%d\\n\", money);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nlong long int a[51], cost[6], num[6];\n\nint main()\n{\n    long long int n, i, j, money=0;\n    scanf(\"%lld\", &n);\n    for(i=0; i<n; i++)\n        scanf(\"%lld\", &a[i]);\n    for(i=0; i<5; i++)\n        scanf(\"%lld\", &cost[i]);\n    for(i=0; i<n; i++)\n    {\n        money+=a[i];\n        //printf(\"money=%d\\n\", money);\n        long long int times=0;\n        for(j=4; j>=0; j--)\n            if(money>=cost[j])\n            {\n                long long int times=money/cost[j];\n                money=money%cost[j];\n                num[j]+=times;\n            }\n    }\n    for(i=0; i<5; i++)\n        printf(\"%lld \", num[i]);\n    printf(\"\\n%lld\\n\", money);\n    return 0;\n}"}
{"similarity_score": 0.9541666666666667, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "2a8ba4824a9f002742dab10e50736969", "bug_code_uid": "f7cd80c93e76456aeb959fea2f53a0f3", "src_uid": "91be5db48b44a44adff4c809ffbb8e3e", "apr_id": "e9189932b251a781ec70ce5a8bb69463", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int n,s,x,y,e,f,i,flag=0;\n     \n\tscanf(\"%d%d\",&n,&s);\n\tint d[n],max=0;\n\tfor(i=1;i<=n;i++)\n\t{\n\t     scanf(\"%d%d\",&x,&y);\n\t     if(x<s)\n\t     {\n\t\t  if(y!=0)\n\t\t  d[i]=100-y;\n\t\t  else\n\t\t       d[i]=0;\n\t     }\n\t     if(x==s)\n\t     {\n\t\t  if(y!=0)\n\t\t       printf(\"-1\");\n\t\t  else\n\t\t       printf(\"0\");\n\t     }\n\t     else\n\t\t  d[i]=-1;\n\t}\n\tmax=d[1];\n\tfor(e=1;e<=n;e++)\n\t{\n\t     if(d[e]>=max)\n\t\t  max=d[e];\n\t}\n\tprintf(\"%d\",max);\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n     int n,s,x,y,e,f,i,flag=0;\n     \n\tscanf(\"%d%d\",&n,&s);\n\tint d[n],max=0;\n\tfor(i=1;i<=n;i++)\n\t{\n\t     scanf(\"%d%d\",&x,&y);\n\t     if(x<s)\n\t     {\n\t\t  if(y!=0)\n\t\t  d[i]=100-y;\n\t\t  else\n\t\t       d[i]=0;\n\t     }\n\t     else if(x==s)\n\t     {\n\t\t  if(y!=0)\n\t\t       d[i]=-1;\n\t\t      // printf(\"-1\");\n\t\t  else\n\t\t       d[i]=0;\n//\t\t       printf(\"0\");\n\t     }\n\t     else\n\t\t  d[i]=-1;\n\t}\n\tmax=d[1];\n\tfor(e=1;e<=n;e++)\n\t{\n\t     if(d[e]>=max)\n\t\t  max=d[e];\n\t}\n\tprintf(\"%d\",max);\n\n}\n"}
{"similarity_score": 0.005361930294906166, "equal_cnt": 2, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "e33788143cb954b70e69ed55e3c6f98b", "bug_code_uid": "3a2ab8c7475b387661880d471eec48e3", "src_uid": "a0e738765161bbbfe8e7c5abaa066b0d", "apr_id": "179d7ebda953edea572fd29f61b71616", "difficulty": 1400, "tags": ["greedy", "games"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "Arena of Greed.cpp", "fixed": "#include<stdio.h>\nlong long tot,mr;\nint _judge(long long n) {\n\tif(n%2==0) return 1;\n\telse return 0;\n}\nvoid _game() {\n\twhile(tot) {\n\t\tif(tot<=0) break;\n\t\tif(_judge(tot)==1&&_judge(tot/2)==0) {\n\t\t\ttot/=2;\n\t\t\tmr+=tot;\n\t\t} else if((_judge(tot)==1&&_judge(tot/2)==1)) {\n\t\t\tif((tot/2)==2) {\n\t\t\t\ttot/=2;\n\t\t\t\tmr+=tot;\n\t\t\t} else {\n\t\t\t\ttot-=1;\n\t\t\t\tmr+=1;\n\t\t\t}\n\t\t} else if(_judge(tot)==0) {\n\t\t\ttot-=1;\n\t\t\tmr+=1;\n\t\t}\n\t\tif(_judge(tot)==1&&_judge(tot/2)==0) {\n\t\t\ttot/=2;\n\t\t} else if(_judge(tot)==1&&_judge(tot/2)==1) {\n\t\t\tif((tot/2)==2) {\n\t\t\t\ttot/=2;\n\t\t\t} else {\n\t\t\t\ttot-=1;\n\t\t\t}\n\t\t} else {\n\t\t\ttot-=1;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",mr);\n}\nint main() {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--) {\n\t\tmr=0;\n\t\tscanf(\"%lld\",&tot);\n\t\t_game();\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.993734335839599, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "708a185eda55f8c28038b1e03a1dac17", "bug_code_uid": "572d28594bcc6bdad254bcbbc5735bd8", "src_uid": "480defc596ee5bc800ea569fd76dc584", "apr_id": "501a9382374a82f8c1f5038c4c456ed2", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nlong arr[26];\n\nint cmpfunc (const void * a, const void * b)\n{\n    if( *(long long int*)a - *(long long int*)b < 0 )\n        return -1;\n    if( *(long long int*)a - *(long long int*)b > 0 )\n        return 1;\n    if( *(long long int*)a - *(long long int*)b == 0 )\n        return 0;\n}\n\nint main()\n{\n    long long int sum = 0, n, k, i;;\n    scanf(\"%I64d %I64d\", &n, &k);\n    char s[n+5];\n    scanf(\"%s\", &s);\n    for (i = 0; i < n; i++) arr[s[i]-'A']++;\n    qsort(arr, 26, sizeof(long long int), cmpfunc);\n    i = 25;\n    while (k){\n        if (arr[i] <= k){\n            sum += (arr[i] * arr[i]);\n            k -= arr[i];\n        }else {\n            sum += (k * k);\n            k = 0;\n        }\n        i--;\n    }\n    printf(\"%I64d\\n\", sum);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nlong long int arr[26];\n\nint cmpfunc (const void * a, const void * b)\n{\n    if( *(long long int*)a - *(long long int*)b < 0 )\n        return -1;\n    if( *(long long int*)a - *(long long int*)b > 0 )\n        return 1;\n    if( *(long long int*)a - *(long long int*)b == 0 )\n        return 0;\n}\n\nint main()\n{\n    long long int sum = 0, n, k, i;\n    scanf(\"%I64d %I64d\", &n, &k);\n    char s[n+5];\n    scanf(\"%s\", &s);\n    for (i = 0; i < n; i++) arr[s[i]-'A']++;\n    qsort(arr, 26, sizeof(long long int), cmpfunc);\n    i = 25;\n    while (k){\n        if (arr[i] <= k){\n            sum += (arr[i] * arr[i]);\n            k -= arr[i];\n        }else {\n            sum += (k * k);\n            k = 0;\n        }\n        i--;\n    }\n    printf(\"%I64d\\n\", sum);\n    return 0;\n}\n"}
{"similarity_score": 0.9408926417370326, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "a75fe24c235e7ccf6fd07a1c0117d347", "bug_code_uid": "bbafc6689ed13bc1b2cbf57e709241fa", "src_uid": "f99a23bc65a1f5cdbf7909dba573ce51", "apr_id": "22c83dead468bcdafa52053cd4830d36", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,i;\nscanf(\"%d\",&n);\nlong int a[100005]={0},b[100005]={0};\nfor(i=0;i<n;i++)\n{\nscanf(\"%ld\",&a[i]);\nif(i>1)\n{\nif(a[i]==a[i-1]+a[i-2])\n{\nb[i]=1;\nif(b[i-1]==0)\nb[i]=3;\n}\n}\n}\nint max=-1,s=0;\nfor(i=2;i<n;i++)\n{\n//printf(\"b[%d]=%d\\n\",i,b[i]);\nif(b[i]==0)\ns=0;\nelse\n{\ns=s+b[i];\nif(s>max)\nmax=s;\n}\n}\nif(max==-1)\nprintf(\"2\\n\");\nelse\nprintf(\"%d\\n\",max);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n,i;\nscanf(\"%d\",&n);\nif(n==1||n==2)\nprintf(\"%d\\n\",n);\nelse\n{\nlong int a[100005]={0},b[100005]={0};\nfor(i=0;i<n;i++)\n{\nscanf(\"%ld\",&a[i]);\nif(i>1)\n{\nif(a[i]==a[i-1]+a[i-2])\n{\nb[i]=1;\nif(b[i-1]==0)\nb[i]=3;\n}\n}\n}\nlong  int max=-1,s=0;\nfor(i=2;i<n;i++)\n{\n//printf(\"b[%d]=%d\\n\",i,b[i]);\nif(b[i]==0)\ns=0;\nelse\n{\ns=s+b[i];\nif(s>max)\nmax=s;\n}\n}\nif(max==-1)\nprintf(\"2\\n\");\nelse\nprintf(\"%ld\\n\",max);\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.9754816112084063, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "43763a5fdf3abf2e9aaa2cf2703b5faa", "bug_code_uid": "dd1563129d5b36081a46734b87da3648", "src_uid": "a5d56056fd66713128616bc7c2de8b22", "apr_id": "dbd0b39b5dd8a40bece76d72b3f51595", "difficulty": 1200, "tags": ["implementation", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,i,j,sum=0,temp;\nscanf(\"%d\",&n);\nint arr[n];\nfor(i=0;i<n;i++)\n{\n    scanf(\"%d\",&arr[i]);\n    sum+=arr[i];\n}\nif(sum%2==0)\n{\n    if(n==1)\n    {\n        printf(\"0\");\n        return 0;\n    }\n    for ( i = 0 ; i <=n-2; i++ )\n\t{\n\t\tfor ( j = i + 1 ; j <=n-1 ; j++ )\n\t\t{\n\t\t\tif ( arr[i] > arr[j] )\n\t\t\t{\n\t\t\t\ttemp = arr[i] ;\n\t\t\t\tarr[i] = arr[j] ;\n\t\t\t\tarr[j] = temp ;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n    {\n        if(arr[i]%2!=0)\n        {\n            sum-=arr[i];\n            break;\n        }\n    }\n}\nprintf(\"%d\",sum);\nreturn 0;\n}\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n,i,j,sum=0,temp;\nscanf(\"%d\",&n);\nint arr[n];\nfor(i=0;i<n;i++)\n{\n    scanf(\"%d\",&arr[i]);\n    sum+=arr[i];\n}\nif(sum%2==0)\n{\n    if(n==1)\n    {\n        printf(\"0\");\n        return 0;\n    }\n    for ( i = 0 ; i <=n-2; i++ )\n\t{\n\t\tfor ( j = i + 1 ; j <=n-1 ; j++ )\n\t\t{\n\t\t\tif ( arr[i] > arr[j] )\n\t\t\t{\n\t\t\t\ttemp = arr[i] ;\n\t\t\t\tarr[i] = arr[j] ;\n\t\t\t\tarr[j] = temp ;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n    {\n        if(arr[i]%2!=0)\n        {\n            sum-=arr[i];\n            break;\n        }\n    }\n    if(i==n)\n        sum=0;\n}\nprintf(\"%d\",sum);\nreturn 0;\n}\n\n\n\n"}
{"similarity_score": 0.9968976215098242, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3c581f4bf1eb1ab4d607502f7284426b", "bug_code_uid": "bf3a282037002ce55f5f1d21a1d6b52b", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "a5fd7da7037cdeddfc8cf0ec5528d13b", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,s[1000]={0},i,j,c=0,b=0;\n    char h[1000];\n    scanf(\"%d\",&n);\n    for(i=1;i<=18;i++)\n    {\n        if(i==1 || i==2)\n            s[i]=1;\n        else\n            s[i]=s[i-1]+s[i-2];\n    }\n    for(i=1;i<=n;i++)\n    {\n        c=0;\n        for(j=1;j<=n;j++)\n            if(i==s[j])\n               c++;\n        if(c!=0)\n            h[i]='O';\n        else\n            h[i]='o';\n        b++;\n    }\n    for(i=1;i<=b;i++)\n        printf(\"%c\",h[i]);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,s[1000]={0},i,j,c=0,b=0;\n    char h[1000];\n    scanf(\"%d\",&n);\n    for(i=1;i<=18;i++)\n    {\n        if(i==1 || i==2)\n            s[i]=1;\n        else\n            s[i]=s[i-1]+s[i-2];\n    }\n    for(i=1;i<=n;i++)\n    {\n        c=0;\n        for(j=1;j<=18;j++)\n            if(i==s[j])\n               c++;\n        if(c!=0)\n            h[i]='O';\n        else\n            h[i]='o';\n        b++;\n    }\n    for(i=1;i<=b;i++)\n        printf(\"%c\",h[i]);\n}"}
{"similarity_score": 0.9197916666666667, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "dfb1eaed7ef6cf9bed93bad83daefa16", "bug_code_uid": "464f2ea513eac6c7ec6312774f831987", "src_uid": "2c67ee95eba7ffbbed99cb488abb5f3d", "apr_id": "a53042f537280c4ceefbac62871a1a8f", "difficulty": 1000, "tags": ["geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\nint main ()\r\n{\r\n\tlong long i,j,a[100],n;\r\n\tscanf (\"%lld\",&n);\r\n\tgetchar();\r\n\tfor (i=0;i<n;i++)\r\n\t{\r\n\t\tlong long b,c,d,e;\r\n\t\tlong long w,h;\r\n\t\tlong long x[2][200010],y[2][200010],mx,my;\r\n\t\tscanf (\"%lld%lld\",&w,&h);\r\n\t\tscanf (\"%lld\",&b);\r\n\t\tfor (j=0;j<b;j++)\r\n\t\t{\r\n\t\t\tscanf (\"%lld\",&x[0][j]);\r\n\t\t}\r\n\t\tscanf (\"%lld\",&c);\r\n\t\tfor (j=0;j<c;j++)\r\n\t\t{\r\n\t\t\tscanf (\"%lld\",&x[1][j]);\r\n\t\t}\r\n\t\tscanf (\"%lld\",&d);\r\n\t\tfor (j=0;j<d;j++)\r\n\t\t{\r\n\t\t\tscanf (\"%lld\",&y[0][j]);\r\n\t\t}\r\n\t\tscanf (\"%lld\",&e);\r\n\t\tfor (j=0;j<e;j++)\r\n\t\t{\r\n\t\t\tscanf (\"%lld\",&y[1][j]);\r\n\t\t}\r\n\t\tif ((x[0][b-1]-x[0][0])>(x[1][c-1]-x[1][0]))\r\n\t\t{\r\n\t\t\tmx=x[0][b-1]-x[0][0];\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tmx=x[1][c-1]-x[1][0];\r\n\t\t}\r\n\t\tif ((y[0][d-1]-y[0][0])>(y[1][e-1]-y[1][0]))\r\n\t\t{\r\n\t\t\tmy=y[0][d-1]-y[0][0];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tmy=y[1][e-1]-y[1][0];\r\n\t\t}\r\n\t\tif (mx>my)\r\n\t\t{\r\n\t\t\tprintf (\"%lld\\n\",mx*h);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf (\"%lld\\n\",my*w);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint main ()\r\n{\r\n\tlong long i,j,a[100],n;\r\n\tscanf (\"%lld\",&n);\r\n\tgetchar();\r\n\tfor (i=0;i<n;i++)\r\n\t{\r\n\t\tlong long b,c,d,e;\r\n\t\tlong long w,h;\r\n\t\tlong long x[2][200010],y[2][200010],mx,my;\r\n\t\tscanf (\"%lld%lld\",&w,&h);\r\n\t\tscanf (\"%lld\",&b);\r\n\t\tfor (j=0;j<b;j++)\r\n\t\t{\r\n\t\t\tscanf (\"%lld\",&x[0][j]);\r\n\t\t}\r\n\t\tscanf (\"%lld\",&c);\r\n\t\tfor (j=0;j<c;j++)\r\n\t\t{\r\n\t\t\tscanf (\"%lld\",&x[1][j]);\r\n\t\t}\r\n\t\tscanf (\"%lld\",&d);\r\n\t\tfor (j=0;j<d;j++)\r\n\t\t{\r\n\t\t\tscanf (\"%lld\",&y[0][j]);\r\n\t\t}\r\n\t\tscanf (\"%lld\",&e);\r\n\t\tfor (j=0;j<e;j++)\r\n\t\t{\r\n\t\t\tscanf (\"%lld\",&y[1][j]);\r\n\t\t}\r\n\t\tif ((x[0][b-1]-x[0][0])>(x[1][c-1]-x[1][0]))\r\n\t\t{\r\n\t\t\tmx=x[0][b-1]-x[0][0];\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tmx=x[1][c-1]-x[1][0];\r\n\t\t}\r\n\t\tif ((y[0][d-1]-y[0][0])>(y[1][e-1]-y[1][0]))\r\n\t\t{\r\n\t\t\tmy=y[0][d-1]-y[0][0];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tmy=y[1][e-1]-y[1][0];\r\n\t\t}\r\n\t\tif (mx*h>my*w)\r\n\t\t{\r\n\t\t\tprintf (\"%lld\\n\",mx*h);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf (\"%lld\\n\",my*w);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9678362573099415, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "456bd6730d588873d9e8c5bbae278be3", "bug_code_uid": "14d2af7acfe33f128883831f41324b8b", "src_uid": "b36d7f840abe998185a988fe8dd2ec75", "apr_id": "4d982f622a665f5fa6fbd35cc66e1275", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\nint main()\n{\n    int *ptr,t,n,x,sum,maxbeau,minbeau;\n    scanf(\"%d\", &t);\n    while(t--){\n        sum=0;  maxbeau=0;  minbeau=0;\n        scanf(\"%d%d\", &n,&x);\n        ptr = (int*)malloc(n*sizeof(int));\n        for(int i=0;i<n;i++){\n            scanf(\"%d\", ptr+i);\n            sum+=*(ptr+i);\n            if(*(ptr+i)%x==0)\n                maxbeau+=*(ptr+i)/x;\n            else\n                maxbeau+=*(ptr+i)/x + 1;\n        }\n        if(sum%x==0)\n            minbeau = sum/x;\n        else\n            minbeau = sum/x + 1;\n        printf(\"%d %d\\n\", minbeau,maxbeau);\n        free(ptr);\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\nint main()\n{\n    long long *ptr,t,n,x,sum,maxbeau,minbeau;\n    scanf(\"%lld\", &t);\n    while(t--){\n        sum=0;  maxbeau=0;  minbeau=0;\n        scanf(\"%lld%lld\", &n,&x);\n        ptr = (long long int*)malloc(n*sizeof(long long int));\n        for(int i=0;i<n;i++){\n            scanf(\"%lld\", ptr+i);\n            sum+=*(ptr+i);\n            if(*(ptr+i)%x==0)\n                maxbeau+=*(ptr+i)/x;\n            else\n                maxbeau+=*(ptr+i)/x + 1;\n        }\n        if(sum%x==0)\n            minbeau = sum/x;\n        else\n            minbeau = sum/x + 1;\n        printf(\"%lld %lld\\n\", minbeau,maxbeau);\n        free(ptr);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.937394247038917, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c831db1f178c5df77e95118e381e4e8c", "bug_code_uid": "8da64a5239d5e07b855a1d253064302f", "src_uid": "066906ee58af5163636dac9334619ea7", "apr_id": "e44e116434d6888725130faf110bb13c", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint n,x,i,b;\n\tfloat sum=0;\n\tscanf(\"%d%d\",&n,&x);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tsum+=a[i];\n\t}\n\tif(sum>=0)\n\t{\n\t\tprintf(\"%d\",(sum/x));\n\t}\n\telse\n\t{\n\t\tb=ceil(sum/(-x));\n\t\tprintf(\"%d\",b);\t\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint n,x,i,b,c;\n\tfloat sum=0;\n\tscanf(\"%d%d\",&n,&x);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tsum+=a[i];\n\t}\n\tif(sum>=0)\n\t{\n\t\tc=ceil(sum/x);\n\t\tprintf(\"%d\",c);\n\t}\n\telse\n\t{\n\t\tb=ceil(sum/(-x));\n\t\tprintf(\"%d\",b);\t\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9981060606060606, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "58d5bdbdf9d1c532e45a85352dd35442", "bug_code_uid": "42cf70218987c26498d9365c8d0e2c79", "src_uid": "99e5c907b623c310d6f1599f485ca21d", "apr_id": "7eaf0a31d7089683c77bafb44c2e16a0", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t,n,i,j,k,count=0;\r\n    scanf(\"%d\",&t);\r\n    for(i = 0 ; i < t ; i++){\r\n        count=0;\r\n        scanf(\"%d\",&n);\r\n        int T[n];\r\n        for(j = 0 ; j < n ; j++){\r\n            scanf(\"%d\",&T[j]);\r\n        }\r\n        for(k = 0 ; k < n ; k++){\r\n           for(j = 0 ; j < n ; j++){\r\n               if(i!=j && T[k]>T[j]){\r\n                   count++;\r\n                   break;\r\n               }\r\n           }\r\n        }\r\n      printf(\"%d\\n\",count);\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t,n,i,j,k,count=0;\r\n    scanf(\"%d\",&t);\r\n    for(i = 0 ; i < t ; i++){\r\n        count=0;\r\n        scanf(\"%d\",&n);\r\n        int T[n];\r\n        for(j = 0 ; j < n ; j++){\r\n            scanf(\"%d\",&T[j]);\r\n        }\r\n        for(k = 0 ; k < n ; k++){\r\n           for(j = 0 ; j < n ; j++){\r\n               if(k!=j && T[k]>T[j]){\r\n                   count++;\r\n                   break;\r\n               }\r\n           }\r\n        }\r\n      printf(\"%d\\n\",count);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.07529411764705882, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "32606676fbc0f805707785388aed650d", "bug_code_uid": "a36a6f8dfcbb6263c7ce1b75cea91196", "src_uid": "a52ceb8a894809b570cbb74dc5ef76e1", "apr_id": "66c391545b700362c9c558631580ec89", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main(){\n    int n;\n    int i,j,k,m,count,temp;\n    int input[5001];\n    int student[5001];\n\n    scanf(\"%d\",&n);\n\n    for(k=1;k<n;k++){\n        input[k] = k+1;\n    }\n\n    student[1] = 1;\n    m = 1;\n    temp = n;\n    count = 1;\n    while(count<=n-1){\n        for(j=1;j<temp;j++){\n            if(abs(input[j] - student[m])!=1){\n                m = m + 1;\n                student[m] = input[j];\n                //printf(\"J is %d\\n\",j);\n                for(k=j;k<temp;k++){\n                    input[k] = input[k+1];\n\n                }\n                temp = temp -1;\n                /*printf(\"-------\\n\");\n                for(k=1;k<n;k++){\n                    printf(\"%d  \",input[k]);\n                }\n                printf(\"-------\\n\");\n                */\n\n                break;\n            }\n        }\n        count = count +1;\n    }\n    printf(\"%d\\n\",m);\n    for(j=1;j<=m;j++){\n        printf(\"%d \",student[j]);\n    }\n    printf(\"\\n\");\n\n\n    return 0;\n\n\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,i,j,k;\n\n    scanf(\"%d\",&n);\n\n    if(n>3){\n        printf(\"%d\\n\",n);\n        if(n%2!=0){\n            for(i=n;i>=1;i=i-2){\n                printf(\"%d \",i);\n            }\n            for(i=n-1;i>=2;i=i-2){\n                printf(\"%d \",i);\n            }\n        }\n        else{\n            for(i=n-1;i>=1;i=i-2){\n                printf(\"%d \",i);\n            }\n            for(i=n;i>=2;i=i-2){\n                printf(\"%d \",i);\n            }\n\n\n        }\n        printf(\"\\n\");\n    }\n    else if(n==1){\n        printf(\"%d\\n%d\\n\",1,1);\n    }\n    else if(n==2){\n        printf(\"%d\\n%d\\n\",1,1);\n    }\n    else {\n        printf(\"%d\\n%d %d\\n\",2,1,3);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9945652173913043, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6ccad0f9c3bddf0a88898c0cb2309d8d", "bug_code_uid": "e191db399256a2c14b28a4b06c400c83", "src_uid": "a37c3f2828490c70301b5b5deeee0f88", "apr_id": "b27b973bd09741547cc1cc1e528fd96d", "difficulty": 800, "tags": ["graphs"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,a[1000],i;\n    scanf(\"%d\",&n);\n\tfor(i=1 ; i<=n ; i++)\n    scanf(\"%d\",&a[i]);\n    for(i=1 ; i<=n ; i++)                                                                                      // array = 2,4,5,1,3\n    {\n\tif(a[a[a[i]]]==i)\n\t{\n\t  printf(\"YES\");\n\t  break;\n\t}\n    }\n\tif(i>n)\n    {\n\tprintf(\"NO\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,a[5010],i;\n    scanf(\"%d\",&n);\n\tfor(i=1 ; i<=n ; i++)\n    scanf(\"%d\",&a[i]);\n    for(i=1 ; i<=n ; i++)                                                                                      // array = 2,4,5,1,3\n    {\n\tif(a[a[a[i]]]==i)\n\t{\n\t  printf(\"YES\");\n\t  break;\n\t}\n    }\n\tif(i>n)\n    {\n\tprintf(\"NO\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.999213217938631, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "29d28f0b2956fa3b6fcf24174b4fffb9", "bug_code_uid": "2a147d7d38320e995d3818225e124103", "src_uid": "1b336555c94d5d5198abe5426ff6fa7a", "apr_id": "5dfdbb6c0eb8a6bd56fc2da9d092b54a", "difficulty": 1500, "tags": ["combinatorics", "implementation", "bitmasks", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint bin(int n)\n{\n\tint a=1;\n\tint c=0;\n\twhile(c<6)\n\t{\n\t    //printf(\"%d \",n);\n\t\tint b=n%2;\n\t\tif(b==0)\n\t\t{\n\t\t    \n\t\t\ta=a*3;\n\t\t}\n\t\tn=n/2;\n\t\tc++;\n\t}\n\treturn a;\n}\nint code(char a)\n{\n\tif(a>='a' && a<='z')\n\t{\n\t\treturn (a-'a')+36;\n\t}\n\tif(a>='A' && a<='Z')\n\t{\n\t\treturn (a-'A')+10;\n\t}\n\tif(a>='0' && a<='9')\n\t{\n\t\treturn (a-'0');\n\t}\n\tif(a=='-')\n\t{\n\t\treturn 62;\n\t}\n\tif(a=='_')\n\t{\n\t\treturn 63;\n\t}\n}\nint main()\n{\n\tchar s[10000];\n\tscanf(\"%s\",s);\n\tint i;\n\tlong long int ans=1;\n\tfor(i=0;s[i]!='\\0';i++)\n\t{\n\t\tlong long int pr=bin(code(s[i]));\n\t\tans=ans*pr;\n\t\tans=ans%((long long int)(1000000007));\n\t}\n\tprintf(\"%lld\",ans);\n\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint bin(int n)\n{\n\tint a=1;\n\tint c=0;\n\twhile(c<6)\n\t{\n\t    //printf(\"%d \",n);\n\t\tint b=n%2;\n\t\tif(b==0)\n\t\t{\n\t\t    \n\t\t\ta=a*3;\n\t\t}\n\t\tn=n/2;\n\t\tc++;\n\t}\n\treturn a;\n}\nint code(char a)\n{\n\tif(a>='a' && a<='z')\n\t{\n\t\treturn (a-'a')+36;\n\t}\n\tif(a>='A' && a<='Z')\n\t{\n\t\treturn (a-'A')+10;\n\t}\n\tif(a>='0' && a<='9')\n\t{\n\t\treturn (a-'0');\n\t}\n\tif(a=='-')\n\t{\n\t\treturn 62;\n\t}\n\tif(a=='_')\n\t{\n\t\treturn 63;\n\t}\n}\nint main()\n{\n\tchar s[100000];\n\tscanf(\"%s\",s);\n\tint i;\n\tlong long int ans=1;\n\tfor(i=0;s[i]!='\\0';i++)\n\t{\n\t\tlong long int pr=bin(code(s[i]));\n\t\tans=ans*pr;\n\t\tans=ans%((long long int)(1000000007));\n\t}\n\tprintf(\"%lld\",ans);\n\n\n\treturn 0;\n}"}
{"similarity_score": 0.9685094471658502, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "e8a8a2519c933a551286f94c8469e63d", "bug_code_uid": "a63e8f3738a55a606e5e0bcc6b9ddb71", "src_uid": "7c483498f497f4291e3d33375c0ebd53", "apr_id": "d40862a0591a03d7ebb0cd5eb1b765f2", "difficulty": 800, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint pd(int n);\nint main()\n{\n\tint n,i,j,flag=0,l,a,min=99999,h;\n\tscanf(\"%d\",&n);\n\tif(n==1)\n\tprintf(\"1\\n1\\n\");\n\telse{\n\t\n\tflag=pd(n);\n\t\n\tif(flag==1)\n\t{\n\tprintf(\"%d\\n\",n);\n\tfor(i=0;i<n;i++)\n\t{   if(i==n-1)\n\t\tprintf(\"1\\n\");\n\t\telse\n\t\tprintf(\"1 \");\n\t}\n\t}\n\telse\n\t{\n\t\tfor(i=2;i<n;i++)\n\t\t{\n\t\t\tif(n%i==0)\n\t\t\t{h=n/i;\n\t\t\tl=i;\n\t\t\t}\n\t\t\tif(h<=9&&h>=2)\n\t\t\t{\n\t\t\t\tif(min>l)\n\t\t\t\t{\n\t\t\t\tmin=l;\n\t\t\t\ta=n/i;}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",min);\n\t\tfor(i=0;i<min;i++)\n\t\t{\n\t\t\tif(i==min-1)\n\t\t\tprintf(\"%d\\n\",a);\n\t\t\telse\n\t\t\tprintf(\"%d \",a);\n\t\t}\n\t\t\n\t}}return 0;}\nint pd(int n)\n\t{\n\t  \tint i;\n\t  \tfor(i=2;i<n;i++)\n\t  \t{\n\t  \t\tif(n%i==0)\n\t  \t\tbreak;\n\t\t  }\n\t\t  if(i==n)\n\t\t  return 1;\n\t\t  else\n\t\t  return 0;\n\t", "fixed": "#include<stdio.h>\nint pd(int n);\nint main()\n{\n\tint n,i,j,flag=0,l,a,min=99999,h;\n\tscanf(\"%d\",&n);\n\t\n\tif(n==1||n==0)\n\tprintf(\"1\\n%d\\n\",n);\n\telse{\n\t\n\tflag=pd(n);\n\t\n\tif(flag==1)\n\t{\n\tprintf(\"%d\\n\",n);\n\tfor(i=0;i<n;i++)\n\t{   if(i==n-1)\n\t\tprintf(\"1\\n\");\n\t\telse\n\t\tprintf(\"1 \");\n\t}\n\t}\n\telse\n\t{\n\t\tmin=n;\n\t\ta=1;\n\t\tfor(i=2;i<n;i++)\n\t\t{\n\t\t\tif(n%i==0)\n\t\t\t{h=n/i;\n\t\t\tl=i;\n\t\t\t}\n\t\t\tif(h<=9&&h>=2)\n\t\t\t{\n\t\t\t\tif(min>l)\n\t\t\t\t{\n\t\t\t\tmin=l;\n\t\t\t\ta=n/i;}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",min);\n\t\tfor(i=0;i<min;i++)\n\t\t{\n\t\t\tif(i==min-1)\n\t\t\tprintf(\"%d\\n\",a);\n\t\t\telse\n\t\t\tprintf(\"%d \",a);\n\t\t}\n\t\t\n\t}}return 0;}\nint pd(int n)\n\t{\n\t  \tint i;\n\t  \tfor(i=2;i<n;i++)\n\t  \t{\n\t  \t\tif(n%i==0)\n\t  \t\tbreak;\n\t\t  }\n\t\t  if(i==n)\n\t\t  return 1;\n\t\t  else\n\t\t  return 0;\n}"}
{"similarity_score": 0.2256169212690952, "equal_cnt": 11, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "2f491e0693bc0bc2b3bd842d19922d9a", "bug_code_uid": "a3dad6750eef13e15bd34a882baa0f76", "src_uid": "20dd260775ea71b1fb5b42bcac90a6f2", "apr_id": "9c896f707cfb7e68743e578f8415279d", "difficulty": 800, "tags": ["greedy", "math", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<iostream>\n\nusing namespace std;\nconst int maxn=100;\nint t=1e7,n=1e7;\nint a[maxn];\nint main(){\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint m=100;\n\t\tint h=0;\n\t\tint ans=0;\n\t\tcin>>n;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\n\t\t\tif(a[i]<=m){\n\t\t\t\n\t\t\tm=a[i];}}\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\th=a[i]-m;\n\t\t\t\tans+=h;\n\t\t\t\tif(n==1){\n\t\t\t\t\tans=0;\n\t\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n} \n \t\t \t  \t\t\t \t\t\t \t   \t   \t   \t\t\t", "fixed": "#include<stdio.h>\nlong long a[10000005];\nlong long b[10000005]; \nint main(){\n\tint n;\n\tint m;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&m);\n\t\tint w=0;\n\t\tint q=10000005;\n\t\tfor(int p=0;p<m;p++){\n\t\t\tscanf(\"%d\",&a[p]);\n\t\t\tif(a[p]<=q){\n\t\t\t\tq=a[p];\n\t\t\t}\n\t\t}\n\t\tfor(int p=0;p<m;p++){\n\t\t\tw+=a[p];\t\n\t\t}\n\t\tb[i]=w-q*m;\n\t\t\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tprintf(\"%lld\\n\",b[i]);\n\t}\n\treturn 0;\n} \n \t\t\t\t  \t    \t \t \t\t  \t\t \t"}
{"similarity_score": 0.9920141969831411, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9e64f56302d5bbb41f3262e1a6e84cc3", "bug_code_uid": "4a704c50ece47d405fbe4854bc02c0b7", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "3a2e335d948275409cc5544075ac8d8e", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\nlong int n;\nlong int m;\nlong int y ;\nlong int j;\nlong int *ptr;\nlong int k =0;\n    scanf(\"%ld%ld\",&n,&m);\nlong int t = 0;\n    ptr = (long int *)malloc(sizeof(long int)*m);\n    for(y =0; y< m;y++){\n        scanf(\"%ld\",&ptr[y]);\n    }\n    k = k + (ptr[0] - 1);\n    for( t = 1;t < m;t++){\n        if(ptr[t] < ptr[t-1]){\n            k = k + (n - (ptr[t-1] - ptr[t]) );\n        }\n        else if(ptr[t] > ptr[t-1]){\n            k = k + (ptr[t] - ptr[t-1]);\n        }\n    }\nprintf(\"%ld\\n\",k);\n\n\n\n\n\n\n\nreturn 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\nlong int n;\nlong int m;\nlong int y ;\nlong int j;\nlong int *ptr;\nlong long int k =0;\n    scanf(\"%ld%ld\",&n,&m);\nlong int t = 0;\n    ptr = (long int *)malloc(sizeof(long int)*m);\n    for(y =0; y< m;y++){\n        scanf(\"%ld\",&ptr[y]);\n    }\n    k = k + (ptr[0] - 1);\n    for( t = 1;t < m;t++){\n        if(ptr[t] < ptr[t-1]){\n            k = k + (n - (ptr[t-1] - ptr[t]) );\n        }\n        else if(ptr[t] > ptr[t-1]){\n            k = k + (ptr[t] - ptr[t-1]);\n        }\n    }\nprintf(\"%I64d\\n\",k);\n\n\n\n\n\n\n\nreturn 0;\n\n}\n"}
{"similarity_score": 0.172, "equal_cnt": 18, "replace_cnt": 15, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "4d8b337cf67b30425295f96e99ce0bbc", "bug_code_uid": "e2cd61ab7b67c1541eb38208a6b1621e", "src_uid": "b6ac7c30b7efdc7206dbbad5cfb86db7", "apr_id": "ce3ff5b41c3257b3870c6f16651fc581", "difficulty": 1500, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main(){\n\n    int inarr[200000],arr[200000];\n    int c,count;unsigned long long sum,n;\n    scanf(\"%lld\",&n);\n    c=0;\n    while(c<n-1)scanf(\"%d\",&inarr[c++]);\n    c=1;int indicate=0;\n    while(c<=n){\n        int count=1;\n        arr[0]=c;\n        sum=0;\n        while(count<n){\n            arr[count]=arr[count-1]+inarr[count-1];\n            if(arr[count]<=0 || arr[count]>n || inarr[count-1]==0)break;\n            sum+=arr[count];\n            count++;\n        }\n        sum+=arr[0];\n        if(count==n && sum==((n*(n+1))/2)){\n           indicate=1;\n           break;\n        }\n        c++;\n    }\nif(indicate){\nc=0;\nwhile(c<n){\n    printf(\"%d\",arr[c]);\n    c++;\n    if(c==n)printf(\"\\n\");\n    else printf(\" \");\n}\n}\nelse printf(\"-1\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nlong long arr[200010]={};\nint main(){\n\n    long long  n;int inarr[200010];\n  scanf(\"%lld\",&n);\n  for(int i=1;i<n ; i++){\n        scanf(\"%d\",&inarr[i]);\n        arr[i]=arr[i-1]+inarr[i];\n\n  }\n  \n\n  long long sum=0;\n  for(int i=1;i<n; i++){\n      sum+=arr[i];\n      arr[i]=0;\n  }\ninarr[0]=(n*(n+1)-2*sum)/(2*n);\ndouble x=(n*((double)n+1)-2*(double)sum)/(2*(double)n);\nif(inarr[0]<1 || inarr[0]>n || (fabs(inarr[0]-x)>1e-12)){\n  printf(\"-1\");\n  return 0;\n}\narr[inarr[0]]=1;\nfor(int i=1;i<n; i++){\n  inarr[i]=inarr[i]+inarr[i-1];\n  if(arr[inarr[i]]==1){\n    printf(\"-1\");\n    return 0;\n  }\n  else{\n    arr[inarr[i]]=1;\n  }\n  }\nfor(int i=0;i<n ; i++){\n  printf(\"%d \",inarr[i]);\n}\n\n    return 0;\n}\n"}
{"similarity_score": 0.6313901345291479, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "67b5c18b03d2f641be80170ce731b69f", "bug_code_uid": "aad6e0f7f7c07a72ea57f7b4e0c58915", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "bdf459a667ee6bbcb6471eddc15db1a4", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n  long long a[],i,j,x=0,y=0,b,c,z;\n  int n;\n  scanf(\"%d\",&n);\n  for (i=0;i<=1000000000000;i++){\n    a[i]=1;\n  }\n  for (i=2;i*i<=1000000000000;i++){\n    if (a[i]==1)\n      for (j=i*i;j<=n;j+=i){\n\ta[j]=0;\n      }\n  }\n  for (i=0;i<n;i++){\n    scanf(\"%I64d\",&z);\n    b=sqrt(z);\n    if (b==2)\n      printf(\"YES\\n\");\n    else if (b*b!=z)\n      printf(\"NO\\n\");\n    else{  \n      if (a[n]==1)\n\tprintf(\"YES\\n\");\n      else\n\tprintf(\"NO\\n\");\n    }\n    if (j==b)\n      printf(\"NO\\n\");\n    else\n      printf(\"YES\\n\");\n  }\n    \n    \nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n  int a[1000000],i,j,x=0,y=0,c;\n  int n;\n  long long z,b;\n  scanf(\"%d\",&n);\n  for (i=0;i<=1000000;i++){\n    a[i]=1;\n  }\n  for (i=2;i*i<=1000000;i++){\n    if (a[i]==1)\n      for (j=i*i;j<=1000000;j+=i){\n\ta[j]=0;\n      }\n  }\n \n  for (i=0;i<n;i++){\n    scanf(\"%I64d\",&z);\n    if (z==1){\n      printf(\"NO\\n\");\n      continue;\n    }\n    b=sqrt(z);\n    if (b*b!=z)\n      printf(\"NO\\n\");\n    else{  \n      if (a[b]==1)\n\tprintf(\"YES\\n\");\n      else\n\tprintf(\"NO\\n\");\n    }\n  }\n\n  \nreturn 0;\n}\n"}
{"similarity_score": 0.9994202898550725, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "94a91d3c835c1c80820582ebabfb291d", "bug_code_uid": "72a2bace1cffd9150825cbc1e497f2ec", "src_uid": "02a9081aed29ea92aae13950a6d48325", "apr_id": "cdc12ff26860dba8eda7d04e63cf3ef8", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint n,i,j,count=0,count2=0;\n\tchar l1,l2;int flag=0;\n\t\n\tscanf(\"%d\",&n);\n\tchar arr[n+1][n+1];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",arr[i]);\n\t}\n\tl1=arr[0][0];\n\tl2=arr[1][0];\n\tif(l1==l2)\n\t{printf(\"NO\");\n\tretur 0;}\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{ \n\t\t\t\tif(i==j)\n\t\t\t\t{\n\t\t\t\t\tif(arr[i][j]==l1)\n\t\t\t\t\tcount++;\n\t\t\t\t\telse\n\t\t\t\t\t{\t\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(i+j==n-1)\n\t\t\t\t{\n\t\t\t\t\tif(arr[i][j]==l1)\n\t\t\t\t\tcount++;\n\t\t\t\t\telse\n\t\t\t\t\t{\t//printf(\"%c%d%d\",arr[i][j],i,j);\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{if(arr[i][j]==l2)\n\t\t\t\t\t\tcount2++;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tif (flag==1)\n\t\t\t{\n\t\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\n\t}\n\tif((count==(2*n-1))&&(count2==(n*n)-(2*n-1)))\n\tprintf(\"YES\");\n\telse\n\tprintf(\"NO\");\n\t\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint n,i,j,count=0,count2=0;\n\tchar l1,l2;int flag=0;\n\t\n\tscanf(\"%d\",&n);\n\tchar arr[n+1][n+1];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",arr[i]);\n\t}\n\tl1=arr[0][0];\n\tl2=arr[1][0];\n\tif(l1==l2)\n\t{printf(\"NO\");\n\treturn 0;}\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{ \n\t\t\t\tif(i==j)\n\t\t\t\t{\n\t\t\t\t\tif(arr[i][j]==l1)\n\t\t\t\t\tcount++;\n\t\t\t\t\telse\n\t\t\t\t\t{\t\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(i+j==n-1)\n\t\t\t\t{\n\t\t\t\t\tif(arr[i][j]==l1)\n\t\t\t\t\tcount++;\n\t\t\t\t\telse\n\t\t\t\t\t{\t//printf(\"%c%d%d\",arr[i][j],i,j);\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{if(arr[i][j]==l2)\n\t\t\t\t\t\tcount2++;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tif (flag==1)\n\t\t\t{\n\t\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\n\t}\n\tif((count==(2*n-1))&&(count2==(n*n)-(2*n-1)))\n\tprintf(\"YES\");\n\telse\n\tprintf(\"NO\");\n\t\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9620535714285714, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "5d0e5b6b6e8f4ed5e8bebfda1eda76f6", "bug_code_uid": "0b300f7bc55eb754b877f47b408f6f5d", "src_uid": "43bb8fec6b0636d88ce30f23b61be39f", "apr_id": "5f7bfe1a8e614667a2739cfb12f55906", "difficulty": 1100, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint k,j,i,flag,p;\n\tchar s[1001];\n\tscanf(\" %[^\\n]s\",s);\n\tscanf(\"%d\",&k);\n\tif(strlen(s)%k!=0)\n\t\tprintf(\"NO\\n\");\n\telse\n\t{\n\t\tp=strlen(s)/k;\n\t\tfor(i=0;s[i]!='\\0';i+=p)\n\t\t{\n\t\t\tflag=0;\n\t\t\tint y=0;\n\t\t\tfor(j=i;j<(i+p)/2;j++)\n\t\t\t{\n\t\t\t\tif(s[j]!=s[p+i-1-y])\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t\tif(flag==1)\n\t\t\t\tbreak;\n\n\t\t}\n\t\tif(flag==1)\n\t\t\tprintf(\"NO\\n\");\n\t\telse\n\t\t\tprintf(\"YES\\n\");\n\t}\n\treturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint k,j,i,flag,p;\n\tchar s[1001];\n\tscanf(\" %[^\\n]s\",s);\n\tscanf(\"%d\",&k);\n\tif(strlen(s)%k!=0)\n\t\tprintf(\"NO\\n\");\n\telse\n\t{\n\t\tp=strlen(s)/k;\n\t\tfor(i=0;s[i]!='\\0';i+=p)\n\t\t{\n\t\t\tflag=0;\n\t\t\tfor(j=0;j<p/2;j++)\n\t\t\t{\n\t\t\t\tif(s[j+i]!=s[i+p-j-1])\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tif(flag==1)\n\t\t\t\tbreak;\n\n\t\t}\n\t\tif(flag==1)\n\t\t\tprintf(\"NO\\n\");\n\t\telse\n\t\t\tprintf(\"YES\\n\");\n\t}\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.9004237288135594, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "92472a7ec7c4f70b56dcb2fecaea0855", "bug_code_uid": "4b601496e894ce61de3255901f3ae151", "src_uid": "f99a23bc65a1f5cdbf7909dba573ce51", "apr_id": "dbd88f37eb499c4d91b0786df4fb5325", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define max(a, b) ((a) < (b) ? (b):(a)) \n\nint main(void){\n    int n, parcial = 2, maxi = 2;\n    long long x, y, z;\n    scanf(\"%d%I64d%I64d\", &n, &x, &y);\n    for(int i = 0; i < n-2; i++){\n        scanf(\"%I64d\", &z);\n        if(z == x+y){\n            parcial++;\n            maxi = max(maxi, parcial);\n        }\n        else parcial = 2;\n        x = y;\n        y = z;\n    }\n    printf(\"%d\\n\", maxi);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\n#define max(a, b) ((a) < (b) ? (b):(a)) \n\nint main(void){\n    int n, parcial = 2, maxi = 2;\n    long long x, y, z;\n    scanf(\"%d%I64d\", &n, &x);\n    if(n == 1){\n        printf(\"1\\n\");\n        return 0;\n    }\n    scanf(\"%I64d\", &y);\n    for(int i = 0; i < n-2; i++){\n        scanf(\"%I64d\", &z);\n        if(z == x+y){\n            parcial++;\n            maxi = max(maxi, parcial);\n        }\n        else parcial = 2;\n        x = y;\n        y = z;\n    }\n    printf(\"%d\\n\", maxi);\n    return 0;\n}"}
{"similarity_score": 0.6638830897703549, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "cd34751c777eb703bb108c41c6c3b8f8", "bug_code_uid": "fca5488e9bb16cb6445b1854b715a463", "src_uid": "0beecbd62aa072a2f3aab542eeb56373", "apr_id": "60e68a480cbbc5ecba6b8c4f95f0cd56", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid main(){\nint t;\nscanf(\"%d\",&t);\nwhile(t)\n{\n    int n,r=0;\n    scanf(\"%d\",&n);\n    int m = n;\n    while((n/10)>=9){\n        r = r+n/10;\n        n = n%10 + n/10;\n    }\n    if(m%10==9)\n        r = r+1;\n    printf(\"%d\",r+m+1);\n    t--;\n}\n}", "fixed": "#include<stdio.h>\n\nvoid main(){\nint t;\nscanf(\"%d\",&t);\nwhile(t--)\n{\n    int n,r=0;\n    scanf(\"%d\",&n);\n    int m = n;\n    while(n>9){\n        r = r+n/10;\n        n = n%10 + n/10;\n    }\n    printf(\"%d\\n\",r+m);\n}\nreturn;\n}\n"}
{"similarity_score": 0.9981818181818182, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9fef3bfadde7e0bad5b22ce9dd34d76d", "bug_code_uid": "3507115c4648dedccf8d228b3fb42218", "src_uid": "ec09b2df4ed3abbca4c47f48f12010ca", "apr_id": "84872ae103853afe9abfe2ecaa91b864", "difficulty": 800, "tags": ["sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid selectionSort(int a[],int n)\n{\n\tfor(int i=0;i<n-1;i++)\n\t{\n\t\tif(a[i]>a[i+1])\n\t\t{\n\t\t\tint temp=a[i];\n\t\t\ta[i]=a[i+1];\n\t\t\ta[i+1]=temp;\n\t\t}\n    }\n}\nint main()\n{\n\tint n,m;\n\tscanf(\"%d\",&n);\n\tif(n<1||n>100) return 0;\n\tint a[n];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]<1||a[i]>200)\n\t\treturn 0;\n\t}\n\tscanf(\"%d\",&m);\n\tif(m<1||m>100) return 0;\n\tint b[m];\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t\tif(b[i]<1||b[i]>200)\n\t\treturn 0;\n\t}\n\tselectionSort(a,n);\n\tselectionSort(b,n);\n\tprintf(\"%d %d\",a[n-1],b[m-1]);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nvoid selectionSort(int a[],int n)\n{\n\tfor(int i=0;i<n-1;i++)\n\t{\n\t\tif(a[i]>a[i+1])\n\t\t{\n\t\t\tint temp=a[i];\n\t\t\ta[i]=a[i+1];\n\t\t\ta[i+1]=temp;\n\t\t}\n    }\n}\nint main()\n{\n\tint n,m;\n\tscanf(\"%d\",&n);\n\tif(n<1||n>100) return 0;\n\tint a[n];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]<1||a[i]>200)\n\t\treturn 0;\n\t}\n\tscanf(\"%d\",&m);\n\tif(m<1||m>100) return 0;\n\tint b[m];\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t\tif(b[i]<1||b[i]>200)\n\t\treturn 0;\n\t}\n\tselectionSort(a,n);\n\tselectionSort(b,m);\n\tprintf(\"%d %d\",a[n-1],b[m-1]);\n\treturn 0;\n}"}
{"similarity_score": 0.8253195374315276, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "bb180825eaed06191e88b8e45c307dbf", "bug_code_uid": "914cf832913ff1148f185348cdb2a88e", "src_uid": "4cf0fe49f7ebf058317ac848043031a5", "apr_id": "b991171d527865debed39e39f3aece1a", "difficulty": 1300, "tags": [], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int n, i, j, h = 0, s_h = 0, c = 0, x = 0;\n    long long int sum = 0;\n    scanf(\"%i\", &n);\n    int a[n], b[200002] = {0};\n    for(i=0; i<n; ++i){\n        scanf(\"%i\", &a[i]);\n        if(h<a[i]) h = a[i];\n        sum = sum + a[i];\n    }\n    for(i=0; i<n; ++i){\n        if(h != a[i]){\n            if(h == (sum - a[i] - h)){\n                c++;\n                b[x++] = i+1;\n            }\n        }\n        else{\n            for(j=0; j<n; ++j){\n                if(s_h<a[j] && a[j] != h) s_h = a[j];\n            }\n            if(s_h == (sum - s_h - h)){\n                c++;\n                b[x++] = i+1;\n            }\n        }\n    }\n    printf(\"%i\\n\", c);\n    for(i=0; i<x; ++i){\n        printf(\"%i \", b[i]);\n    }\n}", "fixed": "#include <stdio.h>\n\nint main(){\n    int n, i, j, h = 0, i_h, s_h = 0, i_sh, c = 0, x = 0;\n    long long int sum = 0;\n    scanf(\"%i\", &n);\n    int a[n], b[200002] = {0};\n    for(i=0; i<n; ++i){\n        scanf(\"%i\", &a[i]);\n        if(h<a[i]){\n            h = a[i];\n            i_h = i;\n        }\n        sum = sum + a[i];\n    }\n    for(i=0; i<n; ++i){\n        if(i_h != i){\n            if(a[i_h] == (sum - a[i] - a[i_h])){\n                c++;\n                b[x++] = i+1;\n            }\n        }\n        else{\n            for(j=0; j<n; ++j){\n                if(s_h<a[j] && j!=i_h){\n                    s_h = a[j];\n                    i_sh = j;\n                }\n            }\n            if(a[i_sh] == (sum - a[i_sh] - a[i_h])){\n                c++;\n                b[x++] = i+1;\n            }\n        }\n    }\n    printf(\"%i\\n\", c);\n    for(i=0; i<x; ++i){\n        printf(\"%i \", b[i]);\n    }\n}"}
{"similarity_score": 0.9721706864564007, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "e7720812b25e4652e4a9d1b6d0323895", "bug_code_uid": "106782d27797e3d94d6979a229774670", "src_uid": "2b55012c899645bac8d293e85e73148f", "apr_id": "90df79a6cf345b8ee73cecfe6f7e9264", "difficulty": 1000, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint jar[n], sum = 0;\n\tint i, j, k;\n\t\n\tfor(i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &jar[i]);\n\t\tsum += jar[i];\n\t}\n\t\n\tif(n==1) {\n\t\tprintf(\"%d\\n\", -1);\n\t}\n\telse if(n==2) {\n\t\tif(jar[0]==jar[1]) {\n\t\t\tprintf(\"%d\\n\", -1);\n\t\t} \n\t\telse {\n\t\t\tprintf(\"%d\\n%d\\n\", 1, 1);\n\t\t}\n\t}\n\telse {\n\t\tfor(j = 0; j < n - 1; j++) {\n\t\t\tif(jar[j] != sum/2) {\n\t\t\t\tprintf(\"%d\\n\", j+1);\n\t\t\t\tfor(k = 0; k < j+1; k++) {\n\t\t\t\t\tprintf(\"%d \", k+1);\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint jar[n], sum = 0, acc = 0;\n\tint i, j, k;\n\t\n\tfor(i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &jar[i]);\n\t\tsum += jar[i];\n\t}\n\t\n\tif(n==1) {\n\t\tprintf(\"%d\\n\", -1);\n\t}\n\telse if(n==2) {\n\t\tif(jar[0]==jar[1]) {\n\t\t\tprintf(\"%d\\n\", -1);\n\t\t} \n\t\telse {\n\t\t\tprintf(\"%d\\n%d\\n\", 1, 1);\n\t\t}\n\t}\n\telse {\n\t\tfor(j = 0; j < n - 1; j++) {\n\t\t\tacc += jar[j];\n\t\t\tif(acc != sum/2) {\n\t\t\t\tprintf(\"%d\\n\", j+1);\n\t\t\t\tfor(k = 0; k < j+1; k++) {\n\t\t\t\t\tprintf(\"%d \", k+1);\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9838187702265372, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b3e2454334c5e0c5a93ec03e2448e34c", "bug_code_uid": "12634a4ca1716876faf8274c157e0c6b", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "953ed28deda613d8aab68bff46ad00f3", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n, a,b;\n\tscanf(\"%d\",&n);\n\tif(n%2==0){\n\ta=4;\n\tb=n-a;\n\t}\n\telse{\n\t\ta=6;\n\t\tb=n-6;\n\t}\n\tprintf(\"%d %d\\n\",a,b);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n, a,b;\n\tscanf(\"%d\",&n);\n\tif(n%2==0){\n\ta=4;\n\tb=n-a;\n\t}\n\telse{\n\t\ta=9;\n\t\tb=n-a; \n\t}\n\tprintf(\"%d %d\\n\",a,b);\n\treturn 0;\n}\n"}
{"similarity_score": 0.23684210526315788, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "5c0308eff89fb6419bdfa4ae70b9c41f", "bug_code_uid": "c9339bfb1061d69e88b90e7795ed874f", "src_uid": "cda949a8fb1f158f3c06109a2d33f084", "apr_id": "391a318d990cd5db9ac0a764f010ff86", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n   int x1,x2,x3,x4;\n   scanf(\"%d %d %d %d\",&x1,&x2,&x3,&x4);\n   a = x4-x3;\n   b = x4-x2;\n   c = x4-x1;\n   printf(\"%d %d %d\",&a,&b,&c);\n   \n   return 0;\n    \n    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int x,y,z,a,b,c,d;\n    scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n \n    if(a>b&& a>c&& a>d)\n    {x=(a-c);\n    y=(a-b);\n    z=(a-d);\n    printf(\"%d %d %d\",x,y,z);}\n    else if(b>a&& b>c&& b>d)\n    {x=(b-c);\n    y=(b-a);\n    z=(b-d);\n    printf(\"%d %d %d\",x,y,z);}\n    else if(c>b&& c>a&& c>d)\n    {x=(c-a);\n    y=(c-b);\n    z=(c-d);\n    printf(\"%d %d %d\",x,y,z);}\n    else if(d>b&& d>c&& d>a)\n    {x=(d-c);\n    y=(d-b);\n    z=(d-a);\n    printf(\"%d %d %d\",x,y,z);}\n}"}
{"similarity_score": 0.6524614254224834, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "9f8efc6e6133c87991be044fc4e54c85", "bug_code_uid": "c498686f730466ee4133aee3263a88b6", "src_uid": "07597a8d08b59d4f8f82369bb5d74a49", "apr_id": "f056120a6de4ed418f3fdedcba27ff1c", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    int a,b,c;\n    int sum, greater;\n    for(int i=0;i<n;i++) {\n        scanf(\"%d%d%d\", &a, &b, &c);\n         if(a-b>0) {\n            sum=a-b;\n            greater=a;\n        }\n        else {\n            sum=b-a;\n            greater=b;\n        }\n        int arr[sum*2];\n        for(int j=0;j<sum*2;j++) \n            arr[j]=j+1;\n        if(c<=sum*2 && greater<=(sum*2)) {\n            if(c==(sum*2)/2)\n                printf(\"%d\\n\", sum*2);\n            else if(c>(sum*2)/2)\n                printf(\"%d\\n\", arr[c-sum-1]);\n            else\n                printf(\"%d\\n\", arr[c+sum-1]);\n        }\n        else\n            printf(\"%d\\n\", -1);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    int a,b,c;\n    int sum, greater;\n    for(int i=0;i<n;i++) {\n        scanf(\"%d%d%d\", &a, &b, &c);\n        if(a-b>0) {\n            sum=a-b;\n            greater=a;\n        }\n        else {\n            sum=b-a;\n            greater=b;\n        }\n        \n        if(c<=sum*2 && greater<=(sum*2)) {\n            if(c==(sum*2)/2)\n                printf(\"%d\\n\", sum*2);\n            else if(c>(sum*2)/2)\n                printf(\"%d\\n\", c-sum);\n            else\n                printf(\"%d\\n\", c+sum);\n        }\n        else\n            printf(\"%d\\n\", -1);\n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.9875717017208413, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "4cd5ff51777c2f40016563b552a3ab16", "bug_code_uid": "6bb80b1fd26269245dd4ba6057df8e7b", "src_uid": "72e62f8dab43725ae5f4dd4d73d3d626", "apr_id": "2c4c3aa40f0c96cb71e794c954833921", "difficulty": 2700, "tags": ["data structures", "dsu"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define N 105555\n#define Block 256\nint n,m;\nint a[N];\nint next[N];\nint wei[N];\n\nint min(int x,int y){return x<y?x:y;}\nint gl(int x){ return x / Block * Block; }\nint gr(int x){ return min( (x / Block + 1) * Block - 1 , n-1 ); }\n\nvoid update(int x){\n\tint r=gr(x),i;\n\twei[x] = 0;\n\tfor (i=x+a[x];!wei[x] || i<=r;i+=a[i]){\n\t\twei[x]++;\n\t\tnext[x] = i;\n\t}\n}\n\nint go(int x){\n\tif (next[x]>=n){\n\t\tprintf(\"%d \",x+1);\n\t\treturn 1;\n\t}\n//\tprintf(\"go %d %d %d\\n\",x,next[x],wei[x]);\n\treturn go(next[x])+wei[x];\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tint x,y,l,r,i,j;\n\tfor (i=0;i<n;i++) scanf(\"%d\",&a[i]);\n\tfor (i=0;i<n;i++) update(i);\n\tfor (i=0;i<m;i++){\n\t\tscanf(\"%d\",&x);\n\t\tif (x == 0){\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tx--;\n\t\t\ta[x]=y;\n\t\t\tupdate(x);\n\t\t\tint r=gr(x);\n\t\t\tfor (j=x-1;j>=gl(x);j--)\n\t\t\t\tif (j+a[j]<=x){\n\t\t\t\t\twei[j] = 1;\n\t\t\t\t\tnext[j] = j + a[j];\n\t\t\t\t\tif (next[next[j]]<=r){\n\t\t\t\t\t\twei[j] = wei[next[j]] + 1;\n\t\t\t\t\t\tnext[j] = next[next[j]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t} else {\n\t\t\tscanf(\"%d\",&x);\n\t\t\tx--;\n\t\t\tprintf(\"%d\\n\",go(x));\n\t\t}\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#define N 105555\n#define Block 512\nint n,m;\nint a[N];\nint next[N];\nint wei[N];\n\nint min(int x,int y){return x<y?x:y;}\nint gl(int x){ return x / Block * Block; }\nint gr(int x){ return min( (x / Block + 1) * Block - 1 , n-1 ); }\n\nvoid update(int x){\n\tint r=gr(x),i;\n\twei[x] = 0;\n\tfor (i=x+a[x];!wei[x] || i<=r;i+=a[i]){\n\t\twei[x]++;\n\t\tnext[x] = i;\n\t}\n}\n\nint go(int x){\n\tif (next[x]>=n){\n\t\tprintf(\"%d \",x+1);\n\t\treturn 1;\n\t}\n//\tprintf(\"go %d %d %d\\n\",x,next[x],wei[x]);\n\treturn go(next[x])+wei[x];\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tint x,y,l,r,i,j;\n\tfor (i=0;i<n;i++) scanf(\"%d\",&a[i]);\n\tfor (i=0;i<n;i++) update(i);\n\tfor (i=0;i<m;i++){\n\t\tscanf(\"%d\",&x);\n\t\tif (x == 0){\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tx--;\n\t\t\ta[x]=y;\n\t\t\tupdate(x);\n\t\t\tint r=gr(x);\n\t\t\tint l=gl(x);\n\t\t\tfor (j=x-1;j>=l;j--)\n\t\t\t\tif (j+a[j]<=x){\n\t\t\t\t\twei[j] = 1;\n\t\t\t\t\tnext[j] = j + a[j];\n\t\t\t\t\tif (next[next[j]]<=r){\n\t\t\t\t\t\twei[j] = wei[next[j]] + 1;\n\t\t\t\t\t\tnext[j] = next[next[j]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t} else {\n\t\t\tscanf(\"%d\",&x);\n\t\t\tx--;\n\t\t\tprintf(\"%d\\n\",go(x));\n\t\t}\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9709035222052067, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "75762378611c1d8cd9e27e855cd201aa", "bug_code_uid": "6bf1333eba854b54280009bc7cea8d89", "src_uid": "08cd22b8ee760a9d2dacb0d050dcf37a", "apr_id": "2f480c44242f17274b86910da614cf80", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tchar s1[100];\r\n\tint n,i,j,t,k;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"%d%d\",&n,&k);\r\n\t\tint f1=0;\r\n\t\tint len=strlen(s1);\r\n\t\tfor(i=0;i<len;i++){\r\n\t\t\tif(s1[i]!=s1[n-1-i]) f1=1;\r\n\t\t}\r\n\t\tif(f1==0||k==0) printf(\"1\\n\");\r\n\t\telse printf(\"2\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tchar s1[100];\r\n\tint n,i,j,t,k;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"%d%d\",&n,&k);\r\n\t\tscanf(\"%s\",s1);\r\n\t\tint f1=0;\r\n\t\tint len=strlen(s1);\r\n\t\tfor(i=0;i<len;i++){\r\n\t\t\tif(s1[i]!=s1[n-1-i]) f1=1;\r\n\t\t}\r\n\t\tif(f1==0||k==0) printf(\"1\\n\");\r\n\t\telse printf(\"2\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.42971887550200805, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "e86c8aa6f3a8652325ec810052efffee", "bug_code_uid": "5fa1ae75690c20f28f22258f27f5b021", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "99fd5d5f281ba19f35ffb5fe3ba478ae", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,max,min,c=0;\n    scanf(\"%I164d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I164d\",&a[i]);\n        max=a[0];\n        min=a[0];\n        if(a[i]>max)\n            max=a[i];\n        if(a[i]<min)\n            min=a[i];\n    }\n    int k=max-min;\n    for(i=0;i<n;i++)\n        for(j=i;j<n;j++)\n        if(abs(a[i]-a[j])==k)\n        c++;\n    printf(\"%d %d\",k,c);\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,i,j,max=0,min=1000000000,c=0,d=0,g=0,s=0;\n    scanf(\"%I64d\",&n);\n    long long int a;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a);\n        if(a>max)\n        {\n            max=a;\n            c=0;\n        }\n        if(a<min)\n        {\n            min=a;\n            d=0;\n        }\n        if(a==max)\n            c++;\n        if(a==min)\n            d++;\n        s=s+i;\n    }\n    long long int k=max-min;\n    if(min!=max)\n       g=d*c;\n    else\n        g=s;\n    printf(\"%I64d %I64d\\n\",k,g);\n    return 0;\n\n}\n"}
{"similarity_score": 0.999104744852283, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1cf9b3bdabefaa056c9fd965716c2934", "bug_code_uid": "2b4cf315f0cfc43aea55b36c0766973e", "src_uid": "88686e870bd3bfbf45a9b6b19e5ec68a", "apr_id": "25e30b2f64867afe9d0781e5ce8d7dd9", "difficulty": 900, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a,b,i,count=0,c1=0;\n    scanf(\"%d\",&n);\n    int A[n];\n    \n    for(i=0; i<n; i++) {\n        scanf(\"%d %d\",&a,&b);\n        A[i]=a;\n        if(a==b) {\n            count++;\n        }\n    }\n    \n    if(count!=n) {\n        printf(\"rated\\n\");\n    }\n    \n    else if(count==n) {\n        \n        for(i=0; i<n-1; i++) {\n            if(A[i]>=A[i+1]) {\n                c1++;\n            }\n        }\n        if(c1==n-1) {\n            printf(\"may be\\n\");\n        }\n        else {\n            printf(\"unrated\\n\");\n        }\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a,b,i,count=0,c1=0;\n    scanf(\"%d\",&n);\n    int A[n];\n    \n    for(i=0; i<n; i++) {\n        scanf(\"%d %d\",&a,&b);\n        A[i]=a;\n        if(a==b) {\n            count++;\n        }\n    }\n    \n    if(count!=n) {\n        printf(\"rated\\n\");\n    }\n    \n    else if(count==n) {\n        \n        for(i=0; i<n-1; i++) {\n            if(A[i]>=A[i+1]) {\n                c1++;\n            }\n        }\n        if(c1==n-1) {\n            printf(\"maybe\\n\");\n        }\n        else {\n            printf(\"unrated\\n\");\n        }\n    }\n}"}
{"similarity_score": 0.807843137254902, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "fae31331b5378f42a19fb93ea97b5b41", "bug_code_uid": "0f60863f9618a2058f805b50c1ea450f", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "67693e03ea185418b393b22b33a268d2", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    long int n,d,i,c=0;\n    scanf(\"%ld %ld\\n\",&n,&d);\n    long int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        if(i)for(;a[i]<=a[i-1];c++)a[i]+=d;\n    }\n    printf(\"%d\",c);\n}", "fixed": "#include <stdio.h>\nint main(){\n    long int n,d,i,c=0,l;\n    scanf(\"%ld %ld\\n\",&n,&d);\n    long int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%ld\",&a[i]);\n        if(i)if(a[i]<=a[i-1]){\n            c+=(l=(a[i-1]-a[i])/d+1);\n            a[i]+=d*l;\n        }\n    }\n    printf(\"%ld\",c);\n}"}
{"similarity_score": 0.4007884362680683, "equal_cnt": 17, "replace_cnt": 8, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "36df06ab2dfdf9c29a0754f62cb11fea", "bug_code_uid": "4abf3115405298f5b87a2f6b3624773d", "src_uid": "99d2b0386d101da802ac508ef8f7325b", "apr_id": "8de9f8f886a05557b3bb51a8d7ca8d95", "difficulty": null, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t;\n    scanf (\"%d\",&t);\n    for (int j=0;j<t;j++)\n    {\n        int n;\n        scanf (\"%d\",&n);\n        int arr[n],a[n],b;\n        memset(arr, 0, n*sizeof(arr[0]));\n        for (int i=0;i<n;i++)\n        {\n            scanf (\"%d\",&a[i]);\n            arr[a[i]]++;\n            //arr[a]=arr[a]*10+i+1;\n        }\n        b=-1;\n        for (int i=0;i<=n;i++)\n        {\n            if ((arr[i])==1)\n            {\n                b=i;\n                break;\n            }\n        }\n        for (int i=0;i<n;i++)\n        {\n            if (a[i]==b)\n            {\n                printf (\"%d\",i+1);\n            }\n        }\n        if (n==1)\n        {\n            printf (\"1\");\n        }\n        else if (b==-1)\n        {\n            printf (\"-1\");\n        }\n        printf (\"\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf (\"%d\",&t);\n    for (int j=1;j<=t;j++)\n    {\n        int n,pos=-1;\n        scanf (\"%d\",&n);\n        int a[n+1],b[n+1];\n        for (int i=1;i<=n;i++)\n        {\n            a[i]=0;\n        }\n        for (int i=1;i<=n;i++)\n        {\n            scanf (\"%d\",&b[i]);\n            a[b[i]]++;\n        }\n        for (int i=1;i<=n;i++)\n        {\n            if (a[i]==1)\n            {\n                pos=i;\n                break;\n            }\n        }\n        for (int i=1;i<=n;i++)\n        {\n            if (b[i]==pos)\n            {\n                pos=i;\n                break;\n            }\n        }\n        printf (\"%d\\n\",pos);\n    }\n}\n"}
{"similarity_score": 0.7197309417040358, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "e2d7f46d092eb2278daf81f5864cdaad", "bug_code_uid": "d323cfa03b8376200cdb8ff5342c8cd3", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "09e8d4d3d1364adcd2a200ae9e9ecd5e", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<string.h>\nint main()\n{\n    int n,i,count=1,max;\n    long long int ara[100001];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ara[i]);\n    }\n    max=1;\n    for(i=0;i<=(n-1);i++){\n        if(ara[i+1]>=ara[i]){\n            count++;\n        }\n        else{\n            if(count>max){\n                max=count;\n                count=1;\n            }\n        }\n    }\n    printf(\"%d\",max);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,count=1,max=0;\n    scanf(\"%d\",&n);\n    int ara[n+1];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ara[i]);\n    }\n    if(n==1)\n    {\n         max=1;\n    }\n    for(i=0;i<(n-1);i++){\n        if(ara[i]<=ara[i+1]){\n            count++;\n        }\n        else if(ara[i]>=ara[i+1]){\n                count=1;\n            }\n            if(max<count){\n                max=count;\n            }\n\n    }\n    printf(\"%d\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.3472022955523673, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "83a54bf0199bce671198182c0a8c8c23", "bug_code_uid": "e86a6f3aebdd2c3ac00c52ce005080e1", "src_uid": "c4ba92632e10b1710686930f0c4536fa", "apr_id": "d358fe6236b48baf0838247049fb8f04", "difficulty": 1500, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define __USE_MINGW_ANSI_STDIO 0\r\n#include <stdio.h>\r\n#include <tgmath.h>\r\n\r\n#define MOD 1000000007\r\n\r\nvoid testcase() {\r\n    int n, m;\r\n    scanf(\"%d%d\", &n, &m);\r\n    int or = 0;\r\n    for (int i = 0; i < m; ++i) {\r\n        int l, r, x;\r\n        scanf(\"%d%d%d\", &l, &r, &x);\r\n        or |= x;\r\n    }\r\n    printf(\"%lld\\n\", (long long) powl(2, n - 1) % MOD * or % MOD);\r\n    return;\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; ++i) testcase();\r\n    return 0;\r\n}", "fixed": "#define __USE_MINGW_ANSI_STDIO 0\r\n#include <stdio.h>\r\n#include <tgmath.h>\r\n\r\n#define MOD 1000000007\r\n\r\n// Calculate base ^ pow % mod\r\nlong long mPow(long long base, int pow) {\r\n    long long res = 1;\r\n    base %= MOD;\r\n    // constantly decompose base ^ pow = (base ^ 2) ^ (pow / 2)\r\n    while (pow > 0) {\r\n        // make sure if it is odd, then base ^ pow = base ^ (pow - 1) * base\r\n        if (pow % 2 == 1) res = res * base % MOD;\r\n        pow /= 2;\r\n        base = (base * base) % MOD;\r\n    }\r\n    return res;\r\n}\r\n\r\nvoid testcase() {\r\n    int n, m;\r\n    scanf(\"%d%d\", &n, &m);\r\n    int or = 0;\r\n    for (int i = 0; i < m; ++i) {\r\n        int l, r, x;\r\n        scanf(\"%d%d%d\", &l, &r, &x);\r\n        or |= x;\r\n    }\r\n    printf(\"%lld\\n\", mPow(2, n - 1) * or % MOD);\r\n    return;\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; ++i) testcase();\r\n    return 0;\r\n}"}
{"similarity_score": 0.45057471264367815, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "0a016c6e68b4996d2aed2dc855eac90c", "bug_code_uid": "4ebdfd7d2050a7b2b4a0a26d360b4754", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "0f8150270cad0635bb1648136d992ba0", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,value=0;\n    char s[4];\n    scanf(\"%d\",&n);\n    gets(s);\n    for(int i=0;i<n;i++){\n        gets(s);\n        for(int j=0;i<3;j++){\n            if(s[j]=='+'){\n                value++;\n                break;\n            }\n            else if(s[j]=='-'){\n                value--;\n                break;\n                \n            }\n        }\n    }\n    printf(\"%d\",value);\n    return 0;\n \n        \n    }", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n    int n,value=0;\n    char s[4];\n    scanf(\"%d\",&n);\n    \n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",&s);\n        if((strcmp(s,\"X++\")==0)||(strcmp(s,\"++X\")==0)){\n            value+=1;\n        }\n        else if((strcmp(s,\"--X\")==0)||(strcmp(s,\"X--\")==0)){\n            value-=1;\n        }\n        value=value;}\n        printf(\"%d\\n\",value);\n        return 0;\n}\n        \n        "}
{"similarity_score": 0.957592339261286, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5bba11c1cc116ae23dca343380462ce0", "bug_code_uid": "4cbef0cbdbd734e7a1ddebff3c4428a5", "src_uid": "8e423e4bec2d113612a4dc445c4b86a9", "apr_id": "6d851672031be17a770971d5ac263340", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    unsigned int n,t;\n    \n    scanf(\"%d %d\",&n,&t);\n    \n    int array[n];\n    \n    for(int i = 0; i < n; i++)\n        scanf(\"%d\",&array[i]);\n        \n    for (int i = 0; i < n; i++) {\n        t -= (86400 - array[i]);\n        if (t<1) {\n            printf(\"%d\", i + 1);\n            return 0;\n        }\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long int t;\n    unsigned char n;\n    \n    scanf(\"%d %d\",&n,&t);\n    \n    int array[n];\n    \n    for(int i = 0; i < n; i++)\n        scanf(\"%d\",&array[i]);\n        \n    for (int i = 0; i < n; i++) {\n        t -= (86400 - array[i]);\n        if (t < 1) {\n            printf(\"%d\", i + 1);\n            return 0;\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.25759162303664923, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "b6bf60e0e3fc0b23c33a50e5af51eb40", "bug_code_uid": "7811d1715712ca6f39eea04b34993836", "src_uid": "4322861935ca727b0de8556849bc5982", "apr_id": "05b9b3d2c6c323cf41515ad043d0b3e4", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,a,b,c;\n    long int sum;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d %d\",&a,&b,&c);\n        sum=a+2*b+3*c;\n        printf(\"%ld\\n\",sum%2);\n    }\n    return 0;\n}\n\n   \t    \t  \t \t\t\t  \t\t\t     \t\t \t\t", "fixed": "#include<stdio.h>\n#define ll long long\nint main(){\n\tll a,b,c;\n    int t,ans;\n    scanf(\"%d\",&t);\n    while(t-->0){\n\tscanf(\"%lld %lld %lld\",&a,&b,&c);\n        if(a%2==0 && b%2==0 && c%2==0)\n            ans=0;\n        if(a%2==1 && b%2==0 && c%2==0)\n            ans=1;\n        if(a%2==1 && b%2==1 && c%2==0)\n            ans=1;\n        if(a%2==1 && b%2==1 && c%2==1)\n            ans=0;\n        if(a%2==0 && b%2==1 && c%2==1)\n            ans=1;\n        if(a%2==1 && b%2==0 && c%2==1)\n            ans=0;\n        if(a%2==0 && b%2==0 && c%2==1)\n            ans=1;\n        if(a%2==0 && b%2==1 && c%2==0)\n            ans=0;\n            printf(\"%d\\n\",ans);\n    }\n\treturn 0;\n}\n\t \t \t\t\t\t\t\t\t\t\t  \t\t \t  \t\t  \t \t  \t"}
{"similarity_score": 0.32065217391304346, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "4946cf59454dbd99358b23948a2a7fda", "bug_code_uid": "57efb68455a081a486868297df630654", "src_uid": "2589e832f22089fac9ccd3456c0abcec", "apr_id": "44d007451d9cb2a2eb828ed769fc6ef8", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t, x, y, n, i;\n    scanf(\"%d\", &t);\n    while(t--) {\n        scanf(\"%d %d %d\", &x, &y, &n);\n        if((y == 0) && (x > y)) {\n            printf(\"0\\n\");\n        }\n        else {\n            for(i = n; i > 0; i--) {\n                if((i % x) == y) {\n                    printf(\"%d\\n\", i);\n                    break;\n                }\n            }\n        }\n\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main (){\n\n    int t, x, y, n;\n    scanf(\"%d\", &t);\n\n\twhile(t--) {\n\t\tscanf(\"%d %d %d\", &x, &y, &n);\n\n\t\tint z = n % x;\n\n\t\tif (z == y) {\n\t\t\tprintf(\"%d\\n\", n);\n\t\t}\n\t\telse if (y < z) {\n            printf(\"%d\\n\", n -(z - y));\n\t\t}\n\t\telse {\n\t\t    printf(\"%d\\n\", n - z - x + y);\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9488139825218477, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e33e119f8ceffda61deb9a7c1d94f3f7", "bug_code_uid": "3a09128dce7d46a353b0cb5bcccaeaca", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "dbff68febeede31e8ea26c3cd960701b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(){\n    int n ;\n    int a =0 ;\n    char s[4] ;\n    scanf (\"%d\",&n);\n    for (j= 0 ; j < n ; j++){\n        scanf (\"%s\",s);\n        if ((strcmp (s,\"X++\")==0) || (strcmp (s,\"++X\")==0))\n          a=a+1;\n        if ((strcmp (s,\"X--\")==0) ||  (strcmp (s,\"--X\")==0))\n          a=a-1;\n        \n        printf(\"%d\",a);\n        \n        \n    }\n    return 0 ;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(){\n    int n,j ;\n    int a =0 ;\n    char s[4] ;\n    scanf (\"%d\",&n);\n    for (j= 0 ; j < n ; j++){\n        scanf (\"%s\",s);\n        if ((strcmp (s,\"X++\")==0) || (strcmp (s,\"++X\")==0))\n          a=a+1;\n        if ((strcmp (s,\"X--\")==0) ||  (strcmp (s,\"--X\")==0))\n          a=a-1;\n    }\n        \n        printf(\"%d\",a);\n        \n        \n    \n    return 0 ;\n}"}
{"similarity_score": 0.5313531353135313, "equal_cnt": 13, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "ffd62b423ead1c1c95aa5b0b8abd0df3", "bug_code_uid": "294605c6cdf3616b2d6c775eabe0a5b7", "src_uid": "07e56d4031bcb119d2f684203f7ed133", "apr_id": "0c1edd9e48003fe623f70c10b8bb39dd", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n\nvoid beautiful_polygons() {\n\tint t = 0;\n\tscanf(\"%d\", &t);\n\tfor (int i = 0; i < t; i++) {\n\t\tlong long int n = 0;\n\t\tscanf(\"%lld\", &n);\n\t\tif (n % 2 == 0) {\n\t\t\tprintf(\"YES\\n\");\n\t\t} else {\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n}\n\nint main() {\n\tbeautiful_polygons();\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nvoid beautiful(void) {\n   int t = 0;\n   scanf(\"%d\", &t);\n   for (int i = 0; i < t; i++) {\n      int n = 0;\n      scanf(\"%d\", &n);\n      if (n % 4 == 0) {\n         printf(\"YES\\n\");\n      } else {\n         printf(\"NO\\n\");\n      }\n   }\n}\n\nint main(void) {\n   beautiful();\n   return 0;\n}\n"}
{"similarity_score": 0.8919610855094726, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "951a1a563bba25394bbe769adbafa212", "bug_code_uid": "41c2b443089db23725246f544eb304d6", "src_uid": "48b9c68380d3bd64bbc69d921a098641", "apr_id": "f2b3322acf8ef7dcadea7c035128b7ee", "difficulty": 1000, "tags": ["sortings", "geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid mergesort(int arr[], int l, int r)\n{\nif (l < r)\n{\nint m = l+(r-l)/2;\nmergesort(arr, l, m);\nmergesort(arr, m+1,r);\nmerge(arr, l, m, r);\n}\n}\nvoid merge(int arr[], int l, int m, int r)\n{\nint i, j, k;\nint n1 = m - l + 1;\nint n2 = r - m;\nint L[n1], R[n2];\nfor (i = 0; i < n1; i++)\nL[i] = arr[l + i];\nfor (j = 0; j < n2; j++)\nR[j] = arr[m + 1+ j];\ni = 0;\nj = 0;\nk = l;\nwhile (i < n1 && j < n2)\n{\nif (L[i] <= R[j])\n{\narr[k] = L[i];\ni++;\n}\nelse\n{\narr[k] = R[j];\nj++;\n}\nk++;\n}\nwhile (i < n1)\n{\narr[k] = L[i];\ni++;\nk++;\n}\nwhile (j < n2)\n{\narr[k] = R[j];\nj++;\nk++;\n}\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int ar[n];\n    for(int i=0;i<n;i++)\n    scanf(\"%d\",&ar[i]);\n    mergesort(ar,0,n-1);\n    int cnt=ar[0]*ar[0];\n    for(int i=2;i<n;i+=2)\n    cnt+=(ar[i]*ar[i])-(ar[i-1]*ar[i-1]);\n    double pi=3.1415926536;\n    printf(\"%0.10f\",pi*cnt);\n    return 0;\n}", "fixed": "#include<stdio.h>\nvoid mergesort(int arr[], int l, int r)\n{\nif (l < r)\n{\nint m = l+(r-l)/2;\nmergesort(arr, l, m);\nmergesort(arr, m+1,r);\nmerge(arr, l, m, r);\n}\n}\nvoid merge(int arr[], int l, int m, int r)\n{\nint i, j, k;\nint n1 = m - l + 1;\nint n2 = r - m;\nint L[n1], R[n2];\nfor (i = 0; i < n1; i++)\nL[i] = arr[l + i];\nfor (j = 0; j < n2; j++)\nR[j] = arr[m + 1+ j];\ni = 0;\nj = 0;\nk = l;\nwhile (i < n1 && j < n2)\n{\nif (L[i] <= R[j])\n{\narr[k] = L[i];\ni++;\n}\nelse\n{\narr[k] = R[j];\nj++;\n}\nk++;\n}\nwhile (i < n1)\n{\narr[k] = L[i];\ni++;\nk++;\n}\nwhile (j < n2)\n{\narr[k] = R[j];\nj++;\nk++;\n}\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int ar[n];\n    for(int i=0;i<n;i++)\n    scanf(\"%d\",&ar[i]);\n    mergesort(ar,0,n-1);\n    if(n%2!=0)\n    {\n    int cnt=ar[0]*ar[0];\n    for(int i=2;i<n;i+=2)\n    cnt+=(ar[i]*ar[i])-(ar[i-1]*ar[i-1]);\n    double pi=3.1415926536;\n    printf(\"%0.10f\",pi*cnt);\n    }\n    else\n    {\n    int cnt=0;\n    for(int i=1;i<n;i+=2)\n    cnt+=(ar[i]*ar[i])-(ar[i-1]*ar[i-1]);\n    double pi=3.1415926536;\n    printf(\"%0.10f\",pi*cnt);\n    \n    }\n    return 0;\n}"}
{"similarity_score": 0.9824561403508771, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "515093956f4c16b1dd2efdc3ca9a6139", "bug_code_uid": "5e443019ac4a0bb6f76b726e34b8af49", "src_uid": "d341e5848836563953b3ec204cd59acc", "apr_id": "de7e29f80341de72a81a1cf385a27f26", "difficulty": 2300, "tags": ["constructive algorithms", "interactive", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<ctype.h>\n\nint main(void)\n{\n    int na, nb, l, x, prev, cnta = 0;\n    char str[301];\n    str[300] = '\\0';\n    for(int i = 0; i < 300; i++)\n    {\n        str[i] = 'a';\n    }\n    printf(\"%s\\n\", str);\n    fflush(stdout);\n    scanf(\"%d\", &na);\n    if(na == 0) return 0;\n    na = 300 - na;\n    for(int i = 0; i < 300; i++)\n    {\n        str[i] = 'b';\n    }\n    printf(\"%s\\n\", str);\n    fflush(stdout);\n    scanf(\"%d\", &nb);\n    if(nb == 0) return 0;\n    nb = 300 - nb;\n    l = na + nb;\n    str[l] = '\\0';\n    l -= 1;\n    prev = na;\n    for(int i = 0; i < l; i++)\n    {\n        str[i] = 'a';\n        printf(\"%s\\n\", str);\n        fflush(stdout);\n        scanf(\"%d\", &x);\n        if(x == 0) return 0;\n        if(x < prev)\n        {\n            prev = x;\n        }\n        else str[i] = 'b';\n    }\n    str[l] = 'a';\n    printf(\"%s\\n\", str);\n    fflush(stdout);\n    scanf(\"%d\", &x);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<ctype.h>\n\nint main(void)\n{\n    int na, nb, l, x, prev, cnta = 0;\n    char str[301];\n    str[300] = '\\0';\n    for(int i = 0; i < 300; i++)\n    {\n        str[i] = 'a';\n    }\n    printf(\"%s\\n\", str);\n    fflush(stdout);\n    scanf(\"%d\", &na);\n    if(na == 0) return 0;\n    na = 300 - na;\n    for(int i = 0; i < 300; i++)\n    {\n        str[i] = 'b';\n    }\n    printf(\"%s\\n\", str);\n    fflush(stdout);\n    scanf(\"%d\", &nb);\n    if(nb == 0) return 0;\n    nb = 300 - nb;\n    l = na + nb;\n    str[l] = '\\0';\n    l -= 1;\n    prev = na;\n    for(int i = 0; i < l; i++)\n    {\n        str[i] = 'a';\n        printf(\"%s\\n\", str);\n        fflush(stdout);\n        scanf(\"%d\", &x);\n        if(x == 0) return 0;\n        if(x < prev)\n        {\n            cnta++;\n            prev = x;\n        }\n        else str[i] = 'b';\n    }\n    if(cnta < na) str[l] = 'a';\n    printf(\"%s\\n\", str);\n    fflush(stdout);\n    scanf(\"%d\", &x);\n    return 0;\n}"}
{"similarity_score": 0.5032119914346895, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "c568a941982230ee8210ed9c16d8f2ac", "bug_code_uid": "4a5ae0d7aed75db2619ffa6282604333", "src_uid": "e5e937f080b20eaec5f12f1784ae6427", "apr_id": "760d7832bbf318552dd9b4a2ba49a23c", "difficulty": 1400, "tags": ["dp", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int x,temp;\r\n        scanf(\"%d\",&x);\r\n        temp=x;\r\n        long double m=11;\r\n        while(temp/m>10)\r\n        {\r\n            m=(m*10)+1;\r\n        }\r\n       // printf(\"\\n%Lf\\n\",m);\r\n        temp=temp-(m*(temp/(int)m));\r\n        //printf(\"\\n%d\\n\",temp);\r\n        m/=10;\r\n        while(m>=11)\r\n        {\r\n            int k=temp/(int)m;\r\n            temp=temp-(k*(int)m);\r\n            m/=10;\r\n        }\r\n        if(temp==0)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        printf(\"NO\\n\");\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int b=n%11;\r\n        int k=(n-(b*111));\r\n        if(k>=0 && k%11==0)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        printf(\"NO\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.9939148073022313, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "4f8e61343015810aa7ec69b845937be0", "bug_code_uid": "86d0ec2d8818f685b43a5c7abc7882b0", "src_uid": "8e423e4bec2d113612a4dc445c4b86a9", "apr_id": "af0b749c5703d966999b4d207edc31e5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,t,a,i,m;\n    scanf(\"%d%d\",&n,&t);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a);\n        m=86400-a;\n        if(m>=t){\n            printf(\"%d\\n\",i);\n            break;\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,t,a,i,m=0;\n    scanf(\"%d%d\",&n,&t);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a);\n        m+=86400-a;\n        if(m>=t){\n            printf(\"%d\\n\",i);\n            break;\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.659606656580938, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "c0e2b1e08e492d1cbaae45cb4241ea2f", "bug_code_uid": "e5df0e4509977c9d8474833454609ea7", "src_uid": "e5a01ebfdca3af987e93b68c96268c16", "apr_id": "543214c9976d093c5f9f9545403a2ad6", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nlong long n,i;\r\nlong long a,b,sum;\r\n main()\r\n {\r\n \t\r\n \tscanf(\"%d\",&n);\r\n \twhile(n--)\r\n \t{\r\n \t\tscanf(\"%d %d\",&a,&b);\r\n \t\tif(a==1||b==1)\r\n \t\t{\r\n \t\t\tif(a==1&&b==1)\r\n \t\t\t{\r\n \t\t\t\tsum=0;\r\n\t\t\t }\r\n\t\t\t else \r\n\t\t\t {\r\n\t\t\t \tsum=1;\r\n\t\t\t }\r\n\t\t }\r\n\t\t else\tsum=2; \r\n\t\tprintf(\"%d\",sum);\r\n\t }\r\n\t return 0;\r\n }", "fixed": "#include<stdio.h>\r\nlong long n,i;\r\nlong long a,b,sum,k[10005];\r\n main()\r\n {\r\n \t\r\n \tscanf(\"%d\",&n);\r\n \tfor(i=0;i<n;i++)\r\n \t{\r\n \t\tscanf(\"%d %d\",&a,&b);\r\n \t\tif(a==1||b==1)\r\n \t\t{\r\n \t\t\tif(a==1&&b==1)\r\n \t\t\t{\r\n \t\t\t\tk[i]=0;\r\n\t\t\t }\r\n\t\t\t else \r\n\t\t\t {\r\n\t\t\t \tk[i]=1;\r\n\t\t\t }\r\n\t\t }\r\n\t\t else\tk[i]=2; \r\n\t }\r\n\t for(i=0;i<n;i++)\r\n\t printf(\"%d\\n\",k[i]);\r\n\t return 0;\r\n }"}
{"similarity_score": 0.9006211180124224, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "de7b475ed9e1ab34f683be0b127ca550", "bug_code_uid": "3653e471ef34ae62de3915b25cfce1d8", "src_uid": "06e9649963715e56d97297c6104fbc00", "apr_id": "cd99c3ff894c0951eeab88d3b8597955", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,b,d,i,x=0,k=0,a;\n    scanf(\"%d %d %d\",&n,&b,&d);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a);\n        if(a <= b)\n        {\n            x = x+a;\n        }\n        if(x > d)\n        {\n            x = x-d;\n            k++;\n        }\n    }\n    printf(\"%d\\n\",k);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,b,d,x,y=0,k=0,i;\n    scanf(\"%d %d %d\",&n,&b,&d);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&x);\n        if(x <= b)\n        {\n            y = y+x;\n        }\n        if(y > d)\n        {\n            y = 0;\n            k++;\n        }\n    }\n    printf(\"%d\\n\",k);\n    return 0;\n}\n"}
{"similarity_score": 0.06761565836298933, "equal_cnt": 10, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "ac38fee823f27d66b6f9afef95d44c54", "bug_code_uid": "9e5ba057a2a1456c24d994dc68621e2d", "src_uid": "b63a6369023642a8e7e8f449d7d4b73f", "apr_id": "a608fe3616831647428bdc7aeb84500e", "difficulty": 900, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint ceil(int a,int b);\r\n\r\nint main()\r\n{\r\n\tint a,hero_health,hero_pow,monster_num,flag;\r\n\tscanf(\"%d\",&a);\r\n\tfor(int i=0;i<a;i++) {\r\n\t\tflag=1;\r\n\t\tscanf(\"%d%d%d\",&hero_pow,&hero_health,&monster_num);\r\n\t\tint monster_pow[monster_num],monster_health[monster_num];\r\n\t\tfor(int j=0;j<monster_num;j++)\tscanf(\"%d\",&monster_pow[j]);\r\n\t\tfor(int j=0;j<monster_num;j++)\tscanf(\"%d\",&monster_health[j]);\r\n\t\tfor(int j=0;j<monster_num;j++) {\r\n\t\t\thero_health-=ceil(monster_health[j],hero_pow)*monster_pow[j];\r\n\t\t}\r\n\t\twhile(1>0);\r\n\t\tif(hero_health<0) if((hero_health)*(-1)>=monster_pow[monster_num-1]) flag=0;\r\n\t\tif(flag==1) printf(\"YES\\n\");\r\n\t\telse printf(\"NO\\n\");\r\n\t}\r\n}\r\n\r\nint ceil(int a,int b)\r\n{\r\n\tif(a%b==0) return (int)a/b;\r\n\telse return (int)a/b+1;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\tint a,b,d,f,g;\r\n\tlong long int c;\r\n\tint e[100050]={};\r\n\tscanf(\"%d\",&a);\r\n\twhile(a--) {\r\n\t\tg=0;\r\n\t\tscanf(\"%d%lld%d\",&b,&c,&d);\r\n\t\tfor(int i=1;i<=d;i++) {\r\n\t\t\tscanf(\"%d\",&e[i]);\r\n\t\t\tif(e[i]>g) g=e[i];\r\n\t\t}\r\n\t\tfor(int i=1;i<=d;i++) {\r\n\t\t\tscanf(\"%d\",&f);\r\n\t\t\tc-=(long long)(f+b-1)/b*e[i];\r\n\t\t}\r\n\t\tputs(c<-g+1?\"NO\":\"YES\");\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.996078431372549, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "279e9b8c28e0a9b1b016e4a1c17eaaf0", "bug_code_uid": "5e4cb345adfa67514baad7fe5c826555", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "06c19ed3f4a949ff8f5e2fc8d7fcf223", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,j;\n\tscanf(\"%d\",&n);\n\tint max,a;\n\tint m=1;\n\ta=(n/2+1);\t\n\tif(n%2==0)\n\t\tmax=n/2*n/2+n/2*n/2;\n\telse\n\t\t//max=(n/2+1)*(n/2+1)+ (n/2*n/2);\n\t\tmax=a*a +(a-1)*(a-1)\t;\n\t\n\tprintf(\"%d\\n\",max);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(i%2==0){\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(j%2==0)\n\t\t\t\t\tprintf(\"c\");\n\t\t\t\telse\n\t\t\t\t\tprintf(\".\");\n\t\t\tm++;\n\t\t\t} printf(\"\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(j%2==0)\n\t\t\t\t\tprintf(\".\");\n\t\t\t\telse\n\t\t\t\t\tprintf(\"c\");\n\t\t\t\n\t\t\t} printf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,j;\n\tscanf(\"%d\",&n);\n\tint max,a;\n\tint m=1;\n\ta=(n/2+1);\t\n\tif(n%2==0)\n\t\tmax=n/2*n/2+n/2*n/2;\n\telse\n\t\t//max=(n/2+1)*(n/2+1)+ (n/2*n/2);\n\t\tmax=a*a +(a-1)*(a-1)\t;\n\t\n\tprintf(\"%d\\n\",max);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(i%2==0){\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(j%2==0)\n\t\t\t\t\tprintf(\"C\");\n\t\t\t\telse\n\t\t\t\t\tprintf(\".\");\n\t\t\tm++;\n\t\t\t} printf(\"\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(j%2==0)\n\t\t\t\t\tprintf(\".\");\n\t\t\t\telse\n\t\t\t\t\tprintf(\"C\");\n\t\t\t\n\t\t\t} printf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9783333333333334, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4e08014be33c211e5cffc2a745bd55d5", "bug_code_uid": "e97ad3d23222d17a25551babea8b34c5", "src_uid": "102667eaa3aee012fef70f4192464674", "apr_id": "7f7a80f1803c1990558b626cc85299f1", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<limits.h>\nint main()\n{\n    int n,m,c,min,c1=1,i,j,p;\n    min=INT_MIN;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    scanf(\"%d\",&m);\n    for(j=0;j<m;j++)\n    {\n        scanf(\"%d\",&p);\n        for(i=0;i<n;i++)\n        {\n            if(p%a[i]==0)\n            {\n                c=p/a[i];\n                if(c>min)\n                {\n                    min=c;\n                }\n                else if(c==min)\n                    c1++;\n                break;    \n            }\n        }\n    }\n    printf(\"%d\",c1);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<limits.h>\nint main()\n{\n    int n,m,c,min,c1=1,i,j,p;\n    min=INT_MIN;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    scanf(\"%d\",&m);\n    for(j=0;j<m;j++)\n    {\n        scanf(\"%d\",&p);\n        for(i=0;i<n;i++)\n        {\n            if(p%a[i]==0)\n            {\n                c=p/a[i];\n                if(c>min)\n                {\n                    min=c;\n                    c1=1;\n                }\n                else if(c==min)\n                    c1++;\n                break;    \n            }\n        }\n    }\n    printf(\"%d\",c1);\n    return 0;\n}"}
{"similarity_score": 0.8785425101214575, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "6fc27bcd959058a7853c216cfdc0bbe8", "bug_code_uid": "a70e4bb0821734be90edf6535615f7f3", "src_uid": "0e4ff955c1e653fbeb003987fa701729", "apr_id": "e52678930cfcf0e93282b6af71d91e4f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <iostream>\nusing namespace std;\n\nint a[1000005];\n\nint main() {\n\t// your code goes here\n\tint n,temp,i;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t  scanf(\"%d\",&temp);\n\t  a[temp]=1;\n\t  \n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t  if(a[i]!=1)  break;\n\t}\n\tprintf(\"%d\",i);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n \nint a[1000005];\n \nint main() {\n \n\tint n,temp,i;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t  scanf(\"%d\",&temp);\n\t  a[temp]=1;\n \n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t  if(a[i]!=1)  break;\n\t}\n\tprintf(\"%d\",i);\n\treturn 0;\n}"}
{"similarity_score": 0.49097472924187724, "equal_cnt": 22, "replace_cnt": 16, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "536f3efabc7f607c85a3ade2c9f8432b", "bug_code_uid": "47256d8176c78347a2760da61100ce60", "src_uid": "5c6af8ced2c4b8999abccfac5c4d0057", "apr_id": "95f8d32cda48b2f42c71b9eb7ffc8b75", "difficulty": 800, "tags": ["constructive algorithms", "sortings", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tint i,j,n,k;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n],b[n],temp;\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&a[i]);\n\t\tfor(j=0;j<n;j++)\n\t\t\tscanf(\"%d\",&b[j]);\n\t\tfor(i=0;i<n;i++){\n\t\t\tfor(j=i;j<n;j++){\n\t\t\t\tif(a[i]>a[j]){\n\t\t\t\t\ttemp=a[i];\n\t\t\t\t\ta[i]=a[j];\n\t\t\t\t\ta[j]=temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t\tprintf(\"%d\\n\",a[i]);\t\n\t\tfor(i=0;i<n;i++)\n\t\t\tprintf(\"%d\\n\",b[i]);\n\t}\t\n\t\t\treturn 0;\t\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint tc;\n\tscanf(\"%d\", &tc);\n\twhile (tc--)\n\t{\n\t\tint i, j, n, k;\n\t\tscanf(\"%d\", &n);\n\t\tint a[n], b[n], temp;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &a[i]);\n\t\tfor (j = 0; j < n; j++)\n\t\t\tscanf(\"%d\", &b[j]);\n\t\tfor (i = 0; i < n; i++)\n\t\t{\n\t\t\tfor (j = i; j < n; j++)\n\t\t\t{\n\t\t\t\tif (a[i] > a[j])\n\t\t\t\t{\n\t\t\t\t\ttemp = a[i];\n\t\t\t\t\ta[i] = a[j];\n\t\t\t\t\ta[j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (i = 0; i < n; i++)\n\t\t{\n\t\t\tfor (j = i; j < n; j++)\n\t\t\t{\n\t\t\t\tif (b[i] > b[j])\n\t\t\t\t{\n\t\t\t\t\ttemp = b[i];\n\t\t\t\t\tb[i] = b[j];\n\t\t\t\t\tb[j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (i = 0; i < n; i++)\n\t\t\tprintf(\"%d\\n\", a[i]);\n\t\tfor (i = 0; i < n; i++)\n\t\t\tprintf(\"%d\\n\", b[i]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9868421052631579, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "2cddf76ea041cab3a5acffeae91d586f", "bug_code_uid": "f1ee862f33f3c767f39c54df9f18f39f", "src_uid": "fa253aabcccd487d09142ea882abbc1b", "apr_id": "477eaa7e64797e28bb4f6922d41b5386", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int k;\n    scanf(\"%d\",&k);\n    while(k--){\n        int m,s;\n        char a='a';\n        scanf(\"%d %d\",&m,&s);\n        for(int i=0;i<m/s;i++){\n            for(int j=0;j<s;j++){\n                printf(\"%c\",a);\n                a++;\n            }\n            a='a';\n        }\n        a='a';\n        for(int j=0;j<n%k;j++){\n                printf(\"%c\",a);\n                a++;\n        }\n        printf(\"\\n\");\n    }\nreturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int m,s;\n        char a='a';\n        scanf(\"%d %d\",&m,&s);\n        for(int i=0;i<m/s;i++){\n            for(int j=0;j<s;j++){\n                printf(\"%c\",a);\n                a++;\n            }\n            a='a';\n        }\n        a='a';\n        for(int j=0;j<m%s;j++){\n                printf(\"%c\",a);\n                a++;\n        }\n        printf(\"\\n\");\n    }\nreturn 0;\n}"}
{"similarity_score": 0.24448529411764705, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "5ac54db8b4cdcec9197d654cc59ff2e5", "bug_code_uid": "9ada4835ad93e202f0e0e86f49a05b6d", "src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "apr_id": "3a024278bd7f54f37a33503454bbc445", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    int n ,i;\n    int str[100];\n    int a,b;\n    int sum;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        for(i=0;i<n;i++)\n            scanf(\"%d\",&str[i]);\n        a=n;b=1;\n        sum=fabs(str[a-1]-str[b-1]);\n        for(i=0;i+1<n;i++)\n        {\n            if(fabs(str[i]-str[i+1])<sum)\n            {\n                a=i+1;\n                b=i+2;\n            }\n        }\n        printf(\"%d %d\\n\",a,b);\n    }\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<ctype.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n    int n ;\n    while(scanf(\"%d\",&n)!=EOF)\n        {\n            int i , a[100] , j ;\n            for( i = 0 ; i<n;i++)\n                scanf(\"%d\",a+i);\n                int min = fabs(a[n-1]-a[0]) ;\n                int n1 = n , n2 = 1 ;\n            for(i=0,j=i+1;j<n;i++,j++)\n            {\n                if(min>fabs(a[j]-a[i]))\n                {min = fabs(a[j] - a[i] );\n                n1 = i+1 ; n2 = j+1 ;\n                }\n            }\n            printf(\"%d %d\\n\",n1,n2);\n        }\n        return 0 ;\n}\n"}
{"similarity_score": 0.9960629921259843, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9508a0a9773ec5135674b9ab0a3b3a06", "bug_code_uid": "1fdab7976f9e96e71926279d802fb550", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "53c947a9f9d565d76749c35b0f2d9dcf", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n, ans1, ans2;\n    scanf(\"%d\", &n);\n    if (n%2 == 0)\n    {\n        ans1 = n-9;\n        ans2 = 9;\n    }\n    else\n    {\n        ans1 = n-8;\n        ans2 = 8;\n    }\n    printf(\"%d %d\\n\", ans1, ans2);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n, ans1, ans2;\n    scanf(\"%d\", &n);\n    if (n%2 != 0)\n    {\n        ans1 = n-9;\n        ans2 = 9;\n    }\n    else\n    {\n        ans1 = n-8;\n        ans2 = 8;\n    }\n    printf(\"%d %d\\n\", ans1, ans2);\n    return 0;\n}\n"}
{"similarity_score": 0.9890829694323144, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "79e7ea44243346850296857e22c42359", "bug_code_uid": "981d4924e7437e56054a3954cc7a7de1", "src_uid": "0ee86e75ff7a47a711c9eb41b34ad1a5", "apr_id": "559e0077cbc8c3b65871498f30e190ea", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,k=0;\n    int x[1000];\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&a[i]);\n    for(j=1; j<n; j++)\n    {\n        if(a[j]==1)\n        {\n            x[k]=a[j-1];\n            k++;\n        }\n        if(j==n-1)\n        {\n            x[k]=a[j];\n            k++;\n        }\n    }\n    printf(\"%d\\n\",k);\n    for(i=0; i<k; i++)\n        printf(\"%d \",x[i]);\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,k=0;\n    int x[1000];\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&a[i]);\n    for(j=0; j<n; j++)\n    {\n        if(j!=0 && a[j]==1)\n        {\n            x[k]=a[j-1];\n            k++;\n        }\n        if(j==n-1)\n        {\n            x[k]=a[j];\n            k++;\n        }\n    }\n    printf(\"%d\\n\",k);\n    for(i=0; i<k; i++)\n        printf(\"%d \",x[i]);\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.13802083333333334, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "0863d265129bb802ecd1ff2556f77171", "bug_code_uid": "aee0c5e510c5d12f5671d764bd704da9", "src_uid": "e702594a8e993e135ea8ca78eb3ecd66", "apr_id": "c14f6fc5a3b1635d1cb810b85834b77a", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n      int n, a[1000000], b[1000000], i, j, sm, mx;\n      scanf(\"%d\", &n);\n      for(i=0;i<n;i++)\n\t    scanf(\"%d%d\", &a[i], &b[i]);\n      sm=a[0];\n      mx=b[0];\n      for(i=0;i<n;i++)\n      {\n\t    if(a[i]<=sm && b[i]>=mx)\n\t    {\n\t\t  sm=a[i];\n\t\t  mx=b[i];\n\t\t  j=i+1;\n\t    }\n\t    else if(sm<=a[i] && mx>=b[i])\n\t\t  continue;\n\t    else\n\t\t  j=-1;\n      }\n      printf(\"%d\", j);\n      return 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint a[100000],b[100000];\n\nint main()\n{\n    int n,i=0,x=1000000001,y=0,c=-1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\tscanf(\"%d%d\",&a[i],&b[i]);\n\tif(a[i]<x)\n\t    x=a[i];\n\tif(b[i]>y)\n\t    y=b[i];\n    }\n\n    for(i=0;i<n;i++)\n\tif((a[i]==x)&&(b[i]==y)){c=i+1;break;}\n    printf(\"%d\",c);\n//\telse printf(\"-1\");\n    return 0;\n}\n"}
{"similarity_score": 0.9621621621621622, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "4a1a991ba66b8d0ea17c782220ca24e4", "bug_code_uid": "483f294113c586510335a97fe49f2088", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "92e0db627dcee36773e8a490511d2c00", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(void){\r\n    long long x,i;\r\n    scanf(\"%d\",&i);\r\n    for(;i>0;i--){\r\n        scanf(\"%d\",&x);\r\n        printf(\"%d %d\",-x+1,x);\r\n    }\r\n    return 0;    \r\n}", "fixed": "#include<stdio.h>\r\nint main(void){\r\n    long long x,i;\r\n    scanf(\"%lld\",&i);\r\n    for(;i>0;i--){\r\n        scanf(\"%lld\",&x);\r\n        printf(\"%lld %lld\\n\",-x+1,x);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9233997901364114, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dbc750eaf7175d722342a18c176ae3d8", "bug_code_uid": "1e08f3f7023c597bec8c17bbd24b414c", "src_uid": "33e751f5716cbd666be36ab8f5e3977e", "apr_id": "89d5591625593ed08be5fe1c32cff973", "difficulty": 800, "tags": ["brute force", "combinatorics", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 0; i < t; i++)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tswitch (n)\r\n\t\t{\r\n\t\tcase 1:printf(\"216\\n\"); break;\r\n\t\tcase 2:printf(\"168\\n\"); break;\r\n\t\tcase 3:printf(\"126\\n\"); break;\r\n\t\tcase 4:printf(\"90\\n\"); break;\r\n\t\tcase 5:printf(\"60\\n\"); break;\r\n\t\tcase 6:printf(\"36\\n\"); break;\r\n\t\tcase 7:printf(\"18\\n\"); break;\r\n\t\tcase 8:printf(\"6\\n\"); break;\r\n\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 0; i < t; i++)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor (int j = 0; j < n; j++)\r\n\t\t{\r\n\t\t\tint x;\r\n\t\t\tscanf(\"%d\", &x);\r\n\t\t}\r\n\t\tswitch (n)\r\n\t\t{\r\n\t\tcase 1:printf(\"216\\n\"); break;\r\n\t\tcase 2:printf(\"168\\n\"); break;\r\n\t\tcase 3:printf(\"126\\n\"); break;\r\n\t\tcase 4:printf(\"90\\n\"); break;\r\n\t\tcase 5:printf(\"60\\n\"); break;\r\n\t\tcase 6:printf(\"36\\n\"); break;\r\n\t\tcase 7:printf(\"18\\n\"); break;\r\n\t\tcase 8:printf(\"6\\n\"); break;\r\n\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n}"}
{"similarity_score": 0.9979381443298969, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7d18c7c43f077fa4e7465ad362129344", "bug_code_uid": "5f4052cc55c9d645e4e6bd7b2bcff7f2", "src_uid": "f93a8bd64a405233342f84542fce314d", "apr_id": "9a2f60a9009458ddd1b27410ffa583f3", "difficulty": 800, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint comp (const void * elem1, const void * elem2) \n{\n    int f = *((int*)elem1);\n    int s = *((int*)elem2);\n    if (f > s) return  1;\n    if (f < s) return -1;\n    return 0;\n}\n\nint main() \n{\n    int n;\n    scanf (\"%d\", &n);\n    int a[n];\n    for (int i = 0; i < n; i++)\n    {\n        scanf(\"%d \", &a[i]);\n    }\n    qsort(a, n, sizeof(int), comp);\n    if (n%2 != 0)\n        printf(\"%d\", a[n/2]);\n    else \n        printf(\"%d\", a[n/2-2]);\n    \n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint comp (const void * elem1, const void * elem2) \n{\n    int f = *((int*)elem1);\n    int s = *((int*)elem2);\n    if (f > s) return  1;\n    if (f < s) return -1;\n    return 0;\n}\n\nint main() \n{\n    int n;\n    scanf (\"%d\", &n);\n    int a[n];\n    for (int i = 0; i < n; i++)\n    {\n        scanf(\"%d \", &a[i]);\n    }\n    qsort(a, n, sizeof(int), comp);\n    if (n%2 != 0)\n        printf(\"%d\", a[n/2]);\n    else \n        printf(\"%d\", a[n/2-1]);\n    \n}\n"}
{"similarity_score": 0.8215547703180212, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "59faccd6c5f9d9a9488362dc20446a7b", "bug_code_uid": "7dbc9c769d7e13b218e8f5b4f46bdb52", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "1de109b2acc16084ac4b2cfb653187eb", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{int n,i;\n scanf(\"%d\",&n);\n for(i=1;i<=n;i++)\n {\n     if((i%2)!=0)\n     {\n       if(i==n && i!=1)\n       {\n           printf(\" I hate it\");\n       }\n       else if(i==1)\n       {\n           printf(\"I hate it\");\n       }\n       else\n       {\n           printf(\" I hate that\");\n       }\n\n     }\n     else\n     {\n         if(i==n)\n         {\n             printf(\" I love it\");\n         }\n         else\n         {\n             printf(\" I love that\");\n         }\n     }\n }\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{int n,i;\n scanf(\"%d\",&n);\n for(i=1;i<=n;i++)\n {\n     if((i%2)!=0)\n     {\n       if(i==n && i!=1)\n       {\n           printf(\" I hate it\");\n       }\n       else if(i==1 && n==1)\n       {\n           printf(\"I hate it\");\n       }\n       else if(i==1 && n>1)\n       {\n           printf(\"I hate that\");\n       }\n       else\n       {\n           printf(\" I hate that\");\n       }\n\n     }\n     else\n     {\n         if(i==n)\n         {\n             printf(\" I love it\");\n         }\n         else\n         {\n             printf(\" I love that\");\n         }\n     }\n }\n\n}\n"}
{"similarity_score": 0.42790697674418604, "equal_cnt": 21, "replace_cnt": 12, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "6894c1ac938fd1f6c42a153828b75d3e", "bug_code_uid": "ef733a92304d14bb91eff91c5c95bb2f", "src_uid": "ac7d117d58046872e9d665c9f99e5bff", "apr_id": "a4e8d08481529cfda612fb93d57eb749", "difficulty": 800, "tags": ["brute force", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint b[30000];\nint main()\n{\n\tint t,i,k=0,n;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tk=0;\n\t\tscanf(\"%d\",&n);\n\t\tif(n<10)\n\t\t{\n\t\t\tprintf(\"%d\\n\",n);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tk=0;\n\t\t\tfor(i=10;i<=n;i++)\n\t\t\t{\n\t\t\tint h,l=0,j;\n\t\t\th=i;\n\t\t\twhile(h)\n\t\t\t{\n\t\t\tj=h%10;\n\t\t\tl++;\n\t\t\tb[l]=j;\n\t\t\th=h/10; \t\n\t\t\t}\n\t\t\tfor(int m=1;m<l;m++)\n\t\t\t{\n\t\t\t\tif(b[m]!=b[m+1]);\n\t\t\t\tk++;\n\t\t\t } \t\n\t\t\t}\t\n\t\t\tprintf(\"%d\\n\",100-k);\n\t\t}\n\t\t\n\t}\n\treturn 0;\n}\n\t\t\t\t\t\t  \t  \t\t\t   \t\t\t\t\t \t\t\t\t  \t", "fixed": "# include <stdio.h>\nint main ()\n{\n\tint t,n,sum,m,count,k;\n\tscanf(\"%d\",&t);\n\twhile (t--)\n\t{\n\t\tsum=0;\n\t\tscanf(\"%d\",&n);\n\t\tm=n;\n\t\tcount=0;\n\t\tif (n<10)\n\t\t{\n\t\t\tprintf(\"%d\\n\",n);\n\t\t\tcontinue;\n\t\t}\n\t\twhile (n/10>0)\n\t\t{\n\t\t\tsum+=9;\n\t\t\tn=n/10;\n\t\t\tcount++;\n\t\t}\n\t\tk=n;\n\t\tfor (int i=0;i<count;i++)\n\t\t{\n\t\t\tn=n*10+k;\n\t\t}\n\t\tif (n<=m)\n\t\tsum+=k;\n\t\telse\n\t\tsum+=k-1;\n\t\tprintf(\"%d\\n\",sum);\n\t}\n\treturn 0;\n}\n\t \t  \t     \t   \t\t \t\t\t   \t \t\t\t\t"}
{"similarity_score": 0.9953271028037384, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "70236b0a3d6b35ca3f9543ef8787ff65", "bug_code_uid": "f0c329513ce2d7cd86100ee03394c35e", "src_uid": "f0c22161cb5a9bc17320ccd05517f867", "apr_id": "0eb1d8deb9f872224cb37fdb933280c3", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n; i++)\r\n    {\r\n        int a,b,c;\r\n        scanf(\"%d %d %d\",&a, &b, &c);\r\n        printf(\"%d\\t%d\\t%d\",a+b+c,b+c,c);\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n; i++)\r\n    {\r\n        int a,b,c;\r\n        scanf(\"%d %d %d\",&a, &b, &c);\r\n        printf(\"%d\\t%d\\t%d\\n\",a+b+c,b+c,c);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.7950401167031363, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "a2bc1f8bd952b3f2fdceebbbdba7a346", "bug_code_uid": "590b43cb3891ca0326e6f519a96a7a16", "src_uid": "77e2a6ba510987ed514fed3bd547b5ab", "apr_id": "5c7349da39fe58e769c95cf75e2f8e3c", "difficulty": 1100, "tags": ["implementation", "sortings", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint\nmain (int argc, char *argv[])\n{\n    char str[100000];\n    char res[100000];\n    char m = 0;\n    \n    fflush (stdin);\n    scanf (\"%s\", str);\n    fflush(stdin);\n    \n    int i;\n    /*if(strlen(str)>100) {\n            printf(\"%d\",strlen(str));\n        return 0;\n    }*/\n    \n    for (i = 0; i < strlen (str); i++)\n        res[i] = '\\0';\n\n    for (i = strlen (str) - 1; i >= 0; i--)\n    {\n        if (str[i] >= m)\n        {\n            res[i] = 1;\n            m = str[i];\n        }\n    }\n    \n    for (i = 0; i < strlen (str); i++)\n        if (res[i])\n            printf (\"%c\", str[i]);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint\nmain (int argc, char *argv[])\n{\n    char str[100001];\n    char res[100001];\n    char m = 0;\n    int count=0;\n    fflush (stdin);\n    scanf (\"%s\", str);\n    fflush(stdin);\n    \n    int i;\n    /*if(strlen(str)>100) {\n            printf(\"%d\",strlen(str));\n        return 0;\n    }*/\n    \n    //for (i = 0; i < strlen (str); i++)\n    //    res[i] = '\\0';\n    res[strlen (str)]='\\0';\n    for (count=strlen (str) - 1,i = strlen (str) - 1; i >= 0; i--)\n    {\n        if (str[i] >= m)\n        {\n            res[count--] = str[i];\n            m = str[i];\n            //printf(\"%c\\n\",str[i]);\n        }\n    }\n    printf (\"%s\", res+count+1);\n    return 0;\n}"}
{"similarity_score": 0.9967051070840197, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "39983a6181d4b37c464137cd1ec3eea0", "bug_code_uid": "682a51f428a3e94249d2346ea0ec9f23", "src_uid": "594e64eef7acd055d59f37710edda201", "apr_id": "81a2054cd456479e7a03785892610380", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,a[300][2],i,j,f1,f2,f3,f4,cnt=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&a[i][0],&a[i][1]);\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tf1=0;f2=0;f3=0;f4=0;\n\t//\tprintf(\"%d %d\\n\",a[i][0],a[i][1]);\n\t\tfor(j=1;j<n;j++)\n\t\t{\n\t\t\tif(a[j][1]==a[i][1])\n\t\t\t{\n\t\t\t\tif(a[j][0]>a[i][0])\n\t\t\t\t{\n\t\t\t\t\tf1=1;\n\t\t\t\t}\n\t\t\t\telse if(a[j][0]<a[i][0])\n\t\t\t\t{\n\t\t\t\t\tf2=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(a[j][0]==a[i][0])\n\t\t\t{\n\t\t\t\tif(a[j][1]<a[i][1])\n\t\t\t\t{\n\t\t\t\t\tf3=1;\n\t\t\t\t}\n\t\t\t\telse if(a[j][1]>a[i][1])\n\t\t\t\t{\n\t\t\t\t\tf4=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(f1+f2+f3+f4==4)\n\t\t{\n\t\t\tcnt++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",cnt);\nreturn 0;\n}\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,a[300][2],i,j,f1,f2,f3,f4,cnt=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&a[i][0],&a[i][1]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tf1=0;f2=0;f3=0;f4=0;\n\t//\tprintf(\"%d %d\\n\",a[i][0],a[i][1]);\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif(a[j][1]==a[i][1])\n\t\t\t{\n\t\t\t\tif(a[j][0]>a[i][0])\n\t\t\t\t{\n\t\t\t\t\tf1=1;\n\t\t\t\t}\n\t\t\t\telse if(a[j][0]<a[i][0])\n\t\t\t\t{\n\t\t\t\t\tf2=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(a[j][0]==a[i][0])\n\t\t\t{\n\t\t\t\tif(a[j][1]<a[i][1])\n\t\t\t\t{\n\t\t\t\t\tf3=1;\n\t\t\t\t}\n\t\t\t\telse if(a[j][1]>a[i][1])\n\t\t\t\t{\n\t\t\t\t\tf4=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(f1+f2+f3+f4==4)\n\t\t{\n\t\t\tcnt++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",cnt);\nreturn 0;\n}\n\n\n\n"}
{"similarity_score": 0.9816440542697525, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "2f7be6b9d4711a29531ecaf0ae8dfcb6", "bug_code_uid": "51272267021374b005d15f746e7bfbbf", "src_uid": "645459e0a41ec63b13648ea8dbe0f053", "apr_id": "9f2196dc0122c1394f711721f0786bcf", "difficulty": 1100, "tags": ["constructive algorithms", "flows", "graph matchings", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint quat(int x,int n);\r\nint main(){\r\n\tint allQ;\r\n\tscanf(\"%d\",&allQ);\r\n\tfor(int q=0;q<allQ;q++){\r\n\t\tint n,NO=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint Q[n],A[n]={0};\r\n\t\tfor(int t=0;t<n;t++){\r\n\t\t\tscanf(\"%d\",&Q[t]);\r\n\t\t\tA[t]=0;\r\n\t\t\tQ[t]=quat(Q[t],n);\r\n\t\t}\r\n\t\tfor(int t=0;t<n;t++){\r\n\t\t\twhile(1){\r\n\t\t\t\tif(A[Q[t]-1]==0){\r\n\t\t\t\t\tA[Q[t]-1]=1;\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tQ[t]=Q[t]/2;\r\n\t\t\t\tif(Q[t]==0){\r\n\t\t\t\t\tNO=1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(NO==1)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif(NO==1)\r\n\t\t\tprintf(\"NO\");\r\n\t\telse\r\n\t\t\tprintf(\"YES\");\r\n\t} \r\n} \r\nint quat(int x,int n){\r\n\twhile(x>n)\r\n\t\tx=x/2;\r\n\treturn x;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint quat(int x,int n);\r\nint main(){\r\n\tint allQ;\r\n\tscanf(\"%d\",&allQ);\r\n\tfor(int q=0;q<allQ;q++){\r\n\t\tint n,NO=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint Q[10000],A[10000]={0};\r\n\t\tfor(int t=0;t<n;t++){\r\n\t\t\tscanf(\"%d\",&Q[t]);\r\n\t\t\tA[t]=0;\r\n\t\t\tQ[t]=quat(Q[t],n);\r\n\t\t}\r\n\t\tfor(int t=0;t<n;t++){\r\n\t\t\twhile(1){\r\n\t\t\t\tif(A[Q[t]-1]==0){\r\n\t\t\t\t\tA[Q[t]-1]=1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tQ[t]=Q[t]/2;\r\n\t\t\t\tif(Q[t]==0){\r\n\t\t\t\t\tNO=1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(NO==1)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif(NO==1)\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"YES\\n\");\r\n\t} \r\n} \r\nint quat(int x,int n){\r\n\twhile(x>n)\r\n\t\tx=x/2;\r\n\treturn x;\r\n}\r\n"}
{"similarity_score": 0.6792168674698795, "equal_cnt": 34, "replace_cnt": 20, "delete_cnt": 2, "insert_cnt": 11, "fix_ops_cnt": 33, "lang": "GNU C11", "fix_code_uid": "ab70b479a69992a8eb0c45ddd3d73172", "bug_code_uid": "2328871e5bd17787e876f74bef1aec65", "src_uid": "adf4239de3b0034cc690dad6160cf1d0", "apr_id": "15e6cd71e5f52573e4d368fee73bb379", "difficulty": 1000, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n    {\n        long long int q,n,a,m,count1=0,count2=0,count3=0,count4=0,i,b,sum=0;\n        scanf(\"%lld\",&n);\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%lld\",&a);\n            if(a%2==0)\n                count1++;\n            else\n                count2++;\n\n        }\n        scanf(\"%lld\",&m);\n        for(i=0;i<m;i++)\n        {\n            scanf(\"%lld\",&b);\n            if(b%2==0)\n                    sum=sum+count1;\n            else\n                    sum=sum+count2;\n\n        }\n        printf(\"%d\\n\",sum);\n\n\n    }\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\n    long long int n,i,j,t,k;\n\n    scanf(\"%I64d\",&t);\n\n    for(i=0;i<t;i++){\n\n        long long int m,m1,count1=0,count2=0,count3=0,count4=0,sum=0;\n\n        scanf(\"%I64d\",&m);\n\n        long long int a[m];\n\n        for(j=0;j<m;j++){\n\n            scanf(\"%I64d\",&a[j]);\n\n            if(a[j]%2==0)\n                count1++;\n            else\n                count2++;\n        }\n\n\n        scanf(\"%I64d\",&m1);\n\n        long long int b[m1];\n\n        for(j=0;j<m1;j++){\n\n            scanf(\"%I64d\",&b[j]);\n\n            if(b[j]%2==0){\n                sum=sum+count1;\n            }\n            else{\n                sum=sum+count2;\n            }\n\n        }\n\n        printf(\"%I64d\\n\",sum);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.26869455006337134, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "a12bb18c81f29e20964c12fcbefc5607", "bug_code_uid": "df7dbb3e16d0e70019b2c484a2389424", "src_uid": "2e8f7f611ba8d417fb7d12fda22c908b", "apr_id": "62a9e6ec6b2d46f532b3f879e1efcdd9", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n     \n    int main(){\n    \tint t;\n    \tscanf(\"%d\",&t);\n    \tfor(int i=1;i<=t;i++){\n    \t    int n;\n    \t    scanf(\"%d\",&n);\n    \t    int a[n], j;\n    \t    for( j=0;j<n;j++){\n    \t        scanf(\"%d\", &a[j]);\n    \t        a[j+1]+=a[j];\n    \t    }\n    \t        if((a[j+1]/2)!=0)\n    \t            printf(\"No\\n\");\n    \t        else if((a[j+1]/2)==0)  \n    \t            printf(\"Yes\\n\");\n    \t        }\n    \treturn 0;\n    }", "fixed": "#include <stdio.h>\n\nint main() {\n\t//code\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor(int i=1;i<=t;i++){\n\t    int n, k1=0, k2=0; \n\t    scanf(\"%d\", &n);\n\t    for(int j=1; j<=n; j++){\n\t        int a;\n\t        scanf(\"%d\", &a);\n\t        if(a%2==0)\n\t        k1++;\n\t        else\n\t        k2++;\n\t    }\n\t    printf(k1>0 && k2>0 || k2%2==1 ? \"Yes\\n\": \"No\\n\");\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9648798521256932, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "b294a53a810f6b9760ac4641c950381f", "bug_code_uid": "3bad7c7af7279f8bc29e9f0f3191f406", "src_uid": "5ce39a83d27253f039f0e26045249d99", "apr_id": "cf71b98fca68c62ad5d2b1c75fe5815f", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int n,m,i,j,sum=0;\n    char sw;\n    int flag[2000]= {0};\n    int flag2[2000]={0};\n\n    scanf(\"%d %d\",&n,&m);\n    for (i=0; i<n; i++)\n    {\n        for (j=0; j<m; j++)\n        {\n            scanf(\" %c\",&sw);\n            if (sw=='1')\n            {\n                flag[j]++;\n                if (flag[j]==1)\n                {\n                    flag2[j]=i+1;\n                }\n                else (flag2[j]=0);\n            }\n        }\n    }\n    for (i=0;i<m;i++)\n    {\n        if (flag2[i]==0) continue;\n        for (j=i-1;j>=0;j--)\n        {\n            if (flag2[i]==flag2[j]) break;\n        }\n        sum=sum+1;\n    }\n    if (n-sum>=1)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int n,m,i,j,sum=0;\n    char sw;\n    int flag[2000]= {0};\n    int flag2[2000]={0};\n    int flag3;\n    scanf(\"%d %d\",&n,&m);\n    for (i=0; i<n; i++)\n    {\n        for (j=0; j<m; j++)\n        {\n            scanf(\" %c\",&sw);\n            if (sw=='1')\n            {\n                flag[j]++;\n                if (flag[j]==1)\n                {\n                    flag2[j]=i+1;\n                }\n                else (flag2[j]=0);\n            }\n        }\n    }\n    for (i=0;i<m;i++)\n    {\n        if (flag2[i]==0) continue;\n        flag3=1;\n        for (j=i-1;j>=0;j--)\n        {\n            if (flag2[i]==flag2[j]) flag3=0;\n        }\n        if (flag3==1) sum=sum+1;\n    }\n    if (n-sum>=1)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.9620853080568721, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "50779c407050361803db994a9055bddb", "bug_code_uid": "d4be4275abd8d664020ce563e0a22b38", "src_uid": "03907ca0d34a2c80942ed3968b2c067d", "apr_id": "eb5fbae9a837f16751618e9233d207d5", "difficulty": 1800, "tags": ["graphs", "implementation", "dfs and similar", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint n,sayi=2,toplam,katsayi;\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(sayi=2;sayi<n;sayi++){\n\t\tfor(katsayi=2;katsayi*sayi<=n;katsayi++){\n\t\t\ttoplam+=(katsayi*4) ;\n\t\t}\n\t}\n\tprintf(\"%d\",toplam);\n}", "fixed": "#include<stdio.h>\nlong long int n,sayi=2,toplam,katsayi;\nint main(){\n\tscanf(\"%I64d\",&n);\n\tfor(sayi=2;sayi<n;sayi++){\n\t\tfor(katsayi=2;katsayi*sayi<=n;katsayi++){\n\t\t\ttoplam+=(katsayi*4) ;\n\t\t}\n\t}\n\tprintf(\"%I64d\",toplam);\n}"}
{"similarity_score": 0.5513905683192262, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "3c23f2650565da0987cd188f094b4755", "bug_code_uid": "65727f7df0b80104896f9e8bf67e6452", "src_uid": "528459e7624f90372cb2c3a915529a23", "apr_id": "8e1c9ca0d3d706fe6d0abd3b0c2b8f65", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int x=0,y=0,c;\n    while(scanf(\"%c\",&c)!=EOF)\n    {\n                              if(c=='x')x++;\n                              else y++;\n     }\n                    if(x>y){x=x-y;while(x--)printf(\"x\");return 0;}\n                    else y=y-x;while(y--)printf(\"y\"); return 0;\n  }\n    \n                    \n                    \n              \n", "fixed": "#include<stdio.h>\n#include<string.h>\nchar s[1000001];\nint main()\n{\n    int x=0,y=0,c,n;\n    scanf(\"%s\",s);\n    n=strlen(s);\n    while(n--)\n    {\n                              if(s[n]=='x')x++;\n                              else y++;\n     }\n                    if(x>y){x=x-y;while(x--)printf(\"x\");}\n                    else {y=y-x;while(y--)printf(\"y\"); }\n                    return 0;\n  }\n    \n                    \n                    \n              \n"}
{"similarity_score": 0.5251238499646143, "equal_cnt": 26, "replace_cnt": 19, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 25, "lang": "GNU C", "fix_code_uid": "fa6e8d15c1a05969789f9fc1bb1851b0", "bug_code_uid": "4a36080f88ec06e4ac778f60ac7906c5", "src_uid": "dc31adef80f06897ea2f5ef76854bcf1", "apr_id": "8a71ef8e73bfd59e215e29122ba15379", "difficulty": 1200, "tags": ["implementation", "dfs and similar"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nvoid dfs(char* s, int r, int c, int y, int x) {\n  if (y>0&&*(s+y*(r+1)-r-1+x)=='B'||x>0&&*(s+y*(r+1)+x-1)=='B'||\n      y+1<r&&*(s+y*(r+1)+r+1+x)=='B'||x+1<c&&*(s+y*(r+1)+x+1)=='B')\n    *(s+y*(r+1)+x)='W'; else *(s+y*(r+1)+x)='B';\n  if (y&&*(s+y*(r+1)-r-1+x)=='.') dfs(s,r,c,y-1,x);\n  if (x&&*(s+y*(r+1)+x-1)=='.') dfs(s,r,c,y,x-1);\n  if (y+1<r&&*(s+y*(r+1)+r+1+x)=='.') dfs(s,r,c,y+1,x);\n  if (x+1<c&&*(s+y*(r+1)+x+1)=='.') dfs(s,r,c,y,x+1);\n}\nint main() {\n  int n,m; char *s;\n  scanf(\"%d%d\",&n,&m);\n  s=(char*)malloc(n*(m+1)*sizeof(char));\n  for (int i=0;i<n;i++)\n    scanf(\"%s\",s+i*(n+1));\n  for (int i=0;i<n;i++)\n    for (int j=0;j<m;j++)\n      if (*(s+i*(n+1)+j)=='.') dfs(s,n,m,i,j);\n  for (int i=0;i<n;i++) printf(\"%s\\n\",(s+i*(n+1)));\n  return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nchar s[100][101];\nvoid dfs(int r, int c, int y, int x) {\n  s[y][x]=y&&s[y-1][x]=='W'||x&&s[y][x-1]=='W'||\n          y+1<r&&s[y+1][x]=='W'||x+1<c&&s[y][x+1]=='W'?'B':'W';\n  if (y&&s[y-1][x]=='.') dfs(r,c,y-1,x);\n  if (x&&s[y][x-1]=='.') dfs(r,c,y,x-1);\n  if (y+1<r&&s[y+1][x]=='.') dfs(r,c,y+1,x);\n  if (x+1<c&&s[y][x+1]=='.') dfs(r,c,y,x+1);\n}\nint main() {\n  int n,m;\n  scanf(\"%d%d\",&n,&m);\n  for (int i=0;i<n;i++) scanf(\"%s\",*(s+i));\n  for (int i=0;i<n;i++)\n    for (int j=0;j<m;j++)\n      if (s[i][j]=='.') dfs(n,m,i,j);\n  for (int i=0;i<n;i++) printf(\"%s\\n\",s[i]);\n  return 0;\n}"}
{"similarity_score": 0.9963503649635036, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3e3c95a49bf83c70b331934fb7991b0d", "bug_code_uid": "2cff56742c58c69b7cd208d9ffc8bd60", "src_uid": "e3e0625914fdc08950601248b1278f7d", "apr_id": "f8b0b38422b17ac89f437430092426b4", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<limits.h>\n#include<string.h>\nint first[250];\nint second[250];\nint pass[250];\nint main(){\n\tint a,b,c,d,e,f;\n\tscanf(\"%d\",&a);\n\tint i;\n\tfor(i=0;i<a-1;i++){\n\t\tscanf(\"%d\",second+i);\n\t}\n\tfor(i=0;i<a-1;i++){\n\t\tscanf(\"%d\",first+i);\n\t}\n\tfor(i=0;i<a;i++){\n\t\tscanf(\"%d\",pass+i);\n\t}\n\n\tint min =INT_MAX; int min_index =0;\n\tint min1 = INT_MAX;\n\tfor(i=0;i<a;i++){\n\t\tint cnt=0;\n\t\tfor(d=0;d<i;d++){\n\t\t\tcnt+=first[a-2-d];\n\t\t}\n\t\tcnt+=pass[a-1-i];\n\t\tfor(c=a-2-i;c>=0;c--){\n\t\t\tcnt+=second[c];\n\t\t}\n\t\tif(cnt<min){\n\t\t\tmin=cnt;\n\t\t\tmin_index=i;\n\t\t}\n\t}\n\tpass[min_index]=-1;\n\tfor(i=0;i<a;i++){\n\t\tint cnt = 0;\n\t\tif(pass[i]==-1)\n\t\tcontinue;\n\t\tfor(d=0;d<i;d++){\n\t\t\tcnt+=second[d];\n\t\t}\n\t\tcnt+=pass[i];\n\t\tfor(c=-1+i+1;c<a-1;c++){\n\t\t\tcnt+=first[c];\n\t\t}\n\t\tif(cnt<min1)\n\t\tmin1=cnt;\n\t}\n\tprintf(\"%d\",min1+min);\n\t\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<limits.h>\n#include<string.h>\nint first[250];\nint second[250];\nint pass[250];\nint main(){\n\tint a,b,c,d,e,f;\n\tscanf(\"%d\",&a);\n\tint i;\n\tfor(i=0;i<a-1;i++){\n\t\tscanf(\"%d\",second+i);\n\t}\n\tfor(i=0;i<a-1;i++){\n\t\tscanf(\"%d\",first+i);\n\t}\n\tfor(i=0;i<a;i++){\n\t\tscanf(\"%d\",pass+i);\n\t}\n\n\tint min =INT_MAX; int min_index =0;\n\tint min1 = INT_MAX;\n\tfor(i=0;i<a;i++){\n\t\tint cnt=0;\n\t\tfor(d=0;d<i;d++){\n\t\t\tcnt+=first[a-2-d];\n\t\t}\n\t\tcnt+=pass[a-1-i];\n\t\tfor(c=a-2-i;c>=0;c--){\n\t\t\tcnt+=second[c];\n\t\t}\n\t\tif(cnt<min){\n\t\t\tmin=cnt;\n\t\t\tmin_index=a-i-1;\n\t\t}\n\t}\n\tpass[min_index]=-1;\n\tfor(i=0;i<a;i++){\n\t\tint cnt = 0;\n\t\tif(pass[i]==-1)\n\t\tcontinue;\n\t\tfor(d=0;d<i;d++){\n\t\t\tcnt+=second[d];\n\t\t}\n\t\tcnt+=pass[i];\n\t\tfor(c=-1+i+1;c<a-1;c++){\n\t\t\tcnt+=first[c];\n\t\t}\n\t\tif(cnt<min1)\n\t\tmin1=cnt;\n\t}\n\tprintf(\"%d\",min1+min);\n\t\n}"}
{"similarity_score": 0.08539944903581267, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "fb4563d0cf21cc43621f7b2b000f862c", "bug_code_uid": "1ebf4b2281dc2ee73ffaa4f66d2ad3c6", "src_uid": "43081557fe2fbac39dd9b72b137b8fb0", "apr_id": "a6faf31c2369793333dbc6768b32dd0d", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int a;\r\n    char ch;\r\n    int ref2='a'-1;\r\n    for(int i=0;i<n;i++){\r\n        scanf(\"%d\",&a);\r\n        char str[a+1];\r\n        scanf(\"%s\",&str);\r\n        int j=0;\r\n        while (j<a){\r\n            if ((j<a-2) && (str[j+2]=='0')){\r\n                if ((j<a-3) && (str[j+3]=='0')){\r\n                    int val=atoi(str[j]);\r\n                    char ch=val+ref2;\r\n                    printf(\"%c\",ch);\r\n\r\n                j+=1;\r\n                }\r\n                else{\r\n                    int val=atoi(str[j:j+2]);\r\n                    char ch=val+ref2;\r\n                    printf(\"%c\",ch);\r\n                j+=3;\r\n\r\n                }\r\n            }\r\n            else{\r\n                int val=atoi(str[j]);\r\n                    char ch=val+ref2;\r\n                    printf(\"%c\",ch);\r\n\r\n                j+=1;\r\n            }\r\n        }\r\n        printf(\"\\n\");\r\n        }   \r\nreturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint q;\r\n\tscanf(\"%d\", &q);\r\n\twhile (q--)\r\n\t{\r\n\t\tint n, i, j;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tchar s[51], b[51];\r\n\t\tscanf(\"%s\", &s);\r\n\t\tfor (i = 0, j = 0; i<n;)\r\n\t\t{\r\n\t\t\tif (s[i + 2] == '0' && s[i + 3] != '0' && i < (n - 1))\r\n\t\t\t{\r\n\t\t\t\tb[j] = 96 + ((s[i] - 48) * 10) + (s[i + 1] - 48);\r\n\t\t\t\ti = i + 3;\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tb[j] = 96 + (s[i] - 48);\r\n\t\t\t\ti++;\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tb[j] = '\\0';\r\n\t\tprintf(\"%s\\n\", b);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8215200683176772, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "20553dad55f601f2e54d9d167a4c300f", "bug_code_uid": "e477ad2bfd8d1d11d631044541fc78fc", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "b91d808617d8f9eb9ae5587f8b9b2315", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define N_SUBJECTS 3\n#define N_CHILDREN 5000\n#include <stdio.h>\n\n#define MIN(a, b, c) (a < b && b < c ? a : b < c ? b : c)\n\nint child_n[N_SUBJECTS];\n\nint child[N_SUBJECTS][N_CHILDREN];\n\nint main(void) {\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++){\n\t\tint n_i;\n\t\tscanf(\"%d\", &n_i);\n\t\tn_i--;\n\t\tif (child_n[n_i] < N_CHILDREN) {\n\t\t\tchild[n_i][child_n[n_i]] = i;\n\t\t\tchild_n[n_i]++;\n\t\t}\n\t}\n\tn = MIN(child_n[0], child_n[1], child_n[2]);\n\tprintf(\"%d\\n\", n);\n\tfor (int i = 0; i < n; i++)\n\t\tprintf(\"%d %d %d\\n\", child[0][i], child[1][i], child[2][i]);\n\treturn 0;\n}\n", "fixed": "#define N_SUBJECTS 3\n#define N_CHILDREN 5000\n#include <stdio.h>\n\n\nint min(int *a) {\n\tif (a[0] <= a[1] && a[0] <= a[2])\n\t\treturn a[0];\n\telse if (a[1] <= a[2])\n\t\treturn a[1];\n\treturn a[2];\n}\n\nint child_n[N_SUBJECTS];\n\nint child[N_SUBJECTS][N_CHILDREN];\n\nint main(void) {\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++){\n\t\tint n_i;\n\t\tscanf(\"%d\", &n_i);\n\t\tn_i--;\n\t\tif (child_n[n_i] < N_CHILDREN) {\n\t\t\tchild[n_i][child_n[n_i]] = i;\n\t\t\tchild_n[n_i]++;\n\t\t}\n\t}\n\tn = min(child_n);\n\tprintf(\"%d\\n\", n);\n\tfor (int i = 0; i < n; i++)\n\t\tprintf(\"%d %d %d\\n\", child[0][i], child[1][i], child[2][i]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.48907681465821, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "be2422822297a6997b58f0f1082389d3", "bug_code_uid": "ffe060832b1e3e3dca24e482b9bdc1ec", "src_uid": "28610d192329c78580db354f8dfc4094", "apr_id": "8df7af8e79f91b9f591395aa37a92b0f", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <inttypes.h>\n#include <stdio.h> \n\nint main () \n{\t\n\tint64_t t, count = 1, temp;\n\tint64_t x, y, k;\n\n\tprintf (\"Input the number of test cases: \");\n\tscanf (\"%d\", &t);\n\t\n\tfor (int i = 1; i <= t; i++) {\n\t\tprintf(\"Input x, y, z: \"); \t\n\t\tscanf(\"%\"SCNd64\"%\"SCNd64\"%\"SCNd64, &x, &y, &k);\n\t\ttemp = x;\n\t\t\n\t\tint64_t stick = k * y + k;\t\t\n\t\t\n\t\twhile ( temp < stick) {\n\t\t\ttemp = temp + x - 1;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tint exchange = count + k;\n\t\t\n\t\tprintf(\"Case %d - the minimum number of trades: %d\\n\", i, exchange);\t\n\t}\n\t\n\treturn 0;\n}\n\n", "fixed": "#include <inttypes.h>\n#include <stdio.h>\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tint64_t x, y, k;\n\t\tscanf(\"%\"SCNd64\"%\"SCNd64\"%\"SCNd64,\n\t\t\t  &x, &y, &k);\n\t\tint64_t sticks = (y + 1) * k;\n\t\tint64_t sticks_trade = (sticks - 1)/(x - 1)\n\t\t\t+ ((sticks - 1) % (x - 1) > 0);\n\t\tprintf(\"%\"PRId64\"\\n\", sticks_trade + k);\n\t}\n\treturn 0;\n}\n\n/*\n#include <inttypes.h>\n#include <stdio.h> \n\nint main () \n{\t\n\tint64_t t, count = 1, temp;\n\tint64_t x, y, k;\n\n\tprintf (\"Input the number of test cases: \");\n\tscanf (\"%d\", &t);\n\t\n\tfor (int i = 1; i <= t; i++) {\n\t\tprintf(\"Input x, y, z: \"); \t\n\t\tscanf(\"%\"SCNd64\"%\"SCNd64\"%\"SCNd64, &x, &y, &k);\n\t\ttemp = x;\n\t\t\n\t\tint64_t stick = k * y + k;\t\t\n\t\t\n\t\twhile ( temp < stick) {\n\t\t\ttemp = temp + x - 1;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tint exchange = count + k;\n\t\t\n\t\tprintf(\"Case %d - the minimum number of trades: %d\\n\", i, exchange);\t\n\t}\n\t\n\treturn 0;\n} */\n\n"}
{"similarity_score": 0.8475177304964538, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "bf9d5735ecc16e95c6e06cadfbe91bda", "bug_code_uid": "b5f9fe4aadb59b15ef649b3cf8483608", "src_uid": "98de093d78f74273e0ac5c7886fb7a41", "apr_id": "15ad810bed1956df0c68a3b3e27fa2c0", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <math.h>\nint main(){\n\nlong long int a,b,k,i;short int stop=0;\nscanf(\"%I64d%I64d%I64d\",&k,&a,&b);\n\ni=a;while (stop!=1 && i<=b){if(i%k==0){printf(\"%I64d\",((b-i)/k)+1);stop=1;}else{i++;}  }\nif(stop==0){printf(\"0\");}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include <math.h>\nint main(){\n\nlong long a=0,b=0,k=0,i;short int stop=0;\nscanf(\"%I64d%I64d%I64d\",&k,&a,&b);\n\ni=a;while (stop!=1 && i<=b){if(i%k==0){printf(\"%I64d\",((b-i)/k)+1);stop=1;}else{if(fabs(i%k)==1){i+=1;}else{i+=fabs(i%k)-1;} }}\nif(stop==0){printf(\"0\");}\nreturn 0;\n}\n"}
{"similarity_score": 0.9235993208828522, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9ee06ab5213c6c7372de42223e1b7b3f", "bug_code_uid": "149a3010b2eaee7baaa4e609b215dd23", "src_uid": "99f37936b243907bf4ac1822dc547a61", "apr_id": "de887ce1b76749314cc66f495a74a517", "difficulty": 1200, "tags": ["implementation", "greedy", "games"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,c=0;\n    char s[n+1];\n    scanf(\"%d\",&n);\n    int d=n-10;\n    scanf(\"%s\",&s);\n    for(i=0; i<d; i++)\n    {\n        if(s[i]=='8')\n        {\n            c++;\n        }\n    }\n\n    if(c>(d/2))\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,c=0;\n    \n    scanf(\"%d\",&n);\n    char s[n+1];\n    int d=n-10;\n    scanf(\"%s\",&s);\n    for(i=0; i<d; i++)\n    {\n        if(s[i]=='8')\n        {\n            c++;\n        }\n    }\n\n    if(c>(d/2))\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n}\n"}
{"similarity_score": 0.9975429975429976, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "91c04316b62f441f8c727e0ee6942505", "bug_code_uid": "e90f54dad8513bee04a30f9cfea297d3", "src_uid": "c8531b2ab93993b2c3467595ad0679c5", "apr_id": "714c3e62247743d543d12d9a2aee10b9", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void){\n  unsigned long long int n,sum=0,i,in;\n  scanf(\"%I64u\",&n);\n  for(i=1;i<=n;i++){\n    scanf(\"%I64u\",in);\n    sum+=i*in-(i-1);\n  }\n  printf(\"%I64u\\n\",sum);\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(void){\n  unsigned long long int n,sum=0,i,in;\n  scanf(\"%I64u\",&n);\n  for(i=1;i<=n;i++){\n    scanf(\"%I64u\",&in);\n    sum+=i*in-(i-1);\n  }\n  printf(\"%I64u\\n\",sum);\n  return 0;\n}\n"}
{"similarity_score": 0.9984472049689441, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ffe1134a6a4e340f88175a8afbe55b65", "bug_code_uid": "f964d6439a72553c78197c207deb6a72", "src_uid": "60eb29b2dfb4d6b136c58b33dbd2558e", "apr_id": "b8876ea75df8e4ff843bf3a9d2af57c5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n     int x, y, z, i, j, k, a, b, c, n, m, t;\r\n     char s[10];\r\n     \r\n     scanf(\"%d\",&t);\r\n     while(t--)\r\n     {\r\n         scanf(\"%s\", s);\r\n         for(x = 0; x < 5; x++)\r\n           for(y = x + 1; y < 6; y++)\r\n              if((s[x] == 'B' && s[y] == 'b') ||\r\n                 (s[x] == 'R' && s[y] == 'r') ||\r\n                 (s[x] == 'G' && s[x] == 'g')    )\r\n                 {\r\n                       puts(\"NO\");\r\n                       goto end;\r\n                 }\r\n             \r\n            puts(\"YES\");\r\n          end:;  \r\n     }\r\n     return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n     int x, y, z, i, j, k, a, b, c, n, m, t;\r\n     char s[10];\r\n     \r\n     scanf(\"%d\",&t);\r\n     while(t--)\r\n     {\r\n         scanf(\"%s\", s);\r\n         for(x = 0; x < 5; x++)\r\n           for(y = x + 1; y < 6; y++)\r\n              if((s[x] == 'B' && s[y] == 'b') ||\r\n                 (s[x] == 'R' && s[y] == 'r') ||\r\n                 (s[x] == 'G' && s[y] == 'g')    )\r\n                 {\r\n                       puts(\"NO\");\r\n                       goto end;\r\n                 }\r\n             \r\n            puts(\"YES\");\r\n          end:;  \r\n     }\r\n     return 0;\r\n}\r\n"}
{"similarity_score": 0.51875, "equal_cnt": 10, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "787f1a9d0f9d4bc75316a861298b7752", "bug_code_uid": "ff8f0afee1ff498e5c214d31d37073df", "src_uid": "3185ae6b4b681a10a21d02e67f08fd19", "apr_id": "1de04307811dc6afad25d4ecad8e550b", "difficulty": 1600, "tags": ["number theory", "games", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint m,n,i,ss,max;\n\tscanf(\"%d\",&m);\n\tscanf(\"%d\",&n);\n\tss=max=n;\n\tfor(i=1;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tif(max<n)max=n;\n\t\twhile(n!=ss)\n\t\tif(n>ss)n-=ss;\n\t\telse ss-=n;\n\t}\n\tn=max/ss;\n\tif((n-m)%2)printf(\"Alice\");\n\telse printf(\"Bob\");\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int m,n,i,ss,kk,max;\n    \n    while(scanf(\"%d\",&m)!=EOF){\n    scanf(\"%d\",&n);\n    ss=max=n;\n    for(i=1;i<m;i++)\n    {\n        scanf(\"%d\",&n);\n        if(max<n)max=n;\n        if(ss>n){kk=ss;ss=n;n=kk;}\n        while(ss){kk=ss;ss=n%ss;n=kk;}\n        ss=n;\n    }\n    n=max/ss;\n    if((n-m)%2)printf(\"Alice\\n\");\n    else printf(\"Bob\\n\");\n    }\n}"}
{"similarity_score": 0.9073569482288828, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c9ad7ce3ccd7d64f46290c4732b50c98", "bug_code_uid": "8237fedfdcbb69af7e31342777090dad", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "e01fc565e57f49f20554a3ddc5e77f52", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n    int n,i,c=0,x;\n    char a[1002],b[1002];\n    scanf(\"%d%s%s\",&n,a,b);\n    for(i=0;i<n;i++)\n    {\n        x=0;\n        x=abs(a[i]-b[i]);\n        if(x==6)\n            x=4;\n        if(x==7)\n            x=3;\n        c=c+x;\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n    int n,i,c=0,x;\n    char a[1002],b[1002];\n    scanf(\"%d%s%s\",&n,a,b);\n    for(i=0;i<n;i++)\n    {\n        x=0;\n        x=abs(a[i]-b[i]);\n        if(x==6)\n            x=4;\n        if(x==7)\n            x=3;\n        if(x==8)\n            x=2;\n        if(x==9)\n            x=1;\n        c=c+x;\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}\n"}
{"similarity_score": 0.38450899031811897, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "e67482c4e0faed18d40346efbe1ed340", "bug_code_uid": "1f788084f37df16ffcbef7ac69cd1251", "src_uid": "d665ecbf36cc0c0ddd148137fb693bf2", "apr_id": "8324e4d22f73716adf04a2d67e3726fc", "difficulty": 1100, "tags": ["brute force", "greedy", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include\"stdio.h\"\r\n\r\nint gcd(int a,int b) \r\n{    \r\n    if(b) while((a%=b) && (b%=a));    \r\n    return a+b;\r\n}\r\n\r\nvoid solve(){\r\n    int len;\r\n    scanf(\"%d\",&len);\r\n    int a[200010];\r\n    for(int i = 1; i <= len;i++){\r\n        scanf(\"%d\",a+i);\r\n    }\r\n    int flag= 0;\r\n    if(a[len] == 1){printf(\"%d\\n\",len + len);}\r\n    else{\r\n        for(int i = len ;i > 1;i--){\r\n        for(int j = i - 1;j > 0;j--){\r\n            int cop = gcd(a[i],a[j]);\r\n            if(cop == 1 && i + j > flag){\r\n           flag =  i + j;\r\n                 }\r\n            }\r\n            \r\n        }\r\n        if(flag == 0){printf(\"-1\\n\");}\r\n        else {printf(\"%d\\n\",flag);}\r\n    }\r\n    \r\n    \r\n}\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        solve();\r\n    }\r\n}", "fixed": "#include\"stdio.h\"\r\n\r\nint gcd(int a,int b) \r\n{    \r\n    if(b) while((a%=b) && (b%=a));    \r\n    return a+b;\r\n}\r\n\r\nvoid solve(){\r\n    int len;\r\n    scanf(\"%d\",&len);\r\n    int num[1010] = {0};\r\n    int temp = 0;\r\n    for(int i = 1; i <= len;i++){\r\n        scanf(\"%d\",&temp);\r\n        num[temp] = i;\r\n    }\r\n    int max= -1;\r\n   for(int i =1;i < 1001;i++){\r\n       for(int j = 1;j < 1001;j++){\r\n           if(num[i] != 0&& num[j] != 0 && gcd(i, j) == 1){\r\n               max = max > num[i] + num[j] ? max:num[i] + num[j];\r\n           }\r\n       }\r\n   }\r\n    printf(\"%d\\n\",max);\r\n    \r\n    \r\n}\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        solve();\r\n    }\r\n}"}
{"similarity_score": 0.3905325443786982, "equal_cnt": 26, "replace_cnt": 20, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "da67b3b9a5f25545cc53986373857be2", "bug_code_uid": "46c7775558fb6016e4fa60095d6cbd86", "src_uid": "9640b7197bd7b8a59f29aecf104291e1", "apr_id": "e384831581334020f70951359a51c3d1", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n\tint t;\r\n\tchar  s[100];\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint i=0;\r\n\t\tint j=strlen(s)/2;\r\n\t\tint k=strlen(s)/2;\r\n\t\tscanf(\"%s\",s);\r\n\r\n\t\tif(strlen(s)%2!=0){\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\telse if(strlen(s)==2){\r\n\t\t    if(s[0]==s[1]){\r\n\t\t        printf(\"YES\");\r\n\t\t        \r\n\t\t    }\r\n\t\t    \r\n\t\t    else{\r\n\t\t        printf(\"NO\");\r\n\t\t    }\r\n\t\telse{\r\n\t\t\tchar arr1[50],arr2[50];\r\n\t\t\tint g=0;\r\n\t\t\tint count=0;\r\n\t\t\tfor(i=0;i<k;i++){\r\n\t\t\t\t arr1[i]=s[i];\r\n\t\t\t}\r\n\t\t\tfor(j=k;j<100;j++){\r\n\t\t\t\t arr2[g]=s[j];\r\n\t\t\t\tg++;\r\n\t\t\t}\r\n\t\tfor(i=0;i<k;i++){\r\n\t\t    if(arr1[i]==arr2[i]){\r\n\t\t        count++;\r\n\t\t    }\r\n\t\t}\r\n\t\tif(count==k){\r\n\t\t    printf(\"YES\\n\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\t\t\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint n,len,i,j;\r\n\tchar a[100];\r\n\tscanf(\"%d\",&n);\r\n\twhile(n--)\r\n\t{\r\n\t\tscanf(\"%s\",a);\r\n\t\tlen=strlen(a);\r\n\t\tif (len%2!=0)\r\n\t    printf(\"NO\\n\");\r\n\t\tif (len%2==0)\r\n\t\t{\r\n\t\t  \tfor(i=0,j=len/2;i<len/2,j<len;i++,j++)\r\n\t\t  \t{\r\n\t\t  \t\t\r\n\t\t  \t\tif(a[j]!=a[i])\r\n\t\t  \t\tbreak;\r\n\t\t\t  }\r\n\t\t\t  if(i>=len/2)\r\n\t\t\t  {\r\n\t\t\t  \tprintf(\"YES\\n\");\r\n\t\t\t  }\r\n\t\t\t  else\r\n\t\t\t  printf(\"NO\\n\");\r\n\t\t}\r\n\t } \r\n } "}
{"similarity_score": 0.296411856474259, "equal_cnt": 15, "replace_cnt": 10, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "b2049d4da9079f160b91348c241546c7", "bug_code_uid": "245337082b6aecad134b8155ab7bc54a", "src_uid": "ef32a8f37968629673547db574261a9d", "apr_id": "640aaf036a60515acb4be192b156e34a", "difficulty": 1400, "tags": ["two pointers", "binary search", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int n,t,sum,k,ans,i,j,temp,flag,arr2[2];\n    long int arr[100000];\n    long int arr1[100000];\n    scanf(\"%ld %ld\",&n,&t);\n    for(i=0;i<n;i++){\n        scanf(\"%ld\",&arr[i]);\n    }\n\n    for(i=0,k=0,j=0;j<n;i++,k++){\n            flag=0;\n            ans=0;\n            sum=0;\n            sum=sum+arr[i];\n            if(sum>t){\n                flag=1;\n            }\n            else{\n            ans++;\n            }\n        for(j=i+1;j<n;j++)\n            {\n                if(flag){\n                    break;\n                }\n            sum=sum+arr[j];\n            if(sum<=t){\n                ans++;\n            }\n            else{\n\n                break;\n            }\n\n        }\n\n    arr1[k]=ans;\n\n        if(k==0){\n            arr2[0]=arr1[k];\n        }\n        else{\n            if(arr2[0]<arr1[k]){\n                arr2[0]=arr1[k];\n            }\n        }\n    }\n        printf(\"%ld\\n\",arr2[0]);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int flag=0,temp=0;\n    long int n,t,sum=0,k,i,j;\n    long int arr[100000];\n    long int arr1[100000];\n    scanf(\"%ld %ld\",&n,&t);\n    for(i=0;i<n;i++){\n        scanf(\"%ld\",&arr[i]);\n    }\n    for(i=0,j=0,k=0;j<n;){\n        if(sum<=t){\n            sum=sum+arr[j];\n            j++;\n            if(j==n){\n                flag=1;\n            }\n        }\n        else{\n            j--;\n            sum=sum-arr[j];\n            arr1[k]=j-i;\n\n            k++;\n            if(k=0){\n                temp=arr1[0];\n            }\n            else{\n                if(arr1[k]>temp){\n                    temp=arr1[k];\n                }\n            }\n            sum=sum-arr[i];\n            i++;\n\n        }\n    }\n\n    if(flag){\n            if(sum>t){\n                arr1[k]=j-1-i;\n\n            }\n            else{\n        arr1[k]=j-i;\n            }\n\n        if(arr1[k]>temp){\n                    temp=arr1[k];\n                }\n\n    }\n    printf(\"%d\",temp);\n}\n\n"}
{"similarity_score": 0.9762470308788599, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "107363754682f52b402f491ab399ed62", "bug_code_uid": "109220807be397b3e6fdb4c73bb5ea5f", "src_uid": "b85c8bfbe67a23a81bef755f9313115a", "apr_id": "0eb9f7ee422f29ee7d12280535152ed6", "difficulty": 1500, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    int i, n, k, d;\n    scanf(\"%d %d\", &n, &k);\n    d = k - n / 2;\n    if (n == 1) {\n        printf(\"%d\", k == 0 ? 1 : -1);\n    } else if (k == 0 || d < 0) {\n        puts(\"-1\");\n    } else {\n        if (d > 0) {\n            printf(\"%d %d \", d, d * 2);\n            n -= 2;\n        }\n        for (i = 0; i < n; i++)\n            printf(\"%d \", 1000000000 - i);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int i, n, k, d;\n    scanf(\"%d %d\", &n, &k);\n    d = k - n / 2;\n    if (n == 1) {\n        printf(\"%d\", k == 0 ? 1 : -1);\n    } else if (k == 0 || d < 0) {\n        puts(\"-1\");\n    } else {\n        if (d > 0) {\n            printf(\"%d %d \", (d + 1), (d + 1) * 2);\n            n -= 2;\n        }\n        for (i = 0; i < n; i++)\n            printf(\"%d \", 1000000000 - i);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9748953974895398, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "0998a3d9ac09c4eda0aabacb6fb5b536", "bug_code_uid": "663b6f85599262ac36a8fd763722ee80", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "da17cb72631ef69ad45b2abd260187d1", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\nchar c;int n,x=0,y=0;\nscanf(\"%d\",&n);\nint i;\nfor(i=0;i<n;i++)\n{\n scanf(\"%c\",&c);\n if(c&1) x++;\n else y++;\n}\nif(x>y) printf(\"Anton\");\nelse if(x<y)printf(\"Danik\");\nelse printf(\"Friendship\");\n return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\nchar c;int n,x=0,y=0;\nscanf(\"%d\",&n);getchar();\nint i;\nfor(i=0;i<n;i++)\n{\n scanf(\"%1c\",&c);\n if(c&1) x++;\n else y++;\n}\nif(x>y) printf(\"Anton\");\nelse if(x<y)printf(\"Danik\");\nelse printf(\"Friendship\");\n return 0;\n}"}
{"similarity_score": 0.5736738703339882, "equal_cnt": 18, "replace_cnt": 6, "delete_cnt": 8, "insert_cnt": 4, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "ce4a725173c63b47ba6fc021392cd34a", "bug_code_uid": "0659a2e3e84c0ecfc066ffa491094f4d", "src_uid": "b7e36ca8a96dd7951359070d4953beec", "apr_id": "14fbcd3f6e77bf5d188bfa7c377ddd68", "difficulty": 800, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,x,y;\n    scanf(\"%d\",n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",x);\n        for(y=1;y<=100000;y++){\n        for(int a=2;a<(x+y);a++){\n            if((x+y)%a!=0)\n                print(\"%d\\n\",y);\n            else\n                continue;\n        }\n        }\n    }\n}\n\t \t\t  \t \t\t\t  \t \t    \t\t\t\t \t\t\t \t\t", "fixed": "#include<stdio.h>\nint main(){\n    int t,n;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d\",&n);\n        printf(\"%d\\n\",n);\n    }\n}\n   \t \t\t\t\t  \t\t\t  \t    \t\t \t \t\t\t\t"}
{"similarity_score": 0.9969849246231156, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "093a6ad835945932d8ff140cfda9d947", "bug_code_uid": "970d882b4d19f1b39347ed2958f233f2", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "ae818c7c570a3c4a4fe48b0080f7e649", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{   long long int k,acount=0,bcount=0;\n    char n[100000];\n    scanf(\"%lld %s\",&k,n);\n    long long int len=strlen(n);\n    char ch='A';\n   \n   for(k=0;k<len;k++)\n   {\n       if(ch==n[k])\n       {\n           acount++;\n       }\n       else\n       {\n          bcount++;\n       }\n   }\n\n  if(acount > bcount)\n  {\n      printf(\"Anton\");\n  }\n  else if (bcount>count)\n  {\n      printf(\"Danik\");\n  }\n  else\n  {\n      printf(\"Friendship\");\n  }\n  return 0;\n\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{   long long int k,acount=0,bcount=0;\n    char n[100000];\n    scanf(\"%lld %s\",&k,n);\n    long long int len=strlen(n);\n    char ch='A';\n   \n   for(k=0;k<len;k++)\n   {\n       if(ch==n[k])\n       {\n           acount++;\n       }\n       else\n       {\n          bcount++;\n       }\n   }\n\n  if(acount > bcount)\n  {\n      printf(\"Anton\");\n  }\n  else if (bcount > acount)\n  {\n      printf(\"Danik\");\n  }\n  else\n  {\n      printf(\"Friendship\");\n  }\n  return 0;\n\n}"}
{"similarity_score": 0.9417040358744395, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "4c4ca353e0d1ea3ac318a1216990cc03", "bug_code_uid": "58588beeb7f7e326bbb6e55267b6d471", "src_uid": "f9b56b3fddcd5db0d0671714df3f8646", "apr_id": "94e8cc42253df8680b0575fcf07327b9", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\\n\",&n);\n    int a[n],i,j,d,c;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    c=0,d=0;\n    for(i=0;i<n;i++){\n        if(a[i]==-1){\n            continue;\n        }\n        else{\n            for(j=i+1;j<n;j++){\n                if(a[i]==a[j]){\n                    c++;\n                    a[j]=-1;\n                }\n            }\n            if(c!=0){\n                d=d+(c+1);\n            }\n            c=0;\n        }\n    }\n    printf(\"%d\",d/4);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\\n\",&n);\n    int a[n],i,j,d,c;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    c=0,d=0;\n    for(i=0;i<n;i++){\n        if(a[i]==-1){\n            continue;\n        }\n        else{\n            for(j=i+1;j<n;j++){\n                if(a[i]==a[j]){\n                    c++;\n                    a[j]=-1;\n                }\n            }\n            if(c%2==0){\n                d=d+c;\n            }\n            else{\n                d=d+(c+1);\n            }\n            c=0;\n        }\n    }\n    printf(\"%d\",d/4);\n    return 0;\n}\n"}
{"similarity_score": 0.9973890339425587, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9870699be4f281548c119ff0847c46ad", "bug_code_uid": "53718814bc57b787ec47e636cda4cd7a", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "fbd542862a6535c6a99b81d5f90e794c", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int a,b,d;\n    char c;\n    scanf(\"%d\",&d);\n    a=0;\n    b=0;\n    for(int i=1 ; i<=d ; i++)\n    {\n        scanf(\"%c\",&c);\n        if(c=='D')\n        b++;\n        else if(c=='A')\n        a++;\n    }\n    if(a>b)\n    printf(\"Anton\");\n    else if(a<b)\n    printf(\"Danik\");\n    else if(a==b)\n    printf(\"Friendship\");\n\treturn 0;\n}\n\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int a,b,d;\n    char c;\n    scanf(\"%d\",&d);\n    a=0;\n    b=0;\n    for(int i=0 ; i<=d ; i++)\n    {\n        scanf(\"%c\",&c);\n        if(c=='D')\n        b++;\n        else if(c=='A')\n        a++;\n    }\n    if(a>b)\n    printf(\"Anton\");\n    else if(a<b)\n    printf(\"Danik\");\n    else if(a==b)\n    printf(\"Friendship\");\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.9537037037037037, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "e6d184d8ced0eca3cdd2a76f1bef4948", "bug_code_uid": "aa675e4f305383246f68ca2dace5fc67", "src_uid": "5099a9ae62e82441c496ac37d92e99e3", "apr_id": "fda2ca80b3ec03553b73328984bf8f42", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n, h, k, i;\n    scanf(\"%d%d%d\", &n, &h, &k);\n    int arr[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n    int sum=0,f=0;\n    for(i=0; i<n; i++)\n    {\n        f=f+arr[i];\n        if(f>h)\n        {\n            sum++;\n            if(arr[i]>=k)\n            {\n                sum+=(arr[i]/k);\n                f=arr[i]%k;\n            }\n            else\n                f=arr[i];\n        }\n        else\n        {\n            sum+=f/k;\n            f=f%k;\n        }\n    }\n    if(f!=0)\n    {\n        printf(\"%d\", sum+1);\n    }\n    else\n        printf(\"%d\", sum);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#define ll long long int\nint main()\n{\n    ll n, h, k, i;\n    scanf(\"%lld%lld%lld\", &n, &h, &k);\n    ll arr[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%lld\", &arr[i]);\n    }\n    ll sum=0,f=0;\n    for(i=0; i<n; i++)\n    {\n        f=f+arr[i];\n        if(f>h)\n        {\n            sum++;\n            if(arr[i]>=k)\n            {\n                sum+=(arr[i]/k);\n                f=arr[i]%k;\n            }\n            else\n                f=arr[i];\n        }\n        else\n        {\n            sum+=f/k;\n            f=f%k;\n        }\n    }\n    if(f!=0)\n    {\n        printf(\"%lld\", sum+1);\n    }\n    else\n        printf(\"%lld\", sum);\n    return 0;\n}"}
{"similarity_score": 0.9928057553956835, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f2c6f0761d395f50750fc0e224a8e3ae", "bug_code_uid": "a933fa73d7f3758f7381509ccba329b6", "src_uid": "a52ceb8a894809b570cbb74dc5ef76e1", "apr_id": "36c8153b101a2e84043926dab2f3a302", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nmain()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    if(n==2 || n==1) printf(\"1\\n1\\n\");\n    else if(n==3) printf(\"2\\n1 3\\n\");\n    else if(n==4) printf(\"3\\n1 4 2\\n\");\n    else{\n        printf(\"%d\\n\",n);\n        printf(\"1\");\n        for(i=3;i<=n;i+=2){\n            printf(\" %d\",i);\n        }\n\n        for(i=2;i<=n;i+=2){\n            printf(\" %d\",i);\n        }\n        printf(\"\\n\");\n\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nmain()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    if(n==2 || n==1) printf(\"1\\n1\\n\");\n    else if(n==3) printf(\"2\\n1 3\\n\");\n    else if(n==4) printf(\"4\\n3 1 4 2\\n\");\n    else{\n        printf(\"%d\\n\",n);\n        printf(\"1\");\n        for(i=3;i<=n;i+=2){\n            printf(\" %d\",i);\n        }\n\n        for(i=2;i<=n;i+=2){\n            printf(\" %d\",i);\n        }\n        printf(\"\\n\");\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8930065750149432, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b208c2aef560f2a6ddd33bb33e9bc373", "bug_code_uid": "62672064555f4bdd956f57ae843ded68", "src_uid": "4abdd16670a796be3a0bff63b9798fed", "apr_id": "414d3333c51cc6295e4ad874be8167db", "difficulty": 1100, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\n#include <math.h>\n#include <string.h>\n#include <ctype.h>\nint main (void){\n    long int n , i , j , x ,temp,counter=1,sum=0;\n    scanf(\"%d\",&n);\n    long int a[n],b[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a[i],&b[i]);\n        counter+=b[i];\n    }\n    for(i=0;i<n;i++){\n        x=i;\n        for(j=i+1;j<n;j++){\n            if(b[j]>=b[x]){\n                if(b[j]==b[x]){\n                   if(a[j]>a[x]){\n                    x=j;\n                }\n            }\n                else\n                x=j;\n            }\n        }\n        temp=a[i];\n        a[i]=a[x];\n        a[x]=temp;\n        temp=b[i];\n        b[i]=b[x];\n        b[x]=temp;\n    }\n    for(i=0;i<counter;i++)\n        sum=sum+a[i];\n\n    printf(\"%d\",sum);\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <conio.h>\n#include <math.h>\n#include <string.h>\n#include <ctype.h>\nint main (void){\n    long int n , i , j , x ,temp,counter=1,sum=0;\n    scanf(\"%d\",&n);\n    long int a[n],b[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a[i],&b[i]);\n        counter+=b[i];\n    }\n    for(i=0;i<n;i++){\n        x=i;\n        for(j=i+1;j<n;j++){\n            if(b[j]>=b[x]){\n                if(b[j]==b[x]){\n                   if(a[j]>a[x]){\n                    x=j;\n                }\n            }\n                else\n                x=j;\n            }\n        }\n        temp=a[i];\n        a[i]=a[x];\n        a[x]=temp;\n        temp=b[i];\n        b[i]=b[x];\n        b[x]=temp;\n    }\n    if(counter>n){\n        for(i=0;i<n;i++){\n            sum=sum+a[i];\n        }\n    }\n    else{\n        for(i=0;i<counter;i++)\n            sum=sum+a[i];\n    }\n\n    printf(\"%d\",sum);\n\n    return 0;\n}"}
{"similarity_score": 0.9875311720698254, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f68453736369fa2d8838f066c1f4945e", "bug_code_uid": "f1f1319985ac94c82fd479e6a8e65fd8", "src_uid": "8a1ceac1440f7cb406f12d9fc2ca0e20", "apr_id": "f14ea5ee569730c37a680cb15ee2f74a", "difficulty": 800, "tags": ["binary search", "constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int  T;\r\n\r\n    scanf(\"%d\",&T);\r\n\r\n    while(T--)\r\n\r\n    {\r\n       int a, b, x = 0, ans = 0;\r\n\r\n       scanf(\"%d %d\",&a,&b);\r\n\r\n       if(a == 0 || b == 0) ans = 0;\r\n\r\n       if(a != 0 && b != 0) x = (a + b) / 4;\r\n\r\n       if(a < x) ans = a;\r\n\r\n       if(b < x) ans = b;\r\n\r\n       else ans = x;\r\n\r\n       printf(\"%d\\n\",ans);\r\n\r\n\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int  T;\r\n\r\n    scanf(\"%d\",&T);\r\n\r\n    while(T--)\r\n\r\n    {\r\n       int a, b, x = 0, ans = 0;\r\n\r\n       scanf(\"%d %d\",&a,&b);\r\n\r\n       if(a == 0 || b == 0) ans = 0;\r\n\r\n       else if(a != 0 && b != 0) x = (a + b) / 4;\r\n\r\n       if(a < x) ans = a;\r\n\r\n       else if(b < x) ans = b;\r\n\r\n       else ans = x;\r\n\r\n       printf(\"%d\\n\",ans);\r\n\r\n\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9801324503311258, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "553a08b7592716033d90836bf5c266d0", "bug_code_uid": "bfbb1bf84bbdcb866b8e800ef25fc46c", "src_uid": "4c0b0cb8a11cb1fd40fef47616987029", "apr_id": "bd8278ba1b0af0d99f20adb15bb43eb4", "difficulty": 800, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//imrat_67\r\n#include<stdio.h>\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n    char s[4];\r\n    scanf(\"%s\",s);\r\n    for(int i=0;i<4;i++)\r\n        s[i]=tolower(s[i]);\r\n    int a;\r\n    a=strcmp(s,\"yes\");\r\n    if(a==0) printf(\"YES\\n\");\r\n    else printf(\"NO\\n\");\r\n    return 0;\r\n}}\r\n", "fixed": "//imrat_67\r\n#include<stdio.h>\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n    char s[4];\r\n    scanf(\"%s\",s);\r\n    for(int i=0;i<4;i++)\r\n        s[i]=tolower(s[i]);\r\n    int a;\r\n    a=strcmp(s,\"yes\");\r\n    if(a==0) printf(\"YES\\n\");\r\n    else printf(\"NO\\n\");\r\n}\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.9810017271157168, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ca57d7851018efd222e6adcdc032799d", "bug_code_uid": "277ddd90344b482d5ded5b6a66345291", "src_uid": "3c984366bba580993d1694d27982a773", "apr_id": "3e9d9b6e703ca851200be90d0ae51315", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint m,e,c,g,k,l=1;\n\tlong int total,total1;\n\tscanf(\"%d\",&k);\n\tscanf(\"%d %d %d %d\",&m,&e,&c,&g);\n\ttotal=e+m+c+g;\n\tk--;\n\twhile(k--)\n\t{\n\t\tscanf(\"%d %d %d %d\",&m,&e,&c,&g);\n\t\ttotal1=e+m+c+g;\n\t\tif(total<=total1)\n\t\t{\n\t\t\t++l;\n\t\t}\n\t}\n\tprintf(\"%d\",l);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint m,e,c,g,k,l=1;\n\tlong int total,total1;\n\tscanf(\"%d\",&k);\n\tscanf(\"%d %d %d %d\",&m,&e,&c,&g);\n\ttotal=e+m+c+g;\n\tk--;\n        while(k--)\n\n\t{\n\t\tscanf(\"%d %d %d %d\",&m,&e,&c,&g);\n\t\ttotal1=e+m+c+g;\n\t\tif(total<total1)\n\t\t{\n\t\t\t++l;\n\t\t}\n\t}\n\tprintf(\"%d\",l);\n\treturn 0;\n}"}
{"similarity_score": 0.9107303877366997, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "cc311b4a15072e42540e72e75f6a34f8", "bug_code_uid": "ab4b5f2a91baf2d7c9615b108e9bd345", "src_uid": "edf394051c6b35f593abd4c34b091eae", "apr_id": "f8853f26bb127ef3b6b049735b627c28", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint min(int x,int y)\n{\n    if(x<=y)\n        return x;\n    else\n        return y;\n}\nint abs(int x)\n{\n    if(x<0)\n        return -x;\n    else\n        return x;\n}\n\nint main()\n{\n    int t,x,y,a,b;\n    long long int count=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d%d\",&x,&y);\n        scanf(\"%d%d\",&a,&b);\n        if(2*a<=b)\n            count=(abs(x)+abs(y))*a;\n        else\n            count=min(x,y)*b+abs(x-y)*a;\n        printf(\"%lld\\n\",count);\n        count=0;\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nlong long int min(long long int x,long long int y)\n{\n    if(x<=y)\n        return x;\n    else\n        return y;\n}\nlong long int abs(long long int x)\n{\n    if(x<0)\n        return -x;\n    else\n        return x;\n}\n\nint main()\n{\n    long long int t,x,y,a,b;\n    long long int count=0;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        scanf(\"%lld%lld\",&x,&y);\n        scanf(\"%lld%lld\",&a,&b);\n        if(2*a<=b)\n            count=(abs(x)+abs(y))*a;\n        else\n            count=min(x,y)*b+abs(x-y)*a;\n        printf(\"%lld\\n\",count);\n        count=0;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7664041994750657, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 5, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "a4ece9d19bdc929b1cf8fa883fb7dbee", "bug_code_uid": "3ac9a321bc5e5507195a9a58d77866c5", "src_uid": "d497431eb37fafdf211309da8740ece6", "apr_id": "5657b57b3cb1387e0eb512302c3cf0c2", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nusing namespace std;\n\nint main() {\n  int h1,a1,c1, h2, a2;\n  int n=0;\n  int t[100];\n  scanf(\"%d%d%d\",&h1,&a1,&c1);\n\tscanf(\"%d%d\",&h2,&a2);\n  while(h2>0) {\n    if (h1-a2>0 || h2-a1<=0) {\n      t[n++] = 1;\n      h2-=a1;\n    } else {\n      t[n++] = 0;\n      h1+=c1;\n    }\n    h1-=a2;\n  }\n  printf(\"%d\\n\", n);\n  for (int i=0; i<n;i++){\n    printf(\"%s\\n\",t[i]?\"STRIKE\":\"HEAL\");\n  }\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n  int h1,a1,c1, h2, a2;\n  int n=0;\n  int t[1000000];\n  scanf(\"%d%d%d\",&h1,&a1,&c1);\n\tscanf(\"%d%d\",&h2,&a2);\n  while(h2>0) {\n    if (h1-a2>0 || h2-a1<=0) t[n++] = 1,h2-=a1;\n      else t[n++] = 0,h1+=c1;\n    h1-=a2;\n  }\n  printf(\"%d\\n\", n);\n  for (int i=0; i<n;i++)\n    printf(\"%s\\n\",t[i]?\"STRIKE\":\"HEAL\");\n  return 0;\n}\n"}
{"similarity_score": 0.46608695652173915, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "77f543cf0c582478459d11b0a5ffe7f7", "bug_code_uid": "ffa9118bd430cf55bd602e68e8a6747d", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "d3f60283427864954b460eb80d18281d", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,p,v,t,s=0;\n    printf(\"enter the number of problem:\\n\");\n    scanf(\"%d\",&n);\n    printf(\"\\n\");\n\n    for(n;n>=1&&n<=100;n--) {\n        scanf(\"%d%d%d\",&p,&v,&t);\n         if(p+v+t>1) {\n            s=s+1;\n        }\n        printf(\"\\n\");\n    }\n    printf(\"%d\",s);\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n, p, v,i, t, solve = 0;\n    scanf(\"%d\",&n);\n    for ( i = 0; i < n; i++) {\n        scanf(\"%d%d%d\", &p ,&v ,&t);\n        if (p + v + t > 1) {\n            solve++;\n        }\n    }\n    printf(\"%d\\n\",solve);\n    return 0;\n\n}\n\n"}
{"similarity_score": 0.8464619492656876, "equal_cnt": 9, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "892be3b8c767600a9e59e82ca6331259", "bug_code_uid": "bba2e7659cea86c1fcd899ed384fa667", "src_uid": "7a48218582b90f735a09083df9e15b96", "apr_id": "7ccd60728c3d5763fba4b65385512e52", "difficulty": 1200, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint t,a,k;\n\tscanf(\"%d\",&t);\n\tfor(int i=1;i<=t;i++){\n\t\tscanf(\"%d%d\",&a,&k);\n\t\tfor(int j=1;j<k;j++){\n\t\t\tint min=10,max=0,s=a,b=0;\n\t\t\twhile(s){\n\t\t\t\tb=s%10;\n\t\t\t\tif(b>=max){\n\t\t\t\t\tmax=b;\n\t\t\t\t}\n\t\t\t\tif(b<=min){\n\t\t\t\t\tmin=b;\n\t\t\t\t}\n\t\t\t\ts/=10;\n\t\t\t}\n\t\t\ta+=max*min;\n\t\t}\n\t\tprintf(\"%d\\n\",a);\t\n\t}\n\treturn 0;\n} ", "fixed": "#include<stdio.h>\nint main(){\n\tlong long int t,a,k;\n\tscanf(\"%lld\",&t);\n\tfor(int i=1;i<=t;i++){\n\t\tscanf(\"%lld%lld\",&a,&k);\n\t\tfor(int j=1;j<k;j++){\n\t\t\tint min=10,max=0,b=0;\n\t\t\tlong long int s=a;\n\t\t\twhile(s){\n\t\t\t\tb=s%10;\n\t\t\t\tif(b>=max){\n\t\t\t\t\tmax=b;\n\t\t\t\t}\n\t\t\t\tif(b<=min){\n\t\t\t\t\tmin=b;\n\t\t\t\t}\n\t\t\t\tif(min==0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ts/=10;\n\t\t\t}\n\t\t\tif(min==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ta+=max*min;\n\t\t}\n\t\tprintf(\"%lld\\n\",a);\t\n\t}\n\treturn 0;\n} "}
{"similarity_score": 0.43953488372093025, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "68ed35025b939001227882ec6951a9aa", "bug_code_uid": "520af18fb5acd8890bac73246660d52a", "src_uid": "84bd49becca69e126606d5a2f764dd91", "apr_id": "9722d637df09010f06b48441e9be42f8", "difficulty": 1400, "tags": ["brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint num,i,a,b,count=0;\n\tscanf(\"%d\",&num);\n\tint arr[num];\n\tfor(i=0;i<num;i++)\n\t\tarr[i]=0;\n\tfor(i=0;i<num;i++)\n\t{\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tif(a!=b && arr[b-1]==0)\n\t\t{\n\t\t\tcount++;\n\t\t\tarr[b-1]=1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",num-count);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint num,i,a,b,count=0,count1;\n\tscanf(\"%d\",&num);\n\tint arr[1000]={0},bottles[num][2];\n\tfor(i=0;i<num;i++)\n\t{\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tbottles[i][0]=a-1;\n\t\tbottles[i][1]=b-1;\n\t\tif(a!=b)\n\t\t\tarr[b-1]=1;\n\t\telse\n\t\t{\n\t\t\tif(arr[b-1]==0)\n\t\t\t\tarr[b-1]=-1;\n\t\t\telse if(arr[b-1]==-1)\n\t\t\t\tarr[b-1]=1;\n\t\t}\n\t}\n\tfor(i=0;i<num;i++)\n\t{\n\t\tif(bottles[i][0]==bottles[i][1])\n\t\t{\n\t\t\tif(arr[bottles[i][0]]!=-1)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(bottles[i][0]!=bottles[i][1])\n\t\t{\n\t\t\tif(arr[bottles[i][0]]==1 || arr[bottles[i][0]]==-1)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",num-count);\n\treturn 0;\n}\n"}
{"similarity_score": 0.727735368956743, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "0118628e994892b0de9b93cbcbe8caf1", "bug_code_uid": "c6346fa9c79c5cff0fc402549059acca", "src_uid": "5dd0d518f315d81204b25e48fea0793a", "apr_id": "e178ec51c38f4810383985b68529fe60", "difficulty": 1100, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    int k,d;\n    scanf(\"%d %d\",&k,&d);\n    int *num_array=(int *)calloc(1,sizeof(int)*k);\n    int i;\n    for(i=0;i<d;i++)\n    num_array[i]=1;\n    \n    for(i=0;i<k;i++)\n    printf(\"%d\",num_array[i]);\n    free(num_array);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    int k,d;\n    scanf(\"%d %d\",&k,&d);\n    int *num_array=(int *)calloc(1,sizeof(int)*k);\n    int i;\n    if(d==0)\n    {\n        if(k==1)\n        {\n            printf(\"%d\",0);\n            \n        }\n        else printf(\"No solution\");\n        return 0;\n    }\n    \n    if(k>=d){\n    for(i=0;i<d;i++)\n    num_array[i]=1;\n    }\n    else if(k<d)\n    num_array[0]=d;\n    for(i=0;i<k;i++)\n    printf(\"%d\",num_array[i]);\n    free(num_array);\n    return 0;\n}"}
{"similarity_score": 0.9762796504369539, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6687bfd1ba0f52d0c91d5654d1baf982", "bug_code_uid": "eaf001b58bd7726c008edbe49491b9c8", "src_uid": "6f6859aabc1c9cbb9ee0d910064d87c2", "apr_id": "4960b09a9c1ff20a3a4f9db7610f251c", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    int i,n;\n    char c;\n    scanf(\"%d \",&n);\n    for(i=0;i<n;i++) {\n        scanf(\"%c\",&c);\n        printf(\"%c\",c);\n        if(n%2==0) {\n            if ((i+1)%2==0 && i < n-1) printf(\"-\");\n        } else\n            if (i%2==0 && i > 1 && i < n-14) printf(\"-\");\n    }\n    for(;i<n;i++) {\n        scanf(\"%c\",&c);\n        printf(\"%d\",c);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n    int i,n;\n    char c;\n    scanf(\"%d \",&n);\n    for(i=0;i<n;i++) {\n        scanf(\"%c\",&c);\n        printf(\"%c\",c);\n        if(n%2==0) {\n            if ((i+1)%2==0 && i < n-1) printf(\"-\");\n        } else\n            if (i%2==0 && i > 1 && i < n-1) printf(\"-\");\n    }\n    for(;i<n;i++) {\n        scanf(\"%c\",&c);\n        printf(\"%d\",c);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.6211699164345403, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "b8bebb49656637e3f60e59d4394b5968", "bug_code_uid": "d8d5a73d87ba20ae2073f35d07c781aa", "src_uid": "a375dd323b7adbfa9f1cad9aa48f7247", "apr_id": "4c0edccb562e64d713f70e804b5df9dc", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a1,b1,a2,b2,total,s;\n        scanf(\"%d %d\\n\",&a1,&b1);\n        scanf(\"%d %d\\n\",&a2,&b2);\n        total=((a1*b1)+(a2*b2));\n        s=sqrt(total);\n        if(s*s==total){\n            printf(\"Yes\\n\");\n        }\n        else\n        {\n            printf(\"No\\n\");\n        }\n    }\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a,b,c,d;\n        scanf(\"%d %d\\n\",&a,&b);\n        scanf(\"%d %d\\n\",&c,&d);\n        if((a+d==b && b==c) ||(b+c==a && a==d) || (b+d==a && a==c) || (a+c==b && b==d))\n        printf(\"Yes\\n\");\n\t\telse\n\t\tprintf(\"No\\n\");\n    }\n}"}
{"similarity_score": 0.22967101179391683, "equal_cnt": 21, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 10, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "9c5eba72a4582bdaa2d5a3b622b8309f", "bug_code_uid": "429169a753a02f97dd054f54548d482b", "src_uid": "ad242f98f1c8eb8d30789ec672fc95a0", "apr_id": "9bc8cebfd5f9ab39d0d4137dbaca5c09", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<algorithm>\nint main(void){\n\tint t,n,i,j,k;\n\tint a[100][100];\n\tint b[100];\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++){\n\t\tscanf(\"%d\",&n);\n\t\tfor(j=0;j<n;j++){\n\t\t\tscanf(\"%s\",&a[i][j]);\n\t\t}\t\t\n\t}\n\tfor(i=0;i<t;i++){\n\t\tint m=0;\n\t\tfor(j=0;j<n;j++){\n\t\t\tfor(k=0;k<n-1-j;k++){\n\t\t\t\tif(a[i][k]=a[i][k+1]!=0){\n\t\t\t\t\ta[i][k]=0;\n\t\t\t\t\tm++;\n\t\t\t\t}else if(a[i][k]>a[i][k+1]){\n\t\t\t\t\ta[i][k]=a[i][k+1];\n\t\t\t\t\tm++;\n\t\t\t\t}else if(a[i][k]<a[i][k+1]){\n\t\t\t\t\ta[i][k]=a[i][k];\n\t\t\t\t\tm++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tb[i]=m;\n\t}\n\tfor(int i=0;i<t;i++){\n\t\tprintf(\"\\n\",b[i]);\n\t}\n\treturn 0;\n}\n \t \t\t\t\t \t\t\t\t\t\t     \t  \t\t \t  \t \t", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void){\n\tint test;//\u603b\u6d4b\u8bd5\u91cf \n\tint i,n;//n\u662f\u6bcf\u4e00\u6b21\u6d4b\u8bd5\u7684\u6570\u636e\u91cf \n\tint a[101];//\u6bcf\u4e2a\u6570\u503c\u7684\u4e2a\u6570 \n\tint flag=0;//\u5224\u65ad\u662f\u5426\u6709\u76f8\u540c\u7684\u6570\u5b57 \n\tint now;//\u5f53\u524d\u7684\u6570\u5b57\u662f\u4ec0\u4e48 \n\tchar temp;//\u5f53\u524d\u5b57\u7b26 \n\tchar more[4];\n\tscanf(\"%d\",&test);\n\tgetchar();//\u8bfb\u53d6\u6362\u884c \n\tfor(i=0;i<test;i++){\n\t\tint j;\n\t\tflag=0;\n\t\tfor(j=0;j<=100;j++)\ta[j]=0;\n\t\tscanf(\"%d\",&n);\n\t\tgetchar(); //\u8bfb\u53d6\u6362\u884c\n\t\tfor(j=0;j<n;j++){\n\t\t\tmore[1]=NULL;\n\t\t\tmore[2]=NULL;\n\t\t\tmore[0]=getchar();\n\t\t\ttemp=getchar();\n\t\t\tif(temp==' '||temp=='\\n'){//\u4e00\u4f4d\u6570 \n\t\t\t\tnow=more[0]-'0';\n\t\t\t\ta[now]++;\n\t\t\t\tif(a[now]>1)\tflag=1;\n\t\t\t}\n\t\t\telse{//\u4e24\u4f4d\u6570 \u6216\u4e09\u4f4d\u6570 \n\t\t\t\tmore[1]=temp;\n\t\t\t\ttemp=getchar();\n\t\t\t\tif(temp==' '||temp=='\\n'){//\u4e24\u4f4d\u6570 \n\t\t\t\t\tnow=atoi(more);\n\t\t\t\t\ta[now]++;\n\t\t\t\t\tif(a[now]>1)\tflag=1;\n\t\t\t\t}\n\t\t\t\telse{//\u4e09\u4f4d\u6570 \n\t\t\t\t\tmore[2]=temp;\n\t\t\t\t\tnow=atoi(more);\n\t\t\t\t\ta[now]++;\n\t\t\t\t\tif(a[now]>1)\tflag=1;\n\t\t\t\t\tgetchar();//\u83b7\u53d6\u6362\u884c\u7b26 \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//getchar(); //\u8bfb\u53d6\u6362\u884c \n\t\tif(a[0]!=0)\t\tprintf(\"%d\\n\",(n-a[0]));\n\t\telse if(flag==1)\tprintf(\"%d\\n\",n);\n\t\telse\tprintf(\"%d\\n\",(n+1));\n\t}\n\treturn 0;\n\t\n}\n \t \t    \t  \t \t\t\t\t\t\t   \t\t\t\t\t\t"}
{"similarity_score": 0.9048316251830161, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4839457e8c822a8be2666caac36e6906", "bug_code_uid": "6b5718d8d0fbfc98c87e1958ead21bfc", "src_uid": "ee105b664099808143a94a374d6d5daa", "apr_id": "8843496ca840a8fb67492e73985f7c51", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int t, b, k, sum = 0;\n    scanf(\"%d%d\", &b, &k);\n    for(int i = 0; i < k; i++){\n        scanf(\"%d\", &t);\n        if(t%2==1) sum++;\n    }\n    if(b%2==0&&t%2==0) printf(\"even\\n\");\n    else if(b%2==1&&sum%2==0) printf(\"even\\n\");\n    else if (sum%2==1) printf(\"odd\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n    int t, b, k, sum = 0;\n    scanf(\"%d%d\", &b, &k);\n    for(int i = 0; i < k; i++){\n        scanf(\"%d\", &t);\n        if(t%2==1) sum++;\n    }\n    if(b%2==0&&t%2==0) printf(\"even\\n\");\n    else if(b%2==0&&t%2==1) printf(\"odd\\n\");\n    else if(b%2==1&&sum%2==0) printf(\"even\\n\");\n    else if (sum%2==1) printf(\"odd\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9559471365638766, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5397668c13e64eca0ddf4f86613ebb6c", "bug_code_uid": "cb9136250867609aa7248c6853e058e6", "src_uid": "7b932b2d3ab65a353b18d81cf533a54e", "apr_id": "3dd78749671f92f25fa6d600d3d50c4b", "difficulty": 1300, "tags": ["probabilities", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    double a,b,c,d;\n    double ans;\n    scanf(\"%lf\",&a);\n    scanf(\"%lf\",&b);\n    scanf(\"%lf\",&c);\n    scanf(\"%lf\",&d);\n    ans = (a/b)/(1-(a/b)*(c/d));\n    printf(\"%lf\",ans);\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    double a,b,c,d;\n    double ans;\n    scanf(\"%lf\",&a);\n    scanf(\"%lf\",&b);\n    scanf(\"%lf\",&c);\n    scanf(\"%lf\",&d);\n    ans = (a/b)/(1-(1-(a/b))*(1-(c/d)));\n    printf(\"%lf\",ans);\n    return 0;\n}"}
{"similarity_score": 0.9945429740791268, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5acb5a651d46052d8c9501aa3a2730eb", "bug_code_uid": "0ae945d810df72b0a1ee63264294b1a5", "src_uid": "8b61213e2ce76b938aa68ffd1e4c1429", "apr_id": "c22a8c2453f19a283ba4aaf1545dee4c", "difficulty": 1600, "tags": ["sortings", "geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\ndouble aray[100002][2], aray1[100002][2];\nint comp(const void *a, const void *b)\n{\n    return (*(double*)a < *(double*)b );\n}\nint main()\n{\n    int n, i, j ;\n    double a, b, c, x1 ,x2, k;\n    scanf(\"%d\", &n);\n    scanf(\"%lf %lf\", &x1, &x2);\n    x1=x1+0.000001;\n    x2=x2-0.000001;\n    for(i=0;i<n;i++){\n        scanf(\"%lf %lf\", &k, &b);\n        aray[i][0]=(x1*k)+b;\n        aray[i][1]=i;\n        aray1[i][0]=(x2*k)+b;\n        aray1[i][1]=i;\n    }\n    qsort(aray,n,sizeof(double)*2,comp);\n    qsort(aray1,n,sizeof(double)*2,comp);\n\n    for(i=0;i<n;i++){\n        if(aray[i][1]!=aray1[i][1]){\n            printf(\"YES\");\n            return 0;\n        }\n    }\n    printf(\"NO\");\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\ndouble aray[100002][2], aray1[100002][2];\nint comp(const void *a, const void *b)\n{\n    return (*(double*)a < *(double*)b );\n}\nint main()\n{\n    int n, i, j ;\n    double a, b, c, x1 ,x2, k;\n    scanf(\"%d\", &n);\n    scanf(\"%lf %lf\", &x1, &x2);\n    x1=x1+0.0000000001;\n    x2=x2-0.0000000001;\n    for(i=0;i<n;i++){\n        scanf(\"%lf %lf\", &k, &b);\n        aray[i][0]=(x1*k)+b;\n        aray[i][1]=i;\n        aray1[i][0]=(x2*k)+b;\n        aray1[i][1]=i;\n    }\n    qsort(aray,n,sizeof(double)*2,comp);\n    qsort(aray1,n,sizeof(double)*2,comp);\n\n    for(i=0;i<n;i++){\n        if(aray[i][1]!=aray1[i][1]){\n            printf(\"YES\");\n            return 0;\n        }\n    }\n    printf(\"NO\");\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9371196754563894, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "f0926b5a58a096ebca820b8f33e4d6de", "bug_code_uid": "b41fead30088f6aa5c87ddda107a6934", "src_uid": "7226a7d2700ee52f52d417f404c42ab7", "apr_id": "0d538402a4f15bfd926632033b2d58d5", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n         long long int t;\r\n         scanf(\"%d\",&t);\r\n         int n,s;\r\n         while(t--){\r\n                 scanf(\"%ld %ld\",&n,&s);\r\n                 printf(\"%ld\\n\",s/(n*n));\r\n         }\r\n         return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\n         int t;\r\n         scanf(\"%d\",&t);\r\n         long long int n,s;\r\n         while(t--){\r\n                 scanf(\"%lld %lld\",&n,&s);\r\n                 printf(\"%lld\\n\",s/(n*n));\r\n         }\r\n         return 0;\r\n}"}
{"similarity_score": 0.9933774834437086, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2c29cbbb54b9b98b24bd025de48ff005", "bug_code_uid": "be88e88d802d135f700eca385cf064b2", "src_uid": "b894e16e8c00f8d97fde4a104466b3ef", "apr_id": "65c3a145efc17f56c43701caa313c2ee", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main(){\r\n    int t,n;\r\n    char*str;\r\n    char o;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%c\",&o);\r\n        str=(char*)malloc(n*sizeof(char));\r\n        scanf(\"%s\",str);\r\n        for(int i=0;i<n;i++){\r\n            if(str[i]=='U')str[i]='D';\r\n            else if(str[i]=='D')str[i]='U';\r\n        }\r\n        printf(\"%s\\n\",str);\r\n        free(str);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main(){\r\n    int t,n;\r\n    char*str;\r\n    char o;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%c\",&o);\r\n        str=(char*)malloc((n+1)*sizeof(char));\r\n        scanf(\"%s\",str);\r\n        for(int i=0;i<n;i++){\r\n            if(str[i]=='U')str[i]='D';\r\n            else if(str[i]=='D')str[i]='U';\r\n        }\r\n        printf(\"%s\\n\",str);\r\n        free(str);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.5697969543147208, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "79830e70aa91b41328f5a4e85391420a", "bug_code_uid": "538ce6697bdd65222d7b21e23b9fa7af", "src_uid": "63c2142461c93ae4c962eac1ecb5b192", "apr_id": "91e8d00888a7f9c8a2cfb897aedf406b", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t,a,b,c;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%d%d%d\",&a,&b,&c);\r\n        if(a<b){\r\n            if(c<a){\r\n                printf(\"%d\\n\",a);\r\n            }\r\n            else{\r\n            if(b>c){\r\n            printf(\"%d\\n\",c);\r\n                }\r\n                else{\r\n                    printf(\"%d\\n\",b);\r\n                }\r\n                \r\n            }\r\n        }\r\n        else{\r\n            if(a>c){\r\n                printf(\"%d\\n\",a);\r\n                \r\n            }\r\n            else{\r\n                if(b>c){\r\n                    printf(\"%d\\n\",&c);\r\n                }\r\n                else{\r\n                    printf(\"%d\\n\",&b)\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n    return 0;\r\n}", "fixed": "\r\n#include<stdio.h>\r\nint main(){\r\n    int t,a,b,c;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%d%d%d\",&a,&b,&c);\r\n        if(a>b){\r\n            if(b>c){\r\n                printf(\"%d\\n\",b);\r\n            }\r\n            else{\r\n            if(a>c){\r\n            printf(\"%d\\n\",c);\r\n                }\r\n                else{\r\n                    printf(\"%d\\n\",a);\r\n                }\r\n                \r\n            }\r\n        }\r\n        else{\r\n            if(a>c){\r\n               printf(\"%d\\n\",a);\r\n                \r\n            }\r\n            else{\r\n                if(b>c){\r\n                    printf(\"%d\\n\",c);\r\n                }\r\n                else{\r\n                    printf(\"%d\\n\",b);\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9435707678075855, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "645071395cd95195c4e3699ea893311d", "bug_code_uid": "6c05bdf0c7fd17599bd18682ca19cbdd", "src_uid": "5e449867d9fcecc84333b81eac9b5d92", "apr_id": "67c32c00a33b9f3ec08ba1bcc1917d47", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,t;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n-1;i++)\n    {\n        for(j=0;j<n-i-1;j++)\n        {\n            if(a[j]>a[j+1]) \n            {\n                t=a[j];\n                a[j]=a[j+1];\n                a[j+1]=t;\n            }\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==i+1)\n        continue;\n        else\n        {\n            printf(\"%d\",i+1);\n            break;\n        }\n        \n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,t;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n-1;i++)\n    {\n        for(j=0;j<n-i-1;j++)\n        {\n            if(a[j]>a[j+1]) \n            {\n                t=a[j];\n                a[j]=a[j+1];\n                a[j+1]=t;\n            }\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==i+1)\n        continue;\n        else\n        {\n            printf(\"%d\",i+1);\n            break;\n        } \n    }\n    if(i==n)\n    printf(\"%d\",i+1);\n}"}
{"similarity_score": 0.1345646437994723, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "02c0ddffc540c5463adcf4769137bcce", "bug_code_uid": "f0c8a3a8b909289952a3ebae8547e3b7", "src_uid": "75ef1f52ef3a86992159eef566dddc89", "apr_id": "f04e22bab2e6aa30b25a9907886c430d", "difficulty": 1500, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,b,a,s[200005],c=0,max;\n\tscanf(\"%d %d %d\",&n,&b,&a);\n\tfor(i=0;i<n;i++)scanf(\"%d\",&s[i]);\n\tmax=a;\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]&&s[i+1])\n\t\t{\n\t\t\tif(a==max||a==max-1)a--;\n\t\t\telse if(b)\n\t\t\t{\n\t\t\t\tif(a<max)a++;\n\t\t\t\tb--;\n\t\t\t}\n\t\t\telse if(!a&&!b)break;\n\t\t}\n\t\telse if(!s[i])\n\t\t{\n\t\t\tif(a)a--;\n\t\t\telse if(b)b--;\n\t\t\telse break;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(b)\n\t\t\t{\n\t\t\t\tif(a<max)a++;\n\t\t\t\tb--;\n\t\t\t}\n\t\t\telse if(a) a--;\n\t\t\telse break;\n\t\t}\n\t\tc++;\n\t}\n\t\n\tprintf(\"%d\",c);\n}\n", "fixed": "#include <stdio.h>\n\nint main() \n{\n\tint n,b,a,s,i,y;\n\n\tscanf(\"%d %d %d\",&n,&b,&a);\n\ty=a;\n\tfor (i = 0;i<n&&(a||b);i++)\n\t{\n\t\tscanf(\"%d\", &s);\n\t\tif (!s) \n\t\t{\n\t\t\tif (a)a--;\n\t\t\telse b--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif(b&&a<y) b--,a++;\n\t\t\telse a--;\n\t\t}\n\t}\n\tprintf(\"%d\",i);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9923664122137404, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5003f54cbd581262416f7d67342b9dd4", "bug_code_uid": "a3c1dabdea339eefcd994b2fa24f3ea5", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "55b9b9bb48b28fee062f1b40279e0673", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[100][100],b[100],temp;\nint main()\n{\n\tint n,v;\n\tscanf(\"%d%d\",&n,&v);\n\tint i,j;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i][0]);\n\t\tfor(j=1;j<=a[i][0];j++)\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t}\n\tint flag=0,flag1=0,k=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tflag=0;\n\t\tfor(j=1;j<=a[i][0];j++)\n\t\t{\n\t\t\tif(a[i][j]<v)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==1)\n\t\t{\n\t\t\tb[k++]=a[i][0];\n//\t\t\tflag1=1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",k);\n\tfor(i=0;i<k-1;i++)\n\t{\n\t\tfor(j=0;j<k-i-1;j++)\n\t\t{\n\t\t\tif(b[j]>b[j+1])\n\t\t\t{\n\t\t\t\ttemp=b[j+1];\n\t\t\t\tb[j+1]=b[j];\n\t\t\t\tb[j]=temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<k;i++)\n\t\tprintf(\"%d \",b[i]);\n//\tif(flag1!=1)\n//\t\tprintf(\"0\");\n\tprintf(\"\\n\");\n\treturn 0;\n}\n\t\n\n", "fixed": "#include<stdio.h>\nint a[100][100],b[100],temp;\nint main()\n{\n\tint n,v;\n\tscanf(\"%d%d\",&n,&v);\n\tint i,j;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i][0]);\n\t\tfor(j=1;j<=a[i][0];j++)\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t}\n\tint flag=0,flag1=0,k=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tflag=0;\n\t\tfor(j=1;j<=a[i][0];j++)\n\t\t{\n\t\t\tif(a[i][j]<v)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==1)\n\t\t{\n\t\t\tb[k++]=i+1;\n//\t\t\tflag1=1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",k);\n\tfor(i=0;i<k-1;i++)\n\t{\n\t\tfor(j=0;j<k-i-1;j++)\n\t\t{\n\t\t\tif(b[j]>b[j+1])\n\t\t\t{\n\t\t\t\ttemp=b[j+1];\n\t\t\t\tb[j+1]=b[j];\n\t\t\t\tb[j]=temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<k;i++)\n\t\tprintf(\"%d \",b[i]);\n//\tif(flag1!=1)\n//\t\tprintf(\"0\");\n\tprintf(\"\\n\");\n\treturn 0;\n}\n\t\n\n"}
{"similarity_score": 0.9862700228832952, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "fcb03e2016996871c171eaa254d5cc6d", "bug_code_uid": "b973011c3df11ce9e806e2a6d60dac1b", "src_uid": "f2142bc2f44e5d8b77f8561c29038a73", "apr_id": "a1db69ab99813814a584e344e9dfc2b0", "difficulty": 1000, "tags": ["greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define INFINITY 1e9 + 1\n#define min(a, b) (a < b ? a : b)\n#define max(a, b) (a > b ? a : b)\nint main()\n{\n    short no_of_streets, no_of_avenues, i, j;\n    unsigned int current_cost, minimum_street_cost, maximum_street_minimum_cost = 0;\n    scanf(\"%hu %hu\",&no_of_streets, &no_of_avenues);\n\n    for(i = 0; i < no_of_avenues; i++)\n    {\n        //Find the minimum cost on the current street\n        minimum_street_cost = INFINITY;\n        for(j = 0; j < no_of_streets; j++)\n        {\n            scanf(\"%u\",&current_cost);\n            minimum_street_cost = min(minimum_street_cost, current_cost);\n        }\n        //Among the set of minimum costs on each street, choose the maximum element\n        maximum_street_minimum_cost = max(maximum_street_minimum_cost, minimum_street_cost);\n    }\n\n    printf(\"%d\\n\",maximum_street_minimum_cost);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define INFINITY 1e9 + 1\n#define min(a, b) (a < b ? a : b)\n#define max(a, b) (a > b ? a : b)\nint main()\n{\n    short no_of_streets, no_of_avenues, i, j;\n    unsigned int current_cost, minimum_street_cost, maximum_street_minimum_cost = 0;\n    scanf(\"%hu %hu\",&no_of_streets, &no_of_avenues);\n\n    for(i = 0; i < no_of_streets; i++)\n    {\n        //Find the minimum cost on the current street\n        minimum_street_cost = INFINITY;\n        for(j = 0; j < no_of_avenues; j++)\n        {\n            scanf(\"%u\",&current_cost);\n            minimum_street_cost = min(minimum_street_cost, current_cost);\n        }\n        //Among the set of minimum costs on each street, choose the maximum element\n        maximum_street_minimum_cost = max(maximum_street_minimum_cost, minimum_street_cost);\n    }\n\n    printf(\"%d\\n\",maximum_street_minimum_cost);\n    return 0;\n}\n"}
{"similarity_score": 0.7327249022164276, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "04e23dc0c9f409e70fc23e9fbaa694d8", "bug_code_uid": "8b5412e56cae384e6a7d1d64cb3d51de", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "e99149975715a548f245e1bad8bc1216", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[100],b[100],n,i,j,x[100],max;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d %d\",&a[i],&b[i]);\n    x[0]=b[1]+b[0]-a[1];\n    max=x[0];\n    for(i=1;i<n-1;i++)\n    {\n        x[i]=x[i-1]+b[i+1]-a[i+1];\n        if(max<x[i])\n            max=x[i];\n    }\n    printf(\"%d\",max);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a[2000],b[2000],n,i,j,x[2000],max;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d %d\",&a[i],&b[i]);\n    if(b[1]+b[0]-a[1]<b[0])\n    {\n        max=b[0];\n        x[0]=b[1]+b[0]-a[1];\n    }\n    else\n    {\n        x[0]=b[1]+b[0]-a[1];\n        max=x[0];\n    }\n    for(i=1;i<n-1;i++)\n    {\n        x[i]=x[i-1]+b[i+1]-a[i+1];\n        if(max<x[i])\n            max=x[i];\n    }\n    printf(\"%d\",max);\n}\n"}
{"similarity_score": 0.21526908635794745, "equal_cnt": 19, "replace_cnt": 16, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "bd05aff3149d5cff56f67a44f13c3496", "bug_code_uid": "8994606c6ebbf213d328388605c7246c", "src_uid": "288f147bb8a3c30b0bb712a01c65109b", "apr_id": "eaff3cb27efb4cbc67a2d17545decc1e", "difficulty": 800, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\r\n#include<algorithm>\r\nusing namespace std;\r\nint main()\r\n{\r\n\tint t, n;\r\n\tint flag=1;\r\n\tunsigned long long a[1000];\r\n\tcin >> t;\r\n\twhile (t--)\r\n\t{\r\n\t\tint n;\r\n\t\tcin >> n;\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t\tcin >> a[i];\r\n\t\tsort(a,a+n);\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tflag = 1;\r\n\t\t\tif (a[i] == a[i + 1])\r\n\t\t\t{\r\n\t\t\t\tflag = 0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout << ((flag == 0) ? \"No\" : \"Yes\") << endl;\r\n\t}\r\n\treturn 0;\r\n\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\t    int t, n, a[1000];\r\n\t\tscanf(\"%d\", &t);\r\n\t\twhile (t--) {\r\n\t\t\tint flag = 0;\r\n\t\t\tscanf(\"%d\", &n);\r\n\t\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\t\tscanf(\"%d\", &a[i]);\r\n\t\t\t\tfor (int j = 0; j < i; j++)\r\n\t\t\t\t\tif (a[j] == a[i])\r\n\t\t\t\t\t\tflag = 1;\r\n\t\t\t}\r\n\t\t\tif (flag)\r\n\t\t\t\tputs(\"NO\");\r\n\t\t\telse\r\n\t\t\t\tputs(\"YES\");\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t\r\n}"}
{"similarity_score": 0.9565217391304348, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "ed08fb551a62054379bda299ad9f6542", "bug_code_uid": "6110a71863672e42ed12bb4607184ac1", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "0c64e7fea5aa5c9140fce197cf5d6d7d", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "main(a,d){for(;(d=getchar())>0;)d+=(a=='A'?1:a=='D'?-1:0);puts(a>0?\"Anton\":a<0?\"Danik\":\"Friendship\");}", "fixed": "main(a,d){for(d=0;(a=getchar())>0;)d+=(a=='A'?1:a=='D'?-1:0);puts(d>0?\"Anton\":d<0?\"Danik\":\"Friendship\");}"}
{"similarity_score": 0.6529209621993127, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5ebb53bd5f012f739891b143d70c5181", "bug_code_uid": "a828bfe59041adae35649aef8da4bec8", "src_uid": "0c5cf0af057b0c838f13b491b923447a", "apr_id": "f6b591ef4a26797cc20816a64f96af73", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n\t#ifndef ONLINE_JUDGE\r\n\t\tfreopen(\"input.txt\",\"r\",stdin);\r\n\t\tfreopen(\"output.txt\",\"w\",stdout);\r\n\t#endif\r\n\r\n\tint t;\t\tscanf(\"%d\",&t);\r\n\r\n\twhile(t--)\r\n\t{\t\r\n\t\tlong long int n;\r\n\t\tscanf(\"%lld\",&n);\r\n\t\t//float m;\r\n\t\t//m = (float)n; \r\n\t\tlong long int result = ceil((float)n/2);\r\n\t\tprintf(\"%lld\\n\",result);\r\n\t}\r\n\r\n\r\n\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n\t#ifndef ONLINE_JUDGE\r\n\t\tfreopen(\"input.txt\",\"r\",stdin);\r\n\t\tfreopen(\"output.txt\",\"w\",stdout);\r\n\t#endif\r\n\r\n\tint t;\t\tscanf(\"%d\",&t);\r\n\r\n\twhile(t--)\r\n\t{\t\r\n\t\tint n,result;\r\n\t\tscanf(\"%d\",&n);\r\n\t\t//float m;\r\n\t\t//m = (float)n;\r\n\t\tif(n%2==0)\r\n\t\t{\r\n\t\t\tresult = n / 2;\r\n\t\t} \r\n\t\telse\r\n\t\t{\r\n\t\t\tresult = (n+1)/2;\r\n\t\t}\r\n\t\t//long long int result = ceil((float)n/2);\r\n\t\tprintf(\"%d\\n\",result);\r\n\t}\r\n\r\n\r\n\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.39537869062901154, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "0534535ce727fa974bd09afd19104768", "bug_code_uid": "99856e6c70e577e7c4744df6104e5a1e", "src_uid": "d7601c9bb06a6852f04957fbeae54925", "apr_id": "950081bbfd57204618a001ce53020eec", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <ctype.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n\tint i, j, n, m;\n\tchar c;\n\tchar **s;\n\tchar *t;\n\tint cnt = 0;\n\tchar map[26];\n\n\tscanf(\"%d%d %c\", &n, &m, &c);\n\ts = malloc(sizeof(char *) * n);\n\tt = malloc(m + 1);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%s\", t);\n\t\ts[i] = strdup(t);\n\t}\n\tmemset(map, 0, 26);\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0; j < m; j++)\n\t\t\tif (s[i][j] == c) {\n\t\t\t\tif (i > 0 && s[i - 1][j] != c)\n\t\t\t\t\tmap[s[i - 1][j] - 'A'] = 1;\n\t\t\t\tif (i + 1 < n && s[i + 1][j] != c)\n\t\t\t\t\tmap[s[i + 1][j] - 'A'] = 1;\n\t\t\t\tif (j > 0 && s[i][j - 1] != c)\n\t\t\t\t\tmap[s[i][j - 1] - 'A'] = 1;\n\t\t\t\tif (j + 1 < n && s[i][j + 1] != c)\n\t\t\t\t\tmap[s[i][j + 1] - 'A'] = 1;\n\t\t\t}\n\tfor (i = 0; i < 26; i++)\n\t\tcnt += map[i];\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n\tint i, j, n, m, cnt = 0;\n\tchar c, **room, *t, a[26] = { 0 };\n\n\tscanf(\"%d%d %c\", &n, &m, &c);\n\troom = malloc(n * sizeof(char *));\n\tt = malloc(m + 1);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%s\", t);\n\t\troom[i] = strdup(t);\n\t}\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0; j < m; j++)\n\t\t\tif (room[i][j] == c) {\n\t\t\t\tif (i > 0 && room[i - 1][j] != '.')\n\t\t\t\t\ta[room[i - 1][j] - 'A'] = 1;\n\t\t\t\tif (i + 1 < n && room[i + 1][j] != '.')\n\t\t\t\t\ta[room[i + 1][j] - 'A'] = 1;\n\t\t\t\tif (j > 0 && room[i][j - 1] != '.')\n\t\t\t\t\ta[room[i][j - 1] - 'A'] = 1;\n\t\t\t\tif (j + 1 < m && room[i][j + 1] != '.')\n\t\t\t\t\ta[room[i][j + 1] - 'A'] = 1;\n\t\t\t}\n\tfor (i = 0; i < 26; i++)\n\t\tif (i != c - 'A' && a[i])\n\t\t\tcnt++;\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.834924965893588, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "75ebcef25a48f6bc9ebb9ef4b8e31319", "bug_code_uid": "1ffa8a23f41ba6c104b0034763fee97d", "src_uid": "7965b6ce237b02617b55dc175ffa0451", "apr_id": "f5b612a8574bd033022d23ff0fe0acce", "difficulty": 800, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#define MAXN 114514\r\n#define ll long long\r\nll max(ll a[],int n,int i);\r\nint main(void)\r\n{\r\n    int i,j,k;\r\n    int t,n;\r\n    ll a[200008]={};\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\\n\",&n);\r\n        for(j=0;j<n;j++)\r\n            scanf(\"%lld\",&a[j]);\r\n        for(j=0;j<n;j++)\r\n            printf(\"%d \",a[j]-max(a,n,j));\r\n        printf(\"\\n\");\r\n    }\r\n}\r\nll max(ll a[],int n,int i)\r\n{\r\n    int k=0\uff1b\r\n    ll ans=0;\r\n    for(int k=0;k<n;k++)\r\n    {\r\n        if(k==i)\r\n            k++;\r\n        if(k==n)\r\n            break;\r\n        if(ans<a[k])\r\n            ans=a[k];\r\n    }\r\n    return ans;\r\n}", "fixed": "#include <stdio.h>\r\n#define MAXN 114514\r\n#define ll long long\r\nll max(ll a[],int n,int i);\r\nint main(void)\r\n{\r\n    int i,j,k;\r\n    int t,n;\r\n    ll a[200008]={};\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\\n\",&n);\r\n        for(j=0;j<n;j++)\r\n            scanf(\"%lld\",&a[j]);\r\n        int maxtag=max(a,n,j+1),max1=a[maxtag];\r\n        int max2=max(a,n,maxtag);\r\n        for(j=0;j<n;j++)\r\n        {\r\n            if(j==maxtag)\r\n                printf(\"%lld \",max1-a[max2]);\r\n            else printf(\"%lld \",a[j]-max1);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}\r\nll max(ll a[],int n,int i)\r\n{\r\n    int k=0,ans=0,tag=0;\r\n    for(int k=0;k<n;k++)\r\n    {\r\n        if(k==i)\r\n            k++;\r\n        if(k==n)\r\n            break;\r\n        if(ans<a[k])\r\n            {ans=a[k];tag=k;}\r\n    }\r\n    return tag;\r\n}"}
{"similarity_score": 0.36791758646063283, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "e0879594adae6925c74defc1f12ae61a", "bug_code_uid": "04e97204b6eff53a521488a57f3b93da", "src_uid": "a20ca4b053ba71f6b2dc05749287e0a4", "apr_id": "c4a60f0562d251db2a6cc584a0d70555", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,i,segundos=0,salto=0,aux;\n    scanf(\"%d\",&n);\n    int vec[n+1];\n    for(i=n;i>=1;i--)\n    {\n        scanf(\"%d\",&vec[i]);\n    }\n    segundos=vec[1]+1;\n    if(vec[1]<=vec[2])\n    {\n        segundos++;\n        salto=1;\n        aux=vec[2]-vec[1];\n    }\n    for(i=2;i<n;i++)\n    {\n\n        if(salto)\n        {\n            segundos=segundos+aux+1;\n        }else\n        {\n            segundos=segundos+vec[i]+1;\n        }\n        if(vec[i]<=vec[i+1])\n        {\n            salto=1;\n            segundos++;\n            aux=vec[i+1]-vec[i];\n        }else\n        {\n            salto=0;\n            segundos=segundos+vec[i];\n        }\n    }\n\n    if(salto)\n    {\n        segundos=segundos+aux+1;\n    }else\n    {\n        segundos=segundos+vec[n]+1;\n    }\n    printf(\"%d\",segundos);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,i,segundos,subir,bajar;\n    scanf(\"%d\",&n);\n    int vec[n+1];\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&vec[i]);\n    }\n    segundos=vec[1]+1;\n\n    for(i=1;i<n;i++)\n    {\n       if(vec[i]==vec[i+1])\n       {\n           segundos+=2;\n       }else if(vec[i]>vec[i+1])\n       {\n           bajar=vec[i]-vec[i+1];\n           segundos+=bajar+2;\n       }else\n       {\n           subir=vec[i+1]-vec[i];\n           segundos+=subir+2;\n       }\n    }\n    printf(\"%d\",segundos);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9616580310880829, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "efe6419c534f3a4e32de53edbab02577", "bug_code_uid": "7bfac98f76285e74a1486951db59668c", "src_uid": "a850dd88a67a6295823e70e2c5c857c9", "apr_id": "a41670ba85e91e614bd803b949c60d74", "difficulty": 1500, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n        long int dist,sum=2,n,p[100000],h[100000];\n        scanf(\"%ld\",&n);\n        for(long int a=0;a<n;a++)\n        {\n                scanf(\"%ld %ld\",&p[a],&h[a]);\n                \n        }\n        for(long int a=1;a<n-1;a++)\n        {\n                \n\t\t\tdist=p[a]-p[a-1];\n\t\t\tif(h[a]<dist)\n\t\t\t{\n\t\t\t\tsum+=1;\n\t\t        }\n\t\t\telse if(h[a]<(p[a+1]-p[a]))\n\t\t\t{\n\t\t\t\tsum+=1;\n\t\t\t\tp[a]+=h[a];\n\t\t\t}\n\t\t\n\t}\n\tprintf(\"%ld\",sum);\n\treturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n        long int dist,sum=2,n,p[100000],h[100000];\n        scanf(\"%ld\",&n);\n        for(long int a=0;a<n;a++)\n        {\n                scanf(\"%ld %ld\",&p[a],&h[a]);\n                \n        }\n\tif(n==1)\n\t{\n\t\tsum=1;\n\t}\n\telse\n\t{\n        for(long int a=1;a<n-1;a++)\n        {\n                \n\t\t\tdist=p[a]-p[a-1];\n\t\t\tif(h[a]<dist)\n\t\t\t{\n\t\t\t\tsum+=1;\n\t\t        }\n\t\t\telse if(h[a]<(p[a+1]-p[a]))\n\t\t\t{\n\t\t\t\tsum+=1;\n\t\t\t\tp[a]+=h[a];\n\t\t\t}\n\t\t\n\t}\n\t}\n\tprintf(\"%ld\",sum);\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.9574468085106383, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a66b2f02b84820b268bfee0d326302e2", "bug_code_uid": "6006fa211f730d0b0089a5d8822df4c9", "src_uid": "7bb5df614d1fc8323eba51d04ee7bf2a", "apr_id": "baf14e04b3436d3d9664aa624cea8ab3", "difficulty": 1600, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n#define MOD 1000000007\nint a[1001],b[1001];\n\n\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;i++)\n      scanf(\"%d\",&a[i]);\n    for (i=1;i<=n+1;i++)\n     {\n         b[i]=(2*b[i-1]-b[a[i]-1]+1)% MOD;\n      //   printf(\"%d %d\\n\",i,b[i]);\n     }\n    printf(\"%d\",b[n+1]-1);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n#define MOD 1000000007\nint a[1001],b[1001];\n\n\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;i++)\n      scanf(\"%d\",&a[i]);\n    for (i=1;i<=n+1;i++)\n     {\n         b[i]=(2*b[i-1]-b[a[i]-1]+1)% MOD;\n         if (b[i]<0) b[i]+=MOD;\n      //   printf(\"%d %d\\n\",i,b[i]);\n     }\n    printf(\"%d\",b[n+1]-1);\n    return 0;\n}\n"}
{"similarity_score": 0.9974937343358395, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0466da5359361cc43b7d888f9ddf382c", "bug_code_uid": "457359930b2535dc17e111822292250a", "src_uid": "7c2a61de728e6767b25e58c74497bbae", "apr_id": "8728cf32aa57fc0a37c0b19f986dfe92", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long long int i,j,m,n,t,high,sum;\n    //double avg;\n    scanf(\"%lld\", &t);\n    for(i=0;i<t;i++){\n        sum=0;\n        scanf(\"%lld%lld\", &n,&high);\n        int a[n];\n        for(j=0;j<n;j++){\n            scanf(\"%lld\", &a[j]);\n            sum+=a[i];\n        }\n        if(sum<=high)printf(\"%lld\\n\", sum);\n        else printf(\"%lld\\n\", high);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    long long int i,j,m,n,t,high,sum;\n    //double avg;\n    scanf(\"%lld\", &t);\n    for(i=0;i<t;i++){\n        sum=0;\n        scanf(\"%lld%lld\", &n,&high);\n        int a[n];\n        for(j=0;j<n;j++){\n            scanf(\"%lld\", &a[j]);\n            sum+=a[j];\n        }\n        if(sum<=high)printf(\"%lld\\n\", sum);\n        else printf(\"%lld\\n\", high);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9573070607553367, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "31e406753dae2e0ef455276f913d8d0c", "bug_code_uid": "002af78f17e8398de2afcf59dbbe40d3", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "c71c137f7626ef1328f872ba3f0c31db", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include<stdio.h>\n\nint main()\n{\n    int p,q,a[1000],b[1000],n,j=1,k=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&p);\n    for(int i=0; i<p; i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    scanf(\"%d\",&q);\n    for(int i=0; i<q; i++)\n    {\n        scanf(\"%d\",&b[i]);\n    }\n    for(j=1; j<=n; j++)\n    {\n        for(int i=0; i<n; i++)\n        {\n            if(a[i]==j || b[i]==j)\n            {\n                k++;\n                break;\n            }\n        }\n    }\n    if(k==n)\n        {printf(\"I become the guy.\");\n        return 0;{\n    if(k!=n)\n   {     printf(\"Oh, my keyboard!\");\n    return 0;}\n\n}\n", "fixed": "\n#include<stdio.h>\n\nint main()\n{\n    int p,q,a[1000],b[1000],n,j=1,k=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&p);\n    for(int i=0; i<p; i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    scanf(\"%d\",&q);\n    for(int i=0; i<q; i++)\n    {\n        scanf(\"%d\",&b[i]);\n    }\n    for(j=1; j<=n; j++)\n    {\n        for(int i=0; i<n; i++)\n        {\n            if(a[i]==j || b[i]==j)\n            {\n                k++;\n                break;\n            }\n        }\n    }\n    if(k==n)\n      { printf(\"I become the guy.\");\n        return 0;\n      }\n    if(k!=n)\n     {  printf(\"Oh, my keyboard!\");\n         return 0;\n         \n     }\n\n}\n"}
{"similarity_score": 0.8111587982832618, "equal_cnt": 14, "replace_cnt": 2, "delete_cnt": 9, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "27debad209a1955de573c451583d7357", "bug_code_uid": "bbda19b45a704ae07bbbbee1b92a6383", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "b280eda2223c5460fa79fbdab949c62d", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    double sum=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        sum+=a[i];\n    }\n    sum=sum*1.0/n;\n    printf(\"%.12lf\\n\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a,i;\n    double s=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a);\n        s+=a;\n    }\n    printf(\"%.12f\",s/n);\n    return 0;\n}\n"}
{"similarity_score": 0.9811320754716981, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7ccef611d52c8a580c9777f03dbf08ca", "bug_code_uid": "eba6c1efadec834d5d71d66e40ac4192", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "e2dbeb5749c6d309b21956e2dc8832fd", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,i,c=0,s=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        if(a[i]>0)\n          s=s+a[i];\n        else if(sum>0)\n          sum=sum-1;\n        else\n          c++;\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,i,c=0,s=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        if(a[i]>0)\n          s=s+a[i];\n        else if(s>0)\n          s=s-1;\n        else\n          c++;\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}\n"}
{"similarity_score": 0.9887640449438202, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "627cf24b015be43471de1ebfa1557703", "bug_code_uid": "1e0afd6c8c34d5c888565c36e2a5bca7", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "bcf085f815855b0515b86f05b8ac6789", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n\tint n, i;\n\tchar * result = malloc(sizeof(char) * 1024);\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tif (i == 0)\n\t\t\tstrcpy(result, \"I hate\");\n\t\telse\n\t\t\tif (n % 2 == 0) \n\t\t\t\tstrcat(result, \" that I love\");\n\t\t\telse\n\t\t\t\tstrcat(result, \" that I hate\");\n\t}\n\tstrcat(result, \" it\");\n\tprintf(\"%s\", result);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n\tint n, i;\n\tchar * result = malloc(sizeof(char) * 2048);\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tif (i == 0)\n\t\t\tstrcpy(result, \"I hate\");\n\t\telse\n\t\t\tif (i % 2 == 1) \n\t\t\t\tstrcat(result, \" that I love\");\n\t\t\telse\n\t\t\t\tstrcat(result, \" that I hate\");\n\t}\n\tstrcat(result, \" it\");\n\tprintf(\"%s\", result);\n}\n"}
{"similarity_score": 0.7134767836919592, "equal_cnt": 20, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "b837fd435562554697efce7c1525821a", "bug_code_uid": "1540e91397cd6601399aa56733c65c76", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "73f8249d1ef61be732de0efa82aedeb1", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint x,sum=0,i;\n\tchar s[100];\n\tscanf(\"%d\",&x);\n\tfor(i=1;i<=x;i++){\n\t\tscanf(\"%s\",&s);\n\t\t if(s==\"Icosahedron\")\n        sum=sum+20;\n      else if(s==\"Cube\")\n        sum=sum+6;\n       else if(s==\"Tetrahedron\")\n        sum=sum+4;\n       else if(s==\"Dodecahedron\")\n        sum=sum+12;\n       else if(s==\"Octahedron\")\n        sum=sum+8;\n\t}\n\tprintf(\"%d\",sum);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int x, sum = 0, i;\n    char s[100];\n\n    scanf(\"%d\",&x);\n\n    for(i=1;i<=x;i++){\n        scanf(\"%s\",&s);\n\n        if(strcmp(s,\"Icosahedron\")==0)\n        sum=sum+20;\n        else if(strcmp(s,\"Cube\")==0)\n        sum=sum+6;\n        else if(strcmp(s,\"Tetrahedron\")==0)\n        sum=sum+4;\n        else if(strcmp(s,\"Dodecahedron\")==0)\n        sum=sum+12;\n        else if(strcmp(s,\"Octahedron\")==0)\n        sum=sum+8;\n    }\n    printf(\"%d\\n\",sum);\n}\n"}
{"similarity_score": 0.9953379953379954, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9fa0096556a2af0f571f523d1e2ce0ca", "bug_code_uid": "f499c77b5e4bf78def3c395955a141a3", "src_uid": "83050a8a4c7b64004681bdadb630292e", "apr_id": "8e5e3b8774bd94430e7dd021cf61b979", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nvoid Marinush_e_prost() \r\n{\r\n    int n, m;\r\n    scanf(\"%d%d\", &n, &m);\r\n    char a[n], b[m];\r\n    scanf(\"%s\", a);\r\n    scanf(\"%s\", b);\r\n    int additional = n - m;\r\n    if(additional == 0) {\r\n        for(int i = 0; i < m; ++i) {\r\n            if(a[i + additional] != b[i]) {\r\n                printf(\"NO\\n\");\r\n                return;\r\n            }\r\n        }\r\n        printf(\"YES\\n\");\r\n        return;\r\n    }  \r\n\r\n    int idx = n - 1;\r\n    for(int i = m - 1; i >= 1; --i) {\r\n        if(a[idx--] != b[i]) {\r\n            printf(\"NO\\n\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    for(int i = 0; i <= additional; ++i) {\r\n        if(a[i] == b[0]) {\r\n            printf(\"YES\\n\");\r\n            return;\r\n        }\r\n    }\r\n    printf(\"NO\\n\");\r\n}   \r\n \r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--) Marinush_e_prost();\r\n}", "fixed": "#include <stdio.h>\r\n\r\nvoid Marinush_e_prost() \r\n{\r\n    int n, m;\r\n    scanf(\"%d%d\", &n, &m);\r\n    char a[n + 5], b[m + 5];\r\n    scanf(\"%s\", a);\r\n    scanf(\"%s\", b);\r\n    int additional = n - m;\r\n    if(additional == 0) {\r\n        for(int i = 0; i < m; ++i) {\r\n            if(a[i + additional] != b[i]) {\r\n                printf(\"NO\\n\");\r\n                return;\r\n            }\r\n        }\r\n        printf(\"YES\\n\");\r\n        return;\r\n    }  \r\n\r\n    int idx = n - 1;\r\n    for(int i = m - 1; i >= 1; --i) {\r\n        if(a[idx--] != b[i]) {\r\n            printf(\"NO\\n\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    for(int i = 0; i <= additional; ++i) {\r\n        if(a[i] == b[0]) {\r\n            printf(\"YES\\n\");\r\n            return;\r\n        }\r\n    }\r\n    printf(\"NO\\n\");\r\n}   \r\n \r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--) Marinush_e_prost();\r\n}"}
{"similarity_score": 0.9978070175438597, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "710a50a15de10d3c920436f92adff8af", "bug_code_uid": "c3a89a0074fe335b53f464440834cf82", "src_uid": "b8554e64b92b1b9458955da7d55eba62", "apr_id": "1be46a3b114ecf8cfb16a9feae93f3b3", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n\tlong int t;\r\n\tscanf(\"%ld\",&t);\r\n\twhile(t--){\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint arr[n];\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tscanf(\"%d\",&arr[i]);\r\n\t\t}\r\n\t\tlong int sum=0,count=0;\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tsum=sum+arr[i];\r\n\t\t}\r\n\t\tif(n==1)\r\n\t\t\tprintf(\"0\\n\");\r\n\t\telse if(sum%n!=0){\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t}\r\n\t\telse{\r\n\t\tsum=sum/4;\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tif(arr[i]>sum)\r\n\t\t\t\tcount++;\r\n\t\t}\r\n\t\tprintf(\"%ld\\n\",count);\r\n\t}\r\n\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n\tlong int t;\r\n\tscanf(\"%ld\",&t);\r\n\twhile(t--){\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint arr[n];\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tscanf(\"%d\",&arr[i]);\r\n\t\t}\r\n\t\tlong int sum=0,count=0;\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tsum=sum+arr[i];\r\n\t\t}\r\n\t\tif(n==1)\r\n\t\t\tprintf(\"0\\n\");\r\n\t\telse if(sum%n!=0){\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t}\r\n\t\telse{\r\n\t\tsum=sum/n;\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tif(arr[i]>sum)\r\n\t\t\t\tcount++;\r\n\t\t}\r\n\t\tprintf(\"%ld\\n\",count);\r\n\t}\r\n\r\n\t}\r\n}"}
{"similarity_score": 0.8506787330316742, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "043934e3974b299afa2a5cf3a371e92a", "bug_code_uid": "84f70abf2ff371841c2a2e7c13fb59e1", "src_uid": "ea62b6f68d25fb17aba8932af8377db0", "apr_id": "41eed73637b9016e33bd0abfd3b24ebf", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n\tint n, N, count = 0;\n\tint arr[110] = {0};\n\tscanf(\"%d\", &N);\n\tfor(n = 1; n <= N; n++)\n\t\tscanf(\"%d\", &arr[n]);\n\tfor(n = 2; n <= N; n++)\n\t{\n\t\tif(arr[n] == 0)\n\t\t\tif(arr[n - 1] == 1)\n\t\t\t\tif(arr[n + 1] == 1)\n\t\t\t\t\tif(arr[n - 2] == 1 || n - 2 == 0)\n\t\t\t\t\t\tcount++;\n\t}\n\tprintf(\"%d\\n\", count);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\n\tint n, N, count = 0;\n\tint arr[110] = {0};\n\tscanf(\"%d\", &N);\n\tfor(n = 1; n <= N; n++)\n\t\tscanf(\"%d\", &arr[n]);\n\tfor(n = 2; n <= N - 1; n++)\n\t{\n\t\tif(arr[n] == 0)\n\t\t\tif(arr[n - 1] == 1)\n\t\t\t\tif(arr[n + 1] == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tarr[n + 1] = 0;\n\t\t\t\t\t}\n\t}\n\tprintf(\"%d\\n\", count);\n\treturn 0;\n}"}
{"similarity_score": 0.995, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "471d3b4d5161b978ba03a46b171a0fa5", "bug_code_uid": "4a97ad9c210a8d1a5506c995165c357e", "src_uid": "07e56d4031bcb119d2f684203f7ed133", "apr_id": "1f493bb1bc091e4e7df1ae7e027664ec", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int a, t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d\", &a);\n        if(a%2==0) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int a, t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d\", &a);\n        if(a%4==0) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9728783902012248, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7c48e96c783b753d3663043e7b448fad", "bug_code_uid": "aedc0ae14c99048990691d2b28317d5d", "src_uid": "60b6c6f047051eeabfe4e3a9e045c6b0", "apr_id": "0742be602dac9e488ee579a21ac4001a", "difficulty": 1300, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <stdlib.h> \nint comp(const void* p,const void* q)\n{\n\treturn -(*( const int*)q)+(*( const int*)p);\n\t\n}\n#define ll long long\nll c[100001];\nint main(){\nll t;\nscanf(\"%lld\",&t);\nwhile(t--){\nll n,r;\nscanf(\"%lld%lld\",&n,&r);\nll arr[n],count=0;\nfor(int i=0;i<n;i++) scanf(\"%lld\",&arr[i]);\nqsort(arr,n,sizeof(ll),comp);\nll i,j=0;\nfor( i=0;i<n;i++){\nif(arr[i]%r==0) c[i]=arr[i]/r;\nelse c[i]=(arr[i]/r)+1;\n}\nfor(i=n-1;i>=j;i--){\nwhile(i>=1&&arr[i]==arr[i-1]) i--;\nwhile((j<i)&&(j<(n))&&c[j]<=(n-i)) j++;\ncount++;\n\n\n\n\n}\nprintf(\"%lld\\n\",count);\n}\nreturn 0;}\n", "fixed": "#include<stdio.h>\n#include <stdlib.h> \nint comp(const void* p,const void* q)\n{\n\treturn -(*( const int*)q)+(*( const int*)p);\n\t\n}\n#define ll long long\nll c[100001];\nint main(){\nll t;\nscanf(\"%lld\",&t);\nwhile(t--){\nll n,r;\nscanf(\"%lld%lld\",&n,&r);\nll arr[n],count=0;\nfor(int i=0;i<n;i++) scanf(\"%lld\",&arr[i]);\nqsort(arr,n,sizeof(ll),comp);\nll i,j=0;\nfor( i=0;i<n;i++){\nif(arr[i]%r==0) c[i]=arr[i]/r;\nelse c[i]=(arr[i]/r)+1;\n}\nfor(i=n-1;i>=j;i--){\nwhile(i>=1&&arr[i]==arr[i-1]) i--;\ncount++;\nwhile((j<=i)&&(j<(n))&&c[j]<=(count)) j++;\n}\nprintf(\"%lld\\n\",count);\n}\nreturn 0;}\n"}
{"similarity_score": 0.9144893111638955, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "54753c60fce41c3e305662cff4eb6239", "bug_code_uid": "d7d08a99a2ad863510797df0e756b61f", "src_uid": "7b80d3f3cd4f93e4277c76c76dc41f42", "apr_id": "8ef9ff1733930bb2b6d9d7d0ca41f364", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(int i =0; i < t; ++i){\n        int n;\n        int a,x;\n        bool eq = true;\n        for(int j = 0; j < n; ++j){\n            scanf(\"%d\", &x);\n            if(j == 0) a = x;\n            else if(a != x){\n                eq = false;\n                break;\n            }\n        }\n        if(eq) printf(\"%d\\n\", n);\n        else printf(\"%d\\n\",1);\n    }\n}", "fixed": "#include <stdio.h>\n \nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(int i = 0; i < t; ++i){\n        int n;\n        scanf(\"%d\", &n);\n        int a,x;\n        int eq = 1;\n        for(int j = 0; j < n; ++j){\n            scanf(\"%d\", &x);\n            if(j == 0) a = x;\n            else if(a != x){\n                eq = 0;\n            }\n        }\n        if(eq > 0) printf(\"%d\\n\", n);\n        else printf(\"%d\\n\",1);\n    }\n}"}
{"similarity_score": 0.9839142091152815, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "3ac65114414eb143da8e912d596ec579", "bug_code_uid": "009b2dc451c833b0abe3210e0bceb566", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "8228a96069a5cdda379b1d9740066e06", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,l,a,b,d[1000],sum=0,count=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n-1;i++)\n    {\n        scanf(\"%d\",&d[i]);\n    }\n    /*for(i=0;i<n-1;i++){\n    printf(\"%d \",d[i]);} */\n    scanf(\"%d %d\",&a,&b);\n    l=b-a;\n    for(i=0;i<n-1;i++)\n    {\n        sum=sum+d[i];\n        count++;\n        if(count==l) break;\n    }\n    printf(\"%d \",sum);\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,l,a,b,d[1000],sum=0,count=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n-1;i++)\n    {\n        scanf(\"%d\",&d[i]);\n    }\n    /*for(i=0;i<n-1;i++){\n    printf(\"%d \",d[i]);} */\n    scanf(\"%d %d\",&a,&b);\n    l=b-a;\n    for(i=a-1;i<b;i++)\n    {\n        sum=sum+d[i];\n        count++;\n        if(count==l) break;\n\n    }\n    printf(\"%d\",sum);\n\n}\n"}
{"similarity_score": 0.3825301204819277, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "fbb7137c8f8bbdcaec68ef2ce5663693", "bug_code_uid": "64b1cabc35f6df0425b0f78c004b4674", "src_uid": "94278e9c55f0fc82b48145ebecbc515f", "apr_id": "ab5d1ef17c810eaeb3765bdcd824e07e", "difficulty": 1100, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\n\nint main() \n{\n\tint b;\n\t\n\tint i,j;\n\twhile(scanf(\"%d\",&b)!=EOF)\n\t{\n\t\tchar a[100000]=\"\\0\",c;\n\t\tc='a';\n\t\tfor(i=0;i<b;i++)\n\t\t{\n\t\t\tif(a[i]>='a'&&a[i]<='z')\n\t\t\tbreak;\n\t\t\ta[i]=c;\n\t\t\t\n\t\t\tfor(j=i;j<b;j=j+4)\n\t\t\t{\n\t\t\t\ta[j]=c;\n\t\t\t}\n\t\t\tc=c+1;\n\t\t\tif(c>'z')\n\t\t\tc='a';\n\t\t}\n\t\tprintf(\"%s\\n\",a);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int a,flag,i,j;\n    char b[]=\"abcd\";\n    while(scanf(\"%d\",&a)!=EOF)\n    {\n     flag=a/4;\n     j=a%4;\n     if(flag!=0)\n     {for(i=0;i<flag;i++)\n        printf(\"%s\",b);}\n    if(j!=0)\n    {for(i=0;i<j;i++)\n        printf(\"%c\",b[i]);}\n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9257950530035336, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "bda746833229178ba1e46c957cd130a0", "bug_code_uid": "3d7c45f83580084ba538b810a912e1be", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "15e9b96b2e415c9cce2d0acd19f36f31", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t, c;\n    scanf(\"%d\", &t);\n\n    while (t--)\n    {\n        int n;\n        int temp = -1;\n        scanf(\"%d\", &n);\n        int arr[200] = {};\n        for (int i = 0; i < n; i++)\n        {\n            scanf(\"%d\", &c);\n            arr[c]++;\n            if (arr[c] > 2)\n                temp = c;\n        }\n\n        printf(\"%d\\n\", temp);\n    }\n\n    return 0;\n}\n\t\t\t  \t     \t      \t \t\t \t\t", "fixed": "#include <stdio.h>\nint main()\n{\n    int t, c;\n    scanf(\"%d\", &t);\n\n    while (t--)\n    {\n        int n;\n        int temp = -1;\n        scanf(\"%d\", &n);\n        int arr[200001] = {};\n        for (int i = 0; i < n; i++)\n        {\n            scanf(\"%d\", &c);\n            arr[c]++;\n            if (arr[c] >= 3)\n                temp = c;\n        }\n\n        printf(\"%d\\n\", temp);\n    }\n\n    return 0;\n}\n   \t\t\t \t\t\t\t\t \t  \t\t\t \t\t  \t \t  \t"}
{"similarity_score": 0.7058823529411765, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "c16d0e9978241382801354d48eefa17b", "bug_code_uid": "3db7d97e2306e222e36e6d701187cdb8", "src_uid": "ab7ab67941783da5c16f6294eb1910d9", "apr_id": "d313e889e4078bc06001897994231210", "difficulty": 800, "tags": ["greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        int len = n;\r\n        for(int i=0;i<n-1;i++){\r\n            for(int j=i+1;j<n;j++){\r\n                if(a[i]==a[j]){\r\n                    len=len-2;\r\n                    i=i+1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\",len);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        int len =n;\r\n        int c =0;\r\n        for(int i=0;i<n;i++){\r\n            for(int j=i+1;j<n;j++){\r\n                if(a[i]==a[j]){\r\n                    c++;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(c>1){\r\n            if(c%2!=0){\r\n                c=c+1;\r\n            }\r\n            len =len-c;\r\n        }\r\n        if(c==1){\r\n            len =len -2;\r\n        }\r\n        printf(\"%d\\n\",len);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8535353535353535, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "eab13a62b0f48f5b5a7f635c571defad", "bug_code_uid": "f0fd540693216b4422f4040876fecf6c", "src_uid": "5c026adda2ae3d7b707d5054bd84db3f", "apr_id": "7cabff64e986ab08ca347df5b593fc6e", "difficulty": 1800, "tags": ["number theory", "geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\ntypedef long long int lli;\n\nlli gcd(lli n1, lli n2)\n{\n    if (n2 != 0)\n       return gcd(n2, n1%n2);\n    else \n       return n1;\n}\n\nint main(){\n    lli res=1,n,m,k,prod,x,y;\n    scanf(\"%lld %lld %lld\",&n, &m, &k);\n    if((2*m*n)%k != 0)\n        printf(\"NO\\n\");\n    else{\n        prod = (2*m*n)/k;\n        if(prod>n){\n            x=gcd(prod,n);\n        }\n        else{\n            x=gcd(n,prod);\n        }\n        y=prod/x;\n        printf(\"YES\\n\");\n        printf(\"0 0\\n\");\n        printf(\"%lld 0\\n\",x);\n        printf(\"0 %lld\\n\",y);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\ntypedef long long int lli;\n\nlli gcd(lli n1, lli n2)\n{\n    if (n2 == 0)\n        return n1;\n    else if(n1 > n2)\n       return gcd(n2, n1%n2);\n    else\n       return gcd(n1, n2%n1);\n}\n\nint main(){\n    lli res=1,n,m,k,prod,x,y;\n    scanf(\"%lld %lld %lld\",&n, &m, &k);\n    if((2*m*n)%k != 0)\n        printf(\"NO\\n\");\n    else{\n        prod = (2*m*n)/k;\n        x=gcd(prod,n);\n        y=prod/x;\n        if(y>m){\n            y=gcd(prod,m);\n            x=prod/y;\n        }\n        printf(\"YES\\n\");\n        printf(\"0 0\\n\");\n        printf(\"%lld 0\\n\",x);\n        printf(\"0 %lld\\n\",y);\n    }\n    return 0;\n}"}
{"similarity_score": 0.3739021329987453, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "60cdb115b33fdab30b1274badc38f1f6", "bug_code_uid": "38be1971bc17afd5e4976cc400f31e18", "src_uid": "6c9cbe714f8f594654ebc59b6059b30a", "apr_id": "b070f174de09dc7ae1ea5f7c36682051", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tlong n;\n\tint i,j,k,ans=0;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\t\n\t}\n\tfor(i=0;i<n;i++){\n\t\t\t\t\n\t\tfor(j=i+1;j<n;j++){\n\t\t\t\n\t\tif(a[i]+a[j]==3)\t{\n\t\t\tans++;\n\t\t\ta[j]=0;\n\t\t\tbreak;\n\t\t}\n\t\t\t\n\t\t\t\t}\n\t}\n\t\n\t\n\t\tfor(i=0;i<n;i++){\n\t\t\t\t\n\t\tfor(j=i+1;j<n;j++){\n\t\t\t\n\t\tfor(k=i+2;k<n;k++){\n\t\t\t\n\t\t\t\n\t\t\tif(a[i]+a[j]+a[k]==3)\t{\n\t\t\tans++;\n\t\t\ta[j]=0;\n\t\t\ta[k]=0;\n\t\t\tbreak;\n\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\tbreak;\n\t}\n}\n\t\n\t\n\tprintf(\"%d\",ans);\n\treturn 0;\n\t\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\tlong n;\n\tlong ans=0;\n\tint i,one=0,two=0;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\t\n\t}\n\t\n\tfor(i=0;i<n;i++){\n\tif(a[i]==1)one++;\n\tif(a[i]==2)two++;\n\t}\n\tif(two!=0){\n\t\tif(two>=one)ans=one;\n\t\telse ans=two+(one-two)/3;\n\t}else ans=one/3;\n\n\tprintf(\"%d\",ans);\n\treturn 0;\n\t\n}"}
{"similarity_score": 0.5492577597840755, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "91a25c2260cc5408071aa942f0c4fcc4", "bug_code_uid": "51f30bdaf8051dc28e257f2ca2e31568", "src_uid": "2dc69231824db013161e4f223e25ccb9", "apr_id": "ce891a4ec15bcfc09f32d53057accbb1", "difficulty": 900, "tags": ["greedy", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nlong long int n, q;\r\nvoid sort(long long int arr[]){\r\n    int j;\r\n    for(int i = 0; i < (n - 1); i++){\r\n        for(j = i + 1; j < n; j++){\r\n            if(arr[i] < arr[j]){\r\n                long long int temp = arr[i];\r\n                arr[i] = arr[j];\r\n                arr[j] = temp;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nint main(void){\r\n    scanf(\"%lld%lld\",&n,&q);\r\n    long long int arr[n];\r\n    for(int i = 0; i < n; i++){\r\n        scanf(\"%lld\",&arr[i]);\r\n    }\r\n    sort(arr);\r\n    for(int i = 0; i < n; i++){\r\n        arr[i] = i ? (arr[i - 1] + arr[i]) : arr[i];\r\n    }\r\n    while(q){\r\n        long int x, y;\r\n        scanf(\"%ld%ld\",&x,&y);\r\n        \r\n        y = (x - y);\r\n        y ? printf(\"%lld\\n\",arr[x - 1] - arr[y -1]) : printf(\"%lld\\n\",arr[x - 1]);\r\n        q--;\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nlong long int n, q;\r\nint cmp(const void *a, const void *b){\r\n    return (*(int *)b - *(int *)a);\r\n}\r\n\r\nint main(void){\r\n    scanf(\"%lld%lld\",&n,&q);\r\n    long long int arr[n];\r\n    for(int i = 0; i < n; i++){\r\n        scanf(\"%lld\",&arr[i]);\r\n    }\r\n    qsort(arr, n, sizeof(long long int), cmp);\r\n    for(int i = 0; i < n; i++){\r\n        arr[i] = i ? (arr[i - 1] + arr[i]) : arr[i];\r\n    }\r\n    while(q){\r\n        long int x, y;\r\n        scanf(\"%ld%ld\",&x,&y);\r\n        \r\n        y = (x - y);\r\n        y ? printf(\"%lld\\n\",arr[x - 1] - arr[y -1]) : printf(\"%lld\\n\",arr[x - 1]);\r\n        q--;\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9641350210970464, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f0b5ce52c977804d490efbb49de10d3e", "bug_code_uid": "95ca74a974258cf53ec1fec05a36e023", "src_uid": "4671380d70876044e0ec7a9cab5e25ae", "apr_id": "cc966e3741ef27659cd068df03a45259", "difficulty": 1400, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n#define MAX 111\nint n,m,x,y,a,b,d,arr[MAX],occ[100100],flag[100100],ans,tmp,i,cnt;\nint main(){\n  for(scanf(\"%i\",&n);i<n;i++){\n    scanf(\"%i\", &arr[i]);\n    occ[arr[i]]++;\n  }\n  for(i=0;i<100100;i++)\n    if(occ[i]) cnt++;\n  for(i=0;i<n-1;i++)\n  {\n    occ[arr[i]]--;\n    if(occ[arr[i]]==0) cnt--;\n    if(flag[arr[i]]) continue;\n    ans+=cnt;\n    flag[arr[i]]=1;\n  }\n\n  printf(\"%i\\n\", ans);\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n#define MAX 100100\nint n,m,x,y,a,b,d,arr[MAX],occ[100100],flag[100100],tmp,i,cnt;\nlong long ans;\nint main(){\n  for(scanf(\"%i\",&n);i<n;i++){\n    scanf(\"%i\", &arr[i]);\n    occ[arr[i]]++;\n  }\n  for(i=0;i<100100;i++)\n    if(occ[i]) cnt++;\n  for(i=0;i<n;i++)\n  {\n    occ[arr[i]]--;\n    if(occ[arr[i]]==0) cnt--;\n    if(flag[arr[i]]) continue;\n    ans+=cnt;\n    flag[arr[i]]=1;\n  }\n  printf(\"%I64d\\n\", ans);\n}\n"}
{"similarity_score": 0.9595375722543352, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c2f8c61c14037c1596239c2eac45c922", "bug_code_uid": "5dea5b117ab0af8667f47cb65de2dc1f", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "29be6ef75c06173ae2c6e54a9787d376", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int n,i,m=0,r=0;\n     char a[n];\n     scanf(\"%d\",&n);\n       for(i=0;i<n+1;i++)\n         scanf(\"%c\",&a[i]);\n          for(i=0;i<n+1;i++)\n          {\n               if(a[i]=='A'||a[i]=='a')\n                  m++;\n                  else if(a[i]=='D'||a[i]=='d')\n                    r++;\n          }\n            if(m>r)\n              printf(\"Anton\");\n              if(r>m)\n               printf(\"Danik\");\n               if(m==r)\n               printf(\"Friendship\");\n\t\t\t               \n}", "fixed": "#include<stdio.h>\nint main()\n{\n     int n,i,m=0,r=0;\n     scanf(\"%d\",&n);\n     char a[n];\n       for(i=0;i<n+1;i++)\n         scanf(\"%c\",&a[i]);\n          for(i=0;i<n+1;i++)\n          {\n               if(a[i]=='A'||a[i]=='a')\n                  m++;\n                  else if(a[i]=='D'||a[i]=='d')\n                    r++;\n          }\n            if(m>r)\n              printf(\"Anton\");\n              if(r>m)\n               printf(\"Danik\");\n               if(m==r)\n               printf(\"Friendship\");\n\t\t\t               \n}"}
{"similarity_score": 0.9490909090909091, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5d068bc137f3ff5ca9b23cbe06f119f9", "bug_code_uid": "fb61462ddf4b08f1469daf89ecf10eb3", "src_uid": "2589e832f22089fac9ccd3456c0abcec", "apr_id": "a0373e6e2d6677677fd6ad4ea0a4ee97", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint x,y,n,r1;\n\t\tscanf(\"%d%d%d\",&x,&y,&n);\n\t\tif(n%x==y)\n\t\tprintf(\"%d\\n\",n);\n\t\telse if(n%x<y)\n\t\t{\n\t\t\tr1=n%x;\n\t\tprintf(\"%d\\n\",n-(r1+(x-y)));\n\t}\n\telse if(n%x>y)\n\t{\n\t\tr1=n%x;\n\t\tprintf(\"%d\\n\",n-r1);\n\t}\n\t}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint x,y,n,r1;\n\t\tscanf(\"%d%d%d\",&x,&y,&n);\n\t\tif(n%x==y)\n\t\tprintf(\"%d\\n\",n);\n\t\telse if(n%x<y)\n\t\t{\n\t\t\tr1=n%x;\n\t\tprintf(\"%d\\n\",n-(r1+(x-y)));\n\t}\n\telse if(n%x>y)\n\t{\n\t\tr1=n%x;\n\t\tprintf(\"%d\\n\",n-(r1-y));\n\t}\n\t}\n}"}
{"similarity_score": 0.740100791936645, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "a61413dd768945955634bdf7f608c513", "bug_code_uid": "444af33a9dcb20919d95b03301063698", "src_uid": "7965b6ce237b02617b55dc175ffa0451", "apr_id": "fc218b6e448f083663a8384334669bb5", "difficulty": 800, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\n\r\nint main(void){\r\nlong long int i,j,k,l,n,o,p,numb;\r\nlong long int count,second,swapped;\r\nlong long int str[10007],rts[10007];\r\nscanf(\"%lld\",&j);\r\n\r\nfor(i=0;i<j;i++){count=0,second=0;swapped=0;\r\n  scanf(\"%lld\",&l);\r\n  for(n=0;n<l;n++){\r\n  scanf(\"%lld\",&str[n]);\r\n  if(str[n]>count) {count=str[n];}\r\n  }\r\n\r\n    for(o=0;o<l;o++){\r\n        if((count>str[o])&&(str[o]>=second)){\r\n            second=str[o];\r\n            swapped=1;\r\n        }\r\n    }if(swapped!=1){second=count;}\r\n //second largest\r\nfor(p=0;p<l;p++){\r\n  if(str[p]-count==0){printf(\"%lld \",str[p]-second);}\r\n  else printf(\"%lld \",str[p]-count);\r\n}\r\n}\r\n   return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\n\r\nint main(void){\r\nlong long int i,j,k,l,n,o,p,numb;\r\nlong long int count,second,swapped;\r\n\r\nscanf(\"%lld\",&j);\r\n\r\nfor(i=0;i<j;i++){count=0,second=0;swapped=0;\r\n  scanf(\"%lld\",&l);\r\n  long long int str[l];\r\n  for(n=0;n<l;n++){\r\n  scanf(\"%lld\",&str[n]);\r\n  if(str[n]>count) {count=str[n];\r\n      swapped=n;\r\n  }\r\n  }\r\n\r\n    for(o=0;o<l;o++){\r\n        if((second<str[o])&&(o!=swapped)){\r\n            second=str[o];\r\n            \r\n        }\r\n    }\r\n //second largest\r\nfor(p=0;p<l;p++){\r\n  if(str[p]-count==0){printf(\"%lld \",str[p]-second);}\r\n  else printf(\"%lld \",str[p]-count);\r\n}\r\n}\r\n   return 0;\r\n}"}
{"similarity_score": 0.9967532467532467, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "50bb8b9adfc77d100bb2b7e2c30b5359", "bug_code_uid": "b2d80adb48ff4a9ddf0ab1f4453b820b", "src_uid": "f0c22161cb5a9bc17320ccd05517f867", "apr_id": "6a19b93aa0120a07af32dd5e75e61f69", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    int a,b,c;\r\n    int x,y,z;\r\n    int i;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n        x=a+b+c;\r\n        y=b+c;\r\n        z=c;\r\n        printf(\"%d %d %d\",x,y,z);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    int a,b,c;\r\n    int x,y,z;\r\n    int i;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n        x=a+b+c;\r\n        y=b+c;\r\n        z=c;\r\n        printf(\"%d %d %d\\n\",x,y,z);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9558232931726908, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9dc40f6e0b059c04ab267c539a992069", "bug_code_uid": "86ab2b48813fa196e94682afa0153ef4", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "9ccd3325bd03ca544bc5113c25e86bae", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n  #include<stdio.h>\nint main()\n\n{\n\tint i,k,x=0,j;\n\n\tscanf(\"%d\\n\",&k);\n\n\tchar str[k][3];\n\n\tfor(i=0;i<k;i++)\n\t{gets(str[i]);\n\n    if(str[i][2]=='+')\n\tx++;\n\tif(str[i][2]=='-')\n\tx--;\n\tif(str[i][0]=='-')\n\t--x;\n\telse\n    ++x;}\n    printf(\"%d\",x);}", "fixed": "\n  #include<stdio.h>\nint main()\n\n{\n\tint i,k,x=0,j;\n\n\tscanf(\"%d\\n\",&k);\n\n\tchar str[k][3];\n\n\tfor(i=0;i<k;i++)\n\t{gets(str[i]);\n\n    if(str[i][2]=='+')\n\tx++;\n\tif(str[i][2]=='-')\n\tx--;\n\tif(str[i][0]=='-')\n\t--x;\n\tif(str[i][0]=='+')\n    ++x;}\n    printf(\"%d\",x);}"}
{"similarity_score": 0.9382591093117408, "equal_cnt": 11, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "972e8a166d328417b8c815e8e2efe2f5", "bug_code_uid": "83632b3f0caaf4e9c54504ace524f358", "src_uid": "4d5457d9f053556c78c102f5c32f7542", "apr_id": "2f4de880783f28769760c85dc14ccd4b", "difficulty": 800, "tags": ["binary search", "greedy", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n    long long int t,i,j;\r\n    scanf(\"%lld\",&t);\r\n    for(i=0;i<t;i++){\r\n        long long int n,h;\r\n        scanf(\"%lld %lld\",&n,&h);\r\n        long long int arr1[n];\r\n        long long int max=0,second_max=0;\r\n        for(j=0;j<n;j++){\r\n            scanf(\"%lld\",&arr1[j]);\r\n            if(arr1[j]>max){\r\n                second_max=max;\r\n                max=arr1[j];\r\n            }else if(arr1[j]>second_max){\r\n                second_max=arr1[j];\r\n            }\r\n        }\r\n        if(max>=h){\r\n            printf(\"1\\n\");\r\n        }else if(max+second_max>=h){\r\n            printf(\"2\\n\");\r\n        }else{\r\n            long long int c = h/(max+second_max);\r\n            h=h%(max+second_max);\r\n            long long int d = c*2;\r\n            if(max>=h){\r\n                printf(\"%lld\\n\",d+1);\r\n            }else if(max+second_max>=h){\r\n                printf(\"%lld\\n\",d+2);\r\n            }\r\n\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n    long long int t,i,j;\r\n    scanf(\"%lld\",&t);\r\n    for(i=0;i<t;i++){\r\n        long long int n,h;\r\n        scanf(\"%lld %lld\",&n,&h);\r\n        long long int arr1[n];\r\n        int max=0,second_max=0;\r\n        for(j=0;j<n;j++){\r\n            scanf(\"%lld\",&arr1[j]);\r\n            if(arr1[j]>max){\r\n                second_max=max;\r\n                max=arr1[j];\r\n            }else if(arr1[j]>second_max){\r\n                second_max=arr1[j];\r\n            }\r\n        }\r\n        if(h-max<=0){\r\n            printf(\"1\\n\");\r\n        }else if(h-(max+second_max)<=0){\r\n            printf(\"2\\n\");\r\n        }else{\r\n            long long int c = h/(max+second_max);\r\n            h=h%(max+second_max);\r\n            long long int d = c*2;\r\n            if(h==0){\r\n                printf(\"%lld\\n\",d);\r\n            }else if(h-max<=0){\r\n                printf(\"%lld\\n\",d+1);\r\n            }else if(h-(max+second_max)<=0){\r\n                printf(\"%lld\\n\",d+2);\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9428076256499134, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e5dac42f02b27ccff55a312b2d2fad0c", "bug_code_uid": "2ad443418a31143a3bc2ad7babfb60fd", "src_uid": "bcf75978c9ef6202293773cf533afadf", "apr_id": "ab0f0f77bd6e4567c95a964b37e7a5de", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nconst int MX = 2e5 + 3;\nchar str[MX];\n\nint main()\n{\n    scanf(\"%s\", str);\n\n    int len = strlen(str);\n    int lenlen = len * 2;\n    for (int i=0; i < len; i++) {\n        str[lenlen - i - 1] = str[i];\n    }\n    str[lenlen] = '\\0';\n    puts(str);\n\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nconst int MX = 2e5 + 3;\n\n\nint main()\n{\n    char str[MX];\n    scanf(\"%s\", str);\n\n    int len = strlen(str);\n    int lenlen = len * 2;\n    for (int i=0; i < len; i++) {\n        str[lenlen - i - 1] = str[i];\n    }\n    str[lenlen] = '\\0';\n    puts(str);\n\n}"}
{"similarity_score": 0.9776536312849162, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e8d9f58a9cf7bc0c858f85bb29bd1732", "bug_code_uid": "cb51b4034f13c3cd498a0efd80c2df2e", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "b22ee66bc0742249a6397bd3d658e6d1", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,tm[100000][2],i,j,rep=1,counter=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&tm[i][0]);\n        scanf(\"%d\",&tm[i][1]);\n    }\n    for(i=0;i<n;i++){\n        if(tm[i][0]==tm[i+1][0] && tm[i][1]==tm[i+1][1] && n!=1){\n            rep=1;\n            for(j=0;j<n;j++){\n                if(tm[j][0]==tm[j+1][0] && tm[j][1]==tm[j+1][1] && tm[j][0]==tm[i][0] && tm[j][1]==tm[i][1]){\n                    rep++;\n                    //printf(\"j=%d i=%d rep=%d\\n\",j,i,rep);\n                    i++;\n                }\n            }\n        //printf(\"rep=%d\\n\",rep);\n        if(rep>counter)\n            counter=rep;\n        }\n    }\n    printf(\"%d\",counter);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,i,j,rep=1,counter=1;\n    scanf(\"%d\",&n);\n    int tm[n][2];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&tm[i][0]);\n        scanf(\"%d\",&tm[i][1]);\n    }\n    for(i=0;i<n;i++){\n        if(tm[i][0]==tm[i+1][0] && tm[i][1]==tm[i+1][1] && n!=1){\n            rep=1;\n            for(j=0;j<n;j++){\n                if(tm[j][0]==tm[j+1][0] && tm[j][1]==tm[j+1][1] && tm[j][0]==tm[i][0] && tm[j][1]==tm[i][1]){\n                    rep++;\n                    //printf(\"j=%d i=%d rep=%d\\n\",j,i,rep);\n                    i++;\n                }\n            }\n        //printf(\"rep=%d\\n\",rep);\n        if(rep>counter)\n            counter=rep;\n        }\n    }\n    printf(\"%d\",counter);\n    return 0;\n}\n"}
{"similarity_score": 0.9564553093964858, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "2138f1644588514a745d6444aa6616d7", "bug_code_uid": "debda97f848401a7ca59e7900868d51e", "src_uid": "9cc18b914678cb18213b2a52259de35d", "apr_id": "7ae90900300569bcf237a815a4a5e197", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n     int x, y, z, i, j, k, a, b, c, n, m, t;\r\n     scanf(\"%d\", &t);\r\n     while(t--)\r\n     {\r\n               scanf(\"%d\", &n);\r\n               if(n & 1) {\r\n                         for(x = 2; x < n - 1; x++)\r\n                               printf(\"%d \", x);\r\n                         printf(\"1 %d %d\\n\", n - 1, n);     \r\n               }\r\n               \r\n               else {\r\n                     for(x = n - 2; x > 0; x--)\r\n                           printf(\"%d \", x);\r\n                     printf(\"%d %d\\n\", n - 1, n);\r\n               }        \r\n     }\r\n     return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n     int x, y, z, i, j, k, a, b, c, n, m, t;\r\n     scanf(\"%d\", &t);\r\n     while(t--)\r\n     {\r\n               scanf(\"%d\", &n);\r\n               if(n & 1) {\r\n                         printf(\"1 \"); \r\n                         for(x = n - 2; x > 1; x--)\r\n                               printf(\"%d \", x);\r\n                         printf(\"%d %d\\n\", n - 1, n);     \r\n               }\r\n               \r\n               else {\r\n                     for(x = n - 2; x > 0; x--)\r\n                           printf(\"%d \", x);\r\n                     printf(\"%d %d\\n\", n - 1, n);\r\n               }        \r\n     }\r\n     return 0;\r\n}\r\n"}
{"similarity_score": 0.20270270270270271, "equal_cnt": 21, "replace_cnt": 14, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "c2c606013de1eafb581d6a93ba230825", "bug_code_uid": "8e6dc42b082ddf407ce5f342c0209aa6", "src_uid": "60af9947ed99256a2820814f1bf1c6c6", "apr_id": "c5bf37a663d3c1c43e0a92cc0e1fa501", "difficulty": 1500, "tags": ["implementation", "graphs"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long a[300001],b[300001],sum[300001]={0};\nint main()\n    {long long i,j,h,n,m;\n    scanf(\"%lld%lld\",&n,&m);\n    for(i=0;i<m;i++)\n    {scanf(\"%lld%lld\",&a[i],&b[i]);\n    sum[a[i]]++;\n    sum[b[i]]++;\n    }\n    for(i=1;i<=n-1;i++)\n    {for(j=i+1;j<=n;j++)\n        {if(sum[i]+sum[j]>=m)\n            {\n            for(h=0;h<m;h++)\n                {if(a[h]!=i&&a[h]!=j&&b[h]!=i&&b[h]!=j)\n                    {\n                    \tbreak;\n                    }\n                }\n                if(h==m)\n                {\n                printf(\"YES\");\n                return 0;\n            \t}\n            }\n        }\n        \n    }\n    printf(\"NO\");\n    return 0;\n    }", "fixed": "#include<stdio.h>\nint a[300002],b[300002];\nint main()\n{\n\tint n,m,k=0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\t}\n\tfor(int i=1;i<m;i++)\n\t{\n\t\tif(a[i]!=a[0]&&a[i]!=b[0]&&b[i]!=a[0]&&b[i]!=b[0])\n\t\t{\n\t\t\tk=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tint i;\n\tif(k)\n\t{\n\t\tfor(i=1;i<m;i++)\n\t\t{\n\t\t\tif(a[i]!=a[0]&&a[i]!=b[k]&&b[i]!=a[0]&&b[i]!=b[k])\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(i==m)\n\t\t{\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t\tfor(i=1;i<m;i++)\n\t\t{\n\t\t\tif(a[i]!=a[0]&&a[i]!=a[k]&&b[i]!=a[0]&&b[i]!=a[k])\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(i==m)\n\t\t{\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t\tfor(i=1;i<m;i++)\n\t\t{\n\t\t\tif(a[i]!=b[0]&&a[i]!=b[k]&&b[i]!=b[0]&&b[i]!=b[k])\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(i==m)\n\t\t{\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t\tfor(i=1;i<m;i++)\n\t\t{\n\t\t\tif(a[i]!=a[k]&&a[i]!=b[0]&&b[i]!=a[k]&&b[i]!=b[0])\n\t\t\t{\n\t\t\t\tprintf(\"NO\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tif(i==m)\n\t\t{\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\telse\n\t\tprintf(\"YES\");\n\treturn 0;\n}"}
{"similarity_score": 0.25229357798165136, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "bddc2158e04406210d0e4fafa79d7e60", "bug_code_uid": "e3e7ae19a19a39cf35a712d29693993a", "src_uid": "adc43f273dd9b3f1c58b052a34732a50", "apr_id": "b20da940701d67a5fedc8ebe33647ac8", "difficulty": 1600, "tags": ["dp", "two pointers", "math", "binary search", "brute force", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint k,i,count=0;\n\tscanf(\"%d\",&k);\n//\tscanf(\"%s\\n\",s);\n//\tprintf(\"%d\\n\",k);\n\tchar s[1000];\n\tscanf(\"%s\",s);\n//\tprintf(\"%s\\n\",s);\n\tint l=strlen(s);\n\tfor(i=0;i<l;i++)\n\t{\n\t\tint c=0;\n\t\tint j=i;\n\t\tint cont=0;\n\t//\tprintf(\"%d %d\\n\",i,c);\n\t\twhile(c<=k&&j<l)\n\t\t{\n\t\t\tif(s[j]=='1')\n\t\t\t{\tc++;\n\t\t\t}\n\t\t\tif(c==k)\n\t\t\t\tcont++;\n\t\t\tj++;\n\t\t}\n//\t\tprintf(\"%d %d %d\\n\",i,c,cont);\n\t\tif(c>=k)\n\t\t\tcount+=cont;\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint k,currsum=0,i;\n\tscanf(\"%d\",&k);\n\tchar c;\n\tint sum[1001000];\n//\tscanf(\"%s\",s);\n//\tint l=strlen(s);\n\tlong long ans=0;\n\tsum[0]=1;\n\tscanf(\"%c\",&c);\n\twhile(1)\n\t{\n\t\tscanf(\"%c\",&c);\n\t\tif(c=='\\n')\n\t\t\tbreak;\n\t\tcurrsum+=c-'0';\n\t\tif(currsum>=k)\n\t\t{\n\t\t\tans+=sum[currsum-k];\n\t\t}\n\t\tsum[currsum]++;\n\t}\n//\tprintf(\"out\\n\");\n\tprintf(\"%I64d\\n\",ans);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.7489029741589469, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "9625d82554f390cd9aa3192540faefa4", "bug_code_uid": "c32fc3053fc86a66e69fb78dc7123d44", "src_uid": "daabf732540e0f66d009dc211c2d7b0b", "apr_id": "c12bde57b0e3786f58810e78a45308c4", "difficulty": 1500, "tags": ["number theory", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nlong long fact(long long n)\n{\n\tlong long sum=1,a=1;\n\tfor(a=1;a<=n;a++)\n\tsum*=a;\n\treturn sum;\n\t}\nint main()\n{\n    long long n,x,sum,a,y,sum1,sum2,sum3;\n    long long s1[100110],s2[100110],s3[100110];\n    while(scanf(\"%lld%lld\",&n,&x)!=EOF)\n    {\n        sum=0;\n        memset(s2,0,sizeof(s2));\n        memset(s3,0,sizeof(s3));\n        for(a=1;a<=n;a++)\n        {\n            scanf(\"%lld\",&s1[a]);\n            s2[s1[a]]++;\n        }\n        if(x==0)\n        {\n        \tfor(a=1;a<=n;a++)\n        \t{\n        \t\tif(s2[s1[a]]>1)\n        \t\t{\n        \t\t\tsum1=2;\n        \t\t\tsum2=fact(s2[s1[a]])\n        \t\t\tsum3=fact(s2[s1[a]]-2))\n        \t\t\tsum+=sum2/(sum1*sum3);\n        \t\t\ts2[s1[a]]=0;\n        \t\t\t}\n        \t\t}\n        }\n        else\n        {\n        for(a=1;a<=n;a++)\n        {\n            if(s2[s1[a]^x]&&s2[s1[a]])\n            {\n                sum=sum+s2[s1[a]]*s2[s1[a]^x];\n                s2[s1[a]]=0;\n                s2[s1[a]^x]=0;\n            }\n        }\n        }\n        printf(\"%lld\\n\",sum);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n    long long s1[100110],s2[100110],s3[100110];\nint main()\n{\n    long long n,x,sum,a,y,sum1,sum2,sum3;\n\n    while(scanf(\"%lld%lld\",&n,&x)!=EOF)\n    {\n        sum=0;\n        memset(s2,0,sizeof(s2));\n        memset(s3,0,sizeof(s3));\n        for(a=1;a<=n;a++)\n        {\n            scanf(\"%lld\",&s1[a]);\n            s2[s1[a]]++;\n        }\n        if(x==0)\n        {\n        \tfor(a=1;a<=n;a++)\n        \t{\n        \t\tif(s2[s1[a]]>2)\n        \t\t{\n        \t\t\tsum2=s2[s1[a]]*(s2[s1[a]]-1)/2;\n        \t\t\tsum+=sum2;\n        \t\t\ts2[s1[a]]=0;\n        \t\t}\n\t\t\t\telse if(s2[s1[a]]==2)\n        \t\t\t{\n        \t\t\tsum+=1;\n        \t\t\ts2[s1[a]]=0;\n        \t\t\t}\n        \t}\n        }\n        else\n        {\n        for(a=1;a<=n;a++)\n        {\n            if(s2[s1[a]^x]&&s2[s1[a]])\n            {\n                sum=sum+s2[s1[a]]*s2[s1[a]^x];\n                s2[s1[a]]=0;\n                s2[s1[a]^x]=0;\n            }\n        }\n        }\n        printf(\"%lld\\n\",sum);\n    }\n    return 0;\n}"}
{"similarity_score": 0.7956403269754768, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "a4db16ac17bbfc7d33936be11fbd7f1b", "bug_code_uid": "df8be1a7837d7e4053187d29fad83227", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "f54b57be614e112252fba679ed2bb7fc", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n\r\n    long long int t,n,x;\r\n    scanf(\"%lld\",&t);\r\n\r\n    while(t--)\r\n    {\r\n        scanf(\"%lld\",&n);\r\n\r\n        if(n==1)\r\n        {\r\n            printf(\"0 1\\n\");\r\n        }\r\n        else if(n%2==0)\r\n        {\r\n            x=n/2;\r\n            printf(\"%lld %lld\\n\",x,x);\r\n        }\r\n        else\r\n        {\r\n            x=n/2;\r\n            printf(\"%lld %lld\\n\",x,x+1);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n\r\n    long long int t,n,x;\r\n    scanf(\"%lld\",&t);\r\n\r\n    while(t--)\r\n    {\r\n        scanf(\"%lld\",&n);\r\n        if(n==1)\r\n        {\r\n            printf(\"0 1\\n\");\r\n        }\r\n\r\n        else\r\n        {\r\n            printf(\"-%lld %lld\\n\",n-1,n);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n"}
{"similarity_score": 0.8717488789237668, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "65f5bbc7d3bb41416602e5930cd0fa47", "bug_code_uid": "9678389b64022117bfd72f75b0a40370", "src_uid": "d9e9c53b391eb44f469cc92fdcf3ea0a", "apr_id": "361648a1be83cef996aed0ee0cff7add", "difficulty": 1000, "tags": ["constructive algorithms", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\n#include<string.h>\nmain()\n{\n    int n,i,j,k,b;\n    int count=0;\n    scanf(\"%d\", &n);\n    char word[1000000];\n//    for(k=0;k<n;k++)\n//    {\n    scanf(\"%s\", &word);\n\n    for(i=0;i<n;i++)\n    {\n        for(j=1;i+j<n;j++)\n        {\n            if(word[i]==word[i+j])\n            {\n                b++;\n                if(b==2)\n                {\n                    break;\n                }\n                count++;\n            }\n        }\n        b=0;\n    }\n    printf(\"%d\", count);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<conio.h>\n#include<string.h>\nmain()\n{\n    int n,i,j,k,b;\n    int count=0;\n    scanf(\"%d\", &n);\n    char word[1000000];\n\n    scanf(\"%s\", &word);\n\n    for(i=0;i<n;i++)\n    {\n        for(j=1;i+j<n;j++)\n        {\n            if(word[i]==word[i+j])\n            {\n                b++;\n                if(b==2)\n                {\n                    break;\n                }\n                count++;\n            }\n        }\n        b=0;\n    }\n    if(count<=(26-(n-count)))\n    {\n        printf(\"%d\", count);\n    }\n    else\n    {\n        printf(\"-1\");\n    }\nreturn 0;\n}\n"}
{"similarity_score": 0.9865591397849462, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "173724ca6b5cdb1315bc71e0a65185de", "bug_code_uid": "9284b66632826fe64282a2dd2f0fe440", "src_uid": "9438ce92e10e846dd3ab7c61a1a2e3af", "apr_id": "d952959ea9e3cdc6bb48853dfc9c9992", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint i,j,n,m,x,y,s[1000],flag=0,k;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tfor(j=0;j<x;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&y);\n\t\t\tfor(k=1;k<=m;k++)\n\t\t\t{\n\t\t\t\tif(y==k)\n\t\t\t\t{\n\t\t\t\t\ts[k]++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tif(s[i]==0)\n\t\t{\n\t\t\tflag=1;\n\t\t\tprintf(\"NO\");\n\t\t}\n\t}\n\tif(flag==0)\n\t{\n\t\tprintf(\"YES\");\n\t}\n\t\n}", "fixed": "#include<stdio.h>\nmain()\n{\n\tint i,j,n,m,x,y,s[1000],flag=0,k;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tfor(j=0;j<x;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&y);\n\t\t\tfor(k=1;k<=m;k++)\n\t\t\t{\n\t\t\t\tif(y==k)\n\t\t\t\t{\n\t\t\t\t\ts[k]++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tif(s[i]==0)\n\t\t{\n\t\t\tflag=1;\n\t\t\tprintf(\"NO\");\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==0)\n\t{\n\t\tprintf(\"YES\");\n\t}\n\t\n}"}
{"similarity_score": 0.9968652037617555, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b9d7acece25d4d6a04a6b779f47e4850", "bug_code_uid": "1718bbbf1de953e6186c2ca2e3be3927", "src_uid": "ffa76f2558c8a70ab5c1ecb9e8561f25", "apr_id": "0b192bc108af8a4d9b446a317ad4aa8c", "difficulty": 1400, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#define ll long long\nint cmpfunc(const void* a, const void* b){\n\treturn *(int*)a - *(int*)b;\n}\n\n\nint main(){\n\n\tint n,m;\n\tscanf(\"%d %d\",&n , &m);\n\tint a[n+1];\n\ta[0] = 0;\n\tll int sum = 0;\n\tfor(int i=1;i<=n; ++i){\n\t\tscanf(\"%d\", &a[i]);\n\t\tsum+=a[i];\n\t}\n\n\tqsort(a,n+1,sizeof(int),cmpfunc);\n\tll int mr =0;\n\tll int prev = 0;\n\tfor(int i=1;i<=n; ++i){\n\t\tmr++;\n\t\tif(a[i]>prev)prev++;\n\t}\n\tmr += a[n]-prev;\n\tprintf(\"%d\\n\",sum-mr );\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#define ll long long\nint cmpfunc(const void* a, const void* b){\n\treturn *(int*)a - *(int*)b;\n}\n\n\nint main(){\n\n\tint n,m;\n\tscanf(\"%d %d\",&n , &m);\n\tint a[n+1];\n\ta[0] = 0;\n\tll int sum = 0;\n\tfor(int i=1;i<=n; ++i){\n\t\tscanf(\"%d\", &a[i]);\n\t\tsum+=a[i];\n\t}\n\n\tqsort(a,n+1,sizeof(int),cmpfunc);\n\tll int mr =0;\n\tll int prev = 0;\n\tfor(int i=1;i<=n; ++i){\n\t\tmr++;\n\t\tif(a[i]>prev)prev++;\n\t}\n\tmr += a[n]-prev;\n\tprintf(\"%I64d\\n\",sum-mr );\n}"}
{"similarity_score": 0.9979674796747967, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9f015ba1ae7d751b71f933692450d591", "bug_code_uid": "d1c4fd750477ac23f673f835b64683e9", "src_uid": "9a92221c760a3b6a1e9318f948fe0473", "apr_id": "d9c940aeca09263a9989af906dec4062", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<ctype.h>\n#include<limits.h>\n#include<math.h>\n#include<stdbool.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n    int n;\n    int hash[1000] = {0};\n    int count = 0;\n    int bigger = 0;\n\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; i++)\n    {\n        int x;\n        scanf(\"%d\", &x);\n        if(hash[x]++ == 0)\n            count++;\n        if(hash[x] > bigger)\n            bigger = hash[x];\n    }\n\n    printf(\"%d %d\", bigger, count);\n\n\n\n    return 0;\n}\n", "fixed": "#include<ctype.h>\n#include<limits.h>\n#include<math.h>\n#include<stdbool.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n    int n;\n    int hash[1001] = {0};\n    int count = 0;\n    int bigger = 0;\n\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; i++)\n    {\n        int x;\n        scanf(\"%d\", &x);\n        if(hash[x]++ == 0)\n            count++;\n        if(hash[x] > bigger)\n            bigger = hash[x];\n    }\n\n    printf(\"%d %d\", bigger, count);\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9800266311584553, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "3da777d7510e36ac4ceb8da24b0034a7", "bug_code_uid": "e06c9afa16c0d038620daed89c7e5990", "src_uid": "840a4e16454290471faa5a27a3c795d9", "apr_id": "2016ddce645eba596e4baa6717a2c184", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n//15, 16, 17, 20\nint main(int argc, const char * argv[]) {\n    int t;\n    scanf(\"%d\", &t);\n    for (int i = 0; i < t; i++){\n        long x;\n        scanf(\"%ld\", &x);\n        if (x / 14 == 0) printf(\"NO\\n\");\n        else{\n            if ((x % 14 < 1) || (x % 14 > 6)) printf(\"NO\\n\");\n            else printf(\"YES\\n\");\n        }\n        \n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n//15, 16, 17, 20\nint main(int argc, const char * argv[]) {\n    int t;\n    scanf(\"%d\", &t);\n    for (int i = 0; i < t; i++){\n        long long x;\n        scanf(\"%lld\", &x);\n        if (x / 14 == 0) printf(\"NO\\n\");\n        else{\n            if ((x % 14 < 1) || (x % 14 > 6)) printf(\"NO\\n\");\n            else printf(\"YES\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9647779479326187, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "bea576ee28b6fefefa9abca16933ac91", "bug_code_uid": "27c050f6ff78f3ba30ccd3978fc14606", "src_uid": "5139d222fbbfa70d50e990f5d6c92726", "apr_id": "6e2afb87904fbb5320d79a8c10bf82df", "difficulty": 1100, "tags": ["brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int ncase;\n    scanf(\"%d\", &ncase);\n\n    while(ncase--){\n        int n;\n        scanf(\"%d\", &n);\n\n        int pos[5010];\n        for(int i = 0; i < 5010; i++)\n            pos[i] = -1;\n\n        int pal = 0;\n        for(int i = 0; i < n; i++){\n            int a;\n            scanf(\"%d\", &a);\n\n            if(pos[a] == -1)\n                pos[a] = i;\n            else{\n                int gap = i - pos[a];\n                if(gap > 1){\n                    pal = 1;\n                    break;\n                }\n            }\n        }\n\n        if(pal)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(){\n    int ncase;\n    scanf(\"%d\", &ncase);\n\n    while(ncase--){\n        int n;\n        scanf(\"%d\", &n);\n\n        int pos[5010];\n        for(int i = 0; i < 5010; i++)\n            pos[i] = -1;\n\n        int pal = 0;\n        for(int i = 0; i < n; i++){\n            int a;\n            scanf(\"%d\", &a);\n\n            if(pos[a] == -1)\n                pos[a] = i;\n            else{\n                int gap = i - pos[a];\n                if(gap > 1)\n                    pal = 1;\n            }\n        }\n\n        if(pal)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.5810526315789474, "equal_cnt": 14, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "b9dc6d0cd908bcc47c60124a3ad8ff1e", "bug_code_uid": "b67ef979dd2da6b0b91f3c1ad26ac981", "src_uid": "b5ef56f2eb482682414c32fba83a3949", "apr_id": "db2ff88339637da77fda0cd435c49362", "difficulty": 1400, "tags": ["data structures", "dp", "sortings", "two pointers"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n     int x, y, z, i, j, k, a, b, c, n, m, t, arr[200000];\r\n     long long u, v;\r\n     \r\n     scanf(\"%d\", &t);\r\n     while(t--)\r\n     {\r\n               c = 0;\r\n               scanf(\"%d %d\", &n, &k);\r\n               for(x = 0; x < n; x++)\r\n                       scanf(\"%d\", &arr[x]);\r\n               \r\n               m = k < 30 ? k : 30; \r\n               for(x = 0; x < n - k; x++) {\r\n                       u = arr[x];\r\n                       for(y = x + 1; y <= x + m; y++) {\r\n                               v = (1LL<<(y - x)) * arr[y];\r\n                              \r\n                               if(v <= u)\r\n                                       break;\r\n                               else\r\n                                       u = v;\r\n                       }\r\n                       c += y > (x + m);\r\n               }\r\n               \r\n               printf(\"%d\\n\", c);                 \r\n     }\r\n     return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n     int x, y, z, i, j, k, a, b, c, n, m, t, arr[200000], cc[200000];\r\n     long long u, v;\r\n     \r\n     scanf(\"%d\", &t);\r\n     while(t--)\r\n     {\r\n               c = 0;\r\n               scanf(\"%d %d\", &n, &k);\r\n               for(x = 0; x < n; x++)\r\n                       scanf(\"%d\", &arr[x]);\r\n               \r\n               for(x = 0; x < n - 1; x++)\r\n                       cc[x] = arr[x] < 2 * arr[x + 1];\r\n               m = 0;\r\n               for(x = 0; x < k; x++)\r\n                       m += cc[x];\r\n               \r\n               i = 0, j = x;\r\n               c += m == k;        \r\n               while(j < n - 1)\r\n               {\r\n                     m += cc[j++], m -= cc[i++];\r\n                     c += m == k;     \r\n               } \r\n                       \r\n                                      \r\n               printf(\"%d\\n\", c);                 \r\n     }\r\n     return 0;\r\n}\r\n"}
{"similarity_score": 0.9666966696669667, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8f3b0ff3467e6cbfa09ba0f6a2c7d935", "bug_code_uid": "af7b56cc32ac878fa5d182647a1d7d35", "src_uid": "ac77e2e6c86b5528b401debe9f68fc8e", "apr_id": "7cb506a0e25bab66900e2e6c3cea685a", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n        char b[100];\n        scanf(\"%s\",b);\n        char a[100];\n        int l=strlen(b);\n        if(l==2)\n        {\n            printf(\"%s\\n\",b);\n            \n        }\n        else\n        {\n            a[0]=b[0];\n            for(int i=1;b[i+2]!='\\0';i+=2)\n            {\n                a[j++]=b[i];\n            }\n            a[j]=b[l-1];\n            a[j+1]='\\0';\n           \n        printf(\"%s\\n\",a);\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n        char b[100];\n        scanf(\"%s\",b);\n        char a[100];\n        int l=strlen(b);\n        if(l==2)\n        {\n            printf(\"%s\\n\",b);\n            \n        }\n        else\n        {\n            a[0]=b[0];\n            int j=1;\n            for(int i=1;i<=l-2;i+=2)\n            {\n                a[j++]=b[i];\n            }\n            a[j]=b[l-1];\n            a[j+1]='\\0';\n           \n        printf(\"%s\\n\",a);\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9654390934844193, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0ff78b958c9c7fc04f445f267528f8bd", "bug_code_uid": "eab1ec0d78ec1f200f592480eceada11", "src_uid": "2be73aa00a13be5274cf840ecd3befcb", "apr_id": "dcd63e85d9e9482d35219970334a25f6", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include \"stdio.h\"\n\n#define MAX_COLS 100001\n#define LEGS 2\n\nint abs_d(int a, int b)\n{\n    if ((a - b) > 0)\n    {\n        return (a - b);\n    }\n    else\n    {\n        return (b - a);\n    }\n}\n\nint main()\n{\n    int n; //columns\n    int l, r;\n    int l_sum, r_sum; //left, right soldiers;\n    int arr[MAX_COLS][LEGS];\n    int max_abs_d;\n    int i_max;\n\n    scanf(\"%i\", &n);\n\n    l_sum = 0;\n    r_sum = 0;\n    for(int i = 1; i <= n; i++)\n    {\n        scanf(\"%i%i\", &l, &r);\n        arr[i][0] = l;\n        arr[i][1] = r;\n        l_sum += l;\n        r_sum += r;\n    }\n\n    max_abs_d = abs_d(l_sum, r_sum);\n    i_max = 0;\n    for(int i = 1; i <= n; i++)\n    {\n        l = arr[i][0];\n        r = arr[i][1];\n        if(max_abs_d < abs_d(l_sum - l + r, r_sum - r + l))\n        {\n            i_max = i;\n        }\n    }\n    printf(\"%i\\n\", i_max);\n\n    return 0;\n}\n", "fixed": "#include \"stdio.h\"\n\n#define MAX_COLS 100001\n#define LEGS 2\n\nint abs_d(int a, int b)\n{\n    if ((a - b) > 0)\n    {\n        return (a - b);\n    }\n    else\n    {\n        return (b - a);\n    }\n}\n\nint main()\n{\n    int n; //columns\n    int l, r;\n    int l_sum, r_sum; //left, right soldiers;\n    int arr[MAX_COLS][LEGS];\n    int max_abs_d;\n    int i_max;\n\n    scanf(\"%i\", &n);\n\n    l_sum = 0;\n    r_sum = 0;\n    for(int i = 1; i <= n; i++)\n    {\n        scanf(\"%i%i\", &l, &r);\n        arr[i][0] = l;\n        arr[i][1] = r;\n        l_sum += l;\n        r_sum += r;\n    }\n\n    max_abs_d = abs_d(l_sum, r_sum);\n    i_max = 0;\n    for(int i = 1; i <= n; i++)\n    {\n        l = arr[i][0];\n        r = arr[i][1];\n        if(max_abs_d < abs_d(l_sum - l + r, r_sum - r + l))\n        {\n            i_max = i;\n            max_abs_d = abs_d(l_sum - l + r, r_sum - r + l);\n        }\n    }\n    printf(\"%i\\n\", i_max);\n\n    return 0;\n}\n"}
{"similarity_score": 0.8115942028985508, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f73b17d0c151fed64064d15f2d91f76a", "bug_code_uid": "1ab95b85417d794aa02eb33884f3371f", "src_uid": "d8c4c2d118e07c3b148495fc04d8fcb5", "apr_id": "a70eff59f8918db6b446e93f812d87fd", "difficulty": 1400, "tags": ["games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int T, n;\n    scanf(\"%d\", &T);\n    while (T--) {\n        scanf(\"%d\", &n);\n        puts((n & 1) ? \"0\" : \"1\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n    int T, n;\n    scanf(\"%d\", &T);\n    while (T--) {\n        scanf(\"%d\", &n);\n        puts((n & 1) ? \"0\" : \"1\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.43339960238568587, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "502ea007abf82094a7b1e45411c046a2", "bug_code_uid": "2b0e64b069f563c93dd714ec36d5851c", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "925aa5e53d9894377382885422597e92", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nvoid main(){\nint n,h,w=0,i;\ndo{\n\t\n\tscanf(\"%d\",&n)\n}\twhile ((n<1)&&(n>1000));\n\ndo{\n\t\n\tscanf(\"%d\",&h)\n}\twhile ((h<1)&&(h>1000));\t\n\nfor (i=1;i<=n;i++)\n{do{\n\tscanf(\"%d\",&x);}while ((x<1)&&(x>2h))\nif (x>h)\t\n\tw=w+2;\n\telse w++;\n}\nprintf(\"%d\",w);\n}", "fixed": "#include <stdio.h>\nint main(){\nint a,n,h,w=0,i;\ndo{\n\t\n\tscanf(\"%d %d\",&n,&h);\n}\twhile ((n<1)||(n>1000)||(h<1)||(h>1000));\nfor (i=1;i<=n;i++)\n{do{\n\tscanf(\"%d\",&a);}while ((a<1)||(a>2*h));\nif (a>h)\t\n\tw=w+2;\n\telse w++;\n}\nprintf(\"%d\",w);\nreturn 0;\n}"}
{"similarity_score": 0.9433766233766234, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "5ff5fdfe7c95ac4a7090d074e5a0f284", "bug_code_uid": "e565518d1e9d7c96502567cf16e6c074", "src_uid": "f853a61741518cb884c00c8b760692aa", "apr_id": "7b74aca0191a740dc97a1c038fc255b9", "difficulty": 1200, "tags": ["constructive algorithms", "graphs", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\n#include<string.h>\r\ntypedef long long int ulli;\r\nulli gcd(ulli a,ulli b){\r\n\tif(a==0&&b!=0)\r\n\t return b;\r\n\telse if(b==0&&a!=0)\r\n\t return a;\r\n\telse if(a==0&&b==0)\r\n\t return 0;\r\n\telse\r\n   return gcd(b,a%b);}\r\nint* array;\r\nint cmp(const void*a,const void*b){\r\n\tint ia=*(int*)a;\r\n\tint ib=*(int*)b;\r\n\treturn ia-ib;}\r\nint min(int a,int b){\r\n\tif(a<=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\nint max(int a,int b){\r\n \tif(a>=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\nulli digit(ulli n){\r\n \tulli c=0;\r\n \twhile(n>0){\r\n \t\tc+=1;\r\n \t\tn/=10;}\r\n \treturn c;}\r\nulli power(ulli base,ulli p){\r\n\tulli ans=1;\r\n\twhile(p--)\r\n\t\tans=(ans*base);\r\n\treturn ans;}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t  ulli n,m,k,d;\r\n\t  scanf(\"%lld %lld %lld\",&n,&m,&k);\r\n\t  d=k-1;\r\n\t  if(m*d>=n*(n-1))\r\n\t   printf(\"Yes\");\r\n\t  else\r\n     printf(\"No\");\r\n    printf(\"\\n\");\r\n    \r\n}\r\n\treturn 0;\r\n}\r\n \r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\n#include<string.h>\r\ntypedef long long int ulli;\r\nulli gcd(ulli a,ulli b){\r\n\tif(a==0&&b!=0)\r\n\t return b;\r\n\telse if(b==0&&a!=0)\r\n\t return a;\r\n\telse if(a==0&&b==0)\r\n\t return 0;\r\n\telse\r\n   return gcd(b,a%b);}\r\nint* array;\r\nint cmp(const void*a,const void*b){\r\n\tint ia=*(int*)a;\r\n\tint ib=*(int*)b;\r\n\treturn ia-ib;}\r\nint min(int a,int b){\r\n\tif(a<=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\nint max(int a,int b){\r\n \tif(a>=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\nulli digit(ulli n){\r\n \tulli c=0;\r\n \twhile(n>0){\r\n \t\tc+=1;\r\n \t\tn/=10;}\r\n \treturn c;}\r\nulli power(ulli base,ulli p){\r\n\tulli ans=1;\r\n\twhile(p--)\r\n\t\tans=(ans*base);\r\n\treturn ans;}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t  ulli n,m,k,d,f=0;\r\n\t  scanf(\"%lld %lld %lld\",&n,&m,&k);\r\n\t  if(m>=(n-1)&&m<=n*(n-1)/2){\r\n\t  \tif(k>3||(n==1&&k>1)||(n*(n-1)/2==m&&k>2))\r\n\t  \t f=1;}\r\n\t  \t\r\n\t  if(f)\r\n\t   printf(\"Yes\");\r\n\t  else\r\n     printf(\"No\");\r\n    printf(\"\\n\");\r\n    \r\n}\r\n\treturn 0;\r\n}\r\n \r\n"}
{"similarity_score": 0.5041260315078769, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "7e75638d327b115d61cac9073da2b736", "bug_code_uid": "34b1982c0456ffc484a5b2d7cb799c82", "src_uid": "926c01419301caff034988aff98edc9d", "apr_id": "8b6a1ec50d24b0b9e01cb81c2242085f", "difficulty": 1300, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint comp(const void* a, const void* b)\n{\n    return *(int*)a - *(int*)b;\n}\n//#define scanf scanf_s\nint main()\n{\n    int n, i, a[200000],b[200000],max,sum1=0,sum2=1,k,j,l;\n    scanf(\"%d %d\", &n,&k);\n    for (i = 0; i < n; i++)\n        scanf(\"%d\", &a[i]);\n    printf(\"%d \", (n + (n - k + 1)) * k / 2);\n    for (i = 0,l=n; i < k; i++,l--)\n    {\n        for (j = 0; j < n; j++)\n        {\n            if (a[j] == l)\n            {\n                b[i] = j;\n                break;\n            }\n        }\n    }\n    qsort(b, k, sizeof(int), comp);\n    for (i = 0; i < k - 1; i++)\n    {\n        sum2 *= b[i + 1] - b[i];\n    }\n    printf(\"%d\", sum2);\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint comp(const void* a, const void* b)\n{\n    return *(int*)a - *(int*)b;\n}\n//#define scanf scanf_s\nlong long n, i, a[200000],b[200000],max,sum1=0,sum2=1,k,j=0,l;\nint main()\n{\n    scanf(\"%lld %lld\", &n,&k);\n    for (i = 0; i < n; i++)\n        scanf(\"%lld\", &a[i]);\n    printf(\"%lld \", (n + (n - k + 1)) * k / 2);\n    for (i = 0; i < n; i++)\n    {\n        if(a[i]>n-k)\n        {\n            b[j++]=i;\n        }\n        if(j==k)\n            break;\n    }\n    qsort(b, k, sizeof(long long), comp);\n    for (i = 0; i < k - 1; i++)\n    {\n        sum2 =(sum2*( b[i + 1] - b[i]))%998244353;\n    }\n    printf(\"%lld\", sum2);\n}\n"}
{"similarity_score": 0.3955773955773956, "equal_cnt": 10, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "0e71d911c5f848c052095464402ca00b", "bug_code_uid": "7c8f9f5bd380a0b97eb87f84d9b61853", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "6e3c6339c94d46aa7d597532c7f5902a", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include<math.h>\n\nint main()\n{\n  int n ,i ,num ;\n  scanf(\"%d\",&n);\n\n  int x[n];\n  for (i=0;i<n;++i)\n  {\n      scanf(\"%d\",&x[i]);\n\n\nagain:\n\n  for (i=1;i<n;++i)\n   {\n\n    if (x[0]<x[i])\n\n    {\n        x[0]=x[i];\n\n        num= sqrt(x[0]);\n    }\n\n     if (x[0]!=num*num)\n     {\n         printf(\"%d\",x[0]);\n     }\n     else\n        x[0]=0;\n        goto again;\n  }\n }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include<math.h>\n\nint main()\n{\n   int n,i,num,res;\n   res=-1000001;\n   scanf(\"%d\",&n);\n   int x[n];\n\n   for(i=0;i<n;i++){\n    scanf(\"%d\",&x[i]);\n                   }\n   for(i=0;i<n;i++){\n    num=sqrt(x[i]);\n    if(x[i]!=num*num){\n\n    if(res<x[i])\n    {\n      res=x[i];\n    }\n                     }\n                   }\n    printf(\"%d\",res);\n\n    return 0;\n}\n"}
