{"fixCommitSHA1": "993752933edcc54fa155265ad7e7754bf1e15f55", "projectName": "apache.camel", "bugType": "Change Numeric Literal", "problem": "             template.sendBody(\"direct:grpc-stream-async-async-route\", PingRequest.newBuilder().setPingName(String.valueOf(i)).build());\n         }\n        template.sendBody(\"direct:grpc-stream-async-async-route\", PingRequest.newBuilder().setPingName(String.valueOf(\"error\")).build());", "fixed": "             template.sendBody(\"direct:grpc-stream-async-async-route\", PingRequest.newBuilder().setPingName(String.valueOf(i)).build());\n         }\n        template.sendBody(\"direct:grpc-stream-async-async-route\", PingRequest.newBuilder().setPingName(\"error\").build());", "sourceBeforeFix": "Thread.sleep(200)", "sourceAfterFix": "Thread.sleep(1000)"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface AdvancedTwitterTimelineEndpointBuilder\n             extends\n                 AdvancedTwitterTimelineEndpointConsumerBuilder, AdvancedTwitterTimelineEndpointProducerBuilder {\n         default TwitterTimelineEndpointBuilder basic() {", "fixed": "     \n    public interface AdvancedTwitterTimelineEndpointBuilder\n             extends\n                 AdvancedTwitterTimelineEndpointConsumerBuilder, AdvancedTwitterTimelineEndpointProducerBuilder {\n         default TwitterTimelineEndpointBuilder basic() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "private boolean METHOD_1 ( ) { boolean VAR_1 = true ; for ( int i = 1 ; i < ( VAR_2 . length ) ; i ++ ) { if ( ( VAR_2 [ ( i - 1 ) ] . METHOD_2 ( ) ) != ( ( VAR_2 [ i ] . METHOD_2 ( ) ) - 1 ) ) { VAR_1 = false ; } } return VAR_1 ; }\n", "fixed": "private boolean METHOD_1 ( ) { boolean VAR_1 = true ; for ( int i = 1 ; i < ( VAR_2 . length ) ; i ++ ) { if ( ( VAR_2 [ i ] . METHOD_2 ( ) ) != ( ( VAR_2 [ ( i - 1 ) ] . METHOD_2 ( ) ) - 1 ) ) { VAR_1 = false ; } } return VAR_1 ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory denormalize =\n       new PassFactory(\"denormalize\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory denormalize =\n       new PassFactory(\"denormalize\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "96a7c11c16fe2a6467cfcf2ed2366dc6cc56924c", "projectName": "Graylog2.graylog2-server", "bugType": "Change Identifier Used", "problem": "     protected ComputationResult compute() {\n         String filter = null;\n         if (streamId != null && !streamId.isEmpty()) {\n            filter = \"streams:\" + filter;\n         }\n         try {", "fixed": "     protected ComputationResult compute() {\n         String filter = null;\n         if (streamId != null && !streamId.isEmpty()) {\n            filter = \"streams:\" + streamId;\n         }\n         try {", "sourceBeforeFix": "\"streams:\" + filter", "sourceAfterFix": "\"streams:\" + streamId"}
{"problem": "public static TYPE_1 METHOD_1 ( java.lang.String title , java.util.Calendar VAR_1 , java.util.Calendar VAR_2 , int VAR_3 ) { if ( ( VAR_1 == null ) && ( VAR_2 == null ) ) { return new TYPE_1 ( title ) ; } else if ( VAR_3 > 0 ) { return new TYPE_2 ( title , VAR_1 , VAR_2 , VAR_3 ) ; } else if ( VAR_2 == null ) { return new TYPE_3 ( title , VAR_1 ) ; } else { return new TYPE_4 ( title , VAR_1 , VAR_2 ) ; } }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.lang.String title , java.util.Calendar VAR_1 , java.util.Calendar VAR_2 , int VAR_3 ) { if ( ( VAR_1 == null ) && ( VAR_2 == null ) ) { return new TYPE_1 ( title ) ; } else if ( VAR_3 != 0 ) { return new TYPE_2 ( title , VAR_1 , VAR_2 , VAR_3 ) ; } else if ( VAR_2 == null ) { return new TYPE_3 ( title , VAR_1 ) ; } else { return new TYPE_4 ( title , VAR_1 , VAR_2 ) ; } }\n"}
{"problem": "public static java.lang.Boolean METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { if ( ( VAR_2 ) >= INT_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { return true ; } } else { return true ; } } return false ; }\n", "fixed": "public static java.lang.Boolean METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { if ( ( VAR_2 ) >= INT_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { return true ; } } else { return false ; } } return false ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 , VAR_1 ) ; VAR_4 = VAR_1 . METHOD_4 ( VAR_5 ) ; if ( ! ( VAR_6 ) ) VAR_4 . METHOD_5 ( false ) ; return true ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 , VAR_1 ) ; VAR_4 = VAR_1 . METHOD_4 ( VAR_5 ) ; if ( ! ( VAR_6 ) ) VAR_4 . METHOD_5 ( false ) ; else VAR_4 . METHOD_5 ( true ) ; return true ; }\n"}
{"name": "SHORTEST_PATHS.java", "problem": "final static int INF = 99999; public static Map<String, Integer> shortest_paths(String source, Map<List<String>,Integer> weight_by_edge) { Map<String,Integer> weight_by_node = new HashMap<String,Integer>(); for (List<String> edge : weight_by_edge.keySet()) { weight_by_node.put(edge.get(1), INF); weight_by_node.put(edge.get(0), INF); } weight_by_node.put(source, 0); for (int i = 0; i < weight_by_node.size(); i++) { for (List<String> edge : weight_by_edge.keySet()) { int update_weight = Math.min( weight_by_node.get(edge.get(0)) + weight_by_edge.get(edge), weight_by_node.get(edge.get(1))); weight_by_edge.put(edge, update_weight); } } return weight_by_node; } public static Map<String, Integer> shortest_paths(Node source, List<WeightedEdge> weight_by_edge) { Map<String,Integer> weight_by_node = new HashMap<String,Integer>(); for (WeightedEdge edge : weight_by_edge) { weight_by_node.put(edge.node1.toString(), INF); weight_by_node.put(edge.node2.toString(), INF); } weight_by_node.put(source.getValue(), 0); for (int i = 0; i < weight_by_node.size(); i++) { for (WeightedEdge edge : weight_by_edge) { int update_weight = Math.min( weight_by_node.get(edge.node1.toString()) + edge.weight, weight_by_node.get(edge.node2.toString())); edge.weight = update_weight; } } return weight_by_node; } }", "fixed": "final static int INF = 99999; public static Map<String, Integer> shortest_paths(String source, Map<List<String>,Integer> weight_by_edge) { Map<String,Integer> weight_by_node = new HashMap<String,Integer>(); for (List<String> edge : weight_by_edge.keySet()) { weight_by_node.put(edge.get(1), INF); weight_by_node.put(edge.get(0), INF); } weight_by_node.put(source, 0); for (int i = 0; i < weight_by_node.size(); i++) { for (List<String> edge : weight_by_edge.keySet()) { int update_weight = Math.min( weight_by_node.get(edge.get(0)) + weight_by_edge.get(edge), weight_by_node.get(edge.get(1))); weight_by_node.put(edge.get(1), update_weight); } } return weight_by_node; } }", "hint": "Minimum-Weight Paths\nbellman-ford\nBellman-Ford algorithm implementation", "input": ["witch", "sandwich"], "output": "2"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "    * Process smart name processing - removes unused classes and does referencing\n    * starting with minimum set of names.\n    */\n  private final PassFactory smartNamePass2 =\n       new PassFactory(\"smartNamePass\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "fixed": "    * Process smart name processing - removes unused classes and does referencing\n    * starting with minimum set of names.\n    */\n  final PassFactory smartNamePass2 =\n       new PassFactory(\"smartNamePass\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf", "projectName": "yusuke.twitter4j", "bugType": "Change Identifier Used", "problem": "      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n        return Status.constructStatuses(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }", "fixed": "      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }", "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"favorites.json\",new PostParameter[0],true))", "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"favorites.json\",new PostParameter[0],true))"}
{"problem": "public void METHOD_1 ( int VAR_1 , int VAR_2 , float VAR_3 ) throws TYPE_1 , TYPE_2 , TYPE_3 { this . METHOD_2 ( VAR_1 , VAR_3 ) ; this . METHOD_3 ( VAR_2 , VAR_3 ) ; java.lang.System.out.println ( STRING_1 ) ; try { VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; } catch ( TYPE_4 VAR_5 ) { throw new TYPE_3 ( ) ; } }\n", "fixed": "public void METHOD_1 ( int VAR_1 , int VAR_2 , float VAR_3 ) throws TYPE_1 , TYPE_2 , TYPE_3 { this . METHOD_2 ( VAR_1 , VAR_3 ) ; this . METHOD_3 ( VAR_2 , VAR_3 ) ; java.lang.System.out.println ( STRING_1 ) ; try { VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; } catch ( TYPE_4 VAR_5 ) { throw new TYPE_3 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 < TYPE_2 > > VAR_1 = TYPE_3 . METHOD_2 ( java.util.Arrays.asList ( new java.lang.Object [ ] { STRING_1 , 1 } , new java.lang.Object [ ] { STRING_2 , 1 } ) , java.util.Arrays.asList ( new java.lang.Object [ ] { STRING_1 , INT_1 } , new java.lang.Object [ ] { STRING_2 , INT_1 } ) ) ; TYPE_2 VAR_2 = METHOD_3 ( INT_1 , 0 , INT_2 , VAR_1 ) ; METHOD_4 ( VAR_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 < TYPE_2 > > VAR_1 = TYPE_3 . METHOD_2 ( java.util.Arrays.asList ( new java.lang.Object [ ] { STRING_1 , 1 } , new java.lang.Object [ ] { STRING_2 , 1 } ) , java.util.Arrays.asList ( new java.lang.Object [ ] { STRING_1 , INT_1 } , new java.lang.Object [ ] { STRING_2 , INT_1 } ) ) ; TYPE_2 VAR_2 = METHOD_3 ( INT_1 , null , VAR_1 ) ; METHOD_4 ( VAR_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 ) ; }\n"}
{"problem": "public boolean METHOD_1 ( java.lang.String VAR_1 ) { try { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; return VAR_2 . METHOD_3 ( ) ; } catch ( TYPE_2 VAR_4 ) { VAR_4 . METHOD_4 ( ) ; } assert false ; return false ; }\n", "fixed": "public boolean METHOD_1 ( java.lang.String VAR_1 ) { try { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; return VAR_2 . METHOD_3 ( ) ; } catch ( TYPE_2 VAR_4 ) { VAR_4 . METHOD_4 ( ) ; } return false ; }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; VAR_2 . METHOD_3 ( STRING_2 ) ; VAR_2 . METHOD_4 ( STRING_3 , ( ( long ) ( 0 ) ) ) ; VAR_2 . METHOD_4 ( STRING_4 , 1 ) ; METHOD_1 ( VAR_2 ) ; }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; VAR_2 . METHOD_3 ( STRING_2 ) ; VAR_2 . METHOD_4 ( STRING_3 , ( ( long ) ( - 1 ) ) ) ; VAR_2 . METHOD_4 ( STRING_4 , 1 ) ; METHOD_1 ( VAR_2 ) ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( java.util.ArrayList < java.lang.String > info , java.lang.Object name ) { java.lang.String VAR_1 = name . toString ( ) ; java.lang.String VAR_2 = null ; for ( int i = 0 ; i < ( info . size ( ) ) ; i ++ ) { if ( info . get ( i ) . equals ( VAR_1 ) ) { VAR_2 = info . get ( ( i + INT_1 ) ) ; } } return VAR_2 ; }\n", "fixed": "public java.lang.String METHOD_1 ( java.util.ArrayList < java.lang.String > info , java.lang.String VAR_1 ) { java.lang.String VAR_2 = null ; for ( int i = 0 ; i < ( info . size ( ) ) ; i ++ ) { if ( info . get ( i ) . equals ( VAR_1 ) ) { VAR_2 = info . get ( ( i + INT_1 ) ) ; } } return VAR_2 ; }\n"}
{"fixCommitSHA1": "0ffdc3246d1bd202e6cef4b486ffb4e9257b0311", "projectName": "hazelcast.hazelcast", "bugType": "Wrong Function Name", "problem": "         if (target == this) {\n             task.run();\n         } else {\n            target.addTask(task);\n         }\n     }", "fixed": "         if (target == this) {\n             task.run();\n         } else {\n            target.addTaskAndWakeup(task);\n         }\n     }", "sourceBeforeFix": "target.addTask(task)", "sourceAfterFix": "target.addTaskAndWakeup(task)"}
{"fixCommitSHA1": "8a8b7de760a33c8195e287975d5b4a337d71b1fa", "projectName": "apache.hbase", "bugType": "Change Unary Operator\t", "problem": "    */\n   public boolean isRetainDeleteMarkers() {\n     return (this.retainDeleteMarkers != null) ? this.retainDeleteMarkers.booleanValue()\n        : isAllFiles();\n   }\n   @Override", "fixed": "    */\n   public boolean isRetainDeleteMarkers() {\n     return (this.retainDeleteMarkers != null) ? this.retainDeleteMarkers.booleanValue()\n        : !isAllFiles();\n   }\n   @Override", "sourceBeforeFix": "isAllFiles()", "sourceAfterFix": "!isAllFiles()"}
{"problem": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 message = new TYPE_1 ( ) ; VAR_2 = ( ( java.lang.String ) ( VAR_1 . get ( STRING_1 ) ) ) ; VAR_3 = ( ( java.lang.String ) ( VAR_1 . get ( STRING_2 ) ) ) ; VAR_4 = ( ( java.lang.Integer ) ( VAR_1 . get ( STRING_3 ) ) ) ; return message ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 message = new TYPE_1 ( ) ; VAR_2 = ( ( java.lang.String ) ( VAR_1 . get ( STRING_1 ) ) ) ; VAR_3 = ( ( java.lang.String ) ( VAR_1 . get ( STRING_2 ) ) ) ; VAR_4 = getInt ( VAR_1 , STRING_3 ) ; return message ; }\n"}
{"problem": "private void METHOD_1 ( java.lang.Object VAR_1 , java.lang.String ... VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( this . VAR_4 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ) ; for ( java.lang.String VAR_5 : VAR_2 ) { if ( VAR_5 . equals ( VAR_3 . METHOD_3 ( ) . get ( 0 ) . METHOD_4 ( ) ) ) { return ; } } TYPE_2 . fail ( ( ( STRING_1 + ( VAR_3 . METHOD_3 ( ) . get ( 0 ) . METHOD_4 ( ) ) ) + STRING_2 ) ) ; }\n", "fixed": "private void METHOD_1 ( java.lang.Object VAR_1 , java.lang.String ... VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( this . VAR_4 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ) ; for ( java.lang.String VAR_5 : VAR_2 ) { if ( VAR_5 . equals ( VAR_3 . METHOD_3 ( ) . get ( 0 ) . METHOD_4 ( ) ) ) { return ; } } fail ( ( ( STRING_1 + ( VAR_3 . METHOD_3 ( ) . get ( 0 ) . METHOD_4 ( ) ) ) + STRING_2 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , java.util.Set < TYPE_2 > VAR_2 ) throws TYPE_3 { TYPE_1 VAR_3 = VAR_4 . get ( VAR_1 . METHOD_2 ( ) ) ; if ( ( VAR_3 == null ) || ( ! ( VAR_3 . METHOD_3 ( ) ) ) ) { for ( TYPE_2 n : VAR_2 ) { this . METHOD_4 ( n , VAR_1 ) ; } VAR_1 . METHOD_5 ( ) ; VAR_4 . put ( VAR_1 . METHOD_2 ( ) , VAR_1 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , java.util.Set < TYPE_2 > VAR_2 ) throws TYPE_3 { TYPE_1 VAR_3 = VAR_4 . get ( VAR_1 . METHOD_2 ( ) ) ; if ( ( VAR_3 == null ) || ( ! ( VAR_3 . METHOD_3 ( ) ) ) ) { VAR_4 . put ( VAR_1 . METHOD_2 ( ) , VAR_1 ) ; for ( TYPE_2 n : VAR_2 ) { this . METHOD_4 ( n , VAR_1 ) ; } VAR_1 . METHOD_5 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { return ; } if ( METHOD_2 ( ) ) { VAR_3 . METHOD_3 ( ) . setValue ( new TYPE_2 ( VAR_4 , VAR_2 , VAR_5 , VAR_6 . METHOD_4 ( ) , VAR_6 . METHOD_5 ( ) ) ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( METHOD_2 ( ) ) { VAR_3 . METHOD_3 ( ) . setValue ( new TYPE_2 ( VAR_4 , ( ( VAR_2 ) == null ? - 1.0 : VAR_2 ) , VAR_5 , VAR_6 . METHOD_4 ( ) , VAR_6 . METHOD_5 ( ) ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ( ( java.lang.String ) ( VAR_3 . METHOD_2 ( ) ) ) ; VAR_4 . setText ( STRING_1 ) ; if ( ! ( VAR_2 . equals ( STRING_1 ) ) ) { VAR_5 = true ; } else { VAR_6 . setText ( STRING_2 ) ; VAR_4 . setText ( STRING_1 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ( ( java.lang.String ) ( VAR_3 . METHOD_2 ( ) ) ) ; VAR_6 . setText ( STRING_1 ) ; VAR_4 . setText ( STRING_1 ) ; if ( ! ( VAR_2 . equals ( STRING_1 ) ) ) { VAR_5 = true ; } else { VAR_6 . setText ( STRING_2 ) ; VAR_4 . setText ( STRING_1 ) ; } }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { switch ( VAR_1 ) { case VAR_3 : switch ( VAR_2 ) { case VAR_4 : TYPE_1 . i ( VAR_5 , STRING_1 ) ; break ; case VAR_6 : TYPE_1 . i ( VAR_5 , STRING_2 ) ; VAR_7 = false ; break ; } break ; } }\n", "fixed": "public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { super . METHOD_1 ( VAR_1 , VAR_2 , data ) ; switch ( VAR_1 ) { case VAR_3 : switch ( VAR_2 ) { case VAR_4 : TYPE_1 . i ( VAR_5 , STRING_1 ) ; break ; case VAR_6 : TYPE_1 . i ( VAR_5 , STRING_2 ) ; VAR_7 = false ; break ; } break ; } }\n"}
{"problem": "public void METHOD_1 ( ) { for ( int VAR_1 = 0 ; VAR_1 <= ( ( rows ) / INT_1 ) ; VAR_1 ++ ) { for ( int c = 0 ; c <= ( ( rows ) / INT_1 ) ; c ++ ) { boolean VAR_2 = METHOD_2 ( VAR_1 , c , 1 ) ; if ( VAR_2 ) return ; this . METHOD_3 ( ) ; } } }\n", "fixed": "public void METHOD_1 ( ) { this . METHOD_3 ( ) ; for ( int VAR_1 = 0 ; VAR_1 <= ( ( rows ) / INT_1 ) ; VAR_1 ++ ) { for ( int c = 0 ; c <= ( ( rows ) / INT_1 ) ; c ++ ) { boolean VAR_2 = METHOD_2 ( VAR_1 , c , 1 ) ; if ( VAR_2 ) return ; this . METHOD_3 ( ) ; } } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 state ) { VAR_1 . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_1 ) ; do { if ( ( METHOD_3 ( state ) ) != ( state . METHOD_4 ( ) ) ) { state . METHOD_5 ( METHOD_3 ( state ) ) ; java.lang.System.out.println ( STRING_1 ) ; } else { java.lang.System.out.println ( ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; state . METHOD_5 ( VAR_2 ) ; } } while ( ! ( METHOD_6 ( state ) ) ) ; VAR_1 . METHOD_7 ( VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 state ) { VAR_1 . METHOD_2 ( ) ; do { java.lang.System.out.println ( ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; state . METHOD_5 ( VAR_2 ) ; } while ( ! ( METHOD_6 ( state ) ) ) ; VAR_1 . METHOD_7 ( VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 event ) { VAR_1 = event . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( event . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; VAR_2 . METHOD_6 ( ) ; if ( TYPE_2 . METHOD_7 ( STRING_1 ) ) TYPE_3 . METHOD_1 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 event ) { VAR_1 = event . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( event . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; if ( TYPE_2 . METHOD_7 ( STRING_1 ) ) TYPE_3 . METHOD_1 ( ) ; VAR_2 . METHOD_6 ( ) ; }\n"}
{"fixCommitSHA1": "6cc0fdc67c2c6f12131ed252473d3c7d77d90cb5", "projectName": "gephi.gephi", "bugType": "Wrong Function Name", "problem": "         }\n         if (model == null) {\n            model = new EdgeDataTableModel(graph.getEdges().toArray(), columns.toArray(new EdgeDataColumn[0]));\n             table.setModel(model);\n         } else {\n            model.setEdges(graph.getEdges().toArray());\n             model.setColumns(columns.toArray(new EdgeDataColumn[0]));\n         }", "fixed": "         }\n         if (model == null) {\n            model = new EdgeDataTableModel(graph.getEdgesAndMetaEdges().toArray(), columns.toArray(new EdgeDataColumn[0]));\n             table.setModel(model);\n         } else {\n            model.setEdges(graph.getEdgesAndMetaEdges().toArray());\n             model.setColumns(columns.toArray(new EdgeDataColumn[0]));\n         }", "sourceBeforeFix": "graph.getEdges()", "sourceAfterFix": "graph.getEdgesAndMetaEdges()"}
{"problem": "private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; for ( int i = 0 ; i < ( ( VAR_2 ) - INT_1 ) ; i ++ ) { if ( ( ( VAR_3 [ i ] ) == ( ( byte ) ( INT_2 ) ) ) && ( ( VAR_3 [ ( i + 1 ) ] ) == ( ( byte ) ( INT_3 ) ) ) ) { VAR_1 . add ( i ) ; } } }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; for ( int i = 0 ; i < ( ( VAR_2 ) - INT_1 ) ; i ++ ) { if ( ( VAR_3 [ i ] ) == ( ( byte ) ( INT_2 ) ) ) { VAR_1 . add ( i ) ; } } }\n"}
{"problem": "private float METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_1 == ( VAR_3 ) ) { return VAR_4 ; } if ( VAR_1 == ( VAR_5 ) ) { return VAR_6 ; } if ( VAR_1 == ( VAR_7 ) ) { return VAR_8 ; } if ( VAR_1 == ( VAR_9 ) ) { return VAR_10 ; } return 0 ; }\n", "fixed": "public float METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_1 == ( VAR_3 ) ) { return VAR_4 ; } if ( VAR_1 == ( VAR_5 ) ) { return VAR_6 ; } if ( VAR_1 == ( VAR_7 ) ) { return VAR_8 ; } if ( VAR_1 == ( VAR_9 ) ) { return VAR_10 ; } return 0 ; }\n"}
{"fixCommitSHA1": "1daccd54d2ff2ecdb21d8c60268600c37febbb70", "projectName": "Alluxio.alluxio", "bugType": "Change Identifier Used", "problem": "       if (mWrite) {\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n          String filePath = FILE_NAME + (mWorkerId + BASE_FILE_NUMBER);\n           OutputStream os = mHdfsFs.create(new Path(filePath));\n           for (int k = 0; k < BLOCKS_PER_FILE; k ++) {\n            mBuf.array()[0] = (byte) (k + mWorkerId);\n             os.write(mBuf.array());\n           }\n           os.close();", "fixed": "       if (mWrite) {\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n          String filePath = FILE_NAME + (times + BASE_FILE_NUMBER);\n           OutputStream os = mHdfsFs.create(new Path(filePath));\n           for (int k = 0; k < BLOCKS_PER_FILE; k ++) {\n            mBuf.putInt(0, k + mWorkerId);\n             os.write(mBuf.array());\n           }\n           os.close();", "sourceBeforeFix": "mWorkerId + BASE_FILE_NUMBER", "sourceAfterFix": "times + BASE_FILE_NUMBER"}
{"fixCommitSHA1": "780e4a27f74b52de0a0fff72c71d0006c60a2165", "projectName": "druid-io.druid", "bugType": "Change Numeric Literal", "problem": "         )\n     );\n    Assert.assertTrue(\"Operation must complete within 100ms\", queryNotifyLatch.await(100, TimeUnit.MILLISECONDS));\n     Assert.assertEquals(1, factory.getSegmentReferences().size());", "fixed": "         )\n     );\n    queryNotifyLatch.await(1000, TimeUnit.MILLISECONDS);\n     Assert.assertEquals(1, factory.getSegmentReferences().size());", "sourceBeforeFix": "waitLatch.await(25,TimeUnit.MILLISECONDS)", "sourceAfterFix": "waitLatch.await(1000,TimeUnit.MILLISECONDS)"}
{"problem": "private synchronized void METHOD_1 ( ) throws TYPE_1 { try { if ( ( file ) == null ) { if ( ( VAR_1 ) <= 0 ) { throw new TYPE_2 ( STRING_1 ) ; } file = METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 = file . size ( ) ; } } catch ( java.lang.Exception VAR_3 ) { throw new TYPE_3 ( VAR_3 . METHOD_4 ( ) , VAR_3 ) ; } }\n", "fixed": "public synchronized void METHOD_1 ( ) throws TYPE_1 { try { if ( ( file ) == null ) { if ( ( VAR_1 ) <= 0 ) { throw new TYPE_2 ( STRING_1 ) ; } file = METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 = file . size ( ) ; } } catch ( java.lang.Exception VAR_3 ) { throw new TYPE_3 ( VAR_3 . METHOD_4 ( ) , VAR_3 ) ; } }\n"}
{"fixCommitSHA1": "ef11886bf2190370a0f3fd287616763826239c48", "projectName": "openmrs.openmrs-core", "bugType": "Wrong Function Name", "problem": " \t\tVector<RelationshipListItem> ret = new Vector<RelationshipListItem>();\r\n \t\tList<Relationship> rels = Context.getPersonService()\r\n\t\t        .getRelationships(Context.getPersonService().getPerson(personId));\r\n \t\tfor (Relationship rel : rels) {\r\n \t\t\tif (!rel.isVoided()\r\n \t\t\t        && (relationshipTypeId == null || rel.getRelationshipType().getRelationshipTypeId().equals(\r", "fixed": " \t\tVector<RelationshipListItem> ret = new Vector<RelationshipListItem>();\r\n \t\tList<Relationship> rels = Context.getPersonService()\r\n\t\t        .getRelationshipsByPerson(Context.getPersonService().getPerson(personId));\r\n \t\tfor (Relationship rel : rels) {\r\n \t\t\tif (!rel.isVoided()\r\n \t\t\t        && (relationshipTypeId == null || rel.getRelationshipType().getRelationshipTypeId().equals(\r", "sourceBeforeFix": "Context.getPersonService().getRelationships(Context.getPersonService().getPerson(personId))", "sourceAfterFix": "Context.getPersonService().getRelationshipsByPerson(Context.getPersonService().getPerson(personId))"}
{"problem": "public void METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { VAR_2 . METHOD_2 ( ) ; } else { int counter = ( ( ( VAR_1 ) % ( VAR_3 ) ) == 0 ) ? ( VAR_1 ) / ( VAR_3 ) : ( ( VAR_1 ) / ( VAR_3 ) ) + 1 ; for ( int i = 1 ; i <= counter ; i ++ ) { VAR_2 . add ( i ) ; } } }\n", "fixed": "public void METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { VAR_2 . METHOD_2 ( ) ; } else { int counter = ( ( ( VAR_1 ) % ( VAR_3 ) ) == 0 ) ? ( VAR_1 ) / ( VAR_3 ) : ( ( VAR_1 ) / ( VAR_3 ) ) + 1 ; VAR_2 = new java.util.ArrayList ( ) ; for ( int i = 1 ; i <= counter ; i ++ ) { VAR_2 . add ( i ) ; } } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = - 1 ; main . METHOD_3 ( ) . METHOD_4 ( true ) ; main . METHOD_3 ( ) . METHOD_5 ( true ) ; main . METHOD_3 ( ) . METHOD_6 ( STRING_1 ) ; main . METHOD_3 ( ) . METHOD_7 ( STRING_2 ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = - 1 ; main . METHOD_3 ( ) . METHOD_6 ( STRING_1 ) ; main . METHOD_3 ( ) . METHOD_7 ( STRING_2 ) ; main . METHOD_3 ( ) . METHOD_4 ( true ) ; main . METHOD_3 ( ) . METHOD_5 ( true ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 message ) { if ( this . VAR_1 . METHOD_2 ( VAR_2 ) ) { TYPE_2 VAR_3 = this . VAR_1 . get ( VAR_2 ) ; VAR_3 . position = message . start ; METHOD_3 ( STRING_1 ) ; this . METHOD_4 ( VAR_3 ) ; } else { this . split ( message ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 message ) { if ( this . VAR_1 . METHOD_2 ( VAR_2 ) ) { TYPE_2 VAR_3 = this . VAR_1 . get ( VAR_2 ) ; VAR_3 . position = message . start ; METHOD_3 ( STRING_1 ) ; this . VAR_1 . remove ( VAR_2 ) ; this . METHOD_4 ( VAR_3 ) ; } else { this . split ( message ) ; } }\n"}
{"fixCommitSHA1": "364ae9baf3824dc4e0e56b2b681f8302731e8cdd", "projectName": "apache.hive", "bugType": "Same Function More Args", "problem": "         ret = getMS().updateTableColumnStatistics(colStats);\n         return ret;\n       } finally {\n        endFunction(\"write_column_statistics: \", ret != false);\n       }\n     }", "fixed": "         ret = getMS().updateTableColumnStatistics(colStats);\n         return ret;\n       } finally {\n        endFunction(\"write_column_statistics: \", ret != false, null);\n       }\n     }", "sourceBeforeFix": "endFunction(\"get_column_statistics_by_table: \",statsObj != null)", "sourceAfterFix": "endFunction(\"get_column_statistics_by_table: \",statsObj != null,null)"}
{"problem": "public void METHOD_1 ( ) throws java.io.IOException { java.lang.System.out.println ( STRING_1 ) ; java.lang.String VAR_1 = STRING_2 ; TYPE_1 VAR_2 = new TYPE_2 ( VAR_1 ) ; java.util.List < java.lang.String > VAR_3 = java.util.Arrays.asList ( STRING_3 , STRING_4 , STRING_5 , STRING_6 ) ; java.lang.System.out.println ( ( STRING_7 + VAR_1 ) ) ; TYPE_3 VAR_4 = new TYPE_3 ( STRING_8 ) ; TYPE_4 VAR_5 = TYPE_5 . METHOD_2 ( VAR_2 , VAR_4 ) ; TYPE_5 . METHOD_3 ( VAR_5 , VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.io.IOException { java.lang.System.out.println ( STRING_1 ) ; java.lang.String VAR_1 = STRING_2 ; TYPE_1 VAR_2 = new TYPE_2 ( VAR_1 ) ; java.util.List < java.lang.String > VAR_3 = java.util.Arrays.asList ( STRING_3 , STRING_4 , STRING_6 ) ; java.lang.System.out.println ( ( STRING_7 + VAR_1 ) ) ; TYPE_3 VAR_4 = new TYPE_3 ( STRING_8 ) ; TYPE_4 VAR_5 = TYPE_5 . METHOD_2 ( VAR_2 , VAR_4 ) ; TYPE_5 . METHOD_3 ( VAR_5 , VAR_3 ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( short VAR_1 , short VAR_2 , short [ ] data ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( data ) ; return METHOD_5 ( \"0\" , new java.lang.Object [ ] { VAR_1 , METHOD_6 ( ) , VAR_2 , data } , METHOD_7 ( ) ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( short VAR_1 , short VAR_2 , short [ ] data ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( data ) ; return METHOD_5 ( \"0\" , new java.lang.Object [ ] { VAR_1 , VAR_2 , METHOD_6 ( ) , data } , METHOD_7 ( ) ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , TYPE_2 . METHOD_2 ( VAR_3 , INT_1 ) ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( false ) ; METHOD_5 ( VAR_4 ) ; VAR_5 = new android.widget.LinearLayout ( VAR_3 ) ; TYPE_1 VAR_6 = new TYPE_1 ( VAR_7 , TYPE_2 . METHOD_2 ( VAR_3 , INT_1 ) ) ; VAR_5 . METHOD_6 ( VAR_8 ) ; VAR_5 . METHOD_7 ( VAR_9 ) ; VAR_5 . METHOD_8 ( VAR_10 ) ; METHOD_9 ( VAR_5 , VAR_6 ) ; }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_7 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( false ) ; METHOD_5 ( VAR_4 ) ; VAR_5 = new android.widget.LinearLayout ( VAR_3 ) ; TYPE_1 VAR_6 = new TYPE_1 ( VAR_7 , TYPE_2 . METHOD_2 ( VAR_3 , INT_1 ) ) ; VAR_5 . METHOD_6 ( VAR_8 ) ; VAR_5 . METHOD_7 ( VAR_9 ) ; VAR_5 . METHOD_8 ( VAR_10 ) ; METHOD_9 ( VAR_5 , VAR_6 ) ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( java.io.File VAR_1 ) { TYPE_2 . file = VAR_1 ; java.lang.String [ ] VAR_2 = TYPE_3 . METHOD_2 ( TYPE_2 . file ) ; VAR_3 = VAR_2 [ 1 ] ; VAR_4 = VAR_2 [ INT_1 ] ; return new TYPE_2 ( ) ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.io.File VAR_1 ) { TYPE_2 . file = VAR_1 ; java.lang.String [ ] VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 != null ) { VAR_3 = VAR_2 [ 1 ] ; VAR_4 = VAR_2 [ INT_1 ] ; } return new TYPE_2 ( ) ; }\n"}
{"fixCommitSHA1": "74d3742b6e39c174111d3b0a6177c25b93f9c926", "projectName": "apache.flink", "bugType": "Change Identifier Used", "problem": " \t * \n \t * @return The closed DataStream\n \t */\n\tpublic DataStream<OUT> writeAsText(String path, int batchSize) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), batchSize, null);\n \t}", "fixed": " \t * \n \t * @return The closed DataStream\n \t */\n\tpublic DataStreamSink<OUT> writeAsText(String path, int batchSize) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), batchSize, null);\n \t}", "sourceBeforeFix": "DataStream<OUT>", "sourceAfterFix": "DataStreamSink<OUT>"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; if ( id == ( VAR_1 ) ) { } else if ( id == ( VAR_2 ) ) { } else if ( id == ( VAR_3 ) ) { android.content.Intent intent = new android.content.Intent ( METHOD_3 ( ) , VAR_4 class ) ; METHOD_4 ( intent ) ; } TYPE_2 VAR_5 = ( ( TYPE_2 ) ( METHOD_5 ( VAR_6 ) ) ) ; VAR_5 . METHOD_6 ( VAR_7 ) ; return true ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; if ( id == ( VAR_1 ) ) { } else if ( id == ( VAR_2 ) ) { } TYPE_2 VAR_5 = ( ( TYPE_2 ) ( METHOD_5 ( VAR_6 ) ) ) ; VAR_5 . METHOD_6 ( VAR_7 ) ; return true ; }\n"}
{"problem": "public void start ( ) { VAR_1 = TYPE_1 . METHOD_1 ( ) ; METHOD_2 ( true ) ; try { METHOD_3 ( java.lang.Long.parseLong ( TYPE_2 . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ) ) ; } catch ( java.lang.Exception VAR_3 ) { METHOD_3 ( VAR_4 ) ; } }\n", "fixed": "public void start ( ) { VAR_1 = TYPE_1 . METHOD_1 ( ) ; METHOD_2 ( true ) ; try { METHOD_3 ( java.lang.Long.parseLong ( TYPE_2 . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ) , true ) ; } catch ( java.lang.Exception VAR_3 ) { METHOD_3 ( VAR_4 , true ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( ) ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_2 . start ( ) ; VAR_2 . METHOD_4 ( STRING_1 , INT_1 ) ; VAR_2 . METHOD_4 ( STRING_2 , INT_2 ) ; VAR_2 . execute ( ) ; assertEquals ( 0 , VAR_2 . METHOD_5 ( STRING_1 ) . getValue ( ) , 0 ) ; assertEquals ( INT_3 , VAR_2 . METHOD_5 ( STRING_2 ) . getValue ( ) , 0 ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( ) ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_2 . start ( ) ; VAR_2 . METHOD_4 ( STRING_1 , INT_2 ) ; VAR_2 . METHOD_4 ( STRING_2 , INT_1 ) ; VAR_2 . execute ( ) ; assertEquals ( 0 , VAR_2 . METHOD_5 ( STRING_1 ) . getValue ( ) , 0 ) ; assertEquals ( INT_3 , VAR_2 . METHOD_5 ( STRING_2 ) . getValue ( ) , 0 ) ; }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , TYPE_4 VAR_4 ) throws TYPE_5 , java.io.IOException , TYPE_6 { TYPE_7 VAR_5 = new TYPE_7 ( VAR_1 , VAR_2 , VAR_4 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_12 , VAR_13 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; VAR_5 . start ( ) ; }\n", "fixed": "public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , TYPE_4 VAR_4 ) throws TYPE_5 , java.io.IOException , TYPE_6 { TYPE_7 VAR_5 = new TYPE_7 ( VAR_1 , VAR_2 , VAR_4 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_12 , VAR_13 ) ; VAR_1 . METHOD_2 ( VAR_5 , true ) ; VAR_5 . start ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 . getSelection ( ) ) ; if ( VAR_2 . getSelection ( ) ) { METHOD_3 ( false ) ; VAR_3 . METHOD_4 ( false ) ; METHOD_5 ( false ) ; VAR_4 . METHOD_4 ( false ) ; } else if ( ( ! ( VAR_3 . getSelection ( ) ) ) && ( ! ( VAR_4 . getSelection ( ) ) ) ) { METHOD_2 ( true ) ; VAR_2 . METHOD_4 ( true ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_5 ( VAR_4 . getSelection ( ) ) ; if ( VAR_4 . getSelection ( ) ) { METHOD_3 ( false ) ; VAR_3 . METHOD_4 ( false ) ; METHOD_2 ( false ) ; VAR_2 . METHOD_4 ( false ) ; } else { if ( ! ( VAR_3 . getSelection ( ) ) ) { METHOD_2 ( true ) ; VAR_2 . METHOD_4 ( true ) ; } } }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface AdvancedBeanValidatorEndpointBuilder\n             extends\n                 EndpointProducerBuilder {\n         default BeanValidatorEndpointBuilder basic() {", "fixed": "     \n    public interface AdvancedBeanValidatorEndpointBuilder\n             extends\n                 EndpointProducerBuilder {\n         default BeanValidatorEndpointBuilder basic() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_1 . getId ( ) ) == null ) || ( VAR_1 . getId ( ) . isEmpty ( ) ) ) throw new TYPE_2 ( ) ; this . VAR_2 . add ( VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_1 . getId ( ) ) == null ) || ( VAR_1 . getId ( ) . isEmpty ( ) ) ) throw new TYPE_2 ( ) ; if ( ( VAR_2 ) == null ) this . VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; this . VAR_2 . add ( VAR_1 ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 . add ( VAR_2 ) ; VAR_1 . add ( VAR_3 ) ; VAR_1 . add ( VAR_4 ) ; VAR_1 . add ( VAR_5 ) ; VAR_1 . add ( VAR_6 ) ; VAR_1 . add ( VAR_7 ) ; VAR_1 . add ( VAR_8 ) ; VAR_1 . add ( VAR_9 ) ; VAR_1 . add ( VAR_10 ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 . add ( VAR_2 ) ; VAR_1 . add ( VAR_3 ) ; VAR_1 . add ( VAR_4 ) ; VAR_1 . add ( VAR_5 ) ; VAR_1 . add ( VAR_6 ) ; VAR_1 . add ( VAR_7 ) ; VAR_1 . add ( VAR_8 ) ; VAR_1 . add ( VAR_9 ) ; }\n"}
{"fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "projectName": "libgdx.libgdx", "bugType": "Wrong Function Name", "problem": " \t}\r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n\t\tGL20.glUniform1(location, v);\r\n \t}\r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \tpublic void glUniform2f (int location, float x, float y) {\r", "fixed": " \t}\r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \tpublic void glUniform2f (int location, float x, float y) {\r", "sourceBeforeFix": "GL20.glGetVertexAttrib(index,pname,params)", "sourceAfterFix": "GL20.glGetVertexAttribfv(index,pname,params)"}
{"problem": "public TYPE_1 add ( TYPE_1 VAR_1 ) { int VAR_2 = TYPE_2 . METHOD_1 ( VAR_3 , n ) ; int VAR_4 = ( ( VAR_3 ) / VAR_2 ) * ( VAR_5 ) ; int VAR_6 = ( ( n ) * ( VAR_4 / ( VAR_3 ) ) ) + ( ( VAR_1 . n ) * ( VAR_4 / ( VAR_5 ) ) ) ; TYPE_1 VAR_7 = new TYPE_1 ( VAR_6 , VAR_4 ) ; return VAR_7 . METHOD_2 ( ) ; }\n", "fixed": "public TYPE_1 add ( TYPE_1 VAR_1 ) { int VAR_2 = TYPE_2 . METHOD_1 ( VAR_3 , VAR_5 ) ; int VAR_4 = ( ( VAR_3 ) / VAR_2 ) * ( VAR_5 ) ; int VAR_6 = ( ( n ) * ( VAR_4 / ( VAR_3 ) ) ) + ( ( VAR_1 . n ) * ( VAR_4 / ( VAR_5 ) ) ) ; TYPE_1 VAR_7 = new TYPE_1 ( VAR_6 , VAR_4 ) ; return VAR_7 . METHOD_2 ( ) ; }\n"}
{"problem": "public java.lang.String toString ( ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( ) ; int i = 1 ; for ( TYPE_1 < TYPE_2 , TYPE_3 > VAR_2 : VAR_3 ) { if ( VAR_2 == null ) { java.lang.System.out.println ( i ) ; i ++ ; continue ; } VAR_1 . append ( VAR_2 . toString ( ) ) ; } return VAR_1 . toString ( ) ; }\n", "fixed": "public java.lang.String toString ( ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( ) ; for ( TYPE_1 < TYPE_2 , TYPE_3 > VAR_2 : VAR_3 ) { if ( VAR_2 == null ) { continue ; } VAR_1 . append ( VAR_2 . toString ( ) ) ; } return VAR_1 . toString ( ) ; }\n"}
{"problem": "private static TYPE_1 METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 < 0 ) || ( VAR_1 >= INT_1 ) ) { VAR_1 = 1 ; } int n = ( VAR_1 - 1 ) + ( TYPE_2 . METHOD_2 ( ) ) ; return TYPE_1 . values ( ) [ n ] ; }\n", "fixed": "private static TYPE_1 METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 < 0 ) || ( VAR_1 > INT_1 ) ) { VAR_1 = 1 ; } int n = ( VAR_1 - 1 ) + ( TYPE_2 . METHOD_2 ( ) ) ; return TYPE_1 . values ( ) [ n ] ; }\n"}
{"problem": "private boolean METHOD_1 ( java.lang.String value ) { for ( int i = 0 ; i < ( VAR_1 . METHOD_2 ( ) ) ; i ++ ) { TYPE_1 item = ( ( TYPE_1 ) ( VAR_1 . METHOD_3 ( i ) ) ) ; if ( value . equals ( item . METHOD_4 ( ) ) ) { VAR_1 . METHOD_5 ( i ) ; METHOD_6 ( ) ; return true ; } } return false ; }\n", "fixed": "private boolean METHOD_1 ( java.lang.String value ) { for ( int i = 0 ; i < ( VAR_1 . METHOD_2 ( ) ) ; i ++ ) { TYPE_1 item = ( ( TYPE_1 ) ( VAR_1 . METHOD_3 ( i ) ) ) ; if ( value . equals ( item . METHOD_4 ( ) ) ) { VAR_1 . METHOD_5 ( i ) ; return true ; } } return false ; }\n"}
{"problem": "public boolean equals ( java.lang.Object obj ) { if ( obj == ( this ) ) { return true ; } if ( obj == null ) { return false ; } if ( obj instanceof TYPE_1 ) { TYPE_1 node = ( ( TYPE_1 ) ( obj ) ) ; if ( ( start ) != ( node . METHOD_1 ( ) ) ) { return false ; } if ( ( end ) == ( node . METHOD_2 ( ) ) ) { return false ; } return true ; } return false ; }\n", "fixed": "public boolean equals ( java.lang.Object obj ) { if ( obj == ( this ) ) { return true ; } if ( obj == null ) { return false ; } if ( obj instanceof TYPE_1 ) { TYPE_1 node = ( ( TYPE_1 ) ( obj ) ) ; if ( ( start ) != ( node . METHOD_1 ( ) ) ) { return false ; } if ( ( end ) != ( node . METHOD_2 ( ) ) ) { return false ; } return true ; } return false ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { java.lang.String VAR_3 = STRING_1 ; for ( int i = 0 ; i < VAR_2 ; i ++ ) { int VAR_4 = METHOD_2 ( names . size ( ) ) ; int VAR_5 = METHOD_3 ( ) ; VAR_3 = names . get ( VAR_4 ) . get ( VAR_5 ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; names . remove ( VAR_4 ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { java.lang.String VAR_3 = STRING_1 ; for ( int i = 0 ; i < VAR_2 ; i ++ ) { int VAR_4 = METHOD_2 ( names . size ( ) ) ; VAR_3 = names . get ( VAR_4 ) . get ( 0 ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; names . remove ( VAR_4 ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 result , long VAR_2 , long VAR_3 ) { METHOD_2 ( this ) ; if ( result . METHOD_3 ( ) ) { VAR_4 . METHOD_4 ( new java.lang.Exception ( result ) ) ; } VAR_4 . METHOD_5 ( java.util.Arrays.asList ( VAR_2 , VAR_3 ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 result , long VAR_2 , long VAR_3 ) { METHOD_2 ( this ) ; if ( result . METHOD_3 ( ) ) { VAR_4 . METHOD_4 ( new java.lang.Exception ( result ) ) ; return ; } VAR_4 . METHOD_5 ( java.util.Arrays.asList ( VAR_2 , VAR_3 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ( ( VAR_2 . METHOD_3 ( ) . x ) + INT_1 ) , VAR_3 . METHOD_3 ( ) . y ) ; VAR_3 . METHOD_4 ( ) ; if ( ( VAR_2 . METHOD_3 ( ) . x ) == ( VAR_3 . METHOD_3 ( ) . x ) ) { ( ( TYPE_2 ) ( VAR_1 . METHOD_5 ( ) ) ) . METHOD_6 ( ) ; VAR_2 . METHOD_7 ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ( ( VAR_2 . METHOD_3 ( ) . x ) + 1 ) , VAR_3 . METHOD_3 ( ) . y ) ; VAR_3 . METHOD_4 ( ) ; if ( ( VAR_2 . METHOD_3 ( ) . x ) == ( VAR_3 . METHOD_3 ( ) . x ) ) { ( ( TYPE_2 ) ( VAR_1 . METHOD_5 ( ) ) ) . METHOD_6 ( ) ; VAR_2 . METHOD_7 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 event ) { if ( ( event . METHOD_2 ( ) ) || ( ( event . METHOD_3 ( ) . size ( ) ) == 0 ) ) { return ; } TYPE_2 VAR_1 = this . VAR_2 . METHOD_4 ( ) . METHOD_5 ( event . METHOD_3 ( ) . get ( 0 ) . METHOD_6 ( ) ) ; event . METHOD_7 ( this . METHOD_8 ( VAR_1 , event . METHOD_9 ( ) ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 event ) { if ( ( event . METHOD_2 ( ) ) || ( ( event . METHOD_3 ( ) . size ( ) ) == 0 ) ) { return ; } TYPE_2 VAR_1 = this . VAR_2 . METHOD_4 ( ) . METHOD_5 ( event . METHOD_3 ( ) . get ( 0 ) . METHOD_6 ( ) ) ; if ( this . METHOD_8 ( VAR_1 , event . METHOD_9 ( ) ) ) { event . METHOD_7 ( true ) ; } }\n"}
{"problem": "public void METHOD_1 ( java.util.Collection < java.io.File > VAR_1 , TYPE_1 VAR_2 ) throws java.io.IOException { for ( java.io.File file : VAR_1 ) { TYPE_2 VAR_3 = new TYPE_2 ( new java.io.FileReader ( file ) , new TYPE_3 ( file ) ) ; try ( TYPE_4 writer = new TYPE_5 ( VAR_2 , VAR_4 ) ) { VAR_3 . METHOD_2 ( writer , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 ) ; } } }\n", "fixed": "public void METHOD_1 ( java.util.Collection < java.io.File > VAR_1 , TYPE_1 VAR_2 ) throws java.io.IOException { try ( TYPE_4 writer = new TYPE_5 ( VAR_2 , VAR_4 ) ) { for ( java.io.File file : VAR_1 ) { TYPE_2 VAR_3 = new TYPE_2 ( new java.io.FileReader ( file ) , new TYPE_3 ( file ) ) ; VAR_3 . METHOD_2 ( writer , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 ) ; } } }\n"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n     String invalidRolloutPlan(Set<String> groups);\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n     String invalidRolloutPlan(Set<String> groups);\n     /**", "sourceBeforeFix": "id=15860", "sourceAfterFix": "id=10860"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory rewriteFunctionExpressions =\n       new PassFactory(\"rewriteFunctionExpressions\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory rewriteFunctionExpressions =\n       new PassFactory(\"rewriteFunctionExpressions\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "private void METHOD_1 ( int VAR_1 , final int VAR_2 , final int VAR_3 ) { TYPE_1 VAR_4 = new TYPE_1 ( ) { public void METHOD_2 ( ) { METHOD_3 ( VAR_2 , VAR_3 ) ; } } ; VAR_5 . METHOD_4 ( VAR_4 , TYPE_2 . METHOD_5 ( VAR_1 ) ) ; }\n", "fixed": "private void METHOD_1 ( int VAR_1 , final int VAR_2 , final int VAR_3 ) { if ( VAR_1 > 0 ) { TYPE_1 VAR_4 = new TYPE_1 ( ) { public void METHOD_2 ( ) { METHOD_3 ( VAR_2 , VAR_3 ) ; } } ; VAR_5 . METHOD_4 ( VAR_4 , TYPE_2 . METHOD_5 ( VAR_1 ) ) ; } else METHOD_3 ( VAR_2 , VAR_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 ) instanceof TYPE_2 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; TYPE_3 VAR_3 = VAR_2 . METHOD_2 ( ) ; int VAR_4 = VAR_3 . METHOD_3 ( STRING_1 ) ; if ( VAR_4 != ( - 0 ) ) { VAR_4 -- ; VAR_3 . METHOD_4 ( STRING_1 , VAR_4 ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 ) instanceof TYPE_2 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; TYPE_3 VAR_3 = VAR_2 . METHOD_2 ( ) ; int VAR_4 = VAR_3 . METHOD_3 ( STRING_1 ) ; if ( VAR_4 > 0 ) { VAR_4 -- ; VAR_3 . METHOD_4 ( STRING_1 , VAR_4 ) ; } } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( INT_1 ) ; VAR_2 . METHOD_3 ( ) ; VAR_1 . METHOD_2 ( ( - INT_2 ) ) ; VAR_2 . METHOD_3 ( ) ; TYPE_1 . assertEquals ( ( - 1 ) , VAR_2 . METHOD_4 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( INT_1 ) ; VAR_2 . METHOD_3 ( ) ; VAR_1 . METHOD_2 ( ( - INT_2 ) ) ; VAR_2 . METHOD_3 ( ) ; TYPE_1 . assertEquals ( ( - INT_2 ) , VAR_2 . METHOD_4 ( ) ) ; }\n"}
{"problem": "public static < TYPE_1 > TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String key , java.lang.Class < TYPE_1 > VAR_2 , TYPE_1 VAR_3 ) { java.lang.String str = TYPE_2 . METHOD_2 ( VAR_1 ) . get ( key ) ; if ( TYPE_3 . METHOD_3 ( str ) ) { return VAR_3 ; } return TYPE_4 . METHOD_4 ( str , VAR_2 ) ; }\n", "fixed": "public static < TYPE_1 > TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String key , java.lang.Class < TYPE_1 > VAR_2 , TYPE_1 VAR_3 ) { java.lang.String str = TYPE_2 . get ( VAR_1 , key ) ; if ( TYPE_3 . METHOD_3 ( str ) ) { return VAR_3 ; } return TYPE_4 . METHOD_4 ( str , VAR_2 ) ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   \n  private final PassFactory removeUnreachableCode =\n       new PassFactory(\"removeUnreachableCode\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   \n  final PassFactory removeUnreachableCode =\n       new PassFactory(\"removeUnreachableCode\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "97dc0ab1bd49e5d7644b91bc07c56d759aa84cfa", "projectName": "openmrs.openmrs-core", "bugType": "Change Binary Operator", "problem": " \t */\r\n \t@Override\r\n \tpublic String getName() {\r\n\t\tif (getConcept() != null || getConcept().getName() != null) {\r\n \t\t\treturn getConcept().getName().toString();\r\n \t\t}\r\n \t\treturn null;\r", "fixed": " \t */\r\n \t@Override\r\n \tpublic String getName() {\r\n\t\tif (getConcept() != null && getConcept().getName() != null) {\r\n \t\t\treturn getConcept().getName().toString();\r\n \t\t}\r\n \t\treturn null;\r", "sourceBeforeFix": "getConcept() != null || getConcept().getDescription() != null", "sourceAfterFix": "getConcept() != null && getConcept().getDescription() != null"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 ; java.lang.System.out.println ( ( STRING_1 + VAR_2 ) ) ; if ( VAR_1 . METHOD_2 ( STRING_2 ) ) VAR_3 = VAR_4 . METHOD_3 ( VAR_2 ) ; else VAR_3 = VAR_5 . METHOD_3 ( VAR_2 ) ; TYPE_3 TYPE_4 = new TYPE_3 ( VAR_3 ) ; return TYPE_4 . METHOD_4 ( ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 ; if ( VAR_1 . METHOD_2 ( STRING_2 ) ) VAR_3 = VAR_4 . METHOD_3 ( VAR_2 ) ; else VAR_3 = VAR_5 . METHOD_3 ( VAR_2 ) ; TYPE_3 TYPE_4 = new TYPE_3 ( VAR_3 ) ; return TYPE_4 . METHOD_4 ( ) ; }\n"}
{"fixCommitSHA1": "477de6254ea1c1a70dc62a25e3b7ce4e86b1e142", "projectName": "openmrs.openmrs-core", "bugType": "Delete Throws Exception", "problem": " \t * @should return all global properties in the database\n \t */\n \t@Authorized(PrivilegeConstants.GET_GLOBAL_PROPERTIES)\n\tpublic List<GlobalProperty> getAllGlobalProperties() throws APIException;\n \t/**\n \t * Save the given list of global properties to the database.", "fixed": " \t * @should return all global properties in the database\n \t */\n \t@Authorized(PrivilegeConstants.GET_GLOBAL_PROPERTIES)\n\tpublic List<GlobalProperty> getAllGlobalProperties();\n \t/**\n \t * Save the given list of global properties to the database.", "sourceBeforeFix": "1", "sourceAfterFix": "1"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "     }\n   };\n  private final PassFactory printNameReferenceReport =\n       new PassFactory(\"printNameReferenceReport\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "fixed": "     }\n   };\n  final PassFactory printNameReferenceReport =\n       new PassFactory(\"printNameReferenceReport\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "projectName": "libgdx.libgdx", "bugType": "Wrong Function Name", "problem": " \t}\r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n\t\tGL20.glGetShader(shader, pname, params);\r\n \t}\r\n \tpublic String glGetString (int name) {\r", "fixed": " \t}\r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \tpublic String glGetString (int name) {\r", "sourceBeforeFix": "GL20.glUniform4(location,v)", "sourceAfterFix": "GL20.glUniform4iv(location,v)"}
{"problem": "private void METHOD_1 ( TYPE_1 node ) { java.util.LinkedList < TYPE_1 > VAR_1 = new java.util.LinkedList < TYPE_1 > ( ) ; while ( ( VAR_2 . METHOD_2 ( node ) ) == null ) { node = node . METHOD_3 ( ) ; if ( node == null ) { return ; } VAR_1 . METHOD_4 ( node ) ; } for ( TYPE_1 p : VAR_1 ) { VAR_2 . METHOD_5 ( p , 1 ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 node ) { if ( node != null ) { java.util.LinkedList < TYPE_1 > VAR_1 = new java.util.LinkedList < TYPE_1 > ( ) ; while ( ( VAR_2 . METHOD_2 ( node ) ) == null ) { node = node . METHOD_3 ( ) ; if ( node == null ) { return ; } VAR_1 . METHOD_4 ( node ) ; } for ( TYPE_1 p : VAR_1 ) { VAR_2 . METHOD_5 ( p , 1 ) ; } } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_2 ( ) ; for ( TYPE_2 VAR_3 : VAR_2 ) { if ( ( VAR_3 . METHOD_3 ( ) ) == ( VAR_4 ) ) { VAR_5 . METHOD_4 ( VAR_1 , VAR_6 ) ; } } super . METHOD_1 ( VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_2 ( ) ; for ( TYPE_2 VAR_3 : VAR_2 ) { if ( ( VAR_3 . METHOD_3 ( ) ) == ( VAR_4 ) ) { VAR_5 . METHOD_4 ( VAR_3 , VAR_6 ) ; } } super . METHOD_1 ( VAR_1 ) ; }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface AdvancedKubernetesDeploymentsEndpointBuilder\n             extends\n                 AdvancedKubernetesDeploymentsEndpointConsumerBuilder, AdvancedKubernetesDeploymentsEndpointProducerBuilder {\n         default KubernetesDeploymentsEndpointBuilder basic() {", "fixed": "     \n    public interface AdvancedKubernetesDeploymentsEndpointBuilder\n             extends\n                 AdvancedKubernetesDeploymentsEndpointConsumerBuilder, AdvancedKubernetesDeploymentsEndpointProducerBuilder {\n         default KubernetesDeploymentsEndpointBuilder basic() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "public void METHOD_1 ( ) { final java.lang.Integer VAR_1 = INT_1 ; java.lang.Object VAR_2 = new java.lang.Object ( ) { private java.lang.Integer VAR_3 = VAR_1 ; } ; TYPE_1 VAR_4 = TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_5 = TYPE_3 . METHOD_3 ( VAR_4 ) ; try { VAR_5 . METHOD_4 ( VAR_6 class ) ; } catch ( TYPE_4 VAR_7 ) { TYPE_5 . METHOD_5 ( VAR_7 . METHOD_6 ( ) , STRING_1 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { final java.lang.Integer VAR_1 = INT_1 ; java.lang.Object VAR_2 = new java.lang.Object ( ) { private java.lang.Integer VAR_3 = VAR_1 ; } ; TYPE_1 VAR_4 = TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_5 = TYPE_3 . METHOD_3 ( VAR_4 ) ; try { VAR_5 . METHOD_4 ( VAR_6 class ) ; fail ( ) ; } catch ( TYPE_4 VAR_7 ) { TYPE_5 . METHOD_5 ( VAR_7 . METHOD_6 ( ) , STRING_1 ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; for ( TYPE_1 VAR_3 : VAR_1 . METHOD_3 ( ) ) { VAR_2 . add ( VAR_3 . getValue ( VAR_4 class ) ) ; TYPE_2 . METHOD_4 ( STRING_1 , VAR_2 . get ( ( ( VAR_2 . size ( ) ) - 1 ) ) . METHOD_5 ( ) ) ; } VAR_5 = VAR_2 ; TYPE_3 . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( VAR_5 , this , METHOD_8 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; for ( TYPE_1 VAR_3 : VAR_1 . METHOD_3 ( ) ) { VAR_2 . add ( VAR_3 . getValue ( VAR_4 class ) ) ; } VAR_5 = VAR_2 ; TYPE_3 . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( VAR_5 , this , METHOD_8 ( ) ) ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 path = query . path ( ( STRING_1 + VAR_1 ) ) ; path . METHOD_2 ( ) . get ( ) . METHOD_3 ( new TYPE_3 < java.util.List < TYPE_1 > > ( ) { } ) ; java.util.List < TYPE_1 > VAR_2 = path . METHOD_2 ( ) . get ( ) . METHOD_3 ( new TYPE_3 < java.util.List < TYPE_1 > > ( ) { } ) ; return VAR_2 ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 path = query . path ( ( STRING_1 + VAR_1 ) ) ; java.util.List < TYPE_1 > VAR_2 = path . METHOD_2 ( ) . get ( ) . METHOD_3 ( new TYPE_3 < java.util.List < TYPE_1 > > ( ) { } ) ; return VAR_2 ; }\n"}
{"problem": "public TYPE_1 < java.lang.String > METHOD_1 ( java.lang.String name ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( name ) . METHOD_4 ( ( ) - > new TYPE_2 ( ( ( ( ( STRING_1 + name ) + STRING_2 ) + ( VAR_2 ) ) + STRING_3 ) ) ) ) ; }\n", "fixed": "public TYPE_1 < java.lang.String > METHOD_1 ( java.lang.String name ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( name . toLowerCase ( ) ) . METHOD_4 ( ( ) - > new TYPE_2 ( ( ( ( ( STRING_1 + name ) + STRING_2 ) + ( VAR_2 ) ) + STRING_3 ) ) ) ) ; }\n"}
{"fixCommitSHA1": "3407a44922289dc4ddb3ff87687b8766affeaad9", "projectName": "apache.flink", "bugType": "Change Modifier", "problem": "\tprivate static class SpeedTestProducer extends AbstractInvokable {\n \t\t@Override\n \t\tpublic void invoke() throws Exception {", "fixed": "\t\n\tpublic static class SpeedTestProducer extends AbstractInvokable {\n \t\t@Override\n \t\tpublic void invoke() throws Exception {", "sourceBeforeFix": "10", "sourceAfterFix": "9"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( TYPE_3 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_4 . METHOD_6 ( ) , VAR_4 . METHOD_6 ( ) ) ; METHOD_7 ( VAR_4 . METHOD_6 ( ) , VAR_4 . METHOD_6 ( ) , VAR_4 . METHOD_6 ( ) , VAR_4 . METHOD_6 ( ) , null ) ; METHOD_8 ( java.lang.Integer.parseInt ( getIntent ( ) . METHOD_9 ( STRING_1 ) ) ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( TYPE_3 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_8 ( java.lang.Integer.parseInt ( getIntent ( ) . METHOD_9 ( STRING_1 ) ) ) ; }\n"}
{"problem": "protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { if ( VAR_3 ) { return true ; } else { return ( VAR_1 . getId ( ) ) > 0 ; } } else { return ( VAR_1 instanceof TYPE_2 ) && ( ( ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( ) ) != ( VAR_3 ) ) ; } }\n", "fixed": "protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { if ( VAR_3 ) { return true ; } else { return ( VAR_1 . getId ( ) ) > ( - 1 ) ; } } else { return ( VAR_1 instanceof TYPE_2 ) && ( ( ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( ) ) != ( VAR_3 ) ) ; } }\n"}
{"fixCommitSHA1": "477de6254ea1c1a70dc62a25e3b7ce4e86b1e142", "projectName": "openmrs.openmrs-core", "bugType": "Delete Throws Exception", "problem": " \t * @should fail for an invalid object\n \t * @should throw throw APIException if the input is null\n \t */\n\tpublic void validate(Object object, Errors errors) throws APIException;\n \t/**\n \t * Returns a list of locales used by the user when searching.", "fixed": " \t * @should fail for an invalid object\n \t * @should throw throw APIException if the input is null\n \t */\n\tpublic void validate(Object object, Errors errors);\n \t/**\n \t * Returns a list of locales used by the user when searching.", "sourceBeforeFix": "1", "sourceAfterFix": "1"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Throwable { VAR_2 . info ( STRING_1 , ( VAR_1 + STRING_2 ) , STRING_3 ) ; VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; org.testng.Assert.assertEquals ( 0 , VAR_4 . METHOD_4 ( VAR_1 ) ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Throwable { VAR_2 . info ( STRING_1 , ( VAR_1 + STRING_2 ) , STRING_3 ) ; VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; org.testng.Assert.assertEquals ( 0 , VAR_4 . METHOD_4 ( VAR_1 ) ) ; VAR_3 . METHOD_2 ( ) ; }\n"}
{"problem": "void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ( ( VAR_4 . METHOD_3 ( ) ) + VAR_1 ) , VAR_4 . METHOD_4 ( ) ) ; if ( ( VAR_3 . METHOD_5 ( ) ) != null ) METHOD_6 ( VAR_4 . METHOD_4 ( ) , ( ( VAR_4 . METHOD_4 ( ) ) - VAR_2 ) ) ; }\n", "fixed": "void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ( ( VAR_4 . METHOD_3 ( ) ) + VAR_1 ) , VAR_4 . METHOD_4 ( ) ) ; METHOD_6 ( VAR_4 . METHOD_4 ( ) , ( ( VAR_4 . METHOD_4 ( ) ) - VAR_2 ) ) ; }\n"}
{"problem": "public static java.util.Date METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Date VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_1 ( ) ) ; if ( ( ( VAR_2 == null ) || ( ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . compareTo ( VAR_2 ) ) > 0 ) ) || ( ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_4 ( ) ) . compareTo ( VAR_2 ) ) < 0 ) ) { return null ; } return VAR_2 ; }\n", "fixed": "public static java.util.Date METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_1 ( ) ) == null ) { return null ; } java.util.Date VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_1 ( ) ) ; if ( ( ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . compareTo ( VAR_2 ) ) > 0 ) || ( ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_4 ( ) ) . compareTo ( VAR_2 ) ) < 0 ) ) { return null ; } return VAR_2 ; }\n"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n     String invalidRolloutPlan(ModelNode modelNode, String nodeName);\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n     String invalidRolloutPlan(ModelNode modelNode, String nodeName);\n     /**", "sourceBeforeFix": "id=15854", "sourceAfterFix": "id=10854"}
{"problem": "private void METHOD_1 ( long VAR_1 ) { long diff = VAR_1 - ( VAR_2 . METHOD_2 ( ) ) ; double VAR_3 = diff / ( FLOAT_1 * ( VAR_4 ) ) ; int VAR_5 = ( ( int ) ( TYPE_1 . METHOD_3 ( VAR_3 ) ) ) ; VAR_2 = VAR_2 . METHOD_4 ( ( ( VAR_4 ) * VAR_5 ) ) ; }\n", "fixed": "private void METHOD_1 ( long VAR_1 ) { long diff = VAR_1 - ( VAR_2 . METHOD_2 ( ) ) ; double VAR_3 = diff / ( FLOAT_1 * ( VAR_4 ) ) ; int VAR_5 = ( VAR_3 < 1 ) ? 1 : ( ( int ) ( TYPE_1 . METHOD_3 ( VAR_3 ) ) ) ; VAR_2 = VAR_2 . METHOD_4 ( ( ( VAR_4 ) * VAR_5 ) ) ; }\n"}
{"problem": "private int METHOD_1 ( int VAR_1 ) { int VAR_2 = ( VAR_3 . size ( ) ) + 1 ; int index = METHOD_2 ( ) ; for ( int i = 0 ; i < ( VAR_3 . size ( ) ) ; i ++ ) { index = ( index + VAR_1 ) % VAR_2 ; if ( VAR_3 . METHOD_3 ( index ) ) return index ; } java.lang.System.err.println ( STRING_1 ) ; return - 1 ; }\n", "fixed": "private int METHOD_1 ( int VAR_1 ) { int VAR_2 = ( VAR_3 . size ( ) ) + 1 ; int index = METHOD_2 ( ) ; for ( int i = 0 ; i < ( VAR_3 . size ( ) ) ; i ++ ) { index = ( ( ( index + VAR_1 ) % VAR_2 ) + VAR_2 ) % VAR_2 ; if ( VAR_3 . METHOD_3 ( index ) ) { return index ; } } java.lang.System.err.println ( STRING_1 ) ; return - 1 ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.Set < TYPE_1 > VAR_1 = new java.util.HashSet < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : TYPE_3 . METHOD_2 ( this ) ) { VAR_1 . add ( VAR_2 . METHOD_3 ( ) ) ; } for ( TYPE_4 VAR_3 : METHOD_4 ( ) ) { VAR_1 . METHOD_5 ( ( ( TYPE_5 ) ( VAR_3 ) ) . METHOD_1 ( ) ) ; } return new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.Set < TYPE_1 > VAR_1 = new java.util.HashSet < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : TYPE_3 . METHOD_2 ( this ) ) { VAR_1 . add ( VAR_2 . METHOD_3 ( ) ) ; } for ( TYPE_4 VAR_3 : METHOD_4 ( ) ) { if ( VAR_3 instanceof TYPE_5 ) { VAR_1 . METHOD_5 ( ( ( TYPE_5 ) ( VAR_3 ) ) . METHOD_1 ( ) ) ; } } return new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; }\n"}
{"problem": "public int METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 != null ) { return ( VAR_1 . METHOD_3 ( ) ) * INT_1 ; } else { TYPE_2 VAR_2 = METHOD_4 ( ) ; if ( VAR_2 != null ) { return VAR_2 . METHOD_5 ( ) ; } } return 0 ; }\n", "fixed": "public int METHOD_1 ( ) { TYPE_2 VAR_2 = METHOD_4 ( ) ; if ( VAR_2 != null ) { return VAR_2 . METHOD_5 ( ) ; } else { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 != null ) { return ( VAR_1 . METHOD_3 ( ) ) * INT_1 ; } } return 0 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) . METHOD_6 ( TYPE_2 . METHOD_7 ( VAR_2 . METHOD_8 ( ) , false ) ) ; VAR_1 . METHOD_9 ( ) . setText ( VAR_3 ) ; VAR_1 . METHOD_9 ( ) . METHOD_10 ( TYPE_3 . getColor ( getContext ( ) . METHOD_11 ( ) , VAR_4 ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) . METHOD_6 ( TYPE_2 . METHOD_7 ( VAR_2 . METHOD_8 ( ) , false ) ) ; VAR_1 . METHOD_9 ( ) . METHOD_10 ( TYPE_3 . getColor ( getContext ( ) . METHOD_11 ( ) , VAR_4 ) ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { try { java.lang.Thread . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_1 ( ) ; TYPE_1 . METHOD_3 ( STRING_1 ) ; } catch ( java.lang.Exception VAR_2 ) { ( VAR_3 ) ++ ; } if ( ( VAR_3 ) > INT_2 ) { METHOD_4 ( STRING_2 ) ; java.lang.System.exit ( 1 ) ; } }\n", "fixed": "private void METHOD_1 ( ) { try { java.lang.Thread . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_1 ( ) ; } catch ( java.lang.Exception VAR_2 ) { ( VAR_3 ) ++ ; } if ( ( VAR_3 ) > INT_2 ) { METHOD_4 ( STRING_2 ) ; java.lang.System.exit ( 1 ) ; } }\n"}
{"problem": "private void remove ( int index ) { TYPE_1 VAR_1 = VAR_2 . remove ( index ) ; TYPE_2 item = VAR_3 . remove ( VAR_1 ) ; if ( item != null ) { item . METHOD_1 ( ) ; VAR_4 . remove ( item . getView ( ) . METHOD_2 ( ) ) ; } }\n", "fixed": "private void remove ( int index ) { TYPE_1 VAR_1 = VAR_2 . remove ( index ) ; TYPE_2 item = VAR_3 . remove ( VAR_1 ) ; if ( item != null ) { VAR_4 . remove ( item . getView ( ) . METHOD_2 ( ) ) ; item . METHOD_1 ( ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String path ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; params . put ( STRING_1 , path ) ; params . put ( STRING_2 , VAR_1 ) ; java.lang.String VAR_2 = TYPE_2 . METHOD_2 ( TYPE_3 ) ; params . put ( STRING_3 , VAR_2 ) ; return VAR_3 . METHOD_1 ( params ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String path ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; params . put ( STRING_1 , path ) ; params . put ( STRING_2 , VAR_1 ) ; java.lang.String VAR_2 = TYPE_3 . toString ( ) ; params . put ( STRING_3 , VAR_2 ) ; return VAR_3 . METHOD_1 ( params ) ; }\n"}
{"problem": "private void init ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = ( ( TYPE_1 ) ( METHOD_1 ( VAR_4 ) ) ) ; VAR_5 = ( ( TYPE_1 ) ( METHOD_1 ( VAR_6 ) ) ) ; VAR_7 = ( ( android.widget.Button ) ( METHOD_1 ( VAR_8 ) ) ) ; VAR_7 . METHOD_2 ( this ) ; VAR_9 = ( ( TYPE_2 ) ( METHOD_1 ( VAR_10 ) ) ) ; VAR_9 . METHOD_3 ( VAR_11 ) ; METHOD_4 ( ) ; }\n", "fixed": "private void init ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = ( ( TYPE_1 ) ( METHOD_1 ( VAR_4 ) ) ) ; VAR_5 = ( ( TYPE_1 ) ( METHOD_1 ( VAR_6 ) ) ) ; VAR_7 = ( ( android.widget.Button ) ( METHOD_1 ( VAR_8 ) ) ) ; VAR_7 . METHOD_2 ( this ) ; VAR_9 = ( ( TYPE_2 ) ( METHOD_1 ( VAR_10 ) ) ) ; VAR_9 . METHOD_3 ( VAR_11 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_3 . METHOD_4 ( new TYPE_3 ( ) { public void METHOD_5 ( TYPE_4 < ? > VAR_5 , android.view.View view , int VAR_6 , long id ) { METHOD_6 ( VAR_6 ) ; } } ) ; TYPE_5 VAR_7 = new TYPE_5 ( METHOD_7 ( ) , VAR_8 , VAR_9 ) ; VAR_3 . METHOD_8 ( VAR_7 ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_3 . METHOD_4 ( new TYPE_3 ( ) { public void METHOD_5 ( TYPE_4 < ? > VAR_5 , android.view.View view , int VAR_6 , long id ) { METHOD_6 ( VAR_6 ) ; } } ) ; TYPE_5 VAR_7 = new TYPE_5 ( METHOD_7 ( ) , VAR_8 , VAR_9 ) ; VAR_3 . METHOD_8 ( VAR_7 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , android.view.View view , int position , long id ) { super . METHOD_1 ( VAR_1 , view , position , id ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( VAR_3 . get ( position ) . VAR_4 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , android.view.View view , int position , long id ) { super . METHOD_1 ( VAR_1 , view , position , id ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( VAR_3 . get ( position ) . id ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( int VAR_1 ) { if ( VAR_1 < ( this . VAR_2 . length ( ) ) ) { return VAR_3 ; } java.lang.String VAR_4 = this . METHOD_2 ( this . VAR_2 , ( VAR_1 + ( this . VAR_5 ) ) ) ; return TYPE_1 . METHOD_3 ( VAR_4 ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( int VAR_1 ) { if ( VAR_1 == ( ( this . VAR_2 . length ( ) ) - 1 ) ) { return VAR_3 ; } java.lang.String VAR_4 = this . METHOD_2 ( this . VAR_2 , ( VAR_1 + ( this . VAR_5 ) ) ) ; return TYPE_1 . METHOD_3 ( VAR_4 ) ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , int index ) { TYPE_1 < TYPE_2 > node = VAR_2 ; for ( int i = 0 ; i < index ; i ++ ) { if ( node != null ) { node = VAR_3 ; } else { throw new TYPE_3 ( ) ; } TYPE_1 . METHOD_2 ( node , VAR_1 ) ; } ( size ) ++ ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , int index ) { TYPE_1 < TYPE_2 > node = VAR_2 ; for ( int i = 0 ; i < index ; i ++ ) { if ( node != null ) { node = VAR_3 ; } else { throw new TYPE_3 ( ) ; } } TYPE_1 . METHOD_2 ( node , VAR_1 ) ; ( size ) ++ ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "    * Optimizes unused function arguments, unused return values, and inlines\n    * constant parameters. Also runs RemoveUnusedVars.\n    */\n  private final PassFactory optimizeCallsAndRemoveUnusedVars =\n       new PassFactory(\"optimizeCalls_and_removeUnusedVars\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "    * Optimizes unused function arguments, unused return values, and inlines\n    * constant parameters. Also runs RemoveUnusedVars.\n    */\n  final PassFactory optimizeCallsAndRemoveUnusedVars =\n       new PassFactory(\"optimizeCalls_and_removeUnusedVars\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "protected boolean end ( final java.lang.String VAR_1 , final java.lang.String VAR_2 , final java.lang.String VAR_3 ) throws TYPE_1 { if ( VAR_4 . METHOD_1 ( VAR_2 ) ) { return true ; } else if ( VAR_4 . METHOD_2 ( VAR_2 ) ) { final TYPE_2 node = VAR_5 . get ( VAR_6 . trim ( ) ) ; VAR_7 . METHOD_3 ( ) . METHOD_4 ( node ) ; return true ; } else { return false ; } }\n", "fixed": "protected boolean end ( final java.lang.String VAR_1 , final java.lang.String VAR_2 , final java.lang.String VAR_3 ) throws TYPE_1 { if ( VAR_4 . METHOD_1 ( VAR_2 ) ) { return true ; } else if ( VAR_4 . METHOD_2 ( VAR_2 ) ) { if ( ( ( VAR_6 ) == null ) || ( VAR_5 == null ) ) return true ; final TYPE_2 node = VAR_5 . get ( VAR_6 . trim ( ) ) ; VAR_7 . METHOD_3 ( ) . METHOD_4 ( node ) ; return true ; } else { return false ; } }\n"}
{"name": "MERGESORT.java", "problem": "public static ArrayList<Integer> merge(ArrayList<Integer> left, ArrayList<Integer> right) { ArrayList<Integer> result = new ArrayList<Integer>(100); int i = 0; int j = 0; while (i < left.size() && j < right.size()) { if (left.get(i) <= right.get(j)) { result.add(left.get(i)); i++; } else { result.add(right.get(j)); j++; } } result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size())); return result; } public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) { if (arr.size() == 0) { return arr; } else { int middle = arr.size() / 2; ArrayList<Integer> left = new ArrayList<Integer>(100); left.addAll(arr.subList(0,middle)); left = mergesort(left); ArrayList<Integer> right = new ArrayList<Integer>(100); right.addAll(arr.subList(middle, arr.size())); right = mergesort(right); return merge(left, right); } } }", "fixed": "public static ArrayList<Integer> merge(ArrayList<Integer> left, ArrayList<Integer> right) { ArrayList<Integer> result = new ArrayList<Integer>(100); int i = 0; int j = 0; while (i < left.size() && j < right.size()) { if (left.get(i) <= right.get(j)) { result.add(left.get(i)); i++; } else { result.add(right.get(j)); j++; } } result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size())); return result; } public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) { if (arr.size() <= 1) { return arr; } else { int middle = arr.size() / 2; ArrayList<Integer> left = new ArrayList<Integer>(100); left.addAll(arr.subList(0,middle)); left = mergesort(left); ArrayList<Integer> right = new ArrayList<Integer>(100); right.addAll(arr.subList(middle, arr.size())); right = mergesort(right); return merge(left, right); } } }", "hint": "Merge Sort\nInput:\n    arr: A list of ints", "input": [[1, 2, 6, 72, 7, 33, 4]], "output": [1, 2, 4, 6, 7, 33, 72]}
{"problem": "public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( INT_1 , INT_1 ) ; VAR_1 . METHOD_2 ( true ) ; TYPE_2 VAR_2 = new TYPE_2 ( new TYPE_3 ( ) ) ; VAR_1 . add ( VAR_2 ) ; VAR_2 . METHOD_3 ( INT_2 ) ; VAR_1 . METHOD_2 ( true ) ; }\n", "fixed": "public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( INT_1 , INT_1 ) ; VAR_1 . METHOD_2 ( true ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_2 . METHOD_3 ( INT_2 ) ; VAR_1 . METHOD_2 ( true ) ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( java.util.Date VAR_1 , java.lang.Integer VAR_2 ) { TYPE_2 VAR_3 = METHOD_2 ( ) ; VAR_3 . add ( TYPE_3 . METHOD_3 ( STRING_1 , VAR_1 ) ) . add ( TYPE_3 . METHOD_4 ( STRING_2 , true ) ) . add ( TYPE_3 . METHOD_4 ( STRING_3 , VAR_2 ) ) ; return VAR_3 . list ( ) ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( java.util.Date VAR_1 , java.lang.Integer VAR_2 ) { TYPE_2 VAR_3 = METHOD_2 ( ) ; VAR_3 . add ( TYPE_3 . METHOD_3 ( STRING_1 , VAR_1 ) ) . add ( TYPE_3 . METHOD_4 ( STRING_2 , false ) ) . add ( TYPE_3 . METHOD_4 ( STRING_3 , VAR_2 ) ) ; return VAR_3 . list ( ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( TYPE_1 . METHOD_2 ( getActivity ( ) , VAR_2 ) ) != ( VAR_3 ) ) { METHOD_3 ( new java.lang.String [ ] { VAR_2 } , VAR_4 ) ; } else { METHOD_4 ( ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( TYPE_1 . METHOD_2 ( getActivity ( ) , VAR_2 ) ) == ( VAR_3 ) ) { METHOD_4 ( ) ; } else { METHOD_3 ( new java.lang.String [ ] { VAR_2 } , VAR_4 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) return ; if ( ( open . METHOD_3 ( false , true ) ) && ( VAR_1 . METHOD_3 ( false , true ) ) ) { VAR_2 . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) return ; if ( ( ! ( open . get ( ) ) ) && ( VAR_1 . METHOD_3 ( false , true ) ) ) { VAR_2 . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ; } }\n"}
{"problem": "public void METHOD_1 ( int position ) { VAR_1 = position ; VAR_2 = METHOD_2 ( position ) ; METHOD_3 ( ) ; VAR_3 . setText ( ( ( ( ( STRING_1 + position ) + STRING_2 ) + ( METHOD_4 ( ) ) ) + STRING_3 ) ) ; }\n", "fixed": "public void METHOD_1 ( int position ) { VAR_1 = position ; VAR_2 = METHOD_2 ( position ) ; METHOD_3 ( ) ; VAR_3 . setText ( ( ( ( ( STRING_1 + ( position + 1 ) ) + STRING_2 ) + ( METHOD_4 ( ) ) ) + STRING_3 ) ) ; }\n"}
{"project": "Chart", "bugId": 25, "problem": "else if (lclip <= 0.0) {\n         }\r\n            double valueDelta = dataset.getStdDevValue(row, column).doubleValue();\r\n             double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() \r\n                     + valueDelta, dataArea, yAxisLocation);\r\n             double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() \r", "fixed": "else if (lclip <= 0.0) {\n         }\r\n        Number n = dataset.getStdDevValue(row, column);\r\n        if (n != null) {\r\n            double valueDelta = n.doubleValue();\r\n             double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() \r\n                     + valueDelta, dataArea, yAxisLocation);\r\n             double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() \r", "observations": "", "repairActions": ["assignAdd", "assignExpChange", "condBranIfAdd", "mcAdd", "mcRem", "retBranchAdd", "varAdd"], "repairPatterns": ["condBlockRetAdd", "copyPaste", "missNullCheckN", "missNullCheckP", "wrapsIf", "wrongComp"]}
{"problem": "private void METHOD_1 ( ) { if ( ( ( ( ( ( VAR_1 ) == 0 ) || ( ( VAR_1 ) == 1 ) ) || ( ( VAR_1 ) == INT_1 ) ) || ( ( VAR_1 ) == INT_2 ) ) || ( ( VAR_1 ) == INT_3 ) ) { TYPE_1 . setEnabled ( false ) ; } }\n", "fixed": "private void METHOD_1 ( ) { if ( ( ( ( ( ( VAR_1 ) == 0 ) || ( ( VAR_1 ) == 1 ) ) || ( ( VAR_1 ) == INT_1 ) ) || ( ( VAR_1 ) == INT_2 ) ) || ( ( VAR_1 ) == INT_3 ) ) { TYPE_1 . setEnabled ( false ) ; } else TYPE_1 . setEnabled ( true ) ; }\n"}
{"fixCommitSHA1": "e1d89ddbf6028369fd3117ff648fc6f16a1786fe", "projectName": "apache.camel", "bugType": "Wrong Function Name", "problem": "                     LOG.warn(\"OpenTracing: could not find managed span for exchange=\" + exchange);\n                 }\n             } catch (Throwable t) {\n                LOG.error(\"OpenTracing: Failed to capture tracing data\", t);\n             }\n         }\n     }", "fixed": "                     LOG.warn(\"OpenTracing: could not find managed span for exchange=\" + exchange);\n                 }\n             } catch (Throwable t) {\n                LOG.warn(\"OpenTracing: Failed to capture tracing data\", t);\n             }\n         }\n     }", "sourceBeforeFix": "LOG.error(\"OpenTracing: Failed to capture tracing data\",t)", "sourceAfterFix": "LOG.warn(\"OpenTracing: Failed to capture tracing data\",t)"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) throws TYPE_2 { TYPE_3 VAR_5 = METHOD_2 ( ) ; try { return VAR_5 . METHOD_3 ( VAR_1 , VAR_2 ) ; } catch ( java.lang.Exception VAR_6 ) { throw new TYPE_4 ( VAR_6 . METHOD_4 ( ) ) ; } }\n", "fixed": "public TYPE_1 METHOD_3 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { TYPE_3 VAR_5 = METHOD_2 ( ) ; try { return VAR_5 . METHOD_3 ( VAR_1 , VAR_2 ) ; } catch ( java.lang.Exception VAR_6 ) { throw new TYPE_4 ( VAR_6 . METHOD_4 ( ) ) ; } }\n"}
{"fixCommitSHA1": "39c42c2dc347f1d8b10311c09e436fd4ade63c4c", "projectName": "libgdx.libgdx", "bugType": "Change Caller in Function Call", "problem": " \t\t\tconnection.setDoOutput(doingOutPut);\r\n \t\t\tconnection.setDoInput(true);\r\n \t\t\tconnection.setRequestMethod(method);\r\n\t\t\tconnection.setFollowRedirects(httpRequest.getFollowRedirects());\r\n \t\t\tlock.lock();\r\n \t\t\tconnections.put(httpRequest, connection);\r", "fixed": " \t\t\tconnection.setDoOutput(doingOutPut);\r\n \t\t\tconnection.setDoInput(true);\r\n \t\t\tconnection.setRequestMethod(method);\r\n\t\t\tHttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects());\r\n \t\t\tlock.lock();\r\n \t\t\tconnections.put(httpRequest, connection);\r", "sourceBeforeFix": "connection.setFollowRedirects(httpRequest.getFollowRedirects())", "sourceAfterFix": "HttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects())"}
{"problem": "private boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String path ) { try { java.io.FileOutputStream out = new java.io.FileOutputStream ( path ) ; VAR_1 . METHOD_2 ( VAR_2 , INT_1 , out ) ; out . METHOD_3 ( ) ; } catch ( TYPE_2 VAR_3 ) { return false ; } catch ( java.io.IOException VAR_3 ) { return false ; } return true ; }\n", "fixed": "private boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String path ) { try { java.io.FileOutputStream out = new java.io.FileOutputStream ( path ) ; VAR_1 . METHOD_2 ( VAR_2 , INT_1 , out ) ; out . METHOD_3 ( ) ; out = null ; } catch ( TYPE_2 VAR_3 ) { return false ; } catch ( java.io.IOException VAR_3 ) { return false ; } return true ; }\n"}
{"problem": "private java.util.List < java.lang.String > METHOD_1 ( int VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; java.util.Calendar VAR_3 = java.util.Calendar.getInstance ( ) ; TYPE_1 VAR_4 = new TYPE_1 ( STRING_1 ) ; VAR_3 . set ( VAR_5 , VAR_1 ) ; for ( int i = 0 ; i < INT_1 ; i ++ ) { VAR_3 . set ( VAR_6 , i ) ; VAR_2 . add ( VAR_4 . format ( VAR_3 . getTime ( ) ) ) ; } return VAR_2 ; }\n", "fixed": "public java.util.List < java.lang.String > METHOD_1 ( int VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; java.util.Calendar VAR_3 = java.util.Calendar.getInstance ( ) ; TYPE_1 VAR_4 = new TYPE_1 ( STRING_1 ) ; VAR_3 . set ( VAR_5 , VAR_1 ) ; for ( int i = 0 ; i < INT_1 ; i ++ ) { VAR_3 . set ( VAR_6 , i ) ; VAR_2 . add ( VAR_4 . format ( VAR_3 . getTime ( ) ) ) ; } return VAR_2 ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String type ) throws TYPE_2 { if ( STRING_1 . equals ( type ) ) { return new TYPE_3 ( VAR_1 , VAR_2 , VAR_3 ) ; } else { throw new TYPE_2 ( ( ( STRING_2 + type ) + STRING_3 ) ) ; } }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String type , java.lang.String VAR_3 ) throws TYPE_2 { if ( STRING_1 . equals ( type ) ) { return new TYPE_3 ( VAR_1 , VAR_2 , VAR_3 ) ; } else { throw new TYPE_2 ( ( ( STRING_2 + type ) + STRING_3 ) ) ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 element ) { try { element . METHOD_1 ( ) ; } catch ( TYPE_2 VAR_1 ) { METHOD_2 ( element ) ; try { element . METHOD_1 ( ) ; } catch ( java.lang.Exception VAR_2 ) { METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 element ) { try { element . METHOD_1 ( ) ; } catch ( TYPE_2 VAR_1 ) { METHOD_2 ( element ) ; try { element . METHOD_1 ( ) ; } catch ( java.lang.Exception VAR_2 ) { METHOD_3 ( VAR_2 . METHOD_4 ( ) , VAR_2 ) ; } } }\n"}
{"problem": "public java.util.List < java.lang.Integer > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_1 { java.util.List < java.lang.Integer > VAR_3 = new java.util.LinkedList < java.lang.Integer > ( ) ; if ( VAR_1 . isEmpty ( ) ) { return VAR_3 ; } else { java.lang.String [ ] VAR_4 = VAR_1 . split ( VAR_2 ) ; for ( int i = 0 ; i < ( VAR_4 . length ) ; i ++ ) { int VAR_5 = java.lang.Integer.parseInt ( VAR_4 [ 0 ] ) ; VAR_3 . add ( VAR_5 ) ; } } return VAR_3 ; }\n", "fixed": "public java.util.List < java.lang.Integer > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_1 { java.util.List < java.lang.Integer > VAR_3 = new java.util.LinkedList < java.lang.Integer > ( ) ; if ( VAR_1 . isEmpty ( ) ) { return VAR_3 ; } else { java.lang.String [ ] VAR_4 = VAR_1 . split ( VAR_2 ) ; for ( int i = 0 ; i < ( VAR_4 . length ) ; i ++ ) { int VAR_5 = java.lang.Integer.parseInt ( VAR_4 [ i ] ) ; VAR_3 . add ( VAR_5 ) ; } } return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( this , VAR_1 ) ) { VAR_2 = new java.io.File ( TYPE_2 . METHOD_3 ( ) , ( ( ( TYPE_3 . METHOD_4 ( ) ) + STRING_1 ) + ( VAR_3 ) ) ) ; TYPE_4 . METHOD_5 ( this ) . METHOD_6 ( VAR_2 ) ; } else { TYPE_1 . METHOD_7 ( this , VAR_1 ) ; TYPE_5 . METHOD_8 ( this , VAR_4 , VAR_5 ) . show ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( this , VAR_1 ) ) { VAR_2 = new java.io.File ( TYPE_2 . METHOD_3 ( ) , ( ( ( TYPE_3 . METHOD_4 ( ) ) + STRING_1 ) + ( VAR_3 ) ) ) ; METHOD_6 ( VAR_2 ) ; } else { TYPE_1 . METHOD_7 ( this , VAR_1 ) ; TYPE_5 . METHOD_8 ( this , VAR_4 , VAR_5 ) . show ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; java.util.Vector < TYPE_3 > VAR_2 = TYPE_2 . METHOD_3 ( VAR_1 ) ; TYPE_4 VAR_3 = TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( 0 ) . METHOD_6 ( ) ) ; TYPE_5 VAR_4 = new TYPE_5 ( VAR_3 ) ; TYPE_6 . METHOD_7 ( ( STRING_2 + VAR_4 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; java.util.Vector < TYPE_3 > VAR_2 = TYPE_2 . METHOD_3 ( VAR_1 ) ; TYPE_4 VAR_3 = TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( 0 ) . METHOD_6 ( ) ) ; TYPE_5 VAR_4 = new TYPE_5 ( VAR_3 ) ; java.lang.System.out.println ( ( STRING_2 + VAR_4 ) ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) throws java.io.IOException { TYPE_1 VAR_4 = METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 VAR_5 = METHOD_2 ( ( VAR_1 - 1 ) , VAR_2 ) ; TYPE_1 VAR_6 = VAR_4 . METHOD_3 ( VAR_5 ) ; TYPE_1 VAR_7 = METHOD_4 ( VAR_1 , 0 ) . remove ( 0 ) . METHOD_5 ( ) ; return VAR_7 . add ( VAR_6 . METHOD_6 ( new TYPE_1 ( INT_1 ) ) ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) throws java.io.IOException { TYPE_1 VAR_4 = METHOD_2 ( VAR_1 , ( VAR_2 - 1 ) ) ; TYPE_1 VAR_5 = METHOD_2 ( ( VAR_1 - 1 ) , ( VAR_2 - 1 ) ) ; TYPE_1 VAR_6 = VAR_4 . METHOD_3 ( VAR_5 ) ; TYPE_1 VAR_7 = METHOD_4 ( VAR_1 , 0 ) . remove ( 0 ) . METHOD_5 ( ) ; return VAR_7 . add ( VAR_6 . METHOD_6 ( new TYPE_1 ( VAR_3 ) ) ) ; }\n"}
{"fixCommitSHA1": "609361434c29e231a2d296dcd39e10de8dc50de6", "projectName": "alibaba.fastjson", "bugType": "Same Function More Args", "problem": "     public void test_kr_2() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub1445\uc6d406\uc77c\\\"}\", Entity.class);\n        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));", "fixed": "     public void test_kr_2() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub1445\uc6d406\uc77c\\\"}\", Entity.class);\n        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));", "sourceBeforeFix": "Calendar.getInstance(JSON.defaultLocale)", "sourceAfterFix": "Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale)"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 VAR_2 : VAR_3 ) { if ( VAR_2 . METHOD_2 ( ) . equals ( VAR_1 ) ) { VAR_3 . remove ( VAR_2 ) ; java.lang.System.out.print ( ( ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) + STRING_2 ) + ( VAR_1 . METHOD_4 ( ) ) ) ) ; break ; } } }\n", "fixed": "public static void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 VAR_2 : VAR_3 ) { if ( VAR_2 . METHOD_2 ( ) . equals ( VAR_1 ) ) { VAR_3 . remove ( VAR_2 ) ; java.lang.System.out.println ( VAR_3 . size ( ) ) ; break ; } } }\n"}
{"problem": "public boolean [ ] METHOD_1 ( ) { boolean [ ] VAR_1 = new boolean [ VAR_2 . METHOD_2 ( VAR_3 ) ] ; for ( int VAR_4 = 0 ; VAR_4 < 0 ; VAR_4 ++ ) { VAR_1 [ VAR_4 ] = VAR_2 . METHOD_3 ( new TYPE_1 ( VAR_4 , VAR_3 ) ) . METHOD_4 ( ) ; } return VAR_1 ; }\n", "fixed": "public boolean [ ] METHOD_1 ( ) { boolean [ ] VAR_1 = new boolean [ VAR_2 . METHOD_2 ( VAR_3 ) ] ; for ( int VAR_4 = 0 ; VAR_4 < ( VAR_1 . length ) ; VAR_4 ++ ) { VAR_1 [ VAR_4 ] = VAR_2 . METHOD_3 ( new TYPE_1 ( VAR_4 , VAR_3 ) ) . METHOD_4 ( ) ; } return VAR_1 ; }\n"}
{"problem": "protected void METHOD_1 ( java.lang.String VAR_1 , java.util.Map VAR_2 ) { METHOD_2 ( ) ; for ( java.lang.String className : VAR_3 ) { TYPE_1 VAR_4 = TYPE_2 . METHOD_3 ( ) . METHOD_4 ( className ) ; java.util.List < TYPE_3 > VAR_5 = new java.util.ArrayList < TYPE_3 > ( ) ; VAR_5 . METHOD_5 ( VAR_4 . METHOD_6 ( ) ) ; METHOD_7 ( VAR_4 , VAR_5 ) ; METHOD_8 ( VAR_4 ) ; } java.lang.System.out.println ( STRING_1 ) ; }\n", "fixed": "protected void METHOD_1 ( java.lang.String VAR_1 , java.util.Map VAR_2 ) { METHOD_2 ( ) ; for ( java.lang.String className : VAR_3 ) { TYPE_1 VAR_4 = TYPE_2 . METHOD_3 ( ) . METHOD_4 ( className ) ; java.util.List < TYPE_3 > VAR_5 = new java.util.ArrayList < TYPE_3 > ( ) ; VAR_5 . METHOD_5 ( VAR_4 . METHOD_6 ( ) ) ; METHOD_7 ( VAR_4 , VAR_5 ) ; METHOD_8 ( VAR_4 , VAR_4 ) ; } java.lang.System.out.println ( STRING_1 ) ; }\n"}
{"problem": "private static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.util.List < java.lang.String > VAR_2 ) { TYPE_1 VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; for ( int i = 0 ; i < ( VAR_2 . size ( ) ) ; i ++ ) VAR_3 . METHOD_3 ( i ) . METHOD_4 ( VAR_2 . get ( i ) ) ; return VAR_3 ; }\n", "fixed": "private static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.util.List < java.lang.String > VAR_2 ) { if ( VAR_1 == null ) return null ; TYPE_1 VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; for ( int i = 0 ; i < ( VAR_2 . size ( ) ) ; i ++ ) VAR_3 . METHOD_3 ( i ) . METHOD_4 ( VAR_2 . get ( i ) ) ; return VAR_3 ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   \n  private final PassFactory minimizeExitPoints =\n       new PassFactory(\"minimizeExitPoints\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   \n  final PassFactory minimizeExitPoints =\n       new PassFactory(\"minimizeExitPoints\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "b330578175d6cc317cbfea7caf4fab521d66ffaf", "projectName": "hazelcast.hazelcast", "bugType": "Change Modifier", "problem": "         }\n     }\n    private class BlockingCallback implements AuthenticationCallback {\n         private final CountDownLatch countDownLatch = new CountDownLatch(1);\n         private Connection connection;", "fixed": "         }\n     }\n    private static class BlockingCallback implements AuthenticationCallback {\n         private final CountDownLatch countDownLatch = new CountDownLatch(1);\n         private Connection connection;", "sourceBeforeFix": "2", "sourceAfterFix": "10"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { final TYPE_2 VAR_2 = new TYPE_2 ( this ) ; VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( new TYPE_3 ( ) { public void METHOD_5 ( TYPE_4 VAR_4 ) { TYPE_5 . METHOD_6 ( STRING_1 ) ; } } ) ; VAR_2 . show ( ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { final TYPE_2 VAR_2 = new TYPE_2 ( this ) ; VAR_2 . METHOD_4 ( new TYPE_3 ( ) { public void METHOD_5 ( TYPE_4 VAR_4 ) { TYPE_5 . METHOD_6 ( STRING_1 ) ; } } ) ; VAR_2 . show ( ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_2 VAR_3 = VAR_4 [ VAR_2 ] [ VAR_1 ] ; float VAR_5 = ( VAR_6 ) / INT_1 ; return new TYPE_1 ( ( ( VAR_3 . x ) - VAR_5 ) , ( ( VAR_3 . y ) - VAR_5 ) , ( ( VAR_3 . x ) + VAR_5 ) , ( ( VAR_3 . y ) + VAR_5 ) ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_2 VAR_3 = VAR_4 [ VAR_2 ] [ VAR_1 ] ; float VAR_5 = ( VAR_6 ) / INT_1 ; return new TYPE_1 ( ( ( VAR_3 . x ) - VAR_5 ) , ( ( VAR_3 . y ) - VAR_5 ) , VAR_6 , VAR_6 ) ; }\n"}
{"fixCommitSHA1": "d222fc981c938bd3543ee61f22422d20efcdcd94", "projectName": "apache.camel", "bugType": "Change Numeric Literal", "problem": "         String uri = getScpUri() + \"?username=admin&password=admin&chmod=640&knownHostsFile=\" + getKnownHostsFile();\n         template.sendBodyAndHeader(uri, \"Bonjour Monde\", Exchange.FILE_NAME, \"monde.txt\");\n        Thread.sleep(500);\n         File file = new File(getScpPath() + \"/monde.txt\");\n         assertFileExists(file.getAbsolutePath());", "fixed": "         String uri = getScpUri() + \"?username=admin&password=admin&chmod=640&knownHostsFile=\" + getKnownHostsFile();\n         template.sendBodyAndHeader(uri, \"Bonjour Monde\", Exchange.FILE_NAME, \"monde.txt\");\n        Thread.sleep(800);\n         File file = new File(getScpPath() + \"/monde.txt\");\n         assertFileExists(file.getAbsolutePath());", "sourceBeforeFix": "Thread.sleep(500)", "sourceAfterFix": "Thread.sleep(800)"}
{"problem": "public static int [ ] METHOD_1 ( int VAR_1 ) { int [ ] VAR_2 = new int [ VAR_1 ] ; VAR_2 [ 0 ] = 0 ; VAR_2 [ 1 ] = 1 ; for ( int i = INT_1 ; i < VAR_1 ; i ++ ) { VAR_2 [ i ] = ( VAR_2 [ ( i - INT_1 ) ] ) + ( VAR_2 [ ( i - 1 ) ] ) ; } return VAR_2 ; }\n", "fixed": "public static int [ ] METHOD_1 ( int VAR_1 ) { int [ ] VAR_2 = new int [ VAR_1 ] ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { if ( i >= INT_1 ) VAR_2 [ i ] = ( VAR_2 [ ( i - INT_1 ) ] ) + ( VAR_2 [ ( i - 1 ) ] ) ; else VAR_2 [ i ] = i ; } return VAR_2 ; }\n"}
{"fixCommitSHA1": "292df7f0b637a17c8a6a78b2cf9dbb483bbeb4da", "projectName": "hazelcast.hazelcast", "bugType": "Wrong Function Name", "problem": "             }\n         }\n         if (isStatisticsEnabled()) {\n            statistics.addGetTimeNano(System.nanoTime() - start);\n         }\n         CacheEntryProcessorEntry entry = new CacheEntryProcessorEntry(key, record, this, now);\n         final Object process = entryProcessor.process(entry, arguments);", "fixed": "             }\n         }\n         if (isStatisticsEnabled()) {\n            statistics.addGetTimeNanos(System.nanoTime() - start);\n         }\n         CacheEntryProcessorEntry entry = new CacheEntryProcessorEntry(key, record, this, now);\n         final Object process = entryProcessor.process(entry, arguments);", "sourceBeforeFix": "statistics.addPutTimeNano(System.nanoTime() - start)", "sourceAfterFix": "statistics.addPutTimeNanos(System.nanoTime() - start)"}
{"problem": "public boolean METHOD_1 ( ) { if ( ( ( ( VAR_1 [ 0 ] ) != ( VAR_2 ) ) != null ) && ( ! ( name . equals ( STRING_1 ) ) ) ) { METHOD_2 ( ( ++ ( VAR_3 ) ) ) ; return true ; } else return false ; }\n", "fixed": "public boolean METHOD_1 ( ) { if ( ( ( ( ( VAR_1 [ 0 ] ) != 0.0 ) && ( ( VAR_1 [ 1 ] ) != 0.0 ) ) && ( ( VAR_2 ) != null ) ) && ( ! ( name . equals ( STRING_1 ) ) ) ) { METHOD_2 ( ( ++ ( VAR_3 ) ) ) ; return true ; } else return false ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory closureCheckGetCssName =\n       new PassFactory(\"checkMissingGetCssName\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory closureCheckGetCssName =\n       new PassFactory(\"checkMissingGetCssName\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public void METHOD_1 ( int VAR_1 , int height ) { if ( ( VAR_2 ) instanceof TYPE_1 ) { TYPE_2 VAR_3 = VAR_2 . METHOD_2 ( ) ; if ( VAR_3 instanceof TYPE_3 ) { VAR_3 . METHOD_3 ( ) ; ( ( TYPE_3 ) ( VAR_3 ) ) . METHOD_1 ( VAR_1 , height ) ; } } }\n", "fixed": "public void METHOD_1 ( int VAR_1 , int height ) { TYPE_2 VAR_3 = VAR_2 . METHOD_2 ( ) ; if ( VAR_3 instanceof TYPE_3 ) { VAR_3 . METHOD_3 ( ) ; ( ( TYPE_3 ) ( VAR_3 ) ) . METHOD_1 ( VAR_1 , height ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; int VAR_2 = VAR_3 . METHOD_2 ( ) . size ( ) ; VAR_3 . delete ( VAR_1 ) ; TYPE_1 < TYPE_2 > VAR_4 = VAR_3 . METHOD_3 ( VAR_1 ) ; int VAR_5 = VAR_3 . METHOD_2 ( ) . size ( ) ; TYPE_3 . METHOD_4 ( STRING_2 , VAR_4 . METHOD_5 ( ) ) ; TYPE_3 . assertEquals ( STRING_3 , ( VAR_2 - 1 ) , VAR_5 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; int VAR_2 = VAR_3 . METHOD_2 ( ) . size ( ) ; VAR_3 . delete ( VAR_1 ) ; TYPE_1 < TYPE_2 > VAR_4 = VAR_3 . METHOD_3 ( VAR_1 ) ; int VAR_5 = VAR_3 . METHOD_2 ( ) . size ( ) ; METHOD_4 ( STRING_2 , VAR_4 . METHOD_5 ( ) ) ; assertEquals ( STRING_3 , ( VAR_2 - 1 ) , VAR_5 ) ; }\n"}
{"fixCommitSHA1": "e04cbbf23e9273cca31b1cc12142e34fae753542", "projectName": "checkstyle.checkstyle", "bugType": "Change Modifier", "problem": "          * @param scope the scope counter to get the value of\n          * @return the value of a scope counter\n          */\n        int value(Scope scope) {\n             final Integer value = counts.get(scope);\n             if (value == null) {", "fixed": "          * @param scope the scope counter to get the value of\n          * @return the value of a scope counter\n          */\n        private int value(Scope scope) {\n             final Integer value = counts.get(scope);\n             if (value == null) {", "sourceBeforeFix": "0", "sourceAfterFix": "2"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , long time ) { TYPE_2 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 == null ) { return ; } VAR_2 . METHOD_1 ( time ) ; try { VAR_4 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 , VAR_2 ) ; } catch ( TYPE_3 VAR_5 ) { TYPE_4 . METHOD_5 ( this . getClass ( ) . getName ( ) , VAR_5 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , long time ) { TYPE_2 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 == null ) { return ; } VAR_2 . METHOD_1 ( time ) ; try { VAR_4 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 , VAR_2 ) ; } catch ( TYPE_3 VAR_5 ) { TYPE_4 . METHOD_5 ( this . getClass ( ) . getName ( ) , VAR_5 ) ; } finally { VAR_3 . remove ( VAR_1 ) ; } }\n"}
{"problem": "private void METHOD_1 ( java.util.List < TYPE_1 > list , TYPE_2 VAR_1 ) { if ( VAR_1 != null ) { for ( java.util.Iterator < TYPE_1 > VAR_2 = list . iterator ( ) ; VAR_2 . METHOD_2 ( ) ; ) { TYPE_3 VAR_3 = VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; if ( ( VAR_3 != null ) && ( VAR_3 . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ) ) VAR_2 . remove ( ) ; } } }\n", "fixed": "private void METHOD_1 ( java.util.List < TYPE_1 > list , TYPE_2 VAR_1 ) { if ( VAR_1 != null ) { for ( java.util.Iterator < TYPE_1 > VAR_2 = list . iterator ( ) ; VAR_2 . METHOD_2 ( ) ; ) { TYPE_3 VAR_3 = VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; if ( ( VAR_3 != null ) && ( ! ( VAR_3 . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ) ) ) VAR_2 . remove ( ) ; } } }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   \n  private final PassFactory extractPrototypeMemberDeclarations =\n       new PassFactory(\"extractPrototypeMemberDeclarations\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   \n  final PassFactory extractPrototypeMemberDeclarations =\n       new PassFactory(\"extractPrototypeMemberDeclarations\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ) - > { VAR_1 . METHOD_3 ( 1 ) ; VAR_2 . update ( VAR_3 ) ; } ) ; ( VAR_4 ) ++ ; VAR_5 = ( VAR_4 ) < ( VAR_6 ) ; if ( ! ( VAR_5 ) ) { VAR_7 . METHOD_4 ( ) ; VAR_4 = 0 ; TYPE_1 . METHOD_2 ( ( ) - > { VAR_2 . update ( VAR_8 ) ; } ) ; } }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ) - > { VAR_1 . METHOD_3 ( 1 ) ; VAR_2 . update ( VAR_3 ) ; } ) ; ( VAR_4 ) ++ ; VAR_5 = ( VAR_5 ) && ( ( VAR_4 ) < ( VAR_6 ) ) ; if ( ! ( VAR_5 ) ) { VAR_7 . METHOD_4 ( ) ; VAR_4 = 0 ; TYPE_1 . METHOD_2 ( ( ) - > { VAR_2 . update ( VAR_8 ) ; } ) ; } }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final HotSwapPassFactory checkVariableReferences =\n       new HotSwapPassFactory(\"checkVariableReferences\", true) {\n     @Override\n     protected HotSwapCompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final HotSwapPassFactory checkVariableReferences =\n       new HotSwapPassFactory(\"checkVariableReferences\", true) {\n     @Override\n     protected HotSwapCompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public static java.lang.String getConfig ( java.lang.String key ) { java.lang.Object VAR_1 ; if ( ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_1 ( key ) ) ) { VAR_1 = VAR_2 . METHOD_2 ( key ) ; } else { VAR_1 = VAR_3 . METHOD_2 ( key ) ; } if ( VAR_1 instanceof java.lang.String ) { return ( ( java.lang.String ) ( VAR_1 ) ) ; } return java.lang.String . METHOD_3 ( STRING_1 , VAR_3 . METHOD_4 ( key ) ) ; }\n", "fixed": "public static java.lang.String getConfig ( java.lang.String key ) { java.lang.Object VAR_1 ; if ( ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_1 ( key ) ) ) { VAR_1 = VAR_2 . METHOD_2 ( key ) ; } else { VAR_1 = VAR_3 . METHOD_2 ( key ) ; } if ( VAR_1 instanceof java.lang.String ) { return ( ( java.lang.String ) ( VAR_1 ) ) ; } return java.lang.String . METHOD_3 ( STRING_1 , ( ( java.util.List < java.lang.String > ) ( VAR_1 ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( new TYPE_2 ( VAR_2 ) , new TYPE_2 ( VAR_3 , 1 , ( ( short ) ( INT_1 ) ) ) . getData ( ) ) ; TYPE_1 VAR_4 = new TYPE_1 ( TYPE_3 . METHOD_2 ( ) , TYPE_3 . METHOD_3 ( ) . getData ( ) ) ; VAR_5 . METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; VAR_5 . METHOD_4 ( ) . METHOD_5 ( VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( new TYPE_2 ( VAR_2 ) , new TYPE_2 ( VAR_3 , 1 , ( ( short ) ( INT_1 ) ) ) . getData ( ) ) ; VAR_5 . METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; }\n"}
{"problem": "protected TYPE_1 METHOD_1 ( java.lang.String ... params ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.String data = new TYPE_2 ( ) . METHOD_2 ( params [ 0 ] ) ; java.lang.System.out.println ( ( ( STRING_1 + data ) + STRING_2 ) ) ; try { VAR_1 = TYPE_3 . METHOD_3 ( data ) ; VAR_2 = new TYPE_2 ( ) . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ; } catch ( TYPE_4 VAR_4 ) { VAR_4 . METHOD_6 ( ) ; } return VAR_1 ; }\n", "fixed": "protected TYPE_1 METHOD_1 ( java.lang.String ... params ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.String data = new TYPE_2 ( ) . METHOD_2 ( params [ 0 ] ) ; try { VAR_1 = TYPE_3 . METHOD_3 ( data ) ; VAR_2 = new TYPE_2 ( ) . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ; } catch ( TYPE_4 VAR_4 ) { VAR_4 . METHOD_6 ( ) ; } return VAR_1 ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( final java.lang.Object [ ] VAR_1 ) { java.lang.String VAR_2 = new java.lang.String ( ) ; if ( VAR_1 != null ) { for ( final java.lang.Object obj : VAR_1 ) { VAR_2 += obj + STRING_1 ; } VAR_2 = VAR_2 . replaceAll ( STRING_2 , STRING_3 ) ; } return VAR_2 ; }\n", "fixed": "private java.lang.String METHOD_1 ( final java.lang.Object [ ] VAR_1 ) { java.lang.String VAR_2 = new java.lang.String ( ) ; if ( VAR_1 != null ) { for ( final java.lang.Object obj : VAR_1 ) { VAR_2 += obj + STRING_1 ; } VAR_2 = VAR_2 . replaceAll ( STRING_2 , STRING_3 ) ; } return VAR_2 ; }\n"}
{"problem": "public boolean METHOD_1 ( ) { if ( ( ( ( ( ( VAR_1 ) != null ) && ( METHOD_2 ( ) ) ) && ( METHOD_3 ( ) ) ) && ( METHOD_4 ( ) ) ) && ( ( VAR_2 ) == ( VAR_3 ) ) ) { return true ; } TYPE_1 . i ( VAR_4 , ( STRING_1 + ( VAR_5 ) ) ) ; return false ; }\n", "fixed": "public boolean METHOD_1 ( ) { if ( ( ( ( ( VAR_1 ) != null ) && ( METHOD_2 ( ) ) ) && ( METHOD_3 ( ) ) ) && ( METHOD_4 ( ) ) ) { return true ; } TYPE_1 . i ( VAR_4 , ( STRING_1 + ( VAR_5 ) ) ) ; return false ; }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface AdvancedMQTTEndpointBuilder\n             extends\n                 AdvancedMQTTEndpointConsumerBuilder, AdvancedMQTTEndpointProducerBuilder {\n         default MQTTEndpointBuilder basic() {", "fixed": "     \n    public interface AdvancedMQTTEndpointBuilder\n             extends\n                 AdvancedMQTTEndpointConsumerBuilder, AdvancedMQTTEndpointProducerBuilder {\n         default MQTTEndpointBuilder basic() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "public void METHOD_1 ( long VAR_1 ) { this . VAR_2 += VAR_1 ; for ( TYPE_1 VAR_3 : VAR_4 ) { if ( ( ( VAR_3 . METHOD_2 ( ) ) >= ( this . VAR_2 ) ) && ( ( this . VAR_5 ) < ( VAR_3 . METHOD_3 ( ) ) ) ) { this . VAR_5 = ( ( int ) ( VAR_3 . METHOD_3 ( ) ) ) ; } } }\n", "fixed": "public void METHOD_1 ( long VAR_1 ) { this . VAR_2 += VAR_1 ; for ( TYPE_1 VAR_3 : VAR_4 ) { if ( ( ( this . VAR_2 ) >= ( VAR_3 . METHOD_2 ( ) ) ) && ( ( this . VAR_5 ) < ( VAR_3 . METHOD_3 ( ) ) ) ) { this . VAR_5 = ( ( int ) ( VAR_3 . METHOD_3 ( ) ) ) ; } } }\n"}
{"problem": "public float METHOD_1 ( ) { float VAR_1 = ( ( float ) ( ( VAR_2 . time ) - ( VAR_3 ) ) ) / ( ( float ) ( VAR_4 ) ) ; if ( VAR_1 > 1 ) remove ( ) ; return TYPE_1 . min ( VAR_1 , 1.0F ) ; }\n", "fixed": "public float METHOD_1 ( ) { float VAR_1 = ( ( float ) ( ( VAR_2 . time ) - ( VAR_3 ) ) ) / ( ( float ) ( VAR_4 ) ) ; if ( VAR_1 >= 1 ) remove ( ) ; return TYPE_1 . min ( VAR_1 , 1.0F ) ; }\n"}
{"fixCommitSHA1": "626cf14a6e42fa0a2d144e8e16940e09bafd754a", "projectName": "druid-io.druid", "bugType": "Wrong Function Name", "problem": "     return retVal;\n   }\n  @JsonProperty(\"currCapacity\")\n  public int getCurrCapacity()\n   {\n     int currCapacity = 0;\n     for (TaskStatus taskStatus : getRunningTasks().values()) {", "fixed": "     return retVal;\n   }\n  @JsonProperty(\"currCapacityUsed\")\n  public int getCurrCapacityUsed()\n   {\n     int currCapacity = 0;\n     for (TaskStatus taskStatus : getRunningTasks().values()) {", "sourceBeforeFix": "getCurrCapacity()", "sourceAfterFix": "getCurrCapacityUsed()"}
{"fixCommitSHA1": "292df7f0b637a17c8a6a78b2cf9dbb483bbeb4da", "projectName": "hazelcast.hazelcast", "bugType": "Wrong Function Name", "problem": "         if (isStatisticsEnabled()) {\n             if (isPutSucceed) {\n                 statistics.increaseCachePuts(1);\n                statistics.addPutTimeNano(System.nanoTime() - start);\n             }\n             if (getValue) {\n                 if (oldValueNull) {", "fixed": "         if (isStatisticsEnabled()) {\n             if (isPutSucceed) {\n                 statistics.increaseCachePuts(1);\n                statistics.addPutTimeNanos(System.nanoTime() - start);\n             }\n             if (getValue) {\n                 if (oldValueNull) {", "sourceBeforeFix": "statistics.addPutTimeNano(System.nanoTime() - start)", "sourceAfterFix": "statistics.addPutTimeNanos(System.nanoTime() - start)"}
{"problem": "public int METHOD_1 ( ) { for ( int VAR_1 = 1 ; VAR_1 <= ( VAR_2 ) ; VAR_1 ++ ) { for ( int VAR_3 = 1 ; VAR_3 < ( VAR_4 [ VAR_1 ] ) ; VAR_3 ++ ) { int VAR_5 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ; if ( ! ( VAR_6 . contains ( VAR_5 ) ) ) return VAR_5 ; } } return 0 ; }\n", "fixed": "public int METHOD_1 ( ) { for ( int VAR_1 = 1 ; VAR_1 <= ( VAR_2 ) ; VAR_1 ++ ) { for ( int VAR_3 = 1 ; VAR_3 <= ( VAR_4 [ VAR_1 ] ) ; VAR_3 ++ ) { int VAR_5 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ; if ( ! ( VAR_6 . contains ( VAR_5 ) ) ) return VAR_5 ; } } return 0 ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory collapseProperties =\n       new PassFactory(\"collapseProperties\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory collapseProperties =\n       new PassFactory(\"collapseProperties\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "79946366e1ab141ef2b595e0079dcac7b913da2b", "projectName": "checkstyle.checkstyle", "bugType": "Wrong Function Name", "problem": "         checkConfig.addAttribute(\"matchDirectoryStructure\", \"false\");\n         final String[] expected = CommonUtil.EMPTY_STRING_ARRAY;\n        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"), expected);\n     }\n     @Test", "fixed": "         checkConfig.addAttribute(\"matchDirectoryStructure\", \"false\");\n         final String[] expected = CommonUtil.EMPTY_STRING_ARRAY;\n        verify(checkConfig,\n                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"),\n                expected);\n     }\n     @Test", "sourceBeforeFix": "getPath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\")", "sourceAfterFix": "getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\")"}
{"problem": "public void METHOD_1 ( int VAR_1 , int VAR_2 ) { try { java.lang.String VAR_3 = ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + VAR_1 ) + STRING_3 ; java.lang.System.out.println ( VAR_3 ) ; this . METHOD_2 ( VAR_4 , VAR_3 ) ; java.lang.System.out.println ( STRING_4 ) ; } catch ( TYPE_1 VAR_5 ) { java.lang.System.out.println ( STRING_5 ) ; VAR_5 . METHOD_3 ( ) ; return ; } }\n", "fixed": "public void METHOD_1 ( int VAR_1 , int VAR_2 ) { try { java.lang.String VAR_3 = ( ( STRING_1 + VAR_2 ) + STRING_2 ) + VAR_1 ; java.lang.System.out.println ( VAR_3 ) ; this . METHOD_2 ( VAR_4 , VAR_3 ) ; java.lang.System.out.println ( STRING_4 ) ; } catch ( TYPE_1 VAR_5 ) { java.lang.System.out.println ( STRING_5 ) ; VAR_5 . METHOD_3 ( ) ; return ; } }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface KeystoneEndpointBuilder\n            extends\n                EndpointProducerBuilder {\n         default AdvancedKeystoneEndpointBuilder advanced() {\n             return (AdvancedKeystoneEndpointBuilder) this;\n         }", "fixed": "     \n    public interface KeystoneEndpointBuilder extends EndpointProducerBuilder {\n         default AdvancedKeystoneEndpointBuilder advanced() {\n             return (AdvancedKeystoneEndpointBuilder) this;\n         }", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "    * Alias string literals with global variables, to avoid creating lots of\n    * transient objects.\n    */\n  private final PassFactory aliasStrings =\n       new PassFactory(\"aliasStrings\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "    * Alias string literals with global variables, to avoid creating lots of\n    * transient objects.\n    */\n  final PassFactory aliasStrings =\n       new PassFactory(\"aliasStrings\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public void METHOD_1 ( java.lang.String message , TYPE_1 VAR_1 ) throws java.lang.Exception { message += \"\\n\" ; VAR_1 . METHOD_2 ( ( ( ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 ) ) + STRING_2 ) + message ) ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String message , TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ( ( ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 ) ) + STRING_2 ) + message ) ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; }\n"}
{"problem": "protected static boolean METHOD_1 ( java.lang.StringBuilder VAR_1 , java.lang.String VAR_2 , java.lang.String value , java.util.List < java.lang.Object > params , boolean VAR_3 ) { if ( TYPE_1 . METHOD_2 ( value ) ) { VAR_3 = TYPE_2 . METHOD_3 ( VAR_1 , VAR_3 ) ; VAR_1 . append ( STRING_1 ) . append ( VAR_2 ) . append ( STRING_2 ) ; params . add ( value ) ; } return VAR_3 ; }\n", "fixed": "protected static boolean METHOD_1 ( java.lang.StringBuilder VAR_1 , java.lang.String VAR_2 , java.lang.String value , java.util.List < java.lang.Object > params , boolean VAR_3 ) { if ( value != null ) { VAR_3 = TYPE_2 . METHOD_3 ( VAR_1 , VAR_3 ) ; VAR_1 . append ( STRING_1 ) . append ( VAR_2 ) . append ( STRING_2 ) ; params . add ( value ) ; } return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( ( VAR_1 ) == CHAR_1 ) { METHOD_2 ( ) ; } else { if ( ( VAR_1 ) == CHAR_2 ) { TYPE_1 . METHOD_3 ( VAR_2 ) ; } METHOD_4 ( ) ; TYPE_2 . setText ( TYPE_1 . METHOD_5 ( ) ) ; TYPE_1 . METHOD_6 ( TYPE_2 . getText ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( ) { if ( ( VAR_1 ) == CHAR_1 ) { METHOD_2 ( ) ; } else { if ( ( VAR_1 ) == CHAR_2 ) { TYPE_1 . METHOD_3 ( VAR_2 ) ; } METHOD_4 ( ) ; TYPE_2 . setText ( TYPE_1 . METHOD_5 ( ) ) ; TYPE_1 . METHOD_6 ( TYPE_2 . getText ( ) ) ; if ( ( TYPE_1 ) != null ) { TYPE_2 . setText ( TYPE_1 . METHOD_5 ( ) ) ; TYPE_1 . METHOD_6 ( TYPE_2 . getText ( ) ) ; } } }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { java.lang.String result ; int i ; result = STRING_1 ; for ( i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { if ( i > 0 ) result += STRING_2 ; result += java.lang.Double . toString ( VAR_1 [ i ] ) ; } return result ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { java.lang.StringBuffer result = new java.lang.StringBuffer ( STRING_1 ) ; for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { if ( i > 0 ) result . append ( STRING_2 ) ; result . append ( VAR_1 [ i ] ) ; } return result . toString ( ) ; }\n"}
{"problem": "private boolean METHOD_1 ( final java.lang.String VAR_1 ) { boolean VAR_2 = false ; if ( VAR_1 == null ) { return VAR_2 ; } if ( ( VAR_1 . length ( ) ) == 0 ) { return VAR_2 ; } if ( ( VAR_1 . METHOD_2 ( 0 ) ) == CHAR_1 ) { return VAR_2 ; } if ( ( VAR_1 . length ( ) ) > 0 ) { VAR_2 = true ; } return VAR_2 ; }\n", "fixed": "private static boolean METHOD_1 ( final java.lang.String VAR_1 ) { boolean VAR_2 = false ; if ( VAR_1 == null ) { return VAR_2 ; } if ( ( VAR_1 . length ( ) ) == 0 ) { return VAR_2 ; } if ( ( VAR_1 . METHOD_2 ( 0 ) ) == CHAR_1 ) { return VAR_2 ; } if ( ( VAR_1 . length ( ) ) > 0 ) { VAR_2 = true ; } return VAR_2 ; }\n"}
{"problem": "public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { try { return TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . open ( VAR_3 ) ) ; } catch ( java.io.IOException VAR_4 ) { if ( ! VAR_2 ) { TYPE_2 . METHOD_4 ( STRING_1 ) ; } return null ; } }\n", "fixed": "public static java.lang.String METHOD_1 ( android.content.Context context , boolean VAR_2 ) { try { return TYPE_2 . METHOD_2 ( context . METHOD_3 ( ) . open ( VAR_3 ) ) ; } catch ( java.io.IOException VAR_4 ) { if ( ! VAR_2 ) { TYPE_2 . METHOD_4 ( STRING_1 ) ; } return null ; } }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory checkRegExp =\n       new PassFactory(\"checkRegExp\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory checkRegExp =\n       new PassFactory(\"checkRegExp\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface GitHubEndpointBuilder\n             extends\n                 GitHubEndpointConsumerBuilder, GitHubEndpointProducerBuilder {\n         default AdvancedGitHubEndpointBuilder advanced() {", "fixed": "     \n    public interface GitHubEndpointBuilder\n             extends\n                 GitHubEndpointConsumerBuilder, GitHubEndpointProducerBuilder {\n         default AdvancedGitHubEndpointBuilder advanced() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) throws TYPE_4 , TYPE_5 , TYPE_6 { TYPE_1 result = VAR_4 ; if ( METHOD_2 ( VAR_1 ) ) { result = VAR_5 ; TYPE_7 . info ( STRING_1 , VAR_1 , VAR_2 . toString ( ) ) ; } else { if ( TYPE_7 . METHOD_3 ( ) ) { TYPE_7 . METHOD_4 ( STRING_2 , VAR_1 , VAR_2 . toString ( ) ) ; } } return result ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) throws TYPE_4 , TYPE_5 , TYPE_6 { TYPE_1 result = VAR_4 ; if ( METHOD_2 ( VAR_1 ) ) { result = VAR_5 ; TYPE_7 . info ( STRING_1 , VAR_1 , VAR_2 . toString ( ) ) ; } return result ; }\n"}
{"problem": "public void METHOD_1 ( ) { long VAR_1 = TYPE_1 . METHOD_2 ( ) ; long VAR_2 ; init ( ) ; while ( VAR_3 ) { VAR_2 = ( TYPE_1 . METHOD_2 ( ) ) - VAR_1 ; VAR_1 = TYPE_1 . METHOD_2 ( ) ; update ( VAR_2 ) ; METHOD_3 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { long VAR_1 = TYPE_1 . METHOD_2 ( ) ; long VAR_2 ; init ( ) ; while ( true ) { if ( VAR_3 ) { VAR_2 = ( TYPE_1 . METHOD_2 ( ) ) - VAR_1 ; VAR_1 = TYPE_1 . METHOD_2 ( ) ; update ( VAR_2 ) ; METHOD_3 ( ) ; } } }\n"}
{"problem": "private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_1 = VAR_1 . replaceAll ( STRING_1 , STRING_2 ) . replaceAll ( STRING_3 , STRING_2 ) ; java.lang.String [ ] VAR_3 = VAR_1 . split ( STRING_4 ) ; VAR_2 . METHOD_2 ( VAR_3 [ 0 ] ) ; VAR_2 . METHOD_3 ( VAR_3 [ 1 ] ) ; VAR_2 . setValue ( VAR_3 [ INT_1 ] ) ; return VAR_2 ; }\n", "fixed": "private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_1 = VAR_1 . replaceAll ( STRING_1 , STRING_2 ) . replaceAll ( STRING_3 , STRING_2 ) ; java.lang.String [ ] VAR_3 = VAR_1 . trim ( ) . split ( STRING_4 ) ; VAR_2 . METHOD_2 ( VAR_3 [ 0 ] ) ; VAR_2 . METHOD_3 ( VAR_3 [ 1 ] ) ; VAR_2 . setValue ( VAR_3 [ INT_1 ] ) ; return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ( ) - > { TYPE_2 VAR_1 = new TYPE_2 ( ) ; ( ( TYPE_2 ) ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) ) . METHOD_5 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; TYPE_4 VAR_4 = new TYPE_5 ( ) ; try { VAR_3 . start ( VAR_1 , VAR_4 , VAR_5 ) ; } catch ( java.lang.Exception VAR_6 ) { VAR_6 . METHOD_6 ( ) ; } } ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ( ) - > { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; TYPE_4 VAR_4 = new TYPE_5 ( ) ; try { VAR_3 . start ( VAR_1 , VAR_4 , VAR_5 ) ; } catch ( java.lang.Exception VAR_6 ) { VAR_6 . METHOD_6 ( ) ; } } ) ; }\n"}
{"fixCommitSHA1": "4b52e5d010469405c1ec24baa2f8457f3eada222", "projectName": "libgdx.libgdx", "bugType": "Change Identifier Used", "problem": " \t}\r\n \tpublic boolean touchUp (int screenX, int screenY, int pointer, int button) {\r\n\t\tInputProcessor[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n\t\t\t\tif (items[i].touchUp(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r", "fixed": " \t}\r\n \tpublic boolean touchUp (int screenX, int screenY, int pointer, int button) {\r\n\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n\t\t\t\tif (((InputProcessor)items[i]).touchUp(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r", "sourceBeforeFix": "InputProcessor[]", "sourceAfterFix": "Object[]"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 ) ; this . METHOD_4 ( ) ; text = ( ( TYPE_2 ) ( METHOD_5 ( VAR_4 ) ) ) ; text . METHOD_6 ( new TYPE_3 ( ) ) ; VAR_5 = getIntent ( ) . METHOD_7 ( STRING_1 ) ; text . setText ( STRING_2 ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 ) ; this . METHOD_4 ( ) ; text = ( ( TYPE_2 ) ( METHOD_5 ( VAR_4 ) ) ) ; text . METHOD_6 ( new TYPE_3 ( ) ) ; VAR_5 = getIntent ( ) . METHOD_7 ( STRING_1 ) ; text . setText ( VAR_5 ) ; }\n"}
{"fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf", "projectName": "yusuke.twitter4j", "bugType": "Change Identifier Used", "problem": "      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n        return Status.constructStatuses(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }", "fixed": "      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }", "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"favorites.json\",new PostParameter[0],true))", "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"favorites.json\",new PostParameter[0],true))"}
{"fixCommitSHA1": "efa5b54542e6ccd1357433f3ae340e94efdd9f6e", "projectName": "apache.hive", "bugType": "Same Function Swap Args", "problem": "             transactionalListenerResponses =\n                 MetaStoreListenerNotifier.notifyEvent(transactionalListeners,\n                                                       EventType.DROP_TABLE,\n                                                      new DropTableEvent(tbl, deleteData, true, this),\n                                                       envContext);\n           }\n           success = ms.commitTransaction();", "fixed": "             transactionalListenerResponses =\n                 MetaStoreListenerNotifier.notifyEvent(transactionalListeners,\n                                                       EventType.DROP_TABLE,\n                                                      new DropTableEvent(tbl, true, deleteData, this),\n                                                       envContext);\n           }\n           success = ms.commitTransaction();", "sourceBeforeFix": "new DropTableEvent(tbl,deleteData,true,this)", "sourceAfterFix": "new DropTableEvent(tbl,true,deleteData,this)"}
{"fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "projectName": "libgdx.libgdx", "bugType": "Wrong Function Name", "problem": " \t}\r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n\t\tGL11.glTexParameter(target, pname, params);\r\n \t}\r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r", "fixed": " \t}\r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r", "sourceBeforeFix": "GL11.glGetTexParameter(target,pname,params)", "sourceAfterFix": "GL11.glGetTexParameteriv(target,pname,params)"}
{"problem": "public void update ( ) { super . update ( ) ; if ( ( VAR_1 ) != null ) { for ( int i = 0 ; i < ( TYPE_1 . values ( ) . length ) ; i ++ ) { if ( ( VAR_1 [ i ] . VAR_2 ) > 0 ) ( VAR_1 [ i ] . VAR_2 ) -- ; } } }\n", "fixed": "public void update ( ) { super . update ( ) ; if ( ( VAR_1 ) != null ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { if ( ( VAR_1 [ i ] . VAR_2 ) > 0 ) ( VAR_1 [ i ] . VAR_2 ) -- ; } } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( int id , int VAR_1 , int VAR_2 ) { TYPE_2 [ ] VAR_3 = VAR_4 . METHOD_2 ( id , VAR_1 , VAR_2 ) ; try { return TYPE_1 . METHOD_3 ( VAR_5 . METHOD_4 ( VAR_3 ) ) . build ( ) ; } catch ( java.lang.Exception VAR_6 ) { } return TYPE_1 . status ( VAR_7 ) . build ( ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( int id , int VAR_2 , int VAR_1 ) { TYPE_2 [ ] VAR_3 = VAR_4 . METHOD_2 ( id , VAR_1 , VAR_2 ) ; try { return TYPE_1 . METHOD_3 ( VAR_5 . METHOD_4 ( VAR_3 ) ) . build ( ) ; } catch ( java.lang.Exception VAR_6 ) { } return TYPE_1 . status ( VAR_7 ) . build ( ) ; }\n"}
{"problem": "public java.util.Date METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { java.lang.String [ ] start = this . VAR_1 . split ( STRING_1 ) ; return new java.util.Date ( ( ( java.lang.Integer . METHOD_3 ( start [ 0 ] ) ) - INT_1 ) , java.lang.Integer . METHOD_3 ( start [ 1 ] ) , VAR_2 ) ; } else { return null ; } }\n", "fixed": "public java.util.Date METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { java.lang.String [ ] start = this . VAR_1 . split ( STRING_1 ) ; return new java.util.Date ( ( ( java.lang.Integer . METHOD_3 ( start [ 0 ] ) ) - INT_1 ) , ( ( java.lang.Integer . METHOD_3 ( start [ 1 ] ) ) - 1 ) , VAR_2 ) ; } else { return null ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 p = VAR_1 . METHOD_2 ( INT_1 ) ; TYPE_2 VAR_2 = VAR_3 . METHOD_3 ( INT_2 ) ; java.lang.System.out.println ( ( ( ( p . METHOD_4 ( ) ) + STRING_1 ) + ( p . METHOD_5 ( ) ) ) ) ; java.lang.System.out.println ( STRING_2 ) ; VAR_4 . METHOD_6 ( VAR_2 ) ; java.lang.System.out.println ( ( STRING_3 + ( p . METHOD_5 ( ) ) ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 p = VAR_1 . METHOD_2 ( INT_1 ) ; TYPE_2 VAR_2 = VAR_3 . METHOD_3 ( INT_2 ) ; java.lang.System.out.println ( ( ( ( p . METHOD_4 ( ) ) + STRING_1 ) + ( p . METHOD_5 ( ) ) ) ) ; java.lang.System.out.println ( STRING_2 ) ; VAR_4 . METHOD_6 ( VAR_2 ) ; java.lang.System.out.println ( ( STRING_3 + ( VAR_1 . METHOD_2 ( INT_1 ) . METHOD_5 ( ) ) ) ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_3 = new TYPE_2 ( VAR_1 ) . METHOD_2 ( VAR_4 ) . METHOD_3 ( true ) ; VAR_3 . METHOD_4 ( 1 ) ; VAR_3 . METHOD_5 ( 1 ) ; VAR_2 . add ( VAR_3 ) ; VAR_5 = new TYPE_3 ( ) ; VAR_5 . METHOD_6 ( VAR_6 ) ; VAR_7 . METHOD_7 ( VAR_5 ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_3 = new TYPE_2 ( VAR_1 ) . METHOD_2 ( VAR_4 ) . METHOD_3 ( true ) ; VAR_3 . METHOD_4 ( 1 ) ; VAR_3 . METHOD_5 ( 1 ) ; VAR_3 . METHOD_3 ( false ) ; VAR_2 . add ( VAR_3 ) ; VAR_5 = new TYPE_3 ( ) ; VAR_5 . METHOD_6 ( VAR_6 ) ; VAR_7 . METHOD_7 ( VAR_5 ) ; }\n"}
{"fixCommitSHA1": "80b65af84df3d54ebb4e4a4abe52c6b1fdc32b64", "projectName": "Alluxio.alluxio", "bugType": "Change Identifier Used", "problem": "     JournalFactory factory =\n         new MutableJournal.Factory(new URI(mTestFolder.newFolder().getAbsolutePath()));\n     mFileSystemMaster = Mockito.mock(DefaultFileSystemMaster.class);\n    registry.add(DefaultFileSystemMaster.class, mFileSystemMaster);\n     ThreadFactory threadPool = ThreadFactoryUtils.build(\"LineageMasterTest-%d\", true);\n     mExecutorService = Executors.newFixedThreadPool(2, threadPool);\n     mLineageMaster = new LineageMaster(registry, factory,", "fixed": "     JournalFactory factory =\n         new MutableJournal.Factory(new URI(mTestFolder.newFolder().getAbsolutePath()));\n     mFileSystemMaster = Mockito.mock(DefaultFileSystemMaster.class);\n    registry.add(FileSystemMaster.class, mFileSystemMaster);\n     ThreadFactory threadPool = ThreadFactoryUtils.build(\"LineageMasterTest-%d\", true);\n     mExecutorService = Executors.newFixedThreadPool(2, threadPool);\n     mLineageMaster = new LineageMaster(registry, factory,", "sourceBeforeFix": "DefaultFileSystemMaster.class", "sourceAfterFix": "FileSystemMaster.class"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 = VAR_1 . METHOD_3 ( ) ; if ( VAR_1 . METHOD_4 ( ) ) { VAR_5 = true ; VAR_6 = VAR_1 . METHOD_5 ( ) ; } if ( ( ( VAR_3 ) != ( VAR_7 ) ) && ( ( VAR_4 ) != ( VAR_7 ) ) ) { VAR_8 = true ; METHOD_6 ( VAR_4 , VAR_3 , VAR_6 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 = VAR_1 . METHOD_3 ( ) ; if ( VAR_1 . METHOD_4 ( ) ) { VAR_5 = true ; VAR_6 = VAR_1 . METHOD_5 ( ) ; } if ( ( ( VAR_3 ) != ( VAR_7 ) ) || ( ( VAR_4 ) != ( VAR_7 ) ) ) { VAR_8 = true ; METHOD_6 ( VAR_4 , VAR_3 , VAR_6 ) ; } }\n"}
{"fixCommitSHA1": "f135cc4188dd173e8fc175bc5d26cf1a970ac39e", "projectName": "wildfly.wildfly", "bugType": "Wrong Function Name", "problem": "                 ModelNode oldResponse = response;\n                 try {\n                     flags = EnumSet.noneOf(Flag.class);\n                    response = step.response;\n                     ModelNode newOperation = operation = step.operation;\n                     modelAddress = PathAddress.pathAddress(newOperation.get(ADDRESS));\n                     step.handler.execute(this, newOperation);", "fixed": "                 ModelNode oldResponse = response;\n                 try {\n                     flags = EnumSet.noneOf(Flag.class);\n                    response = this.response = step.response;\n                     ModelNode newOperation = operation = step.operation;\n                     modelAddress = PathAddress.pathAddress(newOperation.get(ADDRESS));\n                     step.handler.execute(this, newOperation);", "sourceBeforeFix": "response.set(ROLLED_BACK)", "sourceAfterFix": "response.get(ROLLED_BACK)"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the error message\n      */\n    @Message(id = 15834, value = \"%s recognizes only %s as children: %s\")\n     String unrecognizedChildren(String parent, String children, String parentSpec);\n     /**", "fixed": "      *\n      * @return the error message\n      */\n    @Message(id = 10834, value = \"%s recognizes only %s as children: %s\")\n     String unrecognizedChildren(String parent, String children, String parentSpec);\n     /**", "sourceBeforeFix": "id=15850", "sourceAfterFix": "id=10850"}
{"problem": "private java.lang.String METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) . get ( 0 ) . getId ( ) ) == INT_1 ) { return getString ( VAR_2 ) ; } switch ( METHOD_3 ( ) ) { case VAR_3 : return getString ( VAR_4 ) ; case VAR_5 : return getString ( VAR_6 ) ; } return null ; }\n", "fixed": "private java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) != null ) && ( ( VAR_1 . METHOD_2 ( ) . size ( ) ) > 0 ) ) { if ( ( VAR_1 . METHOD_2 ( ) . get ( 0 ) . getId ( ) ) == INT_1 ) { return getString ( VAR_2 ) ; } } switch ( METHOD_3 ( ) ) { case VAR_3 : return getString ( VAR_4 ) ; case VAR_5 : return getString ( VAR_6 ) ; } return null ; }\n"}
{"problem": "public boolean METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( this . VAR_1 ) != null ) { if ( this . VAR_1 . toLowerCase ( ) . equals ( STRING_1 ) ) { return true ; } } else if ( this . url . toLowerCase ( ) . METHOD_3 ( STRING_2 ) ) { return true ; } return false ; }\n", "fixed": "public boolean METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( this . VAR_1 ) != null ) { if ( this . VAR_1 . toLowerCase ( ) . equals ( STRING_1 ) ) { return true ; } } if ( this . url . toLowerCase ( ) . METHOD_3 ( STRING_2 ) ) { return true ; } return false ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { byte VAR_2 = INT_1 ; if ( VAR_1 != null ) { switch ( VAR_1 ) { case VAR_3 : VAR_2 = INT_1 ; break ; case VAR_4 : VAR_2 = INT_2 ; break ; case VAR_5 : VAR_2 = INT_3 ; break ; case VAR_6 : VAR_2 = INT_4 ; break ; } } return new TYPE_1 ( VAR_7 , VAR_2 ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { byte VAR_2 = INT_1 ; if ( VAR_1 != null ) { switch ( VAR_1 ) { case VAR_3 : VAR_2 = INT_1 ; break ; case VAR_4 : VAR_2 = INT_2 ; break ; case VAR_6 : VAR_2 = INT_3 ; break ; case VAR_5 : VAR_2 = INT_4 ; break ; } } return new TYPE_1 ( VAR_7 , VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String [ ] array ) { for ( int i = 0 ; i < ( array . length ) ; i ++ ) { VAR_1 = new android.widget.Button ( getContext ( ) ) ; VAR_1 . METHOD_2 ( METHOD_3 ( array [ i ] , STRING_1 ) ) ; VAR_1 . METHOD_4 ( array [ i ] ) ; VAR_1 . METHOD_5 ( this ) ; VAR_2 . METHOD_6 ( VAR_1 ) ; } }\n", "fixed": "protected void METHOD_1 ( java.lang.String [ ] array ) { for ( int i = 0 ; i < ( array . length ) ; i ++ ) { VAR_1 = new android.widget.Button ( getContext ( ) ) ; VAR_1 . METHOD_2 ( METHOD_3 ( array [ i ] , STRING_1 ) ) ; VAR_1 . METHOD_4 ( array [ i ] ) ; VAR_1 . METHOD_5 ( this ) ; VAR_2 . METHOD_6 ( VAR_1 ) ; } }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final HotSwapPassFactory checkVars =\n       new HotSwapPassFactory(\"checkVars\", true) {\n     @Override\n     protected HotSwapCompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final HotSwapPassFactory checkVars =\n       new HotSwapPassFactory(\"checkVars\", true) {\n     @Override\n     protected HotSwapCompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . assertTrue ( VAR_1 . METHOD_2 ( ) ) ; boolean VAR_2 = TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; VAR_3 . add ( TYPE_3 . METHOD_6 ( ) ) ; METHOD_1 ( ) ; VAR_1 . METHOD_7 ( ) ; TYPE_2 . METHOD_3 ( ) . METHOD_8 ( VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 . assertTrue ( VAR_1 . METHOD_2 ( ) ) ; boolean VAR_2 = TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_3 . add ( TYPE_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_5 ( ) ; TYPE_3 . METHOD_1 ( ) ; VAR_1 . METHOD_7 ( ) ; TYPE_2 . METHOD_3 ( ) . METHOD_8 ( VAR_2 ) ; }\n"}
{"problem": "protected void METHOD_1 ( ) { if ( VAR_1 . get ( ) ) { TYPE_1 . METHOD_2 ( ) . info ( this , ( STRING_1 + ( METHOD_3 ( ) ) ) ) ; try { METHOD_4 ( ) ; METHOD_5 ( ) ; } catch ( java.io.IOException VAR_2 ) { TYPE_1 . METHOD_2 ( ) . error ( this , ( STRING_2 + ( METHOD_3 ( ) ) ) , VAR_2 ) ; } } }\n", "fixed": "protected void METHOD_1 ( ) { if ( VAR_1 . get ( ) ) { try { METHOD_4 ( ) ; METHOD_5 ( ) ; } catch ( java.io.IOException VAR_2 ) { TYPE_1 . METHOD_2 ( ) . error ( this , ( STRING_2 + ( METHOD_3 ( ) ) ) , VAR_2 ) ; } } }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( STRING_1 , VAR_4 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; TYPE_3 VAR_5 = METHOD_4 ( ) ; TYPE_4 VAR_6 = VAR_5 . METHOD_5 ( ) ; VAR_6 . replace ( VAR_7 , VAR_2 ) ; VAR_6 . METHOD_6 ( null ) ; VAR_6 . commit ( ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( STRING_1 , VAR_4 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; TYPE_3 VAR_5 = METHOD_4 ( ) ; TYPE_4 VAR_6 = VAR_5 . METHOD_5 ( ) ; VAR_6 . replace ( VAR_7 , VAR_2 ) ; VAR_6 . commit ( ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { boolean VAR_3 = false ; final TYPE_2 VAR_4 = TYPE_3 . METHOD_2 ( ) ; int VAR_5 = VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( VAR_1 ) ; VAR_4 . METHOD_6 ( VAR_2 ) ; return ( VAR_4 . METHOD_3 ( ) ) == VAR_5 ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { final TYPE_2 VAR_4 = TYPE_3 . METHOD_2 ( ) ; int VAR_5 = VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( VAR_1 ) ; VAR_4 . METHOD_6 ( VAR_2 ) ; return ( VAR_4 . METHOD_3 ( ) ) == VAR_5 ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { double VAR_2 = VAR_1 . METHOD_2 ( ) ; double VAR_3 = VAR_1 . METHOD_3 ( ) ; double VAR_4 = ( VAR_2 * INT_1 ) / ( VAR_5 . METHOD_2 ( ) ) ; double VAR_6 = ( VAR_3 / ( VAR_5 . METHOD_3 ( ) ) ) + VAR_4 ; return new TYPE_1 ( VAR_4 , VAR_6 ) ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { double VAR_2 = VAR_1 . METHOD_2 ( ) ; double VAR_3 = VAR_1 . METHOD_3 ( ) ; int VAR_4 = ( ( int ) ( ( VAR_2 * INT_1 ) / ( VAR_5 . METHOD_2 ( ) ) ) ) ; int VAR_6 = ( ( int ) ( ( VAR_3 / ( VAR_5 . METHOD_3 ( ) ) ) + ( VAR_4 / INT_1 ) ) ) ; return new TYPE_1 ( VAR_4 , VAR_6 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) && ( ( counter . METHOD_3 ( ) ) == 0 ) ) { METHOD_4 ( VAR_2 , VAR_3 , VAR_4 ) ; } else { TYPE_2 . METHOD_5 ( this , VAR_5 , VAR_6 ) . show ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { if ( ( counter . METHOD_3 ( ) ) == 0 ) METHOD_4 ( VAR_2 , VAR_3 , VAR_4 ) ; } else { TYPE_2 . METHOD_5 ( this , VAR_5 , VAR_6 ) . show ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 , java.lang.String path , java.lang.Object VAR_2 , byte [ ] VAR_3 , TYPE_1 VAR_4 ) { VAR_5 . commit ( ) ; if ( ( ( VAR_6 ) != null ) && ( VAR_4 != null ) ) { TYPE_2 . METHOD_2 ( VAR_4 , VAR_6 ) ; } TYPE_3 event = new TYPE_4 ( VAR_7 , VAR_8 , VAR_1 , path , null , VAR_2 , VAR_4 , VAR_3 , null , null , null ) ; VAR_7 . METHOD_3 ( data , event ) ; }\n", "fixed": "public void METHOD_1 ( int VAR_1 , java.lang.String path , java.lang.Object VAR_2 , byte [ ] VAR_3 , TYPE_1 VAR_4 ) { VAR_5 . commit ( ) ; if ( ( ( VAR_6 ) != null ) && ( VAR_4 != null ) ) { TYPE_2 . METHOD_2 ( VAR_4 , VAR_6 ) ; } TYPE_3 event = new TYPE_4 ( VAR_7 , VAR_8 , VAR_1 , path , null , VAR_2 , VAR_4 , VAR_3 , null , null , null , null ) ; VAR_7 . METHOD_3 ( data , event ) ; }\n"}
{"fixCommitSHA1": "74d3742b6e39c174111d3b0a6177c25b93f9c926", "projectName": "apache.flink", "bugType": "Change Identifier Used", "problem": " \t * \n \t * @return the data stream constructed\n \t */\n\tprivate DataStream<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsCsv<OUT> format, int batchSize, OUT endTuple) {\n\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n \t\t\t\tpath, format, batchSize, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);", "fixed": " \t * \n \t * @return the data stream constructed\n \t */\n\tprivate DataStreamSink<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsCsv<OUT> format, int batchSize, OUT endTuple) {\n\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n \t\t\t\tpath, format, batchSize, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);", "sourceBeforeFix": "DataStream<OUT>", "sourceAfterFix": "DataStreamSink<OUT>"}
{"problem": "private double [ ] METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , int VAR_2 , TYPE_2 VAR_3 ) { double [ ] VAR_4 = new double [ VAR_1 . size ( ) ] ; TYPE_1 [ ] VAR_5 = VAR_1 . METHOD_2 ( new TYPE_1 [ 0 ] ) ; for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { VAR_4 [ i ] = ( this . METHOD_3 ( VAR_5 [ i ] , VAR_3 ) ) / VAR_2 ; } return VAR_4 ; }\n", "fixed": "private double [ ] METHOD_1 ( java.util.Set < TYPE_1 > VAR_1 , int VAR_2 , TYPE_2 VAR_3 ) { double [ ] VAR_4 = new double [ VAR_1 . size ( ) ] ; TYPE_1 [ ] VAR_5 = VAR_1 . METHOD_2 ( new TYPE_1 [ 0 ] ) ; for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { VAR_4 [ i ] = ( this . METHOD_3 ( VAR_5 [ i ] , VAR_3 ) ) / VAR_2 ; } return VAR_4 ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; java.io.File VAR_3 = VAR_2 . METHOD_3 ( ) ; try { if ( VAR_1 != null ) { VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; } if ( VAR_3 . METHOD_6 ( ) ) { VAR_3 . delete ( ) ; } } catch ( java.io.IOException VAR_4 ) { VAR_4 . METHOD_7 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; java.io.File VAR_3 = VAR_2 . METHOD_3 ( ) ; try { if ( VAR_1 != null ) { VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; } if ( ( VAR_3 != null ) && ( VAR_3 . METHOD_6 ( ) ) ) { VAR_3 . delete ( ) ; } } catch ( java.io.IOException VAR_4 ) { VAR_4 . METHOD_7 ( ) ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 result ) { if ( ( null != ( VAR_1 ) ) && ( null != result ) ) { final TYPE_2 VAR_2 = VAR_1 . get ( ) ; if ( ( ( null != VAR_2 ) && ( null != ( VAR_3 ) ) ) && ( ( VAR_2 . position ) == ( position ) ) ) { VAR_3 . METHOD_2 ( result ) ; } } super . METHOD_1 ( result ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 result ) { if ( null == ( getView ( ) ) ) { return ; } if ( ( null != ( VAR_1 ) ) && ( null != result ) ) { final TYPE_2 VAR_2 = VAR_1 . get ( ) ; if ( ( ( null != VAR_2 ) && ( null != ( VAR_3 ) ) ) && ( ( VAR_2 . position ) == ( position ) ) ) { VAR_3 . METHOD_2 ( result ) ; } } super . METHOD_1 ( result ) ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) { java.util.Map < java.lang.String , java.lang.String > VAR_5 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; VAR_5 . put ( STRING_1 , VAR_1 ) ; VAR_5 . put ( STRING_2 , VAR_2 ) ; VAR_5 . put ( STRING_3 , VAR_2 ) ; return VAR_6 . METHOD_1 ( VAR_5 , VAR_4 ) ; }\n", "fixed": "java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) { java.util.Map < java.lang.String , java.lang.String > VAR_5 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; VAR_5 . put ( STRING_1 , VAR_1 ) ; VAR_5 . put ( STRING_2 , VAR_2 ) ; VAR_5 . put ( STRING_3 , VAR_3 ) ; return VAR_6 . METHOD_1 ( VAR_5 , VAR_4 ) ; }\n"}
{"problem": "public boolean METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) instanceof TYPE_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( ) ) ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; } return false ; }\n", "fixed": "public boolean METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) instanceof TYPE_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( ) ) ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; return true ; } return false ; }\n"}
{"fixCommitSHA1": "fd172432f0b7fcb65b990ece77a85fe10ea42c21", "projectName": "apache.flink", "bugType": "Change Modifier", "problem": " \t\tprivate final long timeout;\n\t\tprivate FSDataInputStream fdis = null;\n\t\tprivate Throwable error = null;\n \t\tpublic InputSplitOpenThread(FileInputSplit split, long timeout)\n \t\t{", "fixed": " \t\tprivate final long timeout;\n\t\tprivate volatile FSDataInputStream fdis = null;\n\t\tprivate volatile Throwable error = null;\n \t\tpublic InputSplitOpenThread(FileInputSplit split, long timeout)\n \t\t{", "sourceBeforeFix": "2", "sourceAfterFix": "66"}
{"problem": "public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( ) . toString ( ) ; java.lang.String VAR_2 = TYPE_1 . METHOD_2 ( ) . toString ( ) ; TYPE_2 . assertTrue ( VAR_3 . METHOD_3 ( VAR_1 , VAR_2 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( ) . toString ( ) ; java.lang.String VAR_2 = TYPE_1 . METHOD_2 ( ) . toString ( ) ; assertTrue ( VAR_3 . METHOD_3 ( VAR_1 , VAR_2 ) ) ; }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 ) { while ( VAR_1 != null ) { TYPE_1 VAR_2 = VAR_1 ; TYPE_1 n = VAR_3 ; while ( n != null ) { if ( ( VAR_1 . data ) == ( n . data ) ) { VAR_4 = VAR_5 ; } else { VAR_2 = n ; } n = VAR_5 ; } VAR_1 = VAR_3 ; } }\n", "fixed": "public static void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) return ; while ( VAR_1 != null ) { TYPE_1 VAR_2 = VAR_1 ; TYPE_1 n = VAR_3 ; while ( n != null ) { if ( ( VAR_1 . data ) == ( n . data ) ) { VAR_4 = VAR_5 ; } else { VAR_2 = n ; } n = VAR_5 ; } VAR_1 = VAR_3 ; } }\n"}
{"problem": "private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { int VAR_1 = TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) , ( STRING_1 + STRING_2 ) ) ; if ( VAR_1 == ( VAR_2 ) ) { return false ; } else if ( VAR_1 == ( VAR_3 ) ) { METHOD_5 ( ) ; } } return true ; }\n", "fixed": "private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { int VAR_1 = TYPE_1 . METHOD_3 ( METHOD_4 ( ) , ( STRING_1 + STRING_2 ) ) ; if ( VAR_1 == ( VAR_2 ) ) { return false ; } else if ( VAR_1 == ( VAR_3 ) ) { METHOD_5 ( ) ; } } return true ; }\n"}
{"fixCommitSHA1": "c30e67b81a0d9ac45c4151d20a960e542ad97b4f", "projectName": "dropwizard.dropwizard", "bugType": "Wrong Function Name", "problem": "         final PrintWriter output = mock(PrintWriter.class);\n         when(request.getMethod()).thenReturn(\"POST\");\n        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);", "fixed": "         final PrintWriter output = mock(PrintWriter.class);\n         when(request.getMethod()).thenReturn(\"POST\");\n        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);", "sourceBeforeFix": "request.getRequestURI()", "sourceAfterFix": "request.getServletPath()"}
{"problem": "public static java.lang.String METHOD_1 ( final java.lang.String [ ] VAR_1 , final java.lang.String VAR_2 ) { if ( VAR_1 != null ) { final java.lang.StringBuilder result = new java.lang.StringBuilder ( ) ; for ( int i = 0 ; i < ( VAR_1 . length ) ; ++ i ) { result . append ( VAR_1 [ i ] ) ; if ( ( i + 1 ) < ( VAR_1 . length ) ) { result . append ( VAR_2 ) ; } } return result . toString ( ) ; } return STRING_1 ; }\n", "fixed": "public static java.lang.String METHOD_1 ( final java.lang.String [ ] VAR_1 , final java.lang.String VAR_2 ) { if ( VAR_1 != null ) { final java.lang.StringBuilder result = new java.lang.StringBuilder ( ) ; for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { result . append ( VAR_1 [ i ] ) ; if ( ( i + 1 ) < ( VAR_1 . length ) ) { result . append ( VAR_2 ) ; } } return result . toString ( ) ; } return STRING_1 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < ? extends java.lang.String > VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { if ( VAR_3 . equals ( VAR_4 ) ) VAR_5 . METHOD_2 ( null ) ; TYPE_2 VAR_6 = new TYPE_2 ( VAR_5 , VAR_3 . equals ( VAR_7 ) ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < ? extends java.lang.String > VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { if ( VAR_3 . equals ( VAR_4 ) ) { VAR_5 . METHOD_2 ( null ) ; return ; } TYPE_2 VAR_6 = new TYPE_2 ( VAR_5 , VAR_3 . equals ( VAR_7 ) ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , android.view.View VAR_2 , int position , long id ) { try { android.content.Intent intent = new android.content.Intent ( getActivity ( ) , VAR_3 class ) ; intent . METHOD_2 ( VAR_4 , ( ( getActivity ( ) . METHOD_3 ( ) ) + ( VAR_5 . get ( position ) ) ) ) ; METHOD_4 ( intent ) ; } catch ( java.lang.Exception VAR_6 ) { VAR_6 . METHOD_5 ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , android.view.View VAR_2 , int position , long id ) { try { if ( null != ( VAR_5 . get ( position ) ) ) { android.content.Intent intent = new android.content.Intent ( getActivity ( ) , VAR_3 class ) ; intent . METHOD_2 ( VAR_4 , ( ( getActivity ( ) . METHOD_3 ( ) ) + ( VAR_5 . get ( position ) ) ) ) ; METHOD_4 ( intent ) ; } } catch ( java.lang.Exception VAR_6 ) { VAR_6 . METHOD_5 ( ) ; } }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory coalesceVariableNames =\n       new PassFactory(\"coalesceVariableNames\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory coalesceVariableNames =\n       new PassFactory(\"coalesceVariableNames\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public int METHOD_1 ( java.lang.Object a , java.lang.Object b ) { TYPE_1 VAR_1 = ( ( TYPE_2 ) ( a ) ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = ( ( TYPE_2 ) ( b ) ) . METHOD_2 ( ) ; if ( VAR_1 . METHOD_3 ( VAR_2 ) ) return - 1 ; if ( VAR_1 . METHOD_4 ( VAR_2 ) ) return 1 ; else return 0 ; }\n", "fixed": "public int METHOD_1 ( java.lang.Object a , java.lang.Object b ) { java.util.Calendar VAR_1 = ( ( TYPE_2 ) ( a ) ) . METHOD_2 ( ) ; java.lang.System.out.print ( VAR_1 ) ; java.util.Calendar VAR_2 = ( ( TYPE_2 ) ( b ) ) . METHOD_2 ( ) ; java.lang.System.out.print ( VAR_2 ) ; if ( VAR_1 . METHOD_3 ( VAR_2 ) ) return - 1 ; if ( VAR_1 . METHOD_4 ( VAR_2 ) ) return 1 ; else { return 0 ; } }\n"}
{"problem": "void METHOD_1 ( TYPE_1 VAR_1 , int status ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 , status ) ; if ( ( status == ( VAR_3 ) ) || ( status == ( VAR_4 ) ) ) { TYPE_2 . METHOD_2 ( STRING_2 , status ) ; VAR_1 . METHOD_3 ( ) ; } VAR_2 = status ; }\n", "fixed": "void METHOD_1 ( TYPE_1 VAR_1 , int status ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 , status ) ; if ( ( ( ( ( VAR_2 ) != ( VAR_3 ) ) && ( ( VAR_2 ) != ( VAR_4 ) ) ) && ( status == ( VAR_3 ) ) ) || ( status == ( VAR_4 ) ) ) { TYPE_2 . METHOD_2 ( STRING_2 , status ) ; VAR_1 . METHOD_3 ( ) ; } VAR_2 = status ; }\n"}
{"project": "Closure", "bugId": 16, "problem": " private void fixTypeNode(Node typeNode) {\n         Var aliasVar = aliases.get(baseName);\n         if (aliasVar != null) {\n           Node aliasedNode = aliasVar.getInitialValue();\n          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex)));\n         }\n       }", "fixed": " private void fixTypeNode(Node typeNode) {\n         Var aliasVar = aliases.get(baseName);\n         if (aliasVar != null) {\n           Node aliasedNode = aliasVar.getInitialValue();\n          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode, baseName));\n         }\n       }", "observations": "", "repairActions": ["assignAdd", "mcAdd", "mcParAdd", "mcParValChange", "mcRepl", "mdParAdd", "objInstMod", "varAdd"], "repairPatterns": ["initFix", "wrapsMethod", "wrongComp"]}
{"problem": "public byte [ ] METHOD_1 ( java.lang.Object value , int length , int VAR_1 , boolean VAR_2 ) throws TYPE_1 { int i = ( ( int ) ( value ) ) ; byte [ ] VAR_3 = METHOD_2 ( java.lang.Integer.toString ( i ) , ( i < 0 ) ) ; if ( VAR_2 ) { VAR_3 = METHOD_3 ( VAR_3 , length ) ; } return VAR_3 ; }\n", "fixed": "public byte [ ] METHOD_1 ( java.lang.Object value , int length , int VAR_1 , boolean VAR_2 ) throws TYPE_1 { int i = ( ( int ) ( value ) ) ; byte [ ] VAR_3 = METHOD_2 ( java.lang.Integer.toString ( java.lang.Math.abs ( i ) ) , ( i < 0 ) ) ; if ( VAR_2 ) { VAR_3 = METHOD_3 ( VAR_3 , length ) ; } return VAR_3 ; }\n"}
{"problem": "public java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = TYPE_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 . getName ( ) ) ; java.util.Set < TYPE_4 > VAR_3 = new java.util.HashSet < TYPE_4 > ( ) ; for ( TYPE_5 VAR_4 : VAR_1 . METHOD_4 ( ) ) { VAR_3 . add ( VAR_4 . METHOD_5 ( ) ) ; } java.util.ArrayList < TYPE_6 > VAR_5 = METHOD_6 ( VAR_3 ) ; return null ; }\n", "fixed": "public java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = TYPE_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 . getName ( ) ) ; java.util.Set < TYPE_4 > VAR_3 = new java.util.HashSet < TYPE_4 > ( ) ; for ( TYPE_5 VAR_4 : VAR_1 . METHOD_4 ( ) ) { VAR_3 . add ( VAR_4 . METHOD_5 ( ) ) ; } return null ; }\n"}
{"fixCommitSHA1": "9f0d922f042d7342252ad2e1476ae45002c89cfd", "projectName": "openhab.openhab", "bugType": "Change Numeric Literal", "problem": "             }\r\n             if (bulb > 5) {\r\n                 sendOn(bulb, bridgeId);\r\n                Thread.sleep(50);\r\n                 String messageBytes = \"40:\" + Integer.toHexString(milightColorNo) + \":55\";\r\n                 sendMessage(messageBytes, bridgeId);\r\n             }\r", "fixed": "             }\r\n             if (bulb > 5) {\r\n                 sendOn(bulb, bridgeId);\r\n                Thread.sleep(100);\r\n                 String messageBytes = \"40:\" + Integer.toHexString(milightColorNo) + \":55\";\r\n                 sendMessage(messageBytes, bridgeId);\r\n             }\r", "sourceBeforeFix": "Thread.sleep(50)", "sourceAfterFix": "Thread.sleep(100)"}
{"problem": "private boolean METHOD_1 ( ) { final TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 class ) ; final TYPE_3 VAR_3 = VAR_1 . METHOD_3 ( this . VAR_4 ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_4 ( ) ; } final java.lang.Boolean VAR_5 = TYPE_2 . METHOD_5 ( STRING_1 , VAR_6 class ) ; return VAR_5 ; }\n", "fixed": "private boolean METHOD_1 ( ) { final TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 class ) ; final TYPE_3 VAR_3 = VAR_1 . METHOD_3 ( this . VAR_4 ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_4 ( ) ; } return TYPE_2 . METHOD_5 ( STRING_1 , VAR_6 class ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( ) { TYPE_2 node = this ; while ( ( node . METHOD_2 ( ) ) != null ) { TYPE_3 . info ( ( STRING_1 + ( node . METHOD_3 ( ) . METHOD_4 ( ) ) ) ) ; node = node . METHOD_2 ( ) ; } return TYPE_4 . METHOD_5 ( node . METHOD_3 ( ) . METHOD_4 ( ) ) . METHOD_1 ( ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { TYPE_2 node = this ; while ( ( node . METHOD_2 ( ) ) != null ) { node = node . METHOD_2 ( ) ; } return TYPE_4 . METHOD_5 ( node . METHOD_3 ( ) . METHOD_4 ( ) ) . METHOD_1 ( ) ; }\n"}
{"fixCommitSHA1": "c30e67b81a0d9ac45c4151d20a960e542ad97b4f", "projectName": "dropwizard.dropwizard", "bugType": "Wrong Function Name", "problem": "     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n        when(request.getRequestURI()).thenReturn(\"/tasks/test\");\n         servlet.service(request, response);", "fixed": "     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n         servlet.service(request, response);", "sourceBeforeFix": "request.getRequestURI()", "sourceAfterFix": "request.getServletPath()"}
{"problem": "public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , INT_1 , STRING_2 , null , VAR_2 class ) ; try { VAR_1 . start ( ) ; java.io.BufferedReader VAR_3 = new java.io.BufferedReader ( new TYPE_2 ( VAR_4 ) ) ; java.lang.System.out.print ( STRING_3 ) ; VAR_3 . METHOD_1 ( ) ; } catch ( java.lang.Exception VAR_5 ) { VAR_5 . METHOD_2 ( ) ; } finally { VAR_1 . METHOD_3 ( ) ; } }\n", "fixed": "public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , INT_1 , STRING_2 , null , VAR_2 class ) ; try { VAR_1 . start ( ) ; java.io.BufferedReader VAR_3 = new java.io.BufferedReader ( new TYPE_2 ( VAR_4 ) ) ; while ( true ) { } } catch ( java.lang.Exception VAR_5 ) { VAR_5 . METHOD_2 ( ) ; } finally { VAR_1 . METHOD_3 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( final int VAR_1 , final java.lang.String VAR_2 , final java.lang.String name , final java.lang.String VAR_3 ) { if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , name , VAR_3 ) ; } execute ( VAR_1 , 0 , VAR_3 , name ) ; }\n", "fixed": "public void METHOD_1 ( final int VAR_1 , final java.lang.String VAR_2 , final java.lang.String name , final java.lang.String VAR_3 ) { if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , name , VAR_3 ) ; } execute ( VAR_1 , 0 , 0 , VAR_3 , name ) ; }\n"}
{"problem": "private static long METHOD_1 ( java.io.File file ) { try { TYPE_1 VAR_1 = new TYPE_1 ( file . METHOD_2 ( ) . METHOD_3 ( ) ) ; long VAR_2 = VAR_1 . METHOD_4 ( ) ; long VAR_3 = VAR_1 . METHOD_5 ( ) ; long VAR_4 = VAR_2 * VAR_3 ; return VAR_2 * VAR_3 ; } catch ( TYPE_2 VAR_5 ) { TYPE_3 . METHOD_6 ( VAR_6 , ( STRING_1 + VAR_5 ) ) ; return ( ( VAR_7 ) * INT_1 ) * INT_1 ; } }\n", "fixed": "private static long METHOD_1 ( java.io.File file ) { try { TYPE_1 VAR_1 = new TYPE_1 ( file . METHOD_2 ( ) . METHOD_3 ( ) ) ; long VAR_2 = VAR_1 . METHOD_4 ( ) ; long VAR_3 = VAR_1 . METHOD_5 ( ) ; return VAR_2 * VAR_3 ; } catch ( TYPE_2 VAR_5 ) { TYPE_3 . METHOD_6 ( VAR_6 , ( STRING_1 + VAR_5 ) ) ; return ( ( VAR_7 ) * INT_1 ) * INT_1 ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) throws java.io.IOException { TYPE_2 b = buffer . METHOD_2 ( ) ; while ( ( b . METHOD_3 ( ) ) > 0 ) { int VAR_1 = VAR_2 . METHOD_4 ( b ) ; if ( VAR_1 == ( - 1 ) ) { break ; } } b . METHOD_5 ( ) ; return ( b . METHOD_3 ( ) ) == 0 ? null : buffer . METHOD_6 ( 0 , b . METHOD_7 ( ) ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) throws java.io.IOException { TYPE_2 b = buffer . METHOD_2 ( ) ; int VAR_1 = VAR_2 . METHOD_4 ( b ) ; if ( VAR_1 == ( - 1 ) ) { return null ; } b . METHOD_5 ( ) ; return ( b . METHOD_3 ( ) ) == 0 ? null : buffer . METHOD_6 ( 0 , b . METHOD_7 ( ) ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( VAR_1 . isEmpty ( ) ) return null ; else { while ( true ) { TYPE_1 value = VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; if ( value == null ) { if ( ( VAR_1 . size ( ) ) <= 1 ) { return null ; } else { TYPE_2 < TYPE_1 > VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; } } else { return value ; } } } } }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { if ( VAR_1 . isEmpty ( ) ) return null ; else { while ( true ) { TYPE_1 value = VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; if ( value == null ) { if ( ( VAR_1 . size ( ) ) <= 1 ) { return null ; } else { TYPE_2 < TYPE_1 > VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; } } else { return value ; } } } }\n"}
{"problem": "protected void METHOD_1 ( ) { try { if ( ! ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ) { TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ; } } catch ( java.io.IOException VAR_1 ) { VAR_1 . METHOD_5 ( ) ; METHOD_6 ( ) ; } super . METHOD_7 ( ) ; }\n", "fixed": "protected void METHOD_1 ( ) { try { if ( ! ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ) { TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ; } } catch ( java.io.IOException VAR_1 ) { VAR_1 . METHOD_5 ( ) ; METHOD_6 ( ) ; } super . METHOD_1 ( ) ; }\n"}
{"fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "projectName": "libgdx.libgdx", "bugType": "Wrong Function Name", "problem": " \t}\r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n\t\tGL20.glUniform3(location, v);\r\n \t}\r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r", "fixed": " \t}\r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r", "sourceBeforeFix": "GL20.glUniformMatrix4(location,transpose,toFloatBuffer(value,offset,count << 4))", "sourceAfterFix": "GL20.glUniformMatrix4fv(location,transpose,toFloatBuffer(value,offset,count << 4))"}
{"problem": "public int METHOD_1 ( ) { java.lang.Integer x = METHOD_2 ( ) ; if ( x != null ) return x ; for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) { int VAR_2 = super . METHOD_1 ( ) ; if ( VAR_2 == 1 ) { return 1 ; } } java.lang.System.out.println ( this ) ; return 0 ; }\n", "fixed": "public int METHOD_1 ( ) { java.lang.Integer x = METHOD_2 ( ) ; if ( x != null ) return x ; for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) { int VAR_2 = super . METHOD_1 ( ) ; if ( VAR_2 == 1 ) { return 1 ; } } return 0 ; }\n"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n     String invalidValue(String name, int value, int maxIndex);\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n     String invalidValue(String name, int value, int maxIndex);\n     /**", "sourceBeforeFix": "id=15868", "sourceAfterFix": "id=10868"}
{"problem": "public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { METHOD_2 ( VAR_1 . get ( ( ( VAR_1 . size ( ) ) - 1 ) ) ) ; VAR_1 . remove ( ( ( VAR_1 . size ( ) ) - 1 ) ) ; if ( ( METHOD_3 ( ) ) > INT_1 ) METHOD_4 ( ) ; }\n", "fixed": "public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_1 . add ( VAR_1 . get ( ( ( VAR_1 . size ( ) ) - 1 ) ) ) ; VAR_1 . remove ( ( ( VAR_1 . size ( ) ) - 1 ) ) ; if ( ( METHOD_3 ( ) ) > INT_1 ) METHOD_4 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.String VAR_1 = ( STRING_1 + STRING_2 ) + ( + STRING_3 ) ; java.io.File f = METHOD_2 ( VAR_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( new TYPE_2 ( ) , null ) ; TYPE_3 t = new TYPE_3 ( f , VAR_2 ) ; TYPE_4 . assertNotNull ( STRING_4 , t ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.io.IOException { java.lang.String VAR_1 = STRING_1 + ( STRING_2 + STRING_3 ) ; java.io.File f = METHOD_2 ( VAR_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( new TYPE_2 ( ) , null ) ; TYPE_3 t = new TYPE_3 ( f , VAR_2 ) ; TYPE_4 . assertNotNull ( STRING_4 , t ) ; }\n"}
{"problem": "public final void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( 0 ) ; try { TYPE_2 . METHOD_4 ( VAR_3 , java.lang.String . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) . METHOD_7 ( STRING_1 ) ) ; TYPE_1 . METHOD_2 ( VAR_4 ) ; } catch ( java.io.IOException VAR_5 ) { VAR_5 . METHOD_8 ( ) ; } TYPE_1 . METHOD_9 ( ) ; }\n", "fixed": "public final void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( 0 ) ; try { TYPE_2 . METHOD_4 ( VAR_3 , java.lang.String . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) . METHOD_7 ( STRING_1 ) ) ; TYPE_1 . METHOD_2 ( VAR_4 ) ; } catch ( java.io.IOException VAR_5 ) { VAR_5 . METHOD_8 ( ) ; } }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface JGroupsEndpointBuilder\n             extends\n                 JGroupsEndpointConsumerBuilder, JGroupsEndpointProducerBuilder {\n         default AdvancedJGroupsEndpointBuilder advanced() {", "fixed": "     \n    public interface JGroupsEndpointBuilder\n             extends\n                 JGroupsEndpointConsumerBuilder, JGroupsEndpointProducerBuilder {\n         default AdvancedJGroupsEndpointBuilder advanced() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"fixCommitSHA1": "fbbd169b6e8ac15010ea51ba6debef36299fc696", "projectName": "alibaba.fastjson", "bugType": "Change Identifier Used", "problem": " \t}\n     public boolean put(Object type, Object value) {\n        return put((Type)type, (ObjectDeserializer)value);\n     }\n \tpublic boolean put(Type type, ObjectSerializer value) {", "fixed": " \t}\n     public boolean put(Object type, Object value) {\n        return put((Type)type, (ObjectSerializer)value);\n     }\n \tpublic boolean put(Type type, ObjectSerializer value) {", "sourceBeforeFix": "(ObjectDeserializer)value", "sourceAfterFix": "(ObjectSerializer)value"}
{"problem": "private TYPE_1 < java.lang.String , java.lang.String > METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 < java.lang.String , java.lang.String > VAR_2 = TYPE_3 . METHOD_2 ( ) ; for ( java.lang.String line : VAR_1 ) { java.lang.String [ ] VAR_3 = TYPE_4 . split ( line ) ; if ( ( VAR_3 . length ) == INT_1 ) { VAR_2 . put ( VAR_3 [ 0 ] . trim ( ) , VAR_3 [ 1 ] . trim ( ) ) ; } } return VAR_2 ; }\n", "fixed": "protected TYPE_1 < java.lang.String , java.lang.String > METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 < java.lang.String , java.lang.String > VAR_2 = TYPE_3 . METHOD_2 ( ) ; for ( java.lang.String line : VAR_1 ) { java.lang.String [ ] VAR_3 = TYPE_4 . split ( line ) ; if ( ( VAR_3 . length ) == INT_1 ) { VAR_2 . put ( VAR_3 [ 0 ] . trim ( ) , VAR_3 [ 1 ] . trim ( ) ) ; } } return VAR_2 ; }\n"}
{"problem": "private boolean METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { return true ; } java.lang.String [ ] VAR_1 = METHOD_3 ( ) ; long VAR_2 = 0 ; for ( java.lang.String string : VAR_1 ) { VAR_2 = TYPE_1 . METHOD_4 ( VAR_2 , new java.io.File ( string ) . METHOD_5 ( ) ) ; } return VAR_2 < ( new java.io.File ( METHOD_6 ( ) ) . METHOD_5 ( ) ) ; }\n", "fixed": "private boolean METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { return true ; } java.lang.String [ ] VAR_1 = METHOD_3 ( ) ; long VAR_2 = 0 ; for ( java.lang.String string : VAR_1 ) { VAR_2 = TYPE_1 . METHOD_4 ( VAR_2 , new java.io.File ( string ) . METHOD_5 ( ) ) ; } return VAR_2 > ( new java.io.File ( METHOD_6 ( ) ) . METHOD_5 ( ) ) ; }\n"}
{"fixCommitSHA1": "ade2ef1e23fecc7211fb450ca852bc94fe565e0e", "projectName": "Alluxio.alluxio", "bugType": "Change Identifier Used", "problem": "         if (persist && !next.isPersisted()) {\n           next.setPersisted(true);\n           persisted.add(next);\n          String ufsPath = mMountTable.resolve(getPath(next)).getPath();\n           UnderFileSystem ufs = UnderFileSystem.get(ufsPath, MasterContext.getConf());\n           ufs.mkdirs(ufsPath, false);\n         }", "fixed": "         if (persist && !next.isPersisted()) {\n           next.setPersisted(true);\n           persisted.add(next);\n          String ufsPath = mMountTable.resolve(getPath(next)).toString();\n           UnderFileSystem ufs = UnderFileSystem.get(ufsPath, MasterContext.getConf());\n           ufs.mkdirs(ufsPath, false);\n         }", "sourceBeforeFix": "mMountTable.resolve(getPath(next)).getPath()", "sourceAfterFix": "mMountTable.resolve(getPath(next)).toString()"}
{"problem": "public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , int position ) { VAR_2 = ( ( TYPE_2 ) ( VAR_3 . METHOD_2 ( VAR_4 ) ) ) ; android.view.View VAR_5 = ( ( android.view.View ) ( VAR_2 . METHOD_3 ( VAR_6 , VAR_1 , false ) ) ) ; TYPE_3 VAR_7 = ( ( TYPE_3 ) ( VAR_5 . METHOD_4 ( VAR_8 ) ) ) ; VAR_7 . METHOD_5 ( VAR_9 [ position ] ) ; VAR_1 . METHOD_6 ( VAR_5 ) ; return VAR_5 ; }\n", "fixed": "public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , int position ) { VAR_2 = ( ( TYPE_2 ) ( VAR_3 . METHOD_2 ( VAR_4 ) ) ) ; android.view.View VAR_5 = VAR_2 . METHOD_3 ( VAR_6 , VAR_1 , false ) ; TYPE_3 VAR_7 = ( ( TYPE_3 ) ( VAR_5 . METHOD_4 ( VAR_8 ) ) ) ; VAR_7 . METHOD_5 ( VAR_9 [ position ] ) ; VAR_1 . METHOD_6 ( VAR_5 , 0 ) ; return VAR_5 ; }\n"}
{"problem": "public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String name , java.lang.String VAR_2 , java.lang.String VAR_3 ) { java.io.BufferedWriter writer = null ; try { writer = new java.io.BufferedWriter ( new java.io.FileWriter ( ( ( ( ( VAR_2 + STRING_1 ) + name ) + STRING_2 ) + VAR_3 ) ) ) ; writer.write ( VAR_1 ) ; } catch ( java.io.IOException VAR_4 ) { VAR_4 . METHOD_2 ( ) ; } finally { try { writer . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_4 . METHOD_2 ( ) ; } } }\n", "fixed": "public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String name , java.lang.String VAR_2 , java.lang.String VAR_3 ) { try ( java.io.BufferedWriter writer = new java.io.BufferedWriter ( new java.io.FileWriter ( ( ( ( ( VAR_2 + STRING_1 ) + name ) + STRING_2 ) + VAR_3 ) ) ) ) { writer.write ( VAR_1 ) ; } catch ( java.io.IOException VAR_4 ) { VAR_4 . METHOD_2 ( ) ; } }\n"}
{"fixCommitSHA1": "cbb7f2cf26daf213a6265a99fc27980bfcf4ff89", "projectName": "apache.camel", "bugType": "Wrong Function Name", "problem": "                     type = routeContext.getDataFormat(ref);\n                 }\n                 if (type != null) {\n                    dataFormat = type.createDataFormat(routeContext);\n                 }\n             }", "fixed": "                     type = routeContext.getDataFormat(ref);\n                 }\n                 if (type != null) {\n                    dataFormat = type.getDataFormat(routeContext);\n                 }\n             }", "sourceBeforeFix": "type.createDataFormat(routeContext)", "sourceAfterFix": "type.getDataFormat(routeContext)"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory moveFunctionDeclarations =\n       new PassFactory(\"moveFunctionDeclarations\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory moveFunctionDeclarations =\n       new PassFactory(\"moveFunctionDeclarations\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "private void METHOD_1 ( ) { if ( VAR_1 = false ) { VAR_1 = true ; if ( METHOD_2 ( ) ) { TYPE_1 . METHOD_3 ( METHOD_4 ( ) , STRING_1 , VAR_2 ) . show ( ) ; VAR_3 . METHOD_5 ( ) ; METHOD_6 ( ) ; } else { VAR_3 . METHOD_7 ( TYPE_2 . METHOD_8 ( ) ) ; } } }\n", "fixed": "private void METHOD_1 ( ) { if ( VAR_1 = false ) { VAR_1 = true ; if ( METHOD_2 ( ) ) { TYPE_1 . METHOD_3 ( METHOD_4 ( ) , STRING_1 , VAR_2 ) . show ( ) ; METHOD_6 ( ) ; } else { VAR_3 . METHOD_7 ( TYPE_2 . METHOD_8 ( ) ) ; } } }\n"}
{"problem": "public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . getText ( ) . toString ( ) ; if ( VAR_2 . isEmpty ( ) ) { VAR_1 . METHOD_2 ( STRING_1 ) ; return true ; } else if ( ( VAR_2 . length ( ) ) != INT_1 ) { VAR_1 . METHOD_2 ( STRING_2 ) ; return true ; } return false ; }\n", "fixed": "public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . getText ( ) . toString ( ) ; if ( VAR_2 . isEmpty ( ) ) { VAR_1 . METHOD_2 ( STRING_1 ) ; return false ; } else if ( ( VAR_2 . length ( ) ) != INT_1 ) { VAR_1 . METHOD_2 ( STRING_2 ) ; return false ; } return true ; }\n"}
{"problem": "private static TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final java.lang.String VAR_2 ) throws TYPE_3 { final java.util.ArrayList < TYPE_1 > VAR_3 = TYPE_4 . METHOD_2 ( VAR_1 , VAR_2 . trim ( ) ) ; if ( ( VAR_3 . size ( ) ) > 0 ) { return VAR_3 . get ( 0 ) ; } throw new TYPE_3 ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) ) ; }\n", "fixed": "private static TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final java.lang.String VAR_2 ) throws TYPE_3 { final java.util.ArrayList < TYPE_1 > VAR_3 = TYPE_4 . METHOD_2 ( VAR_1 , VAR_2 . trim ( ) ) ; if ( ! ( VAR_3 . isEmpty ( ) ) ) { return VAR_3 . get ( 0 ) ; } throw new TYPE_3 ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = METHOD_2 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; java.util.ArrayList < TYPE_3 > VAR_3 = VAR_2 . METHOD_3 ( ) ; java.util.ArrayList < TYPE_1 > VAR_4 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_3 VAR_5 : VAR_3 ) { for ( TYPE_1 VAR_6 : VAR_5 . METHOD_2 ( ) ) { if ( VAR_1 . contains ( VAR_6 ) ) { VAR_4 . add ( VAR_6 ) ; } } VAR_5 . METHOD_4 ( VAR_4 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = METHOD_2 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; java.util.ArrayList < TYPE_3 > VAR_3 = VAR_2 . METHOD_3 ( ) ; for ( TYPE_3 VAR_5 : VAR_3 ) { java.util.ArrayList < TYPE_1 > VAR_4 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 VAR_6 : VAR_5 . METHOD_2 ( ) ) { if ( VAR_1 . contains ( VAR_6 ) ) { VAR_4 . add ( VAR_6 ) ; } } VAR_5 . METHOD_4 ( VAR_4 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( new java.util.Date ( ) ) ; VAR_1 . METHOD_3 ( INT_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; TYPE_2 . assertEquals ( 1 , VAR_3 . get ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( new java.util.Date ( ) ) ; VAR_1 . METHOD_3 ( INT_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; TYPE_2 . assertEquals ( 1.0 , VAR_3 . get ( ) ) ; }\n"}
{"fixCommitSHA1": "1ec8e822a17c37826b0a5df3b79ca03b4b528f1c", "projectName": "spring-projects.spring-boot", "bugType": "Change Modifier", "problem": " \t\t@Bean\n \t\t@ConditionalOnMissingBean\n\t\tRestClient restClient(RestClientBuilder builder) {\n \t\t\treturn builder.build();\n \t\t}", "fixed": " \t\t@Bean\n \t\t@ConditionalOnMissingBean\n\t\tpublic RestClient restClient(RestClientBuilder builder) {\n \t\t\treturn builder.build();\n \t\t}", "sourceBeforeFix": "0", "sourceAfterFix": "1"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory closureOptimizePrimitives =\n       new PassFactory(\"closureOptimizePrimitives\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory closureOptimizePrimitives =\n       new PassFactory(\"closureOptimizePrimitives\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public void METHOD_1 ( ) { final TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( INT_1 , INT_1 , INT_1 , FLOAT_1 ) ; final java.lang.Object [ ] result = VAR_2 . METHOD_3 ( VAR_1 , INT_2 , INT_3 , INT_4 , ( INT_1 / INT_5 ) , FLOAT_2 , FLOAT_3 , true ) ; final double VAR_3 = ( ( double [ ] ) ( result [ 0 ] ) ) [ 0 ] ; TYPE_3 . assertEquals ( 0 , VAR_3 , FLOAT_4 ) ; }\n", "fixed": "public void METHOD_1 ( ) { final TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( INT_1 , INT_1 , INT_1 , FLOAT_1 ) ; final java.lang.Object [ ] result = VAR_2 . METHOD_3 ( VAR_1 , INT_2 , INT_3 , INT_4 , ( INT_1 / INT_5 ) , FLOAT_2 , FLOAT_3 , false ) ; final double VAR_3 = ( ( double [ ] ) ( result [ 0 ] ) ) [ 0 ] ; TYPE_3 . assertEquals ( 0 , VAR_3 , FLOAT_4 ) ; }\n"}
{"problem": "public long METHOD_1 ( ) throws TYPE_1 { if ( VAR_1 . METHOD_2 ( ) ) return VAR_1 . METHOD_1 ( ) ; if ( ( ( VAR_2 ) != null ) && ( ( VAR_2 . size ( ) ) > 0 ) ) return VAR_2 . METHOD_3 ( index ) ; return - 1 ; }\n", "fixed": "public long METHOD_1 ( ) throws TYPE_1 { if ( VAR_1 . METHOD_2 ( ) ) return VAR_1 . METHOD_1 ( ) ; if ( ( ( VAR_2 ) != null ) && ( ( VAR_2 . size ( ) ) > 0 ) ) return VAR_2 . get ( index ) . METHOD_1 ( ) ; return - 1 ; }\n"}
{"fixCommitSHA1": "26f1133593498a87216f0dd4954ff7c07313b740", "projectName": "google.closure-compiler", "bugType": "Change Identifier Used", "problem": "    * Expects the JS to generate one bad-read error.\n    */\n   private void assertRedeclare(String js) {\n    testWarning(js, VariableReferenceCheck.REDECLARED_VARIABLE);\n   }\n   /**", "fixed": "    * Expects the JS to generate one bad-read error.\n    */\n   private void assertRedeclare(String js) {\n    testError(js, VariableReferenceCheck.REDECLARED_VARIABLE);\n   }\n   /**", "sourceBeforeFix": "testWarning(js,VariableReferenceCheck.REDECLARED_VARIABLE)", "sourceAfterFix": "testError(js,VariableReferenceCheck.REDECLARED_VARIABLE)"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { VAR_1 = VAR_2 ; } if ( ! ( VAR_1 . METHOD_3 ( VAR_2 ) ) ) { VAR_1 = VAR_1 . METHOD_4 ( VAR_2 ) ; } this . VAR_1 = VAR_1 ; METHOD_5 ( ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { this . VAR_1 = VAR_2 ; } if ( ! ( VAR_1 . METHOD_3 ( VAR_2 ) ) ) { this . VAR_1 = VAR_1 . METHOD_4 ( VAR_2 ) ; } this . VAR_1 = VAR_1 ; METHOD_5 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 . METHOD_2 ( ) ) ) ; new TYPE_2 ( ) . METHOD_3 ( VAR_2 . getColor ( ) ) . METHOD_4 ( VAR_4 ) . METHOD_5 ( VAR_5 ) . METHOD_6 ( new TYPE_3 ( ) { public void METHOD_6 ( int VAR_6 ) { VAR_7 = VAR_6 ; VAR_3 . METHOD_7 ( VAR_6 ) ; } } ) . METHOD_8 ( ) . show ( METHOD_9 ( ) , STRING_1 ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 . METHOD_2 ( ) ) ) ; new TYPE_2 ( ) . METHOD_3 ( VAR_7 ) . METHOD_4 ( VAR_4 ) . METHOD_5 ( VAR_5 ) . METHOD_6 ( new TYPE_3 ( ) { public void METHOD_6 ( int VAR_6 ) { VAR_7 = VAR_6 ; VAR_3 . METHOD_7 ( VAR_6 ) ; } } ) . METHOD_8 ( ) . show ( METHOD_9 ( ) , STRING_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . toString ( ) ; if ( ( ( VAR_2 . length ( ) ) == INT_1 ) && ( ! ( VAR_2 . startsWith ( STRING_1 ) ) ) ) { VAR_2 = STRING_1 + VAR_2 ; } if ( ( VAR_2 . length ( ) ) < INT_2 ) { TYPE_2 . METHOD_2 ( getActivity ( ) , VAR_3 , VAR_4 ) . show ( ) ; METHOD_3 ( ) ; return ; } METHOD_4 ( VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . toString ( ) ; if ( ( ( VAR_2 . length ( ) ) == INT_1 ) && ( ! ( VAR_2 . startsWith ( STRING_1 ) ) ) ) { VAR_2 = STRING_1 + VAR_2 ; } if ( ( VAR_2 . length ( ) ) < INT_2 ) { METHOD_3 ( ) ; return ; } METHOD_4 ( VAR_2 ) ; }\n"}
{"fixCommitSHA1": "4b6a875c285429e1630c1839872d9c2990364714", "projectName": "apache.camel", "bugType": "Change Numeric Literal", "problem": "         assertNotNull(camel);\n         MockEndpoint mock = camel.getEndpoint(\"mock:result\", MockEndpoint.class);\n        mock.expectedMinimumMessageCount(3);\n         mock.assertIsSatisfied();", "fixed": "         assertNotNull(camel);\n         MockEndpoint mock = camel.getEndpoint(\"mock:result\", MockEndpoint.class);\n        mock.expectedMinimumMessageCount(2);\n         mock.assertIsSatisfied();", "sourceBeforeFix": "mock.expectedMinimumMessageCount(3)", "sourceAfterFix": "mock.expectedMinimumMessageCount(2)"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 name = VAR_1 . name ( ) ; if ( VAR_1 . value ( ) . value ( ) . METHOD_2 ( VAR_2 ) ) { TYPE_2 value = ( ( TYPE_2 ) ( VAR_1 . value ( ) . value ( ) ) ) ; if ( name . text ( ) . equals ( value . text ( ) ) ) { throw new TYPE_3 ( STRING_1 ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 name = VAR_1 . name ( ) ; if ( VAR_1 . value ( ) . value ( ) . METHOD_2 ( VAR_2 ) ) { TYPE_2 value = ( ( TYPE_2 ) ( VAR_1 . value ( ) . value ( ) ) ) ; if ( name . text ( ) . equals ( value . text ( ) ) ) { throw new TYPE_3 ( STRING_1 ) ; } } super . METHOD_1 ( VAR_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 = VAR_1 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( TYPE_3 . METHOD_6 ( new TYPE_4 ( VAR_3 , VAR_4 ) ) ) ; java.lang.System.out.println ( STRING_2 ) ; java.lang.System.out.println ( VAR_3 ) ; java.lang.System.out.println ( VAR_4 ) ; java.lang.System.out.println ( STRING_2 ) ; METHOD_7 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 = VAR_1 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( TYPE_3 . METHOD_6 ( new TYPE_4 ( VAR_3 , VAR_4 ) ) ) ; java.lang.System.out.println ( STRING_2 ) ; java.lang.System.out.println ( VAR_3 ) ; java.lang.System.out.println ( VAR_4 ) ; java.lang.System.out.println ( STRING_2 ) ; }\n"}
{"problem": "private java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 position ) { TYPE_3 VAR_1 = METHOD_2 ( position ) ; if ( ( VAR_1 == null ) || ( ( VAR_1 . getColor ( ) ) != ( VAR_2 ) ) ) return null ; java.util.ArrayList < TYPE_1 > VAR_3 = VAR_1 . METHOD_3 ( position , this ) ; return VAR_3 ; }\n", "fixed": "private java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 position ) { TYPE_3 VAR_1 = METHOD_2 ( position ) ; if ( ( VAR_1 == null ) || ( ( VAR_1 . getColor ( ) ) != ( VAR_2 ) ) ) return new java.util.ArrayList < > ( ) ; java.util.ArrayList < TYPE_1 > VAR_3 = VAR_1 . METHOD_3 ( position , this ) ; return VAR_3 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { for ( TYPE_2 VAR_2 : VAR_3 . METHOD_2 ( VAR_4 ) ) { if ( ( VAR_2 instanceof TYPE_1 ) && ( VAR_2 . toString ( ) . METHOD_3 ( getName ( ) ) ) ) { VAR_1 = ( ( TYPE_1 ) ( VAR_2 ) ) ; } } } return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { for ( TYPE_2 VAR_2 : VAR_3 . METHOD_2 ( VAR_4 ) ) { if ( VAR_2 instanceof TYPE_1 ) { VAR_1 = ( ( TYPE_1 ) ( VAR_2 ) ) ; } } } return VAR_1 ; }\n"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n     String invalidRolloutPlanGroupAlreadyExists(String group);\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n     String invalidRolloutPlanGroupAlreadyExists(String group);\n     /**", "sourceBeforeFix": "id=15843", "sourceAfterFix": "id=10843"}
{"problem": "private void METHOD_1 ( TYPE_1 data , TYPE_2 VAR_1 ) throws TYPE_3 { if ( ( getIntent ( ) ) == null ) { VAR_1 . error ( STRING_1 ) ; } if ( VAR_2 ) { TYPE_4 VAR_3 = VAR_4 ; } else { TYPE_4 VAR_3 = VAR_5 . METHOD_2 ( VAR_6 ) ; } TYPE_5 [ ] VAR_7 = TYPE_6 . METHOD_3 ( data . getString ( 0 ) ) ; METHOD_4 ( new TYPE_7 ( VAR_7 ) , VAR_3 , VAR_1 ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 data , TYPE_2 VAR_1 ) throws TYPE_3 { if ( ( getIntent ( ) ) == null ) { VAR_1 . error ( STRING_1 ) ; } TYPE_4 VAR_3 = VAR_4 ; if ( ! ( VAR_2 ) ) { VAR_3 = VAR_5 . METHOD_2 ( VAR_6 ) ; } TYPE_5 [ ] VAR_7 = TYPE_6 . METHOD_3 ( data . getString ( 0 ) ) ; METHOD_4 ( new TYPE_7 ( VAR_7 ) , VAR_3 , VAR_1 ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 state , TYPE_4 VAR_3 , TYPE_5 VAR_4 , TYPE_6 VAR_5 , float VAR_6 , float VAR_7 , float VAR_8 ) { if ( ! ( state . getValue ( VAR_9 ) ) ) { if ( TYPE_7 . METHOD_2 ( VAR_1 , VAR_2 ) ) { VAR_1 . METHOD_3 ( null , VAR_2 , VAR_10 , VAR_11 , 1.0F , FLOAT_1 ) ; } else { TYPE_7 . METHOD_4 ( VAR_1 , VAR_2 ) ; } return true ; } else { return false ; } }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 state , TYPE_4 VAR_3 , TYPE_5 VAR_4 , TYPE_6 VAR_5 , float VAR_6 , float VAR_7 , float VAR_8 ) { if ( ! ( state . getValue ( VAR_9 ) ) ) { if ( TYPE_7 . METHOD_2 ( VAR_1 , VAR_2 ) ) { VAR_1 . METHOD_3 ( null , VAR_2 , VAR_10 , VAR_11 , 1.0F , FLOAT_1 ) ; } else { TYPE_7 . METHOD_4 ( VAR_1 , VAR_2 , state ) ; } return true ; } else { return false ; } }\n"}
{"fixCommitSHA1": "8fdd403b6c8331d56890de3165b7a0e77a0eaa42", "projectName": "apache.flink", "bugType": "Change Modifier", "problem": " \t * @param from The element to copy.\n \t * @return A copy of the given element.\n \t */\n\tpublic T createCopy(T from);\n \t/**\n \t * Creates a copy from the given element, storing the copied result in the given target element.", "fixed": " \t * @param from The element to copy.\n \t * @return A copy of the given element.\n \t */\n\tpublic abstract T createCopy(T from);\n \t/**\n \t * Creates a copy from the given element, storing the copied result in the given target element.", "sourceBeforeFix": "1", "sourceAfterFix": "1025"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { TYPE_4 VAR_2 = METHOD_2 ( VAR_3 , VAR_1 . toString ( ) ) ; TYPE_4 VAR_4 = METHOD_2 ( VAR_5 , TYPE_5 . METHOD_3 ( ) ) ; try { return METHOD_4 ( METHOD_5 ( VAR_2 , VAR_4 ) ) . get ( 0 ) ; } catch ( TYPE_6 | TYPE_7 | TYPE_8 VAR_6 ) { throw new TYPE_3 ( VAR_6 ) ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { TYPE_4 VAR_2 = METHOD_2 ( VAR_3 , VAR_1 . toString ( ) ) ; try { return METHOD_4 ( METHOD_5 ( VAR_2 ) ) . get ( 0 ) ; } catch ( TYPE_6 | TYPE_7 | TYPE_8 VAR_6 ) { throw new TYPE_3 ( VAR_6 ) ; } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 a , TYPE_1 VAR_1 ) { TYPE_1 b = VAR_2 ; if ( a == ( VAR_3 ) ) { VAR_3 = b ; } else if ( ( VAR_4 ) == a ) { VAR_4 = b ; } else { VAR_5 = a ; } VAR_2 = VAR_6 ; VAR_6 = a ; METHOD_2 ( ( ( TYPE_2 ) ( a ) ) ) ; METHOD_2 ( ( ( TYPE_2 ) ( b ) ) ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 a , TYPE_1 VAR_1 ) { TYPE_1 b = VAR_2 ; if ( a == ( VAR_3 ) ) { VAR_3 = b ; } else if ( ( VAR_4 ) == a ) { VAR_4 = b ; } else { VAR_5 = b ; } VAR_2 = VAR_6 ; VAR_6 = a ; METHOD_2 ( ( ( TYPE_2 ) ( a ) ) ) ; METHOD_2 ( ( ( TYPE_2 ) ( b ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = this . VAR_2 . METHOD_2 ( VAR_3 , TYPE_2 , this . VAR_4 ) ; METHOD_3 ( TYPE_2 . METHOD_4 ( ) . iterator ( ) . METHOD_5 ( ) , null , VAR_3 ) ; this . VAR_5 . METHOD_6 ( VAR_6 class ) ; this . VAR_5 . METHOD_7 ( STRING_1 ) ; VAR_1 . execute ( ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = this . VAR_2 . METHOD_2 ( VAR_3 , TYPE_2 ) ; METHOD_3 ( TYPE_2 . METHOD_4 ( ) . iterator ( ) . METHOD_5 ( ) , null , VAR_3 ) ; this . VAR_5 . METHOD_6 ( VAR_6 class ) ; this . VAR_5 . METHOD_7 ( STRING_1 ) ; VAR_1 . execute ( ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String url , java.lang.String VAR_2 , int VAR_3 , int height ) { TYPE_1 VAR_4 = TYPE_3 . METHOD_2 ( false , false ) ; if ( TYPE_4 . METHOD_3 ( VAR_5 , VAR_1 , VAR_4 , url , VAR_2 , VAR_3 , height ) ) { return VAR_4 ; } if ( VAR_4 != null ) VAR_4 . METHOD_4 ( ) ; return null ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String url , java.lang.String VAR_2 , int VAR_3 , int height ) { TYPE_1 VAR_4 = TYPE_3 . METHOD_2 ( false , false ) ; if ( METHOD_1 ( VAR_1 , VAR_4 , url , VAR_2 , VAR_3 , height ) ) { return VAR_4 ; } if ( VAR_4 != null ) VAR_4 . METHOD_4 ( ) ; return null ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == ( VAR_3 ) ) { VAR_2 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_4 ( VAR_6 ) ; } else { VAR_2 . METHOD_3 ( VAR_7 ) ; VAR_8 . METHOD_4 ( VAR_9 ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == ( VAR_3 ) ) { VAR_2 . METHOD_3 ( VAR_4 ) ; VAR_2 . METHOD_4 ( VAR_6 ) ; } else { VAR_2 . METHOD_3 ( VAR_7 ) ; VAR_2 . METHOD_4 ( VAR_9 ) ; } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 event ) { TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( ( ( TYPE_4 ) ( event ) ) . METHOD_3 ( ) , VAR_3 , VAR_4 ) ; VAR_2 . METHOD_4 ( VAR_5 ) ; for ( java.lang.String VAR_6 : VAR_7 ) { VAR_2 . METHOD_5 ( VAR_6 ) ; } VAR_2 . METHOD_6 ( ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 event ) { VAR_2 = VAR_1 . METHOD_2 ( ( ( TYPE_4 ) ( event ) ) . METHOD_3 ( ) , VAR_3 , VAR_4 ) ; VAR_2 . METHOD_4 ( VAR_5 ) ; for ( java.lang.String VAR_6 : VAR_7 ) { VAR_2 . METHOD_5 ( VAR_6 ) ; } VAR_2 . METHOD_6 ( ) ; }\n"}
{"fixCommitSHA1": "5b13fe70c25812157a1e4432135eb9639e72bc6a", "projectName": "apache.flink", "bugType": "Change Identifier Used", "problem": " \t\tfinal Sink output = new Sink(\"output.json\").withInputs(selection);\n \t\texpectedPlan.setSinks(output);\n\t\tassertEquals(expectedPlan, actualPlan);\n \t}\n \t@Test", "fixed": " \t\tfinal Sink output = new Sink(\"output.json\").withInputs(selection);\n \t\texpectedPlan.setSinks(output);\n\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \t@Test", "sourceBeforeFix": "assertEquals(expectedPlan,actualPlan)", "sourceAfterFix": "assertPlanEquals(expectedPlan,actualPlan)"}
{"problem": "public static void METHOD_1 ( ) throws TYPE_1 , TYPE_2 , java.io.IOException { TYPE_3 . METHOD_2 ( STRING_1 ) ; TYPE_3 . METHOD_3 ( STRING_2 ) ; TYPE_3 . METHOD_4 ( STRING_3 ) ; TYPE_4 . METHOD_5 ( ) ; METHOD_6 ( VAR_1 , VAR_2 , STRING_4 , STRING_5 ) ; METHOD_7 ( VAR_1 , VAR_3 , STRING_4 ) ; TYPE_4 . METHOD_8 ( ) ; }\n", "fixed": "public static void METHOD_1 ( ) throws TYPE_1 , TYPE_2 , java.io.IOException { TYPE_3 . METHOD_2 ( STRING_1 ) ; TYPE_3 . METHOD_3 ( STRING_2 ) ; TYPE_3 . METHOD_4 ( STRING_3 ) ; TYPE_4 . METHOD_5 ( ) ; METHOD_7 ( VAR_1 , VAR_3 , STRING_4 ) ; TYPE_4 . METHOD_8 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; java.util.Calendar VAR_2 = java.util.Calendar.getInstance ( ) ; int VAR_3 = INT_1 ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_3 ( new TYPE_3 ( ) { public void METHOD_4 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_2 ) ; METHOD_5 ( ) ; } } , VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.util.Calendar VAR_2 = java.util.Calendar.getInstance ( ) ; int VAR_3 = INT_1 ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_3 ( new TYPE_3 ( ) { public void METHOD_4 ( ) { METHOD_5 ( ) ; } } , VAR_3 ) ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory optimizeArgumentsArray =\n       new PassFactory(\"optimizeArgumentsArray\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory optimizeArgumentsArray =\n       new PassFactory(\"optimizeArgumentsArray\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public java.util.List < java.lang.String > METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; for ( java.lang.String VAR_2 : this . VAR_3 ) { for ( java.lang.String VAR_4 : this . VAR_5 . get ( VAR_2 ) ) { if ( METHOD_2 ( VAR_4 ) ) { VAR_1 . add ( VAR_4 ) ; } } } VAR_1 . METHOD_3 ( VAR_6 ) ; return VAR_1 ; }\n", "fixed": "public java.util.List < java.lang.String > METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; for ( java.lang.String VAR_2 : this . VAR_3 ) { for ( java.lang.String VAR_4 : this . VAR_5 . get ( VAR_2 ) ) { if ( METHOD_2 ( VAR_4 ) ) { VAR_1 . add ( VAR_4 ) ; } } } VAR_1 . METHOD_3 ( this . VAR_6 ) ; return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( true ) ; METHOD_2 ( ) . METHOD_4 ( ) ; METHOD_2 ( ) . METHOD_5 ( ) ; if ( VAR_1 == null ) { new TYPE_2 ( this ) . show ( false ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( true ) ; METHOD_2 ( ) . METHOD_4 ( true ) ; METHOD_2 ( ) . METHOD_5 ( ) ; if ( VAR_1 == null ) { new TYPE_2 ( this ) . show ( false ) ; } }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory latePeepholeOptimizations =\n       new PassFactory(\"latePeepholeOptimizations\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory latePeepholeOptimizations =\n       new PassFactory(\"latePeepholeOptimizations\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } METHOD_3 ( true ) ; VAR_1 = new TYPE_1 ( ) . METHOD_4 ( METHOD_5 ( ) ) . METHOD_6 ( new TYPE_2 ( ) ) . METHOD_7 ( VAR_2 ) . METHOD_8 ( VAR_3 ) . METHOD_9 ( VAR_4 ) . build ( ) ; VAR_1 . start ( ) ; }\n", "fixed": "private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return ; } METHOD_3 ( true ) ; VAR_1 = new TYPE_1 ( ) . METHOD_4 ( METHOD_5 ( ) ) . METHOD_6 ( new TYPE_2 ( ) ) . METHOD_7 ( VAR_2 ) . METHOD_8 ( VAR_3 ) . METHOD_9 ( VAR_4 ) . build ( ) ; VAR_1 . start ( ) ; }\n"}
{"problem": "public boolean METHOD_1 ( java.util.Map < java.lang.Integer , java.lang.Integer > VAR_1 ) { if ( VAR_1 == null ) { return true ; } if ( ( VAR_2 ) == null ) { this . VAR_2 = new TYPE_1 < java.lang.Integer > ( VAR_1 ) ; } else { VAR_2 . METHOD_2 ( VAR_1 ) ; } return true ; }\n", "fixed": "public boolean METHOD_1 ( java.util.Map < java.lang.Integer , java.lang.Integer > VAR_1 ) { if ( VAR_1 == null ) { return true ; } if ( ( VAR_2 ) == null ) { this . VAR_2 = new TYPE_1 < java.lang.Integer > ( ) ; } VAR_2 . METHOD_2 ( VAR_1 ) ; return true ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; VAR_1 . remove ( TYPE_2 . METHOD_3 ( VAR_2 class ) ) ; TYPE_3 . assertEquals ( INT_1 , VAR_1 . size ( ) ) ; TYPE_4 VAR_3 = TYPE_5 . METHOD_4 ( ) . METHOD_5 ( new TYPE_6 ( ) ) . METHOD_5 ( new TYPE_7 ( ) ) . METHOD_5 ( new TYPE_8 ( ) ) . METHOD_5 ( new TYPE_9 ( ) ) . build ( ) ; VAR_3 . METHOD_6 ( VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 . assertEquals ( INT_1 , VAR_1 . size ( ) ) ; TYPE_4 VAR_3 = TYPE_5 . METHOD_4 ( ) . METHOD_5 ( new TYPE_6 ( ) ) . METHOD_5 ( new TYPE_7 ( ) ) . METHOD_5 ( new TYPE_8 ( ) ) . METHOD_5 ( new TYPE_9 ( ) ) . build ( ) ; VAR_3 . METHOD_6 ( VAR_1 ) ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { java.lang.StringBuilder buf = new java.lang.StringBuilder ( VAR_1 ) ; for ( int i = index ; i < ( VAR_2 . length ) ; i ++ ) { if ( ( buf . length ( ) ) > 0 ) buf . append ( CHAR_1 ) ; buf . append ( VAR_2 [ i ] ) ; } return buf . toString ( ) ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { java.lang.StringBuilder buf = new java.lang.StringBuilder ( ) ; for ( int i = index ; i < ( VAR_2 . length ) ; i ++ ) { if ( ( buf . length ( ) ) > 0 ) buf . append ( CHAR_1 ) ; buf . append ( VAR_2 [ i ] ) ; } return buf . toString ( ) ; }\n"}
{"problem": "public void METHOD_1 ( java.util.Set < TYPE_1 > VAR_1 ) { for ( TYPE_1 n : VAR_1 ) { VAR_2 . put ( n . getId ( ) , n ) ; } this . VAR_3 = ( ( ( VAR_2 . size ( ) ) - 1 ) * ( VAR_4 ) ) * INT_1 ; }\n", "fixed": "public void METHOD_1 ( java.util.Set < TYPE_1 > VAR_1 ) { for ( TYPE_1 n : VAR_1 ) { VAR_2 . put ( n . getId ( ) , n ) ; } this . VAR_3 = ( ( VAR_2 . size ( ) ) - 1 ) * ( VAR_4 ) ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   \n  private final PassFactory crossModuleMethodMotion =\n       new PassFactory(\"crossModuleMethodMotion\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   \n  final PassFactory crossModuleMethodMotion =\n       new PassFactory(\"crossModuleMethodMotion\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public static TYPE_1 METHOD_1 ( TYPE_1 [ ] [ ] VAR_1 , java.lang.String name ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; ++ i ) { for ( int j = 0 ; j < ( VAR_1 . length ) ; ++ j ) { if ( VAR_1 [ i ] [ j ] . getName ( ) . equals ( name . trim ( ) ) ) { return VAR_1 [ i ] [ j ] ; } } } return null ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( TYPE_1 [ ] [ ] VAR_1 , java.lang.String name ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; ++ i ) { for ( int j = 0 ; j < ( VAR_1 [ i ] . length ) ; ++ j ) { if ( VAR_1 [ i ] [ j ] . getName ( ) . equals ( name . trim ( ) ) ) { return VAR_1 [ i ] [ j ] ; } } } return null ; }\n"}
{"problem": "protected TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { final TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( new TYPE_3 < java.lang.Long , TYPE_4 > ( ) { public java.lang.Long METHOD_2 ( final TYPE_4 VAR_4 , final TYPE_5 status ) throws java.lang.Exception { VAR_4 . METHOD_3 ( new TYPE_6 ( VAR_1 ) ) ; return VAR_4 . METHOD_4 ( ) ; } } ) ; METHOD_5 ( VAR_1 , VAR_2 ) ; return VAR_2 ; }\n", "fixed": "protected TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { final TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( new TYPE_3 < java.lang.Long , TYPE_4 > ( ) { public java.lang.Long METHOD_2 ( final TYPE_4 VAR_4 , final TYPE_5 status ) throws java.lang.Exception { VAR_4 . METHOD_3 ( new TYPE_6 ( VAR_1 ) ) ; return VAR_4 . METHOD_4 ( ) ; } } ) ; METHOD_5 ( VAR_1 , VAR_2 . toString ( ) ) ; return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 -= 1 ; switch ( VAR_1 ) { case 0 : VAR_2 . METHOD_2 ( VAR_3 ) ; break ; case 1 : VAR_4 . METHOD_2 ( VAR_3 ) ; break ; case INT_1 : VAR_5 . METHOD_2 ( VAR_3 ) ; break ; case INT_2 : VAR_6 . METHOD_2 ( VAR_7 ) ; break ; case INT_3 : VAR_8 . METHOD_2 ( VAR_7 ) ; break ; default : METHOD_3 ( ) ; break ; } }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 -= 1 ; switch ( VAR_1 ) { case 0 : VAR_2 . METHOD_2 ( VAR_3 ) ; break ; case 1 : VAR_4 . METHOD_2 ( VAR_3 ) ; break ; case INT_1 : VAR_5 . METHOD_2 ( VAR_3 ) ; break ; case INT_2 : VAR_6 . METHOD_2 ( VAR_7 ) ; break ; case INT_3 : VAR_8 . METHOD_2 ( VAR_7 ) ; break ; default : METHOD_3 ( ) ; break ; } }\n"}
{"problem": "public static boolean METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String [ ] VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; java.lang.String name = VAR_2 [ 0 ] ; for ( TYPE_2 VAR_3 : TYPE_2 . values ( ) ) { if ( ( VAR_4 . equals ( name ) ) && ( ( VAR_5 ) instanceof TYPE_3 ) ) { return true ; } } return TYPE_4 . METHOD_3 ( name ) ; }\n", "fixed": "public static boolean METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String [ ] VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; java.lang.String name = VAR_2 [ 0 ] . toUpperCase ( ) ; for ( TYPE_2 VAR_3 : TYPE_2 . values ( ) ) { if ( ( VAR_4 . equals ( name ) ) && ( ( VAR_5 ) instanceof TYPE_3 ) ) { return true ; } } return TYPE_4 . METHOD_3 ( name ) ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   }\n   \n  private final PassFactory renameVars =\n       new PassFactory(\"renameVars\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "fixed": "   }\n   \n  final PassFactory renameVars =\n       new PassFactory(\"renameVars\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public void METHOD_1 ( TYPE_1 update ) { TYPE_2 VAR_1 = METHOD_2 ( update ) ; try { TYPE_3 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 == null ) throw new TYPE_4 ( ( STRING_1 + VAR_1 ) ) ; VAR_2 . handle ( update ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_5 . error ( VAR_4 . METHOD_3 ( ) , VAR_4 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 update ) { try { TYPE_2 VAR_1 = METHOD_2 ( update ) ; if ( VAR_1 == null ) return ; TYPE_3 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 == null ) throw new TYPE_4 ( ( STRING_1 + VAR_1 ) ) ; VAR_2 . handle ( update ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_5 . error ( VAR_4 . METHOD_3 ( ) , VAR_4 ) ; } }\n"}
{"problem": "private long METHOD_1 ( java.lang.String VAR_1 ) { long output ; output = VAR_2 [ 0 ] . METHOD_2 ( VAR_1 . METHOD_3 ( 0 ) ) ; for ( int i = 1 ; i < ( length ) ; i ++ ) { output = ( output * ( VAR_3 [ ( i - 1 ) ] ) ) + ( VAR_2 [ i ] . METHOD_2 ( VAR_1 . METHOD_3 ( i ) ) ) ; } return output ; }\n", "fixed": "protected long METHOD_1 ( java.lang.String VAR_1 ) { long output = 0 ; for ( int i = 0 ; i < ( length ) ; i ++ ) { output = ( output * ( VAR_3 [ i ] ) ) + ( VAR_2 [ i ] . METHOD_2 ( VAR_1 . METHOD_3 ( i ) ) ) ; } return output ; }\n"}
{"problem": "private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } else { VAR_1 = new TYPE_1 ( ) ; } VAR_1 . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( ) { METHOD_5 ( ) ; } } , ( ( INT_1 * INT_2 ) * INT_3 ) ) ; }\n", "fixed": "private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( ) { METHOD_5 ( ) ; } } , ( ( INT_1 * INT_2 ) * INT_3 ) ) ; }\n"}
{"fixCommitSHA1": "3757a700a89638e5747d966bdaa8266b62c974c8", "projectName": "google.guava", "bugType": "Change Modifier", "problem": "   }\n   @GwtIncompatible(\"Reader/Writer\")\n  private void testStreamingEncodingWithSeparators(\n       BaseEncoding encoding, String decoded, String encoded) throws IOException {\n     testStreamingEncoding(encoding, decoded, encoded);", "fixed": "   }\n   @GwtIncompatible(\"Reader/Writer\")\n  private static void testStreamingEncodingWithSeparators(\n       BaseEncoding encoding, String decoded, String encoded) throws IOException {\n     testStreamingEncoding(encoding, decoded, encoded);", "sourceBeforeFix": "2", "sourceAfterFix": "10"}
{"problem": "public TYPE_1 remove ( TYPE_2 key ) { TYPE_1 value = null ; for ( int i = 0 ; i < ( size ) ; i ++ ) { if ( values [ i ] . METHOD_1 ( ) . equals ( key ) ) { value = values [ i ] . getValue ( ) ; values [ i ] = null ; ( size ) -- ; METHOD_2 ( i ) ; } } return value ; }\n", "fixed": "public TYPE_1 remove ( TYPE_2 key ) { TYPE_1 value = null ; for ( int i = 0 ; i < ( size ) ; i ++ ) { if ( ( ( values [ i ] ) != null ) && ( values [ i ] . METHOD_1 ( ) . equals ( key ) ) ) { value = values [ i ] . getValue ( ) ; values [ i ] = null ; ( size ) -- ; METHOD_2 ( i ) ; } } return value ; }\n"}
{"problem": "public static void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , TYPE_1 VAR_4 , TYPE_2 to ) throws java.io.IOException { TYPE_3 VAR_5 = new TYPE_3 ( VAR_6 , VAR_1 , VAR_2 ) ; VAR_5 . METHOD_2 ( new TYPE_4 ( VAR_3 , TYPE_5 . METHOD_3 ( VAR_4 ) ) ) ; TYPE_6 . METHOD_4 ( VAR_5 , to ) ; }\n", "fixed": "public void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , TYPE_1 VAR_4 , TYPE_2 to ) throws java.io.IOException { TYPE_3 VAR_5 = new TYPE_3 ( VAR_6 , VAR_1 , VAR_2 ) ; VAR_5 . METHOD_2 ( new TYPE_4 ( VAR_3 , METHOD_3 ( VAR_4 ) ) ) ; TYPE_6 . METHOD_4 ( VAR_5 , to ) ; }\n"}
{"problem": "public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class , true ) ; boolean VAR_3 = true ; boolean VAR_4 = true ; boolean VAR_5 = false ; boolean VAR_6 = true ; boolean VAR_7 = true ; boolean VAR_8 = true ; TYPE_2 . METHOD_3 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 ) ; VAR_9 = TYPE_2 . METHOD_4 ( ) ; TYPE_3 . index = TYPE_2 . METHOD_5 ( ) ; TYPE_4 . METHOD_6 ( STRING_1 , VAR_1 ) ; }\n", "fixed": "public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class , true ) ; boolean VAR_3 = true ; boolean VAR_4 = true ; boolean VAR_5 = false ; boolean VAR_6 = true ; boolean VAR_7 = true ; boolean VAR_8 = false ; TYPE_2 . METHOD_3 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 ) ; VAR_9 = TYPE_2 . METHOD_4 ( ) ; TYPE_3 . index = TYPE_2 . METHOD_5 ( ) ; TYPE_4 . METHOD_6 ( STRING_1 , VAR_1 ) ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory closureCodeRemoval =\n       new PassFactory(\"closureCodeRemoval\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory closureCodeRemoval =\n       new PassFactory(\"closureCodeRemoval\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "d4468b05034b3c4166195394e88eed6633bec842", "projectName": "jersey.jersey", "bugType": "Change Identifier Used", "problem": "                         warnings.append(LocalizationMessages.WARNING_MSG(error.getMessage())).append('\\n');\n                         break;\n                     case HINT:\n                        warnings.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n                         break;\n                 }\n             }", "fixed": "                         warnings.append(LocalizationMessages.WARNING_MSG(error.getMessage())).append('\\n');\n                         break;\n                     case HINT:\n                        hints.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n                         break;\n                 }\n             }", "sourceBeforeFix": "warnings.append(LocalizationMessages.HINT_MSG(error.getMessage()))", "sourceAfterFix": "hints.append(LocalizationMessages.HINT_MSG(error.getMessage()))"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , int item ) { if ( item == 0 ) { TYPE_2 . METHOD_2 ( this , VAR_2 . METHOD_3 ( ) , VAR_3 ) ; TYPE_2 . METHOD_2 ( this , VAR_2 . METHOD_3 ( ) , VAR_4 ) ; } else { TYPE_2 . METHOD_2 ( this , VAR_5 . get ( ( item - 1 ) ) . METHOD_4 ( ) , VAR_3 ) ; } METHOD_5 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , int item ) { if ( item == 0 ) { TYPE_2 . METHOD_2 ( this , VAR_2 . METHOD_3 ( ) , VAR_3 ) ; TYPE_2 . METHOD_2 ( this , VAR_2 . METHOD_3 ( ) , VAR_4 ) ; } else { TYPE_2 . METHOD_2 ( this , VAR_5 . get ( ( item - 1 ) ) . METHOD_4 ( ) , VAR_3 ) ; TYPE_2 . METHOD_2 ( this , VAR_2 . METHOD_3 ( ) , VAR_4 ) ; } METHOD_5 ( ) ; }\n"}
{"problem": "public TYPE_1 [ ] METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) for ( int j = 0 ; j < ( VAR_2 ) ; j ++ ) { short [ ] VAR_3 = METHOD_2 ( i , j ) ; METHOD_3 ( i , j , VAR_3 ) ; } METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; return VAR_4 . METHOD_7 ( ) ; }\n", "fixed": "public TYPE_1 [ ] METHOD_1 ( ) { for ( int j = 0 ; j < ( VAR_2 ) ; j ++ ) { for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) { short [ ] VAR_3 = METHOD_2 ( i , j ) ; METHOD_3 ( i , j , VAR_3 ) ; } } METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; return VAR_4 . METHOD_7 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , java.io.IOException VAR_2 ) { getActivity ( ) . METHOD_2 ( new TYPE_2 ( ) { public void METHOD_3 ( ) { TYPE_3 . METHOD_4 ( getActivity ( ) , VAR_3 , VAR_4 ) . show ( ) ; } } ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , java.io.IOException VAR_2 ) { if ( ( getActivity ( ) ) != null ) { getActivity ( ) . METHOD_2 ( new TYPE_2 ( ) { public void METHOD_3 ( ) { TYPE_3 . METHOD_4 ( getActivity ( ) , VAR_3 , VAR_4 ) . show ( ) ; } } ) ; } }\n"}
{"fixCommitSHA1": "8fdd403b6c8331d56890de3165b7a0e77a0eaa42", "projectName": "apache.flink", "bugType": "Change Modifier", "problem": " \t * \n* @see NormalizableKey\n \t */\n\tpublic void putNormalizedKey(T record, byte[] target, int offset, int numBytes);\n \t/**\n \t * Writes the record in such a fashion that all keys are normalizing and at the beginning of the serialized data.", "fixed": " \t * \n* @see NormalizableKey\n \t */\n\tpublic abstract void putNormalizedKey(T record, byte[] target, int offset, int numBytes);\n \t/**\n \t * Writes the record in such a fashion that all keys are normalizing and at the beginning of the serialized data.", "sourceBeforeFix": "1", "sourceAfterFix": "1025"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { java.util.List < java.lang.String > VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; if ( VAR_2 . contains ( STRING_2 ) ) VAR_3 = VAR_1 . METHOD_4 ( STRING_2 ) ; if ( VAR_2 . contains ( STRING_3 ) ) VAR_4 = TYPE_3 . METHOD_5 ( VAR_1 . METHOD_6 ( STRING_4 ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { java.util.List < java.lang.String > VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; if ( VAR_2 . contains ( STRING_2 ) ) VAR_3 = VAR_1 . METHOD_4 ( STRING_2 ) ; if ( VAR_2 . contains ( STRING_4 ) ) VAR_4 = TYPE_3 . METHOD_5 ( VAR_1 . METHOD_6 ( STRING_4 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 = java.lang.Thread . METHOD_2 ( ) ; VAR_2 = false ; int count = 0 ; while ( ! ( VAR_2 ) ) { METHOD_3 ( ) ; java.lang.System.out.println ( ( STRING_1 + count ) ) ; count ++ ; try { java.lang.Thread . METHOD_4 ( INT_1 ) ; } catch ( TYPE_1 x ) { java.lang.Thread . METHOD_2 ( ) . METHOD_5 ( ) ; } } }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 = java.lang.Thread . METHOD_2 ( ) ; VAR_2 = false ; int count = 0 ; while ( ! ( VAR_2 ) ) { METHOD_3 ( ) ; try { java.lang.Thread . METHOD_4 ( INT_1 ) ; } catch ( TYPE_1 x ) { java.lang.Thread . METHOD_2 ( ) . METHOD_5 ( ) ; } } }\n"}
{"problem": "private boolean METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , TYPE_1 VAR_3 ) { boolean VAR_4 = false ; TYPE_1 VAR_5 = METHOD_2 ( VAR_1 ) ; if ( ( java.lang.Math.abs ( ( ( VAR_2 . x ) - ( VAR_5 . x ) ) ) ) < ( java.lang.Math.abs ( ( ( VAR_3 . x ) - ( VAR_5 . x ) ) ) ) ) { VAR_4 = true ; } return VAR_4 ; }\n", "fixed": "private boolean METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , TYPE_1 VAR_3 ) { boolean VAR_4 = false ; TYPE_1 VAR_5 = METHOD_2 ( VAR_1 ) ; if ( ( java.lang.Math.abs ( ( ( VAR_2 . y ) - ( VAR_5 . y ) ) ) ) < ( java.lang.Math.abs ( ( ( VAR_3 . y ) - ( VAR_5 . y ) ) ) ) ) { VAR_4 = true ; } return VAR_4 ; }\n"}
{"problem": "public static java.lang.String METHOD_1 ( java.lang.String TYPE_1 ) { java.lang.String VAR_1 = STRING_1 ; for ( byte VAR_2 = 0 ; VAR_2 < ( TYPE_1 . length ( ) ) ; VAR_2 ++ ) { if ( ( TYPE_1 . METHOD_2 ( VAR_2 ) ) == CHAR_1 ) { VAR_1 = VAR_1 + STRING_2 ; } else { VAR_1 = VAR_1 + STRING_3 ; } } return VAR_1 ; }\n", "fixed": "private static java.lang.String METHOD_1 ( java.lang.String TYPE_1 ) { java.lang.String VAR_1 = STRING_1 ; for ( byte VAR_2 = 0 ; VAR_2 < ( TYPE_1 . length ( ) ) ; VAR_2 ++ ) { if ( ( TYPE_1 . METHOD_2 ( VAR_2 ) ) == CHAR_1 ) { VAR_1 = VAR_1 + STRING_2 ; } else { VAR_1 = VAR_1 + STRING_3 ; } } return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_2 ( STRING_2 ) ; TYPE_1 . METHOD_6 ( STRING_3 , VAR_1 . METHOD_3 ( ) , TYPE_2 . METHOD_7 ( ) ) ; final TYPE_3 results = VAR_1 . METHOD_8 ( ) ; TYPE_1 . METHOD_6 ( STRING_4 , results . METHOD_9 ( ) , TYPE_4 . METHOD_10 ( 0 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_2 ( STRING_2 ) ; METHOD_6 ( STRING_3 , VAR_1 . METHOD_3 ( ) , TYPE_2 . METHOD_7 ( ) ) ; final TYPE_3 results = VAR_1 . METHOD_8 ( ) ; METHOD_6 ( STRING_4 , results . METHOD_9 ( ) , METHOD_10 ( 0 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( ) ) ; TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_2 ) ) ; TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_3 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( ) ) ; METHOD_3 ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_2 ) ) ; METHOD_3 ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_3 ) ) ; }\n"}
{"problem": "public int [ ] METHOD_1 ( ) { int [ ] VAR_1 = new int [ VAR_2 . length ] ; for ( int VAR_3 = 0 ; VAR_3 < ( VAR_2 . length ) ; VAR_3 ++ ) { VAR_1 [ VAR_3 ] = METHOD_2 ( VAR_2 [ VAR_3 ] . METHOD_3 ( ) . toString ( ) ) ; } return VAR_1 ; }\n", "fixed": "private int [ ] METHOD_1 ( ) { int [ ] VAR_1 = new int [ VAR_2 . length ] ; for ( int VAR_3 = 0 ; VAR_3 < ( VAR_2 . length ) ; VAR_3 ++ ) { VAR_1 [ VAR_3 ] = METHOD_2 ( VAR_2 [ VAR_3 ] . METHOD_3 ( ) . toString ( ) ) ; } return VAR_1 ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "    * Look for function calls that are pure, and annotate them\n    * that way.\n    */\n  private final PassFactory markPureFunctions =\n       new PassFactory(\"markPureFunctions\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "    * Look for function calls that are pure, and annotate them\n    * that way.\n    */\n  final PassFactory markPureFunctions =\n       new PassFactory(\"markPureFunctions\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public java.lang.String getValue ( ) { TYPE_1 VAR_1 = VAR_2 . get ( source . getClass ( ) ) ; if ( VAR_1 == null ) { throw new TYPE_2 ( ( STRING_1 + ( source . getClass ( ) . METHOD_1 ( ) ) ) ) ; } return VAR_1 . METHOD_2 ( source ) ; }\n", "fixed": "public java.lang.String getValue ( ) { errors = null ; TYPE_1 VAR_1 = VAR_2 . get ( source . getClass ( ) ) ; if ( VAR_1 == null ) { throw new TYPE_2 ( ( STRING_1 + ( source . getClass ( ) . METHOD_1 ( ) ) ) ) ; } return VAR_1 . METHOD_2 ( source ) ; }\n"}
{"problem": "protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( VAR_1 == 1 ) { if ( VAR_2 == ( VAR_3 ) ) { TYPE_1 p = new TYPE_1 ( ) ; p . METHOD_2 ( data . METHOD_3 ( STRING_1 ) ) ; p . METHOD_4 ( data . METHOD_3 ( STRING_2 ) ) ; p . METHOD_5 ( data . METHOD_3 ( STRING_3 ) ) ; VAR_4 = p ; java.lang.System.out.println ( p . getName ( ) ) ; } } }\n", "fixed": "protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( VAR_1 == 1 ) { if ( VAR_2 == ( VAR_3 ) ) { TYPE_1 p = new TYPE_1 ( ) ; p . METHOD_2 ( data . METHOD_3 ( STRING_1 ) ) ; p . METHOD_4 ( data . METHOD_3 ( STRING_2 ) ) ; p . METHOD_5 ( data . METHOD_3 ( STRING_3 ) ) ; VAR_4 = p ; } } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 . info ( STRING_1 ) ; this . VAR_3 = new TYPE_3 ( true ) ; this . VAR_1 = VAR_4 ; this . VAR_2 = VAR_5 ; this . VAR_6 = METHOD_2 ( ) ; this . VAR_6 . start ( ) ; this . VAR_7 = TYPE_4 . METHOD_3 ( STRING_2 ) ; this . VAR_8 = TYPE_4 . METHOD_3 ( STRING_3 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_4 , TYPE_1 VAR_5 ) { TYPE_2 . info ( STRING_1 ) ; this . VAR_3 = new TYPE_3 ( true ) ; this . VAR_1 = VAR_4 ; this . VAR_2 = VAR_5 ; this . VAR_6 = METHOD_2 ( ) ; this . VAR_6 . start ( ) ; this . VAR_7 = TYPE_4 . METHOD_3 ( STRING_2 ) ; this . VAR_8 = TYPE_4 . METHOD_3 ( STRING_3 ) ; }\n"}
{"problem": "private METHOD_1 ( int VAR_1 ) { int VAR_2 = ( VAR_3 . size ( ) ) + 1 ; while ( ( VAR_2 != 1 ) && ( VAR_1 < ( VAR_3 . get ( ( VAR_2 / INT_1 ) ) ) ) ) { VAR_3 . set ( VAR_2 , VAR_3 . get ( ( VAR_2 / INT_1 ) ) ) ; VAR_2 /= INT_1 ; } VAR_3 . set ( VAR_2 , VAR_1 ) ; }\n", "fixed": "private void METHOD_1 ( int VAR_1 ) { int VAR_2 = ( VAR_3 . size ( ) ) + 1 ; while ( ( VAR_2 != 1 ) && ( VAR_1 < ( VAR_3 . get ( ( VAR_2 / INT_1 ) ) ) ) ) { VAR_3 . set ( VAR_2 , VAR_3 . get ( ( VAR_2 / INT_1 ) ) ) ; VAR_2 /= INT_1 ; } VAR_3 . set ( VAR_2 , VAR_1 ) ; }\n"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15838, value = \"Unexplained failure\")\n     String unexplainedFailure();\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10838, value = \"Unexplained failure\")\n     String unexplainedFailure();\n     /**", "sourceBeforeFix": "id=15866", "sourceAfterFix": "id=10866"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15859, value = \"A slave domain controller cannot accept deployment content uploads\")\n     String slaveCannotAcceptUploads();\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10859, value = \"A slave domain controller cannot accept deployment content uploads\")\n     String slaveCannotAcceptUploads();\n     /**", "sourceBeforeFix": "id=15864", "sourceAfterFix": "id=10864"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 context ) { context . METHOD_2 ( this ) ; VAR_1 = new TYPE_1 ( context ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( VAR_4 ) ; VAR_1 . METHOD_6 ( VAR_5 ) ; VAR_1 . METHOD_7 ( VAR_6 ) ; VAR_1 . METHOD_8 ( VAR_7 ) ; VAR_1 . METHOD_9 ( VAR_8 ) ; VAR_1 . METHOD_10 ( VAR_9 ) ; VAR_10 = true ; return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 context ) { context . METHOD_2 ( this ) ; VAR_1 = new TYPE_1 ( context ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( VAR_4 ) ; VAR_1 . METHOD_6 ( VAR_5 ) ; VAR_1 . METHOD_7 ( VAR_6 ) ; VAR_1 . METHOD_8 ( VAR_7 ) ; VAR_1 . METHOD_10 ( VAR_9 ) ; VAR_10 = true ; return VAR_1 ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory collapseObjectLiterals =\n       new PassFactory(\"collapseObjectLiterals\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory collapseObjectLiterals =\n       new PassFactory(\"collapseObjectLiterals\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory runtimeTypeCheck =\n       new PassFactory(\"runtimeTypeCheck\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory runtimeTypeCheck =\n       new PassFactory(\"runtimeTypeCheck\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public boolean METHOD_1 ( ) { boolean result = true ; boolean length = this . METHOD_2 ( ) ; boolean VAR_1 = this . METHOD_3 ( ) ; boolean keys = this . METHOD_4 ( ) ; if ( ! length ) { this . METHOD_5 ( ) ; return false ; } if ( ! VAR_1 ) { this . METHOD_6 ( ) ; return false ; } if ( ! keys ) { this . METHOD_7 ( ) ; return false ; } return result ; }\n", "fixed": "public boolean METHOD_1 ( ) { boolean result = true ; boolean length = this . METHOD_2 ( ) ; if ( ! length ) { this . METHOD_5 ( ) ; return false ; } boolean VAR_1 = this . METHOD_3 ( ) ; boolean keys = this . METHOD_4 ( ) ; if ( ! VAR_1 ) { this . METHOD_6 ( ) ; return false ; } if ( ! keys ) { this . METHOD_7 ( ) ; return false ; } return result ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   }\n   \n  private final PassFactory renameLabels =\n       new PassFactory(\"renameLabels\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   }\n   \n  final PassFactory renameLabels =\n       new PassFactory(\"renameLabels\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public void METHOD_1 ( ) { long VAR_1 = TYPE_1 . METHOD_2 ( ) . getTime ( ) ; while ( ! ( VAR_2 . isEmpty ( ) ) ) { TYPE_2 VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( ( VAR_4 ) > VAR_1 ) { VAR_2 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) ; } else { break ; } } TYPE_3 . METHOD_6 ( ) . METHOD_7 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { long VAR_1 = TYPE_1 . METHOD_2 ( ) . getTime ( ) ; while ( ! ( VAR_2 . isEmpty ( ) ) ) { TYPE_2 VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( ( VAR_4 ) <= VAR_1 ) { VAR_2 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) ; } else { break ; } } TYPE_3 . METHOD_6 ( ) . METHOD_7 ( ) ; }\n"}
{"problem": "private java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_1 . add ( new TYPE_2 ( VAR_2 , VAR_3 ) ) ; VAR_1 . add ( new TYPE_3 ( VAR_4 , VAR_5 ) ) ; VAR_1 . add ( new TYPE_4 ( VAR_6 , VAR_7 ) ) ; return VAR_1 ; }\n", "fixed": "private java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_1 . add ( new TYPE_2 ( VAR_2 , VAR_3 ) ) ; VAR_1 . add ( new TYPE_3 ( VAR_4 , VAR_5 ) ) ; return VAR_1 ; }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface AdvancedGitEndpointBuilder\n             extends\n                 AdvancedGitEndpointConsumerBuilder, AdvancedGitEndpointProducerBuilder {\n         default GitEndpointBuilder basic() {", "fixed": "     \n    public interface AdvancedGitEndpointBuilder\n             extends\n                 AdvancedGitEndpointConsumerBuilder, AdvancedGitEndpointProducerBuilder {\n         default GitEndpointBuilder basic() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { switch ( VAR_1 . getId ( ) ) { case VAR_2 : TYPE_1 VAR_3 = TYPE_1 . METHOD_2 ( VAR_4 , STRING_1 , VAR_5 ) ; VAR_3 . show ( ) ; VAR_6 = 1 ; break ; case VAR_7 : VAR_6 = INT_1 ; METHOD_3 ( 1 , true ) ; break ; case VAR_8 : VAR_6 = INT_2 ; METHOD_3 ( 1 , true ) ; break ; case VAR_9 : METHOD_3 ( INT_1 , false ) ; break ; } }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { switch ( VAR_1 . getId ( ) ) { case VAR_2 : TYPE_1 VAR_3 = TYPE_1 . METHOD_2 ( VAR_4 , STRING_1 , VAR_5 ) ; VAR_3 . show ( ) ; VAR_6 = 1 ; break ; case VAR_7 : VAR_6 = INT_1 ; METHOD_3 ( 1 , true , null ) ; break ; case VAR_8 : VAR_6 = INT_2 ; METHOD_3 ( 1 , true , null ) ; break ; case VAR_9 : METHOD_3 ( INT_1 , false , null ) ; break ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( this . getActivity ( ) , VAR_2 ) ; VAR_1 . METHOD_3 ( INT_1 ) ; getActivity ( ) . METHOD_4 ( VAR_3 ) . METHOD_5 ( VAR_1 ) ; getActivity ( ) . METHOD_4 ( VAR_4 ) . METHOD_5 ( VAR_1 ) ; getActivity ( ) . METHOD_4 ( VAR_5 ) . METHOD_5 ( VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( this . getActivity ( ) , VAR_2 ) ; VAR_1 . METHOD_3 ( INT_1 ) ; getActivity ( ) . METHOD_4 ( VAR_4 ) . METHOD_5 ( VAR_1 ) ; getActivity ( ) . METHOD_4 ( VAR_5 ) . METHOD_5 ( VAR_1 ) ; }\n"}
{"problem": "void METHOD_1 ( int VAR_1 , int VAR_2 ) { for ( int i = 0 ; i < ( TYPE_1 . METHOD_2 ( ) ) ; i ++ ) { java.lang.Object VAR_3 = METHOD_3 ( ) [ i ] [ VAR_2 ] ; METHOD_3 ( ) [ i ] [ VAR_2 ] = METHOD_3 ( ) [ i ] [ VAR_1 ] ; METHOD_3 ( ) [ i ] [ VAR_1 ] = VAR_3 ; } }\n", "fixed": "void METHOD_1 ( int VAR_1 , int VAR_2 ) { for ( int i = 0 ; i < ( ( TYPE_1 . METHOD_2 ( ) ) - 1 ) ; i ++ ) { java.lang.Object VAR_3 = METHOD_3 ( ) [ i ] [ VAR_2 ] ; METHOD_3 ( ) [ i ] [ VAR_2 ] = METHOD_3 ( ) [ i ] [ VAR_1 ] ; METHOD_3 ( ) [ i ] [ VAR_1 ] = VAR_3 ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { if ( ( this . METHOD_2 ( ) ) != null ) { if ( ! ( TYPE_1 . isEmpty ( this . VAR_1 ) ) ) { return this . VAR_1 ; } else { return this . METHOD_2 ( ) . METHOD_1 ( ) ; } } return this . VAR_2 . METHOD_1 ( ) ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { if ( ! ( TYPE_1 . isEmpty ( VAR_1 ) ) ) { return VAR_1 ; } else { return METHOD_2 ( ) . METHOD_1 ( ) ; } } return VAR_2 . METHOD_1 ( ) ; }\n"}
{"problem": "public android.view.View getView ( int position , android.view.View VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = METHOD_1 ( position ) ; boolean VAR_4 = VAR_5 . equals ( VAR_6 . METHOD_2 ( ) . METHOD_3 ( ) ) ; if ( VAR_1 == null ) { VAR_1 = TYPE_3 . METHOD_4 ( getContext ( ) ) . METHOD_5 ( ( VAR_4 ? VAR_7 : VAR_8 ) , VAR_2 , false ) ; } ( ( TYPE_4 ) ( VAR_1 . METHOD_6 ( VAR_9 ) ) ) . setText ( VAR_3 . text ) ; return VAR_1 ; }\n", "fixed": "public android.view.View getView ( int position , android.view.View VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = METHOD_1 ( position ) ; boolean VAR_4 = VAR_5 . equals ( VAR_6 . METHOD_2 ( ) . METHOD_3 ( ) ) ; VAR_1 = TYPE_3 . METHOD_4 ( getContext ( ) ) . METHOD_5 ( ( VAR_4 ? VAR_7 : VAR_8 ) , VAR_2 , false ) ; ( ( TYPE_4 ) ( VAR_1 . METHOD_6 ( VAR_9 ) ) ) . setText ( VAR_3 . text ) ; return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.String line ; do { try { VAR_1 . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; } VAR_3 . METHOD_3 ( ) ; line = VAR_4 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( ) ; METHOD_6 ( line ) ; } while ( line != STRING_2 ) ; VAR_5 . METHOD_7 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.lang.String line ; do { try { VAR_1 . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_2 ) { java.lang.System.out.println ( VAR_2 ) ; } VAR_3 . METHOD_3 ( ) ; line = VAR_4 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( ) ; METHOD_6 ( line ) ; } while ( ! ( line . equals ( STRING_2 ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String line ) { if ( ! ( VAR_1 ) ) { java.lang.System.err.println ( STRING_1 ) ; } if ( ( line . length ( ) ) != ( VAR_2 ) ) { java.lang.System.err.println ( STRING_2 ) ; } java.lang.System.out.println ( line ) ; writer . METHOD_2 ( line ) ; ( VAR_3 ) ++ ; }\n", "fixed": "public void METHOD_1 ( java.lang.String line ) { if ( ! ( VAR_1 ) ) { java.lang.System.err.println ( STRING_1 ) ; } if ( ( line . length ( ) ) != ( VAR_2 ) ) { java.lang.System.err.println ( STRING_2 ) ; } writer . METHOD_2 ( line ) ; ( VAR_3 ) ++ ; }\n"}
{"problem": "private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 src ) throws java.io.IOException { synchronized ( VAR_2 ) { TYPE_2 buffer = METHOD_2 ( VAR_1 , src . METHOD_3 ( ) ) ; buffer . METHOD_4 ( ) . put ( src ) ; buffer . METHOD_5 ( ) . set ( TYPE_3 . METHOD_6 ( ) ) ; METHOD_7 ( VAR_1 , buffer ) ; } }\n", "fixed": "private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 src ) throws java.io.IOException { synchronized ( VAR_2 ) { TYPE_2 buffer = METHOD_2 ( VAR_1 , src . METHOD_3 ( ) ) ; buffer . METHOD_4 ( ) . put ( src ) ; METHOD_7 ( VAR_1 , buffer ) ; } }\n"}
{"problem": "protected void METHOD_1 ( byte VAR_1 , byte VAR_2 , byte VAR_3 , byte VAR_4 , byte VAR_5 ) { METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) , STRING_1 , true ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) , STRING_2 , true ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_3 ) , STRING_3 , true ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_5 ) , STRING_4 , true ) ; }\n", "fixed": "protected void METHOD_1 ( boolean VAR_1 , boolean VAR_2 , boolean VAR_3 , boolean VAR_4 , boolean VAR_5 ) { METHOD_2 ( VAR_1 , STRING_1 , true ) ; METHOD_2 ( VAR_2 , STRING_2 , true ) ; METHOD_2 ( VAR_3 , STRING_3 , true ) ; METHOD_2 ( VAR_5 , STRING_4 , true ) ; }\n"}
{"problem": "public void remove ( int VAR_1 ) { if ( contains ( VAR_1 ) ) { int index = 0 ; for ( int i = 0 ; i < ( VAR_2 . size ( ) ) ; i ++ ) if ( ( VAR_2 . METHOD_1 ( i ) ) == VAR_1 ) { index = VAR_2 . get ( i ) ; java.lang.System.out.println ( STRING_1 ) ; } VAR_2 . remove ( index ) ; java.util.Collections.sort ( VAR_2 ) ; } }\n", "fixed": "public void remove ( int VAR_1 ) { if ( contains ( VAR_1 ) ) { int index = 0 ; for ( int i = 0 ; i < ( VAR_2 . size ( ) ) ; i ++ ) if ( ( VAR_2 . METHOD_1 ( i ) ) == VAR_1 ) { index = VAR_2 . get ( i ) ; java.lang.System.out.println ( STRING_1 ) ; } VAR_2 . remove ( index ) ; } }\n"}
{"fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf", "projectName": "yusuke.twitter4j", "bugType": "Change Identifier Used", "problem": "      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n        return Status.constructStatuses(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }", "fixed": "      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }", "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\",true))", "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\",true))"}
{"fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf", "projectName": "yusuke.twitter4j", "bugType": "Change Identifier Used", "problem": "      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }", "fixed": "      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }", "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweets/\" + statusId+ \".json\",true))", "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweets/\" + statusId+ \".json\",true))"}
{"problem": "public boolean execute ( ) throws TYPE_1 { METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 . args ( VAR_2 ) ; METHOD_3 ( ) ; if ( ! ( METHOD_4 ( VAR_3 ) ) ) { return false ; } VAR_4 = new TYPE_2 ( this , VAR_3 ) ; return true ; }\n", "fixed": "public boolean execute ( ) throws TYPE_1 { METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 . args ( VAR_2 ) ; METHOD_3 ( ) ; VAR_4 = new TYPE_2 ( this , VAR_3 ) ; if ( ! ( METHOD_4 ( VAR_3 ) ) ) { return false ; } return true ; }\n"}
{"problem": "public long METHOD_1 ( final java.lang.Object obj , final long VAR_1 , final long VAR_2 ) { long VAR_3 ; do { VAR_3 = VAR_4 . METHOD_2 ( obj , VAR_1 ) ; } while ( ! ( VAR_4 . METHOD_3 ( obj , VAR_1 , VAR_3 , ( VAR_3 + VAR_2 ) ) ) ) ; return VAR_3 ; }\n", "fixed": "public synchronized long METHOD_1 ( final java.lang.Object obj , final long VAR_1 , final long VAR_2 ) { long VAR_3 ; do { VAR_3 = VAR_4 . METHOD_2 ( obj , VAR_1 ) ; } while ( ! ( VAR_4 . METHOD_3 ( obj , VAR_1 , VAR_3 , ( VAR_3 + VAR_2 ) ) ) ) ; return VAR_4 . METHOD_2 ( obj , VAR_1 ) ; }\n"}
{"problem": "private int METHOD_1 ( ) { int VAR_1 = ( ( int ) ( ( METHOD_2 ( ) ) * INT_1 ) ) / INT_1 ; if ( METHOD_3 ( ( ( ( int ) ( ( METHOD_2 ( ) ) * INT_1 ) ) % INT_1 ) ) ) { return VAR_1 + 1 ; } else { return VAR_1 ; } }\n", "fixed": "private int METHOD_1 ( ) { java.lang.System.out.println ( METHOD_2 ( ) ) ; int VAR_1 = ( ( int ) ( ( METHOD_2 ( ) ) * INT_1 ) ) / INT_1 ; if ( METHOD_3 ( ( ( ( int ) ( ( METHOD_2 ( ) ) * INT_1 ) ) % INT_1 ) ) ) { VAR_1 ++ ; return VAR_1 ; } else { return VAR_1 ; } }\n"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return a message for the error.\n      */\n    @Message(id = 15831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n     String adminOnlyModeCannotAcceptSlaves(RunningMode runningMode);\n     /**", "fixed": "      *\n      * @return a message for the error.\n      */\n    @Message(id = 10831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n     String adminOnlyModeCannotAcceptSlaves(RunningMode runningMode);\n     /**", "sourceBeforeFix": "id=15862", "sourceAfterFix": "id=10862"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = null ; try { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; return METHOD_4 ( VAR_2 , VAR_1 ) ; } catch ( TYPE_4 VAR_4 ) { METHOD_5 ( VAR_4 ) ; throw new TYPE_5 ( VAR_5 , VAR_4 ) ; } finally { METHOD_6 ( VAR_2 ) ; } }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { try ( TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ) { return METHOD_4 ( VAR_2 , VAR_1 ) ; } catch ( TYPE_4 VAR_4 ) { METHOD_5 ( VAR_4 ) ; throw new TYPE_5 ( VAR_5 , VAR_4 ) ; } }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "    * Look for function calls that have no side effects, and annotate them\n    * that way.\n    */\n  private final PassFactory markNoSideEffectCalls =\n       new PassFactory(\"markNoSideEffectCalls\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "    * Look for function calls that have no side effects, and annotate them\n    * that way.\n    */\n  final PassFactory markNoSideEffectCalls =\n       new PassFactory(\"markNoSideEffectCalls\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "private static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , VAR_1 ) ; TYPE_2 . set ( ( - ( ( TYPE_2 . get ( ) ) / INT_1 ) ) , true ) ; VAR_2 = 0 ; TYPE_3 . set ( TYPE_3 . METHOD_3 ( ) ) ; TYPE_4 . get ( ) . METHOD_4 ( TYPE_4 . get ( ) . METHOD_5 ( ) , TYPE_4 . get ( ) . METHOD_5 ( ) ) ; ( VAR_3 ) ++ ; }\n", "fixed": "public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , VAR_1 ) ; TYPE_2 . set ( ( - ( ( TYPE_2 . get ( ) ) / INT_1 ) ) , true ) ; VAR_2 = 0 ; TYPE_3 . set ( TYPE_3 . METHOD_3 ( ) ) ; TYPE_4 . get ( ) . METHOD_4 ( TYPE_4 . get ( ) . METHOD_5 ( ) , TYPE_4 . get ( ) . METHOD_5 ( ) ) ; ( VAR_3 ) ++ ; }\n"}
{"problem": "public static synchronized TYPE_1 METHOD_1 ( int VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 ) ) ) { VAR_2 . put ( VAR_1 , new TYPE_2 < TYPE_1 > ( new TYPE_1 ( VAR_1 ) ) ) ; } return VAR_2 . get ( VAR_1 ) . get ( ) ; }\n", "fixed": "public static synchronized TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 result = null ; if ( VAR_2 . METHOD_2 ( VAR_1 ) ) { result = VAR_2 . get ( VAR_1 ) . get ( ) ; } if ( result == null ) { result = new TYPE_1 ( VAR_1 ) ; VAR_2 . put ( VAR_1 , new TYPE_2 < TYPE_1 > ( result ) ) ; } return result ; }\n"}
{"problem": "public int METHOD_1 ( java.lang.String VAR_1 ) { int VAR_2 = 0 ; if ( TYPE_1 . contains ( VAR_1 ) ) { java.lang.Integer VAR_3 = TYPE_1 . get ( VAR_1 ) ; if ( VAR_3 < ( VAR_4 ) ) { VAR_2 = VAR_3 ; } } return VAR_2 ; }\n", "fixed": "public int METHOD_1 ( java.lang.String VAR_1 ) { int VAR_2 = 0 ; if ( TYPE_1 . contains ( VAR_1 ) ) { java.lang.Integer VAR_3 = TYPE_1 . get ( VAR_1 ) ; if ( VAR_3 <= ( VAR_4 ) ) { VAR_2 = VAR_3 ; } } return VAR_2 ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { try { java.util.List < TYPE_3 > VAR_2 = VAR_1 . METHOD_2 ( ) ; java.lang.System.out.println ( ( ( STRING_1 + ( VAR_2 . size ( ) ) ) + STRING_2 ) ) ; if ( VAR_2 . isEmpty ( ) ) { java.lang.System.out.println ( STRING_3 ) ; this . VAR_3 . METHOD_3 ( VAR_1 ) ; } } catch ( TYPE_4 VAR_4 ) { throw new TYPE_2 ( STRING_4 , VAR_4 . METHOD_4 ( ) ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { try { java.util.List < TYPE_3 > VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( VAR_2 . isEmpty ( ) ) { this . VAR_3 . METHOD_3 ( VAR_1 ) ; } } catch ( TYPE_4 VAR_4 ) { throw new TYPE_2 ( STRING_4 , VAR_4 . METHOD_4 ( ) ) ; } }\n"}
{"fixCommitSHA1": "40df292ac802e1023d0208b497945d8841958022", "projectName": "gephi.gephi", "bugType": "Change Identifier Used", "problem": "             List<Node> nodes = new ArrayList<Node>();\n             for (Node n : hgraph.getNodes()) {\n                if (n.getNodeData().getId().toLowerCase().contains(str)) {\n                     nodes.add(n);\n                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().contains(str)) {\n                     nodes.add(n);\n                 }\n             }", "fixed": "             List<Node> nodes = new ArrayList<Node>();\n             for (Node n : hgraph.getNodes()) {\n                if (n.getNodeData().getId().toLowerCase().equals(str)) {\n                     nodes.add(n);\n                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().equals(str)) {\n                     nodes.add(n);\n                 }\n             }", "sourceBeforeFix": "n.getNodeData().getId().toLowerCase().contains(str)", "sourceAfterFix": "n.getNodeData().getId().toLowerCase().equals(str)"}
{"problem": "private void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ) ) ; try { VAR_2 . setText ( VAR_1 ) ; } catch ( java.lang.NullPointerException VAR_4 ) { TYPE_2 . METHOD_4 ( VAR_5 , STRING_1 , VAR_4 ) ; METHOD_5 ( ) ; } }\n", "fixed": "private void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( getView ( VAR_3 ) ) ) ; try { VAR_2 . setText ( VAR_1 ) ; } catch ( java.lang.NullPointerException VAR_4 ) { TYPE_2 . METHOD_4 ( VAR_5 , STRING_1 , VAR_4 ) ; METHOD_5 ( ) ; } }\n"}
{"problem": "private static java.util.Date METHOD_1 ( ) { java.util.Date VAR_1 = TYPE_1 . METHOD_2 ( ) ; long VAR_2 = VAR_1 . getTime ( ) ; VAR_2 = VAR_2 - ( ( ( ( ( VAR_3 . METHOD_3 ( ) ) - INT_1 ) * INT_2 ) * INT_3 ) * INT_3 ) ; return new java.util.Date ( VAR_2 ) ; }\n", "fixed": "private static java.util.Date METHOD_1 ( ) { java.util.Date VAR_1 = TYPE_1 . METHOD_2 ( ) ; long VAR_2 = VAR_1 . getTime ( ) ; VAR_2 = VAR_2 - ( ( ( ( INT_1 - ( VAR_3 . METHOD_3 ( ) ) ) * INT_2 ) * INT_3 ) * INT_3 ) ; java.lang.System.out.println ( new java.util.Date ( VAR_2 ) ) ; return new java.util.Date ( VAR_2 ) ; }\n"}
{"fixCommitSHA1": "1daccd54d2ff2ecdb21d8c60268600c37febbb70", "projectName": "Alluxio.alluxio", "bugType": "Change Operand ", "problem": "       } else {\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n          String filePath = FILE_NAME + (mWorkerId + BASE_FILE_NUMBER);\n           InputStream is = mHdfsFs.open(new Path(filePath));\n           long len = BLOCKS_PER_FILE * BLOCK_SIZE_BYTES;", "fixed": "       } else {\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n          String filePath = FILE_NAME + (times + BASE_FILE_NUMBER);\n           InputStream is = mHdfsFs.open(new Path(filePath));\n           long len = BLOCKS_PER_FILE * BLOCK_SIZE_BYTES;", "sourceBeforeFix": "mWorkerId + BASE_FILE_NUMBER", "sourceAfterFix": "times + BASE_FILE_NUMBER"}
{"problem": "public java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; try { VAR_3 = TYPE_1 . init ( ) ; VAR_4 = VAR_3 . METHOD_2 ( ) ; VAR_5 = VAR_4 . METHOD_3 ( STRING_1 ) ; while ( VAR_5 . METHOD_4 ( ) ) { VAR_2 . add ( VAR_5 . getString ( 1 ) ) ; } VAR_3 . METHOD_5 ( ) ; } catch ( TYPE_2 VAR_6 ) { VAR_6 . METHOD_6 ( ) ; } return VAR_2 ; }\n", "fixed": "public java.util.List < java.lang.String > METHOD_1 ( ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; try { VAR_3 = TYPE_1 . init ( ) ; VAR_4 = VAR_3 . METHOD_2 ( ) ; VAR_5 = VAR_4 . METHOD_3 ( STRING_1 ) ; while ( VAR_5 . METHOD_4 ( ) ) { VAR_2 . add ( VAR_5 . getString ( 1 ) ) ; } VAR_3 . METHOD_5 ( ) ; } catch ( TYPE_2 VAR_6 ) { VAR_6 . METHOD_6 ( ) ; } return VAR_2 ; }\n"}
{"problem": "private static boolean METHOD_1 ( ) { java.io.File file = new java.io.File ( TYPE_1 . METHOD_2 ( ) ) ; if ( ( file . METHOD_3 ( ) ) == false ) { try { file . METHOD_4 ( ) ; } catch ( java.io.IOException VAR_1 ) { TYPE_1 . METHOD_5 ( ( STRING_1 + ( VAR_1 . toString ( ) ) ) ) ; return false ; } } file = null ; return true ; }\n", "fixed": "private boolean METHOD_1 ( ) { java.io.File file = new java.io.File ( METHOD_2 ( ) ) ; if ( ( file . METHOD_3 ( ) ) == false ) { try { file . METHOD_4 ( ) ; } catch ( java.io.IOException VAR_1 ) { METHOD_5 ( ( STRING_1 + ( VAR_1 . toString ( ) ) ) ) ; return false ; } } file = null ; return true ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( int position , float VAR_3 , int VAR_4 ) { } public void METHOD_5 ( int position ) { } public void METHOD_6 ( int state ) { } } ) ; VAR_5 . METHOD_7 ( VAR_2 ) ; VAR_1 . METHOD_8 ( ) ; if ( VAR_6 . isEmpty ( ) ) { VAR_7 . METHOD_9 ( VAR_8 ) ; } }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( int position , float VAR_3 , int VAR_4 ) { } public void METHOD_5 ( int position ) { } public void METHOD_6 ( int state ) { } } ) ; VAR_5 . METHOD_7 ( VAR_2 ) ; VAR_1 . METHOD_8 ( ) ; if ( VAR_6 . isEmpty ( ) ) { VAR_7 . METHOD_9 ( VAR_8 ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; final java.lang.String VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; new TYPE_2 < java.lang.Void , java.lang.Void , java.lang.Void > ( ) { protected java.lang.Void METHOD_4 ( java.lang.Void ... params ) { METHOD_5 ( ) . METHOD_6 ( ) . replace ( VAR_5 , TYPE_3 . METHOD_7 ( VAR_2 ) ) . commit ( ) ; return null ; } } . execute ( ) ; }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; final java.lang.String VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; new TYPE_2 < java.lang.Void , java.lang.Void , java.lang.Void > ( ) { protected java.lang.Void METHOD_4 ( java.lang.Void ... params ) { METHOD_5 ( ) . METHOD_6 ( ) . replace ( VAR_5 , TYPE_3 . METHOD_7 ( VAR_2 ) ) . commit ( ) ; return null ; } } . execute ( ) ; }\n"}
{"problem": "public int METHOD_1 ( int VAR_1 ) { for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { if ( VAR_1 >= ( VAR_2 [ i ] ) ) { return VAR_3 [ i ] ; } } return VAR_4 . METHOD_2 ( ) ; }\n", "fixed": "public int METHOD_1 ( int VAR_1 ) { for ( int i = ( VAR_2 . length ) - 1 ; i >= 0 ; i -- ) { if ( VAR_1 >= ( VAR_2 [ i ] ) ) { return VAR_3 [ i ] ; } } return VAR_3 [ 0 ] ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = METHOD_2 ( VAR_1 class ) . METHOD_3 ( VAR_2 ) . METHOD_4 ( value ( \"name\" , METHOD_5 ( STRING_1 ) ) ) . execute ( ) ; TYPE_2 . assertThat ( result , METHOD_6 ( 1 ) ) ; TYPE_2 . assertThat ( result . get ( 0 ) . getName ( ) , METHOD_5 ( STRING_1 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = select ( VAR_1 class ) . METHOD_3 ( VAR_2 ) . METHOD_4 ( value ( \"name\" , METHOD_5 ( STRING_1 ) ) ) . execute ( ) ; TYPE_2 . assertThat ( result , METHOD_6 ( 1 ) ) ; TYPE_2 . assertThat ( result . get ( 0 ) . getName ( ) , METHOD_5 ( STRING_1 ) ) ; }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface ZendeskEndpointProducerBuilder\n             extends\n                 EndpointProducerBuilder {\n         default AdvancedZendeskEndpointProducerBuilder advanced() {", "fixed": "     \n    public interface ZendeskEndpointProducerBuilder\n             extends\n                 EndpointProducerBuilder {\n         default AdvancedZendeskEndpointProducerBuilder advanced() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; if ( ( VAR_3 ) == ( VAR_4 ) ) { VAR_5 . METHOD_2 ( new TYPE_2 ( ( ( TYPE_3 . METHOD_3 ( VAR_6 ) ) - FLOAT_1 ) , VAR_7 , ( ( TYPE_3 . METHOD_3 ( VAR_8 ) ) - FLOAT_1 ) , VAR_9 ) ) ; } }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; if ( ( VAR_3 ) == ( VAR_4 ) ) { VAR_5 . METHOD_2 ( new TYPE_2 ( ( ( TYPE_3 . METHOD_3 ( VAR_6 ) ) + FLOAT_1 ) , VAR_7 , ( ( TYPE_3 . METHOD_3 ( VAR_8 ) ) + FLOAT_1 ) , VAR_9 ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , TYPE_2 VAR_2 ) { if ( TYPE_3 . METHOD_2 ( VAR_3 . getText ( ) ) ) { VAR_3 . setText ( VAR_2 . getName ( ) ) ; } METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_2 != null ) { if ( TYPE_3 . METHOD_2 ( VAR_3 . getText ( ) ) ) { VAR_3 . setText ( VAR_2 . getName ( ) ) ; } } METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 ) ; TYPE_2 . METHOD_3 ( this , ( STRING_2 + VAR_1 ) , VAR_3 ) . show ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_4 class ) ; intent . METHOD_4 ( VAR_5 , VAR_2 ) ; intent . METHOD_4 ( VAR_6 , VAR_1 ) ; METHOD_5 ( intent ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_4 class ) ; intent . METHOD_4 ( VAR_5 , VAR_2 ) ; intent . METHOD_4 ( VAR_6 , VAR_1 ) ; METHOD_5 ( intent ) ; }\n"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15847, value = \"Interrupted waiting for result from host %s\")\n     String interruptedAwaitingResultFromHost(String name);\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10847, value = \"Interrupted waiting for result from host %s\")\n     String interruptedAwaitingResultFromHost(String name);\n     /**", "sourceBeforeFix": "id=15845", "sourceAfterFix": "id=10845"}
{"fixCommitSHA1": "4a9d7457934350576e9e37a7f253066f4a5d3cce", "projectName": "stanfordnlp.CoreNLP", "bugType": "Change Identifier Used", "problem": "   }\n   public static Map<String, SimpleMatrix> averageUnaryMatrices(List<Map<String, SimpleMatrix>> maps) {\n    Map<String, SimpleMatrix> averages = Generics.newHashMap();\n     for (String name : getUnaryMatrixNames(maps)) {\n       int count = 0;\n       SimpleMatrix matrix = null;", "fixed": "   }\n   public static Map<String, SimpleMatrix> averageUnaryMatrices(List<Map<String, SimpleMatrix>> maps) {\n    Map<String, SimpleMatrix> averages = Generics.newTreeMap();\n     for (String name : getUnaryMatrixNames(maps)) {\n       int count = 0;\n       SimpleMatrix matrix = null;", "sourceBeforeFix": "Generics.newHashMap()", "sourceAfterFix": "Generics.newTreeMap()"}
{"problem": "public void METHOD_1 ( ) { if ( new java.io.File ( ( ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) + ( VAR_1 ) ) + STRING_3 ) ) . METHOD_2 ( ) ) { TYPE_1 VAR_2 = this . getConfig ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( true ) ; } else { METHOD_5 ( ) ; TYPE_1 VAR_2 = this . getConfig ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( true ) ; } }\n", "fixed": "private void METHOD_1 ( ) { if ( new java.io.File ( ( ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) + ( VAR_1 ) ) + STRING_3 ) ) . METHOD_2 ( ) ) { TYPE_1 VAR_2 = this . getConfig ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( true ) ; } else { METHOD_5 ( ) ; TYPE_1 VAR_2 = this . getConfig ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( true ) ; } }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface DigitalSignatureEndpointBuilder\n             extends\n                 EndpointProducerBuilder {\n         default AdvancedDigitalSignatureEndpointBuilder advanced() {", "fixed": "     \n    public interface DigitalSignatureEndpointBuilder\n             extends\n                 EndpointProducerBuilder {\n         default AdvancedDigitalSignatureEndpointBuilder advanced() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 = VAR_1 . METHOD_2 ( ) ; VAR_5 = VAR_1 . METHOD_2 ( ) ; VAR_6 = VAR_1 . METHOD_2 ( ) ; VAR_7 = VAR_1 . METHOD_3 ( ) ; VAR_8 = VAR_1 . METHOD_3 ( ) ; VAR_9 = VAR_1 . METHOD_3 ( ) ; VAR_10 = STRING_1 ; METHOD_4 ( true ) ; return true ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_5 = VAR_1 . METHOD_2 ( ) ; VAR_6 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 = VAR_1 . METHOD_2 ( ) ; VAR_7 = VAR_1 . METHOD_3 ( ) ; VAR_8 = VAR_1 . METHOD_3 ( ) ; VAR_9 = VAR_1 . METHOD_3 ( ) ; VAR_10 = STRING_1 ; METHOD_4 ( true ) ; return true ; }\n"}
{"problem": "public boolean METHOD_1 ( long VAR_1 , int intValue ) { int index = 0 ; for ( TYPE_1 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) == VAR_1 ) { TYPE_2 VAR_4 = ( ( TYPE_2 ) ( VAR_5 . get ( index ) ) ) ; return ( VAR_4 . METHOD_4 ( ) . intValue ( ) ) == intValue ; } index ++ ; } return false ; }\n", "fixed": "public boolean METHOD_1 ( long VAR_1 , int intValue ) { int index = 0 ; for ( TYPE_1 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == VAR_1 ) { TYPE_2 VAR_4 = ( ( TYPE_2 ) ( VAR_5 . get ( index ) ) ) ; return ( VAR_4 . METHOD_4 ( ) ) == intValue ; } index ++ ; } return false ; }\n"}
{"problem": "private boolean METHOD_1 ( ) { int VAR_1 = TYPE_1 . METHOD_2 ( ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( this . METHOD_3 ( VAR_3 ) ) ) ; for ( TYPE_3 VAR_4 : VAR_2 . METHOD_4 ( ) ) { if ( ( VAR_5 ) == VAR_1 ) { return TYPE_4 . equals ( VAR_6 ) ; } } return false ; }\n", "fixed": "private boolean METHOD_1 ( ) { int VAR_1 = TYPE_1 . METHOD_2 ( ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( this . METHOD_3 ( VAR_3 ) ) ) ; if ( ( VAR_2 == null ) || ( ( VAR_2 . METHOD_4 ( ) ) == null ) ) return false ; for ( TYPE_3 VAR_4 : VAR_2 . METHOD_4 ( ) ) { if ( ( VAR_4 != null ) && ( ( VAR_5 ) == VAR_1 ) ) { return TYPE_4 . equals ( VAR_6 ) ; } } return false ; }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface KafkaEndpointBuilder\n             extends\n                 KafkaEndpointConsumerBuilder, KafkaEndpointProducerBuilder {\n         default AdvancedKafkaEndpointBuilder advanced() {", "fixed": "     \n    public interface KafkaEndpointBuilder\n             extends\n                 KafkaEndpointConsumerBuilder, KafkaEndpointProducerBuilder {\n         default AdvancedKafkaEndpointBuilder advanced() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ( ( TYPE_2 ) ( METHOD_4 ( VAR_3 ) ) ) ) ; long id = getIntent ( ) . METHOD_5 ( VAR_4 , 0L ) ; TYPE_3 VAR_5 = TYPE_4 . METHOD_6 ( id ) ; java.lang.String VAR_6 = VAR_7 ; if ( VAR_1 == null ) { METHOD_7 ( ) . METHOD_8 ( ) . add ( VAR_8 , VAR_5 , VAR_6 ) . commit ( ) ; } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; long id = getIntent ( ) . METHOD_5 ( VAR_4 , 0L ) ; TYPE_3 VAR_5 = TYPE_4 . METHOD_6 ( id ) ; java.lang.String VAR_6 = VAR_7 ; if ( VAR_1 == null ) { METHOD_7 ( ) . METHOD_8 ( ) . add ( VAR_8 , VAR_5 , VAR_6 ) . commit ( ) ; } }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory replaceStrings =\n       new PassFactory(\"replaceStrings\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory replaceStrings =\n       new PassFactory(\"replaceStrings\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public void METHOD_1 ( java.lang.String id , TYPE_1 response ) { TYPE_2 p = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 class , java.lang.Integer.parseInt ( id ) ) ; if ( p == null ) { response . METHOD_4 ( TYPE_3 . value ( ) ) ; return ; } p . METHOD_5 ( TYPE_4 . METHOD_6 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String id , TYPE_1 response ) { TYPE_2 p = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 class , java.lang.Integer.parseInt ( id ) ) ; if ( p == null ) { response . METHOD_4 ( TYPE_3 . value ( ) ) ; return ; } p . METHOD_1 ( ) ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   \n  private final PassFactory minimizeExitPoints =\n       new PassFactory(\"minimizeExitPoints\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   \n  final PassFactory minimizeExitPoints =\n       new PassFactory(\"minimizeExitPoints\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public int METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_1 VAR_2 = VAR_1 . get ( 0 ) ; TYPE_1 VAR_3 = VAR_1 . get ( 1 ) ; return VAR_2 . METHOD_2 ( ) . equals ( VAR_3 . METHOD_3 ( ) ) ? INT_1 : 0 ; }\n", "fixed": "public int METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_1 VAR_2 = VAR_1 . get ( 0 ) ; TYPE_1 VAR_3 = VAR_1 . get ( 1 ) ; return VAR_2 . METHOD_2 ( ) . equals ( VAR_3 . METHOD_2 ( ) ) ? INT_1 : 0 ; }\n"}
{"problem": "public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String [ ] [ ] VAR_2 , TYPE_1 writer ) { writer . METHOD_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; for ( java.lang.String [ ] VAR_3 : VAR_2 ) { for ( java.lang.String VAR_4 : VAR_3 ) { writer . METHOD_2 ( VAR_4 ) ; } writer . METHOD_2 ( ) ; } writer . METHOD_2 ( STRING_3 ) ; }\n", "fixed": "public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String [ ] [ ] VAR_2 , TYPE_1 writer ) { writer . METHOD_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; for ( java.lang.String [ ] VAR_3 : VAR_2 ) { if ( VAR_3 == null ) { continue ; } for ( java.lang.String VAR_4 : VAR_3 ) { writer . METHOD_2 ( VAR_4 ) ; } writer . METHOD_2 ( ) ; } writer . METHOD_2 ( STRING_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( boolean VAR_1 ) { int VAR_2 = 1 < < INT_1 ; int VAR_3 = VAR_4 . METHOD_2 ( ( ( VAR_5 ) + ( offset ) ) ) ; if ( VAR_1 ) { VAR_3 |= VAR_2 ; } else { VAR_2 = ~ VAR_2 ; VAR_2 &= INT_2 ; VAR_3 &= VAR_2 ; } VAR_4 . METHOD_3 ( ( ( VAR_5 ) + ( offset ) ) , VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( boolean VAR_1 ) { final int VAR_2 = 1 < < INT_1 ; int VAR_3 = VAR_4 . METHOD_2 ( ( ( VAR_5 ) + ( offset ) ) ) ; if ( VAR_1 ) { VAR_3 |= VAR_2 ; } else { VAR_3 &= ~ VAR_2 ; } VAR_4 . METHOD_3 ( ( ( VAR_5 ) + ( offset ) ) , VAR_3 ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 index , TYPE_2 c , int VAR_1 , java.util.ArrayList < TYPE_3 > VAR_2 ) { if ( ( c . type ) == ( VAR_3 ) ) { VAR_2 . add ( new TYPE_4 ( null ) ) ; } else { TYPE_5 VAR_4 = TYPE_6 . METHOD_2 ( c . type ) ; VAR_2 . add ( new TYPE_7 ( VAR_5 , VAR_4 ) ) ; VAR_2 . add ( new TYPE_4 ( VAR_4 ) ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 index , TYPE_2 c , int VAR_1 , java.util.ArrayList < TYPE_3 > VAR_2 ) { if ( ( c . type ) == ( VAR_3 ) ) { VAR_2 . add ( new TYPE_4 ( null ) ) ; } else { TYPE_5 VAR_4 = METHOD_2 ( c . type ) ; VAR_2 . add ( new TYPE_7 ( VAR_5 , VAR_4 ) ) ; VAR_2 . add ( new TYPE_4 ( VAR_4 ) ) ; } }\n"}
{"problem": "private void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; try { VAR_2 = ( ( TYPE_2 ) ( VAR_3 . METHOD_3 ( VAR_2 ) ) ) ; } catch ( TYPE_1 VAR_4 ) { VAR_5 . METHOD_4 ( ( STRING_1 + ( VAR_4 . METHOD_5 ( ) ) ) ) ; throw VAR_4 ; } }\n", "fixed": "private TYPE_2 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; try { VAR_2 = ( ( TYPE_2 ) ( VAR_3 . METHOD_3 ( VAR_2 ) ) ) ; return VAR_2 ; } catch ( TYPE_1 VAR_4 ) { VAR_5 . METHOD_4 ( ( STRING_1 + ( VAR_4 . METHOD_5 ( ) ) ) ) ; throw VAR_4 ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { final java.lang.String [ ] VAR_1 = new java.lang.String [ ] { STRING_1 + ( METHOD_2 ( VAR_2 , STRING_2 ) ) , STRING_3 + ( METHOD_2 ( VAR_2 , STRING_2 ) ) , STRING_4 + ( METHOD_2 ( VAR_2 , STRING_2 ) ) , STRING_5 + ( METHOD_2 ( VAR_2 , STRING_2 ) ) , STRING_6 + ( METHOD_2 ( VAR_3 , STRING_2 ) ) , STRING_7 + ( METHOD_2 ( VAR_3 , STRING_2 ) ) } ; METHOD_3 ( VAR_4 , METHOD_4 ( STRING_8 ) , VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { final java.lang.String [ ] VAR_1 = new java.lang.String [ ] { STRING_1 + ( METHOD_2 ( VAR_2 , STRING_2 ) ) , STRING_3 + ( METHOD_2 ( VAR_2 , STRING_2 ) ) , STRING_4 + ( METHOD_2 ( VAR_2 , STRING_2 ) ) , STRING_5 + ( METHOD_2 ( VAR_2 , STRING_2 ) ) , STRING_6 + ( METHOD_2 ( VAR_3 , STRING_2 ) ) } ; METHOD_3 ( VAR_4 , METHOD_4 ( STRING_8 ) , VAR_1 ) ; }\n"}
{"fixCommitSHA1": "8fdd403b6c8331d56890de3165b7a0e77a0eaa42", "projectName": "apache.flink", "bugType": "Change Modifier", "problem": " \t * @param from The element to be copied.\n \t * @param to The target element.\n \t */\n\tpublic void copyTo(T from, T to);", "fixed": " \t * @param from The element to be copied.\n \t * @param to The target element.\n \t */\n\tpublic abstract void copyTo(T from, T to);", "sourceBeforeFix": "1", "sourceAfterFix": "1025"}
{"problem": "public static void METHOD_1 ( java.lang.String name ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; TYPE_2 VAR_3 = TYPE_3 . METHOD_3 ( ) . METHOD_4 ( name ) ; VAR_2 . METHOD_5 ( VAR_3 ) ; TYPE_4 . METHOD_6 ( name , null ) ; }\n", "fixed": "public static void METHOD_1 ( java.lang.String name ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; TYPE_2 VAR_3 = TYPE_3 . METHOD_3 ( ) . METHOD_4 ( name ) ; VAR_2 . METHOD_5 ( VAR_3 ) ; TYPE_4 . METHOD_6 ( name , null , null , ( - 1 ) ) ; }\n"}
{"problem": "public void build ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { TYPE_4 . METHOD_1 ( VAR_2 ) ; TYPE_4 . METHOD_2 ( VAR_2 . getInt ( STRING_1 ) ) ; TYPE_4 . METHOD_2 ( VAR_2 . getBoolean ( STRING_2 ) ) ; VAR_1 . METHOD_3 ( VAR_2 . getInt ( STRING_1 ) ) ; VAR_1 . setEnabled ( VAR_2 . getBoolean ( STRING_2 ) ) ; if ( VAR_2 . METHOD_4 ( \"id\" ) ) { VAR_1 . METHOD_5 ( java.lang.Long.parseLong ( VAR_2 . getString ( \"id\" ) ) ) ; } }\n", "fixed": "public void build ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { TYPE_4 . METHOD_1 ( VAR_2 ) ; TYPE_4 . METHOD_2 ( VAR_2 . getString ( STRING_1 ) ) ; TYPE_4 . METHOD_2 ( VAR_2 . getBoolean ( STRING_2 ) ) ; VAR_1 . METHOD_3 ( java.lang.Integer.parseInt ( VAR_2 . getString ( STRING_1 ) ) ) ; VAR_1 . setEnabled ( VAR_2 . getBoolean ( STRING_2 ) ) ; if ( VAR_2 . METHOD_4 ( \"id\" ) ) { VAR_1 . METHOD_5 ( java.lang.Long.parseLong ( VAR_2 . getString ( \"id\" ) ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( android.view.View view ) { int VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_3 == ( VAR_4 ) ) VAR_5 = VAR_1 ; else if ( VAR_3 == ( VAR_6 ) ) VAR_7 = VAR_1 ; else if ( VAR_3 == ( VAR_8 ) ) VAR_9 = VAR_1 ; else if ( VAR_3 == ( VAR_10 ) ) VAR_11 = VAR_1 ; METHOD_3 ( VAR_1 , VAR_3 ) ; VAR_12 . METHOD_4 ( ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View view ) { int VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_3 == ( VAR_4 ) ) VAR_5 = VAR_1 ; else if ( VAR_3 == ( VAR_6 ) ) VAR_7 = VAR_1 ; else if ( VAR_3 == ( VAR_8 ) ) VAR_9 = VAR_1 ; METHOD_3 ( VAR_1 , VAR_3 ) ; VAR_12 . METHOD_4 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { return ; } TYPE_2 VAR_3 = METHOD_2 ( ) ; if ( size . equals ( VAR_3 ) ) { VAR_1 . METHOD_3 ( VAR_2 , 0 , ( 0 - INT_1 ) , null ) ; } else { VAR_1 . METHOD_3 ( VAR_2 , 0 , ( 0 - INT_1 ) , VAR_4 , VAR_3 . height , null ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { return ; } TYPE_2 VAR_3 = METHOD_2 ( ) ; if ( size . equals ( VAR_3 ) ) { VAR_1 . METHOD_3 ( VAR_2 , 0 , 0 , null ) ; } else { VAR_1 . METHOD_3 ( VAR_2 , 0 , 0 , VAR_4 , VAR_3 . height , null ) ; } }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 . getContext ( ) , STRING_1 , VAR_2 ) . show ( ) ; android.content.Intent i = new android.content.Intent ( VAR_1 . getContext ( ) , VAR_3 class ) ; i . METHOD_3 ( STRING_2 , this . VAR_4 ) ; i . METHOD_3 ( STRING_3 , position ) ; VAR_1 . getContext ( ) . METHOD_4 ( i ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 . getContext ( ) , STRING_1 , VAR_2 ) . show ( ) ; android.content.Intent i = new android.content.Intent ( VAR_1 . getContext ( ) , VAR_3 class ) ; i . METHOD_3 ( STRING_2 , this . VAR_4 ) ; VAR_1 . getContext ( ) . METHOD_4 ( i ) ; }\n"}
{"problem": "private java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { java.lang.String VAR_4 = ( ( VAR_5 ) + STRING_1 ) + ( METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ) ; VAR_4 = VAR_4 . replaceAll ( STRING_2 , STRING_3 ) . replaceAll ( STRING_4 , STRING_3 ) . toLowerCase ( ) ; return VAR_4 ; }\n", "fixed": "private java.lang.String METHOD_2 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { java.lang.String name = ( ( VAR_5 ) + STRING_1 ) + ( METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ) ; name = name . replaceAll ( STRING_2 , STRING_3 ) . replaceAll ( STRING_4 , STRING_3 ) . toLowerCase ( ) ; VAR_5 = ( VAR_5 ) + 1 ; return name ; }\n"}
{"problem": "public int METHOD_1 ( ) { int VAR_1 = 0 ; TYPE_1 < java.lang.Integer > index = VAR_2 . METHOD_2 ( ) ; if ( index . METHOD_3 ( ) ) { VAR_1 = TYPE_2 . min ( ( ( index . get ( ) ) + ( METHOD_4 ( INT_1 , VAR_3 . METHOD_5 ( ) ) ) ) , VAR_4 ) ; VAR_1 += ( VAR_2 . METHOD_6 ( ) ) ? METHOD_4 ( INT_1 , VAR_3 . METHOD_7 ( ) ) : 0 ; } return VAR_1 ; }\n", "fixed": "public int METHOD_1 ( ) { int VAR_1 = 0 ; TYPE_1 < java.lang.Integer > index = VAR_2 . METHOD_2 ( ) ; if ( index . METHOD_3 ( ) ) { VAR_1 = ( METHOD_4 ( INT_1 , VAR_3 . METHOD_5 ( ) ) ) + ( TYPE_2 . min ( index . get ( ) , VAR_4 ) ) ; VAR_1 += ( VAR_2 . METHOD_6 ( ) ) ? METHOD_4 ( INT_1 , VAR_3 . METHOD_7 ( ) ) : 0 ; } return VAR_1 ; }\n"}
{"fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "projectName": "libgdx.libgdx", "bugType": "Wrong Function Name", "problem": " \t}\r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n\t\tGL11.glTexParameter(target, pname, params);\r\n \t}\r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r", "fixed": " \t}\r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r", "sourceBeforeFix": "GL20.glUniform3(location,toFloatBuffer(v,offset,count * 3))", "sourceAfterFix": "GL20.glUniform3fv(location,toFloatBuffer(v,offset,count * 3))"}
{"problem": "public byte [ ] METHOD_1 ( long VAR_1 ) throws TYPE_1 { short VAR_2 ; short offset = ( ( short ) ( VAR_1 & INT_1 ) ) ; if ( offset == INT_1 ) { VAR_2 = VAR_3 ; } else { VAR_2 = VAR_4 ; } int VAR_5 = METHOD_2 ( VAR_1 ) ; if ( ! ( VAR_6 ) ) { open ( ) ; METHOD_3 ( ) ; } return getData ( VAR_5 , VAR_2 , offset ) ; }\n", "fixed": "public byte [ ] METHOD_1 ( long VAR_1 ) throws TYPE_1 { short offset = ( ( short ) ( VAR_1 & INT_1 ) ) ; int VAR_5 = METHOD_2 ( VAR_1 ) ; if ( ! ( VAR_6 ) ) { open ( ) ; METHOD_3 ( ) ; } return getData ( VAR_5 , offset ) ; }\n"}
{"problem": "public boolean METHOD_1 ( final java.lang.String VAR_1 ) throws TYPE_1 { if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) { return false ; } else { final TYPE_3 VAR_2 = TYPE_4 . METHOD_3 ( VAR_3 , new TYPE_5 < TYPE_3 > ( ) { public boolean METHOD_4 ( TYPE_3 VAR_4 ) { return VAR_1 . equals ( VAR_4 . getId ( ) ) ; } } ) ; VAR_2 . METHOD_5 ( new java.util.Date ( ) ) ; VAR_5 . METHOD_6 ( VAR_2 ) ; return true ; } }\n", "fixed": "public boolean open ( final java.lang.String VAR_1 ) throws TYPE_1 { if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) { return false ; } else { final TYPE_3 VAR_2 = TYPE_4 . METHOD_3 ( VAR_3 , new TYPE_5 < TYPE_3 > ( ) { public boolean METHOD_4 ( TYPE_3 VAR_4 ) { return VAR_1 . equals ( VAR_4 . getId ( ) ) ; } } ) ; VAR_2 . METHOD_5 ( null ) ; VAR_5 . METHOD_6 ( VAR_2 ) ; return true ; } }\n"}
{"fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "projectName": "libgdx.libgdx", "bugType": "Change Identifier Used", "problem": " \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \tpublic void glViewport (int x, int y, int width, int height) {", "fixed": " \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \tpublic void glViewport (int x, int y, int width, int height) {", "sourceBeforeFix": "GL.glDeleteTexturesEXT(n,textures,Memory.getPosition(textures))", "sourceAfterFix": "GL.glDeleteTextures(n,textures,Memory.getPosition(textures))"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { try { METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 , null ) ; return new TYPE_3 ( VAR_3 ) ; } catch ( TYPE_4 VAR_4 ) { } java.lang.String VAR_5 = VAR_1 + STRING_1 ; try { METHOD_2 ( ) . METHOD_4 ( VAR_1 , VAR_5 , VAR_6 , null ) ; return new TYPE_3 ( VAR_3 ) ; } catch ( TYPE_4 VAR_4 ) { return METHOD_5 ( STRING_2 , VAR_4 ) ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { METHOD_2 ( ) . METHOD_3 ( VAR_1 , null ) ; return new TYPE_3 ( VAR_3 ) ; } catch ( TYPE_4 VAR_4 ) { } java.lang.String VAR_5 = VAR_1 + STRING_1 ; try { METHOD_2 ( ) . METHOD_4 ( VAR_1 , VAR_5 , VAR_6 , null ) ; return new TYPE_3 ( VAR_3 ) ; } catch ( TYPE_4 VAR_4 ) { return METHOD_5 ( STRING_2 , VAR_4 ) ; } }\n"}
{"problem": "private void METHOD_1 ( boolean VAR_1 ) { try { METHOD_2 ( ) ; for ( TYPE_1 VAR_2 : VAR_3 ) { TYPE_2 VAR_4 = ( ( TYPE_2 ) ( VAR_2 ) ) ; if ( VAR_1 || ( ( VAR_4 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) != null ) ) { if ( ( VAR_4 . METHOD_6 ( ) ) != null ) { continue ; } METHOD_7 ( VAR_4 , true ) ; } } } finally { METHOD_8 ( ) ; } }\n", "fixed": "private void METHOD_1 ( boolean VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_3 ) { TYPE_2 VAR_4 = ( ( TYPE_2 ) ( VAR_2 ) ) ; if ( VAR_1 || ( ( VAR_4 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) != null ) ) { if ( ( VAR_4 . METHOD_6 ( ) ) != null ) { continue ; } METHOD_7 ( VAR_4 , true ) ; } } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < TYPE_1 , TYPE_3 > VAR_2 ) { if ( VAR_1 == null ) { VAR_3 . METHOD_2 ( STRING_1 ) ; return ; } VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ; VAR_4 . put ( VAR_1 . METHOD_5 ( ) , VAR_1 ) ; VAR_2 . METHOD_6 ( VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < TYPE_1 , TYPE_3 > VAR_2 ) { if ( VAR_1 == null ) { VAR_3 . METHOD_2 ( STRING_1 ) ; return ; } VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_6 ( VAR_1 ) ; VAR_4 . put ( VAR_1 . METHOD_5 ( ) , VAR_1 ) ; }\n"}
{"problem": "private void METHOD_1 ( java.lang.StringBuilder VAR_1 ) { if ( METHOD_2 ( ) ) { throw new TYPE_1 ( STRING_1 ) ; } boolean VAR_2 ; do { VAR_2 = false ; char c = METHOD_3 ( ) ; if ( c == CHAR_1 ) { VAR_2 = true ; } else { VAR_1 . append ( c ) ; METHOD_4 ( ) ; } } while ( ( ! ( METHOD_2 ( ) ) ) && ( ! VAR_2 ) ) ; }\n", "fixed": "private void METHOD_1 ( java.lang.StringBuilder VAR_1 ) { if ( METHOD_2 ( ) ) { throw new TYPE_1 ( STRING_1 ) ; } boolean VAR_2 ; do { VAR_2 = false ; char c = METHOD_3 ( ) ; if ( c == CHAR_1 ) { METHOD_4 ( ) ; VAR_2 = true ; } else { VAR_1 . append ( c ) ; METHOD_4 ( ) ; } } while ( ( ! ( METHOD_2 ( ) ) ) && ( ! VAR_2 ) ) ; }\n"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15847, value = \"Interrupted waiting for result from host %s\")\n     String interruptedAwaitingResultFromHost(String name);\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10847, value = \"Interrupted waiting for result from host %s\")\n     String interruptedAwaitingResultFromHost(String name);\n     /**", "sourceBeforeFix": "id=15851", "sourceAfterFix": "id=10851"}
{"problem": "public < TYPE_1 > java.lang.Object METHOD_1 ( TYPE_1 index ) { java.lang.Object result = null ; try { result = ( ( VAR_1 . get ( index ) ) == null ) ? null : VAR_1 . get ( index ) ; } catch ( java.io.IOException VAR_2 ) { java.lang.System.out.println ( ( STRING_1 + index ) ) ; VAR_2 . METHOD_2 ( ) ; } return result ; }\n", "fixed": "public < TYPE_1 > java.lang.Object METHOD_1 ( TYPE_1 index ) { java.lang.Object result = new java.lang.Object ( ) ; try { if ( ( VAR_1 . get ( index ) ) != null ) { result = VAR_1 . get ( index ) ; } } catch ( java.io.IOException VAR_2 ) { java.lang.System.out.println ( ( STRING_1 + index ) ) ; VAR_2 . METHOD_2 ( ) ; } return result ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory disambiguateProperties =\n       new PassFactory(\"disambiguateProperties\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory disambiguateProperties =\n       new PassFactory(\"disambiguateProperties\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = METHOD_2 ( VAR_4 , VAR_5 ) ; if ( VAR_3 != null ) { for ( TYPE_1 c : VAR_3 ) { if ( ( c . METHOD_3 ( ) . equals ( VAR_1 ) ) && ( c . getValue ( ) . startsWith ( ( VAR_2 + STRING_1 ) ) ) ) { return c . getValue ( ) . split ( STRING_1 ) [ 1 ] ; } } } return STRING_2 ; }\n", "fixed": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = METHOD_2 ( VAR_4 , VAR_5 ) ; if ( VAR_3 != null ) { for ( TYPE_1 c : VAR_3 ) { if ( ( c . METHOD_3 ( ) . equals ( VAR_1 ) ) && ( c . getValue ( ) . startsWith ( ( VAR_2 + STRING_1 ) ) ) ) { return c . getValue ( ) ; } } } return STRING_2 ; }\n"}
{"problem": "private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( ) ; java.lang.String date = VAR_1 . get ( 0 ) . METHOD_3 ( ) ; java.util.List < TYPE_1 > VAR_3 = VAR_2 . METHOD_4 ( date ) ; boolean VAR_4 = ( VAR_3 == null ) || ( VAR_3 . equals ( VAR_1 ) ) ; if ( ! VAR_4 ) { VAR_2 . METHOD_5 ( date , new TYPE_4 ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_1 ) ) ; } }\n", "fixed": "private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( ) ; java.lang.String date = VAR_1 . get ( 0 ) . METHOD_3 ( ) ; java.util.List < TYPE_1 > VAR_3 = VAR_2 . METHOD_4 ( date ) ; if ( ( VAR_3 == null ) || ( ! ( VAR_3 . equals ( VAR_1 ) ) ) ) { VAR_2 . METHOD_5 ( date , new TYPE_4 ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_1 ) ) ; } }\n"}
{"fixCommitSHA1": "3b508f55d24ab4baa5164189d052fb3b320bce02", "projectName": "apache.camel", "bugType": "Wrong Function Name", "problem": "         }\n         javaClass.getJavaDoc().setFullText(doc);\n        String prefix = \"camel.dataformat.\" + model.getModelName();\n         javaClass.addAnnotation(\"org.springframework.boot.context.properties.ConfigurationProperties\").setStringValue(\"prefix\", prefix);\n         for (DataFormatOptionModel option : model.getDataFormatOptions()) {", "fixed": "         }\n         javaClass.getJavaDoc().setFullText(doc);\n        String prefix = \"camel.dataformat.\" + model.getName();\n         javaClass.addAnnotation(\"org.springframework.boot.context.properties.ConfigurationProperties\").setStringValue(\"prefix\", prefix);\n         for (DataFormatOptionModel option : model.getDataFormatOptions()) {", "sourceBeforeFix": "model.getModelName()", "sourceAfterFix": "model.getName()"}
{"fixCommitSHA1": "74d3742b6e39c174111d3b0a6177c25b93f9c926", "projectName": "apache.flink", "bugType": "Change Identifier Used", "problem": " \t * \n \t * @return The closed DataStream\n \t */\n\tpublic DataStream<OUT> writeAsText(String path, long millis) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), millis, null);\n \t}", "fixed": " \t * \n \t * @return The closed DataStream\n \t */\n\tpublic DataStreamSink<OUT> writeAsText(String path, long millis) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), millis, null);\n \t}", "sourceBeforeFix": "DataStream<OUT>", "sourceAfterFix": "DataStreamSink<OUT>"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface AdvancedHazelcastRingbufferEndpointBuilder\n             extends\n                 EndpointProducerBuilder {\n         default HazelcastRingbufferEndpointBuilder basic() {", "fixed": "     \n    public interface AdvancedHazelcastRingbufferEndpointBuilder\n             extends\n                 EndpointProducerBuilder {\n         default HazelcastRingbufferEndpointBuilder basic() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = VAR_2 . METHOD_2 ( VAR_3 class ) ; VAR_1 . add ( VAR_4 , VAR_5 , TYPE_3 . toString ( ) ) ; VAR_1 . add ( VAR_6 , VAR_5 , msg . METHOD_3 ( ) . METHOD_4 ( ) ) ; if ( ( VAR_1 . METHOD_5 ( ) ) != null ) { try { VAR_2 . remove ( VAR_1 . METHOD_5 ( ) ) ; } catch ( java.lang.Exception VAR_7 ) { VAR_8 . METHOD_6 ( STRING_1 ) ; } } }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = VAR_2 . METHOD_2 ( VAR_3 class ) ; VAR_1 . add ( VAR_4 , VAR_5 , TYPE_3 . toString ( ) ) ; VAR_1 . add ( VAR_6 , VAR_5 , msg . METHOD_3 ( ) . METHOD_4 ( ) ) ; java.util.List < TYPE_2 > list = VAR_1 . list ( ) ; if ( ( list . size ( ) ) > 0 ) { for ( TYPE_2 p : list ) { VAR_2 . remove ( p ) ; } } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 response = METHOD_2 ( null ) ; TYPE_2 VAR_1 = response . METHOD_3 ( ) . get ( STRING_1 ) ; TYPE_3 . assertEquals ( STRING_2 , response . METHOD_4 ( VAR_2 . String class ) ) ; java.lang.String VAR_3 = STRING_3 ; METHOD_5 ( VAR_3 , VAR_1 ) ; TYPE_3 . assertEquals ( VAR_3 , METHOD_2 ( VAR_1 ) . METHOD_4 ( VAR_2 . String class ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 response = METHOD_2 ( ) ; TYPE_2 VAR_1 = response . METHOD_3 ( ) . get ( STRING_1 ) ; TYPE_3 . assertEquals ( STRING_2 , response . METHOD_4 ( VAR_2 . String class ) ) ; java.lang.String VAR_3 = STRING_3 ; METHOD_5 ( VAR_3 , VAR_1 ) ; TYPE_3 . assertEquals ( VAR_3 , METHOD_2 ( VAR_1 ) . METHOD_4 ( VAR_2 . String class ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { while ( ( VAR_1 ) > 0 ) { TYPE_1 . METHOD_2 ( ) ; try { java.lang.Thread . METHOD_3 ( INT_1 ) ; } catch ( TYPE_2 VAR_2 ) { } synchronized ( this ) { ( VAR_1 ) -- ; } } }\n", "fixed": "public void METHOD_1 ( ) { while ( ( VAR_1 ) >= 0 ) { synchronized ( this ) { ( VAR_1 ) -- ; } TYPE_1 . METHOD_2 ( ) ; try { java.lang.Thread . METHOD_3 ( INT_1 ) ; } catch ( TYPE_2 VAR_2 ) { } } }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { if ( METHOD_2 ( VAR_1 ) ) { METHOD_3 ( ) ; while ( ! ( METHOD_2 ( VAR_2 ) ) ) { METHOD_4 ( ) ; if ( METHOD_2 ( VAR_3 ) ) { METHOD_3 ( ) ; } } if ( METHOD_2 ( VAR_2 ) ) { METHOD_3 ( ) ; } else { throw new java.lang.Exception ( STRING_1 ) ; } } else { throw new java.lang.Exception ( STRING_2 ) ; } }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { if ( METHOD_2 ( VAR_1 ) ) { METHOD_3 ( ) ; while ( ! ( METHOD_2 ( VAR_2 ) ) ) { METHOD_4 ( ) ; if ( METHOD_2 ( VAR_3 ) ) { METHOD_3 ( ) ; } } if ( METHOD_2 ( VAR_2 ) ) { METHOD_3 ( ) ; } else { error ( STRING_1 ) ; } } else { error ( STRING_2 ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 = ( ( ( VAR_2 ) == null ) || ( ( ( VAR_3 ) != ( VAR_4 ) ) && ( ( VAR_3 ) <= 1 ) ) ) || ( ( ( VAR_5 ) != null ) && ( VAR_5 . METHOD_2 ( VAR_2 ) ) ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 = ( ( ( VAR_2 ) == null ) || ( ( ( VAR_3 ) != ( VAR_4 ) ) && ( ( VAR_3 ) == 0 ) ) ) || ( ( ( VAR_5 ) != null ) && ( VAR_5 . METHOD_2 ( VAR_2 ) ) ) ; }\n"}
{"problem": "private void build ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( ( ( TYPE_1 ) ( VAR_2 . METHOD_1 ( VAR_3 . content ) ) ) . METHOD_2 ( 0 ) ) ) ; VAR_4 = new TYPE_2 ( VAR_2 , VAR_5 ) ; VAR_4 . METHOD_3 ( VAR_6 ) ; VAR_4 . METHOD_4 ( new TYPE_3 ( ) { public void METHOD_5 ( ) { VAR_7 . METHOD_6 ( ) ; } } ) ; VAR_1 . METHOD_7 ( VAR_4 , VAR_8 , VAR_8 ) ; }\n", "fixed": "private void build ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_1 ( VAR_3 . content ) ) ) ; VAR_4 = new TYPE_2 ( VAR_2 , VAR_5 ) ; VAR_4 . METHOD_3 ( VAR_6 ) ; VAR_4 . METHOD_4 ( new TYPE_3 ( ) { public void METHOD_5 ( ) { VAR_7 . METHOD_6 ( ) ; } } ) ; VAR_1 . METHOD_7 ( VAR_4 , VAR_8 , VAR_8 ) ; }\n"}
{"fixCommitSHA1": "00644912992eceb3de7d2dc0213a05bf2844c1b2", "projectName": "hazelcast.hazelcast", "bugType": "Change Identifier Used", "problem": "                 } catch (InterruptedException e) {\n                     e.printStackTrace();\n                 }\n                hz1.getLifecycleService().terminate();\n             }\n         };", "fixed": "                 } catch (InterruptedException e) {\n                     e.printStackTrace();\n                 }\n                hz1.getLifecycleService().shutdown();\n             }\n         };", "sourceBeforeFix": "hz1.getLifecycleService().terminate()", "sourceAfterFix": "hz1.getLifecycleService().shutdown()"}
{"problem": "public java.lang.String toString ( ) { java.lang.StringBuilder str = new java.lang.StringBuilder ( ) ; str . append ( this . get ( 0 ) ) ; for ( int i = 1 ; i < ( this . size ( ) ) ; i ++ ) { str . append ( STRING_1 ) ; str . append ( this . get ( i ) ) ; } return str . toString ( ) ; }\n", "fixed": "public java.lang.String toString ( ) { java.lang.StringBuilder str = new java.lang.StringBuilder ( ) ; if ( ( this . size ( ) ) == 0 ) { return null ; } str . append ( this . get ( 0 ) ) ; for ( int i = 1 ; i < ( this . size ( ) ) ; i ++ ) { str . append ( STRING_1 ) . append ( this . get ( i ) ) ; } return str . toString ( ) ; }\n"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15840, value = \"Interrupted waiting for result from server %s\")\n     String interruptedAwaitingResultFromServer(ServerIdentity server);\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10840, value = \"Interrupted waiting for result from server %s\")\n     String interruptedAwaitingResultFromServer(ServerIdentity server);\n     /**", "sourceBeforeFix": "id=15852", "sourceAfterFix": "id=10852"}
{"fixCommitSHA1": "c46a39b13e1bfccdc09301b26f9cc4804d417c3b", "projectName": "druid-io.druid", "bugType": "Same Function More Args", "problem": "   public void testMoveNoop() throws Exception\n   {\n     MockStorageService mockS3Client = new MockStorageService();\n    S3DataSegmentMover mover = new S3DataSegmentMover(mockS3Client);\n     mockS3Client.putObject(\"archive\", new S3Object(\"targetBaseKey/test/2013-01-01T00:00:00.000Z_2013-01-02T00:00:00.000Z/1/0/index.zip\"));\n     mockS3Client.putObject(\"archive\", new S3Object(\"targetBaseKey/test/2013-01-01T00:00:00.000Z_2013-01-02T00:00:00.000Z/1/0/descriptor.json\"));", "fixed": "   public void testMoveNoop() throws Exception\n   {\n     MockStorageService mockS3Client = new MockStorageService();\n    S3DataSegmentMover mover = new S3DataSegmentMover(mockS3Client, new S3DataSegmentPusherConfig());\n     mockS3Client.putObject(\"archive\", new S3Object(\"targetBaseKey/test/2013-01-01T00:00:00.000Z_2013-01-02T00:00:00.000Z/1/0/index.zip\"));\n     mockS3Client.putObject(\"archive\", new S3Object(\"targetBaseKey/test/2013-01-01T00:00:00.000Z_2013-01-02T00:00:00.000Z/1/0/descriptor.json\"));", "sourceBeforeFix": "new S3DataSegmentMover(mockS3Client)", "sourceAfterFix": "new S3DataSegmentMover(mockS3Client,new S3DataSegmentPusherConfig())"}
{"problem": "private static void METHOD_1 ( java.lang.Throwable t , java.lang.String substring ) { java.lang.String msg = TYPE_1 . METHOD_2 ( t ) ; TYPE_2 . assertTrue ( ( ( ( STRING_1 + substring ) + STRING_2 ) + msg ) , msg . contains ( substring ) ) ; TYPE_3 . info ( STRING_3 , t ) ; }\n", "fixed": "private static void METHOD_1 ( java.lang.Throwable t , java.lang.String substring ) { java.lang.String msg = TYPE_1 . METHOD_2 ( t ) ; assertTrue ( ( ( ( STRING_1 + substring ) + STRING_2 ) + msg ) , msg . contains ( substring ) ) ; TYPE_3 . info ( STRING_3 , t ) ; }\n"}
{"fixCommitSHA1": "292df7f0b637a17c8a6a78b2cf9dbb483bbeb4da", "projectName": "hazelcast.hazelcast", "bugType": "Change Identifier Used", "problem": "         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCachePuts(1);\n            statistics.addPutTimeNano(System.nanoTime() - start);\n         }\n         return result;\n     }", "fixed": "         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCachePuts(1);\n            statistics.addPutTimeNanos(System.nanoTime() - start);\n         }\n         return result;\n     }", "sourceBeforeFix": "statistics.addGetTimeNano(System.nanoTime() - start)", "sourceAfterFix": "statistics.addGetTimeNanos(System.nanoTime() - start)"}
{"fixCommitSHA1": "f8c20919f9c2e18e48142c2712e34298f98b983e", "projectName": "spring-projects.spring-boot", "bugType": "Change Identifier Used", "problem": " \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tfactory.setPort(0);\n \t\tthis.container = factory\n\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n \t\tthis.thrown.expect(ConnectException.class);\n \t\tthis.thrown.expectMessage(\"Connection refused\");\ngetResponse(\"http:", "fixed": " \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tfactory.setPort(0);\n \t\tthis.container = factory\n\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \t\tthis.thrown.expect(ConnectException.class);\n \t\tthis.thrown.expectMessage(\"Connection refused\");\ngetResponse(\"http:", "sourceBeforeFix": "factory.getEmbdeddedServletContainer()", "sourceAfterFix": "factory.getEmbeddedServletContainer()"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( VAR_2 != null ) { switch ( VAR_2 ) { case TYPE_3 : { TYPE_4 . METHOD_3 ( false ) ; TYPE_3 . METHOD_3 ( true ) ; break ; } case TYPE_4 : { TYPE_4 . METHOD_3 ( true ) ; TYPE_3 . METHOD_3 ( false ) ; break ; } default : { TYPE_4 . METHOD_3 ( true ) ; TYPE_3 . METHOD_3 ( false ) ; break ; } } } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( VAR_2 != null ) { switch ( VAR_2 ) { case TYPE_3 : { TYPE_4 . METHOD_3 ( false ) ; TYPE_3 . METHOD_3 ( true ) ; break ; } case TYPE_4 : { TYPE_4 . METHOD_3 ( true ) ; TYPE_3 . METHOD_3 ( false ) ; break ; } } } }\n"}
{"fixCommitSHA1": "74d3742b6e39c174111d3b0a6177c25b93f9c926", "projectName": "apache.flink", "bugType": "Change Identifier Used", "problem": " \t * \n \t * @return The closed DataStream\n \t */\n\tpublic DataStream<OUT> writeAsCsv(String path, int batchSize, OUT endTuple) {\n \t\tif (this instanceof SingleOutputStreamOperator) {\n \t\t\t((SingleOutputStreamOperator<?, ?>) this).setMutability(false);\n \t\t}", "fixed": " \t * \n \t * @return The closed DataStream\n \t */\n\tpublic DataStreamSink<OUT> writeAsCsv(String path, int batchSize, OUT endTuple) {\n \t\tif (this instanceof SingleOutputStreamOperator) {\n \t\t\t((SingleOutputStreamOperator<?, ?>) this).setMutability(false);\n \t\t}", "sourceBeforeFix": "DataStream<OUT>", "sourceAfterFix": "DataStreamSink<OUT>"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": " import org.jboss.logging.Messages;\n /**\n * This module is using message IDs in the range 10900-10999. This file is using the subset 10975-10999 for domain\n* controller non-logger messages. See http:\n  * JBAS message id blocks.\n  * <p/>", "fixed": " import org.jboss.logging.Messages;\n /**\n * This module is using message IDs in the range 10800-10899. This file is using the subset 10830-10899 for domain\n* controller non-logger messages. See http:\n  * JBAS message id blocks.\n  * <p/>", "sourceBeforeFix": "id=15871", "sourceAfterFix": "id=10871"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) > 1 ) { VAR_1 . add ( VAR_2 ) ; } } return VAR_1 ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 VAR_2 : this . VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) > 1 ) { VAR_1 . add ( VAR_2 ) ; } } return VAR_1 ; }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface InfinispanEndpointProducerBuilder\n             extends\n                 EndpointProducerBuilder {\n         default AdvancedInfinispanEndpointProducerBuilder advanced() {", "fixed": "     \n    public interface InfinispanEndpointProducerBuilder\n             extends\n                 EndpointProducerBuilder {\n         default AdvancedInfinispanEndpointProducerBuilder advanced() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface WebsocketEndpointProducerBuilder\n             extends\n                 EndpointProducerBuilder {\n         default AdvancedWebsocketEndpointProducerBuilder advanced() {", "fixed": "     \n    public interface WebsocketEndpointProducerBuilder\n             extends\n                 EndpointProducerBuilder {\n         default AdvancedWebsocketEndpointProducerBuilder advanced() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface TwitterDirectMessageEndpointBuilder\n             extends\n                 TwitterDirectMessageEndpointConsumerBuilder, TwitterDirectMessageEndpointProducerBuilder {\n         default AdvancedTwitterDirectMessageEndpointBuilder advanced() {", "fixed": "     \n    public interface TwitterDirectMessageEndpointBuilder\n             extends\n                 TwitterDirectMessageEndpointConsumerBuilder, TwitterDirectMessageEndpointProducerBuilder {\n         default AdvancedTwitterDirectMessageEndpointBuilder advanced() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface BonitaEndpointBuilder\n            extends\n                EndpointConsumerBuilder {\n         default AdvancedBonitaEndpointBuilder advanced() {\n             return (AdvancedBonitaEndpointBuilder) this;\n         }", "fixed": "     \n    public interface BonitaEndpointBuilder extends EndpointConsumerBuilder {\n         default AdvancedBonitaEndpointBuilder advanced() {\n             return (AdvancedBonitaEndpointBuilder) this;\n         }", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 class ) ; TYPE_3 VAR_3 = TYPE_2 . METHOD_2 ( VAR_4 class ) ; TYPE_4 VAR_5 = new TYPE_5 ( ) . build ( ) ; VAR_5 . METHOD_3 ( VAR_1 ) ; VAR_5 . METHOD_3 ( VAR_3 ) ; TYPE_6 . assertEquals ( INT_1 , VAR_5 . METHOD_4 ( ) . size ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 class ) ; TYPE_3 VAR_3 = METHOD_2 ( VAR_4 class ) ; TYPE_4 VAR_5 = new TYPE_5 ( ) . build ( ) ; VAR_5 . METHOD_3 ( VAR_1 ) ; VAR_5 . METHOD_3 ( VAR_3 ) ; TYPE_6 . assertEquals ( INT_1 , VAR_5 . METHOD_4 ( ) . size ( ) ) ; }\n"}
{"problem": "private int [ ] [ ] METHOD_1 ( int VAR_1 ) { java.util.Random VAR_2 = new java.util.Random ( VAR_3 ) ; int [ ] [ ] VAR_4 = new int [ VAR_5 ] [ VAR_1 ] ; for ( int i = 0 ; i < ( VAR_5 ) ; i ++ ) { for ( int j = 0 ; j < VAR_1 ; j ++ ) { VAR_4 [ i ] [ j ] = VAR_2 . METHOD_2 ( INT_1 ) ; } } return VAR_4 ; }\n", "fixed": "private int [ ] [ ] METHOD_1 ( int k , int VAR_1 ) { java.util.Random VAR_2 = new java.util.Random ( VAR_3 ) ; int [ ] [ ] VAR_4 = new int [ k ] [ VAR_1 ] ; for ( int i = 0 ; i < k ; i ++ ) { for ( int j = 0 ; j < VAR_1 ; j ++ ) { VAR_4 [ i ] [ j ] = VAR_2 . METHOD_2 ( INT_1 ) ; } } return VAR_4 ; }\n"}
{"fixCommitSHA1": "af07edf1ab9024a78cb280e85982b1d6661a09ad", "projectName": "apache.hadoop", "bugType": "Change Modifier", "problem": "     return list;\n   }\n  protected void setProperties(Properties props) {\n     super.setProperties(props);\n   }", "fixed": "     return list;\n   }\n  @InterfaceAudience.Private\n  public void setProperties(Properties props) {\n     super.setProperties(props);\n   }", "sourceBeforeFix": "4", "sourceAfterFix": "1"}
{"fixCommitSHA1": "38eb6222bddaf49c3c9ae73ddef0cfe4ff5efa48", "projectName": "alibaba.dubbo", "bugType": "Change Numeric Literal", "problem": "     @Test\n     public void test_Decode_Error_Request_Object() throws IOException {\n        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);", "fixed": "     @Test\n     public void test_Decode_Error_Request_Object() throws IOException {\n        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);", "sourceBeforeFix": "(byte)0xff", "sourceAfterFix": "(byte)0xe2"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { int x = VAR_2 . METHOD_2 ( ) ; x = x - INT_1 ; if ( x < ( VAR_3 ) ) { x = VAR_3 ; VAR_4 . METHOD_3 ( ) ; VAR_4 = null ; } VAR_2 . METHOD_4 ( x , y ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { int x = VAR_2 . METHOD_2 ( ) ; x = x - INT_1 ; if ( x < ( VAR_3 ) ) { x = VAR_3 ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_3 ( ) ; } VAR_4 = null ; } VAR_2 . METHOD_4 ( x , y ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { int VAR_1 = 0 ; java.lang.String VAR_2 = new TYPE_1 ( VAR_1 , VAR_3 ) . METHOD_2 ( ) ; TYPE_2 VAR_4 = new TYPE_2 ( VAR_2 ) ; TYPE_1 out ; try { TYPE_3 . METHOD_3 ( VAR_5 . METHOD_4 ( VAR_1 ) ) . METHOD_5 ( new TYPE_4 ( ) ) ; } catch ( TYPE_4 VAR_6 ) { TYPE_5 . fail ( ) ; } out = VAR_4 . execute ( VAR_5 ) ; TYPE_5 . assertEquals ( VAR_7 , out . METHOD_6 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { int VAR_1 = 1 ; java.lang.String VAR_2 = new TYPE_1 ( VAR_1 , VAR_3 ) . METHOD_2 ( ) ; TYPE_2 VAR_4 = new TYPE_2 ( VAR_2 ) ; TYPE_1 out ; try { TYPE_3 . METHOD_3 ( VAR_5 . METHOD_4 ( VAR_1 ) ) . METHOD_5 ( new TYPE_4 ( ) ) ; } catch ( TYPE_4 VAR_6 ) { TYPE_5 . fail ( ) ; } out = VAR_4 . execute ( VAR_5 ) ; TYPE_5 . assertEquals ( VAR_7 , out . METHOD_6 ( ) ) ; }\n"}
{"problem": "private java.util.List < TYPE_1 > METHOD_1 ( java.util.Collection < TYPE_2 > VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_3 : VAR_1 ) { VAR_2 . add ( TYPE_1 . METHOD_2 ( VAR_3 ) ) ; } return VAR_2 ; }\n", "fixed": "private java.util.List < TYPE_1 > METHOD_1 ( java.util.Collection < TYPE_2 > VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; int i = - 1 ; for ( TYPE_2 VAR_3 : VAR_1 ) { VAR_2 . add ( TYPE_1 . METHOD_2 ( VAR_3 , ( i ++ ) ) ) ; } return VAR_2 ; }\n"}
{"fixCommitSHA1": "fd1fbd3bf7f1d6bca9b8c30703645dcb3f4c1f55", "projectName": "apache.camel", "bugType": "Change Boolean Literal", "problem": "     @Override\n     public boolean isSingleton() {\n        return false;\n     }\n }", "fixed": "     @Override\n     public boolean isSingleton() {\n        return true;\n     }\n }", "sourceBeforeFix": "return false; ", "sourceAfterFix": "return true; "}
{"problem": "public void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int VAR_6 , int VAR_7 , int VAR_8 , int VAR_9 , int VAR_10 ) { VAR_11 = this . VAR_12 ; VAR_13 = VAR_4 ; VAR_14 = VAR_3 ; VAR_15 = VAR_1 ; VAR_16 = VAR_1 ; VAR_17 = VAR_5 ; VAR_18 = VAR_6 ; VAR_19 = VAR_7 ; VAR_20 = VAR_8 ; VAR_21 = VAR_9 ; VAR_22 = VAR_10 ; }\n", "fixed": "public void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int VAR_6 , int VAR_7 , int VAR_8 , int VAR_9 , int VAR_10 ) { VAR_11 = this . VAR_12 ; VAR_13 = VAR_4 ; VAR_14 = VAR_3 ; VAR_15 = VAR_1 ; VAR_16 = VAR_2 ; VAR_17 = VAR_5 ; VAR_18 = VAR_6 ; VAR_19 = VAR_7 ; VAR_20 = VAR_8 ; VAR_21 = VAR_9 ; VAR_22 = VAR_10 ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( var ) ; VAR_1 . METHOD_3 ( null ) ; var . METHOD_3 ( null ) ; var . METHOD_2 ( null ) ; assertTrue ( VAR_1 . METHOD_4 ( 1 , INT_1 ) ) ; assertEquals ( INT_1 , var . getColor ( ) ) ; assertEquals ( INT_1 , VAR_1 . getColor ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( var ) ; VAR_1 . METHOD_3 ( null ) ; var . METHOD_3 ( null ) ; var . METHOD_2 ( null ) ; assertEquals ( INT_1 , var . getColor ( ) ) ; assertEquals ( INT_1 , VAR_1 . getColor ( ) ) ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory exportTestFunctions =\n       new PassFactory(\"exportTestFunctions\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory exportTestFunctions =\n       new PassFactory(\"exportTestFunctions\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public boolean METHOD_1 ( java.lang.String VAR_1 , int position ) { boolean VAR_2 = false ; java.util.List < java.lang.String > tmp = new java.util.ArrayList < > ( ) ; tmp = METHOD_2 ( VAR_1 ) ; for ( java.lang.String item : tmp ) { if ( item . equals ( java.lang.String . METHOD_3 ( position ) ) ) { VAR_2 = true ; break ; } } return VAR_2 ; }\n", "fixed": "public boolean METHOD_1 ( java.lang.String VAR_1 , int position ) { boolean VAR_2 = false ; java.util.List < java.lang.String > tmp ; tmp = METHOD_2 ( VAR_1 ) ; for ( java.lang.String item : tmp ) { if ( item . equals ( java.lang.String . METHOD_3 ( position ) ) ) { VAR_2 = true ; break ; } } return VAR_2 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { TYPE_1 n = new TYPE_1 ( this . VAR_1 , this . METHOD_2 ( ) , this . METHOD_3 ( ) , this . METHOD_4 ( ) , this . METHOD_5 ( ) , this . METHOD_6 ( ) , this . VAR_2 , this . METHOD_7 ( ) , this . METHOD_8 ( ) , this . getType ( ) ) ; VAR_3 = this . VAR_4 ; VAR_5 = this . VAR_6 ; return n ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { TYPE_1 n = new TYPE_1 ( this . VAR_1 , this . METHOD_2 ( ) , this . METHOD_3 ( ) , this . METHOD_4 ( ) , this . METHOD_5 ( ) , this . METHOD_6 ( ) , this . VAR_2 , this . METHOD_7 ( ) , this . METHOD_8 ( ) . METHOD_1 ( ) , this . getType ( ) ) ; VAR_3 = this . VAR_4 ; VAR_5 = this . VAR_6 ; return n ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory deadAssignmentsElimination =\n       new PassFactory(\"deadAssignmentsElimination\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory deadAssignmentsElimination =\n       new PassFactory(\"deadAssignmentsElimination\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "8fdd403b6c8331d56890de3165b7a0e77a0eaa42", "projectName": "apache.flink", "bugType": "Change Modifier", "problem": " \t * \n \t * @return A deep copy of this comparator instance.\n \t */\n\tpublic TypeComparator<T> duplicate();\n }", "fixed": " \t * \n \t * @return A deep copy of this comparator instance.\n \t */\n\tpublic abstract TypeComparator<T> duplicate();\n }", "sourceBeforeFix": "1", "sourceAfterFix": "1025"}
{"problem": "private void METHOD_1 ( java.lang.String fileName , boolean VAR_1 ) { try { java.lang.String VAR_2 = ( VAR_1 ) ? VAR_3 : VAR_4 ; java.lang.String VAR_5 = fileName . METHOD_2 ( ( ( VAR_6 ) + STRING_1 ) , ( VAR_2 + STRING_1 ) ) ; VAR_7 . METHOD_3 ( fileName , VAR_5 ) ; VAR_8 . METHOD_4 ( STRING_2 , fileName , ( VAR_1 ? STRING_3 : STRING_4 ) ) ; } catch ( java.lang.Exception VAR_9 ) { VAR_8 . METHOD_4 ( STRING_5 , fileName , VAR_9 ) ; } }\n", "fixed": "private void METHOD_1 ( java.lang.String fileName , boolean VAR_1 ) throws java.lang.Exception { try { java.lang.String VAR_2 = ( VAR_1 ) ? VAR_3 : VAR_4 ; java.lang.String VAR_5 = fileName . METHOD_2 ( ( ( VAR_6 ) + STRING_1 ) , VAR_2 ) ; VAR_7 . METHOD_3 ( fileName , VAR_5 ) ; VAR_8 . METHOD_4 ( STRING_2 , fileName , ( VAR_1 ? STRING_3 : STRING_4 ) ) ; } catch ( java.lang.Exception VAR_9 ) { VAR_8 . error ( STRING_5 , fileName , VAR_9 ) ; throw VAR_9 ; } }\n"}
{"fixCommitSHA1": "5622a68e763431819499b28fd976dd8d240480de", "projectName": "Activiti.Activiti", "bugType": "Change Identifier Used", "problem": "     if (event instanceof ActivitiEntityEvent) {\n       Object entity = ((ActivitiEntityEvent) event).getEntity();\n      if (entity instanceof ProcessDefinition) {\n         result = (ProcessDefinitionEntity) entity;\n       }\n     }", "fixed": "     if (event instanceof ActivitiEntityEvent) {\n       Object entity = ((ActivitiEntityEvent) event).getEntity();\n      if (entity instanceof ProcessDefinitionEntity) {\n         result = (ProcessDefinitionEntity) entity;\n       }\n     }", "sourceBeforeFix": "entity instanceof ProcessDefinition", "sourceAfterFix": "entity instanceof ProcessDefinitionEntity"}
{"problem": "public void METHOD_1 ( TYPE_1 state ) { if ( ( ( VAR_1 ) != null ) && ( state instanceof TYPE_2 ) ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( state ) ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; state = VAR_2 . METHOD_3 ( STRING_1 ) ; } super . METHOD_1 ( state ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 state ) { if ( state instanceof TYPE_2 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( state ) ) ; METHOD_2 ( VAR_2 ) ; state = VAR_2 . METHOD_3 ( STRING_1 ) ; } super . METHOD_1 ( state ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; TYPE_2 VAR_2 = VAR_1 . getData ( ) . METHOD_3 ( ) ; VAR_3 = VAR_2 . METHOD_4 ( ) ; VAR_4 = VAR_2 . METHOD_5 ( ) ; VAR_5 = VAR_2 . METHOD_6 ( ) ; VAR_6 = VAR_2 . METHOD_7 ( ) ; VAR_7 = VAR_2 . METHOD_8 ( ) ; METHOD_9 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . getData ( ) . METHOD_3 ( ) ; VAR_3 = VAR_2 . METHOD_4 ( ) ; VAR_4 = VAR_2 . METHOD_5 ( ) ; VAR_5 = VAR_2 . METHOD_6 ( ) ; VAR_6 = VAR_2 . METHOD_7 ( ) ; VAR_7 = VAR_2 . METHOD_8 ( ) ; METHOD_9 ( ) ; }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface AdvancedIOTAEndpointBuilder\n             extends\n                 AdvancedIOTAEndpointConsumerBuilder, AdvancedIOTAEndpointProducerBuilder {\n         default IOTAEndpointBuilder basic() {", "fixed": "     \n    public interface AdvancedIOTAEndpointBuilder\n             extends\n                 AdvancedIOTAEndpointConsumerBuilder, AdvancedIOTAEndpointProducerBuilder {\n         default IOTAEndpointBuilder basic() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_3 . METHOD_2 ( ) ) { VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_6 . METHOD_3 ( VAR_7 ) ; VAR_8 . METHOD_4 ( ) ; } else { VAR_6 . METHOD_3 ( VAR_5 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_3 . METHOD_2 ( ) ) { VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_6 . METHOD_3 ( VAR_7 ) ; VAR_8 . METHOD_4 ( ) ; } else { VAR_6 . METHOD_3 ( VAR_5 ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; } }\n"}
{"problem": "private boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( TYPE_2 . METHOD_2 ( this ) ) ) { for ( TYPE_1 VAR_2 : VAR_3 ) { if ( VAR_1 . getName ( ) . equals ( VAR_2 . getName ( ) ) ) { return false ; } } } return true ; }\n", "fixed": "private boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( TYPE_2 . METHOD_2 ( this ) ) ) { if ( ( VAR_3 ) == null ) { return true ; } else { for ( TYPE_1 VAR_2 : VAR_3 ) { if ( VAR_1 . getName ( ) . equals ( VAR_2 . getName ( ) ) ) { return false ; } } } } return true ; }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) { public void METHOD_2 ( ) { VAR_2 = true ; VAR_3 = true ; METHOD_3 ( VAR_4 ) ; setText ( VAR_5 ) ; METHOD_4 ( 0 ) ; } } ; TYPE_2 . METHOD_5 ( VAR_1 ) ; }\n", "fixed": "private void METHOD_1 ( ) { if ( VAR_2 ) return ; TYPE_1 VAR_1 = new TYPE_1 ( ) { public void METHOD_2 ( ) { VAR_2 = true ; VAR_3 = true ; METHOD_3 ( VAR_4 ) ; setText ( VAR_5 ) ; METHOD_4 ( 0 ) ; } } ; TYPE_2 . METHOD_5 ( VAR_1 ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ) - > { try { TYPE_2 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ) ; } catch ( java.lang.Exception VAR_1 ) { TYPE_4 . METHOD_5 ( VAR_2 , VAR_1 . METHOD_6 ( ) , VAR_1 ) ; } } ) ; }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ) - > { try { TYPE_3 . METHOD_4 ( ) ; TYPE_2 . METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_1 ) { TYPE_4 . METHOD_5 ( VAR_2 , VAR_1 . METHOD_6 ( ) , VAR_1 ) ; } } ) ; }\n"}
{"problem": "private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String path , TYPE_1 VAR_2 ) { assert ( VAR_1 . length ( ) ) >= 1 ; assert ( path . length ( ) ) >= 1 ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_4 = VAR_2 ; VAR_5 = VAR_1 . METHOD_2 ( ) ; VAR_3 . path = path . METHOD_2 ( ) ; long VAR_6 = METHOD_3 ( VAR_1 , path ) ; VAR_7 . put ( VAR_6 , VAR_3 ) ; }\n", "fixed": "private synchronized void METHOD_1 ( java.lang.String VAR_1 , java.lang.String path , TYPE_1 VAR_2 ) { assert ( VAR_1 . length ( ) ) >= 1 ; assert ( path . length ( ) ) >= 1 ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_4 = VAR_2 ; VAR_5 = VAR_1 . METHOD_2 ( ) ; VAR_3 . path = path . METHOD_2 ( ) ; long VAR_6 = METHOD_3 ( VAR_1 , path ) ; VAR_7 . put ( VAR_6 , VAR_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { ( VAR_2 ) -- ; ( VAR_3 ) ++ ; TYPE_3 . i ( STRING_1 , ( STRING_2 + ( VAR_2 ) ) ) ; TYPE_4 . METHOD_2 ( VAR_4 . METHOD_3 ( ) , false ) ; TYPE_5 . METHOD_4 ( ( STRING_3 + ( t . METHOD_5 ( ) ) ) ) ; t . METHOD_6 ( ) ; TYPE_4 . METHOD_7 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { ( VAR_2 ) -- ; ( VAR_3 ) ++ ; TYPE_3 . i ( STRING_1 , ( STRING_2 + ( VAR_2 ) ) ) ; TYPE_5 . METHOD_4 ( ( STRING_3 + ( t . METHOD_5 ( ) ) ) ) ; t . METHOD_6 ( ) ; TYPE_4 . METHOD_7 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { while ( METHOD_2 ( ) ) { METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; METHOD_5 ( ) ; try { java.lang.Thread . METHOD_6 ( TYPE_1 . getValue ( ) ) ; } catch ( TYPE_2 VAR_2 ) { throw new TYPE_3 ( ( STRING_1 + ( VAR_2 . METHOD_7 ( ) ) ) ) ; } } }\n", "fixed": "public void METHOD_1 ( ) { while ( true ) { METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; METHOD_5 ( ) ; try { java.lang.Thread . METHOD_6 ( TYPE_1 . getValue ( ) ) ; } catch ( TYPE_2 VAR_2 ) { throw new TYPE_3 ( ( STRING_1 + ( VAR_2 . METHOD_7 ( ) ) ) ) ; } } }\n"}
{"fixCommitSHA1": "477de6254ea1c1a70dc62a25e3b7ce4e86b1e142", "projectName": "openmrs.openmrs-core", "bugType": "Delete Throws Exception", "problem": " \t * @should save properties with case difference only\n \t */\n \t@Authorized(PrivilegeConstants.MANAGE_GLOBAL_PROPERTIES)\n\tpublic List<GlobalProperty> saveGlobalProperties(List<GlobalProperty> props) throws APIException;\n \t/**\n \t * Completely remove the given global property from the database", "fixed": " \t * @should save properties with case difference only\n \t */\n \t@Authorized(PrivilegeConstants.MANAGE_GLOBAL_PROPERTIES)\n\tpublic List<GlobalProperty> saveGlobalProperties(List<GlobalProperty> props);\n \t/**\n \t * Completely remove the given global property from the database", "sourceBeforeFix": "1", "sourceAfterFix": "1"}
{"problem": "protected TYPE_1 METHOD_1 ( TYPE_2 < ? > VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_3 VAR_3 = METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; if ( VAR_4 . METHOD_5 ( ) ) { METHOD_6 ( VAR_1 ) ; } synchronized ( VAR_5 ) { VAR_5 . add ( VAR_3 ) ; METHOD_7 ( false ) ; } return VAR_2 ; }\n", "fixed": "protected TYPE_1 METHOD_1 ( TYPE_2 < ? > VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_3 VAR_3 = METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; if ( VAR_4 . METHOD_5 ( ) ) { METHOD_6 ( VAR_1 ) ; } synchronized ( VAR_5 ) { VAR_5 . add ( VAR_3 ) ; } METHOD_7 ( false ) ; return VAR_2 ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory checkRegExp =\n       new PassFactory(\"checkRegExp\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory checkRegExp =\n       new PassFactory(\"checkRegExp\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "01fec049c0fb6b1c326d802687f3093b502123e0", "projectName": "openmrs.openmrs-core", "bugType": "Change Identifier Used", "problem": " \t\ttry {\r\n \t\t\tthis.destroy();\r\n \t\t}\r\n\t\tcatch (Throwable ex) {\r\n \t\t\tlog.error(ex);\r\n \t\t}\r\n \t}\r", "fixed": " \t\ttry {\r\n \t\t\tthis.destroy();\r\n \t\t}\r\n\t\tcatch (Exception ex) {\r\n \t\t\tlog.error(ex);\r\n \t\t}\r\n \t}\r", "sourceBeforeFix": "Throwable ex", "sourceAfterFix": "Exception ex"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_3 ) ; TYPE_1 VAR_4 = METHOD_2 ( VAR_1 . arg ) ; TYPE_3 view = TYPE_3 . METHOD_3 ( VAR_5 , VAR_6 , VAR_2 . getView ( ) . METHOD_4 ( ) , VAR_4 . getView ( ) . METHOD_4 ( ) ) ; TYPE_4 result = new TYPE_4 ( view , VAR_1 ) ; VAR_2 . METHOD_5 ( result : : METHOD_6 ) ; VAR_4 . METHOD_5 ( result : : METHOD_7 ) ; return result ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_3 ) ; TYPE_1 VAR_4 = METHOD_2 ( VAR_1 . arg ) ; TYPE_3 view = TYPE_3 . METHOD_3 ( VAR_5 , VAR_6 , VAR_2 . getView ( ) , VAR_4 . getView ( ) ) ; TYPE_4 result = new TYPE_4 ( this , view , VAR_4 , VAR_1 ) ; VAR_2 . METHOD_5 ( result : : METHOD_6 ) ; VAR_4 . METHOD_5 ( result : : METHOD_7 ) ; return result ; }\n"}
{"problem": "public java.lang.String toString ( ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( ) ; VAR_1 . append ( STRING_1 ) . append ( VAR_2 ) ; VAR_1 . append ( java.lang.String.format ( STRING_2 , VAR_3 , VAR_4 ) ) ; if ( VAR_5 ) VAR_1 . append ( STRING_3 ) . append ( VAR_6 ) ; VAR_1 . append ( STRING_4 ) ; return VAR_1 . toString ( ) ; }\n", "fixed": "public java.lang.String toString ( ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( ) ; VAR_1 . append ( STRING_1 ) ; VAR_1 . append ( java.lang.String.format ( STRING_2 , VAR_3 , VAR_4 ) ) ; VAR_1 . append ( STRING_3 ) . append ( VAR_6 ) ; VAR_1 . append ( STRING_4 ) ; return VAR_1 . toString ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { int position = METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( ( STRING_1 + position ) , VAR_1 ) ; VAR_2 . METHOD_4 ( new TYPE_3 ( position , VAR_1 , VAR_3 ) ) ; VAR_2 . start ( 0 , ( position > ( VAR_4 ) ? - INT_1 : INT_1 ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { int position = METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_4 ( new TYPE_3 ( position , VAR_1 , VAR_3 ) ) ; VAR_2 . start ( 0 , ( position > ( VAR_4 ) ? - INT_1 : INT_1 ) ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_3 < TYPE_4 , java.lang.String > info = TYPE_5 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 , VAR_4 , VAR_5 ) ; VAR_2 . METHOD_4 ( info . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( info . METHOD_7 ( ) ) ; VAR_2 . METHOD_8 ( METHOD_9 ( VAR_1 ) ) ; VAR_2 . METHOD_10 ( TYPE_6 . METHOD_11 ( VAR_1 . METHOD_12 ( ) ) ) ; VAR_2 . METHOD_13 ( VAR_6 ) ; return VAR_2 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_3 < TYPE_4 , java.lang.String > info = TYPE_5 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 , VAR_4 , VAR_5 ) ; VAR_2 . METHOD_4 ( info . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( info . METHOD_7 ( ) ) ; VAR_2 . METHOD_8 ( METHOD_9 ( VAR_1 ) ) ; VAR_2 . METHOD_10 ( METHOD_11 ( VAR_1 . METHOD_12 ( ) ) ) ; VAR_2 . METHOD_13 ( VAR_6 ) ; return VAR_2 ; }\n"}
{"problem": "private void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_6 . setText ( VAR_7 ) ; VAR_8 . setText ( VAR_9 ) ; } else { VAR_2 . METHOD_2 ( VAR_10 ) ; VAR_4 . METHOD_3 ( VAR_11 ) ; VAR_6 . setText ( VAR_12 ) ; VAR_8 . setText ( VAR_13 ) ; } }\n", "fixed": "private void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_6 . setText ( VAR_7 ) ; VAR_8 . setText ( VAR_9 ) ; } else { VAR_2 . METHOD_2 ( VAR_10 ) ; VAR_4 . METHOD_3 ( VAR_11 ) ; VAR_6 . setText ( VAR_12 ) ; VAR_8 . setText ( VAR_13 ) ; } VAR_1 = ! ( VAR_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_3 . setText ( ( ( STRING_1 + ( java.lang.String . METHOD_2 ( VAR_2 . METHOD_3 ( java.lang.Integer.parseInt ( VAR_4 . getText ( ) ) , java.lang.Integer.parseInt ( VAR_5 . getText ( ) ) , java.lang.Integer.parseInt ( VAR_6 . getText ( ) ) , java.lang.Integer.parseInt ( VAR_7 . getText ( ) ) , java.lang.Integer.parseInt ( VAR_8 . getText ( ) ) ) ) ) ) + \"0\" ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . setText ( ( ( STRING_1 + ( java.lang.String . METHOD_2 ( VAR_2 . METHOD_3 ( java.lang.Integer.parseInt ( VAR_4 . getText ( ) ) , java.lang.Integer.parseInt ( VAR_5 . getText ( ) ) , java.lang.Integer.parseInt ( VAR_6 . getText ( ) ) , java.lang.Integer.parseInt ( VAR_7 . getText ( ) ) , java.lang.Integer.parseInt ( VAR_8 . getText ( ) ) ) ) ) ) + \"0\" ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . setText ( STRING_2 ) ; if ( VAR_2 . METHOD_2 ( ) ) VAR_2 . METHOD_3 ( false ) ; if ( VAR_3 . METHOD_2 ( ) ) { time . METHOD_4 ( null ) ; VAR_3 . METHOD_3 ( false ) ; } if ( ( VAR_4 . METHOD_2 ( ) ) == false ) VAR_4 . METHOD_3 ( true ) ; METHOD_5 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . setText ( STRING_2 ) ; if ( VAR_2 . METHOD_2 ( ) ) VAR_2 . METHOD_3 ( false ) ; if ( VAR_3 . METHOD_2 ( ) ) { VAR_3 . METHOD_3 ( false ) ; } if ( ( VAR_4 . METHOD_2 ( ) ) == false ) VAR_4 . METHOD_3 ( true ) ; METHOD_5 ( ) ; }\n"}
{"problem": "public static boolean METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { int i = 0 ; int VAR_3 = TYPE_2 . METHOD_2 ( VAR_2 ) ; java.lang.String [ ] VAR_4 = TYPE_2 . METHOD_3 ( VAR_2 ) ; while ( i < VAR_3 ) { if ( VAR_4 [ i ] . equals ( VAR_1 ) ) { return true ; } } return false ; }\n", "fixed": "public static boolean METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { int i = 0 ; int VAR_3 = TYPE_2 . METHOD_2 ( VAR_2 ) ; java.lang.String [ ] VAR_4 = TYPE_2 . METHOD_3 ( VAR_2 ) ; while ( i < VAR_3 ) { if ( VAR_4 [ i ] . equals ( VAR_1 ) ) { return true ; } i ++ ; } return false ; }\n"}
{"problem": "private void METHOD_1 ( long VAR_1 , int VAR_2 ) { int VAR_3 = ( VAR_1 > 0 ) ? ( ( int ) ( VAR_1 / VAR_2 ) ) : 0 ; VAR_4 . METHOD_2 ( ) ; for ( int i = 1 ; i <= VAR_3 ; i ++ ) { VAR_4 . add ( i ) ; } }\n", "fixed": "private void METHOD_1 ( long VAR_1 , int VAR_2 ) { int VAR_3 = ( VAR_2 > 0 ) ? ( ( int ) ( ( VAR_1 / VAR_2 ) + 1 ) ) : 0 ; VAR_4 . METHOD_2 ( ) ; for ( int i = 1 ; i <= VAR_3 ; i ++ ) { VAR_4 . add ( i ) ; } }\n"}
{"fixCommitSHA1": "9ce956473be0ec029ee6738fb284659c17698518", "projectName": "checkstyle.checkstyle", "bugType": "Same Function More Args", "problem": "                 IOException.class,\n                 File.class);\n         logIOException.setAccessible(true);\n        logIOException.invoke(check, new IOException(), new File(\"\"));\n     }\n }", "fixed": "                 IOException.class,\n                 File.class);\n         logIOException.setAccessible(true);\n        logIOException.invoke(check, new IOException(\"test exception\"), new File(\"\"));\n     }\n }", "sourceBeforeFix": "new IOException()", "sourceAfterFix": "new IOException(\"test exception\")"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_1 ) ; VAR_2 = VAR_1 ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; METHOD_7 ( ) ; METHOD_8 ( new TYPE_2 < java.lang.String , TYPE_3 > ( STRING_2 , null ) ) ; java.lang.System.out.println ( ( STRING_3 + ( VAR_3 . size ( ) ) ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 = VAR_1 ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_2 ( ) ; METHOD_7 ( ) ; METHOD_8 ( new TYPE_2 < java.lang.String , TYPE_3 > ( STRING_2 , null ) ) ; java.lang.System.out.println ( ( STRING_3 + ( VAR_3 . size ( ) ) ) ) ; }\n"}
{"problem": "public TYPE_1 [ ] METHOD_1 ( ) { TYPE_1 [ ] VAR_1 = new TYPE_1 [ VAR_2 . size ( ) ] ; for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { VAR_1 [ i ] = new TYPE_2 ( i , ( ( STRING_1 + i ) + STRING_2 ) ) ; } return VAR_1 ; }\n", "fixed": "public TYPE_1 [ ] METHOD_1 ( ) { if ( ( ( VAR_2 ) == null ) || ( VAR_2 . isEmpty ( ) ) ) { return new TYPE_1 [ ] { } ; } else { TYPE_1 [ ] VAR_1 = new TYPE_1 [ VAR_2 . size ( ) ] ; for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { VAR_1 [ i ] = new TYPE_2 ( i , ( ( STRING_1 + i ) + STRING_2 ) ) ; } return VAR_1 ; } }\n"}
{"problem": "private static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { TYPE_1 VAR_4 = VAR_1 ; try { VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 ) . size ( VAR_2 , VAR_3 ) . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } return VAR_4 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { TYPE_1 VAR_4 = VAR_1 ; try { VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 ) . size ( VAR_2 , VAR_3 ) . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } return VAR_4 ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "    * Optimizes unused function arguments, unused return values, and inlines\n    * constant parameters. Also runs RemoveUnusedVars.\n    */\n  private final PassFactory optimizeCallsAndRemoveUnusedVars =\n       new PassFactory(\"optimizeCalls_and_removeUnusedVars\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "    * Optimizes unused function arguments, unused return values, and inlines\n    * constant parameters. Also runs RemoveUnusedVars.\n    */\n  final PassFactory optimizeCallsAndRemoveUnusedVars =\n       new PassFactory(\"optimizeCalls_and_removeUnusedVars\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public TYPE_1 build ( ) throws TYPE_2 { METHOD_1 ( ) ; final TYPE_1 VAR_1 = new TYPE_1 ( this ) ; if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_3 ( ) ; VAR_2 . add ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( false ) ; VAR_2 . METHOD_4 ( true ) ; VAR_2 . METHOD_5 ( VAR_3 ) ; } VAR_1 . METHOD_6 ( INT_1 ) ; VAR_1 . METHOD_7 ( true ) ; VAR_1 . METHOD_8 ( true ) ; return VAR_1 ; }\n", "fixed": "public TYPE_1 build ( ) throws TYPE_2 { METHOD_1 ( ) ; final TYPE_1 VAR_1 = new TYPE_1 ( this ) ; VAR_2 . add ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( false ) ; VAR_2 . METHOD_4 ( true ) ; VAR_1 . METHOD_6 ( INT_1 ) ; VAR_1 . METHOD_7 ( true ) ; VAR_1 . METHOD_8 ( true ) ; return VAR_1 ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( INT_1 ) ; VAR_1 . METHOD_4 ( STRING_1 , INT_2 , INT_3 , VAR_2 ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( INT_1 ) ; VAR_1 . METHOD_4 ( STRING_1 , INT_2 , INT_3 , VAR_2 ) ; this . VAR_1 = VAR_1 ; }\n"}
{"fixCommitSHA1": "2e4508e11e0b6d8a4634dff159a8ce3e50c133ca", "projectName": "libgdx.libgdx", "bugType": "Change Operand ", "problem": " \t\t\t\tfor (JsonValue meshPart = meshParts.child; meshPart != null; meshPart = meshPart.next) {\r\n \t\t\t\t\tModelMeshPart jsonPart = new ModelMeshPart();\r\n \t\t\t\t\tString partId = meshPart.getString(\"id\", null);\r\n\t\t\t\t\tif (id == null) {\r\n \t\t\t\t\t\tthrow new GdxRuntimeException(\"Not id given for mesh part\");\r\n \t\t\t\t\t}\r\n \t\t\t\t\tfor (ModelMeshPart other : parts) {\r", "fixed": " \t\t\t\tfor (JsonValue meshPart = meshParts.child; meshPart != null; meshPart = meshPart.next) {\r\n \t\t\t\t\tModelMeshPart jsonPart = new ModelMeshPart();\r\n \t\t\t\t\tString partId = meshPart.getString(\"id\", null);\r\n\t\t\t\t\tif (partId == null) {\r\n \t\t\t\t\t\tthrow new GdxRuntimeException(\"Not id given for mesh part\");\r\n \t\t\t\t\t}\r\n \t\t\t\t\tfor (ModelMeshPart other : parts) {\r", "sourceBeforeFix": "id == null", "sourceAfterFix": "partId == null"}
{"problem": "void METHOD_1 ( final TYPE_1 VAR_1 , final java.lang.String text ) throws java.io.IOException { VAR_1 . METHOD_2 ( STRING_1 ) ; final TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; try { VAR_2 . METHOD_4 ( text . METHOD_5 ( VAR_3 . value ) ) ; VAR_2 . METHOD_6 ( ) ; } finally { VAR_2 . METHOD_7 ( ) ; } }\n", "fixed": "void METHOD_1 ( final TYPE_1 VAR_1 , final java.lang.String text ) throws java.io.IOException { VAR_1 . METHOD_2 ( STRING_1 ) ; final TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; try { VAR_2 . METHOD_4 ( text . METHOD_5 ( VAR_3 . value ) ) ; } finally { } }\n"}
{"fixCommitSHA1": "8dad775af94f89faba78ef282c475cf9da02147a", "projectName": "wildfly.wildfly", "bugType": "Change Identifier Used", "problem": "             PropertiesAuthenticationResourceDefinition.PATH.marshallAsAttribute(properties, writer);\n             PropertiesAuthenticationResourceDefinition.RELATIVE_TO.marshallAsAttribute(properties, writer);\n             PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.marshallAsAttribute(properties, writer);\n        } else if (authentication.hasDefined(USERS)) {\n             ModelNode userDomain = authentication.get(USERS);\n             ModelNode users = userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();\n             writer.writeStartElement(Element.USERS.getLocalName());", "fixed": "             PropertiesAuthenticationResourceDefinition.PATH.marshallAsAttribute(properties, writer);\n             PropertiesAuthenticationResourceDefinition.RELATIVE_TO.marshallAsAttribute(properties, writer);\n             PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.marshallAsAttribute(properties, writer);\n        } else if (authentication.has(USERS)) {\n             ModelNode userDomain = authentication.get(USERS);\n             ModelNode users = userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();\n             writer.writeStartElement(Element.USERS.getLocalName());", "sourceBeforeFix": "authentication.hasDefined(USERS)", "sourceAfterFix": "authentication.has(USERS)"}
{"problem": "public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; int VAR_1 = java.lang.Integer.parseInt ( VAR_2 . getText ( ) . toString ( ) ) ; java.lang.String VAR_3 = VAR_4 . getText ( ) . toString ( ) ; TYPE_1 VAR_5 = new TYPE_1 ( VAR_1 , VAR_3 ) ; new TYPE_2 ( ) . execute ( VAR_5 ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; boolean isEmpty = ( VAR_2 . length ( ) ) == 0 ; if ( ! isEmpty ) { int VAR_1 = java.lang.Integer.parseInt ( VAR_2 . getText ( ) . toString ( ) ) ; java.lang.String VAR_3 = VAR_4 . getText ( ) . toString ( ) ; TYPE_1 VAR_5 = new TYPE_1 ( VAR_1 , VAR_3 ) ; new TYPE_2 ( ) . execute ( VAR_5 ) ; } }\n"}
{"fixCommitSHA1": "2f880c73edb600ab92cdd580ac74f7388b5c6135", "projectName": "Alluxio.alluxio", "bugType": "Change Modifier", "problem": "     }\n   }\n  public void completeFile(int fileId) {\n     if (INACTIVE) {\n       return;\n     }", "fixed": "     }\n   }\n  public synchronized void completeFile(int fileId) {\n     if (INACTIVE) {\n       return;\n     }", "sourceBeforeFix": "1", "sourceAfterFix": "33"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_1 . METHOD_2 ( VAR_2 ) ; java.util.List < java.lang.String > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_2 VAR_4 : TYPE_3 . values ( ) ) { VAR_3 . add ( VAR_4 . toString ( ) ) ; } VAR_3 . add ( 0 , STRING_1 ) ; TYPE_4 < java.lang.String > VAR_5 = new TYPE_4 ( context , VAR_6 , VAR_3 ) ; this . VAR_1 . METHOD_3 ( VAR_5 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; java.util.List < java.lang.String > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_2 VAR_4 : TYPE_3 . values ( ) ) { VAR_3 . add ( VAR_4 . toString ( ) ) ; } VAR_3 . add ( 0 , STRING_1 ) ; TYPE_4 < java.lang.String > VAR_5 = new TYPE_4 ( context , VAR_6 , VAR_3 ) ; this . VAR_1 . METHOD_3 ( VAR_5 ) ; this . VAR_1 . METHOD_2 ( VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , STRING_1 ) . METHOD_3 ( STRING_2 , STRING_3 ) . METHOD_4 ( new TYPE_2 ( INT_1 , STRING_4 ) ) . METHOD_5 ( ) . put ( STRING_5 ) . METHOD_6 ( ) . METHOD_7 ( VAR_2 ) . METHOD_4 ( STRING_6 , TYPE_3 . METHOD_8 ( 0 ) ) ; TYPE_4 . assertEquals ( 0 , VAR_3 . METHOD_9 ( STRING_7 ) . size ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , STRING_1 ) . METHOD_3 ( STRING_2 , STRING_3 ) . METHOD_4 ( new TYPE_2 ( INT_1 , STRING_4 ) ) . METHOD_5 ( ) . put ( STRING_5 ) . METHOD_6 ( ) . METHOD_7 ( VAR_2 ) . METHOD_4 ( STRING_6 , METHOD_8 ( 0 ) ) ; TYPE_4 . assertEquals ( 0 , VAR_3 . METHOD_9 ( STRING_7 ) . size ( ) ) ; }\n"}
{"fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf", "projectName": "yusuke.twitter4j", "bugType": "Wrong Function Name", "problem": "* @see <a href=\"http:\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }", "fixed": "* @see <a href=\"http:\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }", "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweets/\" + statusId+ \".json\",true))", "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweets/\" + statusId+ \".json\",true))"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15851, value = \"Operation targets host %s but that host is not registered\")\n     String invalidOperationTargetHost(String name);\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10851, value = \"Operation targets host %s but that host is not registered\")\n     String invalidOperationTargetHost(String name);\n     /**", "sourceBeforeFix": "id=15837", "sourceAfterFix": "id=10837"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response , TYPE_3 VAR_2 ) throws java.io.IOException , TYPE_4 { TYPE_5 VAR_3 = ( ( TYPE_5 ) ( VAR_1 ) ) ; TYPE_6 VAR_4 = ( ( TYPE_6 ) ( response ) ) ; java.util.Map < java.lang.String , java.lang.String > VAR_5 = METHOD_2 ( VAR_3 ) ; java.lang.String VAR_6 = VAR_5 . get ( VAR_7 ) ; METHOD_3 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; VAR_2 . METHOD_1 ( VAR_1 , response ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response , TYPE_3 VAR_2 ) throws java.io.IOException , TYPE_4 { TYPE_5 VAR_3 = ( ( TYPE_5 ) ( VAR_1 ) ) ; TYPE_6 VAR_4 = ( ( TYPE_6 ) ( response ) ) ; java.util.Map < java.lang.String , java.lang.String > VAR_5 = METHOD_2 ( VAR_3 ) ; java.lang.String VAR_6 = VAR_5 . get ( VAR_7 ) ; METHOD_3 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; VAR_2 . METHOD_1 ( VAR_3 , VAR_4 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_1 ) ; int VAR_2 = VAR_3 ; VAR_3 = - 1 ; TYPE_2 VAR_4 = VAR_5 . METHOD_4 ( VAR_6 ) ; VAR_4 . METHOD_5 ( 1 , VAR_3 ) ; VAR_4 . execute ( ) ; METHOD_6 ( ) ; VAR_4 = VAR_5 . METHOD_4 ( VAR_7 ) ; VAR_4 . METHOD_5 ( 1 , VAR_3 ) ; VAR_4 . execute ( ) ; VAR_3 = VAR_2 ; METHOD_7 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_1 , VAR_1 ) ; int VAR_2 = VAR_3 ; VAR_3 = - 1 ; TYPE_2 VAR_4 = VAR_5 . METHOD_4 ( VAR_6 ) ; VAR_4 . METHOD_5 ( 1 , VAR_3 ) ; VAR_4 . execute ( ) ; METHOD_6 ( ) ; VAR_4 = VAR_5 . METHOD_4 ( VAR_7 ) ; VAR_4 . METHOD_5 ( 1 , VAR_3 ) ; VAR_4 . execute ( ) ; VAR_3 = VAR_2 ; METHOD_7 ( ) ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; java.lang.String VAR_3 = VAR_1 . METHOD_2 ( STRING_2 ) ; java.lang.String VAR_4 = VAR_1 . METHOD_2 ( STRING_3 ) ; if ( ( ( VAR_2 != null ) && ( VAR_3 != null ) ) && ( VAR_4 != null ) ) { VAR_5 . METHOD_3 ( ( ( VAR_5 . METHOD_4 ( ) ) + VAR_2 ) , VAR_3 , VAR_4 ) ; return STRING_4 ; } else { return STRING_5 ; } }\n", "fixed": "public java.lang.String METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { java.lang.String VAR_2 = VAR_1 . get ( STRING_1 ) ; java.lang.String VAR_3 = VAR_1 . get ( STRING_2 ) ; java.lang.String VAR_4 = VAR_1 . get ( STRING_3 ) ; if ( ( ( VAR_2 != null ) && ( VAR_3 != null ) ) && ( VAR_4 != null ) ) { VAR_5 . METHOD_3 ( ( ( VAR_5 . METHOD_4 ( ) ) + VAR_2 ) , VAR_3 , VAR_4 ) ; return STRING_4 ; } else { return STRING_5 ; } }\n"}
{"fixCommitSHA1": "fc80cf0f323b8f45dd7e80f5a4cc814ae6d691a7", "projectName": "druid-io.druid", "bugType": "Same Function More Args", "problem": "   public void testMoveNoop() throws Exception\n   {\n     MockStorageService mockS3Client = new MockStorageService();\n    S3DataSegmentMover mover = new S3DataSegmentMover(mockS3Client);\n     mockS3Client.putObject(\"archive\", new S3Object(\"targetBaseKey/test/2013-01-01T00:00:00.000Z_2013-01-02T00:00:00.000Z/1/0/index.zip\"));\n     mockS3Client.putObject(\"archive\", new S3Object(\"targetBaseKey/test/2013-01-01T00:00:00.000Z_2013-01-02T00:00:00.000Z/1/0/descriptor.json\"));", "fixed": "   public void testMoveNoop() throws Exception\n   {\n     MockStorageService mockS3Client = new MockStorageService();\n    S3DataSegmentMover mover = new S3DataSegmentMover(mockS3Client, new S3DataSegmentPusherConfig());\n     mockS3Client.putObject(\"archive\", new S3Object(\"targetBaseKey/test/2013-01-01T00:00:00.000Z_2013-01-02T00:00:00.000Z/1/0/index.zip\"));\n     mockS3Client.putObject(\"archive\", new S3Object(\"targetBaseKey/test/2013-01-01T00:00:00.000Z_2013-01-02T00:00:00.000Z/1/0/descriptor.json\"));", "sourceBeforeFix": "new S3DataSegmentMover(mockS3Client)", "sourceAfterFix": "new S3DataSegmentMover(mockS3Client,new S3DataSegmentPusherConfig())"}
{"fixCommitSHA1": "544edb296479cbd05f35381b20a651e9d022e197", "projectName": "apache.camel", "bugType": "Change Numeric Literal", "problem": "         context.start();\n         for (int i = 0; i < 10; i++) {\n            getMockEndpoint(\"mock:\" + i).expectedMessageCount(1000);\n         }\n         ExecutorService executors = Executors.newFixedThreadPool(20);\n        for (int i = 0; i < 1000; i++) {\n             executors.execute(new Runnable() {\n                 public void run() {\n                     for (int i = 0; i < 10; i++) {", "fixed": "         context.start();\n         for (int i = 0; i < 10; i++) {\n            getMockEndpoint(\"mock:\" + i).expectedMessageCount(200);\n         }\n         ExecutorService executors = Executors.newFixedThreadPool(20);\n        for (int i = 0; i < 200; i++) {\n             executors.execute(new Runnable() {\n                 public void run() {\n                     for (int i = 0; i < 10; i++) {", "sourceBeforeFix": "i < 1000", "sourceAfterFix": "i < 200"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n     String invalidRolloutPlan(ModelNode modelNode, String nodeName);\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n     String invalidRolloutPlan(ModelNode modelNode, String nodeName);\n     /**", "sourceBeforeFix": "id=15830", "sourceAfterFix": "id=10830"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "    * Renames properties so that the two properties that never appear on\n    * the same object get the same name.\n    */\n  private final PassFactory ambiguateProperties =\n       new PassFactory(\"ambiguateProperties\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "    * Renames properties so that the two properties that never appear on\n    * the same object get the same name.\n    */\n  final PassFactory ambiguateProperties =\n       new PassFactory(\"ambiguateProperties\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"project": "Mockito", "bugId": 19, "problem": " public OngoingInjecter filterCandidate(Collection<Object> mocks,\n \t\t\t\t\tmockNameMatches.add(mock);\n \t\t\t\t}\n \t\t\t}\n\t\t\treturn next.filterCandidate(mockNameMatches, field,\n \t\t\t\t\tfieldInstance);\n \t\t\t/*\n \t\t\t * In this case we have to check whether we have conflicting naming", "fixed": " public OngoingInjecter filterCandidate(Collection<Object> mocks,\n \t\t\t\t\tmockNameMatches.add(mock);\n \t\t\t\t}\n \t\t\t}\n\t\t\treturn next.filterCandidate(mockNameMatches, field, fields,\n \t\t\t\t\tfieldInstance);\n \t\t\t/*\n \t\t\t * In this case we have to check whether we have conflicting naming", "observations": "Adds new parameter to existent method. Adjust code to reflect this.", "repairActions": ["condBranIfAdd", "condBranIfElseAdd", "loopAdd", "mcAdd", "mcParAdd", "mcRepl", "mdAdd", "mdParAdd", "objInstAdd", "retBranchAdd", "retExpChange"], "repairPatterns": ["condBlockOthersAdd", "condBlockRetAdd"]}
{"problem": "public java.lang.String METHOD_1 ( int id , java.lang.String VAR_1 ) { try { TYPE_1 VAR_2 = new TYPE_2 ( ) . METHOD_2 ( VAR_1 , VAR_3 class ) ; VAR_2 . METHOD_3 ( id ) ; java.lang.System.out.println ( STRING_1 ) ; return new TYPE_2 ( ) . METHOD_4 ( METHOD_5 ( VAR_2 ) ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_6 ( ) ; } return null ; }\n", "fixed": "public java.lang.String METHOD_1 ( int id , java.lang.String VAR_1 ) { try { TYPE_1 VAR_2 = new TYPE_2 ( ) . METHOD_2 ( VAR_1 , VAR_3 class ) ; VAR_2 . METHOD_3 ( id ) ; return new TYPE_2 ( ) . METHOD_4 ( METHOD_5 ( VAR_2 ) ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_6 ( ) ; } return null ; }\n"}
{"problem": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; TYPE_4 a = this . getActivity ( ) ; TYPE_5 b = ( ( TYPE_5 ) ( a . METHOD_3 ( VAR_5 ) ) ) ; b . METHOD_4 ( STRING_1 ) ; TYPE_6 VAR_6 = ( ( TYPE_6 ) ( view . METHOD_3 ( VAR_7 ) ) ) ; VAR_6 . setText ( TYPE_7 . METHOD_5 ( getString ( VAR_8 ) ) ) ; return view ; }\n", "fixed": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; TYPE_6 VAR_6 = ( ( TYPE_6 ) ( view . METHOD_3 ( VAR_7 ) ) ) ; VAR_6 . setText ( TYPE_7 . METHOD_5 ( getString ( VAR_8 ) ) ) ; return view ; }\n"}
{"fixCommitSHA1": "14c2a57c072c6036ba7c9246efb4186fd8fd2448", "projectName": "Graylog2.graylog2-server", "bugType": "More Specific If", "problem": "            if (r.destination != null) {\n                 return redirect(r.destination);\n             }", "fixed": "            if (r.destination != null && !r.destination.isEmpty()) {\n                 return redirect(r.destination);\n             }", "sourceBeforeFix": "r.destination != null", "sourceAfterFix": "r.destination != null && !r.destination.isEmpty()"}
{"problem": "public void METHOD_1 ( ) throws java.io.IOException { try { VAR_1 . METHOD_2 ( ) ; while ( ( ! ( VAR_2 ) ) && ( ! ( VAR_1 . METHOD_3 ( ) ) ) ) { VAR_3 . METHOD_4 ( ) ; METHOD_5 ( true ) ; } } finally { VAR_4 . METHOD_1 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) throws java.io.IOException { try { VAR_1 . METHOD_2 ( ) ; while ( ( ! ( VAR_2 ) ) && ( ! ( VAR_1 . METHOD_3 ( ) ) ) ) { VAR_3 . METHOD_4 ( ) ; METHOD_5 ( true ) ; } } finally { VAR_2 = true ; VAR_4 . METHOD_1 ( ) ; } }\n"}
{"problem": "private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 type ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) != null ) && ( ( VAR_2 . METHOD_3 ( type ) ) != null ) ) { return VAR_2 . METHOD_3 ( type ) ; } return new TYPE_1 ( ) ; }\n", "fixed": "private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 type ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) != null ) && ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( type ) ) != null ) ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( type ) ; } return new TYPE_1 ( ) ; }\n"}
{"fixCommitSHA1": "bb6e28592e1bfeaf1e9648d51a67b469af1472b1", "projectName": "apache.hadoop", "bugType": "Same Function More Args", "problem": "           public void run() {\n             try {\n               onTimerEvent();\n            }\n            catch (Exception e) {\n              LOG.warn(e);\n             }\n           }\n         }, millis, millis);", "fixed": "           public void run() {\n             try {\n               onTimerEvent();\n            } catch (Exception e) {\n              LOG.warn(\"Error invoking metrics timer\", e);\n             }\n           }\n         }, millis, millis);", "sourceBeforeFix": "LOG.warn(e)", "sourceAfterFix": "LOG.warn(\"Error invoking metrics timer\",e)"}
{"problem": "public synchronized void METHOD_1 ( java.lang.String message ) { try { while ( ( VAR_1 ) == null ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_2 ( INT_1 ) ; if ( VAR_2 . METHOD_3 ( ) ) { METHOD_4 ( VAR_3 ) ; } } VAR_1 . METHOD_5 ( ( message + \"\\n\" ) ) ; VAR_1 . METHOD_6 ( ) ; } catch ( java.io.IOException VAR_4 ) { METHOD_7 ( ( ( ( STRING_2 + message ) + STRING_3 ) + ( VAR_5 ) ) ) ; } catch ( TYPE_1 VAR_4 ) { } }\n", "fixed": "public synchronized void METHOD_1 ( java.lang.String message ) { try { while ( ( VAR_1 ) == null ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_2 ( INT_1 ) ; if ( VAR_2 . METHOD_3 ( ) ) { METHOD_4 ( VAR_3 ) ; } } VAR_1 . METHOD_5 ( message ) ; VAR_1 . METHOD_6 ( ) ; } catch ( java.io.IOException VAR_4 ) { METHOD_7 ( ( ( ( STRING_2 + message ) + STRING_3 ) + ( VAR_5 ) ) ) ; } catch ( TYPE_1 VAR_4 ) { } }\n"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15854, value = \"Null stream at index %d\")\n     String nullStream(int index);\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10854, value = \"Null stream at index %d\")\n     String nullStream(int index);\n     /**", "sourceBeforeFix": "id=15863", "sourceAfterFix": "id=10863"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 source = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; java.lang.String VAR_2 = source . getText ( ) ; if ( ( VAR_2 . equals ( STRING_1 ) ) && ( ( VAR_3 ) == true ) ) { source . setText ( STRING_2 ) ; } else if ( ( VAR_2 . equals ( STRING_1 ) ) && ( ( VAR_3 ) == false ) ) { source . setText ( STRING_3 ) ; } VAR_3 = ! ( VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 source = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; java.lang.String VAR_2 = source . getText ( ) ; if ( VAR_2 . equals ( STRING_1 ) ) { if ( VAR_3 ) source . setText ( STRING_2 ) ; else source . setText ( \"0\" ) ; VAR_3 = ! ( VAR_3 ) ; } }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface VmEndpointBuilder\n             extends\n                 VmEndpointConsumerBuilder, VmEndpointProducerBuilder {\n         default AdvancedVmEndpointBuilder advanced() {", "fixed": "     \n    public interface VmEndpointBuilder\n             extends\n                 VmEndpointConsumerBuilder, VmEndpointProducerBuilder {\n         default AdvancedVmEndpointBuilder advanced() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"fixCommitSHA1": "038c9b6d6103052795b6d6e1175cd964c7461bb2", "projectName": "AsyncHttpClient.async-http-client", "bugType": "Change Modifier", "problem": "         }\n         \n        protected int getMessageLength() {\n             return currentOutputPosition;\n         }", "fixed": "         }\n         \n        protected final int getMessageLength() {\n             return currentOutputPosition;\n         }", "sourceBeforeFix": "4", "sourceAfterFix": "20"}
{"problem": "public static void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( ( VAR_2 ) == null ) { try { VAR_2 = new TYPE_1 ( ) ; } catch ( final java.io.IOException VAR_3 ) { throw new TYPE_2 ( VAR_3 ) ; } catch ( final TYPE_3 VAR_3 ) { throw new TYPE_2 ( VAR_3 ) ; } catch ( final TYPE_4 VAR_3 ) { throw new TYPE_2 ( VAR_3 ) ; } } } }\n", "fixed": "public static void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( ( VAR_2 ) == null ) { try { VAR_2 = new TYPE_1 ( ) ; } catch ( java.io.IOException | TYPE_3 | TYPE_4 VAR_3 ) { throw new TYPE_2 ( VAR_3 ) ; } } } }\n"}
