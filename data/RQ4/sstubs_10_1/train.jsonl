{"fixCommitSHA1": "eba21442eb7ab27514cf82240bb443955c5e52c4", "projectName": "Alluxio.alluxio", "bugType": "Wrong Function Name", "problem": "       URIStatus status = statuses.get(k);\n       ret[k] = new FileStatus(status.getLength(), status.isFolder(), 3, status.getBlockSizeBytes(),\n          status.getCreationTimeMs(), status.getCreationTimeMs(), null, null, null,\n           new Path(mAlluxioHeader + status.getPath()));\n     }\n     return ret;", "fixed": "       URIStatus status = statuses.get(k);\n       ret[k] = new FileStatus(status.getLength(), status.isFolder(), 3, status.getBlockSizeBytes(),\n          status.getLastModificationTimeMs(), status.getCreationTimeMs(), null, null, null,\n           new Path(mAlluxioHeader + status.getPath()));\n     }\n     return ret;", "sourceBeforeFix": "status.getCreationTimeMs()", "sourceAfterFix": "status.getLastModificationTimeMs()"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n    @Message(id = 15866, value = \"%s is null\")\n     IllegalArgumentException nullVar(String name);\n     /**", "fixed": "      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n    @Message(id = 10866, value = \"%s is null\")\n     IllegalArgumentException nullVar(String name);\n     /**", "sourceBeforeFix": "id=15868", "sourceAfterFix": "id=10868"}
{"fixCommitSHA1": "1f06fd5e26e7454182368890d0b882817ca5869f", "projectName": "google.closure-compiler", "bugType": "Change Identifier Used", "problem": "     }\n   }\n  private static final List<PersistentLocalScope> PRIMORDIAL_LIST = ImmutableList.of();\n   /**\n    * A subclass of the traditional Scope class that knows about its children,", "fixed": "     }\n   }\n  private static final ImmutableList<PersistentLocalScope> PRIMORDIAL_LIST = ImmutableList.of();\n   /**\n    * A subclass of the traditional Scope class that knows about its children,", "sourceBeforeFix": "List<PersistentLocalScope>", "sourceAfterFix": "ImmutableList<PersistentLocalScope>"}
{"fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf", "projectName": "yusuke.twitter4j", "bugType": "Wrong Function Name", "problem": "* @see <a href=\"http:\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n     /**", "fixed": "* @see <a href=\"http:\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n     /**", "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",null,true))", "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",null,true))"}
{"fixCommitSHA1": "ed13d3007bbe9cb7df8641d2e287bf94c314fb86", "projectName": "facebook.presto", "bugType": "Wrong Function Name", "problem": "                 }\n             });\n         }\n        long newReservation = memoryReservation.getAndAdd(bytes);\n         if (newReservation > maxMemoryReservation) {\n             memoryReservation.getAndAdd(-bytes);\n             throw new ExceededMemoryLimitException(getMaxMemorySize());", "fixed": "                 }\n             });\n         }\n        long newReservation = memoryReservation.addAndGet(bytes);\n         if (newReservation > maxMemoryReservation) {\n             memoryReservation.getAndAdd(-bytes);\n             throw new ExceededMemoryLimitException(getMaxMemorySize());", "sourceBeforeFix": "memoryReservation.getAndAdd(bytes)", "sourceAfterFix": "memoryReservation.addAndGet(bytes)"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15856, value = \"Invalid url stream.\")\n     String invalidUrlStream();\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10856, value = \"Invalid url stream.\")\n     String invalidUrlStream();\n     /**", "sourceBeforeFix": "id=15856", "sourceAfterFix": "id=10856"}
{"fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba", "projectName": "antlr.antlr4", "bugType": "Change Numeric Literal", "problem": "grammarBuilder.append(\"  | '(' e ')'   {$v = $e.v;}\ngrammarBuilder.append(\"  | left=e INC  {$v = $left.v + 1;}\ngrammarBuilder.append(\"  | left=e DEC  {$v = $left.v - 1;}\n\t\tgrammarBuilder.append(\"  | ID          {$v = 3}\n \t\tgrammarBuilder.append(\"  ;\\n\");\n \t\tgrammarBuilder.append(\"ID : 'a'..'z'+ ;\\n\");\n \t\tgrammarBuilder.append(\"INT : '0'..'9'+ ;\\n\");", "fixed": "grammarBuilder.append(\"  | '(' e ')'   {$v = $e.v;}\ngrammarBuilder.append(\"  | left=e INC  {$v = $left.v + 1;}\ngrammarBuilder.append(\"  | left=e DEC  {$v = $left.v - 1;}\n\t\tgrammarBuilder.append(\"  | ID          {$v = 3;}\n \t\tgrammarBuilder.append(\"  ;\\n\");\n \t\tgrammarBuilder.append(\"ID : 'a'..'z'+ ;\\n\");\n \t\tgrammarBuilder.append(\"INT : '0'..'9'+ ;\\n\");", "sourceBeforeFix": "new StringBuilder(254)", "sourceAfterFix": "new StringBuilder(253)"}
{"fixCommitSHA1": "83b9dd427535bce39be43a9e8224cdbc352d7427", "projectName": "square.okhttp", "bugType": "Change Modifier", "problem": "   \n   private char[] chars;\n  public DistinguishedNameParser(X500Principal principal) {", "fixed": "   \n   private char[] chars;\n  DistinguishedNameParser(X500Principal principal) {", "sourceBeforeFix": "1", "sourceAfterFix": "0"}
{"fixCommitSHA1": "a4662237bc467310f0dc1c28aa621f84571225b1", "projectName": "Activiti.Activiti", "bugType": "Change Numeric Literal", "problem": "     processEngineConfiguration.setClock(testClock);\n    testClock.setCurrentTime(new Date(0));\n     runtimeService.startProcessInstanceByKey(\"testTimerCancelledEvent\");\n     listener.clearEventsReceived();", "fixed": "     processEngineConfiguration.setClock(testClock);\n    testClock.setCurrentTime(new Date(1));\n     runtimeService.startProcessInstanceByKey(\"testTimerCancelledEvent\");\n     listener.clearEventsReceived();", "sourceBeforeFix": "new Date(0)", "sourceAfterFix": "new Date(1)"}
{"fixCommitSHA1": "9a0a814c76eb7b63376625513c16a8c91c045afb", "projectName": "openhab.openhab", "bugType": "Change Numeric Literal", "problem": "     @Override\r\n     public byte[] decodeMessage() {\r\n        byte[] data = new byte[16];\r\n         data[0] = 0x10;\r\n         data[1] = RFXComBaseMessage.PacketType.RAIN.toByte();\r", "fixed": "     @Override\r\n     public byte[] decodeMessage() {\r\n        byte[] data = new byte[17];\r\n         data[0] = 0x10;\r\n         data[1] = RFXComBaseMessage.PacketType.RAIN.toByte();\r", "sourceBeforeFix": "new byte[16]", "sourceAfterFix": "new byte[17]"}
