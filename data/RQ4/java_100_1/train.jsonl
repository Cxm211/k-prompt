{"problem": "public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_1 . METHOD_2 ( ) ) && ( ! ( VAR_2 . METHOD_2 ( ) ) ) ) { return 1 ; } else if ( ( ! ( VAR_1 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_2 ( ) ) ) { return - 1 ; } return 0 ; }\n", "fixed": "public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_1 . METHOD_2 ( ) ) && ( ! ( VAR_2 . METHOD_2 ( ) ) ) ) { return 1 ; } else if ( ( ! ( VAR_1 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_2 ( ) ) ) { return - 1 ; } else { } return 0 ; }\n"}
{"fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba", "projectName": "antlr.antlr4", "bugType": "Change Numeric Literal", "problem": " \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n\t\tStringBuilder grammarBuilder = new StringBuilder(247);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {System.out.println($ctx.toStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");", "fixed": " \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {System.out.println($ctx.toStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");", "sourceBeforeFix": "new StringBuilder(730)", "sourceAfterFix": "new StringBuilder(729)"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { java.lang.System.out.println ( STRING_1 ) ; if ( TYPE_1 . METHOD_2 ( ) ) { TYPE_2 VAR_1 = TYPE_2 . METHOD_3 ( ) ; TYPE_3 response = VAR_1 . METHOD_4 ( STRING_2 ) ; java.lang.System.out.println ( ( STRING_3 + ( response . METHOD_5 ( ) ) ) ) ; TYPE_4 . assertTrue ( response . METHOD_5 ( ) . contains ( STRING_2 ) ) ; VAR_1 . METHOD_6 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { java.lang.System.out.println ( STRING_1 ) ; TYPE_2 VAR_1 = TYPE_2 . METHOD_3 ( ) ; TYPE_3 response = VAR_1 . METHOD_4 ( STRING_2 ) ; java.lang.System.out.println ( ( STRING_3 + ( response . METHOD_5 ( ) ) ) ) ; TYPE_4 . assertTrue ( response . METHOD_5 ( ) . contains ( STRING_2 ) ) ; VAR_1 . METHOD_6 ( ) ; }\n"}
{"problem": "public java.util.List < java.lang.String > METHOD_1 ( ) { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( ) ; for ( TYPE_1 VAR_1 : METHOD_2 ( ) ) list . add ( ( ( ( VAR_1 . getText ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_3 ( ) ) ) ) ; return list ; }\n", "fixed": "public java.util.List < java.lang.String > METHOD_1 ( ) { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( ) ; for ( TYPE_1 VAR_1 : METHOD_2 ( ) ) list . add ( ( ( ( VAR_1 . getText ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_3 ( ) ) ) ) ; java.lang.System.out.println ( list ) ; return list ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_1 . METHOD_2 ( INT_1 , INT_1 , INT_2 , INT_3 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( ) . METHOD_5 ( new TYPE_2 ( 0 , 0 ) ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 ) ; VAR_1 . METHOD_4 ( ) . add ( VAR_3 , STRING_2 ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_1 . METHOD_2 ( INT_1 , INT_1 , INT_2 , INT_2 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( ) . METHOD_5 ( new TYPE_2 ( 0 , 0 ) ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 ) ; VAR_1 . METHOD_4 ( ) . add ( VAR_3 , STRING_2 ) ; }\n"}
{"problem": "public byte [ ] METHOD_1 ( java.lang.String key ) { try { if ( ( TYPE_1 . getData ( ) ) != null ) { java.lang.Object value = TYPE_1 . getData ( ) . get ( key ) ; if ( value instanceof TYPE_2 ) { return ( ( TYPE_2 ) ( value ) ) . METHOD_2 ( ) ; } else { return ( ( byte [ ] ) ( value ) ) ; } } } catch ( TYPE_3 VAR_1 ) { TYPE_4 . METHOD_3 ( VAR_1 ) ; return null ; } }\n", "fixed": "public byte [ ] METHOD_1 ( java.lang.String key ) { try { if ( ( TYPE_1 . getData ( ) ) != null ) { java.lang.Object value = TYPE_1 . getData ( ) . get ( key ) ; if ( value instanceof TYPE_2 ) { return ( ( TYPE_2 ) ( value ) ) . METHOD_2 ( ) ; } else { return ( ( byte [ ] ) ( value ) ) ; } } } catch ( TYPE_3 VAR_1 ) { TYPE_4 . METHOD_3 ( VAR_1 ) ; } return null ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; VAR_3 . METHOD_4 ( STRING_1 , VAR_5 ) ; this . METHOD_5 ( VAR_3 ) ; METHOD_6 ( ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; VAR_3 . METHOD_4 ( STRING_1 , VAR_5 ) ; this . METHOD_5 ( VAR_3 ) ; result ( ) ; METHOD_6 ( ) ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 < ? , ? > VAR_2 , TYPE_4 context , java.lang.String VAR_3 ) throws java.io.IOException { java.lang.String name = VAR_1 . getName ( ) ; if ( name == null ) { return VAR_2 . METHOD_2 ( context , VAR_3 ) ; } else { TYPE_5 VAR_4 = ( ( TYPE_5 ) ( VAR_2 . METHOD_3 ( context ) ) ) ; return new TYPE_1 ( VAR_4 . METHOD_4 ( ) , ( name + VAR_3 ) ) ; } }\n", "fixed": "public static TYPE_1 METHOD_1 ( TYPE_3 < ? , ? > VAR_2 , java.lang.String name , TYPE_4 context , java.lang.String VAR_3 ) throws java.io.IOException { TYPE_5 VAR_4 = ( ( TYPE_5 ) ( VAR_2 . METHOD_3 ( context ) ) ) ; return new TYPE_1 ( VAR_4 . METHOD_4 ( ) , ( name + VAR_3 ) ) ; }\n"}
{"problem": "public int METHOD_1 ( java.lang.String VAR_1 ) { int num = - 1 ; try { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_3 = VAR_2 . METHOD_3 ( ) ; TYPE_4 VAR_4 = VAR_3 . METHOD_4 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; if ( VAR_4 . METHOD_5 ( ) ) num = VAR_4 . getInt ( 1 ) ; VAR_4 . METHOD_6 ( ) ; VAR_3 . METHOD_6 ( ) ; } catch ( TYPE_5 VAR_5 ) { VAR_5 . METHOD_7 ( ) ; } return num ; }\n", "fixed": "public int METHOD_1 ( java.lang.String VAR_1 ) { int num = - 1 ; try { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_3 = VAR_2 . METHOD_3 ( ) ; TYPE_4 VAR_4 = VAR_3 . METHOD_4 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; if ( VAR_4 . METHOD_5 ( ) ) num = VAR_4 . getInt ( 1 ) ; TYPE_2 . METHOD_6 ( VAR_2 , VAR_3 , VAR_4 ) ; } catch ( TYPE_5 VAR_5 ) { VAR_5 . METHOD_7 ( ) ; } return num ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . text = METHOD_2 ( VAR_1 . text ) ; VAR_3 = VAR_4 ; VAR_2 . name = VAR_1 . name ; TYPE_2 VAR_5 = new TYPE_2 ( VAR_6 ) ; VAR_5 . METHOD_3 ( VAR_1 ) ; return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; if ( ! ( VAR_1 == null ) ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . text = METHOD_2 ( VAR_1 . text ) ; VAR_3 = VAR_4 ; VAR_2 . name = VAR_1 . name ; TYPE_2 VAR_5 = new TYPE_2 ( VAR_6 ) ; VAR_5 . METHOD_3 ( VAR_1 ) ; } return VAR_1 ; }\n"}
{"problem": "static boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { VAR_1 = VAR_1 . trim ( ) . toLowerCase ( ) ; switch ( VAR_1 ) { case \"true\" : return true ; case \"false\" : return false ; case STRING_1 : return true ; case STRING_2 : return false ; case STRING_3 : return false ; case STRING_4 : return true ; case \"0\" : return false ; } } return false ; }\n", "fixed": "static boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { VAR_1 = VAR_1 . trim ( ) . toLowerCase ( ) ; switch ( VAR_1 ) { case \"true\" : return true ; case \"false\" : return false ; case STRING_1 : return true ; case STRING_2 : return true ; case STRING_3 : return false ; case STRING_4 : return true ; case \"0\" : return false ; } } return false ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_3 VAR_4 = VAR_1 . METHOD_4 ( ) ; TYPE_2 VAR_5 = TYPE_2 . METHOD_5 ( VAR_4 , VAR_2 ) ; TYPE_2 VAR_6 = TYPE_2 . METHOD_5 ( VAR_3 , VAR_2 ) ; METHOD_6 ( VAR_7 , VAR_2 , VAR_6 ) ; METHOD_6 ( VAR_8 , VAR_5 , VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_3 VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_3 VAR_4 = VAR_1 . METHOD_4 ( ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_2 VAR_5 = TYPE_2 . METHOD_5 ( VAR_4 , VAR_2 ) ; TYPE_2 VAR_6 = TYPE_2 . METHOD_5 ( VAR_3 , VAR_2 ) ; METHOD_6 ( VAR_7 , VAR_2 , VAR_6 ) ; METHOD_6 ( VAR_8 , VAR_5 , VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( state ) == ( VAR_2 ) ) { VAR_3 . add ( new TYPE_2 ( VAR_1 . METHOD_2 ( VAR_4 ) , TYPE_3 . METHOD_3 ( ) , VAR_5 , VAR_6 . start ) ) ; } else { VAR_7 . METHOD_1 ( VAR_1 . METHOD_2 ( VAR_4 ) . METHOD_4 ( ) , VAR_5 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( state ) == ( VAR_2 ) ) { VAR_3 . add ( new TYPE_2 ( VAR_1 . METHOD_2 ( VAR_4 ) , TYPE_3 . METHOD_3 ( ) , VAR_5 , VAR_6 . start ) ) ; } VAR_7 . METHOD_1 ( VAR_1 . METHOD_2 ( VAR_4 ) . METHOD_4 ( ) , VAR_5 ) ; }\n"}
{"problem": "public void setValue ( long VAR_1 ) { if ( ! ( METHOD_1 ( ) ) ) { if ( ( VAR_2 ) != VAR_1 ) { VAR_2 = VAR_1 ; super . setValue ( VAR_1 ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( this , VAR_1 , VAR_4 ) ; } VAR_5 = VAR_1 / ( VAR_6 ) ; } } }\n", "fixed": "public void setValue ( long VAR_1 ) { if ( ! ( METHOD_1 ( ) ) ) { if ( ( VAR_2 ) != VAR_1 ) { VAR_2 = VAR_1 ; super . setValue ( VAR_1 ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( this , VAR_1 , VAR_4 ) ; } VAR_5 = VAR_1 / ( VAR_6 ) ; } } else { super . setValue ( VAR_1 ) ; } }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory sanityCheckAst =\n       new PassFactory(\"sanityCheckAst\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory sanityCheckAst =\n       new PassFactory(\"sanityCheckAst\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "e10e9d38c4ec9ed081da916b924b43a6381fb93d", "projectName": "netty.netty", "bugType": "Change Identifier Used", "problem": "         }\n        ch.unsafe().flushNow();\n     }\n     private static void unregisterWritableTasks(AbstractNioChannel ch) {", "fixed": "         }\n        ch.unsafe().flush();\n     }\n     private static void unregisterWritableTasks(AbstractNioChannel ch) {", "sourceBeforeFix": "ch.unsafe().flushNow()", "sourceAfterFix": "ch.unsafe().flush()"}
{"problem": "public boolean METHOD_1 ( java.lang.String VAR_1 ) { java.util.Properties VAR_2 = VAR_3 . METHOD_2 ( ) ; boolean VAR_4 = false ; if ( METHOD_3 ( VAR_1 ) ) { if ( METHOD_4 ( VAR_1 ) ) { VAR_4 = METHOD_5 ( ) ; METHOD_6 ( ) ; } } VAR_5 . METHOD_7 ( VAR_2 ) ; return VAR_4 ; }\n", "fixed": "public boolean METHOD_1 ( java.lang.String VAR_1 ) { java.util.Properties VAR_2 = VAR_3 . METHOD_2 ( ) ; boolean VAR_4 = false ; if ( METHOD_3 ( VAR_1 ) ) { if ( METHOD_4 ( VAR_1 , VAR_2 ) ) { VAR_4 = METHOD_5 ( VAR_2 ) ; METHOD_6 ( VAR_2 ) ; } } VAR_5 . METHOD_7 ( VAR_2 ) ; return VAR_4 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 + STRING_2 ; VAR_2 = VAR_3 . METHOD_2 ( ) ; TYPE_1 VAR_4 = null ; try { VAR_4 = VAR_2 . METHOD_3 ( VAR_1 ) ; } catch ( TYPE_2 VAR_5 ) { VAR_6 . error ( STRING_3 ) ; } return VAR_4 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_4 = null ; java.lang.String VAR_1 = STRING_1 + STRING_2 ; VAR_2 = VAR_3 . METHOD_2 ( ) ; try { VAR_4 = VAR_2 . METHOD_3 ( VAR_1 ) ; } catch ( TYPE_2 VAR_5 ) { VAR_6 . error ( STRING_3 ) ; } return VAR_4 ; }\n"}
{"problem": "protected java.util.Set < java.lang.String > METHOD_1 ( final java.lang.String VAR_1 ) { final java.util.Set < java.lang.String > VAR_2 = new java.util.HashSet < > ( ) ; for ( final java.lang.String url : VAR_3 . METHOD_2 ( ) ) { final java.util.Set < java.lang.String > VAR_4 = VAR_5 . METHOD_3 ( url , ( STRING_1 + VAR_1 ) , new TYPE_1 ( ) , true ) ; if ( null != VAR_4 ) { VAR_2 . METHOD_4 ( VAR_4 ) ; } } return TYPE_2 . METHOD_5 ( VAR_2 ) ; }\n", "fixed": "protected java.util.Set < java.lang.String > METHOD_1 ( final java.lang.String VAR_1 ) { final java.util.Set < java.lang.String > VAR_2 = new java.util.HashSet < > ( ) ; for ( final java.lang.String url : VAR_3 . METHOD_2 ( ) ) { final java.util.Set < java.lang.String > VAR_4 = VAR_5 . METHOD_3 ( url , ( STRING_1 + VAR_1 ) , new TYPE_1 ( ) , null , true ) ; if ( null != VAR_4 ) { VAR_2 . METHOD_4 ( VAR_4 ) ; } } return TYPE_2 . METHOD_5 ( VAR_2 ) ; }\n"}
{"fixCommitSHA1": "8abfa48f2eb5edaf3f5a2cc2350e4e3c232f4152", "projectName": "checkstyle.checkstyle", "bugType": "Change Modifier", "problem": "     private class FileDropListener implements FileDrop.Listener {\n         private final JScrollPane scrollPane;\n        public FileDropListener(JScrollPane scrollPane) {\n             this.scrollPane = scrollPane;\n         }", "fixed": "     private class FileDropListener implements FileDrop.Listener {\n         private final JScrollPane scrollPane;\n        FileDropListener(JScrollPane scrollPane) {\n             this.scrollPane = scrollPane;\n         }", "sourceBeforeFix": "1", "sourceAfterFix": "0"}
{"problem": "public boolean METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; if ( ( VAR_2 != null ) && ( ( VAR_2 . getClass ( ) ) != ( VAR_3 class ) ) ) { VAR_1 = true ; VAR_4 . METHOD_3 ( ) ; } } return VAR_1 ; }\n", "fixed": "public boolean METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; if ( ( VAR_2 != null ) && ( ( VAR_2 . getClass ( ) ) != ( VAR_3 class ) ) ) { VAR_1 = true ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_3 ( ) ; } } } return VAR_1 ; }\n"}
{"problem": "public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; if ( VAR_1 . METHOD_1 ( STRING_2 ) ) java.lang.System.out.println ( STRING_3 ) ; java.io.File f = new java.io.File ( STRING_4 ) ; VAR_1 . METHOD_2 ( f ) ; java.lang.String VAR_2 = null ; java.lang.Object [ ] c = null ; c = VAR_1 . METHOD_1 ( STRING_5 , VAR_2 ) ; java.lang.System.out.println ( c [ 0 ] ) ; TYPE_2 VAR_3 = VAR_1 . METHOD_3 ( STRING_5 , VAR_2 ) ; VAR_4 . METHOD_4 ( ) ; }\n", "fixed": "public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; if ( VAR_1 . METHOD_1 ( STRING_2 ) ) java.lang.System.out.println ( STRING_3 ) ; java.io.File f = new java.io.File ( STRING_4 ) ; VAR_1 . METHOD_2 ( f ) ; java.lang.String VAR_2 = null ; java.lang.Object [ ] c = null ; c = VAR_1 . METHOD_1 ( STRING_5 , VAR_2 ) ; java.lang.System.out.println ( c [ 0 ] ) ; TYPE_2 VAR_3 = VAR_1 . METHOD_3 ( STRING_5 , VAR_2 ) ; VAR_1 . METHOD_4 ( ) ; }\n"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n     String as7431();\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n     String as7431();\n     /**", "sourceBeforeFix": "id=15863", "sourceAfterFix": "id=10863"}
{"fixCommitSHA1": "c6852c9956205b986fde8fe4c3c5d22ba4646912", "projectName": "Alluxio.alluxio", "bugType": "Change Identifier Used", "problem": "   @Before\n   public void before() {\n     mWorker = PowerMockito.spy(mResource.get().getWorker());\n    Whitebox.setInternalState(AlluxioWorker.class, \"sAlluxioWorker\", mWorker);\n     BlockWorker blockWorker = PowerMockito.mock(BlockWorker.class);\n     Whitebox.setInternalState(mWorker, \"mBlockWorker\", blockWorker);\n     mStoreMeta = PowerMockito.mock(BlockStoreMeta.class);", "fixed": "   @Before\n   public void before() {\n     mWorker = PowerMockito.spy(mResource.get().getWorker());\n    Whitebox.setInternalState(DefaultAlluxioWorker.class, \"sAlluxioWorker\", mWorker);\n     BlockWorker blockWorker = PowerMockito.mock(BlockWorker.class);\n     Whitebox.setInternalState(mWorker, \"mBlockWorker\", blockWorker);\n     mStoreMeta = PowerMockito.mock(BlockStoreMeta.class);", "sourceBeforeFix": "AlluxioWorker.class", "sourceAfterFix": "DefaultAlluxioWorker.class"}
{"problem": "private void METHOD_1 ( java.lang.Long VAR_1 , java.lang.Long VAR_2 , TYPE_1 VAR_3 ) { TYPE_2 VAR_4 = null ; try { VAR_4 = VAR_3 . METHOD_2 ( VAR_5 . METHOD_3 ( ) ) ; VAR_4 . METHOD_4 ( 1 , VAR_1 ) ; VAR_4 . METHOD_4 ( INT_1 , VAR_2 ) ; VAR_4 . METHOD_5 ( ) ; } catch ( TYPE_3 VAR_6 ) { throw new TYPE_4 ( VAR_7 , VAR_6 ) ; } finally { METHOD_6 ( VAR_4 ) ; } }\n", "fixed": "private void METHOD_1 ( java.lang.Long VAR_1 , java.lang.Long VAR_2 , TYPE_1 VAR_3 ) { try ( TYPE_2 VAR_4 = VAR_3 . METHOD_2 ( VAR_5 . METHOD_3 ( ) ) ) { VAR_4 . METHOD_4 ( 1 , VAR_1 ) ; VAR_4 . METHOD_4 ( INT_1 , VAR_2 ) ; VAR_4 . METHOD_5 ( ) ; } catch ( TYPE_3 VAR_6 ) { throw new TYPE_4 ( VAR_7 , VAR_6 ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; position += VAR_1 . position ; VAR_3 . METHOD_3 ( VAR_2 . name , VAR_2 ) ; VAR_4 . put ( VAR_2 . name , VAR_2 ) ; }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( text . substring ( position ) ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; position += VAR_1 . position ; VAR_3 . METHOD_3 ( VAR_2 . name , VAR_2 ) ; VAR_4 . put ( VAR_2 . name , VAR_2 ) ; }\n"}
{"problem": "public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) { TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_2 ) ) ; if ( ! ( VAR_3 . METHOD_2 ( ) ) ) { VAR_4 . METHOD_3 ( VAR_5 [ INT_1 ] , STRING_1 , VAR_1 . position ) ; VAR_1 . type = VAR_6 ; } return TYPE_3 . METHOD_4 ( this , ( ( TYPE_4 ) ( VAR_3 ) ) . VAR_7 ) ; }\n", "fixed": "public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) { TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_2 ) ) ; if ( ! ( VAR_3 . METHOD_2 ( ) ) ) { VAR_4 . METHOD_3 ( VAR_5 [ INT_1 ] , STRING_1 , VAR_1 . position ) ; VAR_1 . type = VAR_6 ; return VAR_1 . type ; } return TYPE_3 . METHOD_4 ( this , ( ( TYPE_4 ) ( VAR_3 ) ) . VAR_7 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 event , float x , float y , int VAR_1 , int VAR_2 ) { VAR_3 = false ; VAR_4 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( ) ; VAR_6 . METHOD_4 ( ) ; VAR_6 . METHOD_5 ( ) ; VAR_6 . METHOD_6 ( ) ; VAR_7 . remove ( ) ; TYPE_2 . remove ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 event , float x , float y , int VAR_1 , int VAR_2 ) { VAR_3 = false ; METHOD_3 ( ) ; VAR_6 . METHOD_4 ( ) ; VAR_6 . METHOD_5 ( ) ; VAR_6 . METHOD_6 ( ) ; VAR_7 . remove ( ) ; TYPE_2 . remove ( ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; }\n"}
{"problem": "public TYPE_1 < TYPE_2 > METHOD_1 ( int id , TYPE_3 args ) { java.lang.String [ ] VAR_1 = new java.lang.String [ ] { VAR_2 , VAR_3 , VAR_4 , VAR_5 } ; return new TYPE_4 ( this , VAR_6 , VAR_1 , null , null , null ) ; }\n", "fixed": "public TYPE_1 < TYPE_2 > METHOD_1 ( int id , TYPE_3 args ) { java.lang.String [ ] VAR_1 = new java.lang.String [ ] { VAR_3 , VAR_4 , VAR_5 , VAR_2 } ; return new TYPE_4 ( this , VAR_6 , VAR_1 , null , null , null ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( new TYPE_2 ( ) ) ; VAR_2 = VAR_1 . METHOD_3 ( VAR_3 class ) ; java.util.List < java.lang.String > VAR_4 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_4 . add ( \"0\" ) ; VAR_4 . add ( STRING_1 ) ; java.lang.System.out.println ( VAR_4 ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( new TYPE_2 ( ) ) ; VAR_2 = VAR_1 . METHOD_3 ( VAR_3 class ) ; java.util.List < java.lang.String > VAR_4 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_4 . add ( \"0\" ) ; VAR_4 . add ( STRING_1 ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( VAR_3 ) ; TYPE_1 VAR_5 = getIntent ( ) . METHOD_5 ( ) ; TYPE_3 VAR_6 = new TYPE_3 ( ) ; VAR_6 . METHOD_6 ( VAR_5 ) ; TYPE_4 VAR_7 = METHOD_7 ( ) ; TYPE_5 VAR_8 = VAR_7 . METHOD_8 ( ) ; VAR_8 . replace ( VAR_9 , VAR_6 ) ; VAR_8 . commit ( ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_1 VAR_5 = getIntent ( ) . METHOD_5 ( ) ; TYPE_3 VAR_6 = new TYPE_3 ( ) ; VAR_6 . METHOD_6 ( VAR_5 ) ; TYPE_4 VAR_7 = METHOD_7 ( ) ; TYPE_5 VAR_8 = VAR_7 . METHOD_8 ( ) ; VAR_8 . replace ( VAR_9 , VAR_6 ) ; VAR_8 . commit ( ) ; }\n"}
{"problem": "public static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 response ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_3 VAR_2 : response . METHOD_2 ( ) ) { VAR_1 . add ( TYPE_4 . METHOD_1 ( VAR_2 ) ) ; } return VAR_1 ; }\n", "fixed": "public static java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 response ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_3 VAR_2 : response . METHOD_2 ( ) ) { VAR_1 . add ( TYPE_4 . METHOD_1 ( VAR_2 ) ) ; } return VAR_1 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( new TYPE_3 ( ) ) ; int size = list . size ( ) ; for ( int i = 0 ; i < size ; i ++ ) { TYPE_4 VAR_2 = list . get ( i ) ; VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; } return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( new TYPE_3 ( ) ) ; for ( int i = 0 ; i < ( size ( ) ) ; i ++ ) { TYPE_4 VAR_2 = list . get ( i ) ; VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; } return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_1 VAR_2 ) { int i ; for ( i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( VAR_1 . get ( i ) . equals ( VAR_2 ) ) break ; } VAR_1 . set ( i , this . VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_1 VAR_2 ) { int i = 0 ; while ( ( i < ( VAR_1 . size ( ) ) ) && ( ( VAR_1 . get ( i ) ) != VAR_2 ) ) { if ( ( VAR_1 . get ( i ) ) != VAR_2 ) i ++ ; } if ( i != ( VAR_1 . size ( ) ) ) VAR_1 . set ( i , this . VAR_3 ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = ( ( METHOD_2 ( ) ) != null ) ? new TYPE_2 ( ( ( TYPE_3 ) ( METHOD_2 ( ) ) ) ) : new TYPE_2 ( ) ; if ( ( VAR_2 ) != null ) { return new TYPE_1 ( this , 1 , VAR_1 , VAR_3 , true , VAR_2 ) ; } else { return new TYPE_1 ( this , 1 , VAR_1 , VAR_3 , false ) ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = ( ( METHOD_2 ( ) ) != null ) ? new TYPE_2 ( METHOD_2 ( ) ) : new TYPE_2 ( ) ; if ( ( VAR_2 ) != null ) { return new TYPE_1 ( this , 1 , VAR_1 , VAR_3 , true , VAR_2 ) ; } else { return new TYPE_1 ( this , 1 , VAR_1 , VAR_3 , false ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 context ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( context . get ( VAR_2 ) ) ) ; TYPE_3 VAR_3 = TYPE_4 . METHOD_2 ( VAR_4 class , context ) ; return ( super . METHOD_1 ( context ) ) & ( ( VAR_3 . METHOD_3 ( VAR_1 ) ) & ( ( ( ( TYPE_5 ) ( VAR_1 . getSelection ( ) . METHOD_4 ( ) ) ) . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ) == null ) ) ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 context ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( context . get ( VAR_2 ) ) ) ; TYPE_3 VAR_3 = TYPE_4 . METHOD_2 ( VAR_4 class , context ) ; return ( super . METHOD_1 ( context ) ) && ( ( VAR_3 . METHOD_3 ( VAR_1 ) ) & ( ( ( ( TYPE_5 ) ( VAR_1 . getSelection ( ) . METHOD_4 ( ) ) ) . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ) == null ) ) ; }\n"}
{"fixCommitSHA1": "292df7f0b637a17c8a6a78b2cf9dbb483bbeb4da", "projectName": "hazelcast.hazelcast", "bugType": "Wrong Function Name", "problem": "         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCacheRemovals(1);\n            statistics.addRemoveTimeNano(System.nanoTime() - start);\n         }\n         return result;\n     }", "fixed": "         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCacheRemovals(1);\n            statistics.addRemoveTimeNanos(System.nanoTime() - start);\n         }\n         return result;\n     }", "sourceBeforeFix": "statistics.addPutTimeNano(System.nanoTime() - start)", "sourceAfterFix": "statistics.addPutTimeNanos(System.nanoTime() - start)"}
{"problem": "public void METHOD_1 ( long VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_3 = true ; int VAR_4 = ( ( int ) ( ( long ) ( VAR_1 / INT_1 ) ) ) ; TYPE_1 . METHOD_3 ( VAR_5 , ( STRING_2 + VAR_4 ) ) ; if ( VAR_4 <= INT_2 ) { VAR_2 . METHOD_4 ( VAR_4 ) ; } }\n", "fixed": "public void METHOD_1 ( long VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_3 = true ; int VAR_4 = ( ( int ) ( ( long ) ( VAR_1 / INT_1 ) ) ) ; if ( VAR_4 <= INT_2 ) { VAR_2 . METHOD_4 ( VAR_4 ) ; } }\n"}
{"problem": "protected java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { boolean VAR_1 = true ; java.lang.String VAR_2 = VAR_3 . getText ( ) ; java.lang.String VAR_4 = TYPE_1 . METHOD_2 ( java.lang.String . METHOD_3 ( VAR_5 . METHOD_4 ( ) ) ) ; if ( METHOD_5 ( VAR_2 ) ) { TYPE_2 . METHOD_6 ( ) . METHOD_7 ( VAR_2 ) ; VAR_1 = true ; } return VAR_1 ; }\n", "fixed": "protected java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { boolean VAR_1 ; java.lang.String VAR_2 = VAR_3 . getText ( ) ; java.lang.String VAR_4 = TYPE_1 . METHOD_2 ( java.lang.String . METHOD_3 ( VAR_5 . METHOD_4 ( ) ) ) ; if ( METHOD_5 ( VAR_2 ) ) { TYPE_2 . METHOD_6 ( ) . METHOD_7 ( VAR_2 ) ; VAR_1 = true ; } else { VAR_1 = false ; } return VAR_1 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) throws TYPE_2 { METHOD_2 ( ) ; java.util.Map < java.lang.String , java.util.List < java.lang.String > > VAR_1 ; try { VAR_1 = METHOD_3 ( ) ; } catch ( TYPE_2 VAR_2 ) { VAR_3 . setState ( VAR_4 ) ; VAR_5 . METHOD_4 ( VAR_4 ) ; throw VAR_2 ; } VAR_3 . setState ( VAR_6 ) ; VAR_5 . METHOD_4 ( VAR_6 ) ; VAR_7 = VAR_1 ; VAR_8 = METHOD_5 ( ) ; METHOD_6 ( ) ; return this ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) throws TYPE_2 { METHOD_2 ( ) ; java.util.Map < java.lang.String , java.util.List < java.lang.String > > VAR_1 ; try { VAR_1 = METHOD_3 ( ) ; } catch ( TYPE_2 VAR_2 ) { VAR_3 . setState ( VAR_4 ) ; VAR_5 . METHOD_4 ( VAR_4 ) ; throw VAR_2 ; } VAR_7 = VAR_1 ; VAR_8 = METHOD_5 ( ) ; VAR_3 . setState ( VAR_6 ) ; VAR_5 . METHOD_4 ( VAR_6 ) ; METHOD_6 ( ) ; return this ; }\n"}
{"fixCommitSHA1": "802f864678e40a6f5e0b87cc3740a57d94d5d8b4", "projectName": "wildfly.wildfly", "bugType": "Same Function More Args", "problem": "         if (source.hasDefined(SYSTEM_PROPERTY)) {\n             for (Property prop : source.get(SYSTEM_PROPERTY).asPropertyList()) {\n                 ModelNode propResource = prop.getValue();\n                if (boottimeOnly && !propResource.get(BOOT_TIME).asBoolean()) {\n                     continue;\n                 }\n                 String val = propResource.hasDefined(VALUE) ? propResource.get(VALUE).asString() : null;", "fixed": "         if (source.hasDefined(SYSTEM_PROPERTY)) {\n             for (Property prop : source.get(SYSTEM_PROPERTY).asPropertyList()) {\n                 ModelNode propResource = prop.getValue();\n                if (boottimeOnly && !propResource.get(BOOT_TIME).asBoolean(false)) {\n                     continue;\n                 }\n                 String val = propResource.hasDefined(VALUE) ? propResource.get(VALUE).asString() : null;", "sourceBeforeFix": "propResource.get(BOOT_TIME).asBoolean()", "sourceAfterFix": "propResource.get(BOOT_TIME).asBoolean(false)"}
{"problem": "private java.lang.String [ ] METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { java.lang.String [ ] VAR_2 = new java.lang.String [ VAR_1 . size ( ) ] ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { VAR_2 [ i ] = ( ( VAR_1 . get ( i ) . getString ( STRING_1 ) ) + STRING_2 ) + ( VAR_1 . get ( i ) . getString ( STRING_3 ) ) ; } return VAR_2 ; }\n", "fixed": "private java.lang.String [ ] METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( VAR_1 == null ) return null ; java.lang.String [ ] VAR_2 = new java.lang.String [ VAR_1 . size ( ) ] ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { VAR_2 [ i ] = ( ( VAR_1 . get ( i ) . getString ( STRING_1 ) ) + STRING_2 ) + ( VAR_1 . get ( i ) . getString ( STRING_3 ) ) ; } return VAR_2 ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   }\n   \n  private final PassFactory renameVars =\n       new PassFactory(\"renameVars\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "fixed": "   }\n   \n  final PassFactory renameVars =\n       new PassFactory(\"renameVars\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) ) ; if ( ( ( VAR_1 . METHOD_3 ( ) ) == ( VAR_2 ) ) && ( ( VAR_3 . METHOD_4 ( ) ) != null ) ) { java.lang.System.out.println ( STRING_2 ) ; VAR_3 . METHOD_5 ( ) . METHOD_6 ( new TYPE_2 ( VAR_3 . METHOD_4 ( ) ) ) ; VAR_3 . METHOD_7 ( ) . remove ( VAR_3 . METHOD_4 ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) ) ; if ( ( ( VAR_1 . METHOD_3 ( ) ) == ( VAR_2 ) ) && ( ( VAR_3 . METHOD_4 ( ) ) != null ) ) { java.lang.System.out.println ( STRING_2 ) ; VAR_3 . METHOD_5 ( ) . METHOD_6 ( new TYPE_2 ( VAR_3 , VAR_3 . METHOD_4 ( ) ) ) ; VAR_3 . METHOD_7 ( ) . remove ( VAR_3 . METHOD_4 ( ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { TYPE_2 VAR_2 = new TYPE_2 ( ) ; int VAR_3 = VAR_1 . METHOD_2 ( ) ; while ( ( VAR_3 -- ) > 0 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; java.lang.String key = VAR_2 . toString ( ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; java.lang.String value = VAR_2 . toString ( ) ; VAR_4 . put ( key , value ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { TYPE_2 VAR_2 = new TYPE_2 ( ) ; int VAR_3 = VAR_1 . METHOD_2 ( ) ; while ( ( VAR_3 -- ) > 0 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; java.lang.String key = VAR_2 . toString ( ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; java.lang.String value = VAR_2 . toString ( ) ; this . VAR_4 . put ( key , value ) ; } }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "    * replacement values for the classnames.  If null, the raw class names are\n    * inlined.\n    */\n  private final PassFactory closureReplaceGetCssName =\n       new PassFactory(\"renameCssNames\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "fixed": "    * replacement values for the classnames.  If null, the raw class names are\n    * inlined.\n    */\n  final PassFactory closureReplaceGetCssName =\n       new PassFactory(\"renameCssNames\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "3407a44922289dc4ddb3ff87687b8766affeaad9", "projectName": "apache.flink", "bugType": "Change Modifier", "problem": " \t\t}\n \t}\n\tprivate static class SpeedTestForwarder extends AbstractInvokable {\n \t\t@Override\n \t\tpublic void invoke() throws Exception {", "fixed": " \t\t}\n \t}\n\t\n\tpublic static class SpeedTestForwarder extends AbstractInvokable {\n \t\t@Override\n \t\tpublic void invoke() throws Exception {", "sourceBeforeFix": "10", "sourceAfterFix": "9"}
{"problem": "protected void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( 0.0 ) ; VAR_1 . METHOD_7 ( TYPE_2 . METHOD_8 ( ) ) ; VAR_4 . METHOD_9 ( VAR_5 ) ; VAR_4 . METHOD_10 ( FLOAT_1 ) ; VAR_4 . METHOD_11 ( VAR_1 ) ; }\n", "fixed": "protected void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( 0.0 ) ; VAR_1 . METHOD_7 ( TYPE_2 . METHOD_8 ( ) ) ; VAR_4 . METHOD_9 ( VAR_5 ) ; VAR_4 . METHOD_11 ( VAR_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_3 . getText ( ) ) ; VAR_1 . METHOD_5 ( TYPE_2 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( VAR_4 . getText ( ) ) ; VAR_1 . METHOD_8 ( VAR_5 . METHOD_9 ( ) ) ; TYPE_3 . get ( ) . METHOD_10 ( VAR_1 , VAR_6 . METHOD_11 ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; } VAR_1 . METHOD_4 ( VAR_3 . getText ( ) ) ; VAR_1 . METHOD_5 ( TYPE_2 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( VAR_4 . getText ( ) ) ; VAR_1 . METHOD_8 ( VAR_5 . METHOD_9 ( ) ) ; TYPE_3 . get ( ) . METHOD_10 ( VAR_1 , VAR_6 . METHOD_11 ( ) ) ; }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface MicrometerEndpointBuilder\n             extends\n                 EndpointProducerBuilder {\n         default AdvancedMicrometerEndpointBuilder advanced() {", "fixed": "     \n    public interface MicrometerEndpointBuilder\n             extends\n                 EndpointProducerBuilder {\n         default AdvancedMicrometerEndpointBuilder advanced() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( ( this . VAR_1 ) == VAR_1 ) || ( VAR_1 == null ) ) return ; METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) VAR_2 = VAR_1 . METHOD_3 ( VAR_3 . num ( ) , VAR_4 , VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( this . VAR_1 ) == VAR_1 ) return ; this . VAR_1 = VAR_1 ; if ( VAR_1 == null ) return ; METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) VAR_2 = VAR_1 . METHOD_3 ( VAR_3 . num ( ) , VAR_4 , VAR_2 ) ; }\n"}
{"problem": "private static java.lang.String METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String VAR_2 ) { if ( ( \"0\" . equals ( VAR_1 ) ) || ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { return TYPE_1 . equals ( STRING_1 , VAR_2 ) ? STRING_2 : STRING_3 ; } else { return VAR_1 ; } }\n", "fixed": "public static java.lang.String METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String VAR_2 ) { if ( ( \"0\" . equals ( VAR_1 ) ) || ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { return TYPE_1 . equals ( STRING_1 , VAR_2 ) ? STRING_2 : STRING_3 ; } else { return VAR_1 ; } }\n"}
{"problem": "public static java.lang.Object METHOD_1 ( java.lang.String fileName ) { try { java.lang.Object VAR_1 ; java.io.FileInputStream VAR_2 = new java.io.FileInputStream ( new java.io.File ( ( ( TYPE_1 . METHOD_2 ( ) ) + fileName ) ) ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_1 = VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; return VAR_1 ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_5 ( ) ; return null ; } }\n", "fixed": "public static java.lang.Object METHOD_1 ( java.lang.String fileName ) { try { java.lang.Object VAR_1 ; java.io.FileInputStream VAR_2 = new java.io.FileInputStream ( new java.io.File ( ( ( TYPE_1 . METHOD_2 ( ) ) + fileName ) ) ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_1 = VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; return VAR_1 ; } catch ( java.lang.Exception VAR_4 ) { return null ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { try { if ( ( ( VAR_1 ) <= ( VAR_2 . size ( ) ) ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ) { return VAR_3 . METHOD_2 ( VAR_2 . get ( VAR_1 ) ) ; } return null ; } finally { ( VAR_1 ) ++ ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { try { if ( ( ( VAR_1 ) < ( VAR_2 . size ( ) ) ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ) { return VAR_3 . METHOD_2 ( VAR_2 . get ( VAR_1 ) ) ; } return null ; } finally { ( VAR_1 ) ++ ; } }\n"}
{"problem": "private boolean METHOD_1 ( TYPE_1 VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { for ( TYPE_2 VAR_3 : VAR_2 ) { java.util.List < TYPE_3 > list = VAR_3 . METHOD_2 ( ) ; if ( VAR_1 . equals ( list . get ( 0 ) ) ) { VAR_3 . METHOD_3 ( ) ; return true ; } } return false ; }\n", "fixed": "private boolean METHOD_1 ( TYPE_1 VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { for ( TYPE_2 VAR_3 : VAR_2 ) { java.util.List < TYPE_3 > list = VAR_3 . METHOD_2 ( ) ; if ( list . get ( 0 ) . equals ( VAR_1 ) ) { VAR_3 . METHOD_3 ( ) ; return true ; } } return false ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "    * Renames properties so that the two properties that never appear on\n    * the same object get the same name.\n    */\n  private final PassFactory ambiguateProperties =\n       new PassFactory(\"ambiguateProperties\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "    * Renames properties so that the two properties that never appear on\n    * the same object get the same name.\n    */\n  final PassFactory ambiguateProperties =\n       new PassFactory(\"ambiguateProperties\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "protected void METHOD_1 ( java.lang.String query ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + query ) ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( TYPE_3 . getActivity ( ) ) ) ; TYPE_4 VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( ( VAR_4 ) != null ) METHOD_4 ( ) ; TYPE_5 VAR_5 = VAR_3 . METHOD_5 ( ) ; VAR_5 . replace ( VAR_6 , METHOD_6 ( query ) , VAR_7 ) ; VAR_5 . METHOD_7 ( VAR_1 ) ; VAR_5 . commit ( ) ; }\n", "fixed": "protected void METHOD_1 ( java.lang.String query ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + query ) ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( TYPE_3 . getActivity ( ) ) ) ; TYPE_4 VAR_3 = VAR_2 . METHOD_3 ( ) ; TYPE_5 VAR_5 = VAR_3 . METHOD_5 ( ) ; VAR_5 . replace ( VAR_6 , METHOD_6 ( query ) , VAR_7 ) ; VAR_5 . METHOD_7 ( VAR_1 ) ; VAR_5 . commit ( ) ; }\n"}
{"problem": "protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = METHOD_2 ( new java.util.HashMap < java.lang.Integer , java.util.Map < java.lang.String , java.lang.Object > > ( ) , VAR_1 ) ; final java.lang.String VAR_3 = TYPE_3 . METHOD_3 ( VAR_4 , VAR_2 ) ; VAR_5 . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ; final java.lang.String VAR_6 = TYPE_3 . METHOD_3 ( VAR_7 , VAR_2 ) ; VAR_5 . METHOD_4 ( ) . METHOD_6 ( VAR_6 ) ; return VAR_5 ; }\n", "fixed": "protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = METHOD_2 ( VAR_1 ) ; final java.lang.String VAR_3 = TYPE_3 . METHOD_3 ( VAR_4 , VAR_2 ) ; VAR_5 . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ; final java.lang.String VAR_6 = TYPE_3 . METHOD_3 ( VAR_7 , VAR_2 ) ; VAR_5 . METHOD_4 ( ) . METHOD_6 ( VAR_6 ) ; return VAR_5 ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; try { if ( ( this . VAR_2 ) != null ) { if ( VAR_3 ) { VAR_2 . remove ( this ) ; } this . VAR_4 = true ; this . METHOD_3 ( ) ; } } finally { VAR_1 . METHOD_4 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; try { if ( ( VAR_2 ) != null ) { if ( VAR_3 ) { VAR_2 . remove ( this ) ; } VAR_4 = true ; METHOD_3 ( ) ; } } finally { VAR_1 . METHOD_4 ( ) ; } }\n"}
{"fixCommitSHA1": "26604fde31e9f4586c18209285b7b5c3bc80d51e", "projectName": "facebook.presto", "bugType": "Change Modifier", "problem": "         return updatedUnpartitionedSources;\n     }\n    private void schedulePartitionedSource(TaskSource source)\n     {", "fixed": "         return updatedUnpartitionedSources;\n     }\n    private synchronized void schedulePartitionedSource(TaskSource source)\n     {", "sourceBeforeFix": "2", "sourceAfterFix": "34"}
{"problem": "public double METHOD_1 ( double a , double b , double VAR_1 , double VAR_2 , double VAR_3 , double t , double f ) { return ( ( ( a * ( t - VAR_2 ) ) + b ) * ( java.lang.Math.pow ( ( VAR_3 / f ) , VAR_1 ) ) ) * ( TYPE_1 . METHOD_2 ( ( VAR_3 / f ) ) ) ; }\n", "fixed": "public double METHOD_1 ( double a , double b , double VAR_1 , double VAR_2 , double VAR_3 , double t , double f ) { return ( ( ( a * ( t - VAR_2 ) ) + b ) * ( java.lang.Math.pow ( ( f / VAR_3 ) , VAR_1 ) ) ) * ( TYPE_1 . METHOD_2 ( ( f / VAR_3 ) ) ) ; }\n"}
{"problem": "public long METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = this . METHOD_2 ( ) ; TYPE_2 values = new TYPE_2 ( ) ; values . put ( STRING_1 , VAR_1 ) ; long VAR_3 = VAR_2 . METHOD_3 ( VAR_4 , null , values ) ; VAR_2 . METHOD_4 ( ) ; return VAR_3 ; }\n", "fixed": "public long METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; TYPE_2 values = new TYPE_2 ( ) ; values . put ( STRING_1 , VAR_1 ) ; long VAR_3 = VAR_2 . METHOD_3 ( VAR_4 , null , values ) ; VAR_2 . METHOD_4 ( ) ; return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { if ( ( VAR_2 ) && ( position <= ( ( VAR_3 . METHOD_2 ( ) ) - 1 ) ) ) { if ( VAR_4 != null ) { VAR_4 . METHOD_1 ( VAR_1 , view , position , id ) ; } } else { if ( VAR_4 != null ) { VAR_4 . METHOD_1 ( VAR_1 , view , position , id ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { if ( ( VAR_2 ) && ( position == ( VAR_3 . METHOD_2 ( ) ) ) ) { } else { if ( VAR_4 != null ) { VAR_4 . METHOD_1 ( VAR_1 , view , position , id ) ; } } }\n"}
{"problem": "private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . get ( ( VAR_1 + STRING_1 ) , VAR_3 class ) ; if ( VAR_2 == null ) { VAR_4 . put ( STRING_2 , VAR_1 ) ; VAR_2 = VAR_5 . METHOD_2 ( VAR_1 ) ; TYPE_2 . set ( ( VAR_1 + STRING_1 ) , VAR_2 , ( INT_1 * INT_2 ) ) ; } return VAR_2 ; }\n", "fixed": "private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . get ( ( VAR_1 + STRING_1 ) , VAR_3 class ) ; if ( VAR_2 == null ) { VAR_4 . put ( STRING_2 , VAR_1 ) ; VAR_2 = VAR_5 . METHOD_2 ( VAR_1 ) ; TYPE_2 . set ( ( VAR_1 + STRING_1 ) , VAR_2 ) ; } return VAR_2 ; }\n"}
{"problem": "public void start ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_3 = new java.lang.Thread ( VAR_1 ) ; VAR_4 . info ( STRING_1 ) ; VAR_4 . info ( STRING_2 ) ; VAR_4 . info ( STRING_3 ) ; VAR_4 . info ( STRING_1 ) ; }\n", "fixed": "public void start ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_3 = new java.lang.Thread ( VAR_1 ) ; VAR_4 . info ( STRING_1 ) ; VAR_4 . info ( STRING_2 ) ; VAR_3 . start ( ) ; VAR_4 . info ( STRING_3 ) ; VAR_4 . info ( STRING_1 ) ; }\n"}
{"fixCommitSHA1": "b519eda44120933736f9fa62d75bba0c1ed47b3d", "projectName": "spring-projects.spring-boot", "bugType": "Change Modifier", "problem": "  */\n @Component\n @Order(Ordered.HIGHEST_PRECEDENCE)\nclass ErrorPageFilter extends AbstractConfigurableEmbeddedServletContainer implements\n\t\tFilter, NonEmbeddedServletContainerFactory {\n \tprivate static Log logger = LogFactory.getLog(ErrorPageFilter.class);", "fixed": "  */\n @Component\n @Order(Ordered.HIGHEST_PRECEDENCE)\npublic class ErrorPageFilter extends AbstractConfigurableEmbeddedServletContainer\n\t\timplements Filter, NonEmbeddedServletContainerFactory {\n \tprivate static Log logger = LogFactory.getLog(ErrorPageFilter.class);", "sourceBeforeFix": "0", "sourceAfterFix": "1"}
{"problem": "private static java.lang.String METHOD_1 ( java.lang.String VAR_1 , boolean trim ) { if ( VAR_1 != null ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_1 , false ) ; if ( trim ) VAR_1 = VAR_1 . trim ( ) ; return VAR_1 ; } else return null ; }\n", "fixed": "private static java.lang.String METHOD_1 ( java.lang.String VAR_1 , boolean trim ) { if ( VAR_1 != null ) { java.lang.String t = TYPE_1 . METHOD_2 ( VAR_1 , false ) ; if ( t != null ) VAR_1 = t ; if ( trim ) VAR_1 = VAR_1 . trim ( ) ; return VAR_1 ; } else return null ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , java.util.List < TYPE_1 > VAR_2 , java.lang.String VAR_3 ) { try { return METHOD_2 ( VAR_1 , VAR_3 , ( ( TYPE_1 [ ] ) ( VAR_2 . METHOD_3 ( ) ) ) ) ; } catch ( TYPE_3 VAR_4 ) { TYPE_4 . error ( VAR_4 ) ; } return null ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , java.util.List < TYPE_1 > VAR_2 , java.lang.String VAR_3 ) { try { return METHOD_2 ( VAR_1 , VAR_3 , VAR_2 . METHOD_3 ( new TYPE_1 [ VAR_2 . size ( ) ] ) ) ; } catch ( TYPE_3 VAR_4 ) { TYPE_4 . error ( VAR_4 ) ; } return null ; }\n"}
{"problem": "public TYPE_1 update ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_1 ( VAR_2 . getId ( ) ) ; if ( VAR_3 == null ) { throw new TYPE_2 ( VAR_5 ) ; } boolean VAR_6 = VAR_4 . METHOD_2 ( VAR_2 . getName ( ) , VAR_1 ) ; if ( VAR_6 ) { throw new TYPE_3 ( VAR_7 ) ; } VAR_4 . update ( VAR_2 ) ; return VAR_4 . METHOD_1 ( VAR_2 . getId ( ) ) ; }\n", "fixed": "public TYPE_1 update ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_1 ( VAR_2 . getId ( ) ) ; if ( VAR_3 == null ) { throw new TYPE_2 ( VAR_5 ) ; } boolean VAR_6 = VAR_4 . METHOD_2 ( VAR_2 . getId ( ) , VAR_2 . getName ( ) , VAR_1 ) ; if ( VAR_6 ) { throw new TYPE_3 ( VAR_7 ) ; } VAR_4 . update ( VAR_2 ) ; return VAR_4 . METHOD_1 ( VAR_2 . getId ( ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = TYPE_2 . METHOD_2 ( this . VAR_3 . METHOD_3 ( false ) ) ; this . VAR_2 . METHOD_1 ( VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) , VAR_1 . METHOD_6 ( ) ) ; VAR_4 . METHOD_7 ( new TYPE_3 ( this . VAR_2 ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = TYPE_2 . METHOD_2 ( this . VAR_3 . METHOD_3 ( false ) ) ; this . VAR_2 . METHOD_1 ( VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) , VAR_1 . METHOD_6 ( ) ) ; VAR_4 . METHOD_7 ( new TYPE_3 ( TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( false ) ) ) ) ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "    * Renames properties so that the two properties that never appear on\n    * the same object get the same name.\n    */\n  private final PassFactory ambiguateProperties =\n       new PassFactory(\"ambiguateProperties\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "    * Renames properties so that the two properties that never appear on\n    * the same object get the same name.\n    */\n  final PassFactory ambiguateProperties =\n       new PassFactory(\"ambiguateProperties\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "292df7f0b637a17c8a6a78b2cf9dbb483bbeb4da", "projectName": "hazelcast.hazelcast", "bugType": "Wrong Function Name", "problem": "         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCacheRemovals(1);\n            statistics.addRemoveTimeNano(System.nanoTime() - start);\n         }\n         return result;\n     }", "fixed": "         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCacheRemovals(1);\n            statistics.addRemoveTimeNanos(System.nanoTime() - start);\n         }\n         return result;\n     }", "sourceBeforeFix": "statistics.addGetTimeNano(System.nanoTime() - start)", "sourceAfterFix": "statistics.addGetTimeNanos(System.nanoTime() - start)"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 { java.util.List list = VAR_1 . METHOD_1 ( ) ; int i ; for ( i = 0 ; i < ( list . size ( ) ) ; i ++ ) { i ++ ; } assertNotNull ( STRING_1 , list . size ( ) ) ; assertTrue ( ( ( list . size ( ) ) == i ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 { java.util.List list = VAR_1 . METHOD_1 ( ) ; int i ; for ( i = 0 ; i < ( list . size ( ) ) ; i ++ ) { i ++ ; } assertNotNull ( STRING_1 , list . size ( ) ) ; assertTrue ( ( ( list . size ( ) ) == ( i - 1 ) ) ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { METHOD_2 ( VAR_1 ) ; } int VAR_2 = VAR_3 ; if ( ( VAR_3 ) < ( VAR_4 ) ) { METHOD_3 ( VAR_5 ) ; } else if ( ( VAR_3 ) >= ( VAR_4 ) ) { METHOD_4 ( VAR_5 ) ; } METHOD_5 ( ) ; if ( ! ( METHOD_6 ( ) ) ) { METHOD_7 ( ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { METHOD_2 ( VAR_1 ) ; } if ( ( VAR_3 ) >= ( VAR_4 ) ) { METHOD_4 ( VAR_5 ) ; } else { METHOD_3 ( VAR_5 ) ; } METHOD_5 ( ) ; if ( ! ( METHOD_6 ( ) ) ) { METHOD_7 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . info ( STRING_1 ) ; java.util.List < TYPE_1 > VAR_2 = VAR_3 . METHOD_2 ( INT_1 ) ; VAR_1 . info ( ( STRING_2 + ( VAR_2 . size ( ) ) ) ) ; for ( TYPE_1 VAR_4 : VAR_2 ) { METHOD_3 ( VAR_4 . METHOD_4 ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . info ( STRING_1 ) ; java.util.List < TYPE_1 > VAR_2 = VAR_3 . METHOD_2 ( 1 ) ; VAR_1 . info ( ( STRING_2 + ( VAR_2 . size ( ) ) ) ) ; for ( TYPE_1 VAR_4 : VAR_2 ) { METHOD_3 ( VAR_4 . METHOD_4 ( ) ) ; } }\n"}
{"fixCommitSHA1": "292df7f0b637a17c8a6a78b2cf9dbb483bbeb4da", "projectName": "hazelcast.hazelcast", "bugType": "Wrong Function Name", "problem": "         if (isStatisticsEnabled()) {\n             if (isPutSucceed) {\n                 statistics.increaseCachePuts(1);\n                statistics.addPutTimeNano(System.nanoTime() - start);\n             }\n             if (getValue) {\n                 if (oldValueNull) {", "fixed": "         if (isStatisticsEnabled()) {\n             if (isPutSucceed) {\n                 statistics.increaseCachePuts(1);\n                statistics.addPutTimeNanos(System.nanoTime() - start);\n             }\n             if (getValue) {\n                 if (oldValueNull) {", "sourceBeforeFix": "statistics.addRemoveTimeNano(System.nanoTime() - start)", "sourceAfterFix": "statistics.addRemoveTimeNanos(System.nanoTime() - start)"}
{"fixCommitSHA1": "8a8c325f6ecf37bd569b14019ef7a212fe830269", "projectName": "wildfly.wildfly", "bugType": "Change Boolean Literal", "problem": "     public static final SimpleAttributeDefinition ALIAS = new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ALIAS,\n             ModelType.STRING, true).setXmlName(ModelDescriptionConstants.ALIAS)\n            .setValidator(new StringLengthValidator(1, Integer.MAX_VALUE, true, true))\n             .setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build();\n     public static final SimpleAttributeDefinition KEY_PASSWORD = new SimpleAttributeDefinitionBuilder(", "fixed": "     public static final SimpleAttributeDefinition ALIAS = new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ALIAS,\n             ModelType.STRING, true).setXmlName(ModelDescriptionConstants.ALIAS)\n            .setValidator(new StringLengthValidator(1, Integer.MAX_VALUE, true, false))\n             .setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build();\n     public static final SimpleAttributeDefinition KEY_PASSWORD = new SimpleAttributeDefinitionBuilder(", "sourceBeforeFix": "new StringLengthValidator(1,Integer.MAX_VALUE,true,true)", "sourceAfterFix": "new StringLengthValidator(1,Integer.MAX_VALUE,true,false)"}
{"fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf", "projectName": "yusuke.twitter4j", "bugType": "Change Identifier Used", "problem": "* @see <a href=\"http:\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n        return Trends.constructTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }", "fixed": "* @see <a href=\"http:\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }", "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/public_timeline.json\",false))", "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/public_timeline.json\",false))"}
{"problem": "public void METHOD_1 ( boolean VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , ( STRING_2 + VAR_1 ) ) ; if ( VAR_1 ) { VAR_2 . METHOD_3 ( INT_1 ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_3 . METHOD_5 ( INT_2 ) ; } else { VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_3 . METHOD_5 ( INT_2 ) ; } }\n", "fixed": "public void METHOD_1 ( boolean VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , ( STRING_2 + VAR_1 ) ) ; if ( VAR_1 ) { VAR_2 . METHOD_3 ( INT_1 ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_3 . METHOD_5 ( 1 ) ; } else { VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_3 . METHOD_5 ( 1 ) ; } }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int position , TYPE_2 output ) { try { long VAR_3 = type . METHOD_2 ( VAR_2 , position ) ; buffer . METHOD_3 ( 0 ) ; VAR_4 . METHOD_4 ( buffer , VAR_3 ) ; for ( int index = 0 ; index < ( buffer . length ( ) ) ; index ++ ) { output . METHOD_5 ( buffer . METHOD_6 ( index ) ) ; } } catch ( java.io.IOException VAR_5 ) { throw TYPE_3 . METHOD_7 ( VAR_5 ) ; } }\n", "fixed": "public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int position , TYPE_2 output ) { long VAR_3 = type . METHOD_2 ( VAR_2 , position ) ; buffer . METHOD_3 ( 0 ) ; VAR_4 . METHOD_4 ( buffer , VAR_3 ) ; for ( int index = 0 ; index < ( buffer . length ( ) ) ; index ++ ) { output . METHOD_5 ( buffer . METHOD_6 ( index ) ) ; } }\n"}
{"problem": "protected void METHOD_1 ( java.util.ArrayList < TYPE_1 > j ) { super . METHOD_1 ( j ) ; java.lang.System.out.println ( VAR_1 ) ; if ( j != null ) { for ( TYPE_1 VAR_2 : j ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 . toString ( ) ) ; METHOD_3 ( VAR_1 , VAR_2 , null ) ; } } }\n", "fixed": "protected void METHOD_1 ( java.util.ArrayList < TYPE_1 > j ) { super . METHOD_1 ( j ) ; if ( j != null ) { java.lang.System.out.println ( VAR_1 ) ; if ( j != null ) { for ( TYPE_1 VAR_2 : j ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 . toString ( ) ) ; METHOD_3 ( VAR_1 , VAR_2 , null ) ; } } } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { java.lang.String VAR_2 = VAR_3 . get ( position ) . name ; int VAR_4 = VAR_3 . get ( position ) . VAR_5 ; int VAR_6 = VAR_3 . get ( position ) . VAR_7 . size ( ) ; VAR_8 . setText ( VAR_2 ) ; VAR_9 . setText ( VAR_4 ) ; VAR_10 . setText ( VAR_6 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { java.lang.String VAR_2 = VAR_3 . get ( position ) . name ; java.lang.String VAR_4 = java.lang.Integer.toString ( VAR_3 . get ( position ) . VAR_5 ) ; java.lang.String VAR_6 = java.lang.Integer.toString ( VAR_3 . get ( position ) . VAR_7 . size ( ) ) ; VAR_8 . setText ( VAR_2 ) ; VAR_9 . setText ( VAR_4 ) ; VAR_10 . setText ( VAR_6 ) ; }\n"}
{"problem": "public void METHOD_1 ( final TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.lang.Integer VAR_2 ) { this . VAR_3 . put ( VAR_1 , VAR_2 ) ; VAR_1 . METHOD_2 ( new TYPE_3 ( ) { public void METHOD_3 ( ) { TYPE_4 . info ( STRING_1 ) ; VAR_3 . remove ( VAR_1 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; } } ) ; }\n", "fixed": "public void METHOD_1 ( final TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.lang.Integer VAR_2 ) { VAR_1 . METHOD_2 ( new TYPE_3 ( ) { public void METHOD_3 ( ) { TYPE_4 . info ( STRING_1 ) ; VAR_3 . remove ( VAR_1 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; } } ) ; this . VAR_3 . put ( VAR_1 , VAR_2 ) ; }\n"}
{"problem": "private void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = this . VAR_2 . get ( ) ; TYPE_2 VAR_3 = this . VAR_3 . get ( ) ; if ( ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) . METHOD_5 ( VAR_1 ) . get ( ) ) == null ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_5 ( VAR_1 ) . METHOD_8 ( ) . METHOD_9 ( ) ; } }\n", "fixed": "private void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = this . VAR_2 . get ( ) ; TYPE_2 VAR_3 = this . VAR_3 . get ( ) ; VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_5 ( VAR_1 ) . METHOD_8 ( ) . METHOD_9 ( ) ; }\n"}
{"fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "projectName": "libgdx.libgdx", "bugType": "Change Identifier Used", "problem": " \t}\r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n\t\tGL11.glTexParameter(target, pname, params);\r\n \t}\r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r", "fixed": " \t}\r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r", "sourceBeforeFix": "GL20.glUniform1(location,toFloatBuffer(v,offset,count))", "sourceAfterFix": "GL20.glUniform1fv(location,toFloatBuffer(v,offset,count))"}
{"problem": "public void METHOD_1 ( final java.lang.String VAR_1 ) throws java.io.IOException { if ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) { METHOD_2 ( ) . METHOD_4 ( true ) ; } TYPE_1 state = METHOD_2 ( ) . METHOD_5 ( VAR_3 class ) ; if ( state == null ) { return ; } new TYPE_2 ( state , VAR_1 , METHOD_2 ( ) , this ) . METHOD_6 ( ) ; synchronized ( this ) { VAR_4 . add ( VAR_1 ) ; } }\n", "fixed": "public void METHOD_1 ( final java.lang.String VAR_1 ) throws java.io.IOException { if ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) { METHOD_2 ( ) . METHOD_4 ( true ) ; } TYPE_1 state = METHOD_2 ( ) . METHOD_5 ( VAR_3 class ) ; if ( state == null ) { return ; } new TYPE_2 ( state , VAR_1 , METHOD_2 ( ) , this ) . start ( ) ; synchronized ( this ) { VAR_4 . add ( VAR_1 ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.io.FileInputStream VAR_2 = null ; try { VAR_2 = new java.io.FileInputStream ( this . METHOD_2 ( ) ) ; TYPE_2 . METHOD_3 ( VAR_2 , VAR_1 ) ; } catch ( TYPE_3 VAR_3 ) { throw new TYPE_4 ( VAR_3 . METHOD_4 ( ) ) ; } catch ( java.io.IOException VAR_3 ) { throw new TYPE_4 ( VAR_3 . METHOD_4 ( ) ) ; } finally { TYPE_2 . METHOD_5 ( VAR_2 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.io.FileInputStream VAR_2 = null ; try { VAR_2 = new java.io.FileInputStream ( this . METHOD_2 ( ) ) ; TYPE_2 . METHOD_3 ( VAR_2 , VAR_1 ) ; } catch ( TYPE_3 VAR_3 ) { throw new TYPE_4 ( VAR_3 ) ; } catch ( java.io.IOException VAR_3 ) { throw new TYPE_4 ( VAR_3 ) ; } finally { TYPE_2 . METHOD_5 ( VAR_2 ) ; } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { TYPE_4 VAR_3 = this . METHOD_2 ( VAR_1 ) ; if ( ( VAR_3 != null ) && ( VAR_3 . METHOD_3 ( 1 ) . equals ( VAR_2 ) ) ) { VAR_4 . METHOD_4 ( VAR_5 , VAR_3 ) ; VAR_3 . METHOD_5 ( ) ; if ( ( VAR_3 . METHOD_6 ( ) . size ( ) ) == 0 ) { VAR_6 . remove ( VAR_3 ) ; } } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { TYPE_4 VAR_3 = this . METHOD_2 ( VAR_1 ) ; if ( ( VAR_3 != null ) && ( VAR_3 . METHOD_3 ( 0 ) . equals ( VAR_2 ) ) ) { VAR_4 . METHOD_4 ( VAR_5 , VAR_3 ) ; VAR_3 . METHOD_5 ( ) ; if ( ( VAR_3 . METHOD_6 ( ) . size ( ) ) == 0 ) { VAR_6 . remove ( VAR_3 ) ; } } }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { super . METHOD_1 ( VAR_1 , VAR_2 , data ) ; if ( VAR_1 == ( VAR_3 ) ) { if ( ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) != null ) && ( ( VAR_4 ) != null ) ) VAR_5 . METHOD_4 ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { super . METHOD_1 ( VAR_1 , VAR_2 , data ) ; if ( VAR_1 == ( VAR_3 ) ) { if ( ( ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) != null ) && ( ( VAR_4 ) != null ) ) && ( ( VAR_5 ) != null ) ) VAR_5 . METHOD_4 ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ; } }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": " };\n   \n  private final HotSwapPassFactory checkTypes =\n       new HotSwapPassFactory(\"checkTypes\", false) {\n     @Override\n     protected HotSwapCompilerPass createInternal(final AbstractCompiler", "fixed": " };\n   \n  final HotSwapPassFactory checkTypes =\n       new HotSwapPassFactory(\"checkTypes\", false) {\n     @Override\n     protected HotSwapCompilerPass createInternal(final AbstractCompiler", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; TYPE_3 < java.lang.String > VAR_5 = new TYPE_3 < java.lang.String > ( this , VAR_6 , VAR_7 ) ; VAR_8 . METHOD_7 ( VAR_5 ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; TYPE_3 < java.lang.String > VAR_5 = new TYPE_3 ( this , VAR_6 , VAR_7 ) ; VAR_8 . METHOD_7 ( VAR_5 ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_2 . METHOD_2 ( ) ) { return VAR_1 . METHOD_3 ( ) ; } TYPE_1 VAR_3 = VAR_2 . METHOD_4 ( ) ; return VAR_3 != null ? VAR_2 . METHOD_5 ( ) . METHOD_6 ( VAR_3 ) : VAR_2 . METHOD_5 ( ) . METHOD_7 ( ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_2 . METHOD_2 ( ) ) { return VAR_1 . METHOD_6 ( VAR_2 . METHOD_4 ( ) ) ; } TYPE_1 VAR_3 = VAR_2 . METHOD_4 ( ) ; return VAR_3 != null ? VAR_2 . METHOD_5 ( ) . METHOD_6 ( VAR_3 ) : VAR_2 . METHOD_5 ( ) . METHOD_7 ( ) ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory instrumentFunctions =\n       new PassFactory(\"instrumentFunctions\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory instrumentFunctions =\n       new PassFactory(\"instrumentFunctions\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; VAR_3 . put ( VAR_1 . getId ( ) , VAR_1 ) ; METHOD_2 ( VAR_1 , false ) ; VAR_4 . add ( VAR_5 ) ; VAR_6 . add ( VAR_7 ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; VAR_3 . put ( VAR_1 . getId ( ) , VAR_1 ) ; VAR_4 . add ( VAR_5 ) ; VAR_6 . add ( VAR_7 ) ; METHOD_2 ( VAR_1 , false ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { int VAR_3 = VAR_2 . METHOD_2 ( ) ; int size = VAR_1 . size ( ) ; java.util.List < TYPE_3 > VAR_4 = VAR_1 . METHOD_3 ( ) ; while ( VAR_3 > 0 ) { VAR_1 . METHOD_4 ( VAR_4 . get ( size ) ) ; size -- ; VAR_3 -- ; } return VAR_1 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { int VAR_3 = VAR_2 . METHOD_2 ( ) ; int size = ( VAR_1 . size ( ) ) - 1 ; java.util.List < TYPE_3 > VAR_4 = VAR_1 . METHOD_3 ( ) ; while ( VAR_3 > 0 ) { VAR_1 . METHOD_4 ( VAR_4 . get ( size ) ) ; size -- ; VAR_3 -- ; } return VAR_1 ; }\n"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15856, value = \"Invalid url stream.\")\n     String invalidUrlStream();\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10856, value = \"Invalid url stream.\")\n     String invalidUrlStream();\n     /**", "sourceBeforeFix": "id=15844", "sourceAfterFix": "id=10844"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; java.util.Set < TYPE_3 > VAR_4 = new TYPE_4 < TYPE_3 > ( ( ( VAR_1 . METHOD_3 ( ) ) + 1 ) ) ; VAR_4 . add ( VAR_2 ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; return this . VAR_5 . METHOD_5 ( VAR_3 ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; java.util.Set < TYPE_3 > VAR_4 = new TYPE_4 < TYPE_3 > ( ( ( VAR_1 . METHOD_3 ( ) ) + 1 ) ) ; VAR_4 . add ( VAR_2 ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; this . VAR_5 . METHOD_5 ( VAR_3 ) ; }\n"}
{"fixCommitSHA1": "20e6e9afcad4cf6ba8ac455becbcddd7f9e36284", "projectName": "checkstyle.checkstyle", "bugType": "Change Modifier", "problem": "         \n        public Details(DetailAST ast) {\n             this.ast = ast;\n         }", "fixed": "         \n        Details(DetailAST ast) {\n             this.ast = ast;\n         }", "sourceBeforeFix": "1", "sourceAfterFix": "0"}
{"problem": "public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; if ( VAR_1 . METHOD_2 ( true ) ) { TYPE_2 . METHOD_3 ( VAR_2 , true ) ; } VAR_1 . METHOD_4 ( new android.view.View ( VAR_2 ) ) ; TYPE_2 . METHOD_5 ( VAR_2 , true ) ; start ( ) ; synchronized ( this ) { this . METHOD_6 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; if ( VAR_1 . METHOD_2 ( true ) ) { TYPE_2 . METHOD_3 ( VAR_2 , true ) ; } VAR_1 . METHOD_4 ( new android.view.View ( VAR_2 ) ) ; TYPE_2 . METHOD_5 ( VAR_2 , true ) ; synchronized ( this ) { this . METHOD_6 ( ) ; } }\n"}
{"problem": "private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { this . VAR_3 . put ( VAR_1 , VAR_2 ) ; VAR_4 . METHOD_2 ( ( ( STRING_1 + ( VAR_2 . METHOD_3 ( ) ) ) + ( this . VAR_3 . METHOD_4 ( VAR_1 ) ? STRING_2 : STRING_3 ) ) ) ; }\n", "fixed": "private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_4 . METHOD_2 ( ( ( STRING_1 + ( VAR_2 . METHOD_3 ( ) ) ) + ( this . VAR_3 . METHOD_4 ( VAR_1 ) ? STRING_2 : STRING_3 ) ) ) ; this . VAR_3 . put ( VAR_1 , VAR_2 ) ; }\n"}
