{"similarity_score": 0.967551622418879, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "5f7705dee2c6050688745ef218e20055", "bug_code_uid": "e19d8618cfa85bd357288b7e3d89614a", "src_uid": "4266948a2e793b4b461156af226e98fd", "apr_id": "c6ba62d3e51b571d35b89611b02f2622", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\nint main()\n{\n    int n,i,sum = 0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++){scanf(\"%d\",a+i); sum += a[i];}\n    qsort(a, n, sizeof(int), cmpfunc);\n\n    int ans = sum;\n    int j = 0;\n    for(j=0;j<n-1;j++)\n    {\n        ans += a[j];\n        sum -= a[j];\n        ans += sum;\n    }\n    printf(\"%d\",ans);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\nint main()\n{\n    int n,i;\n    long long int sum = 0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++){scanf(\"%d\",a+i); sum += a[i];}\n    qsort(a, n, sizeof(int), cmpfunc);\n\n    long long int ans = sum;\n    int j = 0;\n    for(j=0;j<n-1;j++)\n    {\n        ans += a[j];\n        sum -= a[j];\n        ans += sum;\n    }\n    printf(\"%lld\",ans);\n\n    return 0;\n}\n"}
{"similarity_score": 0.8300921187308086, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "d02f4209b60c29f2279f71334e82c134", "bug_code_uid": "33b70503c3a1b086de6470a36eebddc6", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "d04f3415a461127fc4cdabae6df0fa00", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n//Written By GHATAK...\nint main()\n{\n    long int n;\n    scanf(\"%ld\",&n);\n    int rev[20],len[20],q=0,temp,count=0;\n    while(n!=0)\n    {\n        temp=n%10;\n        rev[q]=temp;\n        q++;\n        n=n/10;\n    }\n    temp=0;\n    for(int i=q-1;i>=0;i--)\n    {\n        len[temp]=rev[i];\n        if(len[temp]%2==0)\n        {\n            count++;\n        }\n        temp++;\n    }\n    if(count==0)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    for(int i=0;i<q-1;i++)\n    {\n        count=0;\n        if(len[i]%2==0)\n        {\n            for(int j=i+1;j<q;j++)\n            {\n                if(len[j]%2==0)\n                {\n                    count++;\n                }\n            }\n            if((len[i]<len[q-1])||(count==0))\n            {\n                temp=len[i];\n                len[i]=len[q-1];\n                len[q-1]=temp;\n                break;\n            }\n        }\n    }\n    for(int i=0;i<q;i++)\n    {\n        printf(\"%d\",len[i]);\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n//Written By GHATAK...\nint main()\n{\n    char ch[100050];\n    scanf(\"%s\",ch);\n    long int q=0;\n    int len[100050],temp,count=0;\n    while(ch[q]!='\\0')\n    {\n        temp=ch[q]-'0';\n        len[q]=temp;\n        if((temp%2==0)&&(count==0))\n        {\n            count++;\n        }\n        q++;\n    }\n    if(count==0)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    for(long int i=0;i<q-1;i++)\n    {\n        count=0;\n        if(len[i]%2==0)\n        {\n            for(long int j=i+1;j<q;j++)\n            {\n                if(len[j]%2==0)\n                {\n                    count++;\n                    break;\n                }\n            }\n            if((len[i]<len[q-1])||(count==0))\n            {\n                temp=len[i];\n                len[i]=len[q-1];\n                len[q-1]=temp;\n                break;\n            }\n        }\n    }\n    for(long int i=0;i<q;i++)\n    {\n        printf(\"%d\",len[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9775401069518717, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2b8cdfcadf17fa3b5e31b774536d4e53", "bug_code_uid": "81bfe14f2e58d23dd67104934768a280", "src_uid": "04753f73af685b4e7339d30d6d47c161", "apr_id": "fecd6d2f2eaf52896359ef48beba20d4", "difficulty": 1100, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define ll long long int\n\nusing namespace std;\n\nll min (ll a, ll b){\n\treturn (a < b) ? a : b;\n}\n\nll solve(ll a, ll b, ll x, ll y, ll n){\n\tll temp = min(n, a-x);\n\tn -= temp;\n\ta -= temp;\n\t\n\ttemp = min(n, b-y);\n\tb -= temp;\n\t\n\treturn a * b;\n}\n\nint main(){\n\tint n;\n\tscanf (\"%d\", &n);\n\tgetchar();\n\t\n\twhile(n--){\n\t\tll a,b,x,y,n;\n\t\tscanf (\"%lld %lld %lld %lld %lld\", &a, &b, &x, &y, &n);\n\t\tgetchar();\n\t\tprintf (\"%lld\\n\",min(solve(a,b,x,y,n), solve(b,a,y,x,n)));\n\t}\n}\n", "fixed": "#include <stdio.h>\n#define ll long long int\n\n\nll min (ll a, ll b){\n\treturn (a < b) ? a : b;\n}\n\nll solve(ll a, ll b, ll x, ll y, ll n){\n\tll temp = min(n, a-x);\n\tn -= temp;\n\ta -= temp;\n\t\n\ttemp = min(n, b-y);\n\tb -= temp;\n\t\n\treturn a * b;\n}\n\nint main(){\n\tint n;\n\tscanf (\"%d\", &n);\n\tgetchar();\n\t\n\twhile(n--){\n\t\tll a,b,x,y,n;\n\t\tscanf (\"%lld %lld %lld %lld %lld\", &a, &b, &x, &y, &n);\n\t\tgetchar();\n\t\tprintf (\"%lld\\n\",min(solve(a,b,x,y,n), solve(b,a,y,x,n)));\n\t}\n}\n"}
{"similarity_score": 0.9269102990033222, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8796d8d9f77bcd0759652f40b42231e0", "bug_code_uid": "ea168ceaebe27ace7c373aadaa3bc71c", "src_uid": "fc37ef81bb36f3ac07ce2c4c3ec10d98", "apr_id": "40b96afc3afba1369946798f32f011c9", "difficulty": 1100, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define pai 3.14159265359\nint main()\n{\n\tint i,l,m,n;\n\tdouble v,e,h,d;\n\twhile(scanf(\"%lf%lf%lf%lf\",&d,&h,&v,&e)!=EOF)\n\t{\n\t\td=d/2;\n\t\tprintf(\"d=%f\\n\",d);\n\t\tv=v/(d*d*pai);\n\t\tprintf(\"v=%f\\n\",v);\n\t\tif(e>=v)\n\t\t\tprintf(\"NO\\n\");\n\t\telse \n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tv=v-e;\n\t\t\th=h/v;\n\t\t\tprintf(\"%.12lf\\n\",h);\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\n#define pai 3.14159265359\nint main()\n{\n\tint i,l,m,n;\n\tdouble v,e,h,d;\n\twhile(scanf(\"%lf%lf%lf%lf\",&d,&h,&v,&e)!=EOF)\n\t{\n\t\td=d/2;\n\t\tv=v/(d*d*pai);\n\t\tif(e>=v)\n\t\t\tprintf(\"NO\\n\");\n\t\telse \n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tv=v-e;\n\t\t\th=h/v;\n\t\t\tprintf(\"%.12lf\\n\",h);\n\t\t}\n\t}\n}"}
{"similarity_score": 0.9883720930232558, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d2a13d1200036af4a3dd51a2ed648dfb", "bug_code_uid": "3aa7c29307dd9ebe316e3b2076ee57c4", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "2fefcc0d784cb8c392de0b05511f4c67", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,x,y;\nscanf(\"%d\",&n);\nif(n%2==0)\n{\nx=2;\ny=n-2;\nprintf(\"%d\\t%d\",x,y);\n}\nelse if(n%2!=0)\n{\nx=9;\ny=n-9;\nprintf(\"%d\\t%d\",x,y);\n}\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint n,x,y;\nscanf(\"%d\",&n);\nif(n%2==0)\n{\nx=8;\ny=n-8;\nprintf(\"%d\\t%d\",x,y);\n}\nelse if(n%2!=0)\n{\nx=9;\ny=n-9;\nprintf(\"%d\\t%d\",x,y);\n}\nreturn 0;\n}"}
{"similarity_score": 0.9980487804878049, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "6a697fe5034e36b0757c4efd445f4835", "bug_code_uid": "32683ff6f82552918b317f614806323d", "src_uid": "d67a97a3b69d599b03d3fce988980646", "apr_id": "d7cde2cdb4889130169c33e2e8a84d8b", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\\n\",&t);\n    for(int i=0;i<t;i++)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        if(a<b)\n        {\n            int x;\n            x=b-a;\n            if(x>10 && x%10!=0)\n            {\n                x=x/10;\n                printf(\"%d\\n\",(x+1));\n            }\n            else if(x>10 && x%10==0)\n            {\n                x=x/10;\n                printf(\"%d\\n\",x);\n            }\n            else\n            {\n                printf(\"1\");\n            }\n\n        }\n        else if(a==b)\n        {\n            printf(\"0\\n\");\n        }\n        else\n        {\n            int y;\n            y=a-b;\n            if(y>10 && y%10!=0)\n            {\n                y=y/10;\n                printf(\"%d\\n\",(y+1));\n            }\n            else if(y>10 && y%10==0)\n            {\n                y=y/10;\n                printf(\"%d\\n\",y);\n            }\n            else\n            {\n                printf(\"1\");\n            }\n            \n        }\n        \n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\\n\",&t);\n    for(int i=0;i<t;i++)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        if(a<b)\n        {\n            int x;\n            x=b-a;\n            if(x>10 && x%10!=0)\n            {\n                x=x/10;\n                printf(\"%d\\n\",(x+1));\n            }\n            else if(x>10 && x%10==0)\n            {\n                x=x/10;\n                printf(\"%d\\n\",x);\n            }\n            else\n            {\n                printf(\"1\\n\");\n            }\n\n        }\n        else if(a==b)\n        {\n            printf(\"0\\n\");\n        }\n        else\n        {\n            int y;\n            y=a-b;\n            if(y>10 && y%10!=0)\n            {\n                y=y/10;\n                printf(\"%d\\n\",(y+1));\n            }\n            else if(y>10 && y%10==0)\n            {\n                y=y/10;\n                printf(\"%d\\n\",y);\n            }\n            else\n            {\n                printf(\"1\\n\");\n            }\n            \n        }\n        \n    }\n}"}
{"similarity_score": 0.9992486851990984, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "00d9262e8ef82cf4f2f5918a8ce81586", "bug_code_uid": "eaa2b5a8ba88aa3e226b37da633f676c", "src_uid": "1ab174688ba76168ca047ed2b06b0670", "apr_id": "df54d9c3741bf754b04cfb1fdcb7d665", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\ntypedef unsigned long long ull;\nvoid sleep(int a, int b, int c, int d)\n{\n    if(b < a && c < d)\n        printf(\"-1\\n\");\n    else\n    {\n        ull t;\n        t = b;\n        if(t >= a)\n            printf(\"%llu\\n\", t);\n        else\n        {\n            ull each, rem, turn;\n            each = c - d;\n            rem = a-b;\n            turn = ceil((double)rem/each);\n            t += turn*c;\n            printf(\"%llu\\n\", t);\n        }\n    }\n}\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int a, b, c, d;\n        scanf(\"%d %d %d %d\", &a, &b, &c, &d);\n        sleep(a, b, c, d);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\ntypedef unsigned long long ull;\nvoid sleep(int a, int b, int c, int d)\n{\n    if(b < a && c <= d)\n        printf(\"-1\\n\");\n    else\n    {\n        ull t;\n        t = b;\n        if(t >= a)\n            printf(\"%llu\\n\", t);\n        else\n        {\n            ull each, rem, turn;\n            each = c - d;\n            rem = a-b;\n            turn = ceil((double)rem/each);\n            t += turn*c;\n            printf(\"%llu\\n\", t);\n        }\n    }\n}\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int a, b, c, d;\n        scanf(\"%d %d %d %d\", &a, &b, &c, &d);\n        sleep(a, b, c, d);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9993079584775086, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "49faa70ba2c98b9268835d74f0954ba1", "bug_code_uid": "f4e93fdb7c7b434843cfe47e82f6da80", "src_uid": "06e9649963715e56d97297c6104fbc00", "apr_id": "cf3f6cc7d6272469c2d1c34c149d0c76", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//Date:24-08-16\n\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<stdbool.h>\n#include<float.h>\n#include<math.h>\n#include<ctype.h>\n#include<limits.h>\n#include<time.h>\n#define ll long long\n#define For(i,n)\tfor(i=0;i<n;i++)\n#define rep(i ,a ,b)\tfor(i=a;i<=b;i++)\n#define mset(a ,value)\tmemset(a ,value ,sizeof(a))\n#define s(a)\tscanf(\"%d\" ,&a);\n#define ls(a)\tscanf(\"%ld\" ,&a)\n#define reg(i)\tregister int i\n#define infinite INT_MAX\n#define MAX 300001\nint min(int a,int b){\treturn (a<b?a:b);\t}\nint max(int a,int b){\treturn (a>b?a:b);\t}\nint main(){\n\tint n ,b ,d ,i;\n\tscanf(\"%d %d %d\" ,&n ,&b ,&d);\n\tll t=0 ,c=0;\n\tint a[n];\n\tFor(i ,n){\ts(a[i]);\t\n\t\tif(a[i]<b)\tt+=a[i];\n\t\tif(t>d)\t\tc++ ,t=0;\n\t}\n\tprintf(\"%I64d\" ,c);\n}", "fixed": "//Date:24-08-16\n\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<stdbool.h>\n#include<float.h>\n#include<math.h>\n#include<ctype.h>\n#include<limits.h>\n#include<time.h>\n#define ll long long\n#define For(i,n)\tfor(i=0;i<n;i++)\n#define rep(i ,a ,b)\tfor(i=a;i<=b;i++)\n#define mset(a ,value)\tmemset(a ,value ,sizeof(a))\n#define s(a)\tscanf(\"%d\" ,&a);\n#define ls(a)\tscanf(\"%ld\" ,&a)\n#define reg(i)\tregister int i\n#define infinite INT_MAX\n#define MAX 300001\nint min(int a,int b){\treturn (a<b?a:b);\t}\nint max(int a,int b){\treturn (a>b?a:b);\t}\nint main(){\n\tint n ,b ,d ,i;\n\tscanf(\"%d %d %d\" ,&n ,&b ,&d);\n\tll t=0 ,c=0;\n\tint a[n];\n\tFor(i ,n){\ts(a[i]);\t\n\t\tif(a[i]<=b)\tt+=a[i];\n\t\tif(t>d)\t\tc++ ,t=0;\n\t}\n\tprintf(\"%I64d\" ,c);\n}"}
{"similarity_score": 0.9961389961389961, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "905a54c45e552f81f8d67394790b86a0", "bug_code_uid": "99563391c7457c3e4c638a0f645e30e7", "src_uid": "0c5cf0af057b0c838f13b491b923447a", "apr_id": "0537e0c80fd332637d90fd79d9bf7ad8", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n \r\nint main() {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    int tab[n];\r\n    for (int i = 0; i < n; i++) {\r\n        scanf(\"%d\", &tab[i]);\r\n    }\r\n    for (int i = 0; i < n; i++) {\r\n        printf(\"%d\", ((tab[i]+1)/2));\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n \r\nint main() {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    int tab[n];\r\n    for (int i = 0; i < n; i++) {\r\n        scanf(\"%d\", &tab[i]);\r\n    }\r\n    for (int i = 0; i < n; i++) {\r\n        printf(\"%d\\n\", ((tab[i]+1)/2));\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9922779922779923, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fc2f13249716835f839e4e0932fd09c5", "bug_code_uid": "f55aaa837b3e94046c2e1c4b0ff0581d", "src_uid": "341555349b0c1387334a0541730159ac", "apr_id": "9b55ba02ba8e332be189d758eb090bd6", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t,n,i,j;\n    scanf(\"%d\",&t);\n for (i=0;i<t;i++)\n {scanf(\"%d\",&n);\n     int a[n];\n    for (j=0;j<n;j++)\n    scanf(\"%d\",&a[j]);\n    if(a[0]+a[1]>a[n-1])\n     printf(\"-1\");\n    else\n    printf(\"1 2 %d\",n);\n\n \n }\n    \n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t,n,i,j;\n    scanf(\"%d\",&t);\n for (i=0;i<t;i++)\n {scanf(\"%d\",&n);\n     int a[n];\n    for (j=0;j<n;j++)\n    scanf(\"%d\",&a[j]);\n    if(a[0]+a[1]>a[n-1])\n     printf(\"-1\\n\");\n    else\n    printf(\"1 2 %d\\n\",n);\n\n \n }\n    \n}\n"}
{"similarity_score": 0.6303571428571428, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "12a2236f0071c27b81cae7e8e44abb42", "bug_code_uid": "9f19893984d01c63049682daddb0007f", "src_uid": "337b6d2a11a25ef917809e6409f8edef", "apr_id": "024690255d0d817a9e201388b3ced62d", "difficulty": 1400, "tags": ["dp", "implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint a[510][510],s[510];\nint main(){\n    int i,j,n,m,q,x,y,mx;\n    scanf(\"%d%d%d\",&n,&m,&q);\n    for(i=1;i<=n;++i){\n        for(j=1;j<=m;++j)scanf(\"%d\",a[i]+j),s[i]+=a[i][j];\n    }\n    for(;q--;){\n        scanf(\"%d%d\",&x,&y);\n        if(a[x][y])a[x][y]=0,--s[x];\n        else a[x][y]=1,++s[x];\n        mx=0;\n        for(i=1;i<=n;++i)if(mx<s[i])mx=s[i];\n        printf(\"%d\\n\",mx);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint a[510][510],s[510],t[510];\nint main(){\n    int i,j,n,m,q,x,y,mx;\n    scanf(\"%d%d%d\",&n,&m,&q);\n    for(i=1;i<=n;++i){\n        for(j=1;j<=m;++j){\n            scanf(\"%d\",a[i]+j);\n            if(a[i][j])s[j]=s[j-1]+1;\n            else s[j]=0;\n        }\n        for(j=1;j<=m;++j)if(t[i]<s[j])t[i]=s[j];\n    }\n    for(;q--;){\n        scanf(\"%d%d\",&x,&y);\n        if(a[x][y])a[x][y]=0;\n        else a[x][y]=1;\n        for(j=1;j<=m;++j){\n            if(a[x][j])s[j]=s[j-1]+1;\n            else s[j]=0;\n        }\n        t[x]=0;\n        for(j=1;j<=m;++j)if(t[x]<s[j])t[x]=s[j];\n        mx=0;\n        for(i=1;i<=n;++i)if(mx<t[i])mx=t[i];\n        printf(\"%d\\n\",mx);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.647374062165059, "equal_cnt": 9, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "c0860f0f002f19e2ed1a739e54d7ed63", "bug_code_uid": "73c464c4ec2997e2feb522fa20990ba0", "src_uid": "e27620d3a43ab42edf930b37ce214c9e", "apr_id": "3086f2ad12f5e63ee334b61472df5012", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint n,i;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tchar s[100000];\r\n\t\tscanf(\"%s\",&s);\r\n\t\tchar p[100000];\r\n\t\tp[0]='1';\r\n\t\tfor(i=1;s[i]!='\\0';i++){\r\n\t\t\tif(p[i-1]=='1'){\r\n\t\t\t\tif(s[i-1]==s[i]){\r\n\t\t\t\t\tp[i]='0';\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tp[i]='1';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(p[i-1]=='0'){\r\n\t\t\t\tif(s[i-1]=='1'&&s[i]=='0'){\r\n\t\t\t\t\tp[i]='0';\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tp[i]='1';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%s\\n\",p);\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint n,i;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tchar s[100000];\r\n\t\tscanf(\"%s\",&s);\r\n\t\tint p=1;\r\n\t\tprintf(\"1\");\r\n\t\tfor(i=1;s[i]!='\\0';i++){\r\n\t\t\tif(p==1){\r\n\t\t\t\tif(s[i-1]==s[i]){\r\n\t\t\t\t\tp=0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tp=1;\r\n\t\t\t\t}\r\n\t\t\t\tprintf(\"%d\",p);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif(p==0){\r\n\t\t\t\tif(s[i-1]=='1'&&s[i]=='0'){\r\n\t\t\t\t\tp=0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tp=1;\r\n\t\t\t\t}\r\n\t\t\t\tprintf(\"%d\",p);\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.37927232635060637, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "013f36f37861d1a42c448293cf494b91", "bug_code_uid": "d63780facaa940f0da052f0d3c0c4dc3", "src_uid": "1956e31a9694b4fd7690f1a75028b9a1", "apr_id": "391f2088b3c69f64fb60f99351d6a0ed", "difficulty": 1000, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    \nint i, n, k, a[500], b[500];\nint count=0, ext ;\n\nscanf (\"%d %d\", &n, &k);\na[0]=k;\na[n+1]=k;\n\nfor (i=1; i<n+1; i++){\n    scanf (\"%d\", &a[i]);\n    count+=a[i];\n    b[i]=a[i];\n}\n\next=k*n/2 - count;\n\nif (ext<0){\n    ext=0;    \n}\n\nprintf (\"%d\\n\", ext);\n\n\nfor (i=2; i<n+1; i++){\n    if (a[i]+a[i-1]<k){\n        while (a[i]+a[i-1]<k){\n            a[i]++;\n            b[i]++;\n        }\n    }\n}\n\nfor (i=1; i<n+1; i++)\n    printf (\"%d \", b[i]);\n  \n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    \nint i, n, k, a[500], b[500];\nint count=0 ;\n\nscanf (\"%d %d\", &n, &k);\na[0]=k;\na[n+1]=k;\n\nfor (i=1; i<n+1; i++){\n    scanf (\"%d\", &a[i]);\n    b[i]=a[i];\n}\n\n\n\n\nfor (i=2; i<n+1; i++){\n    if (a[i]+a[i-1]<k){\n        while (a[i]+a[i-1]<k){\n            a[i]++;\n            b[i]++;\n            count++;\n        }\n    }\n}\n\nprintf (\"%d\\n\", count);\n\nfor (i=1; i<n+1; i++)\n    printf (\"%d \", b[i]);\n  \n}"}
{"similarity_score": 0.48537647790914745, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "521767134db650ba12e1f73c5231e175", "bug_code_uid": "affddb4eaa93640aed7222b5028fffd0", "src_uid": "a30c5562d3df99291132fac20e05e708", "apr_id": "7fa701572bd24e1e77bd6ebe5cd52f2d", "difficulty": 1100, "tags": ["constructive algorithms", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int cmp (const void * a, const void * b) {\r\n    return *(int*)a - *(int*)b;\r\n}\r\nint a[200000];\r\nint main()\r\n{\r\n    int t, s; scanf(\"%d\",&t);\r\n    while (t--) {\r\n        scanf(\"%d\",&s); int temp;\r\n        for (int i = 0; i < s; i++)\r\n            scanf(\"%d\",&a[i]);\r\n        qsort(a, s, 4, cmp);\r\n        for (int i = 1, j = 1; j < s; j++) {\r\n            if (a[i] == a[j]) continue;\r\n            else {\r\n                temp = a[i];\r\n                a[i] = a[j];\r\n                a[j] = temp;\r\n                i += 2;\r\n            }\r\n        }\r\n        if (a[s-1] > a[s-2] && a[0] < a[s-1]) {\r\n            printf(\"YES\\n\");\r\n            for (int i = 0; i < s; i++)\r\n                printf(\"%d%c\",a[i],\" \\n\"[i+1==s]);\r\n        } else printf(\"NO\\n\");\r\n    }\r\n}", "fixed": "int cmp (const void * a, const void * b) {\r\n    return *(int*)a - *(int*)b;\r\n}\r\nint a[100000],b[100000];\r\nint main()\r\n{\r\n    int t,s, temp; scanf(\"%d\",&t);\r\n    while (t--) {\r\n        scanf(\"%d\",&s);\r\n        for (int i = 0; i < s; i++)\r\n            scanf(\"%d\",&a[i]);\r\n        if (s%2) printf(\"NO\\n\");\r\n        else {\r\n        qsort(a, s, 4, cmp);\r\n        int l = 0, j = 0;\r\n        while (l < s/2) {\r\n            b[j] = a[l], b[j+1] = a[l+s/2];\r\n            j += 2, l++;\r\n        } int fnd = 1;\r\n        for (int i = 0; i < s; i+=2) {\r\n            if (b[i] >= b[(s+i-1)%s] || b[i] >= b[(i+1)%s]) {\r\n                fnd = 0; break;\r\n            }\r\n        }\r\n        if (fnd) {\r\n            printf(\"YES\\n\");\r\n            for (int i = 0; i < s; i++)\r\n                printf(\"%d%c\",b[i],\" \\n\"[i+1==s]);\r\n        } else printf(\"NO\\n\");\r\n    } \r\n    }\r\n}"}
{"similarity_score": 0.8772478498827209, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "ac8604c9cec7744c252d21eba5c67b12", "bug_code_uid": "f74750d6abd756151401578aee54f624", "src_uid": "482b3ebbbadd583301f047181c988114", "apr_id": "8e0eeb641965c854762b56d6a6019ca5", "difficulty": 1200, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\nint main()\n{\n    long long int n,b[1000000],h, j,tem,i;\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&b[i]);\n    }\n/*   for(i=0;i<n;i++)\n   { for(j=i+1;j<n;j++)\n    {\n        if (b[i]>b[j])\n       { tem=b[i];\n        b[i]=b[j];\n        b[j]=tem;\n    }}}*/\n    qsort(b,n,sizeof(long long),cmpfunc);\n    h=0;\n    for(i=0;i<n;i++)\n        {\n            if (b[i]>h)\n            {h++;}\n        }\n        printf(\"%lld\",h+1);\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n/*long long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n*/long long int cmp(const void *c,const void *b)\n{\n\treturn (*(long long int*)c-*(long long int*)b);\n}\n \nint main()\n{\n    long long int n,b[1000000],h, j,tem,i;\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&b[i]);\n    }\n/*   for(i=0;i<n;i++)\n   { for(j=i+1;j<n;j++)\n    {\n        if (b[i]>b[j])\n       { tem=b[i];\n        b[i]=b[j];\n        b[j]=tem;\n    }}}*/\n    qsort(b,n,sizeof(long long int),cmp);\n    h=0;\n    for(i=0;i<n;i++)\n        {//printf(\"%lld\\n\",b[i]);\n            if (b[i]>h)\n            {h++;}\n        }\n        printf(\"%lld\",h+1);\n}"}
{"similarity_score": 0.9884575026232949, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "357c271ee5fed65955bf41eaa689b162", "bug_code_uid": "ae89468550d3a4f2faafb22f84a8418e", "src_uid": "d9d5db63b1e48214d02abe9977709384", "apr_id": "99fd9d2baeb0e84dba70e1c1c03b5c65", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n\t//code\n\tint t; int k;\n\t\n\tscanf(\"%d %d\\n\",&t,&k);\n\tint count[26];\n\tchar str[100020];\n\t\n    for(int i=0;i<t;i++) scanf(\"%c\",str+i);\n\tfor(int i =0;i<t;i++){\n       count[str[i]-'A']++; //Counting the number of letter of each character in string.\n\t}\n\t\n\tint min = 32667;\n    for(int i=0;i<k;i++){\n        if(min>count[i]) min=count[i]; //Finding the minimum of count.\n    }\n    \n    \n\tif(min==0) printf(\"0\");\n\telse printf(\"%d\",min*k);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main() {\n\t//code\n\tint t; int k;\n\t\n\tscanf(\"%d %d\\n\",&t,&k);\n\tint count[26];\n\tchar str[100020];\n\t\n    for(int i=0;i<t;i++) scanf(\"%c\",str+i);\n\tfor(int i =0;i<t;i++){\n       count[str[i]-'A']++; //Counting the number of letter of each character in string.\n\t}\n\t\n\tint min = 999999;\n    for(int i=0;i<k;i++){\n        if(min>count[i]) min=count[i]; //Finding the minimum of count.\n    }\n    \n    \n\tif(min==0) printf(\"0\");\n\telse printf(\"%d\",min*k);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9724334600760456, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ff92ca315fbe2b13367f78f877d96503", "bug_code_uid": "794a99dca49a09acc50a0d21bb5d2633", "src_uid": "6854ad3597f9f41d475aacb774b823ed", "apr_id": "aafc1c69183c2a17f32a282d2a93a7d1", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t,n,k,i,j,a[105],r;\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;++i)\r\n    {\r\n        scanf(\"%d%d\",&n,&k);\r\n        for(j=1;j<=n;++j)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n        }\r\n        r=1;\r\n        while(1)\r\n        {\r\n            if(a[r]==0)\r\n            {\r\n                r+=1;\r\n                if(r==n)\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(k<=a[r])\r\n                {\r\n                    a[r]=a[r]-k;\r\n                    a[n]=a[n]+k;\r\n                    k=0;\r\n                }\r\n                else\r\n                {\r\n                    a[n]=a[n]+a[r];\r\n                    a[r]=0;\r\n                    k=k-a[r];\r\n                }\r\n                r+=1;\r\n                if(k==0 || r==n)\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for(j=1;j<=n;++j)\r\n        {\r\n            printf(\"%d \",a[j]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t,n,k,i,j,a[105],r;\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;++i)\r\n    {\r\n        scanf(\"%d%d\",&n,&k);\r\n        for(j=1;j<=n;++j)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n        }\r\n        r=1;\r\n        while(1)\r\n        {\r\n            if(a[r]==0)\r\n            {\r\n                r+=1;\r\n                if(r==n)\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(k<=a[r])\r\n                {\r\n                    a[r]=a[r]-k;\r\n                    a[n]=a[n]+k;\r\n                    k=0;\r\n                }\r\n                else\r\n                {\r\n                    a[n]=a[n]+a[r];\r\n                    k=k-a[r];\r\n                    a[r]=0;\r\n                }\r\n                r+=1;\r\n                if(k==0 || r==n)\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for(j=1;j<=n;++j)\r\n        {\r\n            printf(\"%d \",a[j]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.9792038027332145, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8dc300dc8fad89f34d35fda43116d3a1", "bug_code_uid": "c19f1a51f8915f53b3f46fdeb9c9fb7f", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "0e541c3d321eef8c244f12f5fac80ee4", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint nprime,prime[10000];\n\nint sieve(int n){\n\tint i,j,num[100000];\n\tmemset(num,-1,sizeof (num));\n\t\n\tfor (i=2;i<n;i++){\n\t\tif (num[i]==-1){\n\t\t\t\n\t\t\tfor (j=2;i*j<n;j++){\n\t\t\t\tnum[i*j]=0;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tif (num[i]!=0){\n\t\t\tprime[nprime]=i;\n\t\t\tnprime++;\n\t\t}\n\t}\n}\nint main(){\n\t\n\tlong long int n,i,j,r,s,cnt,num;\n\tsieve(1000);\n\tscanf(\"%I64d\",&n);\n\t\n\tfor(i=1;i<=n;i++){\n\t\t\n\t\tcnt=0;\n\t\t\n\t\tscanf(\"%I64d\",&num);\n\t\tif(num==4) printf(\"YES\\n\");\n\t\telse{\n\t\tr=sqrt(num);\n\t\t\n\t\tif(r*r==num){\n\t\t\t\n\t\t\ts=sqrt(r);\n\t\t\t\n\t\t\tfor(j=0;j<nprime;j++)\n\t\t\t{\n\t\t\t\t\n\t\t\t\t if (r%prime[j]==0){\n\t\t\t\t \t\n\t\t\t\t\t cnt++;\n\t\t\t\t\t \n\t\t\t\t\t break;\n\t\t\t\t\t \n\t\t\t\t}\n\t\t\t\telse if(s<prime[j]) break;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif(cnt==0) printf(\"YES\\n\");\n\t\t\t\n\t\t\telse printf(\"NO\\n\");\n\t\t\t\n\t\t\t\n\t\t}\n\t\telse printf(\"NO\\n\");\n\t}\n\t}\n\t\n//\tprintf(\"%d \",nprime);\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint nprime,prime[10000];\n\nint sieve(int n){\n\tint i,j,num[100000];\n\tmemset(num,-1,sizeof (num));\n\t\n\tfor (i=2;i<n;i++){\n\t\tif (num[i]==-1){\n\t\t\t\n\t\t\tfor (j=2;i*j<n;j++){\n\t\t\t\tnum[i*j]=0;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tif (num[i]!=0){\n\t\t\tprime[nprime]=i;\n\t\t\tnprime++;\n\t\t}\n\t}\n}\nint main(){\n\t\n\tlong long int n,i,j,r,s,cnt,num;\n\tsieve(1000);\n\tscanf(\"%I64d\",&n);\n\t\n\tfor(i=1;i<=n;i++){\n\t\t\n\t\tcnt=0;\n\t\t\n\t\tscanf(\"%I64d\",&num);\n\t\tif(num==4) printf(\"YES\\n\");\n\t\telse if( num==1) printf(\"NO\\n\");\n\t\telse{\n\t\tr=sqrt(num);\n\t\t\n\t\tif(r*r==num){\n\t\t\t\n\t\t\ts=sqrt(r);\n\t\t\t\n\t\t\tfor(j=0;j<nprime;j++)\n\t\t\t{\n\t\t\t\t\n\t\t\t\t if (r%prime[j]==0){\n\t\t\t\t \t\n\t\t\t\t\t cnt++;\n\t\t\t\t\t \n\t\t\t\t\t break;\n\t\t\t\t\t \n\t\t\t\t}\n\t\t\t\telse if(s<prime[j]) break;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif(cnt==0) printf(\"YES\\n\");\n\t\t\t\n\t\t\telse printf(\"NO\\n\");\n\t\t\t\n\t\t\t\n\t\t}\n\t\telse printf(\"NO\\n\");\n\t}\n\t}\n\t\n//\tprintf(\"%d \",nprime);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9025069637883009, "equal_cnt": 12, "replace_cnt": 0, "delete_cnt": 8, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "836f0608379f4b39f1084830c67847d6", "bug_code_uid": "c2c9bee550d3458682330dcbf84de11d", "src_uid": "821d48c9a67d37ad7acc50d4d0d0d723", "apr_id": "635726e808a56f130efb63a07b273e83", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\t int t,a,b,c,d;\n\t scanf(\"%d\",&t);\n\t while(t--){\n\t \tscanf(\"%d %d %d %d\",&a,&b,&c,&d);\n\t \telse printf(\"%d %d %d\\n\",(a+b)/2,(b+c)/2,(c+d)/2);\n\t }\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n\t int t,i,a,b,c,d,x,y,z;\n\t scanf(\"%d\",&t);\n\t while(t--){\n\t \tscanf(\"%d %d %d %d\",&a,&b,&c,&d);\n\t \tprintf(\"%d %d %d\\n\",b,c,c);\n\t}\n\t \n\treturn 0;\n}"}
{"similarity_score": 0.5818181818181818, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "949fd7df1bf87f84c6d5ef43bbc382f0", "bug_code_uid": "72c12a19caaec4db216d653d7ae4f117", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "2ef0a84fc3c6bf00c5a45f08388db016", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint arr[100005];\nint main()\n{\nint n,i,largest=-1000;\nint count=0;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\n    if arr[i]=1;\n    printf(\"10000\");\n    return 0;\n    }\nfor(i=0;i<n;i++)\n{\n    scanf(\"%d\",&arr[i]);\n    }\n    i=0;\nwhile(i<n)\n{\n    if(arr[i]<=arr[i+1])\n    {\n        count++;\n        i++;\n    }\n    else\n    {\n        count=0;\n        i++;\n    }\n    if(count>largest)\n    {\n        largest=count;\n    }\n}\nprintf(\"%d\",largest+1);\nreturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint arr[100005];\nint main()\n{\n\tint n,i,largest=-1000;\n\tint count;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n    \tscanf(\"%d\",&arr[i]);\n    }\n    int j=0;\n    i=0;\n\twhile(i<n)\n\t{\n\t\tcount=0;\n    \twhile(arr[i]<=arr[i+1])\n    \t{\n        \tcount++;\n        \ti++;\n    \t}\n    \tif(count>largest)\n    \t{\n        \tlargest=count;\n    \t}\n    \tj=i;\n    \tj++;\n    \ti=j;\n    }\n\tprintf(\"%d\\n\",largest+1);\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.9785247432306255, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3292779be7375913663cbc13f7099adf", "bug_code_uid": "49404a0da3a5d6f8316fbe3e72eabee2", "src_uid": "98c08a3b5e5b5bb78804ff797ba24d87", "apr_id": "68f028f574732cf3ca4c13cffacd298d", "difficulty": 1000, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\nchar s[100005];\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%s\",s);\n\t\tint p=0;\n\t\tfor(int i=0;s[i]!='\\0';i++){\n\t\t\tif(s[i]=='?'){\n\t\t\t\tif(i==0&&s[i+1]=='?') s[i]='a';\n\t\t\t\tif(i==0&&s[i+1]=='a')s[i]='b';\n\t\t\t\tif(i==0&&s[i+1]=='b')s[i]='a';\n\t\t\t\tif(i==0&&s[i+1]=='c')s[i]='b';\n\t\t\t\tif(s[i-1]=='a'&&(s[i+1]=='b'||s[i+1]=='?'))\n\t\t\t\ts[i]='c';\n\t\t\t\tif(s[i-1]=='a'&&(s[i+1]=='c'||s[i+1]=='?'||s[i+1]=='a'))\n\t\t\t\ts[i]='b';\n\t\t\t\tif(s[i-1]=='b'&&(s[i+1]=='c'||s[i+1]=='?'||s[i+1]=='b'))\n\t\t\t\ts[i]='a';\n\t\t\t\tif(s[i-1]=='c'&&(s[i+1]=='b'||s[i+1]=='?'||s[i+1]=='c'))\n\t\t\t\ts[i]='a';\n\t\t\t\tif(s[i-1]=='b'&&(s[i+1]=='a'||s[i+1]=='?'||s[i+1]=='b'))\n\t\t\t\ts[i]='c';\n\t\t\t\tif(s[i-1]=='c'&&(s[i+1]=='a'||s[i+1]=='?'||s[i+1]=='c'))\n\t\t\t\ts[i]='b';\n\t\t\t\tif(s[i-1]=='c'&&s[i+1]=='\\0') s[i]='a';\n\t\t\t\tif(s[i-1]=='a'&&s[i+1]=='\\0') s[i]='c';\n\t\t\t\tif(s[i-1]=='b'&&s[i+1]=='\\0') s[i]='a';\n\t\t\t\t}\n\t\t\t\telse if(s[i-1]==s[i]||s[i+1]==s[i]) {\n\t\t\t\t\tp=1;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(p==1) printf(\"-1\\n\");\n\t\telse puts(s);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\nchar s[100005];\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%s\",s);\n\t\tint p=0;\n\t\tint len=strlen(s);\n\t\tfor(int i=0;s[i]!='\\0';i++){\n\t\t\tif(s[i]=='?'){\n\t\t\t\tif(len==1) s[i]='a';\n\t\t\t\tif(i==0&&s[i+1]=='?') s[i]='a';\n\t\t\t\tif(i==0&&s[i+1]=='a')s[i]='b';\n\t\t\t\tif(i==0&&s[i+1]=='b')s[i]='a';\n\t\t\t\tif(i==0&&s[i+1]=='c')s[i]='b';\n\t\t\t\tif(s[i-1]=='a'&&(s[i+1]=='b'||s[i+1]=='?'))\n\t\t\t\ts[i]='c';\n\t\t\t\tif(s[i-1]=='a'&&(s[i+1]=='c'||s[i+1]=='?'||s[i+1]=='a'))\n\t\t\t\ts[i]='b';\n\t\t\t\tif(s[i-1]=='b'&&(s[i+1]=='c'||s[i+1]=='?'||s[i+1]=='b'))\n\t\t\t\ts[i]='a';\n\t\t\t\tif(s[i-1]=='c'&&(s[i+1]=='b'||s[i+1]=='?'||s[i+1]=='c'))\n\t\t\t\ts[i]='a';\n\t\t\t\tif(s[i-1]=='b'&&(s[i+1]=='a'||s[i+1]=='?'||s[i+1]=='b'))\n\t\t\t\ts[i]='c';\n\t\t\t\tif(s[i-1]=='c'&&(s[i+1]=='a'||s[i+1]=='?'||s[i+1]=='c'))\n\t\t\t\ts[i]='b';\n\t\t\t\tif(s[i-1]=='c'&&s[i+1]=='\\0') s[i]='a';\n\t\t\t\tif(s[i-1]=='a'&&s[i+1]=='\\0') s[i]='c';\n\t\t\t\tif(s[i-1]=='b'&&s[i+1]=='\\0') s[i]='a';\n\t\t\t\t}\n\t\t\t\telse if(s[i-1]==s[i]||s[i+1]==s[i]) {\n\t\t\t\t\tp=1;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(p==1) printf(\"-1\\n\");\n\t\telse puts(s);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9767441860465116, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "b54a1128dd670e3c7dcc20f485c99752", "bug_code_uid": "c8e3bebe2b93bc031170a80e85acf6e0", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "60a3f688f30bc56a206ad95016bb1d25", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nmain()\n{\n   long n, x, y;\n   scanf(\"%d\", &n);\n   if(n%2==0)\n   {\n       x=n-4, y=4;\n       printf(\"%d %d\", x, y);\n   }\n   else\n   {\n           if((n-4)%3==0)\n           {\n               x=n-4, y=4;\n               printf(\"%d %d\", x, y);\n           }\n           else if((n-6)%3==0)\n           {\n               x=n-6, y=6;\n               printf(\"%d %d\", x, y);\n           }\n           else\n           {\n               x=n-8, y=8;\n               printf(\"%d %d\", x, y);               \n           }\n       }\n   }\n}", "fixed": "#include <stdio.h>\n\nmain()\n{\n   long n, x, y;\n   scanf(\"%d\", &n);\n   if(n%2==0)\n   {\n       x=n-4, y=4;\n       printf(\"%d %d\", x, y);\n   }\n   else\n   {\n           if((n-4)%3==0)\n           {\n               x=n-4, y=4;\n               printf(\"%d %d\", x, y);\n           }\n           else if((n-6)%3==0)\n           {\n               x=n-6, y=6;\n               printf(\"%d %d\", x, y);\n           }\n           else\n           {\n               x=n-8, y=8;\n               printf(\"%d %d\", x, y);\n           }\n   }\n}"}
{"similarity_score": 0.46936852026390197, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "b0f0d0504234bc3ad3897f730ad59a42", "bug_code_uid": "e261154c0904c12141c87c1573da8578", "src_uid": "97a226f47973fcb39c40e16f66654b5f", "apr_id": "4295176514f8d3595b2e62ae5f7a4222", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\nlong long a[200005]={0};\nlong long b[200005];\nlong long d;\nint main()\n{\n    int n,i,j,count=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        scanf(\"%lld\",&b[i]);\n    for(i=1;i<=n;i++)\n    {\n        while(1)\n        {\n            if(a[i]<b[i])\n            {\n                d=b[i]-a[i];\n                for(j=i;j<=n;j++)\n                    a[j]+=d;\n                count+=d;\n            }\n            else if(a[i]>b[i])\n            {\n                d=a[i]-b[i];\n                for(j=i;j<=n;j++)\n                    a[j]-=d;\n                count+=d;\n            }\n            else\n                break;\n        }\n    }\n    printf(\"%d\",count);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\nlong long b[200005];\nint main()\n{\n    int n,i;\n    long long count=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        scanf(\"%lld\",&b[i]);\n    for(i=1;i<=n;i++)\n    {\n        if(i==1)\n            count+=abs(b[i]);\n        else\n            count+=abs(b[i-1]-b[i]);\n    }\n    printf(\"%lld \",count);\n}\n"}
{"similarity_score": 0.9726775956284153, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "a45e6ef0a447defea6dac3dfa313bf2e", "bug_code_uid": "543d153044259b00e5139673ac16c52c", "src_uid": "c7a5b4a015e28dd3759569bbdc130e93", "apr_id": "b93ac523d8234ca462c791a2883ccb0a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int a=0;a<t;a++)\r\n    {\r\n        char a[6];\r\n        scanf(\"%s\",&a);\r\n        int sum1,sum2=0; \r\n        for(int i=0;i<3;i++)\r\n        {\r\n            sum1=sum1+ (int)a[i];\r\n            sum2=sum2+ (int)a[5-i];\r\n        }\r\n        if(sum1==sum2)\r\n        {\r\n            printf(\"yes\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"no\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int a=0;a<t;a++)\r\n    {\r\n        char a[6];\r\n        scanf(\"%s\",&a);\r\n        int sum2=0,sum1=0;\r\n        for(int i=0;i<3;i++)\r\n        {\r\n            sum1=sum1+ a[i];\r\n            sum2=sum2+ a[5-i];\r\n        }\r\n        if(sum1==sum2)\r\n        {\r\n            printf(\"yes\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"no\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9844155844155844, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "994c5959dd47f547dbc64f4575a44fab", "bug_code_uid": "375f8380e8e6fceac434d93340ede6d7", "src_uid": "8b0a9c7e997034d3ecce044b9f64aeba", "apr_id": "b7b41c29072b23aa55d7e592068fbaa5", "difficulty": 800, "tags": ["dp", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int set_number = 0; set_number < t; set_number++) {\r\n        long long m, n, k;\r\n        scanf(\"%d %d %d\", &m, &n, &k);\r\n\r\n        int s;\r\n        s = m - 1 + (n - 1) * m;\r\n        if (s == k) {\r\n            printf(\"Yes\\n\");\r\n        } else {\r\n            printf(\"No\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int set_number = 0; set_number < t; set_number++) {\r\n        int m, n, k;\r\n        scanf(\"%d %d %d\", &m, &n, &k);\r\n\r\n        int s;\r\n        s = m - 1 + (n - 1) * m;\r\n        if (s == k) {\r\n            printf(\"Yes\\n\");\r\n        } else {\r\n            printf(\"No\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8973063973063973, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "75329f225559855e9bf95a8802418885", "bug_code_uid": "fb34b150f8ae05c6b8ab62c4bbc7a7f6", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "21f00ca9ab0715d93fce220fdf187d62", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main (){\n\tint q = 0;\n\tint r = 0;\n\tint c = 0;\n\tint sumab = 0;\n\tint k = -1;\n\tint suma = 0;\n\tint n;\n\tscanf (\"%i%*c\", &n);\n\tint *val = (int*)malloc(n*sizeof(int));\n\twhile (n > 0){\n\t\tk = k + 1;\n\t\tq = k;\n\t\tscanf (\"%i%*c\", &val[k]);\n\t\tsuma = suma + val[k];\n\t\tif (k > 0){\n\t\t\twhile (val[q-1] > val[q]){\n\t\t\t\tr = val[q];\n\t\t\t\tval[q] = val[q-1];\n\t\t\t\tval[q-1] = r;\n\t\t\t\tq = q - 1;\n\t\t\t}\n\t\t}\n\t\tn = n - 1;\n\t}\n\twhile (sumab <= suma){\n\t\tsumab = sumab + val[k];\n\t\tsuma = suma - val[k];\n\t\tc = c + 1;\n\t\tk = k - 1;\n\t}\n\tprintf (\"%i\\n\", c);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main (){\n\tint q = 0;\n\tint r = 0;\n\tint c = 0;\n\tint sumab = 0;\n\tint k = -1;\n\tint suma = 0;\n\tint n;\n\tscanf (\"%i%*c\", &n);\n\tint *val = (int*)malloc(n*sizeof(int));\n\twhile (n > 0){\n\t\tk = k + 1;\n\t\tq = k;\n\t\tscanf (\"%i%*c\", &val[k]);\n\t\tsuma = suma + val[k];\n\t\tif (k > 0){\n\t\t\twhile (q > 0)\n\t\t\t\tif (val[q-1] > val[q]){\n\t\t\t\t\tr = val[q];\n\t\t\t\t\tval[q] = val[q-1];\n\t\t\t\t\tval[q-1] = r;\n\t\t\t\t\tq = q - 1;\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t\tq = q - 1;\n\t\t}\n\t\tn = n - 1;\n\t}\n\twhile (sumab <= suma){\n\t\tsumab = sumab + val[k];\n\t\tsuma = suma - val[k];\n\t\tc = c + 1;\n\t\tk = k - 1;\n\t}\n\tprintf (\"%i\\n\", c);\n\treturn 0;\n}"}
{"similarity_score": 0.8958630527817404, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "899c0ed7779293aef33137c7e00418c3", "bug_code_uid": "3e96c2a7eed912997431613f42624a82", "src_uid": "5312a505bd59b55a6c5487f67a33d81a", "apr_id": "f1bb455d1d8c6efca48e399bb461c2cb", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        int n,i=0,l,count=0,x=0;\r\n        scanf(\"%d\", &n);\r\n        l=n;\r\n        while(n!=0){\r\n            n=n/10;\r\n            count++;\r\n        }\r\n\r\n\r\nx=pow(10,count-1);\r\n\r\n        printf(\"%d\\n\", l- x);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        int n,i=0,l,count=0,x=1;\r\n        scanf(\"%d\", &n);\r\n        l=n;\r\n        while(n!=0){\r\n            n=n/10;\r\n            count++;\r\n        }\r\n\r\n\r\nfor(i=0;i<count-1;i++){\r\n    x=x*10;\r\n}\r\n\r\n        printf(\"%d\\n\", l- x);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9647577092511013, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e3eaebf1b8aa3b37bf2bd046cdef8f57", "bug_code_uid": "aa56bdc751f9a14018b87a7d6bfc194b", "src_uid": "9f87a89c788bd7c7b66e51db9fe47e46", "apr_id": "15bb9a21f64500c4d79f80f70e1f4efd", "difficulty": 900, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint t, n, i, a[305];\n\tchar s[305];\n\tscanf(\"%d\", &t);\n\twhile (t--)\n\t{\n\t\tint flag = 0, sum = 0;\n\t\tscanf(\"%d %s\", &n,&s);\n\t\tfor (i = 0; i < n; i++)a[i]=s[i]-'0';\n\t\tfor (i = 1; i < n; i++)\n\t\t{\n\t\t\tsum += a[i];\n\t\t\tif (sum > a[0])\n\t\t\t{\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag)\n\t\t{\n\t\t\tprintf(\"YES\\n2\\n%d \", a[0]);\n\t\t\tfor (i = 1; i < n; i++)printf(\"%d\", a[i]);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\telse printf(\"NO\\n\");\n\t}\n}", "fixed": "#include <stdio.h>\n#include<math.h>\nint main()\n{\n\tint t, n, i, a[305];\n\tchar s[305];\n\tscanf(\"%d\", &t);\n\twhile (t--)\n\t{\n\t\tint flag = 0, sum = 0;\n\t\tscanf(\"%d %s\", &n,&s);\n\t\tfor (i = 0; i < n; i++)a[i]=s[i]-'0';\n\t\tfor (i = 1; i < n; i++)\n\t\t{\n\t\t\tsum += a[i] * pow(10,i-1) ;\n\t\t\tif (sum > a[0])\n\t\t\t{\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag)\n\t\t{\n\t\t\tprintf(\"YES\\n2\\n%d \", a[0]);\n\t\t\tfor (i = 1; i < n; i++)printf(\"%d\", a[i]);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\telse printf(\"NO\\n\");\n\t}\n}"}
{"similarity_score": 0.4561911658218682, "equal_cnt": 30, "replace_cnt": 16, "delete_cnt": 1, "insert_cnt": 12, "fix_ops_cnt": 29, "lang": "GNU C", "fix_code_uid": "9b7f7680353810fb212b8dbc151ff3d9", "bug_code_uid": "d3b25992e1d7fc025997647cdc1e10ad", "src_uid": "f48ddaf1e1db5073d74a2aa318b46704", "apr_id": "6ea63b08876286ce2d579a2638b71d89", "difficulty": 1200, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{ int max,n,i,j,r,flag,temp,z=-1,stack[200];\n  char *p[100];\n  scanf(\"%d\",&n);\n  for(i=0;i<n;++i)\n  p[i]=(char *)malloc(n*sizeof(char));\n  for(i=0;i<n;++i)\n  scanf(\"%s\",p[i]);\n  for(i=0;i<n-1;++i)\n  { temp=0;\n     for(j=i+1;j<n;++j)\n    { flag=0;\n      for(r=0;r<n;++r)\n      if(p[i][r]!=p[j][r])\n      flag=1;\n      if(flag==0)\n      temp+=1;\n      }\n      ++z;\n      stack[z]=(temp+1);\n      }\nmax=stack[0];\nfor(i=1;i<=z;++i)\nif(stack[z]>max)\nmax=stack[z];\nprintf(\"%d\",max);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{ int a[100][100],i,j,num,n,temp,flag,max,stack[200],r,z=-1;\n  char p,q;\n  scanf(\"%d\",&n);\n  q=getchar();\n  for(i=0;i<n;++i)\n  { p=getchar();\n     for(j=0;j<n&&p!='\\n';++j)\n    { num=p-'0';\n      a[i][j]=num;\n      p=getchar();\n      }\n        }\n        if(n==1)\n        printf(\"1\");\n        else{\n        for(i=0;i<n-1;++i)\n        { temp=0;\n          for(j=i+1;j<n;++j)\n          { flag=0;\n            for(r=0;r<n;++r)\n            if(a[i][r]!=a[j][r])\n            flag=1;\n            if(flag==0)\n            temp+=1;\n            }\n            ++z;\n            stack[z]=(temp+1);\n            }\n            max=stack[0];\n            for(i=1;i<=z;++i){\n            if(stack[i]>max){\n            max=stack[i];\n            }\n            }\n            printf(\"%d\",max); }\n        return 0;\n        }\n"}
{"similarity_score": 0.7972318339100346, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "0d0c70c91a59284cb3bf1b81a00ba342", "bug_code_uid": "9bb04dfadef43fcea68b956be12bf69e", "src_uid": "ed449ba7c453a43e2ac5904dc0174530", "apr_id": "8e0e069d64c1133413793a24fb9cefdd", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,count=0;\n\t\tscanf(\"%d\",&n);\n\t\tint num[n];\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&num[i]);\n\t\t}\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tfor(int j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(i!=j&&num[i]>0)\n\t\t\t\t{\n\t\t\t\tif(num[i]>=num[j]&&num[j]>0)\n\t\t\t\t{\n\t\t\t\t\tif(num[i]-num[j]<=1)\n\t\t\t\t\t{\n\t\t\t\t\tnum[j]=0;\n\t\t\t\t\tcount++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(num[j]>num[i]&&num[j]>0)\n\t\t\t\t{\n\t\t\t\t\tif(num[j]-num[i]<=1)\n\t\t\t\t\t{\n\t\t\t\t\tnum[i]=0;\n\t\t\t\t\tcount++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(count==(n-1))\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,count1=0,count=0;\n\t\tscanf(\"%d\",&n);\n\t\tint num[n];\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&num[i]);\n\t\t}\n\t\tint temp;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tfor(int j=i+1;j<n;j++)\n\t\t\t{\n\t\t\t\tif(num[i]>num[j])\n\t\t\t\t{\n\t\t\t\t\ttemp=num[j];\n\t\t\t\t\tnum[j]=num[i];\n\t\t\t\t\tnum[i]=temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tfor(int j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(i!=j&&num[i]>0)\n\t\t\t\t{\n\t\t\t\tif(num[i]>=num[j]&&num[j]>0)\n\t\t\t\t{\n\t\t\t\t\tif(num[i]-num[j]<=1)\n\t\t\t\t\t{\n\t\t\t\t\tnum[j]=0;\n\t\t\t\t\tcount++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(num[j]>num[i]&&num[j]>0)\n\t\t\t\t{\n\t\t\t\t\tif(num[j]-num[i]<=1)\n\t\t\t\t\t{\n\t\t\t\t\tnum[i]=0;\n\t\t\t\t\tcount++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tif(num[i]>0)\n\t\t\tcount1++;\n\t\t}\n\t\tif(count1==1)\n\t\tprintf(\"YES\\n\");\n\t\telse\n\t\tprintf(\"NO\\n\");\n\t}\n}"}
{"similarity_score": 0.9010695187165776, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "05711e8e5ee96d27727a994ce12f08ca", "bug_code_uid": "a35110c43ae32dd1c4ff99a54a32ffd3", "src_uid": "88e6651e1b0481d711e89c8071be1edf", "apr_id": "b31ca9d3a7864b65b5739f2aa95d6aff", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    short pos,shuff[3][2],i;\n\n    scanf(\"%hi\",&pos);\n\n    for(i=0;i<3;i++)\n    {\n        scanf(\"%hi %hi\",&shuff[i][0],&shuff[i][1]);\n\n        if(pos==shuff[i][0])\n            pos=shuff[i][1];\n        else if(pos==shuff[i][1])\n            pos=shuff[i][0];\n    }\n\n    printf(\"%hi\\n\",pos);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n   freopen(\"input.txt\",\"r\",stdin);\n   freopen(\"output.txt\",\"w\",stdout);\n\n\n    short pos,shuff[3][2],i;\n\n    scanf(\"%hi\",&pos);\n\n    for(i=0;i<3;i++)\n    {\n        scanf(\"%hi %hi\",&shuff[i][0],&shuff[i][1]);\n\n        if(pos==shuff[i][0])\n            pos=shuff[i][1];\n        else if(pos==shuff[i][1])\n            pos=shuff[i][0];\n    }\n\n    printf(\"%hi\\n\",pos);\n\n    return 0;\n}\n"}
{"similarity_score": 0.967654986522911, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a7f1619e99405ff5c919d5c9fc0f0e75", "bug_code_uid": "78bdb4ad9b99be88db0b40d919a8638f", "src_uid": "5312a505bd59b55a6c5487f67a33d81a", "apr_id": "10a2838cd20955b2e573864713414f89", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        \r\n        int a;\r\n        scanf(\"%d\",&a);\r\n        int k=1,r=1;\r\n        while(k<=a){\r\n          k*=10;\r\n        }\r\n        k/=10;\r\n        printf(\"%d\\n\",a-k);\r\n        \r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        \r\n        long long int a;\r\n        scanf(\"%lld\",&a);\r\n       long long  int k=1,r=1;\r\n        while(k<=a){\r\n          k*=10;\r\n        }\r\n        k/=10;\r\n        printf(\"%lld\\n\",a-k);\r\n        \r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9989177489177489, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "797466723f76159a33d90fef168beffc", "bug_code_uid": "fa82697da527c067aae608419f55d4b5", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "173bf6870f1b868c062a7028f8a230a1", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n    {\n        int n, contA=0, contD=0, i;\n        char  palabra[100000];\n        scanf(\"%d\", &n);\n        scanf(\"%s\", palabra);\n        for(i=0; i<n; i++)\n        {\n            if(palabra[i]=='D')\n            {\n                contD++;\n            }\n                else\n                {\n                    contA++;\n                }\n        }\n                    if(contD>contA)\n                    {\n                        printf(\"Danik\\n\");\n                    }\n                        else\n                        {\n                            if(contA>contD)\n                            {\n                                printf(\"Anton\\n\");\n                            }\n                                else\n                                {\n                                     printf(\"friendship\");\n\n                                }\n                        }\n        return 0;\n    }", "fixed": "#include <stdio.h>\nint main ()\n    {\n        int n, contA=0, contD=0, i;\n        char  palabra[100000];\n        scanf(\"%d\", &n);\n        scanf(\"%s\", palabra);\n        for(i=0; i<n; i++)\n        {\n            if(palabra[i]=='D')\n            {\n                contD++;\n            }\n                else\n                {\n                    contA++;\n                }\n        }\n                    if(contD>contA)\n                    {\n                        printf(\"Danik\\n\");\n                    }\n                        else\n                        {\n                            if(contA>contD)\n                            {\n                                printf(\"Anton\\n\");\n                            }\n                                else\n                                {\n                                     printf(\"Friendship\");\n\n                                }\n                        }\n        return 0;\n    }"}
{"similarity_score": 0.9609929078014184, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "a3de0a5f02d11e4d5c40f41a1f20d014", "bug_code_uid": "9196a42ce02cc36ff978b882aed96df6", "src_uid": "3f97dc063286a7af4838b7cd1c01df69", "apr_id": "d7a5460c46e6e2e62520062739be51bf", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main (void)\n{\n    char s[200];\n    int len,t;\n    while(~scanf(\"%d%d\",&len,&t))\n    {\n        getchar();\n        for(int i=1;i<=len;i++)\n            scanf(\"%c\",&s[i]);\n        getchar();\n        while(t--)\n        {\n            int l,r;\n            char a,b;\n            scanf(\"%d %d %c %c\",&l,&r,&a,&b);\n            getchar();\n            for(int i=l;i<=r;i++)\n                if(s[i]==a)\n                    s[i]=b;\n            for(int i=1;i<=len;i++)\n                printf(\"%c\",s[i]);\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main (void)\n{\n    char s[200];\n    int len,t;\n    while(~scanf(\"%d%d\",&len,&t))\n    {\n        getchar();\n        for(int i=1;i<=len;i++)\n            scanf(\"%c\",&s[i]);\n        getchar();\n        while(t--)\n        {\n            int l,r;\n            char a,b;\n            scanf(\"%d %d %c %c\",&l,&r,&a,&b);\n            getchar();\n            for(int i=l;i<=r;i++)\n                if(s[i]==a)\n                    s[i]=b;\n        }\n        for(int i=1;i<=len;i++)\n            printf(\"%c\",s[i]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.997289972899729, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1c4fd491300068f8a6d8ea3541ecb161", "bug_code_uid": "1ecbfb06f18dd1d6fb2490047246d3b4", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "5b22741edeb2b23f67448ed351a2f678", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    long long int t;\n    long long int n,m;\n    long long int berkay;\n    int tmp = 0;\n    scanf(\"%lld\",&t);\n    for(int i = 0;i<t;i++){\n        scanf(\"%lld%lld\",&n,&m);\n        berkay = n*m;\n        if(berkay%2)\n            tmp++;\n        berkay/=2;\n        berkay+=tmp;\n        printf(\"%lld\",berkay);\n        tmp = 0;\n    }\nreturn 0;}\n", "fixed": "#include <stdio.h>\nint main(){\n    long long int t;\n    long long int n,m;\n    long long int berkay;\n    int tmp = 0;\n    scanf(\"%lld\",&t);\n    for(int i = 0;i<t;i++){\n        scanf(\"%lld%lld\",&n,&m);\n        berkay = n*m;\n        if(berkay%2)\n            tmp++;\n        berkay/=2;\n        berkay+=tmp;\n        printf(\"%lld\\n\",berkay);\n        tmp = 0;\n    }\nreturn 0;}\n"}
{"similarity_score": 0.8593155893536122, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "50d6e499f7598791148795d9e45029af", "bug_code_uid": "7c12629c232bebced116d057534a9cc9", "src_uid": "56bdab2019ee12e18d4f7e17ac414962", "apr_id": "d7f3ed4e642d83ee9412473bc9d4bafd", "difficulty": 1000, "tags": ["two pointers", "binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,c=0,i,j;\n    scanf(\"%d %d\",&n,&m);\n    long long int a[n],b[m];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    for(j=0; j<m; j++)\n    {\n        scanf(\"%I64d\",&b[j]);\n    }\n    for(j=0; j<m; j++)\n    {\n        for(i=0;i<n;i++)\n        {\n            if(a[i]>=b[j])\n            {\n                c=i;\n                break;\n            }\n            else\n            b[j]=b[j]-a[i];\n        }\n        printf(\"%d %I64d\\n\",c+1,b[j]);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,c=0,i,j;\n    scanf(\"%d %d\",&n,&m);\n    long long int a[n],b[m],d=0;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n        if(i>0)\n        a[i]=a[i]+a[i-1];\n    }\n    for(j=0; j<m; j++)\n    {\n        scanf(\"%I64d\",&b[j]);\n    }\n    for(j=0; j<m; j++)\n    {\n        for(i=c;i<n;i++)\n        {\n            if(a[i]>=b[j])\n            {\n                c=i;\n                printf(\"%d %I64d\\n\",c+1,b[j]-d);\n                break;\n            }\n            else\n            d=a[i];\n        }\n    }\n}\n"}
{"similarity_score": 0.2901960784313726, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "1179027f490110ed13c39872c765a3fe", "bug_code_uid": "b2c38e38c766f5a93efbbe6bde241a40", "src_uid": "e46c6406d19e8679fd282d72882ae78d", "apr_id": "97cc4b32807ab87c8b383f75e4d4fff3", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint ipow(int n, int e) {\n    int pow = 1;\n    while (e--) {\n        pow *= n;\n    }\n    \n    return pow;\n}\n\nint c2i(char c) {\n    return c - '0';\n}\n\nint getDec(char *bin) {\n    int len = strlen(bin);\n    int p = ipow(2, len - 1);\n    int dec = 0;\n    \n    while (*bin) {\n        dec += c2i(*bin) * p;\n        bin++;\n        p /= 2;\n    }\n    \n    return dec;\n}\n\nint main(void) {\n    int cnt = 0, dec = 0;\n    char bin[100] = {0, };\n    \n    scanf(\"%s\", bin);\n    dec = getDec(bin);\n\n    while (dec != 1) {\n        if (dec % 2 == 0) {\n            dec /= 2;\n        } else {\n            dec++;\n        }\n        cnt++;\n    }\n    \n    printf(\"%d\\n\", cnt);\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main(void) {\n    int cnt = 0, len = 0;\n    char num[1200000] = {0, }, *p = num;\n    \n    scanf(\"%s\", num);\n    len = strlen(num);\n    p = num + len - 1;\n    \n    while (p > num) {\n        if (*p == '1') {\n            while (*p == '1') {\n                p--;\n                cnt++;\n            }\n            \n            *p = '1';\n            cnt++;\n        } else {\n            while (*p == '0') {\n                p--;\n                cnt++;\n            }\n        }\n    }\n    \n    printf(\"%d\\n\", cnt);\n\n    return 0;\n}"}
{"similarity_score": 0.2332046332046332, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "c915e1ce648efa0049d1781e4652d07b", "bug_code_uid": "a15b26de77f5e2a48028cca8564918d1", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "2a8b96880a8f6eba88c82cacbf097a7e", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint n;\nint s[500050];\nvoid step1();\nvoid step2(int i);\nvoid step3(int i);\nlong long int t,r,z;\nint main(){\n    int i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",s+i);\n        z+=s[i];\n    }\n    if(z%3==0){\n        t=z/3;\n        step1();\n    }\n    printf(\"%I64d\",r);\n}\nvoid step1(){\n    int i,v=0;\n    for(i=1;i<=n;i++){\n        v+=s[i];\n        if(v==t){\n            step2(i);\n        }\n    }\n}\nvoid step2(int i){\n    int v=0;\n    i++;\n    if(i<=n){\n        for(;i<=n;i++){\n            v+=s[i];\n            if(v==t){\n                step3(i);\n            }\n        }\n    }\n}\nvoid step3(int i){\n    int v=0;\n    i++;\n    if(i<=n){\n        for(;i<=n;i++){\n            v+=s[i];\n        }\n        if(v==t){\n            r++;\n        }\n    }\n}", "fixed": "#include<stdio.h>\nlong long int a[500050];\nint main(){\n    int i,j,n;\n    long long int l,r,t1,t2,t3;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&j);\n        a[i]=a[i-1]+j;\n    }\n    t3=a[n-1];\n    if(t3%3==0){\n        t1=t3/3;\n        t2=t1*2;\n        r=l=0;\n        for(i=0;i<n-1;i++){\n            if(a[i]==t2){\n                r+=l;\n            }\n            if(a[i]==t1){\n                l++;\n            }\n        }\n        printf(\"%I64d\",r);\n    }else{\n        printf(\"0\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9795640326975477, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6c220f98ca0d8427e3b8d6bdf4f05fe3", "bug_code_uid": "921bf651eb86c3df9cad99f4844ada95", "src_uid": "a4eeaf7252b9115b67b9eca5f2bf621d", "apr_id": "cdbf2df6075d219a95a5b98937dcc686", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdlib.h>\r\n#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main(int argc, char* argv[])\r\n{\r\n    long long int  t,  l1, p1, l2, p2;\r\n    char s1[20], s2[20], sz[20]=\"0000000000000000000\";\r\n    fscanf(stdin, \"%lld\", &t);\r\n    while(t--){\r\n        fscanf(stdin,\"%s %lld\", s1, &p1);\r\n        fscanf(stdin,\"%s %lld\", s2, &p2);\r\n        int i;\r\n        l1=strlen(s1); l2=strlen(s2);\r\n        if((l1+p1)>(l2+p2)) printf(\">\\n\");\r\n        else if((l1+p1)<(l2+p2)) printf(\"<\\n\");\r\n        else {\r\n\t\t    if(l1>l2) strncpy(&s2[l2], sz, l1-l2);\r\n\t\t    else if(l1<l2) strncpy(&s1[l1], sz, l2-l1);;\r\n\t\t\tint n=strcmp(s1,s2);\r\n\t\t\tif(n<0)printf(\"<\\n\");\r\n\t\t\telse if (n>0) printf(\">\\n\");\r\n\t\t\telse printf(\"=\\n\");\r\n\t\t}\r\n   }\r\n}    \r\n", "fixed": "#include <stdlib.h>\r\n#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main(int argc, char* argv[])\r\n{\r\n    long long int  t,  l1, p1, l2, p2;\r\n    char s1[20], s2[20], sz[20]=\"0000000000000000000\";\r\n    fscanf(stdin, \"%lld\", &t);\r\n    while(t--){\r\n        fscanf(stdin,\"%s %lld\", s1, &p1);\r\n        fscanf(stdin,\"%s %lld\", s2, &p2);\r\n        int i;\r\n        l1=strlen(s1); l2=strlen(s2);\r\n        if((l1+p1)>(l2+p2)) printf(\">\\n\");\r\n        else if((l1+p1)<(l2+p2)) printf(\"<\\n\");\r\n        else {\r\n\t\t    if(l1>l2) {strncpy(&s2[l2], sz, l1-l2); s2[l1]='\\0';}\r\n\t\t    else if(l1<l2) {strncpy(&s1[l1], sz, l2-l1);s1[l2]='\\0';}\r\n\t\t\tint n=strcmp(s1,s2);\r\n\t\t\tif(n<0)printf(\"<\\n\");\r\n\t\t\telse if (n>0) printf(\">\\n\");\r\n\t\t\telse printf(\"=\\n\");\r\n\t\t}\r\n   }\r\n}    \r\n"}
{"similarity_score": 0.9966555183946488, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4f88d2c0047946257a9c013fdbe72849", "bug_code_uid": "20d402e850667029633e62b46f0af5b7", "src_uid": "d9fd10700cb122b148202a664e7f7689", "apr_id": "b7328423a657d2816e1479038dbda7d1", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long i,t,d,c=0;\n    long long a,b;\n    scanf(\"%ld\",&t);\n        for(i=0;i<t;i++)\n        {\n    scanf(\"%lld %lld\",&a,&b);\n         if(a%b!=0)\n     {\n      d=a/b;\n       c=(b*(d+1))-a;\n    }\n else if(a%b==0)\n   c=0;\n    printf(\"%ld\",c);\n        c=0;\n            }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long i,t,d,c=0;\n    long long a,b;\n    scanf(\"%ld\",&t);\n        for(i=0;i<t;i++)\n        {\n    scanf(\"%lld %lld\",&a,&b);\n         if(a%b!=0)\n     {\n      d=a/b;\n       c=(b*(d+1))-a;\n    }\n else if(a%b==0)\n   c=0;\n    printf(\"%ld\\n\",c);\n        c=0;\n            }\n}"}
{"similarity_score": 0.9982046678635548, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c22ad88438df078639fee4e0a4cc9b67", "bug_code_uid": "25eb07b4f7de2f211f632c68c53d7d95", "src_uid": "20dd260775ea71b1fb5b42bcac90a6f2", "apr_id": "4a780fbce212d6b42ba4c66f27876956", "difficulty": 800, "tags": ["greedy", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int I=0;I<t;I++){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int arr[n];\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%d\",&arr[i]);\r\n        }\r\n        int temp0=arr[0];\r\n        int tempi=0;\r\n        for(int i=1;i<n;i++){\r\n            if(arr[i]<temp0){\r\n                tempi=i;\r\n                temp0=arr[i];\r\n            }\r\n        }\r\n        int sum=0;\r\n        for(int i=0;i<n;i++){\r\n            sum+=(arr[i]-temp0);\r\n        }\r\n        printf(\"%d\",sum);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int I=0;I<t;I++){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int arr[n];\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%d\",&arr[i]);\r\n        }\r\n        int temp0=arr[0];\r\n        int tempi=0;\r\n        for(int i=1;i<n;i++){\r\n            if(arr[i]<temp0){\r\n                tempi=i;\r\n                temp0=arr[i];\r\n            }\r\n        }\r\n        int sum=0;\r\n        for(int i=0;i<n;i++){\r\n            sum+=(arr[i]-temp0);\r\n        }\r\n        printf(\"%d\\n\",sum);\r\n    }\r\n}"}
{"similarity_score": 0.8125, "equal_cnt": 15, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 10, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "93b440c56a71679cbf4c70925cd55f11", "bug_code_uid": "f1d02d261cb9c7ad1dd66e9f141ad295", "src_uid": "c1608f6f71cac56690e31aa130c1990e", "apr_id": "451bfa4b6603cb016264aa66dbfb267a", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(void)\n\n{\n    int n,m,temp,sum=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for( int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum = sum + a[i];\n\n    }\n\n\n    for(int k=0;k<n;k++)\n    {\n        for(int l=0;l<k;l++)\n        {\n            if(a[l]<a[k])\n            {\n                temp = a[l];\n                a[l] = a[k];\n                a[k] = temp;\n            }\n\n        }\n    }\n\n    scanf(\"%d\",&m);\n    int b[m];\n\n    for(int i=0;i<m;i++)\n    {\n        int x;\n        scanf(\"%d\",&b[i]);\n        x=sum-a[b[i]-1];\n        printf(\"%d \", x);\n    }\n    return 0;\n\n\n\n\n\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nlong long int cmp(const void *a,const void *b)\n{\n    return *(long long int*)b - *(long long int*)a;\n}\n\nint main(void)\n\n{\n    long long int n,m,temp,sum=0;\n    scanf(\"%I64d\",&n);\n    long long int a[n];\n    for( int i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n        sum = sum + a[i];\n\n    }\n\n    qsort(a,n,sizeof(long long int),cmp);\n\n\n    /*for(int k=0;k<n;k++)\n    {\n        for(int l=0;l<k;l++)\n        {\n            if(a[l]<a[k])\n            {\n                temp = a[l];\n                a[l] = a[k];\n                a[k] = temp;\n            }\n\n        }\n    }*/\n\n    scanf(\"%I64d\",&m);\n    long long int b[m];\n\n    for(int i=0;i<m;i++)\n    {\n        long long int x;\n        scanf(\"%I64d\",&b[i]);\n        x=sum-a[b[i]-1];\n        printf(\"%I64d \", x);\n    }\n    return 0;\n\n\n\n\n\n}\n\n"}
{"similarity_score": 0.9843342036553525, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "92b9b403e746cdcaa9f7ba0a46279147", "bug_code_uid": "2fdf836f3cf0cd2cbe755bc2c7c3698c", "src_uid": "4e9efd8faa7327e37352f2ebccf5945f", "apr_id": "a28e799769fbe59d3785affc0cf18e7f", "difficulty": 1200, "tags": ["data structures", "dp", "implementation", "math", "two pointers"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint cmp(const void*a,const void *b)\r\n{\r\n\treturn *(int*)a-*(int*)b;\r\n}\r\nint alx[200005];\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint i,n,j=1;\r\n\t\tlong long ans=0,sum=0,ave;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=0;i<n;i++)scanf(\"%d\",&alx[i]),sum+=alx[i];\r\n\t\t\r\n\t\tif((2*sum)%n==0)\r\n\t\t{\r\n\t\tlong long l=0,r=n-1,lc=1,rc=1;\r\n\t\tave=(2*sum)/n;\t\r\n\t\tqsort(alx,n,sizeof(alx[0]),cmp);\r\n\t\twhile(l<r)\r\n\t\t{\r\n\t\t\tif(alx[l]==alx[l+1])\r\n\t\t\t{\r\n\t\t\t\tif(alx[l]*2==ave)ans+=lc;\r\n\t\t\t\tl++,lc++;\r\n\t\t\t}else if(alx[r]==alx[r+1])\r\n\t\t\t{\r\n\t\t\t\tif(alx[r]*2==ave)ans+=rc;\r\n\t\t\t\tr--,rc++;\r\n\t\t\t}else if(alx[l]+alx[r]<=ave)\r\n\t\t\t{\r\n\t\t\t\tif(alx[l]+alx[r]==ave)ans+=lc*rc;\r\n\t\t\t\tl++;lc=1;\r\n\t\t\t}else rc=1,r--;\t\r\n\t\t}\t\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",ans);\r\n\t}\r\n} \r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint cmp(const void*a,const void *b)\r\n{\r\n\treturn *(int*)a-*(int*)b;\r\n}\r\nint alx[200005];\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint i,n,j=1;\r\n\t\tlong long ans=0,sum=0,ave;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=0;i<n;i++)scanf(\"%d\",&alx[i]),sum+=alx[i];\r\n\t\tif((2*sum)%n==0)\r\n\t\t{\r\n\t\tlong long l=0,r=n-1,lc=1,rc=1;\r\n\t\tave=(2*sum)/n;\t\r\n\t\tqsort(alx,n,sizeof(alx[0]),cmp);\r\n\t\twhile(l<r)\r\n\t\t{\r\n\t\t\tif(alx[l]==alx[l+1])\r\n\t\t\t{\r\n\t\t\t\tif(alx[l]*2==ave)ans+=lc;\r\n\t\t\t\tl++,lc++;\r\n\t\t\t}else if(alx[r]==alx[r-1])\r\n\t\t\t{\r\n\t\t\t\tif(alx[r]*2==ave)ans+=rc;\r\n\t\t\t\tr--,rc++;\r\n\t\t\t}else if(alx[l]+alx[r]<=ave)\r\n\t\t\t{\r\n\t\t\t\tif(alx[l]+alx[r]==ave)ans+=lc*rc;\r\n\t\t\t\tl++;lc=1;\r\n\t\t\t}else \r\n\t\t\t{\r\n\t\t\trc=1,r--;\t\r\n\t\t\t}\t\r\n\t\t}\t\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",ans);\r\n\t}\r\n} \r\n"}
{"similarity_score": 0.9669669669669669, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "554f443dd417cdec185be04785f87254", "bug_code_uid": "8ede4d0d453252b9a602408bd6cb4551", "src_uid": "fcb6a715dfe302d7ae5a6695ca8976aa", "apr_id": "ce33c55da2e842670c422b8d54a6997d", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n, x = 0, y = 0, z = 0, max, c;\n\nint main()\n{\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++)\n    {\n        scanf(\"%d\", &c);\n        if (c == 1) x++; else if(c == 2) y++; else z++;\n    }\n    if (x > y) max  = x; else max = y;\n    if (max < c) max = c;\n    printf(\"%d\", x + y + z - max);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint n, x = 0, y = 0, z = 0, max, c;\n\nint main()\n{\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++)\n    {\n        scanf(\"%d\", &c);\n        if (c == 1) x++; else if(c == 2) y++; else z++;\n    }\n    if (x > y) max  = x; else max = y;\n    if (max < z) max = z;\n    printf(\"%d\", x + y + z - max );\n    return 0;\n}"}
{"similarity_score": 0.9146953405017921, "equal_cnt": 29, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 28, "fix_ops_cnt": 29, "lang": "GNU C11", "fix_code_uid": "e335c55bc8e4fcb2c2404d52723796d9", "bug_code_uid": "6629cb05125410812694e93dc3dfeb75", "src_uid": "a7e98ed8ee1b0a4fd03dfcd222b68c6f", "apr_id": "1782720b5899a0a0e0f0231a64768447", "difficulty": 800, "tags": ["two pointers", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n        int main()\n        {\n            int n,i,s=0,d=0,k=0,j,max;\n            scanf(\"%d\",&n);\n            int a[n];\n            for(i=0;i<n;i++)\n            {\n                scanf(\"%d\",&a[i]);\n            }\n    \n            for(i=0,j=n-1;i<j;)\n            {\n                if(a[i]>=a[j])\n                { max=a[i];\n                i++;\n                }\n                else\n                {max=a[j];\n                j--;\n                }\n                if(k%2==0)\n                s=s+max;\n                else\n                d=d+max;\n                k++;\n            }\n            printf(\"%d %d\",s,d);\n        }", "fixed": "    #include<stdio.h>\n            int main()\n            {\n                int n,i,s=0,d=0,k=0,j,max;\n                scanf(\"%d\",&n);\n                int a[n];\n                for(i=0;i<n;i++)\n                {\n                    scanf(\"%d\",&a[i]);\n                }\n        \n                for(i=0,j=n-1;i<=j;)\n                {\n                    if(a[i]>=a[j])\n                    { max=a[i];\n                    i++;\n                    }\n                    else\n                    {max=a[j];\n                    j--;\n                    }\n                    if(k%2==0)\n                    s=s+max;\n                    else\n                    d=d+max;\n                    k++;\n                }\n                printf(\"%d %d\",s,d);\n            }"}
{"similarity_score": 0.8708901363271853, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "61d5d196f5bfbe052481231dfb8270b7", "bug_code_uid": "af0a5cf57168e452ca3fd8ca3f17f614", "src_uid": "0c103e450a12e149ad668172aa83ce9e", "apr_id": "d775eed0ce8bbd1df0fd3163b818e20d", "difficulty": 2700, "tags": ["constructive algorithms", "bitmasks"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/* practice with Dukkha */\n#include <stdio.h>\n\n#define N\t300000\n\nint main() {\n\tstatic int aa[N];\n\tstatic long long mask[N];\n\tint n, i, k;\n\tlong long ans;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d%lld\", &aa[i], &mask[i]);\n\tans = 0;\n\tfor (k = 0; k < 62; k++) {\n\t\tlong long b = 1LL << k, sum = 0;\n\t\tint flip;\n\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (mask[i] == b)\n\t\t\t\tsum += aa[i];\n\t\tflip = sum > 0;\n\t\tif (flip)\n\t\t\tans |= b;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (mask[i] & b) {\n\t\t\t\tif (flip)\n\t\t\t\t\taa[i] = -aa[i];\n\t\t\t\tmask[i] ^= b;\n\t\t\t}\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n", "fixed": "/* practice with Dukkha */\n#include <stdio.h>\n\n#define N\t300000\n\nint main() {\n\tstatic int aa[N];\n\tstatic long long mask[N];\n\tint n, i, k;\n\tlong long ans, sum;\n\n\tscanf(\"%d\", &n);\n\tsum = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d%lld\", &aa[i], &mask[i]);\n\t\tsum += aa[i];\n\t}\n\tif (sum < 0)\n\t\tfor (i = 0; i < n; i++)\n\t\t\taa[i] = -aa[i];\n\tans = 0;\n\tfor (k = 0; k < 62; k++) {\n\t\tlong long b = 1LL << k;\n\t\tint flip;\n\n\t\tsum = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (mask[i] == b)\n\t\t\t\tsum += aa[i];\n\t\tflip = sum > 0;\n\t\tif (flip)\n\t\t\tans |= b;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (mask[i] & b) {\n\t\t\t\tif (flip)\n\t\t\t\t\taa[i] = -aa[i];\n\t\t\t\tmask[i] ^= b;\n\t\t\t}\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9942363112391931, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5651df04c3f295bb02168ff7687641da", "bug_code_uid": "9333ef71ee77f333cdb067ff913b8ddb", "src_uid": "f0a138b9f6ad979c5ca32437e05d6f43", "apr_id": "e6afd443e33d81dfbd1d3181b262677f", "difficulty": 1400, "tags": ["greedy", "number theory", "games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n\tlong long q, p, i, j;\n\tscanf(\"%I64d\", &q);\n\tfor (i = 2LL; i <= sqrt(q); ++i)\n\t\tif (q % i == 0LL)\n\t\t{\n\t\t\tp = q / i;\n\t\t\tfor (j = 2LL; j * j <= sqrt(p); ++j)\n\t\t\t\tif (p % j == 0LL)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"1\\n%I64d\\n\", i * j);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\tputs(\"2\");\n\t\t\treturn 0;\n\t\t}\n\tputs(\"1\\n0\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n\tlong long q, p, i, j;\n\tscanf(\"%I64d\", &q);\n\tfor (i = 2LL; i <= sqrt(q); ++i)\n\t\tif (q % i == 0LL)\n\t\t{\n\t\t\tp = q / i;\n\t\t\tfor (j = 2LL; j <= sqrt(p); ++j)\n\t\t\t\tif (p % j == 0LL)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"1\\n%I64d\\n\", i * j);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\tputs(\"2\");\n\t\t\treturn 0;\n\t\t}\n\tputs(\"1\\n0\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9986666666666667, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3047f78fdd7528a37705b50266b60538", "bug_code_uid": "63379a788ea92e94a00e41adbd44f8ac", "src_uid": "468e8a14dbdca471f143f59b945508d0", "apr_id": "772cb195ad285f2564ab6609515c0988", "difficulty": 1500, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <limits.h>\n#include <math.h>\n\nint f[1000010];\nint b[1000010];\nint ot[1000010];\n\nint inf[1000010];\n\nint\nmain()\n{\n\tint\ti;\n\tint\tn, m;\n\tint\tt, am = 0;\n\n\tscanf (\"%d%d\", &n, &m);\n\n\tfor (i = 1; i <= n; i++) {\n\t\t\n\t\tscanf (\"%d\", &t);\n\n\t\tf[i] = t;\n\t\tif (inf[t] > 0) {\n\t\t\tinf[t] = -1;\n\t\t} else if (!inf[t]) {\n\t\t\tinf[t] = i;\n\t\t}\n\t}\n\tfor (i = 1; i <= m; i++) {\n\t\tscanf (\"%d\", &b[i]);\n\t}\n\n\tfor (i = 1; i <= m; i++) {\n\t\tt = b[i];\n\t\tif (inf[t] == -1) {\n\t\t\tam = 1;\n\t\t} else if (inf[t] == 0) {\n\t\t\tputs(\"Impossible\");\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tot[i] = inf[t];\t\n\t\t} \n\t}\n\n\tif (am) {\n\t\tputs (\"Ambiquity\");\n\t} else {\n\t\tputs(\"Possible\");\n\t\tfor (i = 1; i <= m; i++) {\n\t\t\tprintf(\"%d \", ot[i]);\n\t\t}\n\t\tputs(\"\");\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <limits.h>\n#include <math.h>\n\nint f[1000010];\nint b[1000010];\nint ot[1000010];\n\nint inf[1000010];\n\nint\nmain()\n{\n\tint\ti;\n\tint\tn, m;\n\tint\tt, am = 0;\n\n\tscanf (\"%d%d\", &n, &m);\n\n\tfor (i = 1; i <= n; i++) {\n\t\t\n\t\tscanf (\"%d\", &t);\n\n\t\tf[i] = t;\n\t\tif (inf[t] > 0) {\n\t\t\tinf[t] = -1;\n\t\t} else if (!inf[t]) {\n\t\t\tinf[t] = i;\n\t\t}\n\t}\n\tfor (i = 1; i <= m; i++) {\n\t\tscanf (\"%d\", &b[i]);\n\t}\n\n\tfor (i = 1; i <= m; i++) {\n\t\tt = b[i];\n\t\tif (inf[t] == -1) {\n\t\t\tam = 1;\n\t\t} else if (inf[t] == 0) {\n\t\t\tputs(\"Impossible\");\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tot[i] = inf[t];\t\n\t\t} \n\t}\n\n\tif (am) {\n\t\tputs (\"Ambiguity\");\n\t} else {\n\t\tputs(\"Possible\");\n\t\tfor (i = 1; i <= m; i++) {\n\t\t\tprintf(\"%d \", ot[i]);\n\t\t}\n\t\tputs(\"\");\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.4062126642771804, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "c959fc129d86bf6764aa2ae0203e3ce9", "bug_code_uid": "ce4f2a4c15cb916cb1f5d3812cb4bc5a", "src_uid": "ccb7b8c0c389ea771f666c236c1cba5f", "apr_id": "7f67f304664de65d7d8215c5ee018672", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int t,i,l1,l2,r1,r2,ar1,ar2,a,b,x,y;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        scanf(\"%d %d %d %d\",&a,&b,&x,&y);\n        x++;\n        y++;\n        \n            if(x<=(a/2))\n                l1=a-x;\n            else\n                l1=x-1;\n            \n            r1=b;\n            ar1=l1*r1;\n        \n        \n            if(y<(b/2))\n                r2=b-y;\n            else\n                r2=y-1;\n            \n            l2=a;\n            ar2=l2*r2;\n        \n        printf(\"%d\\n\",(ar1>ar2?ar1:ar2));\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint max(int n,int m){\n    return(n>=m?n:m);\n}\nint main(){\n    int t,i,a,b,x,y;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        scanf(\"%d %d %d %d\",&a,&b,&x,&y);\n        int area=max(max(x,a-x-1)*b,max(y,b-y-1)*a);\n        printf(\"%d\\n\",area);\n    }\n}"}
{"similarity_score": 0.995260663507109, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4059d2777b981fd889eb86d0b8812b9a", "bug_code_uid": "2e63cd167bf2d3eafa0e538f62542d85", "src_uid": "994a9cb52cf0fdab72be068eab1b27ef", "apr_id": "b1bbee7ecf33c9a52ae17afbec2a53ae", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\nlong long int max(long long int a, long long int b)\r\n{\r\n    if(a<b)\r\n    return b;\r\n    else\r\n    return a;\r\n}\r\nlong long int min(long long int a, long long int b)\r\n{\r\n    if(a<b)\r\n    return a;\r\n    else\r\n    return b;\r\n}\r\nint main()\r\n{\r\n  long long int n,i,j;\r\n   scanf(\"%lld\",&n);\r\n   for(i=0;i<n;i++)\r\n   {\r\n       long long int a,b,c,d,e,f;\r\n       scanf(\"%lld %lld\",&a,&b);\r\n       if(a==b)\r\n       printf(\"0 0\\n\");\r\n       else\r\n       {\r\n    \r\n           printf(\"%lld %lld\\n\",llabs(a-b),min(a%abs(a-b),abs(a-b)-a%abs(a-b)) );\r\n       }\r\n   }\r\n \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\nlong long int max(long long int a, long long int b)\r\n{\r\n    if(a<b)\r\n    return b;\r\n    else\r\n    return a;\r\n}\r\nlong long int min(long long int a, long long int b)\r\n{\r\n    if(a<b)\r\n    return a;\r\n    else\r\n    return b;\r\n}\r\nint main()\r\n{\r\n  long long int n,i,j;\r\n   scanf(\"%lld\",&n);\r\n   for(i=0;i<n;i++)\r\n   {\r\n       long long int a,b,c,d,e,f;\r\n       scanf(\"%lld %lld\",&a,&b);\r\n       if(a==b)\r\n       printf(\"0 0\\n\");\r\n       else\r\n       {\r\n    \r\n           printf(\"%lld %lld\\n\",llabs(a-b),min(a%llabs(a-b),llabs(a-b)-a%llabs(a-b)) );\r\n       }\r\n   }\r\n \r\n    return 0;\r\n}"}
{"similarity_score": 0.9970255800118977, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "60d03a607432a391785371d9e329230b", "bug_code_uid": "be11c6e535570fa6a825d833becd069d", "src_uid": "d5549c0627c236d82541a67ccbe7977d", "apr_id": "bec09221ac7ef297f91b8e6cefbb7c6b", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int i;\r\n    for(i=0;i<t;i++)\r\n    {\r\n        int n, k;\r\n        scanf(\"%d %d\", &n, &k);\r\n        int max;\r\n        char answer[n+1][n+1];\r\n        if(n%2==0)\r\n            max=n/2;\r\n        else\r\n            max=n/2+1;\r\n        if(k>max)\r\n            printf(\"%d\\n\", -1);\r\n        else\r\n        {\r\n            int j, l;\r\n            for(j=0;j<n;j++)\r\n            {\r\n                for(l=0;l<n;l++)\r\n                    arr[j][l]='.';\r\n            }\r\n            for(j=0;k>0;j=j+2)\r\n            {\r\n                arr[j][j]='R';\r\n                k--;\r\n            }\r\n            for(j=0;j<n;j++)\r\n            {\r\n                for(l=0;l<n;l++)\r\n                    printf(\"%c\", arr[j][l]);\r\n                printf(\"\\n\");\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int i;\r\n    for(i=0;i<t;i++)\r\n    {\r\n        int n, k;\r\n        scanf(\"%d %d\", &n, &k);\r\n        int max;\r\n        char arr[n+1][n+1];\r\n        if(n%2==0)\r\n            max=n/2;\r\n        else\r\n            max=n/2+1;\r\n        if(k>max)\r\n            printf(\"%d\\n\", -1);\r\n        else\r\n        {\r\n            int j, l;\r\n            for(j=0;j<n;j++)\r\n            {\r\n                for(l=0;l<n;l++)\r\n                    arr[j][l]='.';\r\n            }\r\n            for(j=0;k>0;j=j+2)\r\n            {\r\n                arr[j][j]='R';\r\n                k--;\r\n            }\r\n            for(j=0;j<n;j++)\r\n            {\r\n                for(l=0;l<n;l++)\r\n                    printf(\"%c\", arr[j][l]);\r\n                printf(\"\\n\");\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9629629629629629, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ee887f4cf32689f1dd1b855ed2e58317", "bug_code_uid": "123ff897ca0dc7b9288f5c59a2d55c48", "src_uid": "260666df22ee510fcce3ebdfbb8b71a2", "apr_id": "2de4d29bf8b44807954276becc24f7a3", "difficulty": 1000, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    double x=0;\n    scanf(\"%d\",&n);\n    for(float i=1;i<=n;i++)\n    {\n        x=x+(1.0/i);\n    }\n    printf(\"%.8lf\",x);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    float x=0;\n    scanf(\"%d\",&n);\n    for(float i=1;i<=n;i++)\n    {\n        x=x+(1.0/i);\n    }\n    printf(\"%f\",x);\n}\n"}
{"similarity_score": 0.8655980271270037, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f81bcd9ad27617c8c50dc3612265c982", "bug_code_uid": "fcb38d599d97d510970abf2f539d805d", "src_uid": "ce4443581d4ee12db6607695cd567070", "apr_id": "fb8e10340a02dd9f3ec839de54b86145", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int a,b,t;\n    b=0;\n    scanf(\"%d\",&t);\n        char arr[t+1];\n        scanf(\"%s\",arr);\n        for(a=1;a<t;a++){\n            if(arr[a]!=arr[a-1]){\n             b=1;\n             break;\n            }\n        }\n        if(b==1){\n            printf(\"YES\");\n        }\n        else{\n            printf(\"NO\");\n        }\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int a,b,t;\n    b=0;\n    scanf(\"%d\",&t);\n        char arr[t+1];\n        char arr1[2];\n        scanf(\"%s\",arr);\n        for(a=1;a<t;a++){\n            if(arr[a]!=arr[a-1]){\n             b=1;\n arr1[0] = arr[a-1];\narr1[1] = arr[a];\n             break;\n            }\n        }\n        if(b==1){\n            printf(\"YES\\n\");\n            printf(\"%c%c\",arr1[0],arr1[1]);\n        }\n        else{\n            printf(\"NO\");\n        }\n}\n"}
{"similarity_score": 0.6869806094182825, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "f465414daef1ec7dcd3faac19e4bb84a", "bug_code_uid": "84fdb9e1db0dfb13d8e10577f9ee2622", "src_uid": "98de093d78f74273e0ac5c7886fb7a41", "apr_id": "a4cce909476e555a1d2af7fff0c3de1d", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long int a,b,k;\n    scanf(\"%lld%lld%lld\",&k,&a,&b);\n    printf(\"%lld\",b/k+1-a/k-((a%k!=0)?1:0));\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define lli long long int\n\nint main()\n{\n    lli a,b,k;\n    scanf(\"%lli%lli%lli\",&k,&a,&b);\n    printf(\"%lli\\n\",b/k-(((b%k!=0)&&(b<0))?1:0)-a/k-(((a%k!=0)&&(a>0))?1:0)+1);\n    return 0;\n}\n"}
{"similarity_score": 0.9594594594594594, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "9d863cbc869629e9808f164d86f53dd7", "bug_code_uid": "c867eae2ebe39b9993483338e4f7f03e", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "9c07e53efeabc2b087cfa59100b4c7ae", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare (const void * a, const void * b)\n{\nreturn *((int *)a) - *((int *)b);\n}\n\nint main()\n{\n    int N,i;\n    long T1[100000],T2[100000],T3[100000];\n    scanf(\"%d\",&N);\n    for(i=0;i<N;i++) scanf(\"%ld\",&T1[i]);\n    for(i=0;i<N-1;i++) scanf(\"%ld\",&T2[i]);\n    for(i=0;i<N-2;i++) scanf(\"%ld\",&T3[i]);\n    qsort (T1, N, sizeof(T1[0]), compare);\n    qsort (T2, N-1, sizeof(T2[0]), compare);\n    qsort (T3, N-2, sizeof(T3[0]), compare);\n    T2[N-1]=-1;\n    T3[N-1]=-1;\n    T3[N-2]=-1;\n    i=0;\n    while (T1[i]==T2[i]) {\n        i++;\n    }\n    long p1=T1[i];\n    i=0;\n    int j=0;\n    while ((T1[i]==T3[i-j])||(T1[i]==p1)) {\n        //printf(\"%ld == %ld , %d,%d\\n\",T1[i],T3[i-j],i,j);\n        if(T1[i]==p1) j=1;\n        i++;\n    }\n    //printf(\"%ld == %ld , %d,%d\\n\",T1[i],T3[i-j],i,j);\n    long p2=T1[i];\n    printf(\"%ld\\n%ld\\n\",p1,p2);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare (const void * a, const void * b)\n{\nreturn *((int *)a) - *((int *)b);\n}\n\nint main()\n{\n    int N,i;\n    long T1[100000],T2[100000],T3[100000];\n    scanf(\"%d\",&N);\n    for(i=0;i<N;i++) scanf(\"%ld\",&T1[i]);\n    for(i=0;i<N-1;i++) scanf(\"%ld\",&T2[i]);\n    for(i=0;i<N-2;i++) scanf(\"%ld\",&T3[i]);\n    qsort (T1, N, sizeof(T1[0]), compare);\n    qsort (T2, N-1, sizeof(T2[0]), compare);\n    qsort (T3, N-2, sizeof(T3[0]), compare);\n    T2[N-1]=-1;\n    T3[N-1]=-1;\n    T3[N-2]=-1;\n    i=0;\n    while (T1[i]==T2[i]) {\n        i++;\n    }\n    int p1=i;\n    i=0;\n    int j=0;\n    while ((T1[i]==T3[i-j])||(i==p1)) {\n        //printf(\"%ld == %ld , %d,%d\\n\",T1[i],T3[i-j],i,j);\n        if(i==p1) j=1;\n        i++;\n    }\n    //printf(\"%ld == %ld , %d,%d\\n\",T1[i],T3[i-j],i,j);\n    int p2=i;\n    printf(\"%ld\\n%ld\\n\",T1[p1],T1[p2]);\n    return 0;\n}\n"}
{"similarity_score": 0.986019131714496, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "49ad35a51a885b7233d5feb276a02db2", "bug_code_uid": "ba1867e7ab87e9489182e01e481107b0", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "c651dd8b6603a8b0fdd318221f278d3e", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,flag=1,temp,c25=0,c50=0;\n    scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%d\",&temp);\n        if(temp==25){\n            c25++;\n        }else if(temp==50){\n            if(c25>0){\n                c25--;\n            }else{\n                flag=0;\n                break;\n            }\n        }else if(temp==100){\n            if(c50>0 && c25>0){\n                c50--;\n                c25--;\n            }else if(c25>2){\n                c25-=3;\n            }else{\n                flag=0;\n                break;\n            }\n        }\n    }\n    if(flag){\n        printf(\"YES\");\n    }else{\n        printf(\"NO\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,flag=1,temp,c25=0,c50=0;\n    scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%d\",&temp);\n        if(temp==25){\n            c25++;\n        }else if(temp==50){\n            c50++;\n            if(c25>0){\n                c25--;\n            }else{\n                flag=0;\n                break;\n            }\n        }else if(temp==100){\n            if(c50>0 && c25>0){\n                c50--;\n                c25--;\n            }else if(c25>2){\n                c25-=3;\n            }else{\n                flag=0;\n                break;\n            }\n        }\n    }\n    if(flag){\n        printf(\"YES\");\n    }else{\n        printf(\"NO\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9281288723667905, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e9a3e3ef69d66f30d9869da372392161", "bug_code_uid": "0d09bf4b5adb9905a6751de011e124e3", "src_uid": "14fd47f6f0fcbdb16dbd73dcca8a782f", "apr_id": "7cf71cd7096a1a99fde2768e4fcd105d", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n;\n    long long int a[100010],c[100];\n    scanf(\"%d\",&n);\n    int i,s=0,j=0,k;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    for(i=32; i>=0; i--)\n    {\n        for(j=0; j<n; j++)\n        {\n            if(a[j]>>i&1)\n            {\n                //a[i]=a[j]-pow(2,i);\n                c[i]++;\n                if(c[i]==1)\n                {\n                    s=j;\n                }\n                else s=0;\n            }\n        }\n        if(c[i]==1)\n        {\n            printf(\"%lld\",a[s]);\n            break;\n        }\n    }\n    for(i=0; i<n; i++)\n    {\n        if(i!=s)\n        {\n            printf(\" %lld\",a[i]);\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n;\n    long long int a[100010],c[100];\n    scanf(\"%d\",&n);\n    int i,s=-1,j=0,k;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    for(i=32; i>=0; i--)\n    {\n        for(j=0; j<n; j++)\n        {\n            if(a[j]>>i&1)\n            {\n                //a[i]=a[j]-pow(2,i);\n                c[i]++;\n                if(c[i]==1)\n                {\n                    s=j;\n                }\n                else s=-1;\n            }\n        }\n        if(c[i]==1)\n        {\n            printf(\"%lld\",a[s]);\n            break;\n        }\n    }\n    if(s==-1)\n    {\n        for(i=0; i<n; i++)\n    {\n\n            printf(\"%lld \",a[i]);\n\n    }\n    }\n    else\n    for(i=0; i<n; i++)\n    {\n        if(i!=s)\n        {\n            printf(\" %lld\",a[i]);\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.958041958041958, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "49049d63b6d2f3d095b4bf149f25bede", "bug_code_uid": "5b24fea6a919208ac2c3606a5021eab7", "src_uid": "67cf9f83ed791a614bd01c5e0310813f", "apr_id": "7f751a62bcfcef178780952e6bcc035d", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint n,i,min=0,max=0,r;\nint a[1000];\nint main() {\n    scanf (\"%d\", &n);\n    for (i=1;i<=n;i++)\n        scanf (\"%d\", &a[i]);\n    for (i=1;i<=n;i++)\n        {\n            if ((a[i]>a[i+1]) && (a[i]>a[i-1]))\n            max=max+1;\n        }\n    for (i=1;i<=n;i++)\n        {\n            if ((a[i]<a[i+1]) && (a[i]<a[i-1]))\n            min=min+1;\n        }\n        r=(min+max)-1;\n        printf (\"%d\", r);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint n,i,min=0,max=0,r;\nint a[1001];\nint main() {\n    scanf (\"%d\", &n);\n    for (i=1;i<=n;i++)\n    scanf (\"%d\", &a[i]);\n    for (i=2;i<n;i++)\n        {\n            if ((a[i]>a[i+1]) && (a[i]>a[i-1]))\n            max=max+1;\n        }\n    for (i=2;i<n;i++)\n        {\n            if ((a[i]<a[i+1]) && (a[i]<a[i-1]))\n            min=min+1;\n        }\n        r=max+min;\n        printf (\"%d\", r);\n    return 0;\n}"}
{"similarity_score": 0.8799192734611504, "equal_cnt": 23, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 13, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "a5c2e145d5a3a892dc487cbba4a07370", "bug_code_uid": "0395afc09df2e1ca69dc26e43459858d", "src_uid": "e8ba3fb95800806465386ecbfbe924e9", "apr_id": "60dfc3c4f521a749a08fa467a6a73636", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n  int t, i;\n  scanf(\"%d\", &t);\n  for (i = 0; i < t; i++)\n  {\n    int l, r, a = -1, b = -1, min, max, lcm, x,j;\n    scanf(\"%d%d\", &l, &r);\n    if((l*2)>r)\n    {\n      goto end;\n    }\n    lcm=r+1;\n    min = l;\n    max = l+1;\n    while (min < r)\n    {\n      while (max <= r)\n      {\n        x = max;\n        j=1;\n        while (x<=r)\n        {\n          if (x % max == 0 && x % min == 0)\n          {\n             lcm=x;\n          }\n          if(lcm>=l&&lcm<=r)\n          {\n              break;\n          }\n          j++;\n          x*=j;\n        }\n        if (lcm != r+1)\n        {\n          a = min;\n          b = max;\n          break;\n        }\n        else\n        {\n          max++;\n        }\n      }\n      if (a != -1 && b != -1)\n      {\n        break;\n      }\n      else\n      {\n        min++;\n        max = min + 1;\n      }\n    }\n    end:\n    printf(\"%d %d\", a, b);\n    printf(\"\\n\");\n  }\n  return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n  int t, i;\n  scanf(\"%d\", &t);\n  for (i = 0; i < t; i++)\n  {\n    int l, r, a = -1, b = -1, min, max, lcm, x, j, div;\n    scanf(\"%d%d\", &l, &r);\n    div = r / l;\n    if (div == 1)\n    {\n      goto end;\n    }\n    else\n    {\n      a=l;\n      b=div*l;\n    }\n    lcm = r + 1;\n    min = l;\n    max = l + 1;\n    while (min < r && a == -1)\n    {\n      while (max <= r&&b==-1)\n      {\n        x = max;\n        j = 1;\n        while (x <= r)\n        {\n          if (x % max == 0 && x % min == 0)\n          {\n            lcm = x;\n          }\n          if (lcm >= l && lcm <= r)\n          {\n            break;\n          }\n          j++;\n          x *= j;\n        }\n        if (lcm != r + 1)\n        {\n          a = min;\n          b = max;\n          break;\n        }\n        else\n        {\n          max++;\n        }\n      }\n      if (a != -1 && b != -1)\n      {\n        break;\n      }\n      else\n      {\n        min++;\n        max = min + 1;\n      }\n    }\n  end:\n    printf(\"%d %d\", a, b);\n    printf(\"\\n\");\n  }\n  return 0;\n}"}
{"similarity_score": 0.9979296066252588, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e9c3bf90b70b85546b944a9291977c6e", "bug_code_uid": "d2a22bac3cf22ff17240a3969ab687d1", "src_uid": "9ad07b42358e7f7cfa15ea382495a8a1", "apr_id": "3382c7ce0116d5456203262d16990042", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h> \n\nmain (){\n\tint n,k,i,j,num;\n\tj = 0;\n\tscanf(\"%d %d\", &n, &k);\n\tfor (i = 1; j <= k ;++i){\n\t\tj += i;\n\t};\n\t--i;\n\tj -= i;\n\tnum = k - j;\t\n\tfor (i = 1; i != (num + 1) ;++i){\n\t\tscanf(\"%d\", &j);\n\t};\n\tprintf(\"%d\",j);\n\treturn (0);\n}\n", "fixed": "#include <stdio.h> \n\nmain (){\n\tint n,k,i,j,num;\n\tj = 0;\n\tscanf(\"%d %d\", &n, &k);\n\tfor (i = 1; j < k ;++i){\n\t\tj += i;\n\t};\n\t--i;\n\tj -= i;\n\tnum = k - j;\t\n\tfor (i = 1; i != (num + 1) ;++i){\n\t\tscanf(\"%d\", &j);\n\t};\n\tprintf(\"%d\",j);\n\treturn (0);\n}\n"}
{"similarity_score": 0.22842639593908629, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "2df1c519bd85c47e533de4b3b61ed689", "bug_code_uid": "9e6402c5104a538f22f221aafe8eb4a1", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "1afa9f0dc33e4022dc25822f48674403", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,i,a,b[105] = { 0 },s=0;\n    scanf(\"%d%d\",&n,&k);\n    while(n--)\n    {\n        scanf(\"%d\",&a);\n        b[ a ]++;\n    }\n    for(i=1;i<=100;i++)\n    {\n        while(b[ i ]--)\n        {\n            if(k==0)\n            {\n                printf(\"%d\\n\",s);\n                return 0;\n            }\n            s = s+i;\n            k--;\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,i,a,b[200005] = { 0 },s=0,j,c=1;\n    scanf(\"%d%d\",&n,&k);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a);\n        s = s+a;\n        b[ i ] = s;\n    }\n    j = b[ k ];\n    for(i=k+1;i<=n;i++)\n    {\n        if(j> b[ i ] - b[ i-k ])\n        {\n            j = b[ i ] - b[ i -k ];\n            c = i-k+1;\n        }\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}\n"}
{"similarity_score": 0.9967213114754099, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "30eddf01ca19f11a6f1409037497e292", "bug_code_uid": "2a9e7ba4afd887b8cf7b0abcd37275d3", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "1369344f95dbe3c0861bbb99c6dcfb38", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n;\n\tscanf (\"%d\",&n);\n\tprintf (\"%d\\n\",n/2);\n\twhile(n>3)\n\t{\n\t\tprintf (\"2\");\n\t\tn-=2;\n\t}\n\tprintf (\"%d\",n);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n;\n\tscanf (\"%d\",&n);\n\tprintf (\"%d\\n\",n/2);\n\twhile(n>3)\n\t{\n\t\tprintf (\"2 \");\n\t\tn-=2;\n\t}\n\tprintf (\"%d\",n);\n\treturn 0;\n}"}
{"similarity_score": 0.9885974914481186, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "64790fef22231f544e08928492a1ffa6", "bug_code_uid": "febfe44ebd04c628da4e8a900292c46f", "src_uid": "08c4d8db40a49184ad26c7d8098a8992", "apr_id": "eb237f53c2ab71ddbfa4aa2c03032962", "difficulty": 1300, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nlong a[100000];\nlong left[50001];\nlong right[50001];\nlong n;\n\nvoid merge (long p, long q, long r)\n{\n\tlong n1 = q - p + 1;\n\tlong n2 = r - q;\n\tlong i, j;\n\tfor (i = 0; i < n1; i++) left[i] = a[p + i];\n\tleft[i] = 1000000001;\n\tfor (j = 0; j < n2; j++) right[j] = a[q + 1 + j];\n\tright[j] = 1000000001;\n\ti = 0;\n\tj = 0;\n\tlong k;\n\tfor (k = p; k <= r; k++) {\n\t\tif (left[i] <= right[j]) {\n\t\t\ta[k] = left[i];\n\t\t\ti++;\n\t\t}\n\t\telse {\n\t\t\ta[k] = right[j];\n\t\t\tj++;\n\t\t}\n\t}\n}\n\n\nvoid merge_sort(long p, long r)\n{\n\tif (p < r) {\n\t\tlong q = (p + r) / 2;\n\t\tmerge_sort(p, q);\n\t\tmerge_sort(q + 1, r);\n\t\tmerge(p, q, r);\n\t}\n}\n\nint main()\n{\n\tlong i, d;\n\tlong long zum;\n\tscanf(\"%ld\", &n);\n\tfor (i = 0; i < n; i++) scanf(\"%ld\", &a[i]);\n\tmerge_sort(0, n - 1);\n\tzum = 0;\n\td = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tif (a[i] >= zum) d++;\n\t\tzum = zum + a[i];\n\t}\n\tprintf(\"%ld\\n\", d);\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nlong a[100000];\nlong left[50001];\nlong right[50001];\nlong n;\n\nvoid merge (long p, long q, long r)\n{\n\tlong n1 = q - p + 1;\n\tlong n2 = r - q;\n\tlong i, j;\n\tfor (i = 0; i < n1; i++) left[i] = a[p + i];\n\tleft[i] = 1000000001;\n\tfor (j = 0; j < n2; j++) right[j] = a[q + 1 + j];\n\tright[j] = 1000000001;\n\ti = 0;\n\tj = 0;\n\tlong k;\n\tfor (k = p; k <= r; k++) {\n\t\tif (left[i] <= right[j]) {\n\t\t\ta[k] = left[i];\n\t\t\ti++;\n\t\t}\n\t\telse {\n\t\t\ta[k] = right[j];\n\t\t\tj++;\n\t\t}\n\t}\n}\n\n\nvoid merge_sort(long p, long r)\n{\n\tif (p < r) {\n\t\tlong q = (p + r) / 2;\n\t\tmerge_sort(p, q);\n\t\tmerge_sort(q + 1, r);\n\t\tmerge(p, q, r);\n\t}\n}\n\nint main()\n{\n\tlong i, d;\n\tlong long zum;\n\tscanf(\"%ld\", &n);\n\tfor (i = 0; i < n; i++) scanf(\"%ld\", &a[i]);\n\tmerge_sort(0, n - 1);\n\tzum = 0;\n\td = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tif (a[i] >= zum) {\n\t\t\td++;\n\t\t\tzum = zum + a[i];\n\t\t}\n\t}\n\tprintf(\"%ld\\n\", d);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.13104325699745548, "equal_cnt": 19, "replace_cnt": 15, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "ded56e99622fdd390daa127a8a2af927", "bug_code_uid": "70c930201153a8459cec78de7a16dd1c", "src_uid": "3969ba3e3eb55a896663d2c5a5bc4a84", "apr_id": "3dced42e83ad8964647b5623fe13902d", "difficulty": 1300, "tags": ["implementation", "sortings", "expression parsing", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main ()\n{\n\tint a[1002],i,j,k,cnt,c;\n\tchar s[1002];\n\tgets(s);\n\tfor (i=0;i<=1000;i++) a[i]=0;\n\tfor (i=0,cnt=0;i<strlen(s);i++) {\n\t\tif(s[i]==',') {\n\t\t\tc=0;\n\t\t\tfor(j=i-1,k=1;j>=i-cnt;j--,k*=10) c+=(s[j]-'0')*k;\n\t\t\ta[c]=1;\n\t\t\tcnt=0;\n\t\t}\n\t\telse cnt++;\n\t}\n\n\tc=0;\n\tfor(j=i-1,k=1;j>=i-cnt;j--,k*=10) c+=(s[j]-'0')*k;\n\ta[c]=1;\n\n\tfor (i=0;i<=1000;i++) {\n\t\tif(a[i]==1&&a[i+1]==0) printf(\"%d,\",i);\n\t\telse if(a[i]==1&&a[i+1]==1){\n\t\t\tj=i,k=i;\n\t\t\tfor (;a[k]==1;k++);\n\t\t\tprintf(\"%d-%d,\",j,k-1);\n\t\t\ti=k;\n\t\t}\n\t}\n\tprintf(\"\\b \\n\");\n\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint compi(const void*a,const void*b)\n{\n    const int*p=a;\n    const int*q=b;\n    return *p-*q;\n}\n\nint main()\n{\n    int i,j,k=1,a[101],b[101],flag=0;\n    scanf (\"%d\",&a[0]);\n    for (j=1;scanf(\",%d\",&a[j]);j++);\n    if (j==1)\n        printf (\"%d\",a[0]);\n    else\n    {\n        qsort(a,j,sizeof(a[0]),compi);\n        b[0]=a[0];\n        for (i=1; i<j; i++)\n            if (a[i]!=a[i-1])\n            {\n                b[k]=a[i];\n                k++;\n            }\n        printf(\"%d\",b[0]);\n        for (i=1; i<k; i++)\n        {\n            if (b[i]-b[i-1]==1)\n            {\n                flag=1;\n                if(i==k-1)\n                    printf (\"-%d\",b[i]);\n                else\n                continue;\n            }\n            else if (flag==0)\n                printf (\",%d\",b[i]);\n            else\n            {\n                printf (\"-%d\",b[i-1]);\n                printf (\",%d\",b[i]);\n            flag=0;\n            }\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6794462193823216, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "e2d7f46d092eb2278daf81f5864cdaad", "bug_code_uid": "821b0c8c2e061f0b296a89a4b51adaed", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "09e8d4d3d1364adcd2a200ae9e9ecd5e", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<string.h>\nint main()\n{\n    int n,i,count=1,max;\n    int ara[100001];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ara[i]);\n    }\n    max=1;\n    for(i=0;i<=(n-1);i++){\n        if(ara[i+1]>=ara[i]){\n            count++;\n        }\n        else{\n            if(count>max){\n                max=count;\n                count=1;\n            }\n            else{\n                  count=1;\n            }\n        }\n    }\n    printf(\"%d\",max);\n    return 0;", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,count=1,max=0;\n    scanf(\"%d\",&n);\n    int ara[n+1];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ara[i]);\n    }\n    if(n==1)\n    {\n         max=1;\n    }\n    for(i=0;i<(n-1);i++){\n        if(ara[i]<=ara[i+1]){\n            count++;\n        }\n        else if(ara[i]>=ara[i+1]){\n                count=1;\n            }\n            if(max<count){\n                max=count;\n            }\n\n    }\n    printf(\"%d\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.9756888168557536, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a9410e7b27f7bd3f09776a8a843e8601", "bug_code_uid": "aac8df1c336f4f16fcb3110e46b1ec83", "src_uid": "422cbf106fac3216d58bdc8411c0bf9f", "apr_id": "e29d4aa4f2dfb055e25a83fc09e901ed", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint dstair[3003];\n\nint cmp ( const void *a , const void *b )\n{\nreturn *(int *)a - *(int *)b;\n}\n\nint check(int x,int y,int z)\n{\n    if (y-x==1 && z-y==1 ) return 1;\n    else return 0;\n}\n\n\nint main()\n{\n    int i,n,m,flag=0;\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<m;i++)\n        scanf(\"%d\",&dstair[i]);\n    qsort(dstair,m,sizeof(dstair[0]),cmp);\n    for(i=0;i<m-2;i++)\n        {\n            flag=check(i,i+1,i+2);\n            if(flag) break;\n        }\n    if(dstair[0]==1||dstair[m-1]==n) flag=1;\n    if (flag) printf(\"NO\");\n    else printf(\"YES\");\n    return 0;       \n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint dstair[3003];\n\nint cmp ( const void *a , const void *b )\n{\nreturn *(int *)a - *(int *)b;\n}\n\nint check(int x,int y,int z)\n{\n    if (y-x==1 && z-y==1 ) return 1;\n    else return 0;\n}\n\n\nint main()\n{\n    int i,n,m,flag=0;\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<m;i++)\n        scanf(\"%d\",&dstair[i]);\n    qsort(dstair,m,sizeof(dstair[0]),cmp);\n    for(i=0;i<m-2;i++)\n        {\n            flag=check(dstair[i],dstair[i+1],dstair[i+2]);\n            if(flag) break;\n        }\n    if(dstair[0]==1||dstair[m-1]==n) flag=1;\n    if (flag) printf(\"NO\");\n    else printf(\"YES\");\n    return 0;       \n}"}
{"similarity_score": 0.7544483985765125, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "fe1dd832e650f15e6867304254df4500", "bug_code_uid": "9db03655e9a763b4237c226c1e817a1f", "src_uid": "0318d4d5ea3425bf6506edeb1026f597", "apr_id": "a70342e981f1233ca78404ed2a6d7e85", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n    int n,m,i;\n    int k,sum,t;\n    int a[10001];\n    scanf(\"%d%d\",&n,&m);\n\tfor (i = 1;i <= n;i++){\n\tscanf(\"%d\",&t);\n\ta[t]=1;\n\t}\t\n    k= 0;\n    sum = m;\n    for (i = 1;i <= 1000000000;i++){\n       if (a[i])\n        continue;\n    \n        if (sum < i)\n            break;\n        sum-=i;\n        k++;\n    }\n    sum = m;\n    printf(\"%d\\n\",k);\n    for (int i = 1;i <= 1000000000;i++){\n        if (a[i])\n            continue;\n\n        if (sum< i)\n            break;\n       sum-=i;\n        printf(\"%d \",i);\n    }\n}", "fixed": "#include<stdio.h>\nint a[1000001];\nint main(){\n    int n,m,i;\n    int k,sum,t;\n    \n    scanf(\"%d%d\",&n,&m);\n\tfor (i = 1;i <= n;i++){\n\tscanf(\"%d\",&t);\n\tif(t<1000001)\n\ta[t]=1;\n\t}\t\n    k= 0;\n    sum = m;\n    for (i = 1;i <= 1000000000;i++){\n       if (a[i])\n        continue;\n    \n        if (sum < i)\n            break;\n        sum-=i;\n        k++;\n    }\n    sum = m;\n    printf(\"%d\\n\",k);\n    for (int i = 1;i <= 1000000000;i++){\n        if (a[i])\n            continue;\n\n        if (sum< i)\n            break;\n       sum-=i;\n        printf(\"%d \",i);\n    }\n}\n"}
{"similarity_score": 0.9843400447427293, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "82c3cf81e62ab41d362a3589b0003392", "bug_code_uid": "0fd6dcad0f47a2193602cd3c43f6b90c", "src_uid": "667e8938b964d7a24500003f6b89717b", "apr_id": "f558dd193810c5a8248797a88c72d880", "difficulty": 1400, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nunsigned long long int max(unsigned long long int a,unsigned long long int b){\n    if(a>b){\n        return a;\n    }\n    return b;\n}\nint main()\n{\n unsigned   long long int i,j,test,k,m,flag=0,a[100000]={0},b[10000]={0},n;\n    scanf(\"%llu\",&n);\n    \n    for(i=0;i<n;i++){\n        scanf(\"%llu\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        scanf(\"%llu\",&b[i]);\n    }\n    a[1]+=b[0];\n    b[1]+=a[0];\n    for(i=2;i<n;i++){\n        a[i]+=max(b[i-1],b[i-2]);\n        b[i]+=max(a[i-1],a[i-2]);\n      //  printf(\"%lld %lld\\n\",a[i],b[i]);\n    }\n    if(a[n-1]>b[n-1]){\n        printf(\"%llu\",a[n-1]);\n    }else{\n        printf(\"%llu\",b[n-1]);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nunsigned long long int max(unsigned long long int a,unsigned long long int b){\n    if(a>b){\n        return a;\n    }\n    return b;\n}\nint main()\n{\n unsigned   long long int i,j,test,k,m,flag=0,a[1000000]={0},b[1000000]={0},n;\n    scanf(\"%llu\",&n);\n    \n    for(i=0;i<n;i++){\n        scanf(\"%llu\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        scanf(\"%llu\",&b[i]);\n    }\n    a[1]+=b[0];\n    b[1]+=a[0];\n    for(i=2;i<n;i++){\n        a[i]+=max(b[i-1],b[i-2]);\n        b[i]+=max(a[i-1],a[i-2]);\n      //  printf(\"%lld %lld\\n\",a[i],b[i]);\n    }\n    if(a[n-1]>b[n-1]){\n        printf(\"%llu\",a[n-1]);\n    }else{\n        printf(\"%llu\",b[n-1]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9974874371859297, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "aae617df533213e8c7392515fdbc5c89", "bug_code_uid": "ecfc60f4f17aa5f3b253d3fcb3621247", "src_uid": "4553b327d7b9f090641590d6492c2c41", "apr_id": "1d3fd60431c37d7317d5f03c3213713a", "difficulty": 800, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long n,i,l,sum=1,max=0;\n    scanf(\"%I64d\",&n);\n    long long a[n+1];\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a[i]);\n\n        if (!i) continue;\n        else if (a[i] > a[i-1]){\n            sum++;\n        }\n        else{\n            sum = 1;\n        }\n        if(sum > max){\n            max = sum;\n        }\n    }\n    printf(\"%I64d\",max);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long n,i,l,sum=1,max=1;\n    scanf(\"%I64d\",&n);\n    long long a[n+1];\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a[i]);\n\n        if (!i) continue;\n        else if (a[i] > a[i-1]){\n            sum++;\n        }\n        else{\n            sum = 1;\n        }\n        if(sum > max){\n            max = sum;\n        }\n    }\n    printf(\"%I64d\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.9965635738831615, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "507f95ae9fec53ce65261ff43faf12d7", "bug_code_uid": "84a7e2df868d6eb45995170a3756cc50", "src_uid": "fa253aabcccd487d09142ea882abbc1b", "apr_id": "804f0d5a2f3044a1c6df3f609d88053b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint pu(int b,int c)\n{\t\n\tchar p='a';\n\tint s=0;\n\twhile(b)\n\t{\n\t\tprintf(\"%c\",p);\n\t\tp++;\n\t\tb=b-1;\n\t\ts=s+1;\n\t\tif(s==c)\n\t\t{\n\t\t\ts=0;\n\t\t\tp='a';\n\t\t}\n\t}\nreturn 0;\n}\n\t\nint main()\n{\n\tint t,b,c;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%d\",&b,&c);\n\t\tint oo=pu(b,c);\n\t\tprintf(\"\\n\");\n\t}", "fixed": "#include<stdio.h>\nint pu(int b,int c)\n{\t\n\tchar p='a';\n\tint s=0;\n\twhile(b)\n\t{\n\t\tprintf(\"%c\",p);\n\t\tp++;\n\t\tb=b-1;\n\t\ts=s+1;\n\t\tif(s==c)\n\t\t{\n\t\t\ts=0;\n\t\t\tp='a';\n\t\t}\n\t}\nreturn 0;\n}\n\t\nint main()\n{\n\tint t,b,c;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%d\",&b,&c);\n\t\tint oo=pu(b,c);\n\t\tprintf(\"\\n\");\n\t}\n}"}
{"similarity_score": 0.6035829122645843, "equal_cnt": 21, "replace_cnt": 13, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "688f924d6bc4b956c14cc9b731df5e6f", "bug_code_uid": "271ee942ee105ebdbd98c0ae2948ee8f", "src_uid": "d5ead5b6be04cd9389a70e9e420039a6", "apr_id": "a017205bc2d79056716976f085afcb4b", "difficulty": 1400, "tags": ["data structures", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\nint sai(const void* a,const void* b)\n{\n\treturn *(int*)a-*(int*)b;\n}\ntypedef struct node\n{\n\tint p;\n\tint a;\n\tint ind;\n\tint b;\n\tint f;\n}node;\nnode c[200001];\nint main( )\n{\n\tint i,j,v=0,d=0,n,m,g[200001],h[200001],z=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&c[i].p);\n\t\tc[i].ind=i;\n\t\th[i]=0;\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&c[i].a);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&c[i].b);\n\t}\n\tscanf(\"%d\",&m);\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&g[i]);\n\t}\n\tqsort(c,n,sizeof(node),sai);\n\tfor(i=0;i<m;i++)\n\t{\n\t\tz=0;\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif(((g[i]==c[j].a) || (g[i]==c[j].b)) && h[c[j].ind]==0 && d<n)\n\t\t\t{\n\t\t\t\td+=1;\n\t\t\t\tprintf(\"%d \",c[j].p);\n\t\t\t\th[c[j].ind]=1;\n\t\t\t\tz=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(z==0)\n\t\t{\n\t\t\tprintf(\"-1 \");\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\nint sai(const void* a,const void* b)\n{\n\treturn *(int*)a-*(int*)b;\n}\ntypedef struct node\n{\n\tint p;\n\tint a;\n\tint b;\n}node;\nnode c[200001];\nint main( )\n{\n\tint i,j,v=0,count=0,n,m,g[200001],x=0,y=0,z=0,f=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&c[i].p);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&c[i].a);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&c[i].b);\n\t}\n\tscanf(\"%d\",&m);\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&g[i]);\n\t}\n\tqsort(c,n,sizeof(node),sai);\n\tfor(i=0;i<m;i++)\n\t{\n\t\tf=0;\n\t\tif(count>=n)\n\t\t{\n\t\t\tprintf(\"-1 \");\n\t\t}\n\t\telse if(g[i]==1)\n\t\t{\n\t\t\twhile(x<n)\n\t\t\t{\n\t\t\t\tif(c[x].a==1 || c[x].b==1)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d \",c[x].p);\n\t\t\t\t\tc[x].a=0;\n\t\t\t\t\tc[x].b=0;\n\t\t\t\t\tcount+=1;\n\t\t\t\t\tf=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tx++;\n\t\t\t}\n\t\t\tif(f==0)\n\t\t\t{\n\t\t\t\tprintf(\"-1 \");\n\t\t\t}\n\t\t}\n\t\telse if(g[i]==2)\n\t\t{\n\t\t\twhile(y<n)\n\t\t\t{\n\t\t\t\tif(c[y].a==2 || c[y].b==2)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d \",c[y].p);\n\t\t\t\t\tc[y].a=0;\n\t\t\t\t\tc[y].b=0;\n\t\t\t\t\tcount+=1;\n\t\t\t\t\tf=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t\tif(f==0)\n\t\t\t{\n\t\t\t\tprintf(\"-1 \");\n\t\t\t}\n\t\t}\n\t\telse if(g[i]==3)\n\t\t{\n\t\t\twhile(z<n)\n\t\t\t{\n\t\t\t\tif(c[z].a==3 || c[z].b==3)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d \",c[z].p);\n\t\t\t\t\tc[z].a=0;\n\t\t\t\t\tc[z].b=0;\n\t\t\t\t\tcount+=1;\n\t\t\t\t\tf=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tz++;\n\t\t\t}\n\t\t\tif(f==0)\n\t\t\t{\n\t\t\t\tprintf(\"-1 \");\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.93202416918429, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "3aa9d0c0f025307463bfbd8910a09f2f", "bug_code_uid": "de7fe0382afbee3f5c60d6cf697687d5", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "811bcfda101e48feab8fb42aa0128f8f", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n    int hm, sorb = 0, cash = 1, flag = 1;\n    scanf(\"%d\", &hm);\n    int bef_m, bef_s;\n    scanf(\"%d %d\", &bef_m, &bef_s);\n\n    for (int i = 0; i < hm-1; i++) {\n        int m,s;\n        scanf(\"%d %d\", &m, &s);\n        if (bef_m == m && bef_s == s) {\n            cash += 1;\n        } else {\n            if (cash > sorb) {\n                flag = 0;\n                sorb = cash;\n            }\n            cash = 1;\n        }\n\n        bef_m = m;\n        bef_s = s;\n    }\n    if (flag == 0) {\n        printf(\"%d\", sorb);\n    } else {\n        printf(\"%d\", cash);\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n    int hm, sorb = 0, cash = 1, flag = 1;\n    scanf(\"%d\", &hm);\n    int bef_m, bef_s;\n    scanf(\"%d %d\", &bef_m, &bef_s);\n\n    for (int i = 0; i < hm-1; i++) {\n        int m,s;\n        scanf(\"%d %d\", &m, &s);\n        if (bef_m == m && bef_s == s) {\n            cash += 1;\n        } else {\n            if (cash > sorb) {\n                flag = 0;\n                sorb = cash;\n            }\n            cash = 1;\n        }\n\n        bef_m = m;\n        bef_s = s;\n    }\n    if (flag == 0) {\n        if (cash > sorb) {\n            printf(\"%d\", cash);\n        } else {\n            printf(\"%d\", sorb);\n        }\n    } else {\n        printf(\"%d\", cash);\n    }\n}\n"}
{"similarity_score": 0.9978213507625272, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a99334b799998badbf6ba516a2c43556", "bug_code_uid": "aa73b660fce47caad3c0f133a04464f8", "src_uid": "43996d7e052aa628a46d03086f9c5436", "apr_id": "a9bff6a24d4c60045a13a0b2e0d238a8", "difficulty": 1000, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int n;\n\n    while (t--)\n    {\n        scanf(\"%d\",&n);\n        if (n==1)\n            printf(\"-1\\n\");\n        else if (n>1)\n        {\n            printf(\"2\");\n            for (int i=1;i<n;i++)\n            {\n                if (i%2==1)\n                    printf(\"3\");\n                else\n                    printf(\"1\");\n            }\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int n;\n\n    while (t--)\n    {\n        scanf(\"%d\",&n);\n        if (n==1)\n            printf(\"-1\\n\");\n        else if (n>1)\n        {\n            printf(\"2\");\n            for (int i=1;i<n;i++)\n            {\n                if (i%2==1)\n                    printf(\"3\");\n                else\n                    printf(\"9\");\n            }\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9750479846449136, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "48c8ade03156063079d7ba564a3a68d4", "bug_code_uid": "d23dab84adfc9c09c97c53479bc0c508", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "be1f52100ad946765ed03bc3f43a3f79", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int str[100000],min,new;\n   long long int count=0,a,b;\n   scanf(\"%I64d\",&a);\n   for(b=0;b<a;b++)\n   {\n       scanf(\"%I64d\",&str[b]);\n\n   }\n    min=str[0];\n   for(b=1;b<a;b++)\n   {\n        if(str[b]<min){\n\n            min=str[b];\n            new=b;\n        }\n\n   }\n\n    for(b=0;b<a;b++)\n    {\n        if(min==str[b])\n        {\n            count++;\n        }\n    }\n  \n    if(count>1)\n    {\n        printf(\"Still Rozdil\");\n    }\n    else printf(\"%d\",new+1);\n\n            temp=str[b]\n\n\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int str[100000],min,new;\n   long long int count=0,a,b;\n   scanf(\"%I64d\",&a);\n   for(b=0;b<a;b++)\n   {\n       scanf(\"%I64d\",&str[b]);\n\n   }\n    min=str[0];\n   for(b=1;b<a;b++)\n   {\n        if(str[b]<min){\n\n            min=str[b];\n            new=b;\n        }\n\n   }\n\n    for(b=0;b<a;b++)\n    {\n        if(min==str[b])\n        {\n            count++;\n        }\n    }\n\n    if(count>1)\n    {\n        printf(\"Still Rozdil\");\n    }\n    else printf(\"%d\",new+1);\n\n\n\n\n    return 0;\n\n}"}
{"similarity_score": 0.9993527508090615, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "38bbe01469308a64e54fbf890921ba77", "bug_code_uid": "f9f0cfe50f0c27209b170bd4d93b1ec4", "src_uid": "b1eebb3928925b84a95b9f1e5a31e4f3", "apr_id": "00047d27052fba6f59928f60d46e8370", "difficulty": 1800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <ctype.h>\n\nint main() {\n\tint i, j, l, period, b;\n\tstatic char s[1000001];\n\n\tscanf(\"%s\", s);\n\tperiod = l = strlen(s);\n\ti = 0;\n\twhile (i < l && s[i] != '.')\n\t\ti++;\n\tif (i == l) {\n\t\tb = 0;\n\t\tj = l;\n\t} else if (i == l - 1) {\n\t\tb = 0;\n\t\tj = l - 1;\n\t} else {\n\t\tb = i - (l - 1);\n\t\tj = l - 1;\n\t\tfor (i++; i < l; i++) \n\t\t\ts[i - 1] = s[i];\n\t}\n\ti = 0;\n\twhile (i < j && s[i] == '0')\n\t\ti++;\n\twhile (j > i && s[j - 1] == '0') {\n\t\tj--;\n\t\tb++;\n\t}\n\tif (j - i == 0)\n\t\tprintf(\"0\");\n\telse if (j - i == 1) {\n\t\tprintf(\"%c\", s[i]);\n\t\tif (b != 0)\n\t\t\tprintf(\"E%d\", b);\n\t} else {\n\t\tint k;\n\n\t\tb += j - i - 1;\n\t\tprintf(\"%c.\", s[i]);\n\t\tfor (k = i + 1; k <= j; k++)\n\t\t\tprintf(\"%c\", s[k]);\n\t\tif (b != 0)\n\t\t\tprintf(\"E%d\", b);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <ctype.h>\n\nint main() {\n\tint i, j, l, period, b;\n\tstatic char s[1000001];\n\n\tscanf(\"%s\", s);\n\tperiod = l = strlen(s);\n\ti = 0;\n\twhile (i < l && s[i] != '.')\n\t\ti++;\n\tif (i == l) {\n\t\tb = 0;\n\t\tj = l;\n\t} else if (i == l - 1) {\n\t\tb = 0;\n\t\tj = l - 1;\n\t} else {\n\t\tb = i - (l - 1);\n\t\tj = l - 1;\n\t\tfor (i++; i < l; i++) \n\t\t\ts[i - 1] = s[i];\n\t}\n\ti = 0;\n\twhile (i < j && s[i] == '0')\n\t\ti++;\n\twhile (j > i && s[j - 1] == '0') {\n\t\tj--;\n\t\tb++;\n\t}\n\tif (j - i == 0)\n\t\tprintf(\"0\");\n\telse if (j - i == 1) {\n\t\tprintf(\"%c\", s[i]);\n\t\tif (b != 0)\n\t\t\tprintf(\"E%d\", b);\n\t} else {\n\t\tint k;\n\n\t\tb += j - i - 1;\n\t\tprintf(\"%c.\", s[i]);\n\t\tfor (k = i + 1; k < j; k++)\n\t\t\tprintf(\"%c\", s[k]);\n\t\tif (b != 0)\n\t\t\tprintf(\"E%d\", b);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.5082644628099173, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f317ae0abd5efeffd59904ee679967de", "bug_code_uid": "b53c1f07f9999b4caf6e6f611f5bc9bf", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "f1a63e71a755fb1aeb4ab3cd54fa0453", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    double y;\n    int x=0; a,n,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n\n         x=x+a;\n     }\n     y=(double)x/n;\n\n     printf(\"%.12lf\",y);\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    double b,x=0.0;\n    int i,n,a[101];\n    scanf(\"%d\",&n);\n    b=n*1.0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n\n     for(i=0;i<n;i++)\n     {\n         x=x+a[i];\n     }\n     x=x/b;\n     printf(\"%.12f\\n\",x);\n     return 0;\n\n}"}
{"similarity_score": 0.7849973586899102, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "66df6a227198ad4bc913d62c9fbc464a", "bug_code_uid": "18c906c61d5321b9dae15dc97b067556", "src_uid": "bef323e7c8651cc78c49db38e49ba53d", "apr_id": "a0e5933c41ef059cb68d75b54f2fc7ff", "difficulty": 1500, "tags": ["data structures", "constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "    #include <stdio.h>\n    #include <stdbool.h>\n    int f[200005],mark[200005],unused[200005];\n    int n;\n\tbool judge(){\n    \tint i;\n    \tfor(i=1;i<=n;i++){\n    \t\tif(f[i]==i)\n    \t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\tint main()\n    {\n        int i,j,left,right;\n        scanf(\"%d\",&n);\n        for(i=1;i<=n;i++){\n        \tscanf(\"%d\",&f[i]);\n        \tmark[f[i]]++;\n\t\t}\n\t\tint ans=0;\n\t\tfor(i=1;i<=n;i++){\n\t\t\tif(mark[i]==0){\n\t\t\t\tans++;\n\t\t\t\tunused[ans]=i;\n\t\t\t}\n\t\t}\t\n\t\tleft=1;\n\t\tright=ans;\n\t\tfor(i=1;i<=n;i++){\n\t\t\tif(f[i]==0){\n\t\t\t\tif(i!=unused[right]){\n\t\t\t\t\tf[i]=unused[right];\n\t\t\t\t\tright--;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tf[i]=unused[left];\n\t\t\t\t\tleft++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!judge()){\n\t\t\tfor(i=1;i<=n;i++){\n\t\t\t\tif(f[i]==0){\n\t\t\t\t\tif(i!=unused[left]){\n\t\t\t\t\t\tf[i]=unused[left];\n\t\t\t\t\t\tleft++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tf[i]=unused[right];\n\t\t\t\t\t\tright--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(i=1;i<=n;i++)\n\t\t\tprintf(\"%d \",f[i]);\n    }", "fixed": "    #include <stdio.h>\n    #include <stdbool.h>\n    int f[200005],mark[200005],unused[200005],b[200005];\n    int n;\n\tbool judge(){\n    \tint i;\n    \tfor(i=1;i<=n;i++){\n    \t\tif(b[i]==i)\n    \t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\tint main()\n    {\n        int i,j,left,right;\n        scanf(\"%d\",&n);\n        for(i=1;i<=n;i++){\n        \tscanf(\"%d\",&f[i]);\n        \tmark[f[i]]++;\n\t\t}\n\t\tint ans=0;\n\t\tfor(i=1;i<=n;i++){\n\t\t\tif(mark[i]==0){\n\t\t\t\tans++;\n\t\t\t\tunused[ans]=i;\n\t\t\t}\n\t\t}\t\n\t\tleft=1;\n\t\tright=ans;\n\t\tfor(i=1;i<=n;i++){\n\t\t\tif(f[i]!=0)\n\t\t\t\tb[i]=f[i];\n\t\t\telse{\n\t\t\t\tif(i!=unused[right]){\n\t\t\t\t\tb[i]=unused[right];\n\t\t\t\t\tright--;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tb[i]=unused[left];\n\t\t\t\t\tleft++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!judge()){\n\t\t\tleft=1;\n\t\t\tright=ans;\n\t\t\tfor(i=1;i<=n;i++){\n\t\t\t\tif(f[i]!=0)\n\t\t\t\t\tb[i]=f[i];\n\t\t\t\telse{\n\t\t\t\t\tif(i!=unused[left]){\n\t\t\t\t\t\tb[i]=unused[left];\n\t\t\t\t\t\tleft++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tb[i]=unused[right];\n\t\t\t\t\t\tright--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(i=1;i<=n;i++)\n\t\t\tprintf(\"%d \",b[i]);\n    }"}
{"similarity_score": 0.9207843137254902, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "1523a2481227c3ae1b3cc88c578d5831", "bug_code_uid": "42979c96a3dbcaea7fd927401d0d5f12", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "c0eabf25b2bc3730b0c60f817474fc57", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n#include <time.h>\n#include <limits.h>\n\n#define PI 3.141592653589793\n#define max(a,b) (a < b) ? (b) : (a)\n#define min(a,b) (a > b) ? (b) : (a)\n#define FOR(i,a,b) for(i = a ; i <= b ; i++)\n#define ROF(i,a,b) for(i = a ; i >= b ; i--)\n#define RAD(x) ((x)*PI)/180\n#define y1 y_1\n#define ll long long\n#define endl printf(\"\\n\")\n#define MAX 100005\n\nint n, i, h[MAX], t[MAX];\n\nint main () {\n\tscanf(\"%d\",&n);\n\tFOR(i, 1, n)\n\t\tscanf(\"%d\",&h[i]);\n\tROF(i, n, 1)\n\t\tt[i] = max(t[i + 1], h[i]);\n\tFOR(i, 1, n)\n\t\tprintf(\"%d \",t[i] - h[i] + (t[i] - h[i] != 0));\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n#include <time.h>\n#include <limits.h>\n\n#define PI 3.141592653589793\n#define max(a,b) (a < b) ? (b) : (a)\n#define min(a,b) (a > b) ? (b) : (a)\n#define FOR(i,a,b) for(i = a ; i <= b ; i++)\n#define ROF(i,a,b) for(i = a ; i >= b ; i--)\n#define RAD(x) ((x)*PI)/180\n#define y1 y_1\n#define ll long long\n#define endl printf(\"\\n\")\n#define MAX 100005\n\nint n, i, mx, h[MAX], t[MAX];\n\nint main () {\n\tscanf(\"%d\",&n);\n\tFOR(i, 1, n)\n\t\tscanf(\"%d\",&h[i]);\n\tROF(i, n, 1)\n\t\tif(h[i] > mx)\n\t\t\tmx = h[i];\n\t\telse\n\t\t\tt[i] = mx - h[i] + 1;\n\tFOR(i, 1, n)\n\t\t\tprintf(\"%d \",t[i]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8925081433224755, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "a23631b8e34ddbf6eb366355a4bd5bf9", "bug_code_uid": "119c63e6e3f561382aefcea5cd09bd01", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "29fa29dee3e62b33166a8658463f9632", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n     int n; scanf(\"%d\",&n);\n     int d,s=0,i=0;\n     char a[n],b[n];\n     gets(a); gets(b);\n     while(i<n)\n     {\n          d=abs(a[i]-b[i]);\n          if(d>=5)\n          s+=(10-d);\n          else\n          s+=d;\n          i++;\n          \n     }\n     printf(\"%d\",s);\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n     int n; scanf(\"%d\\n\",&n);\n     char a[n],b[n];\n\t gets(a); gets(b);\n\t  int i=0,s=0;\n     while(i<n)\n     {\n          int t=abs(a[i]-b[i]);\n          if(t>=5)\n          s+=(10-t);\n          else\n          s+=t;\n          i++;\n     }\n     printf(\"%d\",s);\n}"}
{"similarity_score": 0.6182669789227166, "equal_cnt": 16, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "a9915613e128b49333568fd4aaff0fa9", "bug_code_uid": "751499e78ddfe14f0c5ae530a9c3fb97", "src_uid": "4c0b0cb8a11cb1fd40fef47616987029", "apr_id": "ba490e2c7bf6e0ea4a32bcb19b5c7b95", "difficulty": 800, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n  int n;\r\n  char a[n];\r\n  scanf(\"%d\",&n);\r\n  for(int i=0;i<n;i++){\r\n        scanf(\"%s\",&a[i]);\r\n  }\r\n   for(int i=0;i<n;i++){\r\n         if(a[i]==\"YES\"||a[i]==\"yes\"||a[i]==\"yES\"||a[i]==\"Yes\"||a[i]==\"YeS\"||a[i]==\"yEs\"||a[i]==\"YEs\"||a[i]==\"yeS\"){\r\n               printf(\"YES\");\r\n         }\r\n       else{\r\n             printf(\"NO\");\r\n       }\r\n  }\r\n  \r\n  \r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n  int n;\r\n    \r\n  scanf(\"%d\",&n);\r\n\r\n  for(int i=0;i<n;i++){\r\n          char a[20];\r\n        \r\n        scanf(\"%s\",&a);\r\n        \r\n        if(strcmp(a,\"YES\")==0||strcmp(a,\"yes\")==0||strcmp(a,\"yES\")==0||strcmp(a,\"Yes\")==0||strcmp(a,\"YeS\")==0||strcmp(a,\"yEs\")==0||strcmp(a,\"YEs\")==0||strcmp(a,\"yeS\")==0){\r\n               printf(\"YES\\n\");\r\n         }\r\n       else{\r\n             printf(\"NO\\n\");\r\n       }\r\n  }\r\n  \r\n  \r\n}"}
{"similarity_score": 0.9973509933774835, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "637c0de58cc88b7a9c7a0ce7c3ea0614", "bug_code_uid": "d51d848cc25fb9e4569986142ca105ac", "src_uid": "edd556d60de89587f1b8daa893538530", "apr_id": "4824fc55fd9f7027df92be5792c3c434", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nchar a[3001][11];\nchar c[11];\n\nint main()\n{\n    int n, m, i, j, ri;\n    \n    scanf(\"%d %d\", &n, &m);\n    \n    for(i=0; i<m*2; i = i+2){\n        scanf(\"%s %s\", a[i], a[i+1]);\n    }\n    \n    for(i=0; i<n; i++){\n        scanf(\"%s\", c);\n        \n        for(j=0; j<m*2; j++){\n            if(strcmp(a[j], c) == 0){\n                if(j%2 == 1){\n                    if(strlen(a[j-1]) > strlen(a[j])) printf(\"%s \", a[j]);\n                    else printf(\"%s \", a[j-1]);\n                }\n                else{\n                    if(strlen(a[j]) > strlen(a[j+1])) printf(\"%s \", a[j+1]);\n                    else printf(\"%s \", a[j]);\n                }\n                break;\n            }\n        }\n    }\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nchar a[6002][11];\nchar c[11];\n\nint main()\n{\n    int n, m, i, j, ri;\n    \n    scanf(\"%d %d\", &n, &m);\n    \n    for(i=0; i<m*2; i = i+2){\n        scanf(\"%s %s\", a[i], a[i+1]);\n    }\n    \n    for(i=0; i<n; i++){\n        scanf(\"%s\", c);\n        \n        for(j=0; j<m*2; j++){\n            if(strcmp(a[j], c) == 0){\n                if(j%2 == 1){\n                    if(strlen(a[j-1]) > strlen(a[j])) printf(\"%s \", a[j]);\n                    else printf(\"%s \", a[j-1]);\n                }\n                else{\n                    if(strlen(a[j]) > strlen(a[j+1])) printf(\"%s \", a[j+1]);\n                    else printf(\"%s \", a[j]);\n                }\n                break;\n            }\n        }\n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.9655612244897959, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f3b2819ed0a7ddb2a223c77aa1926ff7", "bug_code_uid": "89b8c04afbcae37a4430df1e30e11c2f", "src_uid": "3b3b2408609082fa5c3a0d55bb65d29a", "apr_id": "b2e9660d3130b239397bb19b32586d91", "difficulty": 900, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define N 100000\n\nlong long my_abs(long long a)\n{\n\tif (a>0)\n\t\treturn a;\n\treturn (-a);\n\n}\n\n// int cmpfunc (const void * a, const void * b) {\n//    return ( *(int*)a - *(int*)b );\n// }\n\n   // qsort(values, 5, sizeof(int), cmpfunc);\nint min(int a, int b)\n{\n\treturn (a < b ? a : b);\n}\n\nint main() {\n\tint n, i;\n\tlong long aa[N];\n\tlong long dp[N][2];\n\tscanf(\"%d\", &n);\n\ti = -1;\n\twhile(++i < n){\n\t\tscanf(\"%lld\", &aa[i]);\n\n\t}\n\n\tdp[0][0] = my_abs(aa[0] - (-1));\n\tdp[0][1] = my_abs(aa[0] - 1);\n\n\ti = 0;\n\twhile(++i < n){\n\t\tdp[i][0] = min(dp[i-1][1] + my_abs (aa[i]- (-1)),dp[i-1][0] + my_abs (aa[i]- (1)) );\n\t\tdp[i][1] = min(dp[i-1][1] + my_abs (aa[i]- (1)),dp[i-1][0] + my_abs (aa[i]- (-1)) );\n\t}\n\n\tprintf(\"%lld\\n\", dp[n-1][1]);\n\n\n\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define N 100000\n\nlong long my_abs(long long a)\n{\n\tif (a>0)\n\t\treturn a;\n\treturn (-a);\n\n}\n\n// int cmpfunc (const void * a, const void * b) {\n//    return ( *(int*)a - *(int*)b );\n// }\n\n   // qsort(values, 5, sizeof(int), cmpfunc);\nlong long min(long long a, long long b)\n{\n\treturn (a < b ? a : b);\n}\n\nint main() {\n\tint n, i;\n\tlong long aa[N];\n\tlong long dp[N][2];\n\tscanf(\"%d\", &n);\n\ti = -1;\n\twhile(++i < n){\n\t\tscanf(\"%lld\", &aa[i]);\n\n\t}\n\n\tdp[0][0] = my_abs(aa[0] - (-1));\n\tdp[0][1] = my_abs(aa[0] - 1);\n\n\ti = 0;\n\twhile(++i < n){\n\t\tdp[i][0] = min(dp[i-1][1] + my_abs (aa[i]- (-1)),dp[i-1][0] + my_abs (aa[i]- (1)) );\n\t\tdp[i][1] = min(dp[i-1][1] + my_abs (aa[i]- (1)),dp[i-1][0] + my_abs (aa[i]- (-1)) );\n\t}\n\n\tprintf(\"%lld\\n\", dp[n-1][1]);\n\n\n\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.7021696252465484, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "0e4fa16b2391872898c4b1cae8b0a90e", "bug_code_uid": "6240aaf70302a11d0137aa44bab378fb", "src_uid": "9374728643a1ddbe2200a4a125beef26", "apr_id": "d452124c2d3a557b64ad593943e1a79b", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[10000],b[10000]={0},j,i,c1=0,c2=0,tot=0,n,rev=0;\n\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(j=0; ;j++){\n        for(i=0;i<n;i++)\n        {\n            if(b[i]==0)\n            {\n                if(c1>=a[i]){\n                    c1++;\n                    c2++;\n                    b[i]=1;\n                if(rev>0 && c2>1){\n                    tot++;\n                    rev=0;\n                }\n            //printf(\"%d %d %d\\n\",a[i],b[i],c1);\n                }\n            }\n        }\n        if(c1==n){\n            break;\n        }\n        else{\n            rev++;\n            tot++;\n            c2=0;\n        }\n    }\n    printf(\"%d\",tot);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a[10000],b[10000]={0},j,i,c1=0,c2=0,tot=0,n;\n\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(j=0; ;j++){\n        if(j%2==0){\n        for(i=0;i<n;i++)\n        {\n            if(b[i]==0)\n            {\n                if(c1>=a[i]){\n                    c1++;\n                    b[i]=1;\n                }\n            }\n        }\n        }\n        else{\n        for(i=n-1;i>=0;i--)\n        {\n            if(b[i]==0)\n            {\n                if(c1>=a[i]){\n                    c1++;\n                    b[i]=1;\n                }\n            }\n        }\n        }\n        if(c1==n){\n            break;\n        }\n        else{\n            tot++;\n            c2=0;\n        }\n    }\n    printf(\"%d\",tot);\nreturn 0;\n}\n"}
{"similarity_score": 0.9679802955665024, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2744b77dba143585573c38840f48d9e5", "bug_code_uid": "d41034452a6a8fb3d32299cf357f1ca8", "src_uid": "3851854541b4bd168f5cb1e8492ed8ef", "apr_id": "98e48aae4e957a0d848fcebc3d5ef901", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint\r\nmain(void)\r\n{\r\n    int n, c, cc = 0, cx = 0;\r\n\r\n    scanf(\"%d\", &n);\r\n\r\n    for(int i = 0; i<n; i++)\r\n    {\r\n        scanf(\"%d\", &c);\r\n\r\n        char s[1000000];\r\n\r\n        scanf(\"%s\", s);\r\n\r\n        int t[128] = {0};\r\n\r\n        for(int j = 0; j<c; j++)\r\n        {\r\n            t[s[j]]++;\r\n        }\r\n\r\n        for(int k = 0; k<128; k++)\r\n        {\r\n            if(t[k]>0)\r\n                cc++;\r\n        }\r\n\r\n        for(int x = 0; x<c; x++)\r\n        {\r\n            if(x!=c-1)\r\n            {\r\n                if(s[x]!= s[x+1])\r\n                cx++;\r\n            }\r\n        }\r\n\r\n        if(cc == cx)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n\r\n        cc = 0;\r\n        cx = 0;\r\n\r\n\r\n\r\n    }\r\n\r\n    return (0);\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint\r\nmain(void)\r\n{\r\n    int n, c, cc = 0, cx = 0;\r\n\r\n    scanf(\"%d\", &n);\r\n\r\n    for(int i = 0; i<n; i++)\r\n    {\r\n        scanf(\"%d\", &c);\r\n\r\n        char s[1000000];\r\n\r\n        scanf(\"%s\", s);\r\n\r\n        int t[128] = {0};\r\n\r\n        for(int j = 0; j<c; j++)\r\n        {\r\n            t[s[j]]++;\r\n        }\r\n\r\n        for(int k = 0; k<128; k++)\r\n        {\r\n            if(t[k]>0)\r\n                cc++;\r\n        }\r\n\r\n        for(int x = 0; x<c; x++)\r\n        {\r\n\r\n                if(s[x]!= s[x+1])\r\n                cx++;\r\n\r\n        }\r\n\r\n        if(cc == cx)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n\r\n        cc = 0;\r\n        cx = 0;\r\n\r\n\r\n\r\n    }\r\n\r\n    return (0);\r\n}\r\n"}
{"similarity_score": 0.912472647702407, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "0bb64b7ef45e37362a7d496ab53b3419", "bug_code_uid": "c2a6b8f88fd444eb19acdfa0322622e7", "src_uid": "8a1ceac1440f7cb406f12d9fc2ca0e20", "apr_id": "b72b5353e208539471871a9e7d8ef2ad", "difficulty": 800, "tags": ["binary search", "constructive algorithms", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,t,max,min,team =0;\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;i++){\r\n        scanf(\"%d%d\",&a,&b);\r\n        if(a>b){\r\n            max =a;\r\n            min= b;\r\n        }else{\r\n            max = b;\r\n            min =a;\r\n        }\r\n        if(max/3>=min){\r\n            team = min;\r\n        }elseif((max+min/4)<=min){\r\n            team = max+min/4;\r\n        }\r\n    }\r\n    \r\n    printf(\"%d\",team);\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,t,max,min,team =0;\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;i++){\r\n        scanf(\"%d%d\",&a,&b);\r\n        if(a>b){\r\n            max =a;\r\n            min= b;\r\n        }else{\r\n            max = b;\r\n            min =a;\r\n        }\r\n        if(max/3>=min){\r\n            team = min;\r\n        }else if(((max+min)/4)<=min){\r\n            team = (max+min)/4;\r\n        }\r\n       \r\n        \r\n        printf(\"%d\\n\",team);\r\n    }\r\n    \r\n    \r\n}"}
{"similarity_score": 0.9688195991091314, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "82002917de65f619292d661a8ba268e2", "bug_code_uid": "b709768014573bc1602b80d3f157d6fc", "src_uid": "d93a0574497b60bb77fb1c1dfe95090f", "apr_id": "c8cadadf1a1312d0aca163260daec154", "difficulty": 1300, "tags": ["constructive algorithms", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,l,i,j,a,b,tem,road[1010];\n    memset(road,0,sizeof(road));\n    scanf(\"%d%d\",&n,&l);\n    while(l--)\n    {\n        scanf(\"%d%d\",&a,&b);\n        road[a]=1;\n        road[b]=1;\n    }\n    for(i=1;i<=n;i++)\n        if(road[i]==0)\n        {\n            tem=i;\n            break;\n        }\n    for(i=1;i<=n;i++)\n        if(i!=tem)\n            printf(\"%d %d\\n\",tem,i);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,l,i,j,a,b,tem,road[1010];\n    memset(road,0,sizeof(road));\n    scanf(\"%d%d\",&n,&l);\n    while(l--)\n    {\n        scanf(\"%d%d\",&a,&b);\n        road[a]=1;\n        road[b]=1;\n    }\n    for(i=1;i<=n;i++)\n        if(road[i]==0)\n        {\n            tem=i;\n            break;\n        }\n        printf(\"%d\\n\",n-1);\n    for(i=1;i<=n;i++)\n        if(i!=tem)\n            printf(\"%d %d\\n\",tem,i);\n    return 0;\n}\n"}
{"similarity_score": 0.9940191387559809, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6f3a188b1d07b1789fface43f118aa0d", "bug_code_uid": "193f1448d63073f033d75e6d15d20740", "src_uid": "03e5f71810b10318fed344878d226a10", "apr_id": "e11b85c412ce2ab8e173fd2aec364c5c", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main(){\r\nint t,b,d,a;\r\nlong int n;\r\nscanf(\"%d\",&t);\r\nfor(int i=0;i<t;i++)\r\n{\r\n    scanf(\"%ld\",&n);\r\n    if(n%2==0)\r\n    {\r\n        printf(\"0\\n\");\r\n    }\r\n    else\r\n    {\r\n    for(a=1;;a++)\r\n    {\r\n        if((int)(n/pow(10,a))==0)\r\n          {\r\n              b=a;\r\n           break;\r\n          }\r\n          else\r\n            continue;\r\n    }\r\n   for(int c=1;c<=b;c++)\r\n    {\r\n        if(((int)(n/pow(10,b-c)))%2==0)\r\n        {\r\n            d=c;\r\n            break;\r\n                }\r\n    }\r\n                if(d==1)\r\n            {\r\n                printf(\"1\\n\");\r\n            }\r\n           else if(d>1&&d<(b-1))\r\n            {\r\n                printf(\"2\\n\");\r\n            }\r\n            else\r\n                {\r\n                    printf(\"-1\\n\");\r\n            }\r\n\r\n    }\r\n}\r\n\r\n return 0;\r\n\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main(){\r\nint t,b,d,a;\r\nlong int n;\r\nscanf(\"%d\",&t);\r\nfor(int i=0;i<t;i++)\r\n{\r\n    scanf(\"%ld\",&n);\r\n    if(n%2==0)\r\n    {\r\n        printf(\"0\\n\");\r\n    }\r\n    else\r\n    {\r\n    for(a=1;;a++)\r\n    {\r\n        if((int)(n/pow(10,a))==0)\r\n          {\r\n              b=a;\r\n           break;\r\n          }\r\n          else\r\n            continue;\r\n    }\r\n   for(int c=1;;c++)\r\n    {\r\n        if(((int)(n/pow(10,b-c)))%2==0)\r\n        {\r\n            d=c;\r\n            break;\r\n                }\r\n    }\r\n                if(d==1)\r\n            {\r\n                printf(\"1\\n\");\r\n            }\r\n           else if(d>1&&d<b)\r\n            {\r\n                printf(\"2\\n\");\r\n            }\r\n            else\r\n                {\r\n                    printf(\"-1\\n\");\r\n            }\r\n\r\n    }\r\n}\r\n\r\n return 0;\r\n\r\n}\r\n"}
{"similarity_score": 0.1484375, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "ee8d97811611e002c1c05e5f28d9e130", "bug_code_uid": "75470ef08ecdac00ef627e82778b3e9a", "src_uid": "84bd49becca69e126606d5a2f764dd91", "apr_id": "f5aed27bb8c6940e7e1fcd2ad830acbd", "difficulty": 1400, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n,a,b,c=0,i;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\tscanf(\"%d%d\",&a,&b);\n\tif(a==b)\n\tc++;}\n\tprintf(\"%d\",c);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint a[101]={0},b[101]={0};\nint main(){\n    int n,i,j,counter=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    scanf(\"%d%d\",&a[i],&b[i]);\n    for(i=0;i<n;i++){\n        for(j=0;j<n;j++){\n            if(b[i]==a[j]&&i!=j){\n            counter++;\n            a[j]=0;}\n        }\n    }\n    counter=n-counter;\n    printf(\"%d\",counter);\n    return 0;\n}"}
{"similarity_score": 0.9983792544570502, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3a5358a44df4128fdd4d2814b71a49cb", "bug_code_uid": "11f0e661158aa392a0f0bbd897cc340b", "src_uid": "168f2a740d21a3a916a9d560fbcffeb9", "apr_id": "e50b3d4d0141316870912741a9897602", "difficulty": 800, "tags": ["brute force", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\t\r\n\tfor(int g=0;g<t;g++)\r\n\t{\r\n\t\tint n,k;\r\n\tscanf(\"%d %d\",&n,&k);\r\n\tint a[n];\r\n\tint b[n];\r\n\tint ans[n];\r\n\t\r\n\tfor(int i=0;i<n;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t}\r\n\tfor(int j=0;j<n;j++)\r\n\t{\r\n\t\tscanf(\"%d\",&b[j]);\r\n\t}\r\n\t\r\n\tfor(int i=0;i<n;i++)\r\n\t{\r\n\t\tfor(int j=i+1;j<n;j++)\r\n\t\t{\r\n\t\t\tif(a[i]>=a[j])\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tint temp=a[i];\r\n\t\t\t\ta[i]=a[j];\r\n\t\t\t\ta[j]=temp;\r\n\t\t\t\tint e=b[i];\r\n\t\t\t\tb[i]=b[j];\r\n\t\t\t\tb[j]=e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tfor(int i=n-1;i>=0;i=i-1)\r\n\t{\r\n\t\tif(k>=a[i])\r\n\t\t{\r\n\t\t\tk=k+b[i];\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\",k);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\t\r\n\tfor(int g=0;g<t;g++)\r\n\t{\r\n\t\tint n,k;\r\n\tscanf(\"%d %d\",&n,&k);\r\n\tint a[n];\r\n\tint b[n];\r\n\tint ans[n];\r\n\t\r\n\tfor(int i=0;i<n;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t}\r\n\tfor(int j=0;j<n;j++)\r\n\t{\r\n\t\tscanf(\"%d\",&b[j]);\r\n\t}\r\n\t\r\n\tfor(int i=0;i<n;i++)\r\n\t{\r\n\t\tfor(int j=i+1;j<n;j++)\r\n\t\t{\r\n\t\t\tif(a[i]>=a[j])\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tint temp=a[i];\r\n\t\t\t\ta[i]=a[j];\r\n\t\t\t\ta[j]=temp;\r\n\t\t\t\tint e=b[i];\r\n\t\t\t\tb[i]=b[j];\r\n\t\t\t\tb[j]=e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tfor(int i=n-1;i>=0;i=i-1)\r\n\t{\r\n\t\tif(k>=a[i])\r\n\t\t{\r\n\t\t\tk=k+b[i];\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\\n\",k);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9975062344139651, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "32e65851a0c093e25c35f2406b8e8333", "bug_code_uid": "223aed2ef094d8d107339597c5ebf60e", "src_uid": "46d734178b3acaddf2ee3706f04d603d", "apr_id": "14b45e39b2be4e283eb0fc90fc8404e5", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint main(){\n  int i=0,t=0,l[3]={0},z=0;\n  char s[500];\n  while(scanf(\"%c\",&s[i])!=EOF){\n    if((s[i]=='a')||(s[i]=='e')||(s[i]=='i')||(s[i]=='o')||(s[i]=='u'))\n        l[z]++;\n    if(s[i]==10)\n      z++;\n    i++;\n  }\n printf(\"%d %d %d\\n\",l[0],l[1],l[2]);\n  if(l[0]==5&&l[1]==7&&l[2]==5)\n    printf(\"YES\");\n  else\n    printf(\"NO\");\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint main(){\n  int i=0,t=0,l[3]={0},z=0;\n  char s[500];\n  while(scanf(\"%c\",&s[i])!=EOF){\n    if((s[i]=='a')||(s[i]=='e')||(s[i]=='i')||(s[i]=='o')||(s[i]=='u'))\n        l[z]++;\n    if(s[i]==10)\n      z++;\n    i++;\n  }\n //printf(\"%d %d %d\\n\",l[0],l[1],l[2]);\n  if(l[0]==5&&l[1]==7&&l[2]==5)\n    printf(\"YES\");\n  else\n    printf(\"NO\");\n  return 0;\n}\n"}
{"similarity_score": 0.5385996409335727, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "d89fdca8f4080ec58dacc87a1560c8f1", "bug_code_uid": "5fc37185733761636bd6a4d7fd17fa8c", "src_uid": "b0b4cadc46f9fd056bf7dc36d1cf51f2", "apr_id": "463fa1ddf4aee584a727841d943ac7e4", "difficulty": 1200, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint prime(int a, int b);\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    long long int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a[i]);\n    }\n    printf(\"%I64d\",a[0]);\n    for(i=0;i<n-1;i++){\n        if(prime(a[i],a[i+1])==1){\n            printf(\" %I64d\",a[i+1]);\n        }else{\n            printf(\" %d %I64d \",1,a[i+1]);\n        }\n    }\n    return 0;\n}\nint prime(int a, int b){\n    if(a==0){\n        return b;\n    }\n    return prime(b%a,a);\n}\n", "fixed": "#include <stdio.h>\nint prime(int a, int b);\nint main(){\n    int n,i,j,cont=0;\n    scanf(\"%d\",&n);\n    long long int a[n],aux[19999]={0};\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a[i]);\n    }\n    aux[0]=a[0];\n    j=1;\n    for(i=0;i<n-1;i++){\n        if(prime(a[i],a[i+1])==1){\n            aux[j]=a[i+1];\n            j++;\n        }else{\n            cont++;\n            aux[j]=1;\n            aux[j+1]=a[i+1];\n            j=j+2;\n        }\n    }\n    printf(\"%d\\n\",cont);\n    for(i=0;i<n+cont;i++){\n        printf(\"%I64d \",aux[i]);\n    }\n    return 0;\n}\nint prime(int a, int b){\n    if(a==0){\n        return b;\n    }\n    return prime(b%a,a);\n}"}
{"similarity_score": 0.9016042780748663, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "adcff634e2b81deb60d808e3a8c8eb10", "bug_code_uid": "2f20e151203ae9eb76fb74704d45cf47", "src_uid": "9966bfdc9677a9dd558684a00977cd58", "apr_id": "87d12a649dd59322ac366ccefbbfe911", "difficulty": 800, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    int t, n, i, j, k;\r\n    char arra[101];\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--) {\r\n        //ara size\r\n        scanf(\"%d\", &n);\r\n        getchar();\r\n        //getting array\r\n        gets(arra);\r\n        k = strlen(arra);\r\n// checking male and female number\r\n        int m, f;\r\n        m = f = 0;\r\n        for(i = 0; i < k; i++) {\r\n            if(arra[i] == '0') m++;\r\n            else f++;\r\n        }\r\n\r\n        if(f > m) printf(\"0\\n\");\r\n\r\n        else {\r\n            int c = 0;\r\n            for(i = 0; i < k-1; i++) {\r\n                if(arra[i] == '0' && arra[i+1] == '0') c = c + 2;\r\n                else if(arra[i] == '0' && arra[i+1] == '1') {\r\n                    if(arra[i+2] == '1') continue;\r\n                    else if(arra[i+2] != '\\0' && arra[i+2] == '0') c++;\r\n                } \r\n            }\r\n            printf(\"%d\\n\", c);\r\n        }\r\n\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    int t, n, i, j, k;\r\n    char arra[101];\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--) {\r\n        //ara size\r\n        scanf(\"%d\", &n);\r\n        getchar();\r\n        //getting array\r\n        gets(arra);\r\n        k = strlen(arra);\r\n// checking male and female number\r\n        int m, f;\r\n        m = f = 0;\r\n        for(i = 0; i < k; i++) {\r\n            if(arra[i] == '0') m++;\r\n            else f++;\r\n        }\r\n\r\n            int c = 0;\r\n            for(i = 0; i < k-1; i++) {\r\n                if(arra[i] == '1') continue;\r\n                    \r\n                else if(arra[i] == '0' && arra[i+1] == '0') c = c + 2;\r\n                else if(arra[i] == '0' && arra[i+1] == '1') {\r\n                    if(arra[i+2] == '1') continue;\r\n                    else if(arra[i+2] == '0') c++;\r\n                }                \r\n            }\r\n            printf(\"%d\\n\", c);\r\n        \r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.8594704684317719, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c170a26497b114c4d01ccb19d5f73209", "bug_code_uid": "8517a478c4ab8baddb5a1e117627e47a", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "d149bbeecc352772f927abfb86921a89", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tint a[n];\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tint num=0;\t\t\t\t\n\tfor(int i =1;i<n;i++){\n\t\twhile(a[i]<=a[i-1]){\n\t\ta[i]+=m;\n\t\tnum++;\t\n\t\t}\n\t}\n\tprintf(\"%d\",num);\n}", "fixed": "#include <stdio.h>\nint main(){\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tint a[n];\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tint num=0;\t\t\t\t\n\tfor(int i =1;i<n;i++){\n\t\tif(a[i]<=a[i-1]){\n\t\tint y=(a[i-1]-a[i])/m+1;\n\t\ta[i]+=y*m;\n\t\tnum+=y;\t\n\t\t}\n\t}\n\tprintf(\"%d\",num);\n}"}
{"similarity_score": 0.9991503823279524, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2232e915894660959f68604cff17b814", "bug_code_uid": "134384507241b045b83ca7990505922b", "src_uid": "9d46ae53e6dc8dc54f732ec93a82ded3", "apr_id": "8eaaa5ef6ebccfdcc2061048c45ce579", "difficulty": 1400, "tags": ["constructive algorithms", "greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,j,len,m,pos,ct;\n    char ar[200001],state[200001],temp;\n    scanf(\"%s\",ar);\n    len=strlen(ar);\n    scanf(\"%d\",&m);\n    for(i=0;i<len;i++)\n        state[i]=0;\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&pos);\n        state[pos-1]=(state[pos-1]+1)%2;            \n    }\n    ct=0;\n    for(i=0;i<=len/2;i++)\n    {\n        if(state[i]==1)\n            ct=(ct+1)%2;\n        if(ct==1)\n        {\n            temp=ar[len-i-1];\n            ar[len-i-1]=ar[i];\n            ar[i]=temp;\n        }\n    }\n    printf(\"%s\\n\",ar);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,j,len,m,pos,ct;\n    char ar[200001],state[200001],temp;\n    scanf(\"%s\",ar);\n    len=strlen(ar);\n    scanf(\"%d\",&m);\n    for(i=0;i<len;i++)\n        state[i]=0;\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&pos);\n        state[pos-1]=(state[pos-1]+1)%2;            \n    }\n    ct=0;\n    for(i=0;i<len/2;i++)\n    {\n        if(state[i]==1)\n            ct=(ct+1)%2;\n        if(ct==1)\n        {\n            temp=ar[len-i-1];\n            ar[len-i-1]=ar[i];\n            ar[i]=temp;\n        }\n    }\n    printf(\"%s\\n\",ar);\n    return 0;\n}"}
{"similarity_score": 0.9859154929577465, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "b9fa7324b82a56906775bcc8f920c329", "bug_code_uid": "398f4487b98b08b256bc871c2212fd89", "src_uid": "dc67dd2102c70ea476df642b863ae8d3", "apr_id": "db419f5118d7a784cf15376035ef4e93", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n   long long int t,a,b,A,B,count=0,i,y,k=0,x,z,j;\n    scanf(\"%lld\",&t);\n    for(i=1;i<=t;i++)\n    {   count=0;\n\n        scanf(\"%lld %lld\",&A,&B);\n\n        for(j=9;j<=B;j*=11)\n        {\n            count++;\n        }\n        printf(\"%lld\\n\",A*count);\n\n    }\nreturn 1;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n   long long int t,a,b,A,B,count=0,i,y,k=0,x,z,j;\n    scanf(\"%lld\",&t);\n    for(i=1;i<=t;i++)\n    {   count=0;\n\n        scanf(\"%lld %lld\",&A,&B);\n\n        for(j=9;j<=B;j=j*10+9)\n        {\n            count++;\n        }\n        printf(\"%lld\\n\",A*count);\n\n    }\nreturn 0;\n}\n"}
{"similarity_score": 0.7009443861490031, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "e935c69904812103f411d03eb96ff147", "bug_code_uid": "7f55a5a54ffc3de949f65c2be6649ed7", "src_uid": "7324428d9e6d808f55ad4f3217046455", "apr_id": "4de3ddf45650c3785ea5fd394a189be6", "difficulty": 1400, "tags": ["binary search", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    int a[n],i,j;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    int max=0;\n    for(i=0;i<k;i++)\n    {\n        int sum;\n        if(i<k*2-n){\n            sum=a[n-1-i];\n        }\n        else{\n            sum=a[n-1-i]+a[i-(k*2-n)];\n        }\n        if(sum>max)\n        {\n            max=sum;\n        }\n    }\n    printf(\"%d\\n\",max);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    int a[n],i,j;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    int b[k*2];\n    j=0;\n    for(i=0;i<k*2;i++)\n    {\n        if(i<k*2-n)\n        {\n            b[i]=0;\n        }\n        else\n        {\n            b[i]=a[j];\n            j++;\n        }\n    }\n    int max=0;\n    for(i=0;i<k;i++)\n    {\n        int sum=b[i]+b[k*2-i-1];\n        if(sum>max)\n        {\n            max=sum;\n        }\n    }\n    printf(\"%d\\n\",max);\n    return 0;\n}"}
{"similarity_score": 0.5506607929515418, "equal_cnt": 8, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "0b4fc3d7360d9d84fca102153f36e233", "bug_code_uid": "214960754ad407430f5dfa37ab1a92b1", "src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "apr_id": "8e419330f59c2be15b11e7058a0dad90", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void){\n\tint n,i,t;\n\tscanf(\"%d\",&n);\n\tt=1;\n\tfor(i=1;i<n-1;i++){\n\t\tt+=i;\n\t\tt=t%n;\n\t\tprintf(\"%d \",t);\n\t}\n\ti=n-1;\n\tt+=i;\n\tt=t%n;\n\tprintf(\"%d\",t);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void){\n    int n,i,t;\n    scanf(\"%d\",&n);\n    t=1;\n    for(i=1;i<n-1;i++){\n        t+=i;\n        t=t%n;\n        if(t==0) t=n;\n        printf(\"%d \",t);\n    }\n    i=n-1;\n    t+=i;\n    t=t%n;\n    if(t==0) t=n;\n    printf(\"%d\",t);\n    return 0;\n}"}
{"similarity_score": 0.2792207792207792, "equal_cnt": 10, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "d97c37ea5ca53e5b7629850cf3895a6c", "bug_code_uid": "f585d2ebca8ca35fd383e1bd43b23b4d", "src_uid": "388450021f2f33177d905879485bb531", "apr_id": "4623885fcfa749c77d38cce3d13fd21c", "difficulty": 1000, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%d %d\",&a,&b);\n\t\t\n\t\t//\u5c06\u6700\u5927\u7684\u6570\u7ed9a\uff1b \n\t\tint max=a;\n\t\tif(max<b)\n\t\t{\n\t\t\ta=b;\n\t\t\tb=max;\n\t\t}\n\t\t\n\t\tif(a==1||b==1)//\u5f53\u5176\u4e2d\u6709\u4e00\u4e2a\u6570\u4e3a1\u65f6\uff0c\u5c31\u662f\u6709\u9650\u7684 \n\t\t{\n\t\t\tprintf(\"Finite\\n\");//\u6709\u9650\u7684 \n\t\t}\n\t\telse if(a==b)//\u5f53\u4e24\u4e2a\u6570\u4e0d\u4e3a1\uff0c\u800c\u4e14\u76f8\u7b49\u65f6\u662f\u65e0\u9650\u7684\uff1b \n\t\t{\n\t\t\tprintf(\"Infinite\\n\");//\u65e0\u9650\u7684 \n\t\t}\n\t\telse if(a%b==0)\n\t\t{\n\t\t\tprintf(\"Infinite\\n\");//\u65e0\u9650\u7684 \n\t\t} \n\t\telse if(a%(a%b)==0&&a%b!=1)\n\t\t{\n\t\t \tprintf(\"Infinite\\n\");//\u65e0\u9650\u7684\uff1b \n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"Finite\\n\");//\u6709\u9650\u7684\uff1b \n\t\t}\n\t}\n\treturn 0;\n } ", "fixed": "#include<stdio.h>\n\nint gcd(int a,int b)\n{\n\tint c,r;\n\tif(a<b)\n\t{\n\t\tc=a;\n\t\ta=b;\n\t\tb=c;\n\t}\n\tr=a%b;\n\twhile(r)\n\t{\n\t\ta=b;\n\t\tb=r;\n\t\tr=a%b;\n\t}\n\treturn b;\n}\n\nint main() \n{\n    int n;\n    scanf(\"%d\",&n);\n    while(n--)\n\t{\n        int a, b;\n        scanf(\"%d %d\",&a,&b);\n        if(gcd(a,b)==1)\n        {\n        \tprintf(\"Finite\\n\");//\u6709\u9650\u7684\uff1b\n\t\t}\n        else \n\t\t{\n\t\t\tprintf(\"Infinite\\n\");//\u65e0\u9650\u7684\uff1b\n\t\t}\n    }\n    return 0;\n}"}
{"similarity_score": 0.8601895734597157, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b894e3260f3ecc4b913dd8b31e361419", "bug_code_uid": "cb2e35a21b9307a7fdc6d0d885747d56", "src_uid": "fce9d78ad7d4ea01be1704f588e42d37", "apr_id": "30c4c3abbdd8406f238621c405a5bfc7", "difficulty": 1100, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    long r,d,n,x,y,z,i,ans;\n    double dist;\n    scanf(\"%ld%ld\",&r,&d);\n    scanf(\"%ld\",&n);\n    ans=0;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%ld%ld%ld\",&x,&y,&z);\n        dist=sqrt(x*x+y*y);\n        if (dist+z<=r && dist-z>=d)\n            ans++;\n    }\n    printf(\"%ld\\n\",ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    long r,d,n,x,y,z,i,ans;\n    double dist;\n    scanf(\"%ld%ld\",&r,&d);\n    scanf(\"%ld\",&n);\n    ans=0;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%ld%ld%ld\",&x,&y,&z);\n        dist=sqrt(1.0*x*x+1.0*y*y);\n        if (dist+z<=r && dist-z>=r-d)\n            ans++;\n//        if ( (r>=z && x*x+y*y<=(r-z)*(r-z)) && (x*x+y*y>=(d+z)*(d+z)))\n//            ans++;\n    }\n    printf(\"%ld\\n\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.8533568904593639, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "8d4644311ff024dcf903d41e92ec7a71", "bug_code_uid": "20568582160a57634dc22a1b8dad3e88", "src_uid": "fc75935b149cf9f4f2ddb9e2ac01d1c2", "apr_id": "0f301ec840854027b4772442fa38558d", "difficulty": 800, "tags": ["games", "implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int  t,n,i,j,k;\r\n    scanf(\"%d\",&t);\r\n    for(i=0; i<t; i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int A[n];\r\n        for(k=0; k<n; k++)scanf(\"%d\",&A[i]);\r\n        int count=0;\r\n        for(j=0; j<n; j++)\r\n        {\r\n            while(A[j]>1)\r\n            {\r\n                A[j]--;\r\n                count++;\r\n            }\r\n        }\r\n        if(count%2==1) printf(\"maomao90\\n\");\r\n        else printf(\"errorgorn\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int  t,n,i,j,k;\r\n    scanf(\"%d\",&t);\r\n    for(i=0; i<t; i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int A[n];\r\n        for(k=0; k<n; k++)scanf(\"%d\",&A[k]);\r\n        /*for(k=0; k<n; k++) printf(\"%d \",A[k]);\r\n        printf(\"\\n\");*/\r\n        int count=0;\r\n        for(j=0; j<n; j++)\r\n        {\r\n            while(A[j]>1)\r\n            {\r\n                A[j]--;\r\n                count++;\r\n            }\r\n            //if(A[j]>1) count += (A[j]-1);\r\n        }\r\n        //printf(\"Count = %d\\n\", count);\r\n        if(count%2!=1) printf(\"maomao90\\n\");\r\n        else printf(\"errorgorn\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9992912827781715, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cd14c71141cd5b0fe9e6b37acd351a60", "bug_code_uid": "794624d77c9e65b70d5bd35ef453dccf", "src_uid": "fd63aeefba89bef7d16212a0d9e756cd", "apr_id": "23121d077148094ac964154552f4290b", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define SIZE 100010\n\nint main()\n{\n    char s1[SIZE], s2[SIZE];\n    int st1, st2, i, lal;\n\n    gets(s1);\n    gets(s2);\n\n    for (st1 = 0; s1[st1] == '0'; st1++) ;\n    for (st2 = 0; s2[st2] == '0'; st2++) ;\n\n    if ((strlen(s1) - st1) > (strlen(s2) - st2)) {\n        printf(\">\");\n        return 0;\n    } else if ((strlen(s1) - st1) < (strlen(s2) - st2)) {\n        printf(\"<\");\n        return 0;\n    }\n\n    for (i = 0; st1 < strlen(s1); i++, st1++, st2++)\n        if (s1[st1] > s2[st2]) {\n            printf(\">\");\n            return 0;\n        } else if (s1[st1] < s2[st2]) {\n            printf(\"<\");\n            return 0;\n        }\n\n    printf(\"=\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\n#define SIZE 1000100\n\nint main()\n{\n    char s1[SIZE], s2[SIZE];\n    int st1, st2, i, lal;\n\n    gets(s1);\n    gets(s2);\n\n    for (st1 = 0; s1[st1] == '0'; st1++) ;\n    for (st2 = 0; s2[st2] == '0'; st2++) ;\n\n    if ((strlen(s1) - st1) > (strlen(s2) - st2)) {\n        printf(\">\");\n        return 0;\n    } else if ((strlen(s1) - st1) < (strlen(s2) - st2)) {\n        printf(\"<\");\n        return 0;\n    }\n\n    for (i = 0; st1 < strlen(s1); i++, st1++, st2++)\n        if (s1[st1] > s2[st2]) {\n            printf(\">\");\n            return 0;\n        } else if (s1[st1] < s2[st2]) {\n            printf(\"<\");\n            return 0;\n        }\n\n    printf(\"=\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.9320695102685624, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "0938d4f0b4403b5d0f27aa24555f8a7b", "bug_code_uid": "c2736fb621f8aee7559cbbad320461d1", "src_uid": "30cfce44a7a0922929fbe54446986748", "apr_id": "2d4a2aa1c78fd8aa80ad9f50fc93af88", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int a,b,c,d,n;\n        int f=0;\n        scanf(\"%lld %lld %lld %lld %lld\",&n,&a,&b,&c,&d);\n        long long int w=n*(a-b);\n        // printf(\"%lld\\n\",w);\n        long long int x=n*(a+b);\n         //printf(\"%lld\\n\",x);\n        long long int y=(c-d);\n         //printf(\"%lld\\n\",y);\n        long long int z=(c+d);\n         //printf(\"%lld\\n\",z);\n        long long int q=w%z;\n        //printf(\"%lld\\n\",q);\n      if(w<z||x>y)\n      {\n      \tprintf(\"No\\n\");\n\t  }\n\t  else\n\t  {\n\t  \tprintf(\"Yes\\n\");\n\t  }\n    }\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int a,b,c,d,n;\n        int f=0;\n        scanf(\"%lld %lld %lld %lld %lld\",&n,&a,&b,&c,&d);\n        long long int w=n*(a-b);\n        // printf(\"%lld\\n\",w);\n        long long int x=n*(a+b);\n         //printf(\"%lld\\n\",x);\n        long long int y=(c-d);\n         //printf(\"%lld\\n\",y);\n        long long int z=(c+d);\n         //printf(\"%lld\\n\",z);\n        long long int q=w%z;\n        //printf(\"%lld\\n\",q);\n      if(w<=z&&x>=y)\n      {\n      \tprintf(\"Yes\\n\");\n\t  }\n\t  else\n\t  {\n\t  \tprintf(\"No\\n\");\n\t  }\n    }\n}"}
{"similarity_score": 0.13172043010752688, "equal_cnt": 5, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "54de98c0bef706dee6cb15cfcb094513", "bug_code_uid": "9b88669b9fce7e23ba4f17f7573020f2", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "6f93e8b45fda59383d47e1f92e43fc50", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,x=0;\n    scanf(\"%d\",&t);\n    int i,j,k,a[t],sum=0;\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum=sum+a[i];\n    }\n    for(i=0;i<t;i++)\n    {\n        for(j=0;j<t;j++)\n        {\n            if(a[j]<a[j+1])\n            {\n                k=a[j];\n                a[j]=a[j+1];\n                a[j+1]=k;\n            }\n        }\n\n    }\n    for(j=0;x<=sum/2;j++)\n    {\n        x=x+a[j];\n    }\n    printf(\"%d\\n\",j+1);\n}\n", "fixed": "#include<stdio.h>\nint main(){\nint n,i,j,v,a[100],s=0,p=0,q=0;\nscanf(\"%d\",&n);i=n;\nwhile(i--){scanf(\"%d\",&a[i]);s+=a[i];}\nfor(i=0;i<n;i++){\nfor(j=0;j<n;j++){\nif(a[j]>a[j+1]){v=a[j];a[j]=a[j+1];a[j+1]=v;}}}\ni=n;while(i--){p+=a[i];s-=a[i];q++;\nif(p>s)break;}\nprintf(\"%d\",q);}\n\n"}
{"similarity_score": 0.38683602771362585, "equal_cnt": 19, "replace_cnt": 11, "delete_cnt": 5, "insert_cnt": 3, "fix_ops_cnt": 19, "lang": "GNU C", "fix_code_uid": "3eff762d72be68ebd973330803211993", "bug_code_uid": "2374ee4e41be6322466115193ca0a1f8", "src_uid": "deeb49969ac4bc4f1c7d76b89ac1402f", "apr_id": "a208e01f172e458dc48c3f1b8e057f61", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n   int N,M,i,j,cont,cont1,cont0;\n    scanf(\"%d %d\",&M,&N);\n     int v[M];\n     int c[N][2];\n     for(i=0;i<M;i++){\n         scanf(\"%d\",&v[i]);\n     }\n     for(i=0;i<N;i++){\n       scanf(\"%d %d\",&(c[i][1]),&(c[i][2]));\n     }\n     for(i=0;i<N;i++){\n       if((c[i][1])!=(c[i][2])){\n            cont=0;\n          for(j=(c[i][1]);j<=(c[i][2]);j++){\n                cont++;\n           }\n          if((cont%2)==0){\n                cont1=0;\n                cont0=0;\n             for(j=(c[i][1]-1);j<=(c[i][2]-1);j++){\n                   if(v[j]==1)\n                      cont1++;\n                   else\n                      cont0++;\n              }\n             if((cont1>=(cont/2) && cont0>=(cont/2)) || ((cont1-cont0)==0) || (cont1>cont0))\n                  printf(\"%d\\n\",1);\n              else\n                  printf(\"%d\\n\",0);\n\n          }else\n             printf(\"%d\\n\",0);\n       }\n       else\n           printf(\"%d\\n\",0);\n     }\n  return 0;\n}\n\n", "fixed": "#include <stdio.h>\nint main()\n{    long long int N,M;\n    int a,i,j,cont,cont1,cont0;\n    scanf(\"%I64d %I64d\",&M,&N);\n      int c[N][2];\n     cont1=0;\n     cont0=0;\n     for(i=1;i<=M;i++){\n         scanf(\"%d\",&a);\n        if(a==1)\n          cont1++;\n        else\n          cont0++;\n     }\n     for(i=0;i<N;i++){\n       scanf(\"%d %d\",&(c[i][1]),&(c[i][2]));\n     }\n     for(i=0;i<N;i++){\n       if((c[i][1])!=(c[i][2])){\n            cont=0;\n          for(j=(c[i][1]);j<=(c[i][2]);j++){\n                cont++;\n           }\n          if((cont%2)==0 && ((cont1>=(cont/2)) && (cont0>=(cont/2)))){\n                  printf(\"%d\\n\",1);\n             } else\n                  printf(\"%d\\n\",0);\n        } else\n           printf(\"%d\\n\",0);\n     }\n  return 0;\n}\n\n"}
{"similarity_score": 0.9676375404530745, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1537fb4879f4187d00e5caf78d44db71", "bug_code_uid": "c586d7fd697e4926df052c6aefc3fb71", "src_uid": "db9065d975878227a749083f0036a169", "apr_id": "4ee6dfc91b7d0c543de207de32cff816", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define MAX 100000\nint main(){\n\n    int v[5], i, n;\n    long long answ = 0;\n    char a[MAX];\n\n    for(i = 1;i <= 4; ++i)\n        scanf(\"%d\",&v[i]);\n\n    n = strlen(a);\n\n    for(i = 0;i < n; ++i)\n        answ = answ + v[a[i] - 48];\n\n    printf(\"%I64d\",answ);\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#define MAX 100000\nint main(){\n\n    int v[5], i, n;\n    long long answ = 0;\n    char a[MAX];\n\n    for(i = 1;i <= 4; ++i)\n        scanf(\"%d\",&v[i]);\n\n    scanf(\"%s\",&a);\n    n = strlen(a);\n\n    for(i = 0;i < n; ++i)\n        answ = answ + v[a[i] - 48];\n\n    printf(\"%I64d\",answ);\n}\n"}
{"similarity_score": 0.22795969773299748, "equal_cnt": 21, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "2a53d2fae2aefb54391ecb1140829ef7", "bug_code_uid": "0451a997d3b93681f63db82928c709f1", "src_uid": "2584fa8c1adb1aa8cd5c28a8610ff72d", "apr_id": "aea39cbdca048a4feee9c1e007b98edc", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <string.h>\n#include <ctype.h>\nint main()\n{\n\n    int i,n,x,y,a,b;\n    while(~scanf(\"%d\",&n))\n    {\n        if(n<4)\n        {\n            printf(\"-1\\n\");\n            continue;\n        }\n        x=n/7;\n        y=n%7;\n        a=y/4;\n        b=y%4;\n        if(b!=0)\n        {\n            printf(\"-1\\n\");\n            continue;\n        }\n        for(i=0;i<a;i++)\n            printf(\"4\");\n        for(i=0;i<x;i++)\n            printf(\"7\");\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint Pri(int k)\n{\n    int i;\n    int sum7,sum4;\n    if(k==0)\n    {\n        return -2;\n    }\n    else if((k%7)==0)\n    {\n        sum7=k/7;\n        return sum7;\n    }\n\n    else if(k<0)\n        return -1;\n    else\n    {\n        return -3;\n    }\n}\nint main()\n{\n    int k,i,sum7=0,sum4=0;\n    scanf(\"%d\",&k);\n    if(k%7==0)\n    {\n        sum7=k/7;\n        for(i=0; i<sum7; i++)\n        {\n            printf(\"7\");\n        }\n    }\n    else\n    {\n        k=k-4;\n        sum4++;\n        while(Pri(k)!=-1)\n        {\n            if(Pri(k)>=0)\n            {\n                sum7=sum7+Pri(k);\n                break;\n            }\n            else if(Pri(k)==-2)\n            {\n                break;\n            }\n            else if(Pri(k)==-3)\n            {\n                k=k-4;\n                sum4++;\n            }\n        }\n        if(Pri(k)==-1)\n            printf(\"-1\");\n        else\n        {\n            for(i=0; i<sum4; i++)\n                printf(\"4\");\n            for(i=0; i<sum7; i++)\n                printf(\"7\");\n        }\n\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.4147682639434407, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "d307cae1680dd3b9ddfa964cdf46d39e", "bug_code_uid": "2605dddd9b0341a248813266c0507eca", "src_uid": "c783434bb17819344fb9a49de1f63708", "apr_id": "e8a9a134fb8030ef8c10c8814c549b19", "difficulty": 1200, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n    int n = 0;\n    int k = 0;\n\n    scanf(\"%d %d\", &n, &k);\n    char s[n + 1];\n    scanf(\"%s\", s);\n\n    int p = (n - k) / 2;\n\n    for (int i = 1; i < n && p > 0; i++) {\n        int fw = i + 0;\n        int bk = i - 1;\n\n        while (bk >= 0 && fw < n && p > 0) {\n            if (s[bk] == '\\x00') {\n                bk--;\n            } else if (s[bk] == '(' && s[fw] == ')') {\n                s[bk--] = '\\x00';\n                s[fw++] = '\\x00';\n                p--;\n            } else {\n                break;\n            }\n        }\n    }\n\n    for (int i = 0; i < n; i++) {\n        if (s[i] != '\\x00') {\n            printf(\"%c\", s[i]);\n        }\n    }\n    printf(\"\\n\");\n\n    return 0;\n}", "fixed": "int main(void) {\n    int n = 0;\n    int k = 0;\n\n    scanf(\"%d %d\", &n, &k);\n    char s[n + 1];\n    scanf(\"%s\", s);\n\n    int p = (n - k) / 2;\n    int stack[n];\n    int idx = 0;\n\n    for (int i = 0; i < n && p > 0; i++) {\n        if (s[i] == '(') {\n            stack[idx++] = i;\n        } else if (idx > 0) {\n            s[stack[--idx]] = '\\x00';\n            s[i] = '\\x00';\n            p--;\n        }\n    }\n\n    for (int i = 0; i < n; i++) {\n        if (s[i] != '\\x00') {\n            printf(\"%c\", s[i]);\n        }\n    }\n    printf(\"\\n\");\n\n    return 0;\n}"}
{"similarity_score": 0.25907990314769974, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "c6c38dd424fc9a144da6e7444ca3d43b", "bug_code_uid": "b104f796fdcf8958823ab294b55ee209", "src_uid": "7899a22cee29bb96d671f6188f246c21", "apr_id": "26e80b85ab2cfd5b555e1344455629e2", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[100001][2],i,j,k,l,x,y,count1=0,count2=0,count=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;j<=2;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    count=2*(n-1);\n\n    for(j=1;j<=n;j++)\n     {\n\n    for(i=1;i<=n;i++)\n        {\n        if(a[i][1]==a[j][2])\n           {\n            count1++;\n           }\n        }\n    x=(count1+(count/2));\n    y=count-(count1+(count/2));\n    printf(\"%d %d\\n\",x,y);\n    count1=0;\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint cnt[100005];\nint a[100015][2];\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    for(i =1;i<=n;i++)\n    {\n        scanf(\"%d %d\",&a[i][0],&a[i][1]);\n        cnt[a[i][0]]++;\n    }\n    for(i =1;i<=n;i++)\n    {\n        printf(\"%d %d\\n\",(n-1)+(cnt[a[i][1]]),(n-1)-(cnt[a[i][1]]));\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.318232044198895, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "8bb352cb83dd7b9b7225b38be6785de6", "bug_code_uid": "213b415030a7cf71992676e42430ce58", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "bb9be82d986252cfba0fbb981d148e7e", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int n,k=1,i;\n    char a[200001],b[3]=\"01\",c[3]=\"10\",*d,*e;\n    scanf(\"%d\",&n);\n    scanf(\"%s\",a);\n        d=strstr(a,b);\n        while(d)\n        {\n            for(i=0;i<=n-2;i++)\n            {\n                *(d+i)=*(d+i+2);\n            }\n            n=n-2;\n            d=strstr(a,b);\n        }\n        e=strstr(a,c);\n        while(e)\n        {\n            for(i=0;i<=n-2;i++)\n            {\n                *(e+i)=*(e+i+2);\n            }\n            n=n-2;\n            e=strstr(a,c);\n        }\n    printf(\"%d\",n);\n    return 0;\n}\n\n\n\n\n\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,a=0,b=0,i;\n    char str[200001];\n    scanf(\"%d\",&n);\n    scanf(\"%s\",str);\n    for(i=0;i<n;i++)\n    {\n        if(str[i]=='1')\n            a++;\n        else\n            b++;\n    }\n    if(b<=a)\n        n=n-b*2;\n    else\n        n=n-a*2;\n    printf(\"%d\",n);\n    return 0;\n}\n"}
{"similarity_score": 0.17894736842105263, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "7fc9ed8ceb4d198ee76b4b89d6d01014", "bug_code_uid": "746a7d72d2e52a3e20f503c53a5267a3", "src_uid": "5e5dbd70c7fcedf0f965aed5bafeb06c", "apr_id": "bdf685960ca0e6dab9af67c40c4506c4", "difficulty": 800, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n \n#include<stdio.h>\n\nint main()\n{\n\tchar in[100];\n\tint d,z=0,e=0,r=0,o=0,n=0,i,cntz=0,cnto=0;\n\t\n\tscanf(\"%d\",&d);\n\tscanf(\"%s\",&in);\n\n\tfor(i=0;i<d;i++)\n\t{\t\n\t\tif(in[i]=='z')\n\t\tz=z+1;\n\t\t\n\t\tif(in[i]=='e')\n\t\te=e+1;\n\t\t\n\t\tif(in[i]=='r')\n\t\tr=r+1;\n\t\t\n\t\tif(in[i]=='o')\n\t\to=o+1;\n\t\t\n\t\tif(in[i]=='n')\n\t\tn=n+1;\t\n\t}\t\n\t\n\twhile(n>0)\n\t{\n\t\tif(o>0 && n>0 && e>0)\n\t\tcnto+=1;\n\t\t\n\t\to-=1;\n\t\tn-=1;\n\t\te-=1;\n\t}\n\t\n\twhile(z>0)\n\t{\n\t\tif(z>0 && e>0 && r>0 && o>0)\n\t\tcntz=cntz+1;\n\t\t\n\t\tz-=1;\n\t\te-=1;\n\t\tr-=1;\n\t\to-=1;\n\t}\n\t\n\t\t\n\t\n\twhile(cnto>0)\n\t{\n\t\tprintf(\"1\");\n\t\tcnto--;\n\t}\n\twhile(cntz>0)\n\t{\n\t\tprintf(\"0\");\n\t\tcntz--;\n\t}\n\t\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tint z=0,e=0,r=0,o=0,n=0;\n\tint len;\n\tscanf(\"%d\",&len);\n\tchar str1[len];\n\tscanf(\"%s\",str1);\n\tint i;\n \n\tfor(i=0;i<len;i++){\n\t\tif(str1[i]=='z'){\n\t\t\tz = z+1;\n \n\t\t}\n\t\telse if(str1[i] == 'e'){\n\t\t\te=e+1;\n\t\t}\n\t\telse if(str1[i] == 'r'){\n\t\t\tr=r+1;\n\t\t}\n\t\telse if(str1[i] == 'o'){\n\t\t\to=o+1;\n\t\t}\n\t\telse if(str1[i] == 'n'){\n\t\t\tn=n+1;\n\t\t}\n \n\t}\n\tint array[o];\n\tfor(i=0;i<(o-z);i++){\n\t\tarray[i]=1;\n\t}\n\tfor(i=o-z;i<o;i++){\n\t\tarray[i]=0;\n\t}\n\tfor(i=0;i<o;i++){\n\t\tprintf(\"%d \",array[i]);\n\t}\n \n \n\treturn 0;\n \n \n \n}"}
{"similarity_score": 0.9915611814345991, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c77480b6492b33aa1d9902d3cd4afb2e", "bug_code_uid": "f29824c601d9f39eea499fa391706bc9", "src_uid": "76bfced1345f871832957a65e2a660f8", "apr_id": "b071c9d9c0d65ac1a3f3d437bfa95d83", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        int t;\r\n        scanf(\"%d\",&t);\r\n        for(i=3;i<=t;i++)  \r\n\t\t    printf(\"%d \",i+1);\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        int t;\r\n        scanf(\"%d\",&t);\r\n        for(i=1;i<=t;i++)  \r\n\t\t    printf(\"%d \",i+1);\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9741824440619621, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c4ef2847a3b59217d31c745e78aef8d3", "bug_code_uid": "d615b7a5da384642b2e48d690be8c815", "src_uid": "1b13c9d9fa0c5a44d035bcf6d70e1a60", "apr_id": "5cc07147128c65b7d76a87ba1276e9be", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor (int i = 0; i < t; i++) {\n\t\tint x1, y1, x2, y2;\n\t\tscanf(\"%d %d %d %d\", &x1, &y1, &x2, &y2);\n\t\tunsigned long long int answer = ((long)(x2-x1)*(long)(y2-y1))+(long)1;\n\t\tprintf(\"%lld\\n\", answer);\n\t}\t\n}\n\n\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor (int i = 0; i < t; i++) {\n\t\tint x1, y1, x2, y2;\n\t\tscanf(\"%d %d %d %d\", &x1, &y1, &x2, &y2);\n\t\tunsigned long long int answer = ((long long)(x2-x1)*(long long)(y2-y1))+(long long)1;\n\t\tprintf(\"%lld\\n\", answer);\n\t}\t\n}\n\n\n"}
{"similarity_score": 0.9978213507625272, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "168b7870bcefc6dc7fbe1d22fa94db80", "bug_code_uid": "7bf3974e01a9466ee045377cfb743a67", "src_uid": "adb66b7b22d70bb37cb625d531d8865f", "apr_id": "99786954c54abbde97e26fe559472c9e", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int N,i,X,NI,M;\n    long long R;\n    long long R1;\n    M = 1e9;\n    R = 0;\n    NI = 0;\n    scanf (\"%d\",&N);\n    for (i=0;i<N;i++){\n        scanf (\"%d\",&X);\n        R = R + X;\n        if (X%2!=0){\n            NI = NI + 1;\n            if (X<M){\n                M = X;\n            }\n        }\n    }\n    if (NI%2==0){\n        printf (\"%64d\",R);\n    }else{\n        R1 = R-M;\n        printf (\"%64d\",R1);\n        }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int N,i,X,NI,M;\n    long long R;\n    long long R1;\n    M = 1e9;\n    R = 0;\n    NI = 0;\n    scanf (\"%d\",&N);\n    for (i=0;i<N;i++){\n        scanf (\"%d\",&X);\n        R = R + X;\n        if (X%2!=0){\n            NI = NI + 1;\n            if (X<M){\n                M = X;\n            }\n        }\n    }\n    if (NI%2==0){\n        printf (\"%I64d\",R);\n    }else{\n        R1 = R-M;\n        printf (\"%I64d\",R1);\n        }\n    return 0;\n}\n"}
{"similarity_score": 0.8190661478599222, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "6febbb4864934d6d6671842236249daa", "bug_code_uid": "ec87eb98273b871d6f216e20e6d2be33", "src_uid": "3b7cafc280a9b0dba567863c80b978b0", "apr_id": "3dd3528d4420fcaf1845a07aaa934435", "difficulty": 1300, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\ntypedef long long int ll;\n\nll n, m;\nll row[50] = {0L};\nll col[50] = {0L};\n\nint main() {\n\tscanf(\"%I64d%I64d\", &n, &m);\n\tll i, j;\n\tint t;\n\tfor(i=0;i<n;i++) {\n\t\tfor (j = 0; j < m; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &t);\n\t\t\tif(t) {\n\t\t\t\trow[i]++;\n\t\t\t\tcol[j]++;\n\t\t\t}\n\t\t}\n\t}\n\tlong long int res = 0;\n\tfor(i=0;i<n;i++) {\n\t\tres += (((1L<<(row[i])) - 1L) + ((1L<<(m-row[i])) - 1L));\n\t}\n\tfor(i=0;i<m;i++) {\n\t\tres += (((1L<<(col[i])) - 1L) + ((1L<<(n-col[i])) - 1L));\n\t}\n\tprintf(\"%I64d\\n\", res-(n*m));\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\ntypedef long long int ll;\n\nll n, m;\nll row[50] = {0L};\nll col[50] = {0L};\n\nint main() {\n\tscanf(\"%I64d%I64d\", &n, &m);\n\tll i, j;\n\tint t;\n\tfor(i=0;i<n;i++) {\n\t\tfor (j = 0; j < m; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &t);\n\t\t\tif(t) {\n\t\t\t\trow[i]++;\n\t\t\t\tcol[j]++;\n\t\t\t}\n\t\t}\n\t}\n\tlong long int res = 0;\n\tfor(i=0;i<n;i++) {\n\t\tres += (((1LL<<(row[i])) - 1LL) + ((1LL<<(m-row[i])) - 1LL));\n\t}\n\tfor(i=0;i<m;i++) {\n\t\tres += (((1LL<<(col[i])) - 1LL) + ((1LL<<(n-col[i])) - 1LL));\n\t}\n\tprintf(\"%I64d\\n\", res-(n*m));\n\treturn 0;\n}"}
{"similarity_score": 0.9967320261437909, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d5dfbc6e94126f9afd0d0fdecec3d599", "bug_code_uid": "e3289e462b0d9ce0d14687ad21fb8fce", "src_uid": "e3dcb1cf2186bf7e67fd8da20c1242a9", "apr_id": "7f3763fc8546665a47ce7216b31d1a8d", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main () {\nint n,i,j,flag1=0,flag2=0;\nchar str[100][11];\nscanf(\"%d\",&n);\nscanf(\"%s\",&str[0]);\nflag1++;\nfor ( i=1;i<n;i++ ) {\nscanf(\"%s\",&str[i]);\nIf ( strcmp(str[0],str[i])==0) {\nflag1++;\n}\nelse {\nj=i;\nflag2++;\n}\n}\nprintf(\"%s\",flag1>flag2?str[0]:str[j]);\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main () {\nint n,i,j,flag1=0,flag2=0;\nchar str[100][11];\nscanf(\"%d\",&n);\nscanf(\"%s\",&str[0]);\nflag1++;\nfor ( i=1;i<n;i++ ) {\nscanf(\"%s\",&str[i]);\nif ( strcmp(str[0],str[i])==0) {\nflag1++;\n}\nelse {\nj=i;\nflag2++;\n}\n}\nprintf(\"%s\",flag1>flag2?str[0]:str[j]);\nreturn 0;\n}"}
{"similarity_score": 0.6636670416197975, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "d464eb2c4e0960d3b8f4173ee5ab13a3", "bug_code_uid": "81634dd614f5b260d8dbc74728db3226", "src_uid": "95d83cfdb2131f2f23ba5ef005c18b38", "apr_id": "570ada29c3d9f09f87420b0c843ceb1c", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,k,i,count=0;\r\n    scanf(\"%d\",&n);\r\n    int a[n];\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&a[i]);\r\n    }\r\n    for(i=0;i<n;i++)\r\n    {\r\n        if(a[i]==1)\r\n        {\r\n         count=1;\r\n         break;\r\n        }\r\n    }\r\n    if(count)\r\n    {\r\n        printf(\"YES\\n\");\r\n    }\r\n    else\r\n    {\r\n        printf(\"NO\");\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n    int t,i;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n    int n,k,c=0,*a;\r\n    scanf(\"%d %d\",&n,&k);\r\n    \r\n   \r\n    a = (int*) malloc(n*sizeof(int));\r\n    for(int i = 0; i < n; i++){\r\n        scanf(\"%d\", (a+i));\r\n    }\r\n    for(i=0;i<n;i++)\r\n    {\r\n        if(a[i]==1)\r\n        {\r\n            c=1;\r\n            break;\r\n        }\r\n    }\r\n    if(c)\r\n    {\r\n        printf(\"YES\\n\");\r\n    }\r\n    else\r\n    {\r\n        printf(\"NO\\n\");\r\n    }\r\n    \r\n}\r\n    \r\n}"}
{"similarity_score": 0.9982394366197183, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "457d85148e94c358356a3629673c1240", "bug_code_uid": "29f6d998c87c439ef495585fc9cc73ea", "src_uid": "68883ab115882de5cf77d0848b80b422", "apr_id": "e0b15ee662166c5507704c62ac3deb9e", "difficulty": 1600, "tags": ["data structures", "constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n\tint n,m,i,j,ans;\n\tchar *s,c;\n\tscanf(\"%d %d\",&n,&m);\n\ts=(char *)malloc(sizeof(char)*(n+1));\n\tscanf(\"%s\",s);\n\tfor(i=0,ans=0;i<n-1;i++)\n\t\tif(s[i]=='.'&&s[i+1]=='.')\n\t\t\tans+=1;\n\tfor(j=0;j<m;j++){\n\t\tscanf(\"%d %c\",&i,&c);\n\t\ti--;\n\t\tif((s[i]=='.'&&c=='i')||(s[i]!='.'&&c!='.'));\n\t\telse if(c=='.'){\n\t\t\ts[i]='.';\n\t\t\tif(i-1>=0&&s[i-1]=='.')\n\t\t\t\tans++;\n\t\t\tif(i+1<n&&s[i+1]=='.')\n\t\t\t\tans++;\n\t\t}\n\t\telse{\n\t\t\ts[i]=c;\n\t\t\tif(i-1>=0&&s[i-1]=='.')\n\t\t\t\tans--;\n\t\t\tif(i+1<n&&s[i+1]=='.')\n\t\t\t\tans--;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n\tint n,m,i,j,ans;\n\tchar *s,c;\n\tscanf(\"%d %d\",&n,&m);\n\ts=(char *)malloc(sizeof(char)*(n+1));\n\tscanf(\"%s\",s);\n\tfor(i=0,ans=0;i<n-1;i++)\n\t\tif(s[i]=='.'&&s[i+1]=='.')\n\t\t\tans+=1;\n\tfor(j=0;j<m;j++){\n\t\tscanf(\"%d %c\",&i,&c);\n\t\ti--;\n\t\tif((s[i]=='.'&&c=='.')||(s[i]!='.'&&c!='.'));\n\t\telse if(c=='.'){\n\t\t\ts[i]='.';\n\t\t\tif(i-1>=0&&s[i-1]=='.')\n\t\t\t\tans++;\n\t\t\tif(i+1<n&&s[i+1]=='.')\n\t\t\t\tans++;\n\t\t}\n\t\telse{\n\t\t\ts[i]=c;\n\t\t\tif(i-1>=0&&s[i-1]=='.')\n\t\t\t\tans--;\n\t\t\tif(i+1<n&&s[i+1]=='.')\n\t\t\t\tans--;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.3844282238442822, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "5f37794cdc4f283f0edce4268cec4f51", "bug_code_uid": "b737629ba82886699a243819b12d450b", "src_uid": "204ba74195a384c59fb1357bdd71e16c", "apr_id": "08129cbf17fc3f2b145ef113d6a7d3fd", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tshort n,x=1;\n\tscanf(\"%hd\",&n);\n\tif(n<=1)\n    {\n        printf(\"-1\\n\");\n    return 0;\n    }\n    else\n        while(printf(\"%hd \",x++) && x<=n);\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int N, i;\n    scanf(\"%d\", &N);\n    if(N & 1) {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    for(i = 1; i <= N; i += 2) {\n        printf(\"%d %d \", i + 1, i);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9401993355481728, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "34ef123a71ebafe73c379a88a1921b5c", "bug_code_uid": "e1956211dbbfc068d81755676c2cf315", "src_uid": "0ac2a0954fe43d66eac32072c8ea5070", "apr_id": "d25e1bdcaf82b13ca7202919fbdff372", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    short i, j, k;\n    \n    short n;\n    scanf(\"%d\", &n);\n    short m = n*n + 1;\n    \n    for(i = 0; i < n; i++) {\n        for(j = 0; j < n/2 - 1; j++)\n            printf(\"%d %d \", t, m - t++);\n        printf(\"%d %d\\n\", t, m - t++);\n    }\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n    short i, j, k = 1;\n    \n    short n;\n    scanf(\"%d\", &n);\n    short m = n*n + 1;\n    \n    for(i = 0; i < n; i++) {\n        for(j = 0; j < n/2 - 1; j++, k++)\n            printf(\"%d %d \", k, m - k);\n        printf(\"%d %d\\n\", k, m - k);\n        k++;\n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.8451827242524917, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "2670b9337674a255334006a0e60a1c1e", "bug_code_uid": "29dabc6e05021a51fcf53b443dd15bf5", "src_uid": "910c0e650d48af22fa51ab05e8123709", "apr_id": "56311b4ae74f6166154742023af0e1fd", "difficulty": 1600, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//\n//  main.cpp\n//  tset\n//\n//  Created by junlianglee on 2017/2/24.\n//  Copyright \u00a9 2017\u5e74 Kila. All rights reserved.\n//\n\n#include <iostream>\n\nvoid out(int x){\n    int a = x/26;\n    int b = x%26;\n    if (a==0)\n    {\n        /* code */\n        !b?putchar('Z'):putchar(b-1+'A');\n        return;\n    }\n    else {\n        out(a);\n        !b?putchar('Z'):putchar(b-1+'A');\n    }\n}\n\nint main(int argc, const char * argv[]) {\n    // insert code here...\n    int n,x,y;\n    char str[20],*p;\n    scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%s\",str);\n        if(sscanf(str,\"%*c%d%*c%d\",&x,&y)==2){\n            out(y);\n            printf(\"%d\\n\",x);\n        }\n        else{\n            for(x=0,p=str;*p>64;p++){\n                x=x*26+*p-64;\n            }\n            printf(\"R%sC%d\\n\",p,x);\n        }\n        \n    }\n    return 0;\n}\n", "fixed": "//\n//  main.cpp\n//  tset\n//\n//  Created by junlianglee on 2017/2/24.\n//  Copyright \u00a9 2017\u5e74 Kila. All rights reserved.\n//\n\n#include <stdio.h>\nvoid out(int t){\n    if(t)\n    {\n        out((t-1)/26);\n        putchar(65+(t-1)%26);\n    }\n}\n\nint main(int argc, const char * argv[]) {\n    // insert code here...\n    int n,x,y;\n    char str[20],*p;\n    scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%s\",str);\n        if(sscanf(str,\"%*c%d%*c%d\",&x,&y)==2){\n            out(y);\n            printf(\"%d\\n\",x);\n        }\n        else{\n            for(x=0,p=str;*p>64;p++){\n                x=x*26+*p-64;\n            }\n            printf(\"R%sC%d\\n\",p,x);\n        }\n        \n    }\n    return 0;\n}\n"}
{"similarity_score": 0.961038961038961, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "b487a4d12690f3e42e9b27950c638b29", "bug_code_uid": "6e081830dc76c1d487c3c52657cb709c", "src_uid": "c7a5b4a015e28dd3759569bbdc130e93", "apr_id": "871256d5e41338d3279e2cb98a719a53", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n\tint t;\r\n    scanf(\"%d\",&t);\r\n    getchar();\r\n    while(t--)\r\n    {\r\n    \tint a=0,b=0;\r\n\t\tchar c;\r\n    \tfor(int i=0;i<6;i++)\r\n    \t{\r\n    \t\tscanf(\"%c\",&c);\r\n    \t\tif(i<3)\r\n    \t\t{\r\n    \t\t\ta+=c-'0';\r\n//    \t\t\tprintf(\"%d\\n\",a);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\tb+=c-'0';\r\n\t\t\t\r\n\t\t}\r\n//\t\tprintf(\"&\");\r\n\t\tif(a==b)\r\n\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\tprintf(\"NO\\n\");\r\n\t\tgetchar();\r\n\t}\r\n\treturn 0; \r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n    scanf(\"%d\",&t);\r\n    getchar();\r\n    while(t--)\r\n    {\r\n    \tint a=0,b=0;\r\n\t\tchar c;\r\n    \tfor(int i=0;i<6;i++)\r\n    \t{\r\n    \t\tscanf(\"%c\",&c);\r\n    \t\tif(i<3)\r\n    \t\t{\r\n    \t\t\ta+=c-'0';\r\n//    \t\t\tprintf(\"%d\\n\",a);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\tb+=c-'0';\r\n\t\t\t\r\n\t\t}\r\n//\t\tprintf(\"&\");\r\n\t\tif(a==b)\r\n\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\tprintf(\"NO\\n\");\r\n\t\tgetchar();\r\n\t}\r\n\treturn 0; \r\n}"}
{"similarity_score": 0.9665955934612651, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "e1ea2afa6e93f49501d9b0c6d10076c8", "bug_code_uid": "558979d3463a09297cafdc7e695acc56", "src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "apr_id": "08258baf10c72b36c7336e59dbc2317f", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MAX(a,b) (((a)>(b))?(a):(b))\nint a[1000010];\nint main()\n{\n    int n,x,r=0,flag=0,ans=0,f=0;\n    char c;\n    scanf(\"%d\",&n);\n    getchar();\n    while(n--)\n    {\n        scanf(\"%c %d\",&c,&x);\n        getchar();\n        if(c=='+')\n        {\n            a[x]++;\n            if(a[x]==1)\n            f++;\n            else\n            {\n                a[x]=1;\n                r--;\n            }\n        }\n        else\n        {\n            if(a[x]==1)\n            {\n                a[x]--;\n                f--;\n            }\n            else\n            {\n                ans++;\n                a[x]=-1;\n                r++;\n            }\n\n        }\n        ans=MAX(ans,f+r);\n    }\n    printf(\"%d\",ans);\n}\n", "fixed": "#include<stdio.h>\n#define MAX(a,b) (((a)>(b))?(a):(b))\nint a[1000010];\nint main()\n{\n    int n,x,r=0,flag=0,ans=0,f=0;\n    char c;\n    scanf(\"%d\",&n);\n    getchar();\n    while(n--)\n    {\n        scanf(\"%c %d\",&c,&x);\n        getchar();\n        if(c=='+')\n        {\n            a[x]++;\n            if(a[x]==1)\n            f++;\n            else\n            {\n                a[x]=1;\n            }\n        }\n        else\n        {\n            if(a[x]==1)\n            {\n                a[x]--;\n                f--;\n            }\n            else\n            {\n                ans++;\n                a[x]=0;\n            }\n\n        }\n        ans=MAX(ans,f);\n    }\n    printf(\"%d\",ans);\n}\n"}
{"similarity_score": 0.9590488771466315, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "11f611666d560fca02d4a5f0d8fe2884", "bug_code_uid": "3c5f7d219813c9ff06337511d5ecb842", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "4af9cf17f2ef93181b019beb71bc14b6", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint getCutedPaper (int w, int h) {\r\n    int paper = 1;\r\n    while (w % 2 == 0 || h % 2 == 0) {\r\n        if (w % 2 == 0) {\r\n            w /= 2;\r\n            paper += paper / 2 + 2;\r\n        } else {\r\n            h /= 2;\r\n            paper += paper / 2 + 2;\r\n        }\r\n    }\r\n    return paper;\r\n}\r\n\r\nmain () {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int w, h, n;\r\n    for (int i = 0; i < t; i++) {\r\n        scanf(\"%d\", &w);\r\n        scanf(\"%d\", &h);\r\n        scanf(\"%d\", &n);\r\n        if (w % 2 == 0 || h % 2 == 0 || n == 1) {\r\n            if (getCutedPaper(w, h) >= n || n == 1)\r\n                printf(\"YES\\n\");\r\n            else\r\n                printf(\"NO\\n\");\r\n        } else\r\n            printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint getCutedPaper (int w, int h) {\r\n    int paper = 1;\r\n    while (w % 2 == 0 || h % 2 == 0) {\r\n        if (w % 2 == 0) {\r\n            w /= 2;\r\n            paper = paper * 2;\r\n        } else if (h % 2 == 0) {\r\n            h /= 2;\r\n            paper = paper * 2;\r\n        }\r\n    }\r\n    return paper;\r\n}\r\n\r\nmain () {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int w, h, n;\r\n    for (int i = 0; i < t; i++) {\r\n        scanf(\"%d\", &w);\r\n        scanf(\"%d\", &h);\r\n        scanf(\"%d\", &n);\r\n        if (w % 2 == 0 || h % 2 == 0 || n == 1) {\r\n            if (getCutedPaper(w, h) >= n || n == 1)\r\n                printf(\"YES\\n\");\r\n            else\r\n                printf(\"NO\\n\");\r\n        } else\r\n            printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.41935483870967744, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "f6deca6781b89fadd4c0d2b6abbef1f1", "bug_code_uid": "1188a98880cfd85874726233af022736", "src_uid": "f8315dc903b0542c453cab4577bcb20d", "apr_id": "46d5293d18b25237308816445fd7ab89", "difficulty": 1200, "tags": ["implementation", "dfs and similar", "brute force", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N 100\n\nint main() {\n\tstatic int table[N + 1][N], kk[N + 1];\n\tint n, m, i, cnt;\n\n\tscanf(\"%d%d\", &n, &m);\n\twhile (m-- > 0) {\n\t\tint a, b;\n\n\t\tscanf(\"%d%d\", &a, &b);\n\t\ttable[a][kk[a]++] = b;\n\t\ttable[b][kk[b]++] = a;\n\t}\n\tcnt = 0;\n\twhile (1) {\n\t\tint kicked;\n\n\t\tkicked = 0;\n\t\tfor (i = 1; i <= n; i++)\n\t\t\tif (kk[i] == 1) {\n\t\t\t\tkk[table[i][0]]--;\n\t\t\t\tkk[i]--;\n\t\t\t\tkicked = 1;\n\t\t\t}\n\t\tif (!kicked)\n\t\t\tbreak;\n\t\telse\n\t\t\tcnt++;\n\t}\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n", "fixed": "/* Coached by rainboy */\n#include <stdio.h>\n\n#define N 100\n\nint main() {\n\tstatic int dd[N];\n\tstatic char aa[N][N];\n\tint n, m, i, j, cnt, updated;\n\n\tscanf(\"%d%d\", &n, &m);\n\twhile (m-- > 0) {\n\t\tscanf(\"%d%d\", &i, &j), i--, j--;\n\t\tdd[i]++, dd[j]++;\n\t\taa[i][j] = aa[j][i] = 1;\n\t}\n\tcnt = 0;\n\twhile (1) {\n\t\tupdated = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (dd[i] == 1) {\n\t\t\t\tdd[i] = -1;\n\t\t\t\tupdated = 1;\n\t\t\t}\n\t\tif (!updated)\n\t\t\tbreak;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (dd[i] == -1)\n\t\t\t\tfor (j = 0; j < n; j++)\n\t\t\t\t\tif (aa[i][j] == 1) {\n\t\t\t\t\t\taa[i][j] = aa[j][i] = 0;\n\t\t\t\t\t\tdd[j]--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\tcnt++;\n\t}\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9749739311783108, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "54b01ece7a8e0822cb1bf6291ef3fe6f", "bug_code_uid": "04420f7bfaed0d9fca76f3a7f2e104ce", "src_uid": "6422d76f71702e77808b1cc041962bb8", "apr_id": "e40c1b1624f0871e3a1a2db7a9490310", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid max(int *ax, int *bx)\n{\n\tif (*ax >= *bx)\n\t\treturn;\n\telse\n\t{\n\t\tint t = *bx;\n\t\t*bx = *ax;\n\t\t*ax = t;\n\t}\n\treturn;\n}\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tint output[t];\n\tfor (int i = 0; i < t; i++)\n\t{\n\t\tprintf(\"\\n\");\n\t\tint x_1, y_1, x_2, y_2, xf, yf;\n\t\tscanf(\"%d %d\", &x_1, &y_1);\n\t\tscanf(\"%d %d\", &x_2, &y_2);\n\t\tscanf(\"%d %d\", &xf, &yf);\n\t\tint dist;\n\t\tmax(&x_1, &x_2);\n\t\tmax(&y_1, &y_2);\n\t\tif (xf!=x_1 && xf!=x_2 && yf!=y_1 && yf!=y_2)\n\t\t{\n\t\t\tdist = x_1 - x_2 + y_1 - y_2;\n\t\t}\n\t\telse if (xf == x_1 && xf == x_2 && ((yf < y_2) || (yf>y_1)))\n\t\t{\n\t\t\tdist = x_1 - x_2 + y_1 - y_2;\n\t\t}\n\t\telse if (yf == y_1 && yf == y_2 && ((xf < x_2) || (xf>x_1)))\n\t\t{\n\t\t\tdist = x_1 - x_2 + y_1 - y_2;\n\t\t}\n\t\telse if (xf == x_1 && xf == x_2)\n\t\t{\n\t\t\tdist = 2 + y_1 - y_2;\n\t\t}\n\t\telse if (yf == y_1 && yf == y_2)\n\t\t{\n\t\t\tdist = 2 + x_1 - x_2;\n\t\t}\n\t\toutput[i] = dist;\n\t}\n\tfor (int j = 0; j < t; j++)\n\t{\n\t\tprintf(\"%d\\n\", output[j]);\n\t}\n}", "fixed": "#include <stdio.h>\n\nvoid max(int *ax, int *bx)\n{\n\tif (*ax >= *bx)\n\t\treturn;\n\telse\n\t{\n\t\tint t = *bx;\n\t\t*bx = *ax;\n\t\t*ax = t;\n\t}\n\treturn;\n}\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tint output[t];\n\tfor (int i = 0; i < t; i++)\n\t{\n\t\tprintf(\"\\n\");\n\t\tint x_1, y_1, x_2, y_2, xf, yf;\n\t\tscanf(\"%d %d\", &x_1, &y_1);\n\t\tscanf(\"%d %d\", &x_2, &y_2);\n\t\tscanf(\"%d %d\", &xf, &yf);\n\t\tint dist;\n\t\tmax(&x_1, &x_2);\n\t\tmax(&y_1, &y_2);\n\t\tif (xf!=x_1 && xf!=x_2 && yf!=y_1 && yf!=y_2)\n\t\t{\n\t\t\tdist = x_1 - x_2 + y_1 - y_2;\n\t\t}\n\t\telse if (xf == x_1 && xf == x_2 && ((yf < y_2) || (yf>y_1)))\n\t\t{\n\t\t\tdist = x_1 - x_2 + y_1 - y_2;\n\t\t}\n\t\telse if (yf == y_1 && yf == y_2 && ((xf < x_2) || (xf>x_1)))\n\t\t{\n\t\t\tdist = x_1 - x_2 + y_1 - y_2;\n\t\t}\n\t\telse if (xf == x_1 && xf == x_2)\n\t\t{\n\t\t\tdist = 2 + y_1 - y_2;\n\t\t}\n\t\telse if (yf == y_1 && yf == y_2)\n\t\t{\n\t\t\tdist = 2 + x_1 - x_2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdist = x_1 - x_2 + y_1 - y_2;\n\t\t}\n\t\toutput[i] = dist;\n\t}\n\tfor (int j = 0; j < t; j++)\n\t{\n\t\tprintf(\"%d\\n\", output[j]);\n\t}\n}"}
{"similarity_score": 0.9723502304147466, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "3a7a9d20daa7152c855d14eb3827bec5", "bug_code_uid": "881eeda3187df402257c8fb4a1c1ed4a", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "753ee4718d97176d9d27ac245df139bb", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n int n,i,j,sum=0;\n scanf(\"%d\",&n);\n float x;\n int a[n];\n for(i=0;i<n;i++)\n {\n     scanf(\"%d\",&a[i]);\n }\n for(j=0;j<n;j++)\n {\n     sum=a[j]+sum;\n }\n x=sum/n;\n printf(\"%f\",x);\n return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n int n,i,j;\n scanf(\"%d\",&n);\n float x,sum=0;\n int a[n];\n for(i=0;i<n;i++)\n {\n     scanf(\"%d\",&a[i]);\n }\n for(j=0;j<n;j++)\n {\n     sum=a[j]+sum;\n }\n x=sum/n;\n printf(\"%f\",x);\n return 0;\n}"}
{"similarity_score": 0.5499058380414312, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "310c8e39f6ac454d6d7d64580c7ec0db", "bug_code_uid": "09d8a7227611f2c948c1fadf8b4c8cce", "src_uid": "34aa41871ee50f06e8acbd5eee94b493", "apr_id": "a5c1691fad1f7b23608254f64cf92067", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() \n{   long long int r[t],g[t],b[t],max[t],x[t];\n    int i,t; scanf(\"%d\\n\",&t); \n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld %lld %lld\",&r[i],&g[i],&b[i]);\n        x[i]=r[i]+b[i]+g[i];\n    }  \n    for(i=0;i<t;i++)\n    {\n        if(r[i]>=b[i]&&r[i]>=g[i])\n        max[i]=r[i];\n        else if(b[i]>=r[i]&&b[i]>=g[i])\n        max[i]=b[i];\n        else if(g[i]>=r[i]&&g[i]>=b[i])\n        max[i]=g[i];\n        if(2*max[i]-1<=x[i])\n        printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n \nint main() \n{   int i,t;\n    long long int r,g,b,max,x;\n     scanf(\"%d\\n\",&t); \n    for(i=0;i<=t-1;i++)\n    {\n        scanf(\"%lld %lld %lld\",&r,&g,&b);\n        x=r+b+g;\n        if(r>=b&&r>=g)\n        max=r;\n        else if(b>=r&&b>=g)\n        max=b;\n        else if(g>=r&&g>=b)\n        max=g;\n        if(2*max-1<=x)\n        printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.5387323943661971, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "95b791ecd65a1b54938710ca822d1bc6", "bug_code_uid": "9e0c495e3dc1b7841aac1c68419b8319", "src_uid": "091e91352973b18040e2d57c46f2bf8a", "apr_id": "d0e7c189852e9414ee5d2c45ea52dad8", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int a,b,c,n,i;\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++){\nscanf(\"%lld %lld %lld\",&a,&b,&c);\n        printf(\"%lld\\n\",c);\n\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a,b,c,i,s=0,n;\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%lld %lld %lld\",&a,&b,&c);\n        if(c<a){\n            printf(\"%lld\\n\",c);\n        }\n        else if(c>b){\n            printf(\"%lld\\n\",c);\n        }\n        else{\n            s=c*((b/c)+1);\n            printf(\"%lld\\n\",s);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9766233766233766, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "f36223d57554822b65e086867772c27a", "bug_code_uid": "ef95b5c27fcf05f5539d73fc6d217ac8", "src_uid": "f9f803c6850da1838d62a0cf85bb13f2", "apr_id": "e95165827315bf052c9b583a00597f84", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        printf(\"%d %d %d %d\",1,n-3,1,1);\r\n    }\r\n    return 0;\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        printf(\"%d %d %d %d\\n\",n-3,1,1,1);\r\n    }\r\n    return 0;\r\n}\r\n "}
{"similarity_score": 0.9977528089887641, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "09491c6c4616172019a042156250ffc4", "bug_code_uid": "a500cfeb0d2f9aa8d79e1d58d2aca8fe", "src_uid": "341555349b0c1387334a0541730159ac", "apr_id": "271dd3dbb8e05a29dfe02bc1e1e7c88b", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=1;i<=t;i++){\n        int n;\n        scanf(\"%d\",&n);\n        int a[n],x,r;\n        for(int j=0;j<n;j++)\n          scanf(\"%d\",&a[j]);\n        int k;  \n           x=a[0]+a[1];       \n    for(k=2;k<n;k++){\n       if(a[k]>=x){\n         r=k+1;\n          break;\n       }  \n    }\n       if(k==n)\n        printf(\"%d\",-1);\n       else \n       printf(\"%d %d %d\\n\",1,2,r); \n    }\n}", "fixed": "#include<stdio.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=1;i<=t;i++){\n        int n;\n        scanf(\"%d\",&n);\n        int a[n],x,r;\n        for(int j=0;j<n;j++)\n          scanf(\"%d\",&a[j]);\n        int k;  \n           x=a[0]+a[1];       \n    for(k=2;k<n;k++){\n       if(a[k]>=x){\n         r=k+1;\n          break;\n       }  \n    }\n       if(k==n)\n        printf(\"%d\\n\",-1);\n       else \n       printf(\"%d %d %d\\n\",1,2,r); \n    }\n}"}
{"similarity_score": 0.805464480874317, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "83368020cde8d44e61db1ef599046bab", "bug_code_uid": "b7c67746cca40d35201afa260fe4ff9c", "src_uid": "7749f37aa9bf88a00013557e14342952", "apr_id": "4cb0f6b2e71a53b26ec34d65bd823b90", "difficulty": 800, "tags": ["combinatorics", "implementation", "constructive algorithms", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include<stdio.h>\nint fact(int a)\n{\n        int i,x=1,y,div,y1=1;\n        for(i=2;i<=a;i++)\n        {\n            x=x*i;\n        }\n        y=a-2;\n        for(i=2;i<=y;i++)\n        {\n            y1=y1*i;\n        }\n        div=(x)/(y1*2);\n        return div;\n}\nchar str[105][105];\nint main()\n\n{\n    int i,j,c1=0,c2=0,n,z;\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&str[i]);\n    }\n\n    for(i=0;i<n;i++)\n    {\n        c1=0;\n        for(j=0;j<n;j++)\n        {\n            if(str[i][j]=='C')\n            {\n                c1++;\n            }\n        }\n        if(c1>1)\n        {\n            z=fact(c1);\n            c2=c2+z;}\n    }\n    for(i=0;i<n;i++)\n    {\n        c1=0;\n        for(j=0;j<n;j++)\n        {\n            if(str[j][i]=='C')\n            {\n                c1++;\n            }\n        }\n        if(c1>1)\n        {\n            z=fact(c1);\n            c2=c2+z;}\n    }\n    printf(\"%d\",c2);\n}\n", "fixed": "\n#include<stdio.h>\nint fact(int a)\n{\n        long long int k,x=1;\n        int div;\n        for(k=a;k>=a-1;k--)\n        {\n            x=x*k;\n        }\n        div=(x)/(2);\n        return div;\n}\n\nchar str[105][105];\n\nint main()\n\n{\n    long long int i,j,c1=0,n,z;\n    long long int c2=0;\n    scanf(\"%I64d\",&n);\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&str[i]);\n    }\n\n    for(i=0;i<n;i++)\n    {\n        c1=0;\n        for(j=0;j<n;j++)\n        {\n            if(str[i][j]=='C')\n            {\n                c1++;\n            }\n        }\n        if(c1>1)\n        {\n            z=fact(c1);\n            c2=c2+z;\n        }\n    }\n\n\n    for(i=0;i<n;i++)\n    {\n        c1=0;\n        for(j=0;j<n;j++)\n        {\n            if(str[j][i]=='C')\n            {\n                c1++;\n            }\n        }\n        if(c1>1)\n        {\n            z=fact(c1);\n            c2=c2+z;\n        }\n    }\n    printf(\"%I64d\",c2);\n}\n"}
{"similarity_score": 0.9795918367346939, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7568b07b138c6999a4d348b457e7e318", "bug_code_uid": "499ddbf37e9113ff2cd29b0b2c8fd0a4", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "c590440801ce43ba889db16c288f89ef", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\tint n,d,i,count=0,p;\n\tscanf(\"%d%d\",&n,&d);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<n-1;i++)\n\t{\tif(a[i+1]<=a[i])\n\t\t{\twhile(a[i+1]<=a[i])\n\t\t\t{\tp=(a[i]-a[i+1])/d+1;\n\t\t\t\ta[i+1]+=p*d;\n\t\t\t}\n\t\t}\n\tcount+=p;\n\t}\n\tprintf(\"%d\",count);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\tint n,d,i,count=0,p;\n\tscanf(\"%d%d\",&n,&d);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<n-1;i++)\n\t{\tif(a[i+1]<=a[i])\n\t\t{\twhile(a[i+1]<=a[i])\n\t\t\t{\tp=(a[i]-a[i+1])/d+1;\n\t\t\t\ta[i+1]+=p*d;\n\t\t\t}\n\t\t}\n\t\telse\tp=0;\n\tcount+=p;\n\t}\n\tprintf(\"%d\",count);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8773584905660378, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "255f3897398a08f3ee15e3446d87d18a", "bug_code_uid": "e29998a8420398f0c7fdee405b4bc55b", "src_uid": "43b8e9fb2bd0ec5e0250a33594417f63", "apr_id": "df1e76f0d17e6efecae0ff5f515133fb", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{ long int t,n,m;\n\tscanf(\"%ld\",&t);\n\twhile(t!=0) {\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tif(n%m==0||n==1) printf(\"%ld\\n\",n); else printf(\"%ld\\n\",(n/m)*m+(m/2));\n\t\tt--;\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{ long int t,n,m;\n\tscanf(\"%ld\",&t);\n\twhile(t!=0) {\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tif(n%m==0||n==1) printf(\"%ld\\n\",n); else {if(n%m<m/2) printf(\"%ld\\n\",(n/m)*m+n%m); else printf(\"%ld\\n\",(n/m)*m+m/2);}\n\t\tt--;\n\t}\n}\n"}
{"similarity_score": 0.9511228533685601, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c4a7a47d46e236c5cbeb0709f5714879", "bug_code_uid": "5a2a1fa483cd3e4f3fb3d060c1f7e6c0", "src_uid": "f9287ed16ef943006ffb821ba3678545", "apr_id": "80bc8878f14b889f19b0dbf5357c2377", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\n#define min(a,b) (((a) < (b)) ? (a) : (b))\r\n\r\nint solve() {\r\n    int n, m; scanf(\"%d%d\", &n, &m);\r\n    int m1 = n - 1; int m2 = m - 1;\r\n    int s1 = 1; int s2 = min(n, m) - 1;\r\n\r\n    return (m1 + m2 + s1 + s2);\r\n}\r\n\r\nint main() {\r\n    int t; scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++) printf(\"%i\\n\", solve());\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\n#define min(a,b) (((a) < (b)) ? (a) : (b))\r\n\r\nint solve() {\r\n    int n, m; scanf(\"%d%d\", &n, &m);\r\n    if (n == 1 && m == 1) return 0;\r\n    int m1 = n - 1; int m2 = m - 1;\r\n    int s1 = 1; int s2 = min(n, m) - 1;\r\n\r\n    return (m1 + m2 + s1 + s2);\r\n}\r\n\r\nint main() {\r\n    int t; scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++) printf(\"%i\\n\", solve());\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9411764705882353, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "dfc8738502d8213421ae2bcd283ee9f0", "bug_code_uid": "152f5fc80a29d6f2cec1b2ad76873edb", "src_uid": "dd2cd365d7afad9c2b5bdbbd45d87c8a", "apr_id": "0de0495ef165106bb272c2a4edac6941", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,counts=1,j,i;\n        scanf(\"%d\",&n);\n        int A[n];\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&A[i]);\n        }\n        for(i=0;i<n;i++)\n        {\n            for(j=i;j<n;j++)\n            {\n                if(A[i]==A[j]-1)\n                {\n                    counts = 2;\n                    break;\n                }\n\n            }\n\n        }\n        printf(\"%d\\n\",counts);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,counts=1,j,i;\n        scanf(\"%d\",&n);\n        int A[n],B[n];\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&A[i]);\n        }\n        for(i=0;i<n;i++)\n        {\n            for(j=0;j<n;j++)\n            {\n                B[j] = A[j] + 1;\n\n                if(A[i]==B[j])\n                {\n                    counts = 2;\n                    break;\n                }\n\n            }\n\n        }\n        printf(\"%d\\n\",counts);\n    }\n}\n"}
{"similarity_score": 0.185121107266436, "equal_cnt": 15, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "f50d030b9b785c70a5cb9098be367e12", "bug_code_uid": "36065b8a74c8ff71a8a32384eab33e48", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "181c4e5392078431eb81dcbc62088f1e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nusing namespace std;\n \nint main() {\n    int sum=0,dif=0,n,a[1000],b[1000],i;\n    scanf(\"%d\", &n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", &b[i]);\n    }\n    for(i=0;i<n;i++){\n        dif=fabs(a[i]-b[i]);\n        if(dif<6)\n            sum+=dif;\n        \n        else {\n            dif=10-fabs(a[i]-b[i]);\n            sum+=dif;\n        }\n    }\n    printf(\"%d \", sum);\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\nvoid str2int(char str[], int arr[]) {\n    int i, n;\n    n = strlen(str);\n    for(i = 0; i < n; i++) {\n        arr[i] = ((int)str[i] - 48);\n    }\n}\n\nint calcstep(int i, int f) {\n    int comp, m;\n    comp = fabs(i - f);\n    if(comp <= 5) {\n        m = comp;\n    } else {\n        m = (10 - comp);\n    }\n    return m;\n}\n\nint main() {\n    int n, m = 0, i;\n    scanf(\"%d\", &n);\n    int osInt[n], rsInt[n];\n    char os[n], rs[n];\n    scanf(\"%s\\n%s\", &os, &rs);\n    str2int(os, &osInt);\n    str2int(rs, &rsInt);\n    for(i = 0; i < n; i++) {\n        m += calcstep(osInt[i], rsInt[i]);\n    }\n    printf(\"%d\", m);\n    return 0;\n}"}
{"similarity_score": 0.9426152398871119, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "323e0969cbe537a7ad9470903036b2b4", "bug_code_uid": "5427e2fc388eec58edcc935126460482", "src_uid": "f55c824d8db327e531499ced6c843102", "apr_id": "dfb22a6ca2a845305c22a861a8d51447", "difficulty": 900, "tags": ["implementation", "dfs and similar", "brute force", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nchar a[501][501],d;\nint n,m,i,j;\nscanf(\"%d%d\",&n,&m);\nd=getchar();\nfor(i=0;i<n;i++)\n{\ngets(a[i]);\n}\nfor(i=0;i<n;i++)\nfor(j=0;j<m;j++)\n{\nif((a[j][i]=='W'&&a[j+1][i]=='S')||(a[j][i]=='S'&&a[j+1][i]=='W'))\n{\nprintf(\"No\");\nreturn 0;\n}\nif((a[i][j]=='W'&&a[i][j+1]=='S')||(a[i][j]=='S'&&a[i][j+1]=='W'))\n{\nprintf(\"No\");\nreturn 0;\n}\n}\nprintf(\"Yes\\n\");\nfor(i=0;i<n;i++){\nfor(j=0;j<m;j++)\n{\nif(a[i][j]=='.')\nprintf(\"D\");\nelse\nprintf(\"%c\",a[i][j]);\n}\nprintf(\"\\n\");\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nchar a[501][501],d;\nint n,m,i,j,x;\nscanf(\"%d%d\",&n,&m);\nd=getchar();\nif(m>n)\nx=m;\nelse\nx=n;\nfor(i=0;i<n;i++)\n{\ngets(a[i]);\n}\nfor(i=0;i<x;i++)\nfor(j=0;j<x;j++)\n{\nif((a[j][i]=='W'&&a[j+1][i]=='S')||(a[j][i]=='S'&&a[j+1][i]=='W'))\n{\nprintf(\"No\");\nreturn 0;\n}\nif((a[i][j]=='W'&&a[i][j+1]=='S')||(a[i][j]=='S'&&a[i][j+1]=='W'))\n{\nprintf(\"No\");\nreturn 0;\n}\n}\nprintf(\"Yes\\n\");\nfor(i=0;i<n;i++){\nfor(j=0;j<m;j++)\n{\nif(a[i][j]=='.')\nprintf(\"D\");\nelse\nprintf(\"%c\",a[i][j]);\n}\nprintf(\"\\n\");\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.9487750556792873, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "fa01b4faf1055def34a1d6083d8164fa", "bug_code_uid": "b89d01917af31de8a9c470839f9af21e", "src_uid": "f44041707694eece7de0cc7c087f57d9", "apr_id": "256e59f2ffda2d7edc0c038929895063", "difficulty": 1900, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint value(int* A,int n,int m,int b)\n{\n    int B[n];\n    for(int i=0; i<n; i++)\n    {\n        B[i]=0;\n    }\n    for(int i=0; i<n; i++)\n    {\n        if((A[i]-b-1)%m==0)\n        {\n            int s=(A[i]-b-1)/m;\n            if(i-s<0)\n            {\n               int t=i-s;\n                B[n+t]++;\n            }\n            else{\n                B[i-s]++;\n            }\n            \n        }\n    }\n    int count=n;\n    for(int i=0; i<n; i++)\n    {\n        if(n-B[i]+i<count)\n        {\n            count=n-B[i]+i;\n        }\n    }\n    return count;\n}\nint main()\n{\n    int n,m,sum=0;;\n    scanf(\"%d%d\",&n,&m);\n    int A[m][n];\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0; j<m; j++)\n        {\n            scanf(\"%d\",&A[j][i]);\n        }\n    }\n    for(int i=0; i<m; i++)\n    {\n        sum+=value(A[i],m,n,i);\n    }\n    printf(\"%d\",sum);\n}", "fixed": "#include<stdio.h>\nint value(int* A,int n,int m,int b)\n{\n    int B[n];\n    for(int i=0; i<n; i++)\n    {\n       // printf(\"%d \",A[i]);\n        B[i]=0;\n    }\n   // printf(\"\\n\");\n    for(int i=0; i<n; i++)\n    {\n        if((A[i]-b-1)%m==0&&(A[i]-b-1)/m<=n-1)\n        {\n            int s=(A[i]-b-1)/m;\n            if(i-s<0)\n            {\n               int t=i-s;\n                B[n+t]++;\n            }\n            else{\n                B[i-s]++;\n            }\n            \n        }\n    }\n    int count=n;\n    for(int i=0; i<n; i++)\n    {\n        if(n-B[i]+i<count)\n        {\n            count=n-B[i]+i;\n        }\n    }\n    return count;\n}\nint main()\n{\n    int n,m,sum=0;;\n    scanf(\"%d%d\",&n,&m);\n    int A[m][n];\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0; j<m; j++)\n        {\n            scanf(\"%d\",&A[j][i]);\n        }\n    }\n    for(int i=0; i<m; i++)\n    {\n        sum+=value(A[i],n,m,i);\n        \n    }\n    printf(\"%d\",sum);\n}"}
{"similarity_score": 0.7171428571428572, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "2327b4051da29811e9d135d8a393d593", "bug_code_uid": "946c4c207b54789761469274c4a4f163", "src_uid": "205b2332c176b758e843473e8d357475", "apr_id": "84a29d9197e273048a612e763c4cf283", "difficulty": 1200, "tags": ["binary search", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main()\n{\n\n  int array[100], n, c, d,i, swap,temp=0;\n\n  scanf(\"%d\", &n);\n\n  for (c = 0; c < n; c++)\n    scanf(\"%d\", &array[c]);\n\n  for (c = 0 ; c < n - 1; c++)\n  {\n    for (d = 0 ; d < n - c - 1; d++)\n    {\n      if (array[d] > array[d+1]) /* For decreasing order use < */\n      {\n        swap       = array[d];\n        array[d]   = array[d+1];\n        array[d+1] = swap;\n      }\n    }\n  }\n  for(i=0;i<n/4;i++)\n  {\n     temp=array[n/2+i];\n     array[n/2+i]=array[n-1-i];\n     array[n-1-i]=temp;\n  }\n  for(i=0;i<n;i++)   { printf(\"%d \",array[i]); }\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n\n\nint main()\n{\n\n  int array[100], n, c, d,i, swap,temp=0;\n  int res[100];\n  int k=0;\n\n  scanf(\"%d\", &n);\n\n  for (c = 0; c < n; c++)\n    scanf(\"%d\", &array[c]);\n\n  for (c = 0 ; c < n - 1; c++)\n  {\n    for (d = 0 ; d < n - c - 1; d++)\n    {\n      if (array[d] > array[d+1]) /* For decreasing order use < */\n      {\n        swap       = array[d];\n        array[d]   = array[d+1];\n        array[d+1] = swap;\n      }\n    }\n  }\n  int j=n-1;\n for(i=0;i<n;i++)\n {\n     if(i%2==0&&j>=n/2)\n     {//printf(\"%d\\n\",j);\n         res[j]=array[i];\n         --j;\n     }\n     if(i%2==1&&k<=n/2)\n     { //printf(\"%d\\n\",k);\n         res[k]=array[i];\n         k++;\n     }\n\n }\n //printf(\"bla\\n\");\n    // if(n%2==1)  res[n/2]=array[n/2];\n  for(i=0;i<n;i++)   { printf(\"%d \",res[i]); }\n  //printf(\"bla\\n\");\n  return 0;\n}\n"}
{"similarity_score": 0.31749049429657794, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "a85046ffb440465dde3d34753851e7b8", "bug_code_uid": "bb02c80ec7f5ca71c95edb8e33f27806", "src_uid": "288f147bb8a3c30b0bb712a01c65109b", "apr_id": "c5dc2448ee9e07127c054711bdbf6d47", "difficulty": 800, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint ao(int a[],int n){\r\n    int i;\r\n    for(i=0;i<n;i++){\r\n        if(a[i]==a[i+1]){\r\n            return 1;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nint main(){\r\n    int n,k,j,t,i;\r\n    scanf(\"%d\",&t);\r\n    for(k=0;k<t;k++){\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(i=0;i<n;i++){\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        \r\n        if(ao(a,n)){\r\n            printf(\"NO\\n\");\r\n        }\r\n        else{printf(\"YES\\n\");\r\n        }\r\n        \r\n\r\n        }\r\n\r\n}", "fixed": "#include <stdio.h>\r\nint  sort(int n,int a[]){\r\n\tint i,j,temp;\r\n\tfor(i=0;i<n;i++){\r\n\t\tfor(j=0;j<n-1;j++){\r\n\t\t\tif(a[j]>a[j+1]){\r\n\t\t\t\ttemp=a[j+1];\r\n\t\t\t\ta[j+1]=a[j];\r\n\t\t\t\ta[j]=temp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(i=0;i<n;i++){\r\n\t\tif(a[i]==a[i+1]){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\treturn 1;\r\n}\r\nint main(void) {\r\n\tint T,n,i,j;\r\n\tscanf(\"%d\",&T);\r\n\twhile(T--){\r\n\t\tscanf(\"%d\",&n);  \r\n\t\tint a[n];\r\n\t\tfor(i=0;i<n;i++){  \r\n\t    scanf(\"%d\",&a[i]);\r\n\t    }\r\n\t    \r\n\t\tprintf(\"\\n\");\r\n\t\tif(sort(n,a)){\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t   \r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.4964336661911555, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "8dac84d29339611d24a47fcb2c44abf0", "bug_code_uid": "cf67569a2ed64d0fa80191dea294994e", "src_uid": "101fec8d8e169f941e71281048468121", "apr_id": "307bc8408a1525a2f6ba86fb7ed55d05", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//practice with dukkha\n#include<stdio.h>\nint main()\n{\n    int a;\n    scanf(\"%d\",&a);\n    int arr[a];\n    for(int i=0;i<a;i++)\n        scanf(\"%d\",&arr[i]);\n    int max=-1;\n    for(int i=0;i<a;i++)\n    {\n        for(int j=i+1;j<a;j++)\n        {\n            if(arr[i]!=arr[j])\n            {\n                int l=j-i;\n                if(l>max)\n                    max=l;\n            }\n        }\n    }\n    printf(\"%d\",max);\n    return 0;\n}", "fixed": "//practice with dukkha\n#include<stdio.h>\nint main()\n{\n    int a;\n    scanf(\"%d\",&a);\n    int arr[a];\n    for(int i=0;i<a;i++)\n        scanf(\"%d\",&arr[i]);\n    int i=a-1;\n    while(arr[i]==arr[0] && arr[i]==arr[a-1-i])\n        i--;\n    printf(\"%d\",i);\n    return 0;\n}"}
{"similarity_score": 0.7662753468516542, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "ae6e50a8f8729ef44f8736347e11c72e", "bug_code_uid": "1502a14530bf2a29d11b922b102b46b9", "src_uid": "5e5dbd70c7fcedf0f965aed5bafeb06c", "apr_id": "1f1c871a4535b91b341756c97b4e91f2", "difficulty": 800, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,k,n;\n    char s[100000];\n    scanf(\"%d\",&n);\n    if(n>=1&&n<=100)\n    {\n\n    scanf(\"%s\",s);\n    j=0;\n    for(i=0;i<n;i++)\n    {\n        if(s[i]=='n')\n        {\n\n            j++;\n\n        }\n\n\n    }\n     for(k=0;k<j;k++)\n     {\n         printf(\"1 \");\n     }\n     for(i=0;i<n;i++)\n    {\n        if(s[i]=='z')\n        {\n\n           printf(\"0 \");\n\n        }\n\n\n    }\n    }\n     return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,k,n,m;\n    char s[100000];\n    scanf(\"%d\",&n);\n    if(n>=1&&n<=100000)\n    {\n\n        scanf(\"%s\",s);\n\n        j=0;\n        for(i=0; i<n; i++)\n        {\n            if(s[i]=='n')\n            {\n\n                j++;\n\n            }\n        }\n        for(k=0; k<j; k++)\n        {\n            printf(\"1 \");\n        }\n        for(i=0; i<n; i++)\n        {\n            if(s[i]=='z')\n            {\n                printf(\"0 \");\n\n            }\n\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6372294372294373, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "beed9049ae3c5590f1ee3b9ce9fbecd3", "bug_code_uid": "5c9629f9763f67da2ec66a8239e5cc62", "src_uid": "45cf60f551bd5cbb1f3df6ac3004b53c", "apr_id": "346a07e3b84c1f4e50e2915e29fb0628", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        if(n%3==0){\r\n            printf(\"%d %d %d\\n\",n/3,n/3+1,n/3-1);\r\n        }\r\n        if(n%3==1){\r\n            printf(\"%d %d %d\\n\",n/3,n/3+2,n/3-1);\r\n        }\r\n        else{\r\n            printf(\"%d %d %d\\n\",n/3+1,n/3+2,n/3-1);\r\n        }\r\n        return 0;\r\n    }\r\n}#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        if(n%3==0){\r\n            printf(\"%d %d %d\\n\",n/3,n/3+1,n/3-1);\r\n        }\r\n        if(n%3==1){\r\n            printf(\"%d %d %d\\n\",n/3,n/3+2,n/3-1);\r\n        }\r\n        else{\r\n            printf(\"%d %d %d\\n\",n/3+1,n/3+2,n/3-1);\r\n        }\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        if(n%3==0){\r\n            printf(\"%d %d %d\\n\",n/3,n/3+1,n/3-1);\r\n        }\r\n        if(n%3==1){\r\n            printf(\"%d %d %d\\n\",n/3,n/3+2,n/3-1);\r\n        }\r\n        if(n%3==2){\r\n            printf(\"%d %d %d\\n\",n/3+1,n/3+2,n/3-1);\r\n        }\r\n    }\r\n}\r\n"}
{"similarity_score": 0.984375, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e0ec5cbe50332c2b2837a29cce125acd", "bug_code_uid": "560efdd2c5d2d6566cdc43e163995b10", "src_uid": "ec89860dacb5a11b3a2273d2341b07a1", "apr_id": "18de1b3865a840501e70d7e4694a6f18", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\tint n, num[1000];\n\tscanf(\"%d\", &n);\n\tfor(int i = 0; i < n; i ++)\n\t\tscanf(\"%d\", &num[i]);\n\tfor(int i = 0; i < n; i ++)\n\t\tprintf(\"%d\\n\", num[i]/2);\n\treturn;\n}", "fixed": "#include <stdio.h>\n\nint main(){\n\tint n, num[1000];\n\tscanf(\"%d\", &n);\n\tfor(int i = 0; i < n; i ++)\n\t\tscanf(\"%d\", &num[i]);\n\tfor(int i = 0; i < n; i ++)\n\t\tprintf(\"%d\\n\", (num[i] + 1)/2);\n\treturn;\n}"}
{"similarity_score": 0.7085714285714285, "equal_cnt": 6, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "23b45ee9e5b83837dbe39e4199b6ba13", "bug_code_uid": "9976f68abfb99ec312ba9965fe5534e5", "src_uid": "0ba97bcfb5f539c848f2cd097b34ff33", "apr_id": "10ce7de8f9c945883a0d967dbafcf18f", "difficulty": 1200, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,sum2,min,f,c,r,o,sum1,sum=0,y,a,b,count1=0,a2,b2;\nchar k[100000];\nscanf(\"%lld\",&test);\nwhile(test--){\nscanf(\"%lld%s\",&n,k);\nfor(i=0;i<strlen(k);){\n    if(k[i]=='<'){\n        break;\n    }\n}\nfor(j=strlen(k);j>=0;j++){\n    if(k[i]=='>'){\n        break;\n    }\n}\nif(i-1>strlen(k)-j){\n    printf(\"%lld\",strlen(k)-j);\n}else{\n    printf(\"%lld\",i-1);\n}\n}\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,sum2,min,f,c,r,o,sum1,sum=0,y,a,b,count1=0,a2,b2;\nchar k[100000];\nscanf(\"%lld\",&test);\nwhile(test--){\nscanf(\"%lld%s\",&n,&k[1]);\n\nfor(i=1;i<=n;i++){\n    if(k[i]=='>'){\n        break;\n    }\n}\nfor(j=n;j>=1;j--){\n    if(k[j]=='<'){\n        break;\n    }\n}\nif((i-1)>(n-j)){\n    printf(\"%lld\\n\",(n-j));\n}else{\n    printf(\"%lld\\n\",(i-1));\n}\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.9493087557603687, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "33576252c3555a7d5f98e327b7813227", "bug_code_uid": "05b57b351b141fbb3be941e2131b7625", "src_uid": "5d11fa8528f1dc873d50b3417bef8c79", "apr_id": "b94f19045c127b7a7f92a06d854ef999", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint h[1000], i, j, n, m, M;\n\nint main(void) {\n\tscanf(\"%d\", &n); for (i=0; i<n; ++i) scanf(\"%d\", &h[i]);\n\tfor (i=0; i<n; ++i) {\n\t\tint t=1;\n\t\tfor (j=i-1; j>=0&&h[j]<=h[j+1]; --j) ++t;\n\t\tfor (j=i+1; j<n&&h[j]<=h[i-1]; ++j) ++t;\n\t\tif (t>m) { m=i; M=t; }\n\t}\n\tprintf(\"%d\\n\", M);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint h[1000], i, j, n, m, M;\n\nint main(void) {\n\tscanf(\"%d\", &n); for (i=0; i<n; ++i) scanf(\"%d\", &h[i]);\n\tfor (i=0; i<n; ++i) {\n\t\tint t=1;\n\t\tfor (j=i-1; j>=0&&h[j]<=h[j+1]; --j) ++t;\n\t\tfor (j=i+1; j<n&&h[j]<=h[j-1]; ++j) ++t;\n\t\tif (t>M) { m=i; M=t; }\n\t}\n\tprintf(\"%d\\n\", M);\n\texit(EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.9043348281016442, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "88c56e8132a9ffb84da2246f7b291ed7", "bug_code_uid": "19b3fd5a1931d4bc8971a2757678562b", "src_uid": "41b3e726b8146dc733244ee8415383c0", "apr_id": "7b5d6c2ac45257f07da79bc5aa13797b", "difficulty": 1500, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h> \n\n#define MAX 100005\n\nlong long int max_d(long long int a,long long int b)\n{\n\tif(a>b)\n\t\treturn a;\n\treturn b;\n}\n\nlong long int max_pts(int*a,long long int*c,int i)\n{\n\tif(i==0)\n\t\treturn 0ll;\n\tif(i==1)\n\t\treturn (long long int)a[1];\n\tif(c[i]>-1)\n\t\treturn c[i];\n\n\tc[i]=max_d(max_pts(a,c,i-1),max_pts(a,c,i-2)+(long long int)(a[i]*i));\n\treturn c[i];\n}\n\nint main()\n{\n\tint a[MAX],i,t,n,pts=0,max=-1;\n\tlong long int c[MAX];\n\tfor(i=0;i<MAX;i++)\n\t{\n\t\ta[i]=0;\n\t\tc[i]=-1ll;\n\t}\n\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\ta[t]++;\n\t\tif(t>max)\n\t\t\tmax=t;\n\t}\n\n\tprintf(\"%lld\\n\",max_pts(a,c,max));\n\t\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h> \n\n#define MAX 100005\n\nlong long int max_d(long long int a,long long int b)\n{\n\tif(a>b)\n\t\treturn a;\n\treturn b;\n}\n\nlong long int max_pts(int*a,long long int*c,int i)\n{\n\tif(i==0)\n\t\treturn 0ll;\n\tif(i==1)\n\t\treturn (long long int)a[1];\n\tif(c[i]>-1)\n\t\treturn c[i];\n\tlong long int temp=(long long int)a[i]*(long long int)i;\n\tc[i]=max_d(max_pts(a,c,i-1),max_pts(a,c,i-2)+temp);\n\t//if(c[i]>-1)\n\t//\tprintf(\"%lld\",c[i]);\n\treturn c[i];\n}\n\nint main()\n{\n\tint a[MAX],i,t,n,pts=0,max=-1;\n\tlong long int c[MAX];\n\tfor(i=0;i<MAX;i++)\n\t{\n\t\ta[i]=0;\n\t\tc[i]=-1ll;\n\t}\n\n\t\n\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\ta[t]++;\n\t\tif(t>max)\n\t\t\tmax=t;\n\t}\n\n\n\tprintf(\"%lld\\n\",max_pts(a,c,max));\n\t\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9504950495049505, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "dbda7f2e903e50af4bdf49370c606440", "bug_code_uid": "4b32b26f54b885d09dadf55c4dc951d6", "src_uid": "2cd5807e3f9685d4eff88f2283904f0d", "apr_id": "f38ec3172bda41bf878ccfa634b74eef", "difficulty": 1000, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\n\n    int l,h;\n    scanf(\"%d %d\", &h, &l);\n\n    double res = 1.0*(l*l - h*h) / (2.0*h);\n\n    printf(\"%.10f\\n\",res);\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\n\n    double l,h;\n    scanf(\"%lf %lf\", &h, &l);\n\n    double res = 1.0*(l*l - h*h) / (2.0*h);\n\n    printf(\"%.10f\\n\",res);\n}\n"}
{"similarity_score": 0.9966159052453468, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1bb65e7f1c2b2e2698e04e5b2b262696", "bug_code_uid": "35855bc8a23a84c859ee0de44fcdfaf1", "src_uid": "180c19997a37974199bc73a5d731d289", "apr_id": "3f62ac7fad9a85f4ad25bf0fa0c770d2", "difficulty": 1900, "tags": ["dp", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint dp[1002][1002][12][2];\nconst int maxn=1010;\n\nint max(int a,int b)\n{\n    if(a>b)\n        return a;\n    else\n        return b;\n}\nint main()\n{char s[maxn];\nchar t[maxn];\n    int n,m,k,x,y,z;;\n    scanf(\"%d %d %d\",&n,&m,&k);\n\n    scanf(\"%s\",s);\n    scanf(\"%s\",t);\n    for(x=1;x<=k;x++)\n        for(y=1;y<=n;y++)\n        for(z=1;z<=m;z++)\n    {\n        if(s[y]==t[z])\n            dp[y][z][x][1] = 1 + max(dp[y-1][z-1][x][1],dp[y-1][z-1][x-1][0]);\n        dp[y][z][x][0]=max(dp[y][z][x][1], max(dp[y-1][z][x][0],dp[y][z-1][x][0]));\n    }\n    printf(\"%d\",dp[n][m][k][0]);\n}\n", "fixed": "#include<stdio.h>\nint dp[1002][1002][12][2];\nconst int maxn=1010;\n\nint max(int a,int b)\n{\n    if(a>b)\n        return a;\n    else\n        return b;\n}\nint main()\n{char s[maxn];\nchar t[maxn];\n    int n,m,k,x,y,z;;\n    scanf(\"%d %d %d\",&n,&m,&k);\n\n    scanf(\"%s\",s+1);\n    scanf(\"%s\",t+1);\n    for(x=1;x<=k;x++)\n        for(y=1;y<=n;y++)\n        for(z=1;z<=m;z++)\n    {\n        if(s[y]==t[z])\n            dp[y][z][x][1] = 1 + max(dp[y-1][z-1][x][1],dp[y-1][z-1][x-1][0]);\n        dp[y][z][x][0]=max(dp[y][z][x][1], max(dp[y-1][z][x][0],dp[y][z-1][x][0]));\n    }\n    printf(\"%d\",dp[n][m][k][0]);\n}\n"}
{"similarity_score": 0.21464393179538616, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "dd7a48a2bf61d5f9830e93f00d8aba0c", "bug_code_uid": "1d66fc6b5b85351b72a7d3d90b998501", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "43613b1dbff3f0549915faf4caca6bbb", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t,n,ans,i,j,count;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        count=0;\r\n        ans=-1;\r\n        scanf(\"%d\",&n);\r\n        int a[200005] = { 0 };\r\n        for (i=0; i<n; i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n             count=0;\r\n            for (j=0; j<n; j++)\r\n            {\r\n                if (a[i]==a[j])\r\n                    count++;\r\n                if (count>=3)\r\n                    ans=a[i];\r\n            }\r\n        }\r\n\r\n        printf(\"%d\\n\",ans);\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        int n,i,flag=0,x;\r\n        int a[200005]={ 0 };\r\n        scanf(\"%d\",&n);\r\n        for (i=0; i<n; i++)\r\n        {\r\n\r\n            scanf(\"%d\",&x);\r\n            a[x]++;\r\n            if (a[x]==3 && flag==0)\r\n            {\r\n                printf(\"%d\\n\",x);\r\n                flag++;\r\n            }\r\n        }\r\n        if (flag==0)\r\n            printf(\"-1\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.9877232142857143, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "fc1ab50be283521b6e6c4fcae76c2feb", "bug_code_uid": "41f484819071bfa6b66d1aa211d2b09b", "src_uid": "3488bb49de69c0c17ea0439e71b1e6ae", "apr_id": "95ece263be3bdc36e2c9168513c11a02", "difficulty": 1400, "tags": ["dp", "implementation", "sortings", "ternary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define NM (100*100)\n\nvoid swap (void *u, void *v, size_t n) {\n  char r, *s = u, *t = v;\n  while (n-- > 0) {\n    r = *s; *s++ = *t; *t++ = r;\n  }\n}\n\nint rng (int n) {\n  return rand () / (RAND_MAX/n + 1);\n}\n\nvoid sort (int *l, int *r) {\n  int *i = l, *j = r, p = l[rng (r - l + 1)];\n  while (i <= j) {\n    while (*i < p) ++i;\n    while (p < *j) --j;\n    if (i <= r) swap (i++, j--, sizeof *i);\n  }\n  if (i < r) sort (i, r);\n  if (l < j) sort (l, j);\n}\n\nint main (void) {\n  int i, n, m, d, a[NM], res = 0;\n  scanf (\"%d %d %d\", &n, &m, &d);\n  n *= m;\n  for (i = 0; i < n; ++i) {\n    scanf (\"%d\", &a[i]);\n  }\n\n  for (i = 0; i < n; ++i) {\n    if (a[i] % d != a[0] % d) {\n      res = -1;\n    }\n  }\n  if (res != -1) {\n    sort (a, a + n - 1);\n    for (i = 0; i < n; ++i) {\n      res += abs (a[i] - a[n/2]) / d;\n    }\n  }\n\n  printf (\"%d\\n\", res);\n  exit (EXIT_SUCCESS);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define NM (100*100)\n\nvoid swap (void *u, void *v, size_t n) {\n  char r, *s = u, *t = v;\n  while (n-- > 0) {\n    r = *s; *s++ = *t; *t++ = r;\n  }\n}\n\nint rng (int n) {\n  return rand () / (RAND_MAX/n + 1);\n}\n\nvoid sort (int *l, int *r) {\n  int *i = l, *j = r, p = *l;\n  while (i <= j) {\n    while (*i < p) ++i;\n    while (p < *j) --j;\n    if (i <= j) swap (i++, j--, sizeof *i);\n  }\n  if (i < r) sort (i, r);\n  if (l < j) sort (l, j);\n}\n\nint main (void) {\n  int i, n, m, d, a[NM], res = 0;\n  scanf (\"%d %d %d\", &n, &m, &d);\n  n *= m;\n  for (i = 0; i < n; ++i) {\n    scanf (\"%d\", &a[i]);\n  }\n\n  for (i = 0; i < n; ++i) {\n    if (a[i] % d != a[0] % d) {\n      res = -1;\n    }\n  }\n  if (res != -1) {\n    sort (a, a + n - 1);\n    for (i = 0; i < n; ++i) {\n      res += abs (a[i] - a[n/2]) / d;\n    }\n  }\n\n  printf (\"%d\\n\", res);\n  exit (EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.5381026438569206, "equal_cnt": 22, "replace_cnt": 9, "delete_cnt": 9, "insert_cnt": 3, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "4407eb1d2cc6a80a3ef0e9e402f24aee", "bug_code_uid": "92eca8b021da097ad203a7728b7f4071", "src_uid": "776a06c14c6fa3ef8664eec0b4d50824", "apr_id": "e59ea06b37d41332f39a4c552bf7f36f", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t,k=0;\n    scanf(\"%d\",&t);\n    while(k<t){\n        k++;\n        int n,m;\n        scanf(\"%d%d\",&n,&m);\n        int i;\n        int a[n], b[m];\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n        for(i=0;i<m;i++)\n        {\n            scanf(\"%d\",&b[i]);\n        }\n        int p=0,result=0;\n        while(p<n){\n            int q=0;\n            while(a[p]!=b[q] && q<m){\n                q++;\n            }\n            if(a[p]==b[q]){\n                printf(\"YES\\n\");\n                printf(\"1 %d\\n\"a[p]);\n                result=1;\n                break;\n            }\n            p++;\n        }\n        if(result == 0)\n          printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n  int k=0,t;\n  scanf(\"%d\",&t);\n  while(k<t){\n    k++;\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    int a[n],i;\n    for(i=0;i<n;i++)\n     scanf(\"%d\",&a[i]);\n     int j,b[m];\n    for(j=0;j<m;j++)\n     scanf(\"%d\",&b[j]);\n    int p=0,result=0;\n    while(p<n){\n      int q=0;\n      while(a[p]!=b[q] && q<m)\n          q++;\n      if(a[p] == b[q]){\n        result = 1;\n        printf(\"YES\\n\");\n        printf(\"1 %d\\n\",a[p]);\n        break;\n      }\n      p++;\n    }\n    if(result == 0){\n      printf(\"NO\\n\");\n    }\n  }\n  return 0;\n}"}
{"similarity_score": 0.9925373134328358, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8515912358996dd87d47e48837379f66", "bug_code_uid": "86b14e9e9298e2a44f5d42160f684233", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "c0119de7e80acb71a726d5c23fbfeff7", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint c,k,a[100000],n,i,min;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tif(n==1)\n\t{\n\t\tprintf(\"1\");\n\t}\n\telse\n\t{\n\t\n\tmin=a[0];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]<min)\n\t\t{\n\t\t\tmin=a[i];\n\t\t\tk=i;\n\t\t}\n\t}\n\t/*printf(\"%d %d\\n\",min,k);*/\n\tc=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]==min)\n\t\tc++;\n\t}\n\tif(c>1)\n\tprintf(\"Still Rozdil\");\n\telse\n\tprintf(\"%d\",k+1);\n}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint c,k,a[100000],n,i,min;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tif(n==1)\n\t{\n\t\tprintf(\"1\");\n\t}\n\telse\n\t{\n\t\n\tmin=a[0];\n\tk=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]<min)\n\t\t{\n\t\t\tmin=a[i];\n\t\t\tk=i;\n\t\t}\n\t}\n\t/*printf(\"%d %d\\n\",min,k);*/\n\tc=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]==min)\n\t\tc++;\n\t}\n\tif(c>1)\n\tprintf(\"Still Rozdil\");\n\telse\n\tprintf(\"%d\",k+1);\n}\n\treturn 0;\n}\n"}
{"similarity_score": 0.8508430609597925, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "7bd73a7eb45454aa88a37c767a0306c8", "bug_code_uid": "c37adf862e3b7a2634c94ef6e3b5c590", "src_uid": "cf3cfcae029a6997ee62701eda959a60", "apr_id": "f315200e43cf4eda5f1545a0f9bde6b1", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n  int n,t,i;\r\n   scanf(\"%d\",&t);\r\n   for(i=0;i<t;i++)\r\n   {\r\n       scanf(\"%d\",&n);\r\n     int a[n];\r\n     for(j=0;j<n;j++)\r\n     {\r\n         scanf(\"%d\",&a[j]);\r\n         if(max<a[j])\r\n         max=a[j];\r\n         if(min>a[j])\r\n         min=a[j];\r\n   }\r\n  printf(\"%d\\n\",(max-min));\r\n  return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n  int n,t,i,j;\r\n  int max=0,min=0;\r\n   scanf(\"%d\",&t);\r\n   for(i=0;i<t;i++)\r\n   {\r\n       scanf(\"%d\",&n);\r\n       \r\n     int a[n];\r\n     for(j=0;j<n;j++)\r\n     {\r\n         scanf(\"%d\",&a[j]);\r\n         \r\n     }\r\n   max=a[0];\r\n   min=a[0];\r\n   for(j=0;j<n;j++)\r\n     {\r\n         if(max<a[j])\r\n         max=a[j];\r\n         if(min>a[j])\r\n         min=a[j];\r\n   }\r\n   printf(\" %d\\n\",(max-min));\r\n   }\r\nreturn 0;\r\n}"}
{"similarity_score": 0.9357601713062098, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c096e04bed2bd17c3aa45be56182a0f0", "bug_code_uid": "2bb1fb34cb302698165648c0e9451846", "src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "apr_id": "e3910d95dea18df829a8ea331e8e03a2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n   int n,vetor[200],i;\n   int minH,minIndice1,minIndice2;\n   \n   scanf(\"%d\",&n);\n   for(i=0;i<n;i++)\n      scanf(\"%d\",vetor+i);\n   \n   \n   minH=abs(vetor[n-1]-vetor[0]);\n   minIndice1=n-1;\n   minIndice2=0;\n   for(i=0;(i+1)<n;i++)\n   {\n      if(abs(vetor[i]-vetor[i+1])<minH)\n      {\n         minIndice1=i;\n         minIndice2=i+1;\n      }\n   }\n   printf(\"%d %d\",minIndice1+1,minIndice2+1);\n   return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n   int n,vetor[200],i;\n   int minH,minIndice1,minIndice2;\n   \n   scanf(\"%d\",&n);\n   for(i=0;i<n;i++)\n      scanf(\"%d\",vetor+i);\n   \n   \n   minH=abs(vetor[n-1]-vetor[0]);\n   minIndice1=n-1;\n   minIndice2=0;\n   for(i=0;(i+1)<n;i++)\n   {\n      if(abs(vetor[i]-vetor[i+1])<minH)\n      {\n         minIndice1=i;\n         minIndice2=i+1;\n         minH=abs(vetor[i]-vetor[i+1]);\n      }\n   }\n   printf(\"%d %d\\n\",minIndice1+1,minIndice2+1);\n   return 0;\n}"}
{"similarity_score": 0.9834437086092715, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "89242316acf78b6a6b2a71ed2c0ff75b", "bug_code_uid": "343a5e0c5469ad040bf9b06ee3160b7f", "src_uid": "928f18ee5dbf44364c0d578f4317944c", "apr_id": "2c5a7fade845e10695880b12f2781342", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid main()\n{\n  int n,k;\n  scanf(\"%d %d\", &n,&k);\n  int available[n*k];\n  for (int i = 0; i < n*k; i++) available[i] = 0;\n  int indices[k];\n  int iterator = 0;\n  for (int i = 0; i < k; i++)\n  {\n    scanf(\"%d\", &indices[i]);\n    available[indices[i]-1] = 1;\n  }\n  for (int i = 0; i < k; i++)\n  {\n    printf (\"%d \", indices[i]);\n    int size = 1;\n    while (size < n)\n    {\n      if (available[iterator] == 0)\n      {\n        printf(\"%d \", iterator+1);\n        available[iterator] = 1;\n        size ++;\n      }\n      iterator ++;\n    }\n    printf (\"\\n\");\n  }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n  int n,k;\n  scanf(\"%d %d\", &n,&k);\n  int available[n*k];\n  for (int i = 0; i < n*k; i++) available[i] = 0;\n  int indices[k];\n  int iterator = 0;\n  for (int i = 0; i < k; i++)\n  {\n    scanf(\"%d\", &indices[i]);\n    available[indices[i]-1] = 1;\n  }\n  for (int i = 0; i < k; i++)\n  {\n    printf (\"%d \", indices[i]);\n    int size = 1;\n    while (size < n)\n    {\n      if (available[iterator] == 0)\n      {\n        printf(\"%d \", iterator+1);\n        available[iterator] = 1;\n        size++;\n      }\n      iterator ++;\n    }\n    printf (\"\\n\");\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.9420600858369099, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e4e5e1d5ec5e3b2541ec6089f214d9eb", "bug_code_uid": "ea3879176ed84774d53a680abf373f3d", "src_uid": "0a720a0b06314fde783866b47f35af81", "apr_id": "27c049be4f2d5f9ca8b2a6565a017abd", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long int a,b,c,d,e;\n        scanf(\"%lld%lld\",&a,&b);\n        if(a==2*b||b==2*a)\n        printf(\"YES\\n\");\n        else\n        {\n         if(a==0||b==0)\n            printf(\"NO\\n\");\n            \n            \n            else if((a+b)%3==0)\n            printf(\"YES\\n\");\n            else\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long int a,b,c,d,e;\n        scanf(\"%lld%lld\",&a,&b);\n        if(a==2*b||b==2*a)\n        printf(\"YES\\n\");\n        else if(a*2<b||b*2<a)\n        printf(\"NO\\n\");\n        else\n        {\n         if(a==0||b==0)\n            printf(\"NO\\n\");\n            \n            \n            else if((a+b)%3==0)\n            printf(\"YES\\n\");\n            else\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9183856502242153, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "cd1282ecee791a4c3e5140e3eb5a1d29", "bug_code_uid": "e3164af6f220537495e976aaca0a40ba", "src_uid": "2b37f27a98ec8f80d0bff3f7ae8f2cff", "apr_id": "922f0eaace4ca6389d67ea500d4c4181", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,m,i,j,t;\n    scanf(\"%d\", &t);\n    while(t--){\n        scanf(\"%d %d\", &n, &m);\n        if((n*m)%2==0){\n            printf(\"B\");\n            for(i=1;i<n*m;i++){\n                if(i%2) printf(\"B\");\n                else printf(\"W\");\n                if((i+1)%m==0)  printf(\"\\n\");\n            }\n\n        }\n        else{\n            for(i=0;i<n*m;i++){\n                if(!(i%2))  printf(\"B\");\n                else printf(\"W\");\n                if((i+1)%m==0)    printf(\"\\n\");\n            }\n        }\n    }\n}\n\n", "fixed": "#include<stdio.h>\nint main(){\n    int n,m,i,j,t;\n    scanf(\"%d\", &t);\n    while(t--){\n        scanf(\"%d %d\", &n, &m);\n        if((n*m)%2==0){\n            for(i=0;i<n*m;i++){\n                if(i==1)    printf(\"B\");\n                else{\n                    printf((i%2)? \"W\":\"B\");\n                }\n                if((i+1)%m==0)  printf(\"\\n\");\n            }\n\n        }\n        else{\n            for(i=0;i<n*m;i++){\n                if(!(i%2))  printf(\"B\");\n                else printf(\"W\");\n                if((i+1)%m==0)    printf(\"\\n\");\n            }\n        }\n    }\n}\n\n"}
{"similarity_score": 0.10939357907253269, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "d6ca35738a471b995a02a6e1f5d22063", "bug_code_uid": "66b9843a934252a9afde0ce7a13f73d2", "src_uid": "a7e98ed8ee1b0a4fd03dfcd222b68c6f", "apr_id": "81addc44c4eecd6f118b606b5e22b151", "difficulty": 800, "tags": ["two pointers", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n   int n,a[1000],b,count,i,ans=1,sum1=0,sum2=0,j;\n   scanf(\"%d\",&n);\n   for(i=0;i<n;i++)\n   {\n       scanf(\"%d\",&a[i]);\n       \n   }\n   for(i=0,j=n-1;i<j;)\n   {\n       if(a[i]>a[j])\n       {\n           sum1+=a[i];\n          \n           i++;\n       }else{\n           sum1+=a[j];\n         \n           j--;\n       }\n         if(a[i]>a[j] )\n       {\n           sum2+=a[i];\n          \n           i++;\n       }else{\n           sum2+=a[j];\n           \n           j--;\n       }\n       \n   }\n   printf(\"%d %d\",sum1,sum2);\n\n    return 0;\n}", "fixed": "#include<stdio.h>\nmain(){\nint n;\nscanf(\"%d\",&n);\nint i,a[n];\nfor(i=0;i<n;i++)\nscanf(\"%d\",&a[i]);\nint l=0,h=n-1,d=0,s=0,m;\ni=0;\nwhile(i<n){\n    if(a[l]>a[h]) {m=a[l]; l++;}\n    else {m=a[h]; h--;}\n    if((i+1)%2==0) s+=m;\n    else d+=m;\n    i++;\n}\nprintf(\"%d %d\",d,s);\nreturn 0;\n}"}
{"similarity_score": 0.9487951807228916, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "3a4852212b503d353e6531a926fbad63", "bug_code_uid": "f216e4b86a3fbd468c38ffda739ccc08", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "7dc4f8c05bbfbb1e2ac65bd715c02167", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,h,a;\n    int i,count=0,count1=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&h);\n    for(i=0;i<n;i++){\n\n    scanf(\"%d\",&a);\n        if(a<=h){\n            count++;\n        }\n        else if(a>h){\n            count1=count1+2;\n            printf(\"%d\\n\",count1);\n        }\n    }\n\n\n\n\n    return 0;\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,h,a;\n    int i,count=0,count1=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&h);\n    for(i=0;i<n;i++){\n\n    scanf(\"%d\",&a);\n        if(a<=h){\n            count++;\n        }\n        else if(a>h){\n\n            count1=count1+2;\n        }\n    }\n    printf(\"%d\\n\",count+count1);\n\n\n    return 0;\n\n\n\n\n\n}\n"}
{"similarity_score": 0.689048760991207, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "74fa443bf6b627839164f10c12de4955", "bug_code_uid": "cf0451e6f087e9713616a87e0a1f7ce2", "src_uid": "5db2ae5b2c91b29e4fe4a45ab864e3f1", "apr_id": "549060bb0bffc993c1c7d73fb21ed22a", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,cnt=0,l=0,j=0;\n    scanf(\"%d\",&n);\n    long long max=0, ar[n];\n    for(int i=0;i<n;i++)\n    {\n    scanf(\"%lld\",&ar[i]);\n    if(ar[i]>max)\n    max=ar[i];\n    }\n    //printf(\"%lld\",max);\n    for(int i=j;i<n;i++)\n    {\n    if(ar[i]==max)\n    {\n    for(j=i;j<n;j++)\n    {\n    if(ar[j]==max)\n    cnt++;\n    else\n    {\n    if(cnt>l)\n    l=cnt;\n    cnt=0;\n    break;\n    }\n    }\n    if(cnt==n)\n    break;\n    }\n    }\n    if(cnt>l)\n    printf(\"%d\",cnt);\n    else\n    printf(\"%d\",l);\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,cnt=0,l=0,j=0,g=0;\n    scanf(\"%d\",&n);\n    long long max=0, ar[n];\n    for(int i=0;i<n;i++)\n    {\n    scanf(\"%lld\",&ar[i]);\n    if(ar[i]>max)\n    max=ar[i];\n    }\n   // printf(\"%lld\",max);\n    for(int i=j;i<n;i++)\n    {\n    if(ar[i]==max)\n    cnt++;\n    else\n    {\n    g=1;\n    cnt=0;\n    }\n    if(cnt>l)\n    l=cnt;\n    }\n    /*{\n    cnt=0;\n    if(ar[i]==max)\n    {\n    for(j=i;j<n;j++)\n    {\n    if(ar[j]==max)\n    {\n    cnt++;\n    if(cnt>l)\n    l=cnt;\n    }\n    else\n    {\n    cnt=0;\n    break;\n    }\n    }\n    printf(\"d\\n\");\n    if(cnt==n)\n    break;\n    }\n    }\n   /* if(cnt>l)\n    */\n    //else\n    if(g==0)\n    printf(\"%d\",n);\n    else\n    printf(\"%d\",l);\n    return 0;\n}"}
{"similarity_score": 0.9317647058823529, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "5eeb128680710c10936393856ad3f5e6", "bug_code_uid": "659be78cba2797f9ad3d0a2236bd16e5", "src_uid": "fbde86a29f416b3d83bcc63fb3776776", "apr_id": "1b1f823328a53204e504ea0442766566", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        if(4%i==1||4%i==2)\n        printf(\"a\");\n    else if(4%i==0||4%i==3)\n        printf(\"b\");\n    }\n    printf(\"\\n\");\n   \n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        if(i%4==1||i%4==2)\n        printf(\"a\");\n    else if(i%4==0||i%4==3)\n        printf(\"b\");\n    }\n    printf(\"\\n\");\n}\n"}
{"similarity_score": 0.987012987012987, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "30b08e2a0efa177d829585ac9ef58870", "bug_code_uid": "502edeba94767e884ff560c7a31e23b5", "src_uid": "ce4443581d4ee12db6607695cd567070", "apr_id": "53c712daa582043c65804c013b215d21", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\n    int n,i;\n\n    char s[1002];\n\n    scanf(\"%d\\n\",&n);\n\n    gets(s);\n\n    for(i = 1; i < n; i++){\n\n        if(s[i - 1] != s[i]){\n\n            printf(\"YES\\n\");\n\n            printf(\"%c%c\",s[i],s[i + 1]);\n\n            return 0;\n        }\n    }\n    printf(\"NO\");\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\n    int n,i;\n\n    char s[1002];\n\n    scanf(\"%d\\n\",&n);\n\n    gets(s);\n\n    for(i = 1; i < n; i++){\n\n        if(s[i - 1] != s[i]){\n\n            printf(\"YES\\n\");\n\n            printf(\"%c%c\",s[i - 1],s[i]);\n\n            return 0;\n        }\n    }\n    printf(\"NO\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.9341692789968652, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "30c1c4e764b750c84c4fb5cba823fc46", "bug_code_uid": "1970a3947fc3817f1eb10c671f2e8aa9", "src_uid": "ce0579e9c5b4c157bc89103c76ddd4c3", "apr_id": "e12f43b9cf8a597568f019c52a460f94", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAX 10000000\n\nint main(){\n    int t, minute;\n\n    scanf(\"%d\", &t);\n    int A[t];\n\n    for (int i = 0; i < t; ++i){\n        int n, H, M, min = MAX;\n        scanf(\"%d %d %d\", &n, &H, &M);\n        for (int j = 0; j < n; ++j){\n            int h, m;\n            scanf(\"%d %d\", &h, &m);\n            minute = 60* ((h >= H) * (h - H) + (h < H) * (24 + h - H))  + (m - M);\n            if (minute < min) \n                min = minute;\n\n        }\n        A[i] = min;\n    }\n\n    \n    for (int i = 0; i < t; ++i)\n        printf(\"%d %d\\n\", A[i] / 60,  A[i] % 60);\n    return 0;\n}\n\n\n\n", "fixed": "#include <stdio.h>\n#define MAX 10000000\n\nint main(){\n    int t, minute;\n\n    scanf(\"%d\", &t);\n    int A[t];\n\n    for (int i = 0; i < t; ++i){\n        int n, H, M, min = MAX;\n        scanf(\"%d %d %d\", &n, &H, &M);\n        for (int j = 0; j < n; ++j){\n            int h, m;\n            scanf(\"%d %d\", &h, &m);\n            if (m < M){\n                --h;\n                m += 60;\n            }\n            minute = 60* ((h >= H) * (h - H) + (h < H) * (24 + h - H))  + (m - M);\n            if (minute < min) \n                min = minute;\n\n        }\n        A[i] = min;\n    }\n\n    \n    for (int i = 0; i < t; ++i)\n        printf(\"%d %d\\n\", A[i] / 60,  A[i] % 60);\n    return 0;\n}\n\n\n\n"}
{"similarity_score": 0.3370919881305638, "equal_cnt": 22, "replace_cnt": 17, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "55cfa9a1d4d1b9504a0d0884574dfca3", "bug_code_uid": "507a4826ac9772fd65dcb7c7759d1f82", "src_uid": "1670a3d7dba83e29e98f0ac6fe4acb18", "apr_id": "511e11791e2f8345d132253488679837", "difficulty": 1900, "tags": ["data structures", "greedy", "trees"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n     int n, f = -1, i, j;\n     int a[1000], b[1000] = {0};\n     char s[1000][1001];\n\n     scanf(\"%d\", &n);\n\n     for (i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n\n     for (i = 0; i < n; i++) {\n\t  b[a[i]]++;\n\n\t  if (b[a[i]] > 2 || (f >= 0 && a[i] >= f)) {\n\t       puts(\"NO\");\n\n\t       return 0;\n\t  } else {\n\t       for (j = 0; j < a[i] - 1; j++) {\n\t\t    s[i][j] = '1';\n\t       }\n\n\t       if (b[a[i]] == 2) {\n\t\t    s[i][j] = '1';\n\t\t    s[i][j + 1] = '\\0';\n\n\t\t    f = a[i];\n\t       } else {\n\t\t    s[i][j] = '0';\n\t\t    s[i][j + 1] = '\\0';\n\t       }\n\t  }\n     }\n\n     puts(\"YES\");\n\n     for (i = 0; i < n; i++) printf(\"%s\\n\", s[i]);\n\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct {\n     int a;\n     char s[1001];\n     int i;\n} word;\n\nint cmp(const void *a, const void *b)\n{\n     return ((word *)a)->a - ((word *)b)->a;\n}\n\nint cmp2(const void *a, const void *b)\n{\n     return ((word *)a)->i - ((word *)b)->i;\n}\n\nint main()\n{\n     int n, p = 0, i, j;\n     word w[1000];\n     char s[1001] = \"\";\n\n     scanf(\"%d\", &n);\n\n     for (i = 0; i < n; i++) {\n\t  scanf(\"%d\", &w[i].a);\n\n\t  w[i].i = i;\n     }\n\n     qsort(w, n, sizeof(word), cmp);\n\n     for (i = 0; i < n; i++) {\n\t  if (p > 0) {\n\t       for (j = p - 1; j >= 0; j--) {\n\t\t    if (s[j] == '1') {\n\t\t\t s[j] = '0';\n\t\t    } else {\n\t\t\t s[j] = '1';\n\n\t\t\t break;\n\t\t    }\n\t       }\n\n\t       if (j < 0) {\n\t\t    puts(\"NO\");\n\n\t\t    return 0;\n\t       }\n\t  }\n\n\t  while (p < w[i].a) s[p++] = '0';\n\n\t  for (j = 0; j < p; j++) w[i].s[j] = s[j];\n\t  w[i].s[j] = '\\0';\n     }\n\n     qsort(w, n, sizeof(word), cmp2);\n\n     puts(\"YES\");\n\n     for (i = 0; i < n; i++) printf(\"%s\\n\", w[i].s);\n\n     return 0;\n}\n"}
{"similarity_score": 0.6457142857142857, "equal_cnt": 12, "replace_cnt": 4, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "158c596b7a6cafb86f37afdde707f6fc", "bug_code_uid": "60bf58c03b982d5e3ec7003bb52b14b4", "src_uid": "6421a81f85a53a0c8c63fbc32750f77f", "apr_id": "ebdf05d3d6bcd116d072369fb241c9d7", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "int main () {\n\tdouble k,a,b;\n\t\tscanf(\"%lf %lf %lf\",&erenmal,&erenoc,&yanlis_anlama_oc_esittir_okulcocugu);\n\t\tprintf(\"%lf\",erenmal*(erenoc/(erenoc+yanlis_anlama_oc_esittir_okulcocugu)));\n\n}", "fixed": "int main () {\n\tdouble erenmal,erengerzek,erenor;\n\t\tscanf(\"%lf %lf %lf\",&erenmal,&erengerzek,&erenor);\n\t\tprintf(\"%lf\",erenmal*(erengerzek/(erengerzek+erenor)));\n\n}"}
{"similarity_score": 0.9972972972972973, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8fa538dec133e5a743ccd2aa19c54e4d", "bug_code_uid": "49d8ae8b98bda5a3150021205155c332", "src_uid": "71335a9489f0985f4e16435b14d6a34a", "apr_id": "b2f078c0a11182ab47a69eded18468c2", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t, c1, c2, amount;\r\n    scanf(\"%d\", &t);\r\n\r\n    while (t--) {\r\n        scanf(\"%d\", &amount);\r\n        c1 = amount / 3;\r\n        c2 = amount / 3;\r\n        if (amount % 3 == 1) {\r\n            c1++;\r\n        } else if (amount % 3 == 2) {\r\n            c2++;\r\n        }\r\n        printf(\"%d %d\", c1, c2);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t, c1, c2, amount;\r\n    scanf(\"%d\", &t);\r\n\r\n    while (t--) {\r\n        scanf(\"%d\", &amount);\r\n        c1 = amount / 3;\r\n        c2 = amount / 3;\r\n        if (amount % 3 == 1) {\r\n            c1++;\r\n        } else if (amount % 3 == 2) {\r\n            c2++;\r\n        }\r\n        printf(\"%d %d\\n\", c1, c2);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9828897338403042, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "865d4897aea29cdfb5b38dfa528e76f7", "bug_code_uid": "d75b24019cff85d37dea366c27a15de0", "src_uid": "7bb5df614d1fc8323eba51d04ee7bf2a", "apr_id": "4bda494793b7c7c2bbe5c63a6e6080b7", "difficulty": 1600, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\nvoid ucitaj(int *n,int **a,long **mat)\n{\n\tscanf(\"%d\",n);\n\tint i;\n\t*a=(int *)malloc(sizeof(int)*(*n+2));\n\tfor(i=1;i<=*n;i++)\n\t\tscanf(\"%d\",&(*a)[i]);\n\t*mat=(long *)calloc(sizeof(long),(*n+2));\n}\n\nvoid izracunaj(int n,int *a,int *mat)\n{\n\tint tren,i,br=0;\n\ttren=1;\n\tint *broj=(int *)malloc(sizeof(int)*(n+2));\n\tfor(i=1;i<=n+1;i++)\n\t\tbroj[i]=-1;\n\t/*while(tren!=n+1)\n\t{\n\t\tmat[tren]++;\n\t\tif(mat[tren]&1) tren=a[tren];\n\t\telse tren++;\n\t\tbr++;\n\t}*/\n\twhile(tren!=n+1)\n\t{\n\t\tif(broj[tren]==-1) broj[tren]=br;\n\t\tmat[tren]++;\n\t\tif(mat[tren]&1) tren=a[tren];\n\t\telse tren++;\n\t\tbr++;\n\t}\n\tfor(i=1;i<=n+1;i++)\n\t\tprintf(\"%d \",broj[i]);\n\t//printf(\"%d\\n\",br%1000000007);\n}\n\nvoid racun(int n,int *a, long *br)\n{\n\tint i;\n\tfor(i=2;i<=n+1;i++){\n\t\tbr[i]=2+br[i-1]+(br[i-1]-br[a[i-1]]);\n\t\tbr[i]=br[i]%1000000007;\n\t\t//printf(\"%d - %ld\\n\",i,br[i]);\n\t}\n\tprintf(\"%ld\\n\",br[n+1]%1000000007);\n}\nint main()\n{\n\tint n;\n\tint *a;\n\tlong *mat;\n\tucitaj(&n,&a,&mat);\n\t//izracunaj(n,a,mat);\n\tracun(n,a,mat);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\nvoid ucitaj(int *n,int **a,long **mat)\n{\n\tscanf(\"%d\",n);\n\tint i;\n\t*a=(int *)malloc(sizeof(int)*(*n+2));\n\tfor(i=1;i<=*n;i++)\n\t\tscanf(\"%d\",&(*a)[i]);\n\t*mat=(long *)calloc(sizeof(long),(*n+2));\n}\n\nvoid izracunaj(int n,int *a,int *mat)\n{\n\tint tren,i,br=0;\n\ttren=1;\n\tint *broj=(int *)malloc(sizeof(int)*(n+2));\n\tfor(i=1;i<=n+1;i++)\n\t\tbroj[i]=-1;\n\t/*while(tren!=n+1)\n\t{\n\t\tmat[tren]++;\n\t\tif(mat[tren]&1) tren=a[tren];\n\t\telse tren++;\n\t\tbr++;\n\t}*/\n\twhile(tren!=n+1)\n\t{\n\t\tif(broj[tren]==-1) broj[tren]=br;\n\t\tmat[tren]++;\n\t\tif(mat[tren]&1) tren=a[tren];\n\t\telse tren++;\n\t\tbr++;\n\t}\n\tfor(i=1;i<=n+1;i++)\n\t\tprintf(\"%d \",broj[i]);\n\t//printf(\"%d\\n\",br%1000000007);\n}\n\nvoid racun(int n,int *a, long *br)\n{\n\tint i;\n\tfor(i=2;i<=n+1;i++){\n\t\tbr[i]=2+br[i-1]+(br[i-1]-br[a[i-1]]);\n\t\tif (br[i]<0) br[i]+=1000000007;\n\t\tbr[i]=br[i]%1000000007;\n\t\t//printf(\"%d - %ld\\n\",i,br[i]);\n\t}\n\t\n\tprintf(\"%ld\\n\",br[n+1]%1000000007);\n}\nint main()\n{\n\tint n;\n\tint *a;\n\tlong *mat;\n\tucitaj(&n,&a,&mat);\n\t//izracunaj(n,a,mat);\n\tracun(n,a,mat);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7400611620795107, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "89d315d69857d5b6ca4635f9683a6fc6", "bug_code_uid": "a187a89ee63ba01e1fe3253f85dc79b7", "src_uid": "c0abbbf1cf6c8ec11e942cdaaf01ad7c", "apr_id": "2526b4f9ad2262cb0dab96323669c081", "difficulty": 1000, "tags": ["dfs and similar", "brute force", "graphs"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h> \n\n\nint main(void)\n{\n\n\n    int n,aux,j = 0;\n    int *student;\n    int *path;\n    scanf(\"%d\",&n);\n\n    student = malloc(sizeof(int) * (n+1));\n    path = malloc(sizeof(int) * (n+1));\n\n\n    for(int i = 0; i<=n;i++) // zera students e pega o path\n    {\n        student[i] = 0;\n        scanf(\"%d\",&aux);\n        path[i] = aux;\n    }\n\n    for(int i = 1;i<=n;i++) // para cada student 1 ate n\n    {\n        student[i]++;\n        while(student[path[j]] != 2)\n        {\n            aux = path[j];\n            student[aux] ++;\n            j = aux;\n        }\n        printf(\"%d\",path[j]);\n    }\n\n    free(student);\n    free(path);\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h> \n\n\nint main(void)\n{\n\n\n    int n,aux,j = 0,a=1;\n    int *student;\n    int *path;\n    scanf(\"%d\",&n);\n\n    student = malloc(sizeof(int) * (n+1));\n    path = malloc(sizeof(int) * (n+1));\n\n\n    for(int i = 0; i<=n;i++) // zera students e pega o path\n    {\n        student[i] = 0;\n        scanf(\"%d\",&aux);\n        path[i] = aux;\n    }\n\n    for(int i = 1;i<=n;i++) // para cada student 1 ate n\n    {\n        student[i]++; // aluno da vez\n        aux = path[i-1]; // pra quem o aluno da vez aponta\n        for(int j = 0; j< n;j++)\n        {\n            student[aux]++; // student do path ++;\n            if(student[aux] == 2)\n                break;\n            aux = path[aux-1];\n        }\n        printf(\"%d \",aux);\n\n        for(int i = 0; i<=n;i++) // zera students e pega o path\n        {\n            student[i] = 0;\n        }\n    }\n\n    free(student);\n    free(path);\n\n    return 0;\n}"}
{"similarity_score": 0.5463474524248005, "equal_cnt": 13, "replace_cnt": 4, "delete_cnt": 6, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "51e18d95739e660cd7fb84b55fb1f9df", "bug_code_uid": "41a62f9eab5dd382662f4fb874251a6e", "src_uid": "2b55012c899645bac8d293e85e73148f", "apr_id": "3c1f4fafe6926a94d85ff188e3dbca29", "difficulty": 1000, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\n#include<stdio.h>\nint main()\n{\n    int n,j,i,m,s1=0,s2=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(j=0;j<n;j++)\n        scanf(\"%d\",&a[j]);\n    if(n==1)\n        printf(\"-1\\n\");\n    else if(n==2)\n    {\n        if(a[0]==a[1])\n            printf(\"-1\\n\");\n        else if(a[0]==0||a[1]==0)\n            printf(\"-1\\n\");\n        else\n            printf(\"1\\n%d\\n\",a[0]);\n    }\n    else\n    {\n        m=1;\n        while(1){\n        s1=0;\n        s2=0;\n        for(i=0;i<m;i++)\n        {\n            s1+=a[i];\n        }\n        for(i=m;i<n;i++)\n            s2+=a[i];\n        if(s1!=s2)\n        {\n            printf(\"%d\\n\",m);\n            for(i=1;i<=m;i++)\n                printf(\"%d \",i);\n            printf(\"\\n\");\n            break;\n        }\n        else\n        {\n            m++;\n        }\n        }\n    }\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,j,i,m,s1=0,s2=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(j=0;j<n;j++)\n        scanf(\"%d\",&a[j]);\n    if(n==1)\n        printf(\"-1\\n\");\n    else if(n==2)\n    {\n        if(a[0]==a[1])\n            printf(\"-1\\n\");\n        else if(a[0]==0||a[1]==0)\n            printf(\"-1\\n\");\n        else\n            printf(\"1\\n1\\n\");\n    }\n    else\n    {\n        m=1;\n        while(1){\n        s1=0;\n        s2=0;\n        for(i=0;i<m;i++)\n        {\n            s1+=a[i];\n        }\n        for(i=m;i<n;i++)\n            s2+=a[i];\n        if(s1!=s2)\n        {\n            printf(\"%d\\n\",m);\n            for(i=1;i<=m;i++)\n                printf(\"%d \",i);\n            printf(\"\\n\");\n            break;\n        }\n        else\n        {\n            m++;\n        }\n        }\n    }\n    return 0;\n\n}\n"}
{"similarity_score": 0.22267412302999492, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "4e2fdc741b1f7f12bcadf092fbd3889b", "bug_code_uid": "b7d879e1f3c0e7c3641ca4ec7ff80f1b", "src_uid": "8b0a9c7e997034d3ecce044b9f64aeba", "apr_id": "760de544970dd0f4b6c35ac96b82395b", "difficulty": 800, "tags": ["dp", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\r\n#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n#include <ctype.h>\r\n\r\n\r\nint main() {\r\n\r\n    int testCases, i, x, y, n, m, k;\r\n    int minCost[101][101];\r\n\r\n    scanf(\"%d\\n\", &testCases);\r\n    for (i = 0; i < testCases; i++) {\r\n        scanf(\"%d%d%d\", &n, &m, &k);\r\n       \r\n        // Creates grid\r\n        for (y = 0; y <= n; y++) {\r\n            for(x = 0; x <= m; x++) {\r\n                minCost[x][y] = -1;\r\n            }\r\n        }\r\n        // Starting position\r\n        minCost[1][1] = 0;\r\n        // Going straight horizontal and vertical always costs 1 per step\r\n        for (x = 2; x <= n; x++) {\r\n            minCost[x][1] = x - 1;\r\n        }\r\n        for (y = 2; y <= m; y++) {\r\n            minCost[1][y] = y - 1;\r\n        }\r\n\r\n        for (y = 2; y <= n; y++) {\r\n            for (x = 2; x <= m; x++) {\r\n                minCost[x][y] = min(minCost[x - 1][y], minCost[x][y - 1]) + min(x, y);\r\n            }\r\n        }\r\n\r\n        printf(\"%s\\n\", (minCost[n][m] == k) ? \"YES\" : \"NO\");\r\n\r\n    }\r\n    return 0;\r\n}", "fixed": "#define _CRT_SECURE_NO_WARNINGS\r\n#include <stdio.h>\r\n#include <string.h>\r\n\r\n#define MAX 100\r\n\r\nint min(int a, int b) {\r\n\treturn a < b ? a : b;\r\n}\r\n\r\nvoid solve(int n, int m, int k) {\r\n\r\n\tint arr[MAX + 1][MAX + 1];\r\n\tint x, y;\r\n\tint num = 0;\r\n\r\n\t// Setting up the matrix\r\n\tfor (y = 1; y <= n; y++) {\r\n\t\tfor (x = 1; x <= m; x++) {\r\n\t\t\tarr[x][y] = num;\r\n\t\t\tnum++;\r\n\t\t}\r\n\t}\r\n\tarr[1][1] = 0;\r\n\r\n\t// Calculating min cost\r\n\tfor (x = 1; x <= m; x++) {\r\n\t\tarr[x][1] = x - 1;\r\n\t}\r\n\r\n\tfor (y = 1; y <= n; y++) {\r\n\t\tarr [1][y] = y - 1;\r\n\t}\r\n\r\n\tfor (y = 2; y <= n; y++) {\r\n\t\tfor (x = 2; x <= m; x++) {\r\n\t\t\tarr[x][y] = min((arr[x - 1][y] + y), (arr[x][y - 1] + x));\r\n\t\t}\r\n\t}\r\n\r\n\tprintf(\"%s\\n\", arr[m][n] == k ? \"YES\" : \"NO\");\r\n\r\n}\r\n\r\nint main() {\r\n\r\n\tint testCases, n, m, k, i;\r\n\r\n\tscanf(\"%d\", &testCases);\r\n\t\r\n\tfor (i = 0; i < testCases; i++) {\r\n\t\tscanf(\"%d%d%d\", &n, &m, &k);\r\n\t\tsolve(n, m, k);\r\n\t}\r\n\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9979508196721312, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c686fd29284dd52626d7dce15fb6018a", "bug_code_uid": "c8ae9222269d2850e39c1f924c2e6394", "src_uid": "c611808e636d9307e6df9ee0e706310b", "apr_id": "f54349be88916c7f051886e0175eeaaa", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <limits.h>\nint d[3000], h[3000], v[3000];\nvoid init() {\n\tint i;\n\tfor(i = 0; i < 3000; i++) {\n\t\td[i] = 0;\n\t\th[i] = 0;\n\t\tv[i] = 0;\n\t}\n}\nint main() {\n\tint n, i, hi, vi, k;\n\n\tscanf(\"%d\",&n);\n\tk = n*n;\n\tinit();\n\tfor(i = 1; i <= k; i++) {\n\t\tscanf(\"%d%d\",&h,&v);\n\t\tif(!(h[hi]) && !(v[vi])) {\n\t\t\td[i] = 1;\n\t\t\th[hi] = 1;\n\t\t\tv[vi] = 1;\n\t\t}\n\t}\n\tfor(i = 1; i <=k; i++) {\n\t\tif(d[i])\n\t\t\tprintf(\"%d \",i);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <limits.h>\nint d[3000], h[3000], v[3000];\nvoid init() {\n\tint i;\n\tfor(i = 0; i < 3000; i++) {\n\t\td[i] = 0;\n\t\th[i] = 0;\n\t\tv[i] = 0;\n\t}\n}\nint main() {\n\tint n, i, hi, vi, k;\n\n\tscanf(\"%d\",&n);\n\tk = n*n;\n\tinit();\n\tfor(i = 1; i <= k; i++) {\n\t\tscanf(\"%d%d\",&hi,&vi);\n\t\tif(!(h[hi]) && !(v[vi])) {\n\t\t\td[i] = 1;\n\t\t\th[hi] = 1;\n\t\t\tv[vi] = 1;\n\t\t}\n\t}\n\tfor(i = 1; i <=k; i++) {\n\t\tif(d[i])\n\t\t\tprintf(\"%d \",i);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.8788461538461538, "equal_cnt": 14, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 8, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "03616cbf6fbbf0ebc3d777ab4321e959", "bug_code_uid": "94ed721a7cf2e3fde8e0eb8b8d75174f", "src_uid": "ace9fbabc2eda81b4e4adf4f2d5ad402", "apr_id": "cf60c4ee115c311f6bd721681fda67e9", "difficulty": 1700, "tags": ["dp", "implementation", "greedy", "data structures"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int total=0,t=0,a[10]={0},min=1000001,i=0,length=0,j=0,k=0;\n\tscanf(\"%lld\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tscanf(\"%lld\",&total);\n\t\tfor(j=0;j<9;j++)\n\t\t{\n\t\t\tscanf(\"%lld\",&a[j]);\n\t\t\tif(a[j]<min)min=a[j];\n\t\t}\n\n\t\tlength=total/min;\n\t\t\t\n\t\tif(length==0)printf(\"-1\\n\");\n\n\t\twhile(length>0)\n\t\t{\n\t\t\tfor(k=8;k>=0;k--)\n\t\t\t{\n\t\t\t\tif(((total-a[k]/min)==length)&&(total>=a[i]))\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%lld\",k+1);total-=a[k];break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t\treturn 0;\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int total=0,t=0,a[10]={0},min=1000001,i=0,length=0,j=0,k=0;\n\t//scanf(\"%lld\",&t);\n\t//for(i=0;i<t;i++)\n//\t{\n\t\tscanf(\"%lld\",&total);\n\t\tfor(j=0;j<9;j++)\n\t\t{\n\t\t\tscanf(\"%lld\",&a[j]);\n\t\t\tif(a[j]<=min)min=a[j];\n\t\t}\n\t\t\n\t\tlength=total/min;\n\t\t\t\n\t\tif(length==0)printf(\"-1\");\n\n\t\twhile(length>0)\n\t\t{\n\t\t\tk=8;\n\t\t\tfor(k=8;k>=0;k--)\n\t\t\t{\n\t\t\t\tif((((total-a[k])/min)==(length-1))&&(total>=a[k]))\n\t\t\t\t{//\tprintf(\"2\");\n\t\t\t\t\tprintf(\"%lld\",k+1);total-=a[k];break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlength--;\n\t\t}\n\t\tprintf(\"\\n\");\n\t\t\n//\t}\nreturn 0;\n}\n"}
{"similarity_score": 0.7350901525658807, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "2977866e31c8a0c023ec3498dd63d2c3", "bug_code_uid": "a592ae91cbf2eba43756f4bc9d7fea1a", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "a3def498cbd347228ba440234db95497", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i,max=0,arr[100001],j,arr1[100001];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\n\tfor(i=n-1;i>=0;i--)\n\t{\n\tif(arr[i]>max)\n\t{\n\t\tmax=arr[i];\n\t}\n\tarr1[i]=max;\n\t}\n\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(i==n-1)printf(\"0 \");\n\t\telse if(arr1[i]<=arr[i])printf(\"0 \");\n\t\telse if(arr1[i]>arr[i])printf(\"%d \",arr1[i]-arr[i]+1);\n\t}\n\n\t}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i,max=0,arr[100001],j,arr1[100001],index[100001];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\n\tfor(i=n-1;i>=0;i--)\n\t{\n\tarr1[i]=max;\n\tif(arr[i]>max)\n\t{\n\t\tmax=arr[i];\n\t}\n\t\n\t\n\t}\n\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(arr[i]<=arr1[i])printf(\"%d \",arr1[i]-arr[i]+1);\n\t\telse printf(\"0 \");\n\t}\n\n\t}\n"}
{"similarity_score": 0.6727726894254787, "equal_cnt": 23, "replace_cnt": 22, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 22, "lang": "GNU C", "fix_code_uid": "264066fdc6589ea2dbebdf0f7c73bbf4", "bug_code_uid": "3ef9aa29b5ba6708ae1eae658a326832", "src_uid": "19f2c21b18e84f50e251b1dfd557d32f", "apr_id": "2419736c9252e9da788ecf3f47880296", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int l,i,left=0,right=0,piv;\n    char str[1000001];\n    scanf(\"%s\",str);\n    l=strlen(str);\n    for(i=0;i<l;i++)\n    {\n        if(str[i]=='^')\n        break;\n    }\n    piv=i;\n    //printf(\"%d \",piv);\n    for(i=0;i<piv;i++)\n    {\n        if(str[i]>='0'&&str[i]<='9')\n        left=left+(piv-i)*(str[i]-'0');\n    }\n    for(i=piv+1;i<l;i++)\n    {\n        if(str[i]>='0'&&str[i]<='9')\n        right=right+(i-piv)*(str[i]-'0');\n    }\n    //printf(\"%d %d \",left,right);\n    if(left==right)\n    printf(\"balance\");\n    else if(left>right)\n    printf(\"left\");\n    else\n    printf(\"right\");\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tlong long int l,i,left=0,right=0,piv;\n\tchar str[1000001];\n\tscanf(\"%s\",str);\n\tl=strlen(str);\n\tfor(i=0;i<l;i++)\n\t{\n\t\tif(str[i]=='^')\n\t\tbreak;\n\t}\n\tpiv=i;\n\t//printf(\"%d \",piv);\n\tfor(i=0;i<piv;i++)\n\t{\n\t\tif(str[i]>='0'&&str[i]<='9')\n\t\tleft=left+(piv-i)*(str[i]-'0');\n\t}\n\tfor(i=piv+1;i<l;i++)\n\t{\n\t\tif(str[i]>='0'&&str[i]<='9')\n\t\tright=right+(i-piv)*(str[i]-'0');\n\t}\n\t//printf(\"%d %d \",left,right);\n\tif(left==right)\n\tprintf(\"balance\");\n\telse if(left>right)\n\tprintf(\"left\");\n\telse\n\tprintf(\"right\");\n\treturn 0;\n}"}
{"similarity_score": 0.8400435255712732, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "74b520c4f8545bcb7eb46ba4f2fcc233", "bug_code_uid": "c6abea03df342a0982dc8dac767c709a", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "7be2f7df33caae00924a0200d6d4bc85", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint t,i,j, ans[10000]\r\nunsigned long long int w, h, n, x ,y;\r\n\r\nint main(){\r\n\tscanf(\"%d\", &t);\r\n\tfor(i = 0; i < t; i++){\r\n\t\tscanf(\"%d\", &w);\r\n\t\tscanf(\"%d\", &h);\r\n\t\tscanf(\"%d\", &n);\r\n\t\tx = 1;\r\n\t\ty = 1;\r\n\t\tif (w % 2 == 0)\r\n\t\t\tx = w;\r\n\t\tif (h % 2 == 0)\r\n\t\t\ty = h;\r\n\t\tif( x * y >= n )\r\n\t\t\tans[i] = 1;\r\n\t}\r\n\tfor(i = 0; i < t; i++){\r\n\t\tif(ans[i]){\r\n\t\t\tputs(\"YES\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tputs(\"NO\");\r\n\t\t}\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint t, i, ans[10000];\r\nunsigned long long int w, h, n, x, y, j;\r\n\r\nint main(){\r\n\tscanf(\"%d\", &t);\r\n\tfor(i = 0; i < t; i++){\r\n\t\tscanf(\"%d\", &w);\r\n\t\tscanf(\"%d\", &h);\r\n\t\tscanf(\"%d\", &n);\r\n\t\tx = 1;\r\n\t\ty = 1;\r\n\t\tfor(j = 1; w % 2 == 0; w = w / 2){\r\n\t\t\tx += j;\r\n\t\t\tj*=2;\r\n\t\t}\r\n\t\tfor(j = 1; h % 2 == 0; h = h / 2){\r\n\t\t\ty += j;\r\n\t\t\tj*=2;\r\n\t\t}\r\n\t\tif( x * y >= n )\r\n\t\t\tans[i] = 1;\r\n\t}\r\n\tfor(i = 0; i < t; i++){\r\n\t\tif(ans[i]){\r\n\t\t\tputs(\"YES\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tputs(\"NO\");\r\n\t\t}\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.9854545454545455, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7225b5ff22b0bbad0bb9b90ebf18d232", "bug_code_uid": "279973ee2939f64fdb0cfd52bc1a667e", "src_uid": "644b8f95b66b7e4cb39af552ec518b3f", "apr_id": "96d6a2dfe4b3e85fbd9d2f94fc8e2fc4", "difficulty": 1700, "tags": ["constructive algorithms", "bitmasks"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint get_1st_bit (long long n) {\n\tint res = 0;\n\twhile (n>0) {\n\t\tres++;\n\t\tn >>= 1;\n\t}\n\treturn res;\n}\n\nint bit (long long n,int k) {\n\treturn ((n>>k)&1);\n}\n\nint popcount (long long n) {\n\tint res = 0;\n\twhile (n>0) {\n\t\tres += n&1;\n\t\tn >>= 1;\n\t}\n\treturn res;\n}\n\nlong long get_ans (long long l,long long r,int idx,int cr) {\n\tif (bit(l,idx)==bit(r,idx)) {\n\t\tif (bit(l,idx)==1)\n\t\t\treturn ((long long)1<<idx)|get_ans(l^((long long)1<<idx),r^((long long)1<<idx),idx-1,cr-1);\n\t\telse\n\t\t\treturn get_ans(l,r,idx-1,cr);\n\t}\n\tif (idx>=cr)\n\t\treturn ((long long)1<<idx)-1;\n\treturn r;\n}\n\nint main (void) {\n\tint n, k, cr;\n\tlong long l, r, ans;\n\tscanf(\"%d\",&n);\n\twhile (n-->0) {\n\t\tscanf(\"%I64d%I64d\",&l,&r);\n\t\tk = get_1st_bit(r);\n\t\tcr = popcount(r);\n\t\tans = get_ans(l,r,k,cr);\n\t\tprintf(\"%I64d\\n\",ans);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint get_1st_bit (long long n) {\n\tint res = 0;\n\twhile (n>0) {\n\t\tres++;\n\t\tn >>= 1;\n\t}\n\treturn res;\n}\n\nint bit (long long n,int k) {\n\treturn ((n>>k)&1);\n}\n\nint popcount (long long n) {\n\tint res = 0;\n\twhile (n>0) {\n\t\tres += n&1;\n\t\tn >>= 1;\n\t}\n\treturn res;\n}\n\nlong long get_ans (long long l,long long r,int idx,int cr) {\n\tif (idx<0)\n\t\treturn 0;\n\tif (bit(l,idx)==bit(r,idx)) {\n\t\tif (bit(l,idx)==1)\n\t\t\treturn ((long long)1<<idx)|get_ans(l^((long long)1<<idx),r^((long long)1<<idx),idx-1,cr-1);\n\t\telse\n\t\t\treturn get_ans(l,r,idx-1,cr);\n\t}\n\tif (idx>=cr)\n\t\treturn ((long long)1<<idx)-1;\n\treturn r;\n}\n\nint main (void) {\n\tint n, k, cr;\n\tlong long l, r, ans;\n\tscanf(\"%d\",&n);\n\twhile (n-->0) {\n\t\tscanf(\"%I64d%I64d\",&l,&r);\n\t\tk = get_1st_bit(r);\n\t\tcr = popcount(r);\n\t\tans = get_ans(l,r,k,cr);\n\t\tprintf(\"%I64d\\n\",ans);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9304229195088677, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "3c3df264b7c74d5ff0691b39fdb70d85", "bug_code_uid": "c4fba3b8adcc996f0740df6afb8e06d7", "src_uid": "7ac27da2546a50d453f7bb6cacef1068", "apr_id": "d1167ec61488ae2a51ab672048a7986b", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid main()\n{\n\t\n\tint t,i,dl,cl;\n\tprintf(\"enter the no. of tests\\n\");\n\tscanf(\"%d\",&t);\n\tint a,b,c,x,y;\n\tfor(i=0;i<t;i++)\n\t{\n\t\n\t\t\n\t\tscanf(\"%d\",&a);\n\t\t\n\t\tscanf(\"%d\",&b);\n\t\t\n\t\tscanf(\"%d\",&c);\n\t\t\n\t\tscanf(\"%d\",&x);\n\t\t\n\t\tscanf(\"%d\",&y);\n\t\t\n\t\tdl=x-a;\n\t\tcl=y-b;\n\t\t\n\t\tif(dl<0) dl=0;\n\t\tif(cl<0) cl=0;\n\t\t\n\t\tif((dl+cl)<=c) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\t\n\t\n\t\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\t\n\tint t,i,dl,cl;\n\t\n\tscanf(\"%d\",&t);\n\tint a,b,c,x,y;\n\tfor(i=0;i<t;i++)\n\t{\n\t\n\t\t\n\t\tscanf(\"%d\",&a);\n\t\t\n\t\tscanf(\"%d\",&b);\n\t\t\n\t\tscanf(\"%d\",&c);\n\t\t\n\t\tscanf(\"%d\",&x);\n\t\t\n\t\tscanf(\"%d\",&y);\n\t\t\n\t\tdl=x-a;\n\t\tcl=y-b;\n\t\t\n\t\tif(dl<0) dl=0;\n\t\tif(cl<0) cl=0;\n\t\t\n\t\tif((dl+cl)<=c) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\t\nreturn 0;\t\n\t\n}\n"}
{"similarity_score": 0.09775019394879751, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "4a012d91aeff46854968a0ae5a8595a9", "bug_code_uid": "ddfd2e0232546c6467ed76602a15fa95", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "bb3518813333f07fc963feae576f346c", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n,d,a[101],i,j,m,count=0,temp;\n    scanf(\"%d %d\",&n,&d);\n    for(i=0;i<n;i++) scanf(\"%d\",&a[i]);\n    scanf(\"%d\",&m);\n    if(m<n)\n    {\n        for(i=0;i<n;i++)\n            for(j=0;j<n;j++)\n            {\n                if(a[i]>a[j])\n                {\n                    temp=a[i];\n                    a[i]=a[j];\n                    a[j]=temp;\n                }\n            }\n            for(i=0;i<m;i++) count+=a[i];\n    }\n    else\n    {\n            temp=m-n;\n            for(i=0;i<n;i++) count+=a[i];\n            count=count-d*temp;\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n,m,*a,*l,*c,i,*b,*d;\n    scanf(\"%d %d\",&n,&m);\n    a=(int*)malloc(sizeof(int)*n);\n    b=(int*)malloc(sizeof(int)*m);\n    c=(int*)malloc(sizeof(int)*n);\n    d=(int*)malloc(sizeof(int)*100009);\n    for(i=0;i<100009;i++)\n        d[i]=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        c[i]=0;\n    }\n    c[n-1]=1;\n    d[a[n-1]]=1;\n    for(i=n-2;i>=0;i--)\n    {\n        if(d[a[i]]==1) c[i]=c[i+1];\n        else {c[i]=c[i+1]+1;d[a[i]]=1;}\n    }\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&b[i]);\n    }\n    for(i=0;i<m;i++){\n        printf(\"%d\\n\",c[b[i]-1]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9980952380952381, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a0948a7cd0fdd07f7249ea2cbfd31c08", "bug_code_uid": "8016e6d91f3070b4920564b202267392", "src_uid": "03772bac6ed5bfe75bc0ad4d2eab56fd", "apr_id": "9c4a52afbbf01acf736b5884030bdc03", "difficulty": 1600, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint m,t,r,w,count,sum=0,i;\n\tint candle[1000] ={0};\n\n\tscanf(\"%d%d%d\",&m,&t,&r);\n\tif( t+1 < r)\n\t\tsum = -1;\n\twhile( m-- ){\n\t\tscanf(\"%d\",&w);\n\t\tif( t+1 > r ){\n\t\t\tcount =0;\n\t\t\tfor( i = w-t; i<w && count < r;i++ ){\n\t\t\t\tif( candle[i+t] == 1 )\n\t\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif( count < r ){\n\t\t\t\tcount = r-count;\n\t\t\t\tsum += count;\n\t\t\t\ti=1;\n\t\t\t\twhile( count ){\n\t\t\t\t\tif( candle[ w - i+ t] == 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tcandle[w-i + t] = 1;\n\t\t\t\t\t\tcount--;\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",sum);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint m,t,r,w,count,sum=0,i;\n\tint candle[1000] ={0};\n\n\tscanf(\"%d%d%d\",&m,&t,&r);\n\tif( t < r)\n\t\tsum = -1;\n\twhile( m-- ){\n\t\tscanf(\"%d\",&w);\n\t\tif( t+1 > r ){\n\t\t\tcount =0;\n\t\t\tfor( i = w-t; i<w && count < r;i++ ){\n\t\t\t\tif( candle[i+t] == 1 )\n\t\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif( count < r ){\n\t\t\t\tcount = r-count;\n\t\t\t\tsum += count;\n\t\t\t\ti=1;\n\t\t\t\twhile( count ){\n\t\t\t\t\tif( candle[ w - i+ t] == 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tcandle[w-i + t] = 1;\n\t\t\t\t\t\tcount--;\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",sum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.500651890482399, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "efc4a7cff5759eeb9084615272765ffa", "bug_code_uid": "243c7bf1388c861f954dbde8d8ceadc3", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "0c5e8844b7d1cf43daae8fc90592a1f0", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdlib.h>\nmain()\n{\n    char a[100][8];\n    int n,i,k=0,z,x,c,v;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i][0]==a[i][1]=='O')\n        {\n            k=0;\n            z=i;c=i;x=0;v=1;\n            break;\n        }\n        if(a[i][5]==a[i][6]=='O')\n        {\n            k=0;\n            z=i;c=i;x=5;v=6;\n            break;\n        }\n    }\n    if(k==1)\n    for(i=0;i<7;i++)\n    {\n        for(j=1;j<n;j++)\n        {\n            if(a[j][i]==a[j-1][i]=='O')\n            {\n                k=0;\n                x=v=i;z=j;c=j-1;\n            }\n        }\n    }\n    if(k==1) printf(\"NO\");\n    else\n    {\n        printf(\"YES\");\n        a[z][x]=a[c][v]='+';\n        for(i=0;i<n;i++)\n        {\n            printf(\"\\n\");\n            printf(\"%s\",a[i]);\n        }\n    }\n}\n", "fixed": "#include<stdlib.h>\nmain()\n{\n    char a[1000][6];\n    int n,i,k=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&a[i]);\n        if(k==1)\n        {\n            if(a[i][0]=='O'&&a[i][1]=='O')\n            {\n                a[i][0]='+';a[i][1]='+';\n                k=0;\n            }\n            if(k==1)\n            {\n                if(a[i][3]=='O'&&a[i][4]=='O')\n                {\n                    a[i][3]='+';a[i][4]='+';\n                    k=0;\n                }\n            }\n        }\n    }\n    if(k==1) printf(\"NO\");\n    else\n    {\n        printf(\"YES\");\n        for(i=0;i<n;i++)\n        {\n            printf(\"\\n\");\n            printf(\"%s\",a[i]);\n        }\n    }\n}\n"}
{"similarity_score": 0.17954378219278883, "equal_cnt": 27, "replace_cnt": 21, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 26, "lang": "GNU C", "fix_code_uid": "3c59be890dacbe93212dcc2a311183f1", "bug_code_uid": "c95596d43f2271aa4d3536c6d3c27951", "src_uid": "53ae714f04fd29721b8bbf77576b7ccf", "apr_id": "5408c64a9813e73661d6a0c3177822e5", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\nvoid troca(int* a, int* b){\n    int t = *a;\n    *a = *b;\n    *b = t;\n}\n\nint custo;\nint v[3000];\n\nint distintos(int n){\n\tint i, j;\n\tfor(i = 0; i < n-1; i++){\n\t\tif(v[i] == v[i+1]){\n\t\t\tcusto++;\n\t\t\tv[i+1]++;\n\t\t\tfor(j=i+1; j < n-1; j++){\n\t\t\t\tif(v[j] >= v[j+1]){\n\t\t\t\t\ttroca(&v[j], &v[j+1]);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\n\n\nint main(int argc, char **argv){\n\tint n, i, minimo;\n\tscanf(\"%d \", &n);\n\tfor(i = 0; i < n; i++)\n\t\tscanf(\"%d \", &v[i]);\n\t\n\tcusto = 0;\n\t\n\tqsort(v, n, sizeof(int), cmpfunc);\n\twhile(distintos(n) != 1);\n\t/*printf(\"\\n\");*/\n\tprintf(\"%d\\n\", custo);\n\treturn 0;\n}\n\n\n/* 1522432072212 */\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\n    int N, i, j, aux;\n    int vetor[10000] = {0};\n    scanf(\" %d\", &N);\n    for(i = 0; i < N; i++) { \n        scanf(\" %d\", &aux);\n        vetor[aux]+=1;\n    }\n\n    int coins = 0;\n    for(i = 1; i <= N; i++) {\n        for(j = i + 1 ; vetor[i] > 1; j++) {\n            if(vetor[j] == 0) {\n                vetor[i] -= 1;\n                vetor[j] = 1;\n                coins += (j - i);\n            }\n        }\n    }\n\n    /*for(i = 1; i <= N; i++)\n        printf(\"%d \", vetor[i]);\n    printf(\"\\n\");*/\n    \n    printf(\"%d\\n\", coins);\n    return 0;\n}\n/* 1522433914049 */\n"}
{"similarity_score": 0.9883040935672515, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "54453f42eb560274d2a5742286355b53", "bug_code_uid": "60aaa4a4e87add99f1c68c808874e992", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "8c8883635cdbbc1af1aca5cd543d3ad0", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\nint main()\n{\n    long a,b,n,S;\n    long i,j=0,q,z;\n    scanf(\"%ld\",&q);\n    for(z=0;z<q;z++)\n    {\n        j=0;\n        scanf(\"%ld %ld %ld %ld\",&a,&b,&n,&S) ;\n        \n        for(i=(S-b)/n;i<=a;i++)\n        {\n            if(S>=i*n&&S<=(i*n+b))\n            {\n                printf(\"YES\\n\");\n                j=1;\n                break;\n            } \n        } \n        if(j==0)\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\nint main()\n{\n    long a,b,n,S;\n    long i,j=0,q,z;\n    scanf(\"%ld\",&q);\n    for(z=0;z<q;z++)\n    {\n        j=0;\n        scanf(\"%ld %ld %ld %ld\",&a,&b,&n,&S) ;\n        \n        for(i=(S-b)/n;i<=(S+b)/n&&i<=a;i++)\n        {\n            if(S>=i*n&&S<=(i*n+b))\n            {\n                printf(\"YES\\n\");\n                j=1;\n                break;\n            } \n        } \n        if(j==0)\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8097165991902834, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "019584d78000427a9a77362e5869cf49", "bug_code_uid": "a1d4f49991b60b06e60868e7e907d795", "src_uid": "a52ceb8a894809b570cbb74dc5ef76e1", "apr_id": "c47ab10d48760a95990796918326cfb2", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n\n    if(n==2)\n        {\n            printf(\"1\\n\");\n        printf(\"1\");\n        }\n\n    else  if(n==4)\n        {\n            printf(\"3\\n\");\n             printf(\"1 4 2\\n\");\n        }\n\n    else if(n%2==0)\n    {\n        printf(\"%d\\n\",n);\n        int k=n/2;\n        for(i=1;i<=n/2;i++)\n        {\n            printf(\"%d\\t\",i);\n            printf(\"%d\\t\",k+1);\n            k++;\n        }\n    }\n\n         else if(n%2!=0)\n    {\n        if(n==3)\n        {\n            printf(\"%d\\n\",n-1);\n            printf(\"%d %d\",n-2,n);\n        }\n        else{\n                printf(\"%d\\n\",n);\n        for(i=1;i<=n;i++)\n        {\n            if(i%2==0)\n                printf(\"%d\\t\",i);\n        }\n        for(i=1;i<=n;i++)\n        {\n            if(i%2!=0)\n                printf(\"%d\\t\",i);\n        }\n    }\n   }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n\n    if(n==2)\n        {\n            printf(\"1\\n\");\n        printf(\"1\");\n        }\n\n    else  if(n==4)\n        {\n            printf(\"4\\n\");\n             printf(\"3 1 4 2\");\n        }\n    else if(n==3)\n        {\n            printf(\"%d\\n\",n-1);\n            printf(\"%d %d\",n-2,n);\n        }\n\n    else if(n%2==0)\n    {\n        printf(\"%d\\n\",n);\n        int k=n/2;\n        for(i=1;i<=n/2;i++)\n        {\n            printf(\"%d\\t\",i);\n            printf(\"%d\\t\",k+1);\n            k++;\n        }\n    }\n\n         else if(n%2!=0)\n\n\n        {\n                printf(\"%d\\n\",n);\n        for(i=1;i<=n;i++)\n        {\n            if(i%2==0)\n                printf(\"%d\\t\",i);\n        }\n        for(i=1;i<=n;i++)\n        {\n            if(i%2!=0)\n                printf(\"%d\\t\",i);\n        }\n    }\n    return 0;\n   }\n\n\n\n"}
{"similarity_score": 0.9291338582677166, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "10e6b3466e5893252eab924d6a51b1db", "bug_code_uid": "0c82d4a776daeeb81fd200c2a99375b1", "src_uid": "48f3ff32a11770f3b168d6e15c0df813", "apr_id": "41921f7a9fb78f7e3f5277c5cd9f1a1c", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long n, m, i, j, k, x, y, v, q;\n    long arr[100002];\n    int t;\n    scanf(\"%ld%ld\", &n, &m);\n    for (i = 0; i < n; i++) {\n        scanf(\"%ld\", &arr[i]);\n    }\n    for (i = 0; i < m; i++) {\n        scanf(\"%d\", &t);\n        if (t == 1) {\n              scanf(\"%ld%ld\", &v, &x);\n              arr[v - 1] = x;\n        } else if (t == 2) {\n               scanf(\"%ld\", &y);\n               for (j = 0; j < n; j++) {\n                   arr[j] += y;\n               }\n        } else if (t == 3) {\n               scanf(\"%ld\", &q);\n               printf(\"%ld\\n\", arr[q - 1]);\n        }\n    }\n    return 0;\n}\n               \n        \n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long n, m, i, j, k, x, y, v, q;\n    long arr[100002];\n    int t;\n    scanf(\"%ld%ld\", &n, &m);\n    for (i = 0; i < n; i++) {\n        scanf(\"%ld\", &arr[i]);\n    }\n    k = 0;\n    for (i = 0; i < m; i++) {\n        scanf(\"%d\", &t);\n        if (t == 1) {\n              scanf(\"%ld%ld\", &v, &x);\n              arr[v - 1] = x - k;\n        } else if (t == 2) {\n               scanf(\"%ld\", &y);\n               k += y;\n        } else if (t == 3) {\n               scanf(\"%ld\", &q);\n               printf(\"%ld\\n\", arr[q - 1] + k);\n        }\n    }\n    return 0;\n}\n               \n        \n"}
{"similarity_score": 0.5448275862068965, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "4e2fdede7edbaaf0868b8fb8322b943b", "bug_code_uid": "5216355a0ee6c61a3efee95f11dfc549", "src_uid": "192f181cfc74bef5b0b5a192964d9760", "apr_id": "9033c3755e76f5e6c2ed36dfd27200b6", "difficulty": 1400, "tags": ["data structures", "constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main ()\n{\n    int t;\n    scanf(\"%d\", &t);\n    label:\n    while (t--){\n        int n;\n        scanf (\"%d\", &n);\n        int arr [n];\n        int i, j;\n        for (i = 0; i < n; i++) {\n            scanf (\"%d\", &arr [i]);\n        }\n        for (i = n-2; i >= 0; i--) {\n            if (arr [i] > arr [n-1]) {\n                if (i == 0) {\n                    printf (\"NO\\n\");\n                    goto label;\n                }\n                for (j= i-1; j >= 0; j--) {\n                    if (arr [j] < arr [i]) {\n                        break;\n                    }\n                    else {\n                        printf (\"NO\\n\");\n                        goto label;\n                    }\n                }\n            }\n        }\n        printf (\"YES\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main ()\n{\n    int t;\n    scanf(\"%d\", &t);\n    label:\n    while (t--){\n        int n;\n        scanf (\"%d\", &n);\n        int arr [n];\n        int i, j;\n        for (i = 0; i < n; i++) {\n            scanf (\"%d\", &arr [i]);\n        }\n        if (arr [0] < arr [n-1]) printf (\"YES\\n\");\n        else printf (\"NO\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.998393144081414, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f482ac30447f055173383a0e31113fdf", "bug_code_uid": "05cf845a456fcbfbea209a2143c5b0c4", "src_uid": "1e061d8c4bff217047ddc58e88be0c3f", "apr_id": "5a2da6769e8184f26fa6e007bb3d013a", "difficulty": 1900, "tags": ["constructive algorithms", "implementation", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int k, i, j;\n    scanf(\"%d\", &k);\n    if (k % 2 == 0) puts(\"NO\");\n    else if (k == 1) {\n        puts(\"YES\\n2 1\\n1 2\");\n    } else {\n        printf(\"YES\\n%d %d\\n\", k + k + 4, k * (k + k + 4) / 2);\n        for (i = 2; i <= k; ++i)\n            printf(\"1 %d\\n%d %d\\n%d %d\\n\", i, i, k + 1, i, k + 2);\n        for (i = 2; i < k; ++i)\n            for (j = i + 1; j <= k; ++j)\n                if ((i & 1) || j != i + 1) printf(\"%d %d\\n\", i, j);\n        printf(\"%d %d\\n\", k + 1, k + 2);\n\n        for (i = 2; i <= k; ++i)\n            printf(\"%d %d\\n%d %d\\n%d %d\\n\",\n                k + 2, k + 2 + i, k + 2 + i, k + k + 3, k + 2 + i, k + k + 4);\n        for (i = 2; i < k; ++i)\n            for (j = i + 1; j <= k; ++j)\n                if ((i & 1) || j != i + 1) printf(\"%d %d\\n\", i + k + 2, j + k + 2);\n        printf(\"%d %d\\n\", k + k + 3, k + k + 4);\n        printf(\"1 %d\\n\", k + 3);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int k, i, j;\n    scanf(\"%d\", &k);\n    if (k % 2 == 0) puts(\"NO\");\n    else if (k == 1) {\n        puts(\"YES\\n2 1\\n1 2\");\n    } else {\n        printf(\"YES\\n%d %d\\n\", k + k + 4, k * (k + k + 4) / 2);\n        for (i = 2; i <= k; ++i)\n            printf(\"1 %d\\n%d %d\\n%d %d\\n\", i, i, k + 1, i, k + 2);\n        for (i = 2; i < k; ++i)\n            for (j = i + 1; j <= k; ++j)\n                if ((i & 1) || j != i + 1) printf(\"%d %d\\n\", i, j);\n        printf(\"%d %d\\n\", k + 1, k + 2);\n\n        for (i = 2; i <= k; ++i)\n            printf(\"%d %d\\n%d %d\\n%d %d\\n\",\n                k + 3, k + 2 + i, k + 2 + i, k + k + 3, k + 2 + i, k + k + 4);\n        for (i = 2; i < k; ++i)\n            for (j = i + 1; j <= k; ++j)\n                if ((i & 1) || j != i + 1) printf(\"%d %d\\n\", i + k + 2, j + k + 2);\n        printf(\"%d %d\\n\", k + k + 3, k + k + 4);\n        printf(\"1 %d\\n\", k + 3);\n    }\n    return 0;\n}"}
{"similarity_score": 0.870253164556962, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "b65610cf24bc06fb58643dba9690277a", "bug_code_uid": "376c72a8b0ff0fcffbc21ef254ee3879", "src_uid": "04330cb392bcfd51d1acffd72c8004cb", "apr_id": "177be7a9b46f4b87d89ac6a89acd03f5", "difficulty": 1100, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint ss(long long int x)\r\n{\r\n    if(x==1)return 0;\r\n    for(long long int i=2;i*i<=x;i++)\r\n    {\r\n        if(x%i==0)return 0;\r\n    }\r\n    return 1;\r\n}\r\nint main()\r\n{\r\n    long long int x[20],y[20];\r\n    long long int h=1;\r\n\r\n    for(int i=1;i<=9;i++)\r\n    {\r\n        int sum=0;\r\n        for(long long int j=h;j<h*10;j++)\r\n        {\r\n            if(ss(j))\r\n            {\r\n                if(sum==0){\r\n                x[i]=j;\r\n                sum++;\r\n                }\r\n                else\r\n                {\r\n                    y[i]=j;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        h=h*10;\r\n    }\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int a,b,c;\r\n        scanf(\"%d%d%d\",&a,&b,&c);\r\n        printf(\"%lld %lld\\n\",(long long int)(x[a-c+1]*pow(10,c-1)),(long long int)(y[b-c+1]*pow(10,c-1)));\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint ss(long long int x)\r\n{\r\n    if(x==1)return 0;\r\n    for(long long int i=2;i*i<=x;i++)\r\n    {\r\n        if(x%i==0)return 0;\r\n    }\r\n    return 1;\r\n}\r\nint main()\r\n{\r\n    long long int x[20],y[20];\r\n    long long int h=1;\r\n\r\n    for(int i=1;i<=9;i++)\r\n    {\r\n        int sum=0;\r\n        for(long long int j=h;j<h*10;j++)\r\n        {\r\n            if(ss(j))\r\n            {\r\n                if(sum==0){\r\n                x[i]=j;\r\n                sum++;\r\n                }\r\n                else\r\n                {\r\n                    y[i]=j;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        h=h*10;\r\n    }\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int a,b,c;\r\n        scanf(\"%d%d%d\",&a,&b,&c);\r\n        long long int f=1;\r\n        for(int i=1;i<=c-1;i++)\r\n        {\r\n            f=f*10;\r\n        }\r\n        long long int o,p;\r\n        o=x[a-c+1]*f,p=y[b-c+1]*f;\r\n        printf(\"%lld %lld\\n\",o,p);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.05005440696409141, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "dbb0572050d00d2a6c86587e8903c6d6", "bug_code_uid": "050d6db2348cdb2cee32007bc0a6a525", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "83f07b2d0c35992a61d3447b7e18bf4d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint arr[1000+5];\r\nvoid generate_polycrap()\r\n{\r\n    int prev;\r\n    for(int i=1;i<1001;i++)\r\n    {   \r\n        for(int k=i; ;k++)\r\n        {\r\n            if(k%3==0 || k%10==3 || k<=prev){continue;}\r\n            else\r\n            {\r\n                arr[i]=k;\r\n                prev=k;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nint main ()\r\n{\r\n    \r\n  generate_polycrap();\r\n  int test_case,number;\r\n  scanf(\"%d\",&test_case);\r\n  for(int i=0;i<test_case;i++)\r\n  {\r\n    scanf(\"%d\",&number);\r\n    printf(\"%d\\n\",arr[number]);\r\n  }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int test_case,num,num2;\r\n    scanf(\"%d\",&test_case);\r\n\r\n    for(int i=0;i<test_case;i++)\r\n    {\r\n        scanf(\"%d\",&num);\r\n        for(int k=1;k<=num;k++)\r\n        {\r\n            if(k%3==0 || k%10==3){num++;}\r\n            else num2=k;\r\n        }\r\n        printf(\"%d\\n\",num2);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.72, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "0a3168959e43688491e29c70e84fe704", "bug_code_uid": "3d26e9e0cc54697050c3bb6705da24f5", "src_uid": "0937a7e2f912fc094cc4275fd47cd457", "apr_id": "e389031ee12ad88375b1e766c7fea7cf", "difficulty": 1500, "tags": ["sortings", "greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\ntypedef struct {int num; int ab;} boy;\nboy arr[1100], k;\nint n,t,j,i;\nint main(){\n scanf(\"%d\", &n);\n for(i=0; i<n; i++){\n\t scanf(\"%d\", &arr[i].ab);\n arr[i].num=i+1;\n }\n for(i=0; i<n; i++){\n\t t=i;\n\t for(j=i+1; j<n; j++){\n\t\t if(arr[j].ab>arr[t].ab){\n\t\t\tt=j;\t\n\t\t }\n\t }\n\t k=arr[i];\n\t arr[i]=arr[t];\n\t arr[t]=k;\n }\n printf(\"%d\\n\", (n&1)+n/2); \n for(i=0; i<n; i+=2){\n  printf(\"%d \", arr[i].num);\n }\n\nputchar('\\n');\n printf(\"%d\\n\", n/2); \n for(i=1; i<n; i+=2){\n  printf(\"%d \", arr[i].num);\n }\n return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\ntypedef struct {int num; int ab;} boy;\nboy arr[110000], k;\nint n,t,j,i;\nint cmp(const void* el1, const void* el2){ boy a=(*(boy*)el1); boy b=(*(boy*)el2);\n\treturn (a.ab==b.ab)?0:((a.ab>b.ab)?1:-1);\n}\n\nint main(){\n scanf(\"%d\", &n);\n for(i=0; i<n; i++){\n\t scanf(\"%d\", &arr[i].ab);\n arr[i].num=i+1;\n } qsort(arr, n, sizeof(boy), &cmp); \n printf(\"%d\\n\", (n&1)+n/2); \n for(i=0; i<n; i+=2){\n  printf(\"%d \", arr[i].num);\n }\n\nputchar('\\n');\n printf(\"%d\\n\", n/2); \n for(i=1; i<n; i+=2){\n  printf(\"%d \", arr[i].num);\n }\n return 0;\n}\n"}
{"similarity_score": 0.6843100189035917, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "acd122d62add374a6ab66c7af7601584", "bug_code_uid": "5604ccee37204d63c73d653f6d341061", "src_uid": "f82058f6ba3ce0da15a5ce059674af35", "apr_id": "197618054d22a837d48a315b0e5adb6f", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main()\n{\n int n,k,i,p=0,d[38333],j,sum=0,count=0 ;\n int a,b,c,x,t,y,z ;\nscanf(\"%d\",&t) ;\nfor(i=1 ; i<=t ; i++)\n{\n   scanf(\"%d\",&n) ;\n   p=1 ;\n   for(j=1 ; j<=n ; j++)\n   {\n       printf(\"%d \",p)  ;\n       p=p+2 ;\n   }\n   printf(\"\\n\") ;\n}\n\n\nreturn 0 ;\n}\n", "fixed": "#include<stdio.h>\n\n\nint main()\n{\n int n,k,i,p=0,d[38333],j,sum=0,count=0 ;\n int a,b,c,x,t,y,z ;\nscanf(\"%d\",&t) ;\nfor(i=1 ; i<=t ; i++)\n{\n   scanf(\"%d\",&n) ;\n\n   for(j=1 ; j<=n ; j++)\n   {\n       printf(\"1 \")  ;\n\n   }\n   printf(\"\\n\") ;\n}\n\n\nreturn 0 ;\n}\n"}
{"similarity_score": 0.9139941690962099, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "620d61f3e3e87c1321bed923a40079bd", "bug_code_uid": "2e0ad355c4d98765dc3881ef22bfd8ef", "src_uid": "930be5ec102fbe062062aa23eac75187", "apr_id": "62e14f3201051f7b1ac6927c1289363b", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int number[100], i, e, n;\n    scanf(\"%d\",&n);\n    for( e = 0; e <= n - 1; e++)\n\t{\n\t\tscanf(\"%d\",&number[e]);\n\t}\n    for( i = 0; i <= n - 1; i++)\n    {\n    \tfor( e = i; e <= n - 1; e++)\n    \t{\n    \t\tif( number[i] > number[e])\n    \t\t{\n    \t\t\tnumber[i] = number[i] + number[e];\n    \t\t\tnumber[e] = number[i] - number[e];\n    \t\t\tnumber[i] = number[i] - number[e];\n\t\t\t}\n\t\t}\n\t}\n\tfor( e = 0; e <= n - 2; e++)\n\t{\n\t\tif( number[e] == number[e + 1])\n\t\t{\n\t\t\ti = -10;\n\t\t}\n\t\telse \n\t\t{\n\t\ti = -9;\n\t\tbreak;\n\t\t}\n\t}\n\tif( i == -10 || n == 1)\n\t{\n\t\tprintf(\"NO\");\n\t}\n\telse \n\t{\n\t\tprintf(\"%d\",number[1]);\n\t}\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int number[100], i, e, n;\n    scanf(\"%d\",&n);\n    for( e = 0; e <= n - 1; e++)\n\t{\n\t\tscanf(\"%d\",&number[e]);\n\t}\n    for( i = 0; i <= n - 1; i++)\n    {\n    \tfor( e = i; e <= n - 1; e++)\n    \t{\n    \t\tif( number[i] > number[e])\n    \t\t{\n    \t\t\tnumber[i] = number[i] + number[e];\n    \t\t\tnumber[e] = number[i] - number[e];\n    \t\t\tnumber[i] = number[i] - number[e];\n\t\t\t}\n\t\t}\n\t}\n\tfor( e = 0; e <= n - 2; e++)\n\t{\n\t\tif( number[e] == number[e + 1])\n\t\t{\n\t\t\ti = -10;\n\t\t}\n\t\telse \n\t\t{\n\t\ti = -9;\n\t\tbreak;\n\t\t}\n\t}\n\tif( i == -10 || n == 1\t)\n\t{\n\t\tprintf(\"NO\");\n\t}\n\telse \n\t{\n\t\tfor( e = 1; e <= n - 1; e++)\n\t\t{\n\t\t\tif( number[e] != number[e - 1])\n\t\t\t{\n\t\t\t\tprintf(\"%d\",number[e]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n"}
{"similarity_score": 0.9969135802469136, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ed5d9948c73097c36802b9e24bdd04de", "bug_code_uid": "3f4ea818ede84edec8fa8dc39069abfb", "src_uid": "59d926bca19a6dcfe3eb3e3dc03fffd6", "apr_id": "d0b993223db246043a4a4abd8ff34e08", "difficulty": 900, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n\nint main()\n{\n  char s[200001],t[200001];\n  int l,i,m,p,tot;\n  scanf(\"%s\",&s);\n  scanf(\"\\n%s\",&t);\n  l=strlen(s);\n  m=strlen(t);\n  if(l<m)p=l;\n  else p=m;\n  tot=l+m;\n  for(i=0;i=<p-1;i++)\n  {\n      if(s[l-i-1]==t[m-i-1])tot=tot-2;\n      else break;\n  }\n  printf(\"%d\",tot);\n  return 0;\n}", "fixed": "#include <stdio.h>\n#include<string.h>\n\nint main()\n{\n  char s[200001],t[200001];\n  int l,i,m,p,tot;\n  scanf(\"%s\",&s);\n  scanf(\"\\n%s\",&t);\n  l=strlen(s);\n  m=strlen(t);\n  if(l<m)p=l;\n  else p=m;\n  tot=l+m;\n  for(i=0;i<=p-1;i++)\n  {\n      if(s[l-i-1]==t[m-i-1])tot=tot-2;\n      else break;\n  }\n  printf(\"%d\",tot);\n  return 0;\n}"}
{"similarity_score": 0.17788089713843774, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "51025b72aa07039dd59da94b28475057", "bug_code_uid": "946c126dc1c28bf75f64ab174bcc7dc6", "src_uid": "6422d76f71702e77808b1cc041962bb8", "apr_id": "bb700d3aec8607a3f453d59ea0a59d9d", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint abs(int a, int b)\r\n{\r\n    if(a>b)\r\n    {\r\n        return a-b;\r\n    }\r\n    else {\r\n        return b-a;\r\n    }\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int xa,ya;\r\n        scanf(\"%d %d\",&xa,&ya);\r\n        int xb,yb;\r\n        scanf(\"%d %d\",&xb,&yb);\r\n        int xf,yf;\r\n        scanf(\"%d %d\",&xf,&yf);\r\n        int x = abs(xa,xb);\r\n        int y = abs(ya,yb);\r\n        int fa = abs(xa,xf) + abs(ya,yf);\r\n        int fb = abs(xb,xf) + abs(yb,yf);\r\n        int d;\r\n        if(fa == fb && xa != ya && xb != yb && xf != yf)\r\n        {\r\n            d = x + y + 2;\r\n        }\r\n        else {\r\n            d = x + y;\r\n        }\r\n        \r\n        printf(\"%d\\n\", d);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int xa,xb,ya,yb,za,zb;\r\n        scanf(\"%d %d %d %d %d %d\",&xa,&xb,&ya,&yb,&za,&zb);\r\n        int ans = 0;\r\n        ans = abs(xa - ya) + abs(xb - yb);\r\n        if(((za >= xa && za <= ya)  || (za <= xa && za >= ya)) && zb == yb && yb == xb) {\r\n            ans += 2;\r\n        }\r\n        else if(((zb >= xb && zb <= yb) ||(zb <= xb && zb >= yb))  && xa == ya && xa == za) {\r\n            ans += 2;\r\n        }\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n}"}
{"similarity_score": 0.9559902200488998, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c18bc1d9d5aa7c5d2248471433b86df7", "bug_code_uid": "52cec30b90152a6e9c1be4eba343c0ef", "src_uid": "bd5912fe2c5c37658f28f6b159b39645", "apr_id": "ab10a76f2485618af64be4a0256cde73", "difficulty": 1000, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include<string.h>\nint main()\n{\n   char s[1000];\n   int k,nb,i,t[26]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\n   scanf(\"%s\",s);\n   scanf(\"%d\",&k);\n   if (k<=strlen(s))\n    {for(i=0;s[i];i++)\n        t[s[i]-97]=1;\n    for(i=0,nb=0;i<26;i++)\n        if (t[i]==1) nb++;\n    printf(\"%d\",k-nb);\n    }\n    else printf(\"impossible\");\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include<string.h>\nint main()\n{\n   char s[1000];\n   int k,nb,i,t[26]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\n   scanf(\"%s\",s);\n   scanf(\"%d\",&k);\n   if (k<=strlen(s))\n    {for(i=0;s[i];i++)\n        t[s[i]-97]=1;\n    for(i=0,nb=0;i<26;i++)\n        if (t[i]==1) nb++;\n    if (nb>=k) printf(\"%d\",0);\n    else printf(\"%d\",k-nb);\n    }\n    else printf(\"impossible\");\nreturn 0;\n}"}
{"similarity_score": 0.9809465273509527, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a96ed3647f47108582c0d60cce92a489", "bug_code_uid": "e7280f47a000ea06c5fb37fc38c41e20", "src_uid": "3d0685162fbb432c37bb6aeb5fe51f94", "apr_id": "e8dc086fb890134c0763dea876ab9d14", "difficulty": 1200, "tags": ["binary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#define LL unsigned long long\r\nint min(int a,int b)\r\n{\r\n    if(a<b){\r\n        return a;\r\n    }\r\n\r\n    else{\r\n        return b;\r\n    }\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        LL n,h,i,ans,sum;\r\n        scanf(\"%llu %llu\",&n,&h);\r\n        LL a[101];\r\n        for(i=0;i<n;i++){\r\n            scanf(\"%llu\",&a[i]);\r\n        }\r\n\r\n        LL hi=h,lo=1,mid;\r\n        while(lo<=hi){\r\n\r\n            mid=(hi+lo)/2;\r\n            sum=mid;\r\n\r\n\r\n            for(i=1;i<n;i++){\r\n                sum+=(min(mid,(a[i]-a[i-1])));\r\n            }\r\n\r\n            if(h>sum){\r\n                lo=mid+1;\r\n            }\r\n\r\n            else if(h<=sum){\r\n                hi=mid-1;\r\n                ans=mid;\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n        printf(\"%llu\\n\",ans);\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#define LL unsigned long long\r\nLL min(LL a,LL b)\r\n{\r\n    if(a<b){\r\n        return a;\r\n    }\r\n\r\n    else{\r\n        return b;\r\n    }\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        LL n,h,i,ans,sum;\r\n        scanf(\"%llu %llu\",&n,&h);\r\n        LL a[101];\r\n        for(i=0;i<n;i++){\r\n            scanf(\"%llu\",&a[i]);\r\n        }\r\n\r\n        LL hi=h,lo=1,mid;\r\n        while(lo<=hi){\r\n\r\n            mid=(hi+lo)/2;\r\n            sum=mid;\r\n\r\n\r\n            for(i=1;i<n;i++){\r\n                sum+=(min(mid,(a[i]-a[i-1])));\r\n            }\r\n\r\n            if(h>sum){\r\n                lo=mid+1;\r\n            }\r\n\r\n            else if(h<=sum){\r\n                hi=mid-1;\r\n                ans=mid;\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n        printf(\"%llu\\n\",ans);\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9991589571068125, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "41ae527c3940295e228e7049495d1bdb", "bug_code_uid": "340152ca0fa24b3dbb93244cdd0fd7c3", "src_uid": "bcc758394d012519f0865479b3c6770c", "apr_id": "f83ad63784ba37311da841852c21b82f", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<math.h>\n#include<stdlib.h>\nstruct num{\n\tdouble r;\n\tint k;\n}a[100];\nint cmp(const void *a\t,const void *b) ;\nint main(void)\n{\n\tint n,s,i,x,y,sumk,flag=0;\n\tscanf(\"%d %d\",&n,&s);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d %d\",&x,&y,&a[i].k);\n\t\ta[i].r=sqrt(x*x+y*y);\n\t}\n\tqsort(a,i,sizeof(a[0]),cmp);\n\tsumk=s;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(sumk+a[i].k>=1000000)\n\t\t{\n\t\t\tprintf(\"%f\",a[i].r);\n\t\t\tflag=1;\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t\tsumk+=a[i].k;\n\t}\n\tif(flag==0)\n\t\tprintf(\"-1\");\n\treturn 0;\n}\n\nint cmp(const void *a\t,const void *b)\n{\n\treturn (*(struct num *)a).r>(*(struct num *)b).r?1:-1;\n}\n", "fixed": "#include <stdio.h>\n#include<math.h>\n#include<stdlib.h>\nstruct num{\n\tdouble r;\n\tint k;\n}a[1000];\nint cmp(const void *a\t,const void *b) ;\nint main(void)\n{\n\tint n,s,i,x,y,sumk,flag=0;\n\tscanf(\"%d %d\",&n,&s);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d %d\",&x,&y,&a[i].k);\n\t\ta[i].r=sqrt(x*x+y*y);\n\t}\n\tqsort(a,i,sizeof(a[0]),cmp);\n\tsumk=s;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(sumk+a[i].k>=1000000)\n\t\t{\n\t\t\tprintf(\"%f\",a[i].r);\n\t\t\tflag=1;\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t\tsumk+=a[i].k;\n\t}\n\tif(flag==0)\n\t\tprintf(\"-1\");\n\treturn 0;\n}\n\nint cmp(const void *a\t,const void *b)\n{\n\treturn (*(struct num *)a).r>(*(struct num *)b).r?1:-1;\n}\n"}
{"similarity_score": 0.9595092024539877, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d782c9767522002c84b6de05d99f0a60", "bug_code_uid": "ea4b442b94a5d1c99f3387fa3fb8db29", "src_uid": "a7e98ed8ee1b0a4fd03dfcd222b68c6f", "apr_id": "eb57c5330de1de1ea0292d89ac0a91d2", "difficulty": 800, "tags": ["two pointers", "implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define N 1000\nint main()\n{\n\tint n,s=0,d=0,a[N],i,j,flag=1;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0,j=n-1;i<=j;)\n\t{\n\t\tif(flag)\n\t\t{\n\t\t\tif(a[i]>a[j])\n\t\t\t{\n\t\t\t\ts+=a[i++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ts+=a[j--];\n\t\t\t}\n\t\t\tflag=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(a[i]>a[j])\n\t\t\t{\n\t\t\t\td+=a[i++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\td+=a[j--];\n\t\t\t}\n\t\t\tflag=1;\n\t\t}\n\t\t\n\t}\n\tprintf(\"%d %d\\n\",s,d);\n}\n", "fixed": "#include<stdio.h>\n#define N 1000\nint main()\n{\n\tint n,s=0,d=0,a[N],i,j,flag=1;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0,j=n-1;i<=j;)\n\t{\n\t\tif(flag)\n\t\t{\n\t\t\tif(a[i]>a[j])\n\t\t\t{\n\t\t\t\ts+=a[i++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ts+=a[j--];\n\t\t\t}\n\t\t\tflag=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(a[i]>a[j])\n\t\t\t{\n\t\t\t\td+=a[i++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\td+=a[j--];\n\t\t\t}\n\t\t\tflag=1;\n\t\t}\n\t\t\n\t}\n\tprintf(\"%d %d\",s,d);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8063872255489022, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "25239a091e4f63571c80e6c1f084aaf4", "bug_code_uid": "23c7462b96db01f500a3a4ca80f7a500", "src_uid": "beab56c5f7d2996d447320a62b0963c2", "apr_id": "667e8d092f3c03d828d87d32da6326a8", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long long int q,n,a,b,i;\n    scanf(\"%lld\",&q);\n    for(i=0;i<q;i++){\n        scanf(\"%lld%lld%lld\",&n,&a,&b);\n        if(a<b)printf(\"%lld\\n\",n*a);\n        else printf(\"%lld\\n\",(n/b)*a);\n    }\n}\n", "fixed": "\n#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long long int q,n,a,b,i,j;\n    scanf(\"%lld\",&q);\n    for(i=0;i<q;i++){\n        scanf(\"%lld%lld%lld\",&n,&a,&b);\n        if(2*a<b)j=2*a;\n        else j=b;\n        printf(\"%lld\\n\",(n/2)*j+a*(n%2));\n    }\n}\n"}
{"similarity_score": 0.9994931576279777, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fa0fe92b0bc43d4186b9174c9f9763fd", "bug_code_uid": "544ca4de3b27edc1b81cbb9bea9cdfaf", "src_uid": "1ab174688ba76168ca047ed2b06b0670", "apr_id": "7733b7dbe164c8f2d737e66ae1ef2e5b", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\nint main() {\n    int tests, counter = 0;\n    scanf(\"%d\", &tests);\n    long long results[tests];\n    while (tests > 0) {\n        long long a, b, c, d;\n        scanf(\"%lld %lld %lld %lld\", &a, &b, &c, &d);\n        if (b >= a) {\n            results[counter] = b;\n            counter++;\n        } else if (d > c) {\n            results[counter] = -1;\n            counter++;\n        } else {\n            long long remaining = a - b;\n            long long sleep = c - d;\n            long long frequency;\n            if (remaining % sleep == 0) {\n                frequency = remaining/sleep; \n            } else {\n                frequency = remaining/sleep;\n                frequency++;\n            }\n            results[counter] = b + frequency*c;\n            counter++;\n        }\n        tests--;\n    }\n    int count = 0;\n    while (count < counter) {\n        printf(\"%lld\\n\", results[count]);\n        count++; \n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\nint main() {\n    int tests, counter = 0;\n    scanf(\"%d\", &tests);\n    long long results[tests];\n    while (tests > 0) {\n        long long a, b, c, d;\n        scanf(\"%lld %lld %lld %lld\", &a, &b, &c, &d);\n        if (b >= a) {\n            results[counter] = b;\n            counter++;\n        } else if (d >= c) {\n            results[counter] = -1;\n            counter++;\n        } else {\n            long long remaining = a - b;\n            long long sleep = c - d;\n            long long frequency;\n            if (remaining % sleep == 0) {\n                frequency = remaining/sleep; \n            } else {\n                frequency = remaining/sleep;\n                frequency++;\n            }\n            results[counter] = b + frequency*c;\n            counter++;\n        }\n        tests--;\n    }\n    int count = 0;\n    while (count < counter) {\n        printf(\"%lld\\n\", results[count]);\n        count++; \n    }\n    return 0;\n}"}
{"similarity_score": 0.6899563318777293, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "805566fa23c0b898533f975189f34c4f", "bug_code_uid": "90b866178395b2e176d376f19afdd110", "src_uid": "bdd86c8bc54bbac6e2bb5a9d68b6eb1c", "apr_id": "ef7a10111ad441b8947bd46ef98540b1", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint n,i;\n\tint a;\n\tint ans = 0;\n\tint cnt[9999] = {0};\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a);\n\t\tif(cnt[a])\n\t\t\tans ++;\n\t\telse\n\t\t\tcnt[a]=1;\t\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main(){\n\tint n,i;\n\tint a;\n\tint ans = 0;\n\tint cnt[9999] = {0};\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a);\n\t\tcnt[a]=1;\t\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(cnt[i] == 0) ans++;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9649737302977233, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "fc8edabe497ad9689840e44636c4791b", "bug_code_uid": "57dfe3fceeab1d79bbaf86f93fbffb7f", "src_uid": "41bdb08253cf5706573f5d469ab0a7b3", "apr_id": "35633c57f5750ed46d28c9faf3b7ba58", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n,m,i,j,k,max,l;\n\t//char max;\n\tscanf(\"%d %d\",&n,&m);\n\tchar str[101][101];\n\tint a[100];\n\tfor (i=0;i<n;i++){\n\t\tscanf(\"%s\",str[i]);\n\t}\n\tk=0;\n\tfor(i=0;i<m;i++){\n\t\tmax=str[0][i]-'0';\n\t\t//g=1;\n\t\tfor (j=0;j<n;j++){\n\t\t\tif (str[j][i]-'0'>max){\n\t\t\t\tmax=str[j][i]-'0';\n\t\t\t\t//g=j+1;\n\t\t\t}\n\t\t}\n\t\t//printf(\"%d \",max);\n\t\tfor (j=0;j<n;j++){\n\t\t\tif ((str[j][i]-'0')==max){\n\t\t\t\ta[k]=j+1;\n\t\t\t\tk=k+1;\t\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\tl=k;\n\tfor (i=0;i<k-1;i++){\n\t\tfor (j=i+1;j<k;j++){\n\t\t\tif (a[i]==a[j]){\n\t\t\t\tl=l-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",l);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n,m,i,j,k,max,l;\n\t//char max;\n\tscanf(\"%d %d\",&n,&m);\n\tchar str[1001][1001];\n\tint a[100000];\n\tfor (i=0;i<n;i++){\n\t\tscanf(\"%s\",str[i]);\n\t}\n\tk=0;\n\tfor(i=0;i<m;i++){\n\t\tmax=str[0][i]-'0';\n\t\t//g=1;\n\t\tfor (j=0;j<n;j++){\n\t\t\tif (str[j][i]-'0'>=max){\n\t\t\t\tmax=str[j][i]-'0';\n\t\t\t\t//g=j+1;\n\t\t\t}\n\t\t}\n\t\t//printf(\"%d \",max);\n\t\tfor (j=0;j<n;j++){\n\t\t\tif ((str[j][i]-'0')==max){\n\t\t\t\ta[k]=j+1;\n\t\t\t\tk=k+1;\t\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\tl=k;\n\tfor (i=0;i<k-1;i++){\n\t\tfor (j=i+1;j<k;j++){\n\t\t\tif (a[i]==a[j]){\n\t\t\t\tl=l-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",l);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9838882921589689, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a2a3542e4597b9a3a51e3302e38c82e2", "bug_code_uid": "fb9118e6b75091ae7e9082be8f0a005e", "src_uid": "e2db09803d87362c67763ef71e8b7f47", "apr_id": "a10ee74278c26152ec0158af80a0323d", "difficulty": 1300, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint input[400002];\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i;\n\tint min=1e9;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&input[i]);\n\t\tinput[i+n]=input[i];\n\t\tif(input[i]<min)\n\t\t\tmin=input[i];\n\t}\n\n\tint longer=0;\n\tfor(i=0;i<2*n;i++)\n\t{\n\t\tif(input[i]==min)\n\t\t{\n\t\t\tint count=0;\n\t\t\ti++;\n\t\t\twhile(i<2*n && input[i]!=min)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tif(count>longer)\n\t\t\t\tlonger=count;\n\t\t\ti--;\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\",n*min+longer);\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint input[400002];\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i;\n\tint min=1e9;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&input[i]);\n\t\tinput[i+n]=input[i];\n\t\tif(input[i]<min)\n\t\t\tmin=input[i];\n\t}\n\n\tint longer=0;\n\tfor(i=0;i<2*n;i++)\n\t{\n\t\tif(input[i]==min)\n\t\t{\n\t\t\tint count=0;\n\t\t\ti++;\n\t\t\twhile(i<2*n && input[i]!=min)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tif(count>longer)\n\t\t\t\tlonger=count;\n\t\t\ti--;\n\t\t}\n\t}\n\n\t\n\tprintf(\"%lld\\n\",(long long)n*min+longer);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.21648626144879268, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "73f04260556bc3e9bf233d3e5802db07", "bug_code_uid": "ad66983a3834b880cb82b57e1f18e5ee", "src_uid": "df94080c5b0b046af2397cafc02b5bdc", "apr_id": "6d7b9842ee4c90efd29be22447803797", "difficulty": 1000, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n\nvoid mergesort(int array[], int n)\n{\n    if (n<2) return ;\n\n        int mid = n/2;\n\n        int left[mid];\n        int right[n-mid];\n\n        int i;\n\n        for(i=0;i<mid;i++)\n            left[i]=array[i];\n\n        for(i=0;i<(n-mid);i++)\n            right[i]=array[i+mid];\n\n        mergesort(left,mid);\n        mergesort(right,n-mid);\n\n        merge (left,mid,right,n-mid,array);\n\n    }\n\n\nvoid merge(int left[],int n1,int right[],int n2,int array[])\n{\n    int i=0, j=0,k=0;\n\n    while(i<n1 && j<n2){\n        if (left[i]<right[j]) array[k++]=left[i++];\n        else array[k++]=right[j++];\n    }\n    while(i<n1) array[k++]=left[i++];\n    while(j<n2) array[k++]=right[j++];\n}\n\nmain()\n{\n\n    int n, i = 0;\n    scanf(\"%d\", &n);\n    int A[n];\n\n    while(i<n){\n        scanf(\"%d\", &A[i++]);\n    }\n\n    mergesort(A,n);\n    if(A[0] == 1)\n        printf(\"-1\");\n    else printf(\"%d\", A[0]-1);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nmain()\n{\n    int A[1000];\n    int n, i;\n    scanf (\"%d\", &n);\n\n    for(i=0;i<n;i++)\n        scanf(\"%d\", &A[i]);\n    for(i=0;i<n;i++){\n        if(A[i]==1){\n            printf(\"%d\", -1);\n            return 0;\n        }\n    }\n    printf(\"%d\", 1);\n    return 0;\n}\n"}
{"similarity_score": 0.8119233498935415, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "ff9163da30f150a2b1a55d7bbd076b5b", "bug_code_uid": "b4a7c396f4916cfde6d62aa4394e5e57", "src_uid": "12abfbe7118868a0b1237489b5c92760", "apr_id": "22d26b203d37f9de92d701abe8b362d1", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,p,x;\n    scanf(\"%d\",&n);\n    int a[n];\n\n    x=n;\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]==n)\n            p=i;\n    }\n    while(n!=1)\n    {\n        if(a[p]==n&&a[p-1]==n-1)\n        {\n            n--;\n            a[p]=n;\n            i=p-1;\n            while(i>1)\n            {\n                a[i]=a[i-1];\n                i--;\n            }\n        }\n        else if(a[p]==n&&a[p+1]==n-1)\n        {\n            n--;\n            a[p]=n;\n            i=p+1;\n            while(i<x)\n            {\n                a[i]=a[i+1];\n                i++;\n            }\n        }\n        else if(a[p]==n&&a[p+1]!=n-1&&a[p-1]!=n-1)\n        {\n            printf(\"NO\\n\");\n            return 0;\n        }\n    }\n    printf(\"YES\\n\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,p,x,y;\n    scanf(\"%d\",&n);\n    int a[n];\n\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]==n)\n            p=i;\n    }\n    x=p-1;\n    y=p+1;\n    while(n!=1)\n    {\n        if(a[p]==n&&a[x]==n-1)\n        {\n            n--;\n            a[p]=n;\n            x--;\n        }\n        else if(a[p]==n&&a[y]==n-1)\n        {\n            n--;\n            a[p]=n;\n            y++;\n        }\n        else if(a[p]==n&&a[x]!=n-1&&a[y]!=n-1)\n        {\n            printf(\"NO\\n\");\n            return 0;\n        }\n    }\n    printf(\"YES\\n\");\n    return 0;\n}"}
{"similarity_score": 0.9901345291479821, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5f3370c0e26af6a2231b3f0bbbbed825", "bug_code_uid": "5018f28bd71b3e45c9948ccd4285bb5e", "src_uid": "ace9fbabc2eda81b4e4adf4f2d5ad402", "apr_id": "1583a3e09aca910b6549cfdac998cb39", "difficulty": 1700, "tags": ["dp", "implementation", "greedy", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    int v, a[10], n = 0, d = 0;\n    scanf(\"%d\", &v);\n    for (int i = 1; i <= 9; i++) {\n        scanf(\"%d\", &a[i]);\n        if (v / a[i] >= n)\n            n = v / a[i], d = i;\n    }\n    if (n == 0) {\n        puts(\"-1\");\n        return 0;\n    }\n    v -= n * a[d];\n    char s[n + 1];\n    int ci = 0, cd = 9;\n    while (cd > d)\n        if (v >= a[cd] - a[d])\n            s[ci++] = '0' + cd, v -= a[cd] - a[d];\n        else\n            cd--;\n    while (ci < n)\n        s[ci++] = '0' + d;\n    s[ci] = '\\0';\n    puts(s);\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int v, a[10], n = 0, d = 0;\n    scanf(\"%d\", &v);\n    for (int i = 1; i <= 9; i++) {\n        scanf(\"%d\", &a[i]);\n        if (v / a[i] > n)\n            n = v / a[i], d = i;\n    }\n    if (n == 0) {\n        puts(\"-1\");\n        return 0;\n    }\n    v -= n * a[d];\n    char s[n + 1];\n    int ci = 0, cd = 9;\n    while (ci < n && cd > d)\n        if (v >= a[cd] - a[d])\n            s[ci++] = '0' + cd, v -= a[cd] - a[d];\n        else\n            cd--;\n    while (ci < n)\n        s[ci++] = '0' + d;\n    s[ci] = '\\0';\n    puts(s);\n}"}
{"similarity_score": 0.05568445475638051, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a14d1b2401f74ee2d490075cfa99e93f", "bug_code_uid": "f9179c8c6af57e4451726678dc23daf2", "src_uid": "2b6e670b602a89b467975edf5226219a", "apr_id": "1ae39ce93c2470032ffc92d3269c24e5", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n/*\r\nvoid pattern(int n){\r\n\tint row = (2*n - 1);\r\n\tint col = row;\r\n\tint cpy = row;\r\n\tcol--;\r\n\tif(col == 0){\r\n\t\treturn;\r\n\t}else{\r\n\t\twhile(cpy--){\r\n\t\t\tcout << n;\r\n\t\t}\r\n\t\tcout<< endl;\r\n\t\tpattern(n);\r\n\t}\r\n\r\n}\r\n\r\nvoid piramid(int n){\r\n\tint count = 0;\r\n\tfor(int i=1; i<=n; i++){\r\n\t\t\r\n\t\tfor(int j=1; j<=i; j++){\r\n\t\t\tcount++;\r\n\t\t\tcout << count;\r\n\t\t}\r\n\t\t\r\n\t\tcout << endl;\r\n\t}\r\n\r\n}\r\n*/\r\nint main(){\r\n\t\r\n\tint test;\r\n\tcin >> test;\r\n\twhile(test--){\r\n\t\tint a, b;\r\n\t\tcin >> a >> b;\r\n\t\tint min = a + 2*b;\r\n\r\n\t\tcout << min+1;\r\n\r\n\t}\r\n\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nvoid solveApproch(){\r\n\tint tt;\r\n\tscanf(\"%d\", &tt);\r\n\twhile(tt--){\r\n\t\tint a, b;\r\n\t\tscanf(\"%d %d\", &a, &b);\r\n\t\tif((a > 0 && b > 0) || (a > 0)){\r\n\t\t\tprintf(\"%d\\n\", (a+2*b)+1);\r\n\t\t}else printf(\"1\\n\");\r\n\t}\r\n}\r\nint main(){\tsolveApproch(); return 0;}\r\n\r\n// n-(n/4- 1)"}
{"similarity_score": 0.7119155354449472, "equal_cnt": 17, "replace_cnt": 6, "delete_cnt": 5, "insert_cnt": 6, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "c9b71d20e5de24277c81328f0d186d43", "bug_code_uid": "178e7e87149adde5a2ec567df07dec3f", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "4ae69110d42ad06515771c7b13c6d538", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    long long int n, i, j, num, primos[1000000],STATUS;\n    scanf(\"%lld\", &n);\n    for (i=0;i<1000000;i++){\n        primos[i]=1;\n    }\n    primos[1]=0;\n    for(i=1;i<=1000;i++){\n        j=2;\n        if (primos[i]==1){\n            while (i*j<=1000000){\n                primos[i*j]=0;\n                j++;\n            }\n        }\n    }\n    for (i=0; i<n; i++){\n        scanf(\"%lld\", &num);\n        STATUS=0;\n        for (j=1; j<=1000000 && j*j<=num; j++){\n            if(primos[j] && j*j==num){\n                printf(\"YES\\n\");\n                STATUS=1;\n            }\n        }\n        if (STATUS==0){\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main(){\n    long long int n, i, j, num, primos[1000001];\n    scanf(\"%lld\", &n);\n   \n    for (i=0;i<=1000000;i++){\n        primos[i]=1;\n    }\n    primos[1]=0;\n    for(i=2;i<=1000;i++){\n        if (primos[i]==1){\n            j=i;\n            while (i*j<=1000000){\n                primos[i*j]=0;\n                j++;\n            }\n        }\n    }\n    \n    for (i=0; i<n; i++){\n        scanf(\"%lld\", &num);\n        if (((long long int)sqrt(num)*(long long int)sqrt(num)==num) && (primos[(int)sqrtl(num)])){\n            printf(\"YES\\n\");\n        }\n        else printf(\"NO\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.5378704720087816, "equal_cnt": 19, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 7, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "7bc7bb47d0fe5c2a1dead8f67690a22a", "bug_code_uid": "daae0ecb2ae5e71177a69103ba7361c2", "src_uid": "89186dda71810a4555990408fe606f9a", "apr_id": "2c36c17b9111bc1cd25fb5737b0cc10d", "difficulty": 2000, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define MAX(X,Y) ((X)>(Y)?(X):(Y))\n#define NN 100010\n\nint main(void)\n{\n\tint i, n, q;\n\tstatic int v[NN], c[NN], dp[NN];\n\twhile (scanf(\"%d%d\", &n, &q) != EOF) {\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tscanf(\"%d\", v + i);\n\t\t}\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tscanf(\"%d\", c + i);\n\t\t}\n\t\twhile (q--) {\n\t\t\tint a, b, maxa, maxb, pos, max;\n\t\t\tscanf(\"%d%d\", &a, &b);\n\t\t\tmemset(dp, -1, sizeof(dp));\n\t\t\tmaxa = maxb = max = pos = 0;\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\tif (dp[c[i]] == -1) {\n\t\t\t\t\tdp[c[i]] = v[i] * b;\n\t\t\t\t} else {\n\t\t\t\t\tdp[c[i]] = MAX(dp[c[i]] + v[i] * a, (pos == c[i] ? maxb : maxa) + v[i] * b);\n\t\t\t\t}\n\t\t\t\tif (dp[c[i]] >= maxb && dp[c[i]] <= maxa) {\n\t\t\t\t\tmaxb = dp[c[i]];\n\t\t\t\t} else if (dp[c[i]] >= maxa) {\n\t\t\t\t\tpos = c[i];\n\t\t\t\t\tmaxb = maxa;\n\t\t\t\t\tmaxa = dp[c[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (i = 1; i <= n; i++) {\n\t\t\t\tmax = MAX(max, dp[i]);\n\t\t\t}\n\t\t\tprintf(\"%d\\n\", max);\n\t\t}\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#define MAX(X,Y) ((X)>(Y)?(X):(Y))\n#define NN 100010\n\nint main(void)\n{\n\tint i, n, q;\n\tstatic int v[NN], c[NN];\n\tstatic long long dp[NN];\n\tconst long long INF = (1LL << 60);\n\twhile (scanf(\"%d%d\", &n, &q) != EOF) {\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tscanf(\"%d\", v + i);\n\t\t}\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tscanf(\"%d\", c + i);\n\t\t}\n\t\twhile (q--) {\n\t\t\tint pa, pb;\n\t\t\tlong long a, b, max, ans = 0;\n\t\t\tscanf(\"%I64d%I64d\", &a, &b);\n\t\t\tpa = pb = 0;\n\t\t\tfor (i = 1; i <= n; i++) dp[i] = -INF;\n\t\t\tdp[0] = 0;\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\tif (c[i] == pa) {\n\t\t\t\t\tmax = MAX(dp[c[i]] + v[i] * a, dp[pb] + v[i] * b);\n\t\t\t\t} else {\n\t\t\t\t\tmax = MAX(dp[c[i]] + v[i] * a, dp[pa] + v[i] * b);\n\t\t\t\t\tif (max > dp[pa]) pb = pa, pa = c[i];\n\t\t\t\t\telse if (max > dp[pb]) pb = c[i];\n\t\t\t\t}\n\t\t\t\tdp[c[i]] = MAX(dp[c[i]], max);\n\t\t\t\tans = MAX(ans, dp[c[i]]);\n\t\t\t}\n\t\t\tprintf(\"%I64d\\n\", ans);\n\t\t}\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.5483234714003945, "equal_cnt": 19, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "bef6c93c14ca4297910683331786ca49", "bug_code_uid": "a2ce65334beb6c2a2fac0eb04eb50ff4", "src_uid": "fbde1e2ee02055592ff72fb04366812b", "apr_id": "a2cf65672bffea628e1b28fb632892a6", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint k,n,t=0,nbe=0,Y[2000];\n\tscanf(\"%d%d\",&n,&k);\n\tfor (int i=0;i<n;i++) \n\t\tscanf(\"%d\",&Y[1]);\n\tfor (int i=0;i<n;i++) \n\t\tif ((Y[i]+k)<6)\n\t\t\tt++;\n\tnbe=t/3;\n\tprintf(\"%d\",nbe);\n\t\n\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main (){\n    int k, n ,t=0,i,nbe=0,H[2000];\n    scanf (\"%d%d\",&n,&k);\n    for (i=0;i<n;i++){\n        scanf (\"%d\",&H[i]);\n    }\n    for (i=0;i<n;i++){\n        if ((H[i]+k)<=5)\n        t++;\n    }\n    nbe=t/3;\n    printf(\"%d\",nbe);\n    return 0 ;\n}"}
{"similarity_score": 0.9660023446658851, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ae71d6ac56a19ef591e43ae6e3aef8f5", "bug_code_uid": "f8a768b93543ca122894182cc5eabe61", "src_uid": "63c2142461c93ae4c962eac1ecb5b192", "apr_id": "ae9813354acec7d8f681ac5b3f67ab95", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    while(--n)\r\n    {\r\n        int a,b,c;\r\n        scanf(\"%d%d%d\",&a,&b,&c);\r\n        if(((a<b) && (b<c)) ||((c<b) && (b<a)))\r\n            printf(\"%d\\n\",b);\r\n        if(((b<c) && (c<a)) || ((a<c) && (c<b)))\r\n            printf(\"%d\\n\",c);\r\n        if(((b<a) && (a<c)) || ((c<a) && (a<b)))\r\n           printf(\"%d\\n\",a);\r\n\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n   for(int i=0;i<n;i++)\r\n    {\r\n        int a,b,c;\r\n        scanf(\"%d%d%d\",&a,&b,&c);\r\n        if(((a<b) && (b<c)) ||((c<b) && (b<a)))\r\n            printf(\"%d\\n\",b);\r\n        if(((b<c) && (c<a)) || ((a<c) && (c<b)))\r\n            printf(\"%d\\n\",c);\r\n        if(((b<a) && (a<c)) || ((c<a) && (a<b)))\r\n           printf(\"%d\\n\",a);\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.7992202729044834, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "7af4bceb97504e66f4050bb12ac8156d", "bug_code_uid": "a43fffbcf70402367d3d821d970ec777", "src_uid": "a850dd88a67a6295823e70e2c5c857c9", "apr_id": "fa6cf1b94d3c61360d1bf9c1cff69e6f", "difficulty": 1500, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n,i,j,a=0,max=0;\n\tscanf(\"%d\",&n);\n\tint x[n],h[n];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d %d\",&x[i],&h[i]);\n\tfor(i=0;i<n;i++){\n\t\tif(i==0){\n\t\t\tif(x[i]-h[i]<x[i+1])\n\t\t\t\tmax++;\t\t\t\n\t\t\tif(x[i]+h[i]<x[i+1]){\n\t\t\t\ta=x[i]+h[i];\n\t\t\t\tmax++;\t\t\n\t\t\t}\n\t\t}\n\t\tif(i==n-1){\n\t\t\tif(x[i]-h[i]>a)\n\t\t\t\tmax++;\t\n\t\t\telse{\n\t\t\t\ta=x[i]+h[i];\n\t\t\t\tmax++;\n\t\t\t}\n\t\t\n\t\t}\n\t\tif(i!=n-1){\n\t\t\tif(x[i]-h[i]>a)\n\t\t\t\tmax++;\t\n\t\t\tif(x[i]+h[i]<x[i+1]){\n\t\t\t\ta=x[i]+h[i];\n\t\t\t\tmax++;\t\t\t\n\t\t\t}\t\n\t\t}\n\t\tif(!(a>x[i]))\n\t\t\ta=x[i];\n\t}\n\n\tprintf(\"\\n%d\",max);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint n,i,j,a=0,max=0;\n\tscanf(\"%d\",&n);\n\tint x[n],h[n];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d %d\",&x[i],&h[i]);\n\tfor(i=0;i<n;i++){\n\t\tif(i==0){\n\t\t\tif(x[i]-h[i]<x[i+1])\n\t\t\t\tmax++;\n\t\t}\n\t\telse if(i==n-1){\n\t\t\tif(x[i]-h[i]>a)\n\t\t\t\tmax++;\t\n\t\t\telse{\n\t\t\t\ta=x[i]+h[i];\n\t\t\t\tmax++;\n\t\t\t}\n\t\t\n\t\t}\n\t\telse{\n\t\t\tif(x[i]-h[i]>a)\n\t\t\t\tmax++;\t\n\t\t\tif(x[i]+h[i]<x[i+1]&&(!(x[i]-h[i]>a))){\n\t\t\t\ta=x[i]+h[i];\n\t\t\t\tmax++;\t\t\t\n\t\t\t}\t\n\t\t}\n\t\tif(!(a>x[i]))\n\t\t\ta=x[i];\n\t}\n\n\tprintf(\"\\n%d\",max);\n\treturn 0;\n}\n"}
{"similarity_score": 0.751269035532995, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "be1e6b02f8be76de43767f6f7e692105", "bug_code_uid": "e8bab3cf15db65fccb91b16ee26e9c45", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "5d063d53d24c55b71ebcaa552f2dcac6", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,n,max,a[10005],b[10005]={0};\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",a+i);\n\tmax=a[n-1];\n\tfor(i=n-2;i>=0;i--)\n\t{\n\t\tif(a[i]<max)\tb[i]=max-a[i]+1;\n\t\telse\tmax=a[i];\n\t}\n\tprintf(\"%d\",b[0]);\n\tfor(i=1;i<n;i++)\n\t\tprintf(\" %d\",b[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n} \n                                                                                                       ", "fixed": "#include<stdio.h>\nint a[100007];\nint main()\n{\n\t\n\tint i,n,max;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",a+i);\n\tmax=a[n-1];\n\ta[n-1]=0;\n\tfor(i=n-2;i>=0;i--)\n\t{\n\t\tif(a[i]<max)\ta[i]=max-a[i]+1;\n\t\telse\n\t\t{\t\n\t\t\tif(a[i]==max)\ta[i]=1;\n\t\t\telse\n\t\t\t{\n\t\t\t\tmax=a[i];\n\t\t\t\ta[i]=0;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",a[0]);\n\tfor(i=1;i<n;i++)\n\t\tprintf(\" %d\",a[i]);\n\tprintf(\"\\n\");\n\n\treturn 0;\n} \n                                                                                                                                                                                                                 "}
{"similarity_score": 0.948118006103764, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dc4f5e01181a1ac05c8c6dd2ab378e4e", "bug_code_uid": "4e21bef7ac2db84579e70a409c666557", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "c4671a61e93a62f773660718f9afcd13", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,temp,sum=0;\n    scanf(\"%d%d\",&n,&m);\n    int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        for(j=i+1;j<n;j++){\n            if(a[i]>a[j]){\n                temp=a[i];\n                a[i]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n    for(i=0; i<m; i++){\n        if(a[i]<0){\n            a[i]= a[i]*(-1);\n        }\n        sum = sum+a[i];\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,temp,sum=0;\n    scanf(\"%d%d\",&n,&m);\n    int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        for(j=i+1;j<n;j++){\n            if(a[i]>a[j]){\n                temp=a[i];\n                a[i]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n    for(i=0; i<m; i++){\n        if(a[i]<0){\n            a[i]= a[i]*(-1);\n       sum = sum+a[i];\n        }\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.3655913978494624, "equal_cnt": 20, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 7, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "0be32db7d05756b2373cac580aae879a", "bug_code_uid": "8b92942d41199eeb5760ab6a707452af", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "9693b22d1785525a7f74f0218d7b9389", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,t;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(int i=0;i<n;i++)\n    scanf(\"%d\",&arr[i]);\n    for(t=0;t<n;t++)\n    {\n    int memo=0;\n    for(int j=2;j<=arr[t]/2;j++)\n    {\n    if(arr[t]%2!=0)\n    {if(arr[t]%j==0 && arr[t]/j==1)\n    memo++;}\n    else\n    {\n    if(arr[t]%j==0)\n    memo++;\n    }\n    }\n    arr[t]=memo;\n    }\n    for(int k=0;k<n;k++)\n    {\n    if(arr[k]==1)\n    printf(\"%s\\n\",\"YES\");\n    else\n    printf(\"%s\\n\",\"NO\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\ntypedef long long ll;\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    ll x[n];\n    for(int i=0;i<n;i++)\n    scanf(\"%lld\",&x[i]);\n    int ar[1000001];\n    ar[0]=0;\n    ar[1]=0;\n    for(int i=2;i<=1e6;i++)\n    ar[i]=1;\n    for(int i=2;i<=1e6;i++)\n    {\n    for(int j=2*i;j<=1e6;j+=i)\n    ar[j]=0;\n    }\n    /*for(int i=0;i<10;i++)\n    printf(\"%d \",ar[i]);\n    printf(\"\\n\");*/\n    for(int i=0;i<n;i++)\n    {\n    ll temp=sqrt(x[i]);\n    if(ar[temp]==1&&x[i]%temp==0&&x[i]/temp==temp)\n    printf(\"YES\\n\");\n    else\n    printf(\"NO\\n\");\n    }\n    \n   /* for(int i=0;i<n;i++)\n    {\n    if(ar[x[i]]==1)\n    printf(\"YES\\n\");\n    else\n    printf(\"NO\\n\");\n    printf(\"%d \",ar[i]);\n    }\n    */\n    return 0;\n}"}
{"similarity_score": 0.9884393063583815, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "9ecc0aba9cefb100cdc5cb86ca6f6ae8", "bug_code_uid": "feba543320815894584faa6f5ac0988b", "src_uid": "13aa9c49ffd62d2aa59f3cd8b16a277f", "apr_id": "7d598d9900eca5aa88a617b40d6b2f56", "difficulty": 1900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define N 20\nint main(){\n\tint n,i,ans=0;\n\tchar s[N];\n\tint pref[N]={0},suf[N]={0},okp[N]={1},okf[N]={1};\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",s);\n\tokf[n]=1;\n\tfor(i=0;i<n;i++){\n\t\tif(s[i]=='(')pref[i+1]=pref[i]+1;else pref[i+1]=pref[i]-1;\n\t\tif(s[n-1-i]==')')suf[n-1-i]=suf[n-i]+1;else suf[n-1-i]=suf[n-i]-1;\n\t\tif(okp[i]==0||pref[i]<0)okp[i+1]=0;else okp[i+1]=1;\n\t\tif(okf[n-i]==0||suf[n-i-1]<0)okf[n-i-1]=0; else okf[n-i-1]=1;\n\t}\n\t//for(i=0;i<=n;i++)printf(\"%d\",pref[i]);printf(\"\\n\");\n\t//for(i=0;i<=n;i++)printf(\"%d\",suf[i]);printf(\"\\n\");\n\t//for(i=0;i<=n;i++)printf(\"%d\",okp[i]);printf(\"\\n\");\n\t//for(i=0;i<=n;i++)printf(\"%d\",okf[i]);printf(\"\\n\");\n\tfor(i=0;i<n;i++){\n\t\tif(!okp[i]||!okf[i+1])continue;\n\t\telse if(s[i]=='('){\n\t\t\tif(pref[i]>0&&pref[i]-1==suf[i+1])ans++;\n\t\t}\n\t\telse{\n\t\t\tif(pref[i]+1==suf[i+1])ans++;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\t\n}", "fixed": "#include<stdio.h>\n#define N 1000002\nint main(){\n\tint n,i,ans=0;\n\tchar s[N];\n\tint pref[N]={0},suf[N]={0},okp[N]={1},okf[N]={1};\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",s);\n\tokf[n]=1;\n\tokp[0]=1;\n\tfor(i=0;i<n;i++){\n\t\tif(s[i]=='(')pref[i+1]=pref[i]+1;else pref[i+1]=pref[i]-1;\n\t\tif(s[n-1-i]==')')suf[n-1-i]=suf[n-i]+1;else suf[n-1-i]=suf[n-i]-1;\n\t\tif(okp[i]==0||pref[i+1]<0)okp[i+1]=0;else okp[i+1]=1;\n\t\tif(okf[n-i]==0||suf[n-i-1]<0)okf[n-i-1]=0; else okf[n-i-1]=1;\n\t}\n\t//for(i=0;i<=n;i++)printf(\"%d\",pref[i]);printf(\"\\n\");\n\t//for(i=0;i<=n;i++)printf(\"%d\",suf[i]);printf(\"\\n\");\n\t//for(i=0;i<=n;i++)printf(\"%d\",okp[i]);printf(\"\\n\");\n\t//for(i=0;i<=n;i++)printf(\"%d\",okf[i]);printf(\"\\n\");\n\tfor(i=0;i<n;i++){\n\t\tif(!okp[i]||!okf[i+1])continue;\n\t\telse if(s[i]=='('){\n\t\t\tif(pref[i]>0&&pref[i]-1==suf[i+1])ans++;\n\t\t}\n\t\telse{\n\t\t\tif(pref[i]+1==suf[i+1])ans++;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\t\n}"}
{"similarity_score": 0.24543462381300218, "equal_cnt": 23, "replace_cnt": 14, "delete_cnt": 8, "insert_cnt": 0, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "854e629a3647bcb7a9c467bd6158484f", "bug_code_uid": "529ef9a8414e5ecd5046b37bb1d0fdba", "src_uid": "422cbf106fac3216d58bdc8411c0bf9f", "apr_id": "3b5fa038d6f1ae7d426111683716b9ff", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n     long long int n,m,i,j,k,l;\n     scanf(\"%I64d %I64d\",&n,&m);\n     long long int a[n];\n     for(i=1;i<=m;i++)\n     {\n          scanf(\"%I64d\",&a[i]);\n     }\n     for(i=1;i<m;i++)\n     {\n          for(j=i+1;j<=m ; )\n          {\n               if(a[i]<a[j])\n               j++;\n               else \n               {\n                    k=a[j];\n                    a[j]=a[i];\n                    a[i]=k;\n                    j++;\n               }\n          }\n     }\n     if(m>2 && a[1]!=1 && a[m]!=n)\n     {\n     l=0;\n     for(i=1;i<=m-2;i++)\n     {\n          if(a[i+1]==(a[i]+1) && a[i+2]==(a[i]+2))\n          {\n               printf(\"NO\");\n               break;\n          }else\n          l++;\n     }\n     if(l==m-2)\n     printf(\"YES\");\n     }\n     else if(m<=2 && a[1]!=1 && a[m]!=n)\n     printf(\"YES\");\n     else \n     printf(\"NO\");\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,m;\n    scanf(\"%d %d\",&n,&m);\n    int d[m];\n    for(int i=0;i<m;i++){\n        scanf(\"%d\",&d[i]);\n        if(d[i]==1||d[i]==n)goto no;\n    }\n    for(int i=0;i<m-1;i++)\n        for(int j=0;j<m-1-i;j++)\n            if(d[j]>d[j+1]){\n                int t=d[j];\n                d[j]=d[j+1];\n                d[j+1]=t;\n            }\n    for(int i=0;i<m-2;i++)\n        if((d[i+1]==d[i]+1)&&(d[i+2]==d[i]+2))goto no;\n    printf(\"YES\");\n    return 0;\n    no: printf(\"NO\");}"}
{"similarity_score": 0.9258215962441314, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "887d0ca067b1a3dd4f6d9e71e68102cc", "bug_code_uid": "24ee284cd37e6d51f7aa572c52f83fef", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "a8d054e5366953c5f2450fa64902891d", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint b[3];\nint main()\n{\n\tint n, a[5000],i,j=0, min, k=0,l=0,c[1670],d[1670],e[1670];\n\tscanf(\"%d\", &n);\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\", &a[i]);\n\tfor(i=0;i<n;i++)\n\tb[a[i]-1]++;\n\tmin=b[0];\n\tfor(i=1;i<3;i++)\n\tif(b[i]<b[0])\n\tmin=b[i];\n\tprintf(\"%d\\n\", min);\n\tif(min>0)\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]==1 && j<min)\n\t\t{\n\t\tc[j]=i+1;\n\t\tj++;\n\t\t}\n\t\tif(a[i]==2 && k<min)\n\t\t{\n\t\td[k]=i+1;\n\t\tk++;\n\t\t}\n\t\tif(a[i]==3 && l<min)\n\t\t{\n\t\te[l]=i+1;\n\t\tl++;\n\t\t}\t\n\t}\n\tfor(i=0;i<min;i++)\n\tprintf(\"%d %d %d\\n\", c[i], d[i], e[i]);\n\treturn 0;\n}\n \n", "fixed": "#include <stdio.h>\nint b[3]={0};\nint main()\n{\n\tint n, a[5000],i,j=0, min, k=0,l=0,c[5000],d[5000],e[5000];\n\tscanf(\"%d\", &n);\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\", &a[i]);\n\tfor(i=0;i<n;i++)\n\tb[a[i]-1]++;\n\tmin=b[0];\n\tfor(i=1;i<3;i++)\n\tif(b[i]<min)\n\tmin=b[i];\n\tprintf(\"%d\\n\", min);\n\tif(min>0)\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]==1 && j<min)\n\t\t{\n\t\tc[j]=i+1;\n\t\tj++;\n\t\t}\n\t\tif(a[i]==2 && k<min)\n\t\t{\n\t\td[k]=i+1;\n\t\tk++;\n\t\t}\n\t\tif(a[i]==3 && l<min)\n\t\t{\n\t\te[l]=i+1;\n\t\tl++;\n\t\t}\t\n\t}\n\tfor(i=0;i<min;i++)\n\tprintf(\"%d %d %d\\n\", c[i], d[i], e[i]);\n\treturn 0;\n}\n \n"}
{"similarity_score": 0.5547892720306513, "equal_cnt": 30, "replace_cnt": 17, "delete_cnt": 2, "insert_cnt": 10, "fix_ops_cnt": 29, "lang": "GNU C", "fix_code_uid": "8b79ef81297fcc838130812a0645cb87", "bug_code_uid": "004f4ef1f335da9d14d0a2c7081b7fa7", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "7d56c11cf243cddd5311f6847e034775", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n,m,i,j,t;\n    float a[100],sum;\n    while(scanf(\"%d%d\",&n,&m)!=EOF)\n    {\n        sum=0;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%f\",&a[i]);\n        }\n        for(i=0;i<n-1;i++)\n        {\n            for(j=0;j<n-1-i;j++)\n            {\n                if(a[j]>a[j+1])\n                {\n                    t=a[j];\n                    a[j]=a[j+1];\n                    a[j+1]=t;\n                }\n            }\n        }\n       for(i=0;i<n;i++)\n       {\n            a[i]=0-a[i];\n       }\n       for(i=0;i<m;i++)\n       {\n           sum=sum+a[i];\n       }\n       printf(\"%.0f\\n\",sum);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int n,m,i,j,temp=0,sum;\n   while (scanf (\"%d%d\",&n,&m)!=EOF)\n   {\n       sum=0;\n       int a[100]={0};\n       for (i=0;i<n;i++)\n       {\n           scanf (\"%d\",&a[i]);\n       }\n       for (i=0;i<n-1;i++)\n       {\n           for (j=i+1;j<n;j++)\n           {\n               if (a[i]>a[j])\n               {\n                   temp=a[i];\n                   a[i]=a[j];\n                   a[j]=temp;\n               }\n           }\n       }\n       for (i=0;i<m;i++)\n       {\n           if(a[i]<0)\n               sum+=a[i];\n       }\n       printf (\"%d\\n\",-sum);\n   }\n   return 0;\n}"}
{"similarity_score": 0.841648590021692, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "2bf2a751beb708a48f7dad8287fdba2d", "bug_code_uid": "d048eee87d71064e059ed074dcb58603", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "887d8161d8c3e94be270738516182fa3", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\nint n,c=0,d=0,i,e,r;\nscanf(\"%d\",&n);\nint a,b;\nscanf(\"%d\",&a);\n\nfor(i=0;i<n;i++)\n{\nr=a%10;\na=a/10;\nif(r==1)\nc++;\nelse\nd++;\n}\n//printf(\"%d %d\",c,d);\ne=abs(c-d);\nprintf(\"%d\",e);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\nint n,c=0,d=0,i,e,r;\nscanf(\"%d\",&n);\nchar a[n];\nscanf(\"%s\",&a);\nfor(i=0;i<n;i++)\n{\n\nif(a[i]=='1')\nc++;\nelse\nd++;\n}\n//printf(\"%d %d\",c,d);\ne=abs(c-d);\nprintf(\"%d\",e);\nreturn 0;\n}\n"}
{"similarity_score": 0.5595092024539877, "equal_cnt": 18, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 8, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "c6f63f8a1f7a46c90ce632c66e44825e", "bug_code_uid": "c7189890063e5ecfbaeabcc4f679bd53", "src_uid": "26aef004295df530352485ce53b47364", "apr_id": "16a607a17bfe14261dddfb8cb46e6b35", "difficulty": 1100, "tags": ["brute force", "data structures", "implementation", "trees"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint j,n,q,e=0,a[10000],b[10000],c[10000],d;\n\tscanf(\"%d %d\",&n,&q);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tc[i]=a[i];\n\t}while(q--){\n\t\tscanf(\"%d\",&d);\n\t\tfor( j=0;j<n;j++){\n\t\t\t\n\t\t\tif(d==a[j]){\n\t\t\t\te=j;\n\t\t\t\tprintf(\"%d \",j+1);\n\t\t\t\tbreak;\n\t\t\t}\t\t\t\n\t\t}\n\t\tfor(int i=e;i>0;i--){\n\t\t\ta[i]=a[i-1];\n\t\t//\tprintf(\"%d \",a[i]);\n\t\t}\n\t\te=0;\n\t\ta[0]=d;\n\t}\n\treturn 0;\n}\n\t\t \t  \t\t\t \t\t\t\t      \t\t\t\t  \t \t\t", "fixed": "#include<stdio.h> \n#define MAX 1000000+10\nint n, m,q,a[MAX],d;\nint main()\n{\n\tscanf(\"%d %d\",&n,&q);\n\tfor (int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\twhile (q--)\n\t{\n\t\tscanf(\"%d\",&d);\n\t\tint e;\n\t\tfor (int i=0;i<n;i++)\n\t\t{\n\t\t\tif (a[i]==d)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",i+1);\n\t\t\t\te=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (int i=e;i>0;i--)\n\t\t{\n\t\t\ta[i]=a[i-1];\n\t\t}\n\t\ta[0]=d;\n\t}\n\t\n\treturn 0;\n}\n\n\t \t\t\t\t    \t\t\t\t \t\t \t\t \t\t     \t\t"}
{"similarity_score": 0.2136602451838879, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a60be7a4f3fa84d04a866f7eddb934f2", "bug_code_uid": "307ef992f67b50d80c2095346cd09fc6", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "82238984e154b17f2cf9f0ebf1c1516e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a[100];\n\tint n, h,l;\n\tint w = 0;\n\tscanf_s(\"%d\", &n);\n\tscanf_s(\"%d\", &h);\n\tfor (int i = 0; i <n; i++)\n\t{\n\t\tscanf_s(\"%d\", &a[i]);\n\t}\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tif (a[i] > h)\n\t\t{\n\t\t\tw +=2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tw += 1;\n\t\t}\n\t}\n\tprintf(\"%d\", w);\n\n\tsystem(\"pause\");\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a[1000];\n\tint n, h;\n\tint w = 0;\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &h);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tif (a[i] > h)\n\t\t\tw += 2;\n\t\telse\n\t\t\tw += 1;\n\t}\n\tprintf(\"%d\", w);\n\treturn 0;\n}"}
{"similarity_score": 0.20248328557784145, "equal_cnt": 9, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "dd6231c4eabeb737589d30271a9c6fe5", "bug_code_uid": "0ec9f55c007b61af29731d3c37f60fcc", "src_uid": "ed26479cdf72ad9686bbf334d90aa0be", "apr_id": "a656b14ef3b7fbdd664bcbaa3b88a8c2", "difficulty": 1100, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n, m, a, b, i, x, y, z=0;\n\t\n\tscanf(\"%d %d %d %d\", &n, &m, &x, &y);\n\t\n\twhile(x>0 || y<=m)\n\t{\n\t\tif(z==0)\n\t\t{\n\t\t\tfor(i=y; i>0; i--){ printf(\"%d %d\\n\", x, i); }\n\t\t\tfor(i=y+1; i<=m; i++){ printf(\"%d %d\\n\", x, i); }\n\t\t\tz++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(x>0)\n\t\t\t{\n\t\t\t\tfor(i=m; i>0; i--){ printf(\"%d %d\\n\", x, i); }\n\t\t\t}\n\t\t\tif(y<=n)\n\t\t\t{\n\t\t\t\tfor(i=1; i<=m; i++){ printf(\"%d %d\\n\", y, i); }\n\t\t\t}\n\t\t}\n\t\tx--;\n\t\ty++;\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint on(int a, int b, int e, int r)\n{\n\tif(r%2!=0)\n\t{\n\t\tfor(int i=a; i<=b; i++){ printf(\"%d %d\\n\", e, i); }\n\t}\n\telse\n\t{\n\t\tfor(int i=b; i>=a; i--){ printf(\"%d %d\\n\", e, i); }\n\t}\n}\nint main()\n{\n\tint n, m, x, y, c=0, p, q=0;\n\t\n\tscanf(\"%d %d %d %d\", &n, &m, &x, &p);\n\ty=x;\n\t\n\twhile(x>0 || y<=n)\n\t{\n\t\tif(c==0)\n\t\t{\n\t\t\ton(1, p, x, q);\n\t\t\tq++;\n\t\t\ton(p+1, m, x, q);\n\t\t\tc++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(x>0 && y<=n)\n\t\t\t{\n\t\t\t\ton(1, m, x, q);\n\t\t\t\tq++;\n\t\t\t\ton(1, m, y, q);\n\t\t\t}\n\t\t\telse if(x>0)\n\t\t\t{\n\t\t\t\ton(1, m, x, q);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ton(1, m, y, q);\n\t\t\t}\n\t\t}\n\t\tx--;\n\t\ty++;\n\t\tq++;\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8346795907377491, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "1a12fff1a586a5d20480d8c1e284fb6d", "bug_code_uid": "845b83ce767d1e7627a052cc03632ea8", "src_uid": "130755f31abe81e5314a1fd5ef06ba81", "apr_id": "4fcd4202324c60a287cfeeed9c1e0e78", "difficulty": 1900, "tags": ["dp"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define Max(a,b) (((a)>(b)) ? (a) : (b))\nint sm[100][101],sz[100];\nint shlv[100][101],dp[10001];\nint main()\n{\n    freopen(\"in.txt\",\"r\",stdin);\n    int n,m,nm,i,j,k,itm;\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&sz[i]);\n        sm[i][0]=0;\n        for(j=1;j<=sz[i];j++)\n        {\n            scanf(\"%d\",&sm[i][j]);\n            sm[i][j]+=sm[i][j-1];\n        }\n        for(j=1;j<=sz[i];j++)\n            for(k=j;k<=sz[i];k++)\n            {\n                itm=k-j+1;\n                itm=sz[i]-itm;\n                shlv[i][itm]=Max(shlv[i][itm],sm[i][sz[i]]-(sm[i][k]-sm[i][j-1]));\n            }\n    }\n    int nmx=0;\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<=sz[i];j++)\n            for(k=0;k<=nmx;k++)\n                dp[j+k]=Max(dp[j+k],dp[k]+shlv[i][j]);\n        nmx+=sz[i];\n    }\n    printf(\"%d\\n\",dp[m]);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define Max(a,b) (((a)>(b)) ? (a) : (b))\nint sm[100][101],sz[100];\nint shlv[100][101],dp[10001],tdp[10001];\nint main()\n{\n    int n,m,i,j,k,itm;\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&sz[i]);\n        sm[i][0]=0;\n        for(j=1;j<=sz[i];j++)\n        {\n            scanf(\"%d\",&sm[i][j]);\n            sm[i][j]+=sm[i][j-1];\n        }\n        for(j=1;j<=sz[i];j++)\n            for(k=j;k<=sz[i];k++)\n            {\n                itm=j+sz[i]-k-1;\n                shlv[i][itm]=Max(shlv[i][itm],(sm[i][sz[i]]-sm[i][k]+sm[i][j-1]));\n            }\n        shlv[i][sz[i]]=sm[i][sz[i]];\n        shlv[i][0]=0;\n    }\n    int nmx=0;\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<=sz[i];j++)\n            for(k=0;k<=nmx;k++)\n            {\n                tdp[j+k]=Max(tdp[j+k],dp[k]+shlv[i][j]);\n            }\n        nmx+=sz[i];\n        for(j=0;j<=nmx;j++)\n        {\n            dp[j]=tdp[j];\n        }\n    }\n    printf(\"%d\\n\",dp[m]);\n    return 0;\n}\n"}
{"similarity_score": 0.94, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5bc34a67560ecce5b478db274e7a7476", "bug_code_uid": "d1f36c60cbd99859e46bfe4a81c67b49", "src_uid": "5e5dbd70c7fcedf0f965aed5bafeb06c", "apr_id": "2f3da025bfbb049dc90d94dfa242ebcf", "difficulty": 800, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint a;\n\tchar s[64];\n\tint n=0;\n\tint z=0;\n\n\tscanf(\"%d\\n\",&a);\n\tscanf(\"%s\",s);\n\n\tfor(int i=0; i<a; ++i)\n\t{\n\t\tif(s[i]=='n')\n\t\t\t++n;\n\t\telse if(s[i]=='z')\n\t\t\t++z;\n\t}\n\tfor(int i=0;i<n;++i)\n\t\tprintf(\"1 \");\n\tfor(int i=0;i<z;++i)\n\t\tprintf(\"0 \");\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define MEGACHAR 1000000\n\nint main()\n{\n\tint a;\n\tchar s[MEGACHAR];\n\tint n=0;\n\tint z=0;\n\n\tscanf(\"%d\\n\",&a);\n\tscanf(\"%s\",s);\n\n\tfor(int i=0; i<a; ++i)\n\t{\n\t\tif(s[i]=='n')\n\t\t\t++n;\n\t\telse if(s[i]=='z')\n\t\t\t++z;\n\t}\n\tfor(int i=0;i<n;++i)\n\t\tprintf(\"1 \");\n\tfor(int i=0;i<z;++i)\n\t\tprintf(\"0 \");\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9715468184169684, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "16dabc3dc273884b4fe54daaacd0c6d0", "bug_code_uid": "9022e7d010f7299e44771a41c503eeee", "src_uid": "eee23388aa7cda50302fc4da6e50e172", "apr_id": "ebb69b1420c0c0022f2789beabe82350", "difficulty": 800, "tags": ["2-sat", "constructive algorithms", "greedy", "string suffix structures", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n\nint main()\n{\n    int t;\n    scanf(\"%i\\n\", &t);\n    for (int q=0;q<t;q++){\n        int n,m;\n        scanf(\"%i %i\\n\", &n, &m);\n        int count[m];\n        memset(count,0,m*sizeof(int));\n        for (int i=0; i<n; i++){\n            int x;\n            scanf(\"%i \", &x);\n            count[x-1]++;\n        }\n        char s[m];\n        memset(s,'B',m*sizeof(char));\n        for (int i=0; i<m; i++){\n            if(count[i]>0){\n                if(count[i]>1){\n                    count[m-1-i] = count[i];\n                    s[i] = 'A';\n                    s[m-1-i] = 'A';\n                }\n                else{\n                    s[i] = 'A';\n                }\n            }\n            else{\n                if(count[m-1-i]==1 && i<m/2){\n                    s[i] = 'A';\n                    count[m-1-i] = 0;\n                }\n            }\n        }\n\n        printf(\"%s\\n\", s);\n    }\n\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n\nint main()\n{\n    int t;\n    scanf(\"%i\\n\", &t);\n    for (int q=0;q<t;q++){\n        int n,m;\n        scanf(\"%i %i\\n\", &n, &m);\n        int count[m];\n        memset(count,0,m*sizeof(int));\n        for (int i=0; i<n; i++){\n            int x;\n            scanf(\"%i \", &x);\n            count[x-1]++;\n        }\n        char s[m];\n        memset(s,'B',m*sizeof(char));\n        for (int i=0; i<m; i++){\n            if(count[i]>0){\n                if(count[i]>1){\n                    count[m-1-i] = count[i];\n                    s[i] = 'A';\n                    s[m-1-i] = 'A';\n                }\n                else{\n                    s[i] = 'A';\n                }\n            }\n            else{\n                if(count[m-1-i]==1 && i<m/2){\n                    s[i] = 'A';\n                    count[m-1-i] = 0;\n                }\n            }\n        }\n\n        for(int i=0; i<m; i++) printf(\"%c\",s[i]);\n        printf(\"\\n\");\n    }\n\n}"}
{"similarity_score": 0.5463559742191373, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "5e2efae3811dae6bc45bec349433e291", "bug_code_uid": "3f4eb9ee2d6bdc44245a4f4b229e0118", "src_uid": "468e8a14dbdca471f143f59b945508d0", "apr_id": "980886a7f7d97e32c033a48278a4c9bf", "difficulty": 1500, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid writeValuesInVector(int** vector, int tam){\n    int i;\n    for(i=0; i<tam; i++){\n        scanf(\"%d\", &(*vector)[i]);\n    }\n}\n\nint main(void){\n    int tamN, tamM, i, j, counter, ambiguous = 0, impossible = 0, aux, value;\n    scanf(\"%d\", &tamN);\n    scanf(\"%d\", &tamM);\n    int* f = (int*)malloc(tamN * sizeof(int));\n    int* a = (int*)malloc(tamM * sizeof(int));\n    writeValuesInVector(&f, tamN);\n\n    for(i=0; i<tamM && impossible == 0; i++){\n        scanf(\"%d\", &value);\n        for(j=0, counter=0; j<tamN; j++){\n            if(f[j] == value){\n                counter++;\n                aux = j+1;\n            }\n        }\n        if(counter > 1) ambiguous = 1;\n        else if(counter == 0)impossible = 1;\n        else a[i] = aux;\n    }\n\n    if(impossible == 1)printf(\"Impossible\");\n    else if(ambiguous == 1)printf(\"Ambiguity\");\n    else{\n        printf(\"Possible\\n\");\n        for(i=0; i<tamM; i++){\n            printf(\"%d \", a[i]);\n        }\n    }\n    free(f);\n    free(a);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid writeValuesInVector(int** vector, int tam){\n    int i, val;\n    for(i=0; i<tam; i++){\n        scanf(\"%d\", &val);\n        if((*vector)[val] == 0)(*vector)[val] = i+1;\n        else (*vector)[val] = -1;\n    }\n}\n\nint main(void){\n    int tamN, tamM, i, j, counter, ambiguous = 0, impossible = 0, aux, value;\n    scanf(\"%d\", &tamN);\n    scanf(\"%d\", &tamM);\n    int* f = calloc(tamN+1, sizeof(int*));\n    int* a = (int*)malloc(tamM * sizeof(int));\n    writeValuesInVector(&f, tamN);\n\n    for(i=0; i<tamM && impossible == 0; i++){\n        scanf(\"%d\", &value);\n        if(f[value] == 0) impossible = 1;\n        else if(f[value] == -1)ambiguous = 1;\n        else a[i] = f[value];\n    }\n\n    if(impossible == 1)printf(\"Impossible\");\n    else if(ambiguous == 1)printf(\"Ambiguity\");\n    else{\n        printf(\"Possible\\n\");\n        for(i=0; i<tamM; i++){\n            printf(\"%d \", a[i]);\n        }\n    }\n    free(f);\n    free(a);\n    return 0;\n}\n"}
{"similarity_score": 0.8328643781654473, "equal_cnt": 25, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 18, "fix_ops_cnt": 24, "lang": "GNU C", "fix_code_uid": "122e4996d75da1096d1ee5793ff7c59d", "bug_code_uid": "e27ec90178d33c805ea019c85d647f77", "src_uid": "0988b8439c6699107c77345037162fba", "apr_id": "8f15c5ba0fe0ae62ea1fcf10bbe23e8c", "difficulty": 1600, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n,m,i,j,flag;\n\tscanf(\"%d%d\",&n,&m);\n\tchar arr[n][m];\n\tchar c=getchar();\n\tint hor=1;\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<m;j++){\n\t\t\tarr[i][j] = getchar();\n\t\t\tif(i==0 && j>0 && arr[i][j]!=arr[0][0])hor=0;\n\t\t}\n\t\tgetchar();\n\t}\n\tif(!hor){//printf(\"xx\\n\");\n\t\tif(m%3)printf(\"NO\\n\");\n\t\telse{\n\t\t\tflag=0;\n\t\t\tfor(j=0;j<m&&!flag;j++){\n\t\t\t\tfor(i=0;i<n;i++){\n\t\t\t\t\tif(arr[i][j]!=arr[0][(j*3/m)*m/3]){\n\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag)printf(\"NO\\n\");\n\t\t\telse printf(\"YES\\n\");\n\t\t}\n\t}\n\telse{\n\t\tif(n%3)printf(\"NO\\n\");\n\t\telse{\n\t\t\tflag=0;\n\t\t\tfor(i=0;i<n;i++){\n\t\t\t\tif(flag)break;\n\t\t\t\tfor(j=0;j<m;j++){\n\t\t\t\t\tif(arr[i][j]!=arr[(i*3/n)*n/3][0]){\n\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag)printf(\"NO\\n\");\n\t\t\telse printf(\"YES\\n\");\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n\tint n,m,i,j,flag;\n\tscanf(\"%d%d\",&n,&m);\n\tchar arr[n][m];\n\tint c[3]={0};\n\tgetchar();\n\tint hor=1;\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<m;j++){\n\t\t\tarr[i][j] = getchar();\n\t\t\tif(arr[i][j]=='R')c[0]++;\n\t\t\telse if(arr[i][j]=='G')c[1]++;\n\t\t\telse c[2]++;\n\t\t\tif(i==0 && j>0 && arr[i][j]!=arr[0][0])hor=0;\n\t\t}\n\t\tgetchar();\n\t}\n\tif(c[0]!=c[1] || c[0]!=c[2] || c[1]!=c[2])printf(\"NO\\n\");\n\telse{\n\t\tif(!hor){//printf(\"xx\\n\");\n\t\t\tif(m%3)printf(\"NO\\n\");\n\t\t\telse{\n\t\t\t\tflag=0;\n\t\t\t\tfor(j=0;j<m&&!flag;j++){\n\t\t\t\t\tfor(i=0;i<n;i++){\n\t\t\t\t\t\tif(arr[i][j]!=arr[0][(j*3/m)*m/3]){\n\t\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(flag)printf(\"NO\\n\");\n\t\t\t\telse printf(\"YES\\n\");\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(n%3)printf(\"NO\\n\");\n\t\t\telse{\n\t\t\t\tflag=0;\n\t\t\t\tfor(i=0;i<n;i++){\n\t\t\t\t\tif(flag)break;\n\t\t\t\t\tfor(j=0;j<m;j++){\n\t\t\t\t\t\tif(arr[i][j]!=arr[(i*3/n)*n/3][0]){\n\t\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(flag)printf(\"NO\\n\");\n\t\t\t\telse printf(\"YES\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9318801089918256, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "0ef783399dbe7837a27b0efeea4a0233", "bug_code_uid": "4c7c9ba86ad12c11fe8e1dac4613ec75", "src_uid": "deeb49969ac4bc4f1c7d76b89ac1402f", "apr_id": "1b332faeb339b4a42c09f384359bcc17", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main()\n{\n\tint n,m;\n\tcin>>n>>m;\n\tint a,b,i;\n\ta=b=0;\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint x; scanf(\"%d\",&x);\n\t\tif(x==-1)\n\t\t\ta++;\n\t\telse b++;\n\t}\n\n\tfor(i=0;i<m;i++)\n\t{\n\t\tint l,r; cin>>l>>r;\n\t\tint len = r-l+1;\n\n\t\tif(len%2==1)\n\t\t\tprintf(\"0\\n\");\n\t\telse\n\t\t{\n\t\t\tif(a>=len/2&&b>=len/2)\n\t\t\t\tprintf(\"1\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"0\\n\");\n\t\t}\n\t}\n\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\n\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tint a,b,i;\n\ta=b=0;\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint x; scanf(\"%d\",&x);\n\t\tif(x==-1)\n\t\t\ta++;\n\t\telse b++;\n\t}\n\n\tfor(i=0;i<m;i++)\n\t{\n\t\tint l,r; scanf(\"%d%d\",&l,&r);\n\t\tint len = r-l+1;\n\n\t\tif(len%2==1)\n\t\t\tprintf(\"0\\n\");\n\t\telse\n\t\t{\n\t\t\tif(a>=len/2&&b>=len/2)\n\t\t\t\tprintf(\"1\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"0\\n\");\n\t\t}\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.8744059742023083, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "f6aeaf791444dd4df99a7877fcdec867", "bug_code_uid": "2beca7b7542fbf2b33a33ea17b87d6ea", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "574de8c29352e7e327d478243076f019", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 0; i < t; i++) {\r\n        int width, height, nFriends;\r\n        scanf(\"%d %d %d\", &width, &height, &nFriends);\r\n\r\n        int nParts = 1;\r\n        int stop = 1;\r\n        while (stop) {\r\n            if (width % 2 == 0) {\r\n                width /= 2;\r\n                nParts++;\r\n            } else if (height % 2 == 0) {\r\n                height /= 2;\r\n                nParts++;\r\n            } else\r\n                stop=0;\r\n        }\r\n\r\n        if (nParts < nFriends)\r\n            printf(\"NO\\n\");\r\n        else\r\n            printf(\"YES\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\n#define PAPER_SHEET_DIVIDER 2\r\n\r\nint main() {\r\n    int nSets;\r\n    scanf(\"%d\", &nSets);\r\n\r\n    for (int i = 0; i < nSets; i++) {\r\n        int width, height, nFriends;\r\n        scanf(\"%d %d %d\", &width, &height, &nFriends);\r\n\r\n        int nParts = 1;\r\n        int stop = 1;\r\n        while (stop) {\r\n            if (width % PAPER_SHEET_DIVIDER == 0) {\r\n                width /= PAPER_SHEET_DIVIDER;\r\n                nParts *= PAPER_SHEET_DIVIDER;\r\n            } else if (height % PAPER_SHEET_DIVIDER == 0) {\r\n                height /= PAPER_SHEET_DIVIDER;\r\n                nParts *= PAPER_SHEET_DIVIDER;\r\n            } else\r\n                stop = 0;\r\n        }\r\n\r\n        if (nParts < nFriends)\r\n            printf(\"NO\\n\");\r\n        else\r\n            printf(\"YES\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9925373134328358, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "55438d8474eea75a5bcf2d08f2821417", "bug_code_uid": "d5bbae13845fecb0c940ea998bac1da0", "src_uid": "43d877e3e1c1fd8ee05dc5e5e3067f93", "apr_id": "b75755c756c101cfae4ae2bdeed41183", "difficulty": 2100, "tags": ["dp", "probabilities", "data structures", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int modpow(long long int a, long long int n, long long int p)\n{\n\tif (a < 0)\n\t\treturn 0;\n\tlong long int res = 1;\n\twhile (n > 0)\n\t{\n\t\tif (n % 2 > 0)\n\t\t\tres = res * a % p;\n\t\ta = a * a % p;\n\t\tn /= 2;\n\t}\n\treturn res;\n}\nint main()\n{\n\tlong long int n, i, p[200005];\n\tscanf(\"%lld\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%lld\", &p[i]);\n\tlong long int pp = 998244353;\n\tlong long int s[200005];\n\ts[n] = 1;\n\tfor (i = n - 1; i >= 0; i--)\n\t\ts[i] = s[i + 1] * 100 * modpow(p[i], pp - 2, pp) % pp;\n\tlong long int ans = 0;\n\tfor (i = 0; i < n; i++)\n\t\tans = (ans + 100 * modpow(p[i], pp - 2, pp) % pp * s[i + 1]) % pp;\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nlong long int modpow(long long int a, long long int n, long long int p)\n{\n\tif (a < 0)\n\t\treturn 0;\n\tlong long int res = 1;\n\twhile (n > 0)\n\t{\n\t\tif (n % 2 > 0)\n\t\t\tres = res * a % p;\n\t\ta = a * a % p;\n\t\tn /= 2;\n\t}\n\treturn res;\n}\nint main()\n{\n\tlong long int n, i, p[200005];\n\tscanf(\"%lld\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%lld\", &p[i]);\n\tlong long int pp = 998244353;\n\tlong long int s[200005];\n\ts[n] = 1;\n\tfor (i = n - 1; i >= 0; i--)\n\t\ts[i] = s[i + 1] * 100 % pp * modpow(p[i], pp - 2, pp) % pp;\n\tlong long int ans = 0;\n\tfor (i = 0; i < n; i++)\n\t\tans = (ans + 100 * modpow(p[i], pp - 2, pp) % pp * s[i + 1] % pp) % pp;\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}"}
{"similarity_score": 0.9962640099626401, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "95f466e0a9cddee3417f178d1cd7b013", "bug_code_uid": "603178063a17ae40658013ad2433bdc8", "src_uid": "e0ec0cd81d2ec632ef89d207d80fa8a3", "apr_id": "0c12da1aae41a7de2ef6d710718a0bf0", "difficulty": 800, "tags": ["math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main(int argc, char *argv[]) {\r\n\t\r\n\tint t,i;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint a[7];\r\n\t\tfor(i=0;i<7;i++){\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t}\r\n\t\t\tprintf(\"%d %d \",a[0],a[1]);\r\n\t\t\tif(a[2]!=a[0]+a[1])\r\n\t\t\tprintf(\"%d\",a[2]);\r\n\t\t\telse{\r\n\t\t\t\tfor(i=3;i<7;i++){\r\n\t\t\t\t\tif(a[i]>=a[2])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprintf(\"%d\\n\",a[i]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t}\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n \r\nint main(int argc, char *argv[]) {\r\n\t\r\n\tint t,i;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint a[7];\r\n\t\tfor(i=0;i<7;i++){\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t}\r\n\t\t\tprintf(\"%d %d \",a[0],a[1]);\r\n\t\t\tif(a[2]!=a[0]+a[1])\r\n\t\t\tprintf(\"%d\\n\",a[2]);\r\n\t\t\telse{\r\n\t\t\t\tfor(i=3;i<7;i++){\r\n\t\t\t\t\tif(a[i]>=a[2])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprintf(\"%d\\n\",a[i]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t}\r\n}"}
{"similarity_score": 0.7754189944134078, "equal_cnt": 4, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "9c7f6a434ed04c94057bc7fae13b1db9", "bug_code_uid": "6ccd09dcabd9b3fe1897ea3147f6ae07", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "75c2710c196f464c9e53808ae6b87e2e", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,a,b,res;\n\tscanf(\"%d %d %d\",&n,&a,&b);\n\tres=fun(n,a,b);\n\tprintf(\"%d\\n\",res);\n\t\n\treturn 0;\n}\n\n\nint fun(int n,int a,int b)\n{\n\tint i,sum=0;\n\tchar array[n];\n\ta=a-1;\n\tb=b-1;\n\tscanf(\"%s\",array);\n\t\n\tif(a<b)\n\t{\n\t\tfor(i=a;array[i]!= array[b];i++)\n\t\t{\n\t\t\tsum=sum+1;\n\t\t}\n\t}\n\t\n\telse\t\n\t{\n\t\tfor(i=b;array[i]!= array[a];i++)\n\t\t{\n\t\t\tsum=sum+1;\n\t\t}\n\t}\n\t\n\treturn sum;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,a,b,res;\n\tscanf(\"%d %d %d\",&n,&a,&b);\n\tres=fun(n,a,b);\n\tprintf(\"%d\\n\",res);\n\t\n\treturn 0;\n}\n\n\nint fun(int n,int a,int b)\n{\n\tint i,sum=0;\n\tchar array[n];\n\ta=a-1;\n\tb=b-1;\n\tscanf(\"%s\",array);\n\t\n\tif(a<b)\n\t{\n\t\tfor(i=a;array[i]!= array[b];i++)\n\t\t{\n\t\t  if(array[i] != array[i+1])\n\t\t\t{\n\t\t\tsum=sum+1;\n\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\t\n\telse\t\n\t{\n\t\tfor(i=b;array[i]!= array[a];i++)\n\t\t{\n\t\t\tif(array[i] != array[i+1])\n\t\t\t{\n\t\t\tsum=sum+1;\n\t\t\t//printf(\"%d %d\\n\",i,sum);\n\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn sum;\n}"}
{"similarity_score": 0.2809364548494983, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "15cf67563ce739e7ca6d2c115216ea49", "bug_code_uid": "bfb4778072006511f36ea3c77030e24f", "src_uid": "91d5147fb602298e08cbdd9f86d833f8", "apr_id": "0189ecd4526bb7fb05fe8feac012a840", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    long long n,a,x,y,z;\n    scanf(\"%lld\",&n);\n    a=n/3;\n    if(a*3!=n){\n        x=a;\n        y=a;\n        z=n-a-a;\n    }\n    else{\n        if(a%3!=0){\n            x=a;y=a;z=a;\n        }\n        else{\n            x=a-1;\n            y=a-1;\n            z=n-x-y;\n        }\n    }\n    printf(\"%lld %lld %lld\\n\",x,y,z);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    long long n,x,y,z;\n    scanf(\"%lld\",&n);\n    if((n-1)%3==0){\n        printf(\"1 1 %lld\\n\",n-2);\n    }\n    else if((n-2)%3==0)printf(\"2 2 %lld\\n\",n-4);\n    else printf(\"1 1 %lld\\n\",n-2);\n    return 0;\n}\n"}
{"similarity_score": 0.9969293756397134, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "58539d8f5dd56f6eb2d0bbb690a697d9", "bug_code_uid": "5189fc84729b1c8492dd5797d719da65", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "c8930e04cc23349a2049005c7a8bcfe0", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n   int i,k,h,g,w,r,m,n,s;\n   int a[100100],b[100100],c[100100];\n   scanf(\"%d\",&n);\n   c[0]=0;\n   for(i=1;i<=n;i++){\n    scanf(\"%d\",&a[i]);\n    c[i]=c[i-1]+a[i];\n   }\n   scanf(\"%d\",&m);\n   for(i=0;i<m;i++){\n    scanf(\"%d\",&w);\n    g=1,r=n;\n    while(r-g>1){\n        k=(g+r)/2;\n        if(w<=c[k])\n            r=k;\n        else if(w>c[k])\n            g=k;\n    }\n    if(w>c[k])\n        printf(\"%d\\n\",r);\n    else\n        printf(\"%d\\n\",g);\n   }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n   int i,k,h,g,w,r,m,n,s;\n   int a[100100],b[100100],c[100100];\n   scanf(\"%d\",&n);\n   c[0]=0;\n   for(i=1;i<=n;i++){\n    scanf(\"%d\",&a[i]);\n    c[i]=c[i-1]+a[i];\n   }\n   scanf(\"%d\",&m);\n   for(i=0;i<m;i++){\n    scanf(\"%d\",&w);\n    g=1,r=n;\n    while(r-g>1){\n        k=(g+r)/2;\n        if(w<=c[k])\n            r=k;\n        else if(w>c[k])\n            g=k;\n    }\n    if(w>c[g])\n        printf(\"%d\\n\",r);\n    else\n        printf(\"%d\\n\",g);\n   }\n    return 0;\n}"}
{"similarity_score": 0.8989317995069844, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "34fc5cb2b47a6ec525ba727c9d7a41bc", "bug_code_uid": "7872313b6ba529d2a41b4c24015b2b1a", "src_uid": "d7e6e5042b8860bb2470d5a493b0adf6", "apr_id": "b43035d928ba95d5086ad1f564fe6e3e", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar s[100010];\nint ara[10], k;\nint main()\n{\n    int dif,i,j,sum=0, d, count;\n    scanf(\"%d%s\",&k,s);\n    for(i=0; s[i]!='\\0'; i++){\n        d=s[i]-'0';\n        sum+=d;\n        ara[d]++;\n    }\n    if(sum>=k)\n        printf(\"0\\n\");\n    else{\n        dif=k-sum;\n        count=0;\n        for(i=0; i<=9; i++){\n            while( ara[i]-- ){\n                count++;\n                dif=dif-9+i;\n                if(dif<=0){\n                    printf(\"%d\\n\",count);\n                    return 0;\n                }\n            }\n        }\n    }\n    return 1;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    char s[100010]={0};\n    int ara[10]={0}, k;\n    int dif,i,len,sum=0, d, count;\n    scanf(\"%d%s\",&k,s);\n    len=strlen(s);\n    for(i=0; i<len; i++){\n        d=s[i]-'0';\n        sum+=d;\n        ara[d]++;\n    }\n    if(sum>=k)\n        printf(\"0\\n\");\n    else{\n        dif=k-sum;\n        count=0;\n        for(i=0; i<=9; i++){\n            while( ara[i]-- ){\n                count++;\n                dif=dif-9+i;\n                if(dif<=0){\n                    printf(\"%d\\n\",count);\n                    return 0;\n                }\n            }\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9936908517350158, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "609182a739e3df1afc37ee0e98613479", "bug_code_uid": "49ecb79f1c77a8d03ccf5c16cea5e255", "src_uid": "4dfa99acbe06b314f0f0b934237c66f3", "apr_id": "b38c1c305cfd9b5a7948636c0208d218", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main() {\r\n        \r\n    int tc;\r\n    scnaf(\"%d\", &tc);\r\n        \r\n    for(int t = 0; t < tc; t++) {\r\n        \r\n        long long int a, b;\r\n        scanf(\"%lld %lld\", &a, &b);\r\n        long long int x = -(a * a), y = b * b;\r\n        printf(\"%lld %lld\\n\", x, y);\r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main() {\r\n        \r\n    int tc;\r\n    scanf(\"%d\", &tc);\r\n        \r\n    for(int t = 0; t < tc; t++) {\r\n        \r\n        long long int a, b;\r\n        scanf(\"%lld %lld\", &a, &b);\r\n        long long int x = -(a * a), y = b * b;\r\n        printf(\"%lld %lld\\n\", x, y);\r\n    }\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.5110876451953538, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "55c784e0b8ad84824aab13dc8349693b", "bug_code_uid": "defc26e60e42051e5d742fa7037facd8", "src_uid": "259e39c9e63e43678e596c0d8c66937c", "apr_id": "105ef0a6c7b77bf344322ece7449502f", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        long long int P;\r\n        scanf(\"%lld\",&P);\r\n        long long int i,j,a,b;\r\n        for(i=1;i<=P;i++)\r\n        {\r\n            for(j=1;j<=P;j++)\r\n            {\r\n                if(P%i == P%j)\r\n                {\r\n                    if(i<j)\r\n                    {\r\n                        a=i;\r\n                        b=j;\r\n                        break;\r\n                    }\r\n                    else\r\n                   continue;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%lld %lld\\n\",a,b);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        long long int P;\r\n        scanf(\"%lld\",&P);\r\n        \r\n        if(P%2 == 0)\r\n        {\r\n            printf(\"%d %d\\n\",2,P);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d %d\\n\",2,P-1);\r\n        }\r\n        \r\n    }\r\n}"}
{"similarity_score": 0.9915809167446211, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "bc39dd55deda19a9ada0b226f130b12f", "bug_code_uid": "5224ad2cde83b8996dba7c91060b3433", "src_uid": "480defc596ee5bc800ea569fd76dc584", "apr_id": "d59ec26fd67dbcc8becbe680b8043f64", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint cmp(int *a, int *b)\n{\n\treturn -((*a)-(*b));\n}\n\nint main()\n{\n\tlong long int n, k;\n\tlong long int a[26], i;\n\tfor(i=0; i<26; i++)\n\t{\n\t\ta[i]=0;\n\t}\n\n\tscanf(\"%l64d %l64d\", &n, &k);\n\tchar c[100000];\n\tscanf(\"%s\", c);\n\tfor(i=0; i<n; i++)\n\t{\n\t\ta[c[i]-'A']++;\n\t}\n\t\n\tqsort(a, 26, sizeof(long long int), cmp);\n\tlong long int coins=0;\n\ti=0;\n\n\twhile(k>0)\n\t{\n\t\tif(a[i]>k)\n\t\t{\n\t\t\tcoins += k*k;\n\t\t\tk=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcoins += a[i]*a[i];\n\t\t\tk -= a[i];\n\t\t}\n\t\ti++;\n\t}\n\n\tprintf(\"%l64d\\n\", coins);\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint cmp(int *a, int *b)\n{\n\treturn -((*a)-(*b));\n}\n\nint main()\n{\n\tlong long int n, k;\n\tlong long int a[26], i;\n\tfor(i=0; i<26; i++)\n\t{\n\t\ta[i]=0;\n\t}\n\n\tscanf(\"%lld %lld\", &n, &k);\n\tchar c[100000];\n\tscanf(\"%s\", c);\n\tfor(i=0; i<n; i++)\n\t{\n\t\ta[c[i]-'A']++;\n\t}\n\t\n\tqsort(a, 26, sizeof(long long int), cmp);\n\tlong long int coins=0;\n\ti=0;\n\n\twhile(k>0)\n\t{\n\t\tif(a[i]>k)\n\t\t{\n\t\t\tcoins += k*k;\n\t\t\tk=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcoins += a[i]*a[i];\n\t\t\tk -= a[i];\n\t\t}\n\t\ti++;\n\t}\n\n\tprintf(\"%lld\\n\", coins);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9571275455519829, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "c3af442fee718863b14b36658a8d2733", "bug_code_uid": "c80f0d28db51753331a79924b2be3de4", "src_uid": "1d8937ab729edad07b3b23b1927f7e11", "apr_id": "1668565f68a32c0088105ce0def4158d", "difficulty": 1800, "tags": ["dp", "hashing", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#define REP(i,a,b) for(i=a;i<b;i++)\n#define REPi(i,a,b) for(i=a-1;i>=b;i--)\n#define rep(i,b) REP(i,1,b+1)\n#define repi(i,b) REPi(i,b,0)\n#define si(n) scanf(\"%d\",&n)\n#define sort(arrr,n) qsort(arrr,n,sizeof(int),compare)\n#define min(a,b) (a<b?a:b)\n#define pi(n) printf(\"%d\\n\",n)\nint a[5001][5001];\nint is[5001][5001];\nchar s[5001];\nint main()\n{\n    int n,t,i,j,x,y,k;\n    scanf(\"%s\",s);\n    n=strlen(s);\n    for(i=1;i<=n;i++)\n\tfor(j=i;j>0;j--)\n\t{\n\t    if(j==i)a[i][j]=1;\n\t    else \n\t    {\n\t\tif(s[i]!=s[j])a[i][j]=0;\n\t\telse\n\t\t{\n\t\t    if(i-j==1)a[i][j]=1;\n\t\t    else\n\t\t    {\n\n\t\t\tif(a[i-1][j+1])a[i][j]=1;\n\t\t\telse a[i][j]=0;\n\t\t    }\n\t\t}\n\t    }\n\t}\n    rep(i,n)\n\tfor(j=i;j>0;j--)\n\t{\n\t    if(i==j)is[i][j]=1;\n\t    else{\n\t\tis[i][j]=is[i-1][j];\n\t\tfor(k=j;k>i;k++)\n\t\t    is[i][j]+=a[i][k];\n\t    }\n\t}\n\n    si(t);\n    while(t--)\n    {\n\tsi(x);\n\tsi(y);\n\tpi(is[y][x]);\n    }\n    return 0;\n}\n\n\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#define REP(i,a,b) for(i=a;i<b;i++)\n#define REPi(i,a,b) for(i=a-1;i>=b;i--)\n#define rep(i,b) REP(i,1,b+1)\n#define repi(i,b) REPi(i,b,0)\n#define si(n) scanf(\"%d\",&n)\n#define sort(arrr,n) qsort(arrr,n,sizeof(int),compare)\n#define min(a,b) (a<b?a:b)\n#define pi(n) printf(\"%d\\n\",n)\nint a[5001][5001];\nint is[5001][5001];\nchar s[5001];\nint main()\n{\n    int n,t,i,j,x,y,k;\n    scanf(\"%s\",s);\n    n=strlen(s);\n    for(i=1;i<=n;i++)\n\tfor(j=i;j>0;j--)\n\t{\n\t    if(j==i)a[i][j]=1;\n\t    else \n\t    {\n\t\tif(s[i-1]!=s[j-1])a[i][j]=0;\n\t\telse\n\t\t{\n\t\t    if(i-j==1)a[i][j]=1;\n\t\t    else\n\t\t    {\n\n\t\t\tif(a[i-1][j+1])a[i][j]=1;\n\t\t\telse a[i][j]=0;\n\t\t    }\n\t\t}\n\t    }\n\t}\n    rep(i,n)\n\tfor(j=i;j>0;j--)\n\t{\n\t    if(i==j)is[i][j]=1;\n\t    else\n\t    {\n\t\tis[i][j]=is[i-1][j]+is[i][j+1]-is[i-1][j+1]+a[i][j];\n\t    }\n\t}\n\n    si(t);\n    while(t--)\n    {\n\tsi(x);\n\tsi(y);\n\tpi(is[y][x]);\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.9347408829174664, "equal_cnt": 11, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 10, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "12ea5c1b0488c4ee344ddb374fcf3f12", "bug_code_uid": "ec5453876d4d2d8f79c4ade71826336a", "src_uid": "d786585fee251ebfd5c3e8d8b0425791", "apr_id": "71b6b4fbeb3a2bc228b1cad8ed854f5f", "difficulty": 900, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        int count=0,count1=0;\r\n        for(int j=0;j<n;j++){\r\n            scanf(\"%d\",&a[j]);\r\n            if(a[j]==1){\r\n                count1++;\r\n            }\r\n            if(a[j]==0){\r\n                count++;\r\n            }\r\n        }\r\n        int ans= pow(2,count)*count1;\r\n        printf(\"%d\\n\",ans);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n    long long int t,n;\r\n    scanf(\"%lld\",&t);\r\n    for(long long int i=0;i<t;i++){\r\n        scanf(\"%lld\",&n);\r\n        long long int a[n];\r\n        long long int count=0,count1=0;\r\n        for(long long int j=0;j<n;j++){\r\n            scanf(\"%lld\",&a[j]);\r\n            if(a[j]==1){\r\n                count1++;\r\n            }\r\n            if(a[j]==0){\r\n                count++;\r\n            }\r\n        }\r\n        long long int ans= pow(2,count)*count1;\r\n        printf(\"%lld\\n\",ans);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.920863309352518, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3ff943b4dfe176e1e1c75308f5fd345a", "bug_code_uid": "4f36272cc957aaf3ff5f352ae3ad3703", "src_uid": "e215e94dd196dde381adc13406d2d72a", "apr_id": "da9dc1c301973f8c3471ca3d2d9513db", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n    int n,i,j,k=1;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++,printf(\"\\n\"))\r\n    {\r\n        for(j=0;j<n;j++)\r\n        {\r\n            printf(\"%d \",k);\r\n            k=k+2;\r\n            if(k>n*n)\r\n            k=2;\r\n        }\r\n    }\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n    int n,i,j,k=1;\r\n    scanf(\"%d\",&n);\r\n    if(n!=2){\r\n    for(i=0;i<n;i++,printf(\"\\n\"))\r\n    {\r\n        for(j=0;j<n;j++)\r\n        {\r\n            printf(\"%d \",k);\r\n            k=k+2;\r\n            if(k>n*n)\r\n            k=2;\r\n        }\r\n    }\r\n    }\r\n    else\r\n    printf(\"-1\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.5875, "equal_cnt": 14, "replace_cnt": 13, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "f55e7ff01fa8dba60ecae2df06657d33", "bug_code_uid": "f260a7fcaf5a52fe548b17835b33e64d", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "3f18f2b701e7e7e19b46228d5348c4eb", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int len,a=0,b=0;\n    char arr[len];\n    for(i=;i<len;i++){\n        scanf(\"%c\",&arr[i]);\n        if(arr[i]=='A'){\n           a++; \n        }\n        else{\n            b++;\n        }\n    }\n    if(a>b){\n        printf(\"Anton\");\n    }\n    else if(a<b){\n    printf(\"Danik\");\n    }\n    else{\n        printf(\"Friendship\")\n    }\n}", "fixed": "#include<stdio.h>\nint main(){\n    int test,i=0,count_a=0,count_d=0;\n    scanf(\"%d\",&test);\n    char c[test+1];\n    scanf(\"%s\",c);\n    while(c[i]!='\\0'){\n        if(c[i]=='A'){\n            count_a++;\n        }\n        else{\n            count_d++;\n        }\n        i++;\n    }\n    if(count_a>count_d){\n        printf(\"Anton\");\n    }\n    else if(count_d>count_a){\n        printf(\"Danik\");\n    }\n    else{\n        printf(\"Friendship\");\n    }\n    \n}"}
{"similarity_score": 0.9503722084367245, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2a5b066a5a0158ae6353a32cb4a0f126", "bug_code_uid": "98e351f7c2ec32a1f6f482364af17654", "src_uid": "ecd9bbc05b97f3cd43017dd0eddd014d", "apr_id": "a42d5add2b0bdc549d12e2b11214af49", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint b[1000010][5];\nint main()\n{\n    int l=0,c[100010],max=-1,n,a[100010],i;\n    scanf(\"%d\",&n);\n    for(i=0;i<1000002;i++)\n    {\n        b[i][0]=0;\n        b[i][1]=0;\n        b[i][2]=0;\n    }\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(b[a[i]][0]==0)\n            b[a[i]][1]=i;\n        else\n            b[a[i]][2]=i;\n        b[a[i]][0]++;\n    }\n    for(i=1;i<=1000000;i++)\n        if(b[i][0]>max)\n            max=b[i][0];\n    for(i=1;i<=1000000;i++)\n        if(b[i][0]==max)\n            c[l++]=i;\n    for(i=0;i<l;i++)\n        if(b[c[i]][2]-b[c[i]][1]<b[c[0]][2]-b[c[0]][1])\n        {\n            b[c[0]][2]=b[c[i]][2];\n            b[c[0]][1]=b[c[i]][1];\n        }\n    printf(\"%d %d\\n\",b[c[0]][1],b[c[0]][2]);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint b[1000010][5];\nint main()\n{\n    int l=0,c[100010],max=-1,n,a[100010],i;\n    scanf(\"%d\",&n);\n    for(i=0;i<1000002;i++)\n    {\n        b[i][0]=0;\n        b[i][1]=0;\n        b[i][2]=0;\n    }\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(b[a[i]][0]==0)\n        {\n            b[a[i]][1]=i;\n            b[a[i]][2]=i;\n        }\n        else\n            b[a[i]][2]=i;\n        b[a[i]][0]++;\n    }\n    for(i=1;i<=1000000;i++)\n        if(b[i][0]>max)\n            max=b[i][0];\n    for(i=1;i<=1000000;i++)\n        if(b[i][0]==max)\n            c[l++]=i;\n    for(i=0;i<l;i++)\n        if(b[c[i]][2]-b[c[i]][1]<b[c[0]][2]-b[c[0]][1])\n        {\n            b[c[0]][2]=b[c[i]][2];\n            b[c[0]][1]=b[c[i]][1];\n        }\n    printf(\"%d %d\\n\",b[c[0]][1],b[c[0]][2]);\n    return 0;\n}\n"}
{"similarity_score": 0.940771349862259, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "88825e83704c61825d407e6ff08c3c1c", "bug_code_uid": "e0ec3ef74f22028c4e15c3576e9a40b1", "src_uid": "564664d9cd2ccbccb42574b3881ec5fe", "apr_id": "c18b19ef89618159bec0286fdfffc80d", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/*  AUTHOR:AKASH JAIN\n*   USERNAME:akash19jain    \n*   DATE:18/05/2019 \n*/\n#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n#include<stdbool.h>\n\nint main()\n{\n    long long t=1;\n    char str[105];\n    //scanf(\"%lld\\n\",&t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        \n        scanf(\"%s\", str);\n        //int n2=n/2;\n        for(int i=0;i<n/2;i++)\n        {\n            int x=i;\n            int y=x+n/2;\n            if(str[x]=='R' && str[y]=='L')\n            {\n                printf(\"%d %d\\n\",y+1,x+1);\n            }\n            else\n            {\n                printf(\"%d %d\\n\",x+1,y+1);\n            }\n        }\n    }\n    return 0;\n}", "fixed": "/*  AUTHOR:AKASH JAIN\n*   USERNAME:akash19jain    \n*   DATE:18/05/2019 \n*/\n#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n#include<stdbool.h>\n\nint main()\n{\n    long long t=1;\n    char str[105];\n    //scanf(\"%lld\\n\",&t);\n    while(t--)\n    {\n        freopen(\"input.txt\", \"r\", stdin);\n        freopen(\"output.txt\", \"w\", stdout);\n        int n;\n        scanf(\"%d\",&n);\n        \n        scanf(\"%s\", str);\n        //int n2=n/2;\n        for(int i=0;i<n/2;i++)\n        {\n            int x=i;\n            int y=x+n/2;\n            if(str[x]=='R' && str[y]=='L')\n            {\n                printf(\"%d %d\\n\",y+1,x+1);\n            }\n            else\n            {\n                printf(\"%d %d\\n\",x+1,y+1);\n            }\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.5353107344632768, "equal_cnt": 15, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "f70bb939dd40d688fc8e993a8071402a", "bug_code_uid": "32cb9c599260ddf1bc535d0a2354e30c", "src_uid": "63c2142461c93ae4c962eac1ecb5b192", "apr_id": "67c234319532fd3780a0fa8235c2f214", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int i,t,a,b,c;\r\n    scanf(\"%d\",&t);\r\n    if(t<=6840)\r\n    {\r\n        for(i=1;i<=t;i++)\r\n        {\r\n            scanf(\"%d %d %d\",&a,&b,&c);\r\n            if(a>=1 && a<=20 && b>=1 && b<=20 && c>=1 && c<=20)\r\n            {\r\n                if(b>a && b<c)\r\n                    printf(\"%d\\n\",b);\r\n                else if(a>b && a<c)\r\n                    printf(\"%d\\n\",a);\r\n            else\r\n                printf(\"%d\\n\",c);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n   \r\n        for(int i=1;i<=t;i++)\r\n        {\r\n            int a,b,c;\r\n            scanf(\"%d %d %d\",&a,&b,&c);\r\n          \r\n                if(a>b && a>c)\r\n                {\r\n                    if(b>c)\r\n                        printf(\"%d\\n\",b);\r\n                    else if(c>b)\r\n                        printf(\"%d\\n\",c);\r\n                }\r\n                else if(b>a && b>c)\r\n                {\r\n                    if(a>c)\r\n                        printf(\"%d\\n\",a);\r\n                    else if(c>a)\r\n                        printf(\"%d\\n\",c);\r\n                }\r\n                else if(c>b && c>a)\r\n                {\r\n                    if(b>a)\r\n                        printf(\"%d\\n\",b);\r\n                    else if(a>b)\r\n                        printf(\"%d\\n\",a);\r\n                }\r\n        }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9728915662650602, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3f6b01d7867a21b134db79000acb2310", "bug_code_uid": "aaa09f527fbdd52f965159557bc5dde9", "src_uid": "45cf60f551bd5cbb1f3df6ac3004b53c", "apr_id": "b597774e77896cb1ee1236152748b5c5", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t, n, a, b, c;\r\n    scanf(\"%d\", &t);\r\n    while (t-- && t >= 0)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        if (n % 3 == 2)\r\n        {\r\n            b = n / 3 + 2;\r\n            a = n / 3 + 1;\r\n            c = n / 3 - 1;\r\n        }\r\n        else if (n % 3 == 1)\r\n        {\r\n            b = n / 3 + 2;\r\n            a = n / 3 + 1;\r\n            c = n / 3 - 2;\r\n        }\r\n        else if (n % 3 == 0)\r\n        {\r\n            b = n / 3 + 1;\r\n            a = n / 3;\r\n            c = n / 3 - 1;\r\n        }\r\n        if(c==0)\r\n        {\r\n            c--;\r\n            a++;\r\n        }\r\n        printf(\"%d %d %d\\n\", a, b, c);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t, n, a, b, c;\r\n    scanf(\"%d\", &t);\r\n    while (t-- && t >= 0)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        if (n % 3 == 2)\r\n        {\r\n            b = n / 3 + 2;\r\n            a = n / 3 + 1;\r\n            c = n / 3 - 1;\r\n        }\r\n        else if (n % 3 == 1)\r\n        {\r\n            b = n / 3 + 2;\r\n            a = n / 3 + 1;\r\n            c = n / 3 - 2;\r\n        }\r\n        else if (n % 3 == 0)\r\n        {\r\n            b = n / 3 + 1;\r\n            a = n / 3;\r\n            c = n / 3 - 1;\r\n        }\r\n        if(c==0)\r\n        {\r\n            c++;\r\n            a--;\r\n        }\r\n        printf(\"%d %d %d\\n\", a, b, c);\r\n    }\r\n}"}
{"similarity_score": 0.557919621749409, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "41b404b8b0d2b474cf550e9146a79759", "bug_code_uid": "8fb5ae7f1424036622cce5ac7e9d8952", "src_uid": "9b4a8bc76d634935f6a1438e8a93a781", "apr_id": "d6c56e7460b47b2eedf80347d6dc207f", "difficulty": 800, "tags": ["bitmasks"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,i,j;\r\n\tscanf(\"%d\",&n);\r\n\tint a[n];\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\tscanf(\"%d\",n1);\r\n\tif(n1%2==0)\r\n\ta[i]=n1-1;else\r\n\ta[i]=n1-2;\t\r\n\t}\r\n\tfor(i=0;i<n;i++)\r\n\tprintf(\"%d\\n\",a[i]);\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,i,j,n1,j1;\r\n\tscanf(\"%d\",&n);\r\n\tint a[n];\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\tscanf(\"%d\",&n1);\r\n\tfor(j1=2;j1<=n1;j1*=2);\r\n\ta[i]=j1/2-1;\r\n\t}\r\n\tfor(i=0;i<n;i++)\r\n\tprintf(\"%d\\n\",a[i]);\r\n}"}
{"similarity_score": 0.9986541049798116, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9147de2ca6c3f55622a8d0eb15d4c693", "bug_code_uid": "5ac9ed2cc9e549585b754bfc14975a32", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "232fa3fddbbb52d3fc06c92211aaa243", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n    unsigned int d,arr[2000];\n    unsigned int n,i=0,flag=0,b;\n    scanf(\"%d %u\",&n,&d);\n    scanf(\"%u\",&arr[0]);\n    for ( i=1;i<n;i++ ) {\n        scanf(\"%u\",&arr[i]);\n        if (arr[i]<=arr[i-1]) {\n            b=0;\n            b=(arr[i-1]-arr[i])/d+1;\n            arr[i]+=d*b;\n            flag=b;\n        }\n    }\n    printf(\"%d\",flag);\n}", "fixed": "#include<stdio.h>\nint main() {\n    unsigned int d,arr[2000];\n    unsigned int n,i=0,flag=0,b;\n    scanf(\"%d %u\",&n,&d);\n    scanf(\"%u\",&arr[0]);\n    for ( i=1;i<n;i++ ) {\n        scanf(\"%u\",&arr[i]);\n        if (arr[i]<=arr[i-1]) {\n            b=0;\n            b=(arr[i-1]-arr[i])/d+1;\n            arr[i]+=d*b;\n            flag+=b;\n        }\n    }\n    printf(\"%d\",flag);\n}"}
{"similarity_score": 0.9980861244019139, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7a3a9c12495ca30a3bb1b0932296fa70", "bug_code_uid": "46793c038da58d5cf219f3b990b6bebc", "src_uid": "ff95cd4632b2ddf8bb54981634badcae", "apr_id": "63a5fb35cac192b71392f6c4f927b2f2", "difficulty": 1200, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint max(int a,int b)\r\n{\r\n    if(a>=b)return a;\r\n    else return b;\r\n}\r\nint main()\r\n{\r\n    int i,j,m,n,t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        scanf(\"%d\", &n);\r\n        char a[300005],b[300005];\r\n        int det=0,zero=0,one=0,breaker=0;\r\n        scanf(\"%s\", a);\r\n        scanf(\"%s\", b);\r\n        for(i=0;i<n;i++){\r\n            if(a[i]=='0')zero++;\r\n            else one++;\r\n            if(a[i]!=b[i]&&det==0)det=1;\r\n            else if(a[i]==b[i]&&det==0)det=2;\r\n            else if(a[i]!=b[i]&&det==2){\r\n                breaker=1;\r\n                break;\r\n            }\r\n            else if(a[i]==b[i]&&det==1){\r\n                breaker=1;\r\n                break;\r\n            }\r\n            printf(\"%d %d\\n\", one,zero);\r\n            if(one==zero){\r\n                zero=one=0;\r\n                det=0;\r\n            }\r\n\r\n        }\r\n        if(breaker==1||det==1)printf(\"NO\\n\");\r\n        else if(breaker==0||det==2)printf(\"YES\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint max(int a,int b)\r\n{\r\n    if(a>=b)return a;\r\n    else return b;\r\n}\r\nint main()\r\n{\r\n    int i,j,m,n,t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        scanf(\"%d\", &n);\r\n        char a[300005],b[300005];\r\n        int det=0,zero=0,one=0,breaker=0;\r\n        scanf(\"%s\", a);\r\n        scanf(\"%s\", b);\r\n        for(i=0;i<n;i++){\r\n            if(a[i]=='0')zero++;\r\n            else one++;\r\n            if(a[i]!=b[i]&&det==0)det=1;\r\n            else if(a[i]==b[i]&&det==0)det=2;\r\n            else if(a[i]!=b[i]&&det==2){\r\n                breaker=1;\r\n                break;\r\n            }\r\n            else if(a[i]==b[i]&&det==1){\r\n                breaker=1;\r\n                break;\r\n            }\r\n            //printf(\"%d %d\\n\", one,zero);\r\n            if(one==zero){\r\n                zero=one=0;\r\n                det=0;\r\n            }\r\n\r\n        }\r\n        if(breaker==1||det==1)printf(\"NO\\n\");\r\n        else if(breaker==0||det==2)printf(\"YES\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.39763313609467454, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "b807aff0875029a8b5432deb8cd6e79e", "bug_code_uid": "2240113c0f686864fc3392df70e82981", "src_uid": "eb7457fe1e1b571e5ee8dd9689c7d66a", "apr_id": "42844b7677861847f07149f79841c3a6", "difficulty": 1300, "tags": ["combinatorics", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint x[200222];\nint y[200222];\nint main()\n{\n    int n;\n    int count=0;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&x[i],&y[i]);\n    }\n    for(int i=0;i<n-1;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            if(x[i]==x[j]||y[i]==y[j])\n                continue;\n            if((x[j]-x[i])==(y[j]-y[i]))\n                count++;\n        }\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint a[2222];\nint b[2222];\nint main()\n{\n    int n,x,y;\n    int count=0;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        a[x+y]++;\n        b[x-y+1000]++;\n    }\n    for(int i=1;i<=2000;i++)\n    {\n        count+=(a[i]*(a[i]-1))/2;\n        count+=(b[i]*(b[i]-1))/2;\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.12441093308199812, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "e9a265d823c5afbab0d0be0720b82aa2", "bug_code_uid": "c16e8f4ae4d65ef9f2f02aa9214b04e7", "src_uid": "0ea79b2a7ddf3d4da9c7a348e61933a7", "apr_id": "9af54b410abfdbd3e4fbc78b36e6a20c", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n     int n;\n     scanf(\"%d\",&n);\n     int k[n],i;\n     for(i=1;i<=n;i++)\n     {\n          scanf(\"%d\",&k[i]);\n     }\n     int max;\n     int sum[n],m;\n     for(i=1;i<=n;i++)\n     {\n          int d[k[i]],max=0;\n     for(j=1;j<=k[i];j++)\n     {\n          scanf(\"%d\",d[j]);\n          max+=d[j];\n     }\n     sum[i]=max*5+15*k[i];\n     }\n     m=sum[1];\n     for(int y=1;y<=n;y++)\n     {\n          if(sum[y]<=m)\n          m=sum[y];\n     }\n     printf(\"%d\",m);\n}", "fixed": "#include <stdio.h>\n\nint main(void) {\n\t// calculate all cases\n\t// find min\n\tint n;\n\tscanf(\"%d\\n\", &n);\n\tint cash[100][102];\n\tint sum[100] = {0};\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d \", &cash[i][0]);\n\t}\n\tfor (int i = 0; i < n; i++ )\n\t{\n\t\tfor (int j = 1; j<= cash[i][0];j++)\n\t\t{\n\t\t\tscanf(\"%d \", &cash[i][j]);\n\t\t}\n\t}\n\tfor (int i = 0; i <n ; i++)\n\t{\n\t\tsum[i] += 15*cash[i][0];\n\t\tfor (int j = 1; j <= cash[i][0]; j++)\n\t\t{\n\t\t\tsum[i] += cash[i][j]*5;\n\t\t}\n\t}\n\tint min = sum[0];\n\tfor (int i = 0; i <n; i++)\n\t{\n\t\tif (sum[i] < min)\n\t\t{\n\t\t\tmin = sum[i];\n\t\t}\n\t}\n\tprintf(\"%d\", min);\n}"}
{"similarity_score": 0.8689320388349514, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "6d011e6af743062453843c2f44478a1a", "bug_code_uid": "35f00463ad0e20ae61cda90011d9bbfd", "src_uid": "6cc6db6f426bb1bce59f23bfcb762b08", "apr_id": "eceae0b2e260a0f989288eee338130d5", "difficulty": 1300, "tags": ["dp", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tchar s[1000001];\n\tscanf(\"%s\",s);\n\tint c=0;\n\tint temp=0;\n\tint i=0;\n\tint sum=0;\n\twhile(s[i+1]!='\\0')\n\t{\n\t\tif((s[i]=='v') && s[i+1]=='v')\n\t\t{\n\t\t\tc=c+1;\n\t\t}\n\t\ti=i+1;\n\t}\n\ti=0;\n\twhile(s[i+1]!='\\0')\n\t{\n\t\tif(s[i]=='o')\n\t\t{\n\t\t\tsum=sum+(temp*(c-temp));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(s[i+1]=='v')\n\t\t\t{\n\t\t\t\ttemp=temp+1;\n\t\t\t}\n\t\t}\n\t\ti=i+1;\n\t}\n\tprintf(\"%d\",sum);\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tchar s[1000001];\n\tscanf(\"%s\",s);\n\tlong long int c=0;\n\tlong long int temp=0;\n\tlong long int i=0;\n\tlong long int sum=0;\n\twhile(s[i+1]!='\\0')\n\t{\n\t\tif((s[i]=='v') && s[i+1]=='v')\n\t\t{\n\t\t\tc=c+1;\n\t\t}\n\t\ti=i+1;\n\t}\n\ti=0;\n\twhile(s[i+1]!='\\0')\n\t{\n\t\tif(s[i]=='o')\n\t\t{\n\t\t\tsum=sum+(temp*(c-temp));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(s[i+1]=='v')\n\t\t\t{\n\t\t\t\ttemp=temp+1;\n\t\t\t}\n\t\t}\n\t\ti=i+1;\n\t}\n\tprintf(\"%lld\",sum);\n}"}
{"similarity_score": 0.9976689976689976, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5e9f81e4a4bbbfe36b81fdbfc2080bad", "bug_code_uid": "009c38c635f03bb06692bed45be9ff9f", "src_uid": "fbde1e2ee02055592ff72fb04366812b", "apr_id": "25c6e8e25c972befe51ad5d1a27e44fe", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "include<stdio.h>\nint main()\n{\n    int n,k,count=0;\n    scanf(\"%d %d\",&n,&k);\n    int ara[n],f_ara[n];\n    int i,j=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n        if(ara[i]<5)\n        {\n            f_ara[j]=ara[i];\n            j++;\n        }\n    }\n    for(i=0;i<j;i++)\n    {\n        f_ara[i]+=k;\n        if(f_ara[i]<=5)\n        {\n            count++;\n        }\n    }\n    printf(\"%d\\n\",count/3);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,count=0;\n    scanf(\"%d %d\",&n,&k);\n    int ara[n],f_ara[n];\n    int i,j=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n        if(ara[i]<5)\n        {\n            f_ara[j]=ara[i];\n            j++;\n        }\n    }\n    for(i=0;i<j;i++)\n    {\n        f_ara[i]+=k;\n        if(f_ara[i]<=5)\n        {\n            count++;\n        }\n    }\n    printf(\"%d\\n\",count/3);\n    return 0;\n}"}
{"similarity_score": 0.6983471074380165, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "0ed8516dbe92e6169eebbc028eb6627d", "bug_code_uid": "577a829059bfef78a953fa8d7ba0bffe", "src_uid": "00b1e45e9395d23e850ce1a0751b8378", "apr_id": "baf98b258c02c52cbc8f58e9aafb41fc", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <math.h>\nint main()\n{\nint t;\nscanf(\"%d\",&t);\nwhile(t--){\n long long int n,k,i=0;\nscanf(\"%lli %lli\",&n,&k);\nwhile(n!=0){\nif(n%k==0){\nn=n/k;\ni=i+1;if(n==0)\n{printf(\"%lli\\n\",i);break;}}\nelse{\nn=n-1;\ni=i+1;if(n==0)\n{printf(\"%lli\\n\",i);break;}}\n\n}}}", "fixed": "#include<stdio.h>\nint main()\n{\nint t;\nscanf(\"%d\",&t);\nwhile(t--){\n long long int n,k,i=0,v;\nscanf(\"%lli %lli\",&n,&k);\nwhile(n!=0){\nif(n%k==0){\nn=n/k;\ni=i+1;}\nelse{v=n%k;\nn=n-(n%k);\ni=i+v;}}\nprintf(\"%lli\\n\",i);\n}}\n"}
{"similarity_score": 0.7212475633528265, "equal_cnt": 10, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "093a6ad835945932d8ff140cfda9d947", "bug_code_uid": "75576c09b9e6bb0a3d0de160211ee36d", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "ae818c7c570a3c4a4fe48b0080f7e649", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{   long long int k,acount=0,bcount=0;\n    char n[100001];\n    scanf(\"%lld\\n\",&k);\n    gets(n);\n    long long int len=strlen(n);\n    char ch='A';\n   for(k=0;k<len;k++)\n   {\n       if(ch==n[k])\n       {\n           acount++;\n       }\n       else\n       {\n          bcount++;\n       }\n   }\n   float result =acount/bcount;\n\n  if(result > 1)\n  {\n      printf(\"Anton\");\n  }\n  else if (result < 1)\n  {\n      printf(\"Danik\");\n  }\n  else\n  {\n      printf(\"Friendship\");\n  }\n  return 0;\n\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{   long long int k,acount=0,bcount=0;\n    char n[100000];\n    scanf(\"%lld %s\",&k,n);\n    long long int len=strlen(n);\n    char ch='A';\n   \n   for(k=0;k<len;k++)\n   {\n       if(ch==n[k])\n       {\n           acount++;\n       }\n       else\n       {\n          bcount++;\n       }\n   }\n\n  if(acount > bcount)\n  {\n      printf(\"Anton\");\n  }\n  else if (bcount > acount)\n  {\n      printf(\"Danik\");\n  }\n  else\n  {\n      printf(\"Friendship\");\n  }\n  return 0;\n\n}"}
{"similarity_score": 0.21405750798722045, "equal_cnt": 11, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "ae52056de7aded22a9692a0fc48ecb83", "bug_code_uid": "d743d839504880189ef2bb46c96d8ff7", "src_uid": "6d7364048428c70e0e9b76ab1eb8cc34", "apr_id": "2bad0a759587ad25b8742477142d5501", "difficulty": 1200, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint m,q,i,a[10000],j,l,r,k,sum=0,total=0;\n\tscanf(\"%d %d\",&m,&q);\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(j=1;j<=q;j++)\n\t{\n\tscanf(\"\\n%d %d\",&l,&r);\n\tsum=0;\n\tfor(k=l;k<=r;k++)\n\t{\t\t\n\t\tsum+=a[k];\n\t}\n\t\tif(sum>0)\n\t\t{\n\t\t\ttotal+=sum;\t\n\t\t}\t\n\t}\n\tprintf(\"%d\",total);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,m;\n\tint l,r,sum,ans=0;\n\tint i,j;\n\tint a[110];\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tfor(j=l,sum=0;j<=r;j++)\n\t\t{\n\t\t\tsum+=a[j];\n\t\t}\n\t\tif(sum>0)\n\t\t{\n\t\t\tans+=sum;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8066666666666666, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "4d526c8be323bdcd721a81cdc534a65a", "bug_code_uid": "8d0f67f7be4b6e149343247810c829ed", "src_uid": "8ad06ac90b258a8233e2a1cf51f68078", "apr_id": "b7b01d199b47b6e4d342852177d3f857", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n\tlong n;\n\tscanf(\"%ld\",&n);\n\tchar a[n];\n\tscanf(\"%s\",a);\n\tlong count=0;\n\tfor(long i=0;i<n-1;i=i+2)\n\t{\n\t\tif (a[i]==a[i+1])\n\t\t{\n\t\t\tcount++;\n\t\t\tif (a[i]='b')\n\t\t\t{\n\t\t\t\ta[i]=='a';\n\t\t\t}\n\t\t\telse\n\t\t\t{\t\n\t\t\t\ta[i]=='b';\t\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%ld\\n%s\\n\",count,a);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main(void){\n \n\tlong n;\n\tscanf(\"%ld\",&n);\n\tchar str[n];\n\tscanf(\"%s\",str);\n\tlong cnt=0;\n\tfor(long i=0;i<n-1;i+=2)\n\t{\n\t\tif(str[i]==str[i+1])\n\t\t{\n\t\t\tcnt++;\n\t\t\tif(str[i]=='b')\n\t\t\t{\n\t\t\t\tstr[i]='a';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr[i]='b';\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%ld\\n%s\\n\",cnt,str);\n \n\treturn 0;\n}"}
{"similarity_score": 0.8625429553264605, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a2bb1dded0dad109d730a89d692ce29d", "bug_code_uid": "a3c649b84421ee17075545099542dbfa", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "56a7f02fec441ad9cbdb98c13383dfde", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a,b,c,t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=1;i<=t;i++)\r\n    {\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n    \r\n        if(a==b+c&&b==a+c&&c==a+b)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a,b,c,t,i;\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n    \r\n        if((a==b+c)||(b==a+c)||(c==a+b))\r\n            printf(\"YES\\n\");\r\n        else\r\n        printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9904761904761905, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fc4395a8eccf809e2a4bd0297b6d7b47", "bug_code_uid": "367f839787cfa2b6fd01bfbf4b93fa0e", "src_uid": "ee8ca9b2c6104d1ff9ba1fc39e9df277", "apr_id": "044298af3d283a200b4a6b3352a77ef5", "difficulty": 1100, "tags": ["dp", "graphs"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n\tint cases;\r\n\tscanf(\"%d\",&cases);\r\n\tfor(int x = 0; x < cases; x++)\r\n\t{\r\n\t\tint length;\r\n\t\tscanf(\"%d\",&length);\r\n\t\tlong long int array[length];\r\n\t\tfor(int y = 0; y < length; y++)\r\n\t\t{\r\n\t\t\tscanf(\"%lld\",&array[y]);\r\n\t\t}\r\n\t\tlong long int highest = 0;\r\n\t\tlong long int score = 0;\r\n\t\tfor(int z = 0; z < length; z++)\r\n\t\t{\r\n\t\t\tfor(int c = z; c < length;)\r\n\t\t\t{\r\n\t\t\t\tscore = score + array[c];\r\n\t\t\t\tc = c + array[c];\r\n\t\t\t}\r\n\t\t\tif(score > highest)\r\n\t\t\t{\r\n\t\t\t\thighest = score;\r\n\t\t\t}\r\n\t\t\tif(length > 199999)\r\n\t\t\t{\r\n\t\t\t\tanswer = 1000000000;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tscore = 0;\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",highest);\r\n\t}\r\n\treturn 0;\r\n}\r\n\t\t\r\n\t\t\t\t \r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n\tint cases;\r\n\tscanf(\"%d\",&cases);\r\n\tfor(int x = 0; x < cases; x++)\r\n\t{\r\n\t\tint length;\r\n\t\tscanf(\"%d\",&length);\r\n\t\tlong long int array[length];\r\n\t\tfor(int y = 0; y < length; y++)\r\n\t\t{\r\n\t\t\tscanf(\"%lld\",&array[y]);\r\n\t\t}\r\n\t\tlong long int highest = 0;\r\n\t\tlong long int score = 0;\r\n\t\tfor(int z = 0; z < length; z++)\r\n\t\t{\r\n\t\t\tfor(int c = z; c < length;)\r\n\t\t\t{\r\n\t\t\t\tscore = score + array[c];\r\n\t\t\t\tc = c + array[c];\r\n\t\t\t}\r\n\t\t\tif(score > highest)\r\n\t\t\t{\r\n\t\t\t\thighest = score;\r\n\t\t\t}\r\n\t\t\tif(length > 199999)\r\n\t\t\t{\r\n\t\t\t\thighest = 1000000000;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tscore = 0;\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",highest);\r\n\t}\r\n\treturn 0;\r\n}\r\n\t\t\r\n\t\t\t\t \r\n"}
{"similarity_score": 0.980225988700565, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c1b34f9b01f847f8fabc3f055094b051", "bug_code_uid": "47c4ce7bae54ea89b888fb84c3b9a0ae", "src_uid": "c7d48d2c23ff33890a262447af5be660", "apr_id": "ba3ee3905ac10d1dd37e1b14105ad7a2", "difficulty": 1300, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define max 300008\nint main()\n{\n    char A[max];\n    scanf(\"%s\",A);\n    long long i,cnt = 0;\n    for(i=0;i<strlen(A);i++)\n    if(A[i] == '4' || A[i] == '8')\n    cnt++;\n    for(i=0;i<strlen(A) -1;i++)\n    if(((A[i]-'0')*10 + (A[i+1] -'0'))%4 == 0)\n    cnt = cnt + i+1;\n    printf(\"%I64d\\n\",cnt);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#define max 300008\nint main()\n{\n    char A[max];\n    scanf(\"%s\",A);\n    long long i,cnt = 0;\n    for(i=0;i<strlen(A);i++)\n    if(A[i] == '4' || A[i] == '8'|| A[i] == '0')\n    cnt++;\n    for(i=0;i<strlen(A) -1;i++)\n    if(((A[i]-'0')*10 + (A[i+1] -'0'))%4 == 0)\n    cnt = cnt + i+1;\n    printf(\"%I64d\\n\",cnt);\n    return 0;\n}"}
{"similarity_score": 0.9174311926605505, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fb53babfbce74e7802043845891a777e", "bug_code_uid": "164517d8498b2e388df4a3bcb891e2b5", "src_uid": "f4982de28aca7080342eb1d0ff87734c", "apr_id": "b30d8f763b6fc5fb4f1bd143056072cb", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    int h = 0, m = 0, t_min, remain, t;\n\n\n\n    for(t = 0; t < 5; t++) {\n        scanf(\"%d %d\", &h, &m);\n        t_min = (h * 60) + m;\n\n        remain = 1440 - t_min;\n\n        printf(\"%d\\n\", remain);\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n    int h = 0, m = 0, t_min, remain, t, input;\n\n\n    scanf(\"%d\", &input);\n    for(t = 0; t < input; t++) {\n        scanf(\"%d %d\", &h, &m);\n        t_min = (h * 60) + m;\n\n        remain = 1440 - t_min;\n\n        printf(\"%d\\n\", remain);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9977426636568849, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a6ea00a4e7b64975ef2a7246cd4fd74f", "bug_code_uid": "43ac7e00064ea153e1ad0ba3306a8a19", "src_uid": "41b3e726b8146dc733244ee8415383c0", "apr_id": "6ce95c415edb3df7e0ab352c8373bc31", "difficulty": 1500, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "// if we pick X that means that we get X*count[X] score and remove X-1 X+1\n// say we sorted element values to be a0 < a1 < ... < an\n// we may or take an (and remove a[n-1] with it) or not, hence score[n] = max(score[n-1], an*count[an] + score[n-2])\n\n#include <stdio.h>\n#define __STDC_FORMAT_MACROS\n#include <inttypes.h>\n\n#define MAX_AN 1000000\nstatic int _count[MAX_AN+1] = {}; static int64_t _score[MAX_AN+1] = {};\nstatic inline int64_t max(int64_t a, int64_t b) { return a > b ? a : b; }\n\nint main() {\n    int N; scanf(\"%d\\n\", &N); for(int i = 0 ; i < N ; ++i) { int ai; scanf(\"%d \", &ai); ++_count[ai]; }\n\n    _score[1] = _count[1]; int64_t max_score = _score[1];\n    for(int i = 2 ; i <= MAX_AN ; ++i) {\n        _score[i] = max(_score[i-1], _count[i]*i + _score[i-2]);\n        max_score = max(max_score, _score[i]);\n    }\n\n    printf(\"%\" PRId64 \"\\n\", max_score);\n    return 0;\n}\n\n", "fixed": "// if we pick X that means that we get X*count[X] score and remove X-1 X+1\n// say we sorted element values to be a0 < a1 < ... < an\n// we may or take an (and remove a[n-1] with it) or not, hence score[n] = max(score[n-1], an*count[an] + score[n-2])\n\n#include <stdio.h>\n#define __STDC_FORMAT_MACROS\n#include <inttypes.h>\n\n#define MAX_AN 1000000\nstatic int _count[MAX_AN+1] = {}; static int64_t _score[MAX_AN+1] = {};\nstatic inline int64_t max(int64_t a, int64_t b) { return a > b ? a : b; }\n\nint main() {\n    int N; scanf(\"%d\\n\", &N); for(int i = 0 ; i < N ; ++i) { int ai; scanf(\"%d \", &ai); ++_count[ai]; }\n\n    _score[1] = _count[1]; int64_t max_score = _score[1];\n    for(int64_t i = 2 ; i <= MAX_AN ; ++i) {\n        _score[i] = max(_score[i-1], _count[i]*i + _score[i-2]);\n        max_score = max(max_score, _score[i]);\n    }\n\n    printf(\"%\" PRId64 \"\\n\", max_score);\n    return 0;\n}\n\n"}
{"similarity_score": 0.8820882088208821, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "09d59bbe5de2d53c835ec3f0f04c6dd9", "bug_code_uid": "e2444d157fd699db1d7569b70a646939", "src_uid": "a6ee741df426fd2d06fdfda4ca369397", "apr_id": "d9825a4c5a4a319fbda291ada2d510dd", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,d;\n    int i,j;\n    int count=0,max = 0;\n    char a[5];\n    int flag = 0;\n    scanf(\"%d %d\",&n,&d);\n    for(i=0;i<d;i++)\n    {\n        scanf(\"%s\",a);\n        for(j=0;j<n;j++)\n        {\n            if (a[j]=='0')\n            {\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 1)\n        {\n            count++;\n            max = count;\n        }\n        else\n        {\n            if(max<count)\n                max = count;\n            count = 0;\n        }\n        flag = 0;\n    }\n    printf(\"%d\",max);\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,d;\n    int i,j;\n    char a[100];\n    int count=0,max = 0;\n    int flag = 0;\n    scanf(\"%d %d\",&n,&d);\n    for(i=0;i<d;i++)\n    {\n        scanf(\"%s\",a);\n        for(j=0;j<n;j++)\n        {\n            if (a[j]=='0')\n            {\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 1)\n            count++;\n        else\n            count = 0;\n        if(max<count)\n                max = count;\n        flag = 0;\n    }\n    printf(\"%d\",max);\n}\n"}
{"similarity_score": 0.9698189134808853, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8baccdc551abcd45cc326acc2c64ad30", "bug_code_uid": "a99ee4d497153ac532be33ca661a0a2a", "src_uid": "ac77e2e6c86b5528b401debe9f68fc8e", "apr_id": "47331fe30388b89ff61f2e52f6e3fe6c", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tlong int t;\n\tscanf(\"%ld\",&t);\n\twhile(t--)\n\t{\n\t\tchar a[1000];\n\t\tscanf(\"%s\",a);\n\t\tint l=strlen(a);\n\t\tint i,j;\n\tfor(i=0;i<l;i=i+2)\n\t{\n\t\tprintf(\"%c\",a[i]);\n\t\t\n\t}\n\tprintf(\"%c\",a[l-1]);\n\n\n}\n}\n\t\t\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tlong int t;\n\tscanf(\"%ld\",&t);\n\twhile(t--)\n\t{\n\t\tchar a[1000];\n\t\tscanf(\"%s\",a);\n\t\tint l=strlen(a);\n\t\tint i,j;\n\tfor(i=0;i<l;i=i+2)\n\t{\n\t\tprintf(\"%c\",a[i]);\n\t\t\n\t}\n\tprintf(\"%c\",a[l-1]);\n\tprintf(\"\\n\");\n\n\n}\n}\n\t\t\n\n"}
{"similarity_score": 0.9985185185185185, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d16f2a7fae20d1877d7ac4703487924d", "bug_code_uid": "9cbd03219f49762ac0de2f32997f983c", "src_uid": "7db0b870177e7d7b01da083e21ba35f5", "apr_id": "71f7ddfb83792638284a41050f8f275b", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\nint main()\n{\n\tint a, n;\n\t\tint tong=0;\n\tscanf(\"%d/n\", &n);\n\tif (n == 1)\n\t{\n\t\tscanf(%d\", &a);\n\t\tif (a == 1) printf(\"YES\");\n\t\telse printf(\"NO\");\n\t}\n\telse\n\t{\n\t\tfor (int i = 1; i <= n;i++)\n\t\t{\n\t\t\tscanf(\"%d\", &a);\n\t\t\ttong += a;\n\t\t}\n\t\tif (tong == n - 1) \n\t\tprintf(\"YES\");\n\t\telse printf(\"NO\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<conio.h>\nint main()\n{\n\tint a, n;\n\t\tint tong=0;\n\tscanf(\"%d/n\", &n);\n\tif (n == 1)\n\t{\n\t\tscanf(\"%d\", &a);\n\t\tif (a == 1) printf(\"YES\");\n\t\telse printf(\"NO\");\n\t}\n\telse\n\t{\n\t\tfor (int i = 1; i <= n;i++)\n\t\t{\n\t\t\tscanf(\"%d\", &a);\n\t\t\ttong += a;\n\t\t}\n\t\tif (tong == n - 1) \n\t\tprintf(\"YES\");\n\t\telse printf(\"NO\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9897142857142858, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "19345d72ad5bba21701c79cc67af906a", "bug_code_uid": "f7b9c483608fd0b8cee65f71396ec172", "src_uid": "7c2a61de728e6767b25e58c74497bbae", "apr_id": "183a537d7493cb881ae0f73befd6511d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define ll long long\n#define in(x) scanf(\"%d\",&x)\n#define inll(x) scanf(\"%lld\",&x) \n#define out(x) printf(\"%lld\",(ll)x)\n#define outn(x) printf(\"%lld\\n\",(ll)x)\n#define outr(x) printf(\"%lld \",(ll)x)\nint n,m,ans,x;\nint main(){\n\tint tester;\n\tin(tester);\n\tfor(int testest=1;testest<=tester;testest++){\n\t\tin(n);in(m);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tin(x);\n\t\t\tans+=x;\n\t\t}\n\t\tif(ans<m)outn(ans);\n\t\telse outn(m);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#define ll long long\n#define in(x) scanf(\"%d\",&x)\n#define inll(x) scanf(\"%lld\",&x) \n#define out(x) printf(\"%lld\",(ll)x)\n#define outn(x) printf(\"%lld\\n\",(ll)x)\n#define outr(x) printf(\"%lld \",(ll)x)\nint n,m,ans,x;\nint main(){\n\tint tester;\n\tin(tester);\n\tfor(int testest=1;testest<=tester;testest++){\n\t\tin(n);in(m);\n\t\tans=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tin(x);\n\t\t\tans+=x;\n\t\t}\n\t\tif(ans<m)outn(ans);\n\t\telse outn(m);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9306930693069307, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "38ca05f1686a2ecfaa7a0ddb2c505b76", "bug_code_uid": "a06cf6f32a29eb63e31bbdc275f92c9b", "src_uid": "ecd9bbc05b97f3cd43017dd0eddd014d", "apr_id": "beb62505f346a4401640634b91b8787d", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tint n,i,*a,max=-1,min=100001,p,q;\n\tscanf(\"%d\",&n);\n\tint *ara,**b;\n\tara=(int *)malloc(1000005*sizeof(int));\n\tb=(int **)malloc(1000005*sizeof(int *));\n\ta=(int *)malloc(n*sizeof(int));\n\tfor(i=0;i<1000005;i++){\n\t    b[i]=(int *)malloc(2*sizeof(int));\n\t}\n\tfor(i=0;i<1000005;i++)ara[i]=0;\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tara[a[i]]++;\n\t\tif(ara[a[i]]==1)b[a[i]][0]=i+1;\n\t\telse b[a[i]][1]=i+1;\n\t\tif(ara[a[i]]>max)max=ara[a[i]];\n\t}\n\tfor(i=0;i<n;i++){\n\t\tif(ara[a[i]]==max){\n\t\t\tif(b[a[i]][1]-b[a[i]][0]<min){\n\t\t\t\tmin=b[a[i]][1]-b[a[i]][0];\n\t\t\t\tp=b[a[i]][0];q=b[a[i]][1];\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d %d\",p,q);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tint n,i,*a,max=-1,min=100001,p,q;\n\tscanf(\"%d\",&n);\n\tint *ara,**b;\n\tara=(int *)malloc(1000005*sizeof(int));\n\tb=(int **)malloc(1000005*sizeof(int *));\n\ta=(int *)malloc(n*sizeof(int));\n\tfor(i=0;i<1000005;i++){\n\t    b[i]=(int *)malloc(2*sizeof(int));\n\t}\n\tfor(i=0;i<1000005;i++){\n        ara[i]=0;b[i][1]=1;\n\t}\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tara[a[i]]++;\n\t\tif(ara[a[i]]==1)b[a[i]][0]=i+1;\n\t\telse b[a[i]][1]=i+1;\n\t\tif(ara[a[i]]>max)max=ara[a[i]];\n\t}\n\tif(max==1){\n        printf(\"1 1\");\n        return 0;\n\t}\n\tfor(i=0;i<n;i++){\n\t\tif(ara[a[i]]==max){\n\t\t\tif(b[a[i]][1]-b[a[i]][0]<min){\n\t\t\t\tmin=b[a[i]][1]-b[a[i]][0];\n\t\t\t\tp=b[a[i]][0];q=b[a[i]][1];\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d %d\",p,q);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9016697588126159, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0d0b59dc8f6876151b8674ff855aebdb", "bug_code_uid": "40dc9fc7d23b2f0166e3fa5a92eee620", "src_uid": "71bc7c4eb577441f2563e40d95306752", "apr_id": "06ab00e7ec5bc9a37d48355a01f3a0db", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int i,j,n,arr[10000],t;\n    scanf(\"%ld\",&n);\n    for(i=0;i<2*n;i++)\n    scanf(\"%ld\",&arr[i]);\n    for(i=0;i<2*n;i+=2)\n    for(j=i;j<2*n;j+=2)\n    if(arr[i]>arr[j])\n    {\n        t=arr[i];\n        arr[i]=arr[j];\n        arr[j]=t;\n        t=arr[i+1];\n        arr[i+1]=arr[j+1];\n        arr[j+1]=t;\n    }\n    t=0;\n    for(i=0;i<2*n;i+=2)\n    {if(arr[i+1]<=arr[i]&&t<=arr[i+1])\n    t=arr[i+1];\n    else t=arr[i];}\n    printf(\"%ld\",t);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long int i,j,n,arr[10000],t;\n    scanf(\"%ld\",&n);\n    for(i=0;i<2*n;i++)\n    scanf(\"%ld\",&arr[i]);\n    for(i=0;i<2*n;i+=2)\n    for(j=i;j<2*n;j+=2)\n    {if(arr[i]>arr[j])\n    {\n        t=arr[i];\n        arr[i]=arr[j];\n        arr[j]=t;\n        t=arr[i+1];\n        arr[i+1]=arr[j+1];\n        arr[j+1]=t;\n    }\n    if(arr[i]==arr[j]&&arr[i+1]>arr[j+1])\n    {t=arr[i+1];\n    arr[i+1]=arr[j+1];\n    arr[j+1]=t;}\n    }\n    t=0;\n    for(i=0;i<2*n;i+=2)\n    {if(arr[i+1]<=arr[i]&&t<=arr[i+1])\n    t=arr[i+1];\n    else t=arr[i];}\n    printf(\"%ld\",t);\n    return 0;\n}"}
{"similarity_score": 0.999490575649516, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3769c2004873dbdbfd03e8f23746cfcd", "bug_code_uid": "c646e7c14933caf517790f14394f76ce", "src_uid": "b4ac594755951e84001dfd610d420eb5", "apr_id": "5ffad617a7400ae06c275ff39cc6ee3d", "difficulty": 1800, "tags": ["greedy", "probabilities", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n//n = num , a = prob , x = temp ,  u = p  , t = temp2 , high = max, sum = tot\n\nint main()\n\n{\n    int num,i,j,k,p;\n\n    double prob[110],temp,tot,high,temp2;\n\n//  while(~scanf(\"%d\",&n))\n// {\n    scanf(\"%d\",&num);\n\n    i=0;\n    while(i<num)\n    {\n        scanf(\"%lf\",&prob[i]);\n        i++ ;\n    }\n    i = 0 ;\n    while(i < num)\n\n    {\n        p = i + 1 ;\n        while(p<num)\n        {\n            if(prob[p]>prob[i])\n            {\n                temp2=prob[p];\n                prob[p]=prob[i];\n                prob[i]=temp2;\n            }\n\n            p++ ;\n\n        }\n\n        i++;\n    }\n\n    high=0;\n    i = 1 ;\n    while(i<=num)\n    {\n        tot=0;\n        for(j=0; j<i; j++)\n        {\n            temp=prob[j];\n\n            for(k=0; k<i; k++)\n            {\n                if(j!=k)\n                    temp*=1-prob[k];\n            }\n\n            tot+=temp;\n        }\n        if(tot>high) high=tot;\n        i++;\n    }\n\n    printf(\"%.12lf\\n\",high);\n\n//  }\n\n}\n", "fixed": "#include<stdio.h>\n\n//n = num , a = prob , x = temp ,  u = p  , t = temp2 , high = max, sum = tot\n\nint main()\n\n{\n    int num,i,j,k,p;\n\n    double prob[110],temp,tot,high,temp2;\n\n//  while(~scanf(\"%d\",&n))\n// {\n    scanf(\"%d\",&num);\n\n    i=0;\n    while(i<num)\n    {\n        scanf(\"%lf\",&prob[i]);\n        i++ ;\n    }\n    i = 0 ;\n    while(i < num)\n\n    {\n        p = i + 1 ;\n        while(p<num)\n        {\n            if(prob[p]>prob[i])\n            {\n                temp2=prob[p];\n                prob[p]=prob[i];\n                prob[i]=temp2;\n            }\n\n            p++ ;\n\n        }\n\n        i++;\n    }\n\n    high=0;\n    i = 1 ;\n    while(i<=num)\n    {\n        tot=0;\n        for(j=0; j<i; j++)\n        {\n            temp=prob[j];\n\n            for(k=0; k<i; k++)\n            {\n                if(j!=k)\n                    temp*=1-prob[k];\n            }\n\n            tot+=temp;\n        }\n        if(tot>high) high=tot;\n        i++;\n    }\n\n    printf(\"%.12f\\n\",high);\n\n//  }\n\n}\n"}
{"similarity_score": 0.39824561403508774, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 6, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "144173cefb759ebf7c48d3fff5cfe8fd", "bug_code_uid": "85ee4b164bb2f33764231fe956af5418", "src_uid": "b978ca6fdef4a02cc027485294caa0f5", "apr_id": "b7a47fc252db2c0bfa594cda1e3adcae", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n\n{\n    long long int t,n,i,j,k,min,c=0;\n\n    scanf(\"%lld\",&t);\n\n    while(t--)\n    {\n        scanf(\"%lld\",&n);\n\n        long long int y[100000]={},x[n];\n\n\n\n        for(i=0;i<n;i++)\n            scanf(\"%lld\",&x[i]);\n\n        min=x[0];\n\n        for(i=0;i<n;i++)\n        {\n            if(x[i]<min) min=x[i];\n\n        }\n\n        for(i=0;i<n;i++)\n        {\n            if(!y[x[i]-min]) {y[x[i]-min]=1; c++;}\n        }\n\nprintf(\"%d\\n\",c);\n}\n\n}\n\n", "fixed": "#include<stdio.h>\n\nvoid merge(int x[],int l,int m, int h)\n{  int i=l, j=m+1, k=l, y[h+1];\n    while(i<=m&&j<=h)\n    { if(x[i]<=x[j]) y[k++]=x[i++]; else y[k++]=x[j++];}\n    while(j<=h) y[k++]=x[j++]; while(i<=m) y[k++]=x[i++];\n    for(i=l;i<=h;i++)  x[i]=y[i]; }\n\nvoid sort(int x[],int l,int h)\n{    if(l<h) { int m=(l+h)/2;\n   sort(x,l,m);  sort(x,m+1,h);  merge(x,l,m,h);} }\n\nint main()\n\n{\n    int t,n,i,j,k,min;\n\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n\n        int x[n],s=n;\n\n        for(i=0;i<n;i++)\n            scanf(\"%d\",&x[i]);\n\n        sort(x,0,n-1);\n\n        for(i=0;i<n-1;i++)\n            if(x[i]==x[i+1]) s--;\n\nprintf(\"%d\\n\",s);\n}\n\n}\n\n"}
{"similarity_score": 0.9980456026058632, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "93e2fed33d130a7c953118ba0dc589c4", "bug_code_uid": "bdcaf54126da813ef5df00ca84131c95", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "16b354959099ed145144bb368cc65dc0", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n  int n,b,i,k,sum5,sum0;\n  int a[10000];\n  long long sum;\n   while(scanf(\"%d\",&n)!=EOF)\n   {  sum0=sum5=0;\n       sum=0;\n     for(i=0;i<n;i++)\n     {\n       scanf(\"%d\",&a[i]);\n     }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==0)\n        sum0++;\n        if(a[i]==5)\n        sum5++;\n    }\n   if(sum5<9&&sum0==0)\n   {\n       printf(\"-1\\n\");\n       break;\n   }\n   if(sum5<9&&sum0!=0)\n   {\n       printf(\"0\\n\");\n       break;\n   }\n      if(sum5>=9&&sum0==0)\n      {\n          printf(\"0\\n\");\n          break;\n      }\n  if(sum5>=9&&sum0!=0)\n   {\n     k=sum5/9;\n     for(i=0;i<9*k;i++)\n     {\n       printf(\"5\");\n     }\n     for(i=0;i<sum0;i++)\n     {\n       printf(\"0\");\n     }\n     printf(\"\\n\");\n   }\n   }\n   return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n  int n,b,i,k,sum5,sum0;\n  int a[10000];\n  long long sum;\n   while(scanf(\"%d\",&n)!=EOF)\n   {  sum0=sum5=0;\n       sum=0;\n     for(i=0;i<n;i++)\n     {\n       scanf(\"%d\",&a[i]);\n     }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==0)\n        sum0++;\n        if(a[i]==5)\n        sum5++;\n    }\n   if(sum5<9&&sum0==0)\n   {\n       printf(\"-1\\n\");\n       break;\n   }\n   if(sum5<9&&sum0!=0)\n   {\n       printf(\"0\\n\");\n       break;\n   }\n      if(sum5>=9&&sum0==0)\n      {\n          printf(\"-1\\n\");\n          break;\n      }\n  if(sum5>=9&&sum0!=0)\n   {\n     k=sum5/9;\n     for(i=0;i<9*k;i++)\n     {\n       printf(\"5\");\n     }\n     for(i=0;i<sum0;i++)\n     {\n       printf(\"0\");\n     }\n     printf(\"\\n\");\n   }\n   }\n   return 0;\n}\n\n"}
{"similarity_score": 0.2916666666666667, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "a0b6a3e6f83e9ce1fc5158ab3dc4f17b", "bug_code_uid": "662d44c0664b56db6437bf0f17312595", "src_uid": "e0de8a6441614d1e41a53223b5fa576b", "apr_id": "e47496a283c586bde8eb775a9019be0e", "difficulty": 1000, "tags": ["brute force", "constructive algorithms", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint a[15100];\n\nint main() {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint i;\n\t\tint c0=0,c1=0,c2=0;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tif(a[i]%3==0)\n\t\t\tc0++;\n\t\t\telse if(a[i]%3==1)\n\t\t\tc1++;\n\t\t\telse if(a[i]%3==2)\n\t\t\tc2++;\n\t\t}\n\t\tint sum=0;\n\t\twhile(c0!=c1||c0!=c2||c1!=c2)\n\t\t{\n\t\t\tsum+=1;\n\t\t\tif(c0>=c1&&c0>=c2)\n\t\t\t{\n\t\t\t\tc0--;\n\t\t\t\tc1++;\n\t\t\t}\n\t\t\telse if(c1>=c0&&c1>=c2)\n\t\t\t{\n\t\t\t\tc1--;\n\t\t\t\tc2++;\n\t\t\t}\n\t\t\telse if(c2>=c0&&c2>=c1)\n\t\t\t{\n\t\t\t\tc2--;\n\t\t\t\tc0++;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\n\t\t}\n\t\t\n\t\tprintf(\"%d\\n\",sum);\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\treturn 0;\n}\n   \t  \t  \t\t\t   \t\t  \t\t   \t\t\t \t\t\t", "fixed": "#include<stdio.h>\n\nint main(){\n \tint n,m,a,c0,c1,c2,t,cnt=0;\n \tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tscanf(\"%d\",&m);\n\t\tc0=0,c1=0,c2=0,cnt=0;\n\t\twhile(m--){\n\t\t\tscanf(\"%d\",&a);\n\t\t\tif(a%3==0){\n\t\t\t\tc0++;\n\t\t\t}\n\t\t\telse if(a%3==1){\n\t\t\t\tc1++;\n\t\t\t}\n\t\t\telse if(a%3==2){\n\t\t\t\tc2++;\n\t\t\t}\n\t\t}\n\t\twhile(c0!=c1||c0!=c2||c1!=c2){\n\t\t\tif(c0>=c1&&c0>=c2){\n\t\t\t\tc0--,c1++;\n\t\t\t}\n\t\t\telse if(c1>=c0&&c1>=c2){\n\t\t\t\tc1--,c2++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tc2--,c0++;\n\t\t\t}\n\t\t\tcnt++;\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",cnt);\t\n\t}  \t\n \treturn 0;\n} \n\n\n\n\n\n\n\t\t\t\t \t\t\t \t\t   \t\t \t\t   \t\t   \t \t\t"}
{"similarity_score": 0.6873239436619718, "equal_cnt": 14, "replace_cnt": 3, "delete_cnt": 5, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "d4e21bb7d0e01062891b765f410812c9", "bug_code_uid": "bd060e6b57c23c9d2cf78a42933671db", "src_uid": "d00696cb27c679dda6e2e29314a8432b", "apr_id": "30147556d799016e88452ebd9beb94a1", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tlong long int n;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&n);\n\t\tif(n%2==0)\n\t\tprintf(\"%d \",n-1);\n\t\telse \n\t\tprintf(\"%d \",n);\n\t}\n\t\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n\tint i,n,a[1000];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]%2==0)a[i]--;\n\t}\n\tfor(i=0;i<n;i++)printf(\"%d \",a[i]);\n}"}
{"similarity_score": 0.25054945054945055, "equal_cnt": 14, "replace_cnt": 3, "delete_cnt": 8, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "61f5f65662a83468adb966812e500c54", "bug_code_uid": "2e239c2fd6d32e02d3fb520ffcd098c2", "src_uid": "29e84addbc88186bce40d68cf124f5da", "apr_id": "f4a754f1617911f1dfa13d18b080de16", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint x,a,b;\n\n scanf(\"%d\",&x);\n scanf(\"%d %d\",&a,&b);\n\nfor(int j=1;j<=x;j++){\n for(int i=1;i<=10000;i++)\n{\n if(a!=b){\n\n    if((i%2)==0){\n        b=b+i;\n    }\n    else{\n        a=a+i;\n    }\n    \n    if(a==b){\n       printf(\"%d\",i);\n       break;\n    }\n\n    }\n else {\n     printf(\"0\");\n     break;\n      }\n}\n}\n    return 0;\n}", "fixed": "i;main(a,b){for(scanf(\"%*d\");~scanf(\"%d%d\",&a,&b);i=0){for(a=abs(a-b);a>0|a&1;a-=++i);printf(\"%d \",i);}}"}
{"similarity_score": 0.4616998950682057, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "51cb0d5583377f3fbd803a923822d2d6", "bug_code_uid": "2a94e062996bb68cd7e5bcfaeefca36f", "src_uid": "ea3ce069895b6fc0f354f0118c7c9fff", "apr_id": "4acb9fc86c5d644ed2d348fd39c92303", "difficulty": 1300, "tags": ["data structures", "two pointers", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define N 200000\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tstatic int pp[N];\n\t\tint n, i, m, k;\n\n\t\tscanf(\"%d\", &n);\n\t\tfor (i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &pp[i]);\n\t\tprintf(\"1\");\n\t\tfor (m = 2; m < n; m++) {\n\t\t\tk = 0;\n\t\t\tfor (i = 0; i < n; i++)\n\t\t\t\tif ((i == 0 || pp[i - 1] > m) && pp[i] <= m && ++k == 2) {\n\t\t\t\t\tprintf(\"0\");\n\t\t\t\t\tgoto done;\n\t\t\t\t}\n\t\t\tprintf(\"1\");\ndone:\n\t\t\t;\n\t\t}\n\t\tprintf(\"1\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "/* Coached by rainboy and Dukkha */\n#include <stdio.h>\n\n#define N 200000\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tstatic int ii[N];\n\t\tstatic char s[N + 1];\n\t\tint n, i, p, l, r;\n\n\t\tscanf(\"%d\", &n);\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tscanf(\"%d\", &p), p--;\n\t\t\tii[p] = i;\n\t\t}\n\t\tl = n, r = -1;\n\t\tfor (p = 0; p < n; p++) {\n\t\t\ti = ii[p];\n\t\t\tif (l > i)\n\t\t\t\tl = i;\n\t\t\tif (r < i)\n\t\t\t\tr = i;\n\t\t\ts[p] = (r - l + 1 == p + 1) + '0';\n\t\t}\n\t\ts[n] = 0;\n\t\tprintf(\"%s\\n\", s);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.965352449223417, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "b500a35c9f237eed039bc85eb693c877", "bug_code_uid": "ec4b02503eda13a90582908d8562f388", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "6b4a35ebc666ae5745fcf83e663e8425", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int t,i,c,k;\n   int a[200];\n   scanf(\"%d\",&t);\n   for(c=0;c<t;c++)\n   {\n       scanf(\"%d\",&a[c]);\n   }\n\n   for(c=0;c<t;c++)\n   {\n       for(i=3;i<=370;i++)\n        {k=((i-2)*180)/i;\n       if(k==a[c])\n       {\n           printf(\"YES\\n\");\n           break;\n       }}\n       if(k!=a[c])\n       {\n           printf(\"NO\\n\");\n       }\n   }\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int t,i,c;\n   float k;\n   float a[200];\n   scanf(\"%d\",&t);\n   for(c=0;c<t;c++)\n   {\n       scanf(\"%f\",&a[c]);\n   }\n\n   for(c=0;c<t;c++)\n   {\n       for(i=3;i<=360;i++)\n        {k=((i-2)*180)/(float)i;\n       if(k==a[c])\n       {\n           printf(\"YES\\n\");\n           break;\n       }}\n       if(k!=a[c])\n       {\n           printf(\"NO\\n\");\n       }\n   }\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.998805256869773, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "cbf6560ad8566d7ba22c24c49763278b", "bug_code_uid": "fa028d618093f8570aacb7b9df3cefc4", "src_uid": "37cf6edce77238db53d9658bc92b2cab", "apr_id": "58f5d771bc8532d11eda73ff3227661e", "difficulty": 1400, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint gcd(int a,int b)\n{\n    if(a==0)return b;\n    while(b!=0)\n    {\n        if(a>b)a-=b;\n        else b-=a;\n    }\n    return a;\n}\nint main()\n{\nint n,m,i,c[200],d[200],e;\nscanf(\"%d %d\",&n,&m);\nfor(i=0;i<n+1;i++)scanf(\"%d\",&c[i]);\nfor(i=0;i<m+1;i++)scanf(\"%d\",&d[i]);\nif(n>m)\n{\nif((c[0]>0&&d[0]>0)||(c[0]<0&&d[0]<0))printf(\"Infinity\\n\");\nelse printf(\"-Infinity\\n\");\n}\nelse if(m>n) printf(\"0/1\\n\");\nelse\n{   /*for(i=2;i<=c[0]&&i<=d[0];i++)\n    {\n        if(c[0]%i==0&&d[0]%i==0)\n        {\n            c[0]/=i;\n            d[0]/=i;\n            i--;\n        }\n    }*/\n    e=gcd(abs(c[0]),abs(d[0]));\n    printf(\"%d\\n\",e);\n    c[0]/=e;\n    d[0]/=e;\n    if(d[0]>0)printf(\"%d/%d\\n\",c[0],d[0]);\n    else if(c[0]<0&&d[0]<0)printf(\"%d/%d\\n\",-1*c[0],-1*d[0]);\nelse printf(\"%d/%d\\n\",-1*c[0],-1*d[0]);\n\n}\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint gcd(int a,int b)\n{\n    if(a==0)return b;\n    while(b!=0)\n    {\n        if(a>b)a-=b;\n        else b-=a;\n    }\n    return a;\n}\nint main()\n{\nint n,m,i,c[200],d[200],e;\nscanf(\"%d %d\",&n,&m);\nfor(i=0;i<n+1;i++)scanf(\"%d\",&c[i]);\nfor(i=0;i<m+1;i++)scanf(\"%d\",&d[i]);\nif(n>m)\n{\nif((c[0]>0&&d[0]>0)||(c[0]<0&&d[0]<0))printf(\"Infinity\\n\");\nelse printf(\"-Infinity\\n\");\n}\nelse if(m>n) printf(\"0/1\\n\");\nelse\n{   /*for(i=2;i<=c[0]&&i<=d[0];i++)\n    {\n        if(c[0]%i==0&&d[0]%i==0)\n        {\n            c[0]/=i;\n            d[0]/=i;\n            i--;\n        }\n    }*/\n    e=gcd(abs(c[0]),abs(d[0]));\n    //printf(\"%d\\n\",e);\n    c[0]/=e;\n    d[0]/=e;\n    if(d[0]>0)printf(\"%d/%d\\n\",c[0],d[0]);\n    else if(c[0]<0&&d[0]<0)printf(\"%d/%d\\n\",-1*c[0],-1*d[0]);\nelse printf(\"%d/%d\\n\",-1*c[0],-1*d[0]);\n\n}\nreturn 0;\n}"}
{"similarity_score": 0.2845691382765531, "equal_cnt": 18, "replace_cnt": 13, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "91ab4ccdbfa2749b82300bb1cc48f5f6", "bug_code_uid": "b4f959b66169426f61a639deb9eefd4a", "src_uid": "f3d34922baf84c534e78e283dcadc742", "apr_id": "7f5c38a06d93ab3493fbf3d6bde0930e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint t,n;\nint a[250];\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tscanf(\"%d\",&a[i]);\n\t\tint y=0,x=0,t=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(a[i]==0&&t==0)\n\t\t\t{\n\t\t\t\tx=i;\n\t\t\t\tt=1;\n\t\t\t}\n\t\t\tif(a[i]==0)\n\t\t\t\ty=i;\n\t\t\t}\t\n\t\t\tif(x==y&&x!=0)\n\t\t\t\tprintf(\"2\\n\");\n\t\t\telse if(t==0)\n\t\t\t\tprintf(\"0\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"%d\\n\",y+1-(x-1));\n\t}\n\treturn 0;\n} 1 0 0 0 1\n \t\t   \t \t\t\t\t  \t  \t \t\t\t    \t\t\t", "fixed": "#include <stdio.h>\nint main()\n{\n\tint t;\n\tint n;\n\tint a[110];\n\tint sum = 0;\n\tint coin = 0;\n\tint temp = 0;\n\t\n\n\tscanf(\"%d\", &t);\n\tfor (int i = 0;i < t;i++)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tsum = 0;\n\t\tcoin = 0;\n\t\ttemp = 0;\n\t\tfor (int j = 0;j < n;j++)\n\t\t{\n\t\t\tscanf(\"%d\", &a[j]);\n\t\t\tif (a[j] == 0)\n\t\t\t\tcoin++;\n\t\t}\n\t\tfor (int j = 0;j < n;j++)\n\t\t{\n\t\t\tif (a[j] == 0)\n\t\t\t{\n\t\t\t\tif (temp == 0)\n\t\t\t\t{\n\t\t\t\t\tsum += j - 1;\n\t\t\t\t}\n\t\t\t\ttemp++;\n\t\t\t\tif (temp == coin)\n\t\t\t\t{\n\t\t\t\t\tsum = (j + 1 - sum);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", sum);\n\t}\n\n\n\treturn 0;\n}\n \t \t\t \t\t  \t  \t\t\t  \t\t\t\t\t\t\t\t   \t\t"}
{"similarity_score": 0.9968119022316685, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "65e888f34e8eede4dba5ee9b7467ba72", "bug_code_uid": "2ace2863fa13066c4b19bde8d40deefb", "src_uid": "ff0843cbd7c3a07c7d7d0be46b03a700", "apr_id": "d835423cb14cf90bb6b1078ca61edb55", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,min=1000000,flag=1;\n\tscanf(\"%d\",&n);\n\tchar ARR[n];\n\tint POS[n],TIME[n-1];\n\tscanf(\"%s\",ARR);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&POS[i]);\n\t\tif(i<n-1)\n\t\tTIME[i]=-1;\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tif(ARR[i]=='R' && ARR[i+1]=='L')\n\t\t{\n\t\t\tTIME[i]=(POS[i+1]-POS[i])/2;\n\t\t}\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tif(TIME[i]!=-1)\n\t\t{\n\t\t\tflag=0;\n\t\t\tif(TIME[i]<min)\n\t\t\tmin=TIME[i];\n\t\t}\n\t}\n\tif(flag==1)\n\tprintf(\"-1\");\n\telse\n\tprintf(\"%d\",min);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,min=1000000000,flag=1;\n\tscanf(\"%d\",&n);\n\tchar ARR[n];\n\tint POS[n],TIME[n-1];\n\tscanf(\"%s\",ARR);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&POS[i]);\n\t\tif(i<n-1)\n\t\tTIME[i]=-1;\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tif(ARR[i]=='R' && ARR[i+1]=='L')\n\t\t{\n\t\t\tTIME[i]=(POS[i+1]-POS[i])/2;\n\t\t}\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tif(TIME[i]!=-1)\n\t\t{\n\t\t\tflag=0;\n\t\t\tif(TIME[i]<min)\n\t\t\tmin=TIME[i];\n\t\t}\n\t}\n\tif(flag==1)\n\tprintf(\"-1\");\n\telse\n\tprintf(\"%d\",min);\n\treturn 0;\n}"}
{"similarity_score": 0.9722955145118733, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "381003d127e70e078b3ba415beb84cfe", "bug_code_uid": "990d845a8972c77f659a393283b52d11", "src_uid": "3a767b3040f44e3e2148cdafcb14a241", "apr_id": "3b45e332c84a52e8df50b7ec34823139", "difficulty": 1100, "tags": ["games", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n;\n    int start=1;\n    int a[100005];\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n\n    for(int i=0;i<n;i++)\n    {\n        if(a[i]==1)\n           {\n               if(start==1)\n               {\n            printf(\"2 \");\n            start=1;\n            else \n            {printf(\"1 \");\n            start=2;\n            }\n            continue;\n           }\n       if(a[i]%2==0)\n        {if(start==1)\n           {printf(\"1 \");\n           start=2;}\n           else {printf(\"2 \");\n           start=1;}\n        }\n\n       else\n       {if(start==1)\n        printf(\"2 \");\n        else printf(\"1 \");\n        start=1;\n       }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n;\n    int start=1;\n    int a[100005];\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n\n    for(int i=0;i<n;i++)\n    {\n        if(a[i]==1)\n           {\n               if(start==1)\n               {\n            printf(\"2 \");\n            start=1;\n               }\n            else \n            {printf(\"1 \");\n            start=2;\n            }\n            continue;\n           }\n       if(a[i]%2==0)\n        {if(start==1)\n           {printf(\"1 \");\n           start=2;}\n           else {printf(\"2 \");\n           start=1;}\n        }\n\n       else\n       {if(start==1)\n        {printf(\"2 \");\n        start=1;}\n        else {printf(\"1 \");\n        start=2;}\n       }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.0535966149506347, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "56e907c561072e72d1ccc77ba847785a", "bug_code_uid": "02c49495f966cffb32c3656e8adf0735", "src_uid": "a704760d5ccd09d08558ea98d6007835", "apr_id": "37dcb0d6d610fdc5a263dc1b4a717b42", "difficulty": 1500, "tags": ["graphs"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "int main() {return 1234;}", "fixed": "#include <stdio.h>\n#include <string.h>\nint t[100001], prev[100001], deg[100001], a[100001];\n\nint walk(int x) {\n\tif (prev[x] == 0 || deg[prev[x]] != 1)\n\t\treturn 1;\n\telse\n\t\treturn 1 + walk(prev[x]); \n}\n\nint main()\n{\n\tint i, n, d, x, ans;\n\tscanf(\"%d\", &n);\n\tfor (i = 1; i <= n; ++i)\n\t\tscanf(\"%d\", &t[i]);\n\tfor (i = 1; i <= n; ++i) {\n\t\tscanf(\"%d\", &prev[i]);\n\t\t++deg[prev[i]];\n\t}\n\tans = x = 0;\n\tfor (i = 1; i <= n; ++i) {\n\t\tif (t[i]) {\n\t\t\td = walk(i);\n\t\t\tif (d > ans) {\n\t\t\t\tans = d;\n\t\t\t\tx = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor (i = ans - 1; i >= 0; --i) {\n\t\ta[i] = x;\n\t\tx = prev[x];\n\t}\n\tprintf(\"%d\\n\", ans);\n\tfor (i = 0; i < ans - 1; ++i)\n\t\tprintf(\"%d \", a[i]);\n\tprintf(\"%d\\n\", a[ans - 1]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9576023391812866, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "0c49fecbdc42d24737722673f821d48a", "bug_code_uid": "436c8bf678fd9e433038f42a1fc90d5c", "src_uid": "fbde1e2ee02055592ff72fb04366812b", "apr_id": "5eb331e0727d64e85db903212c3a2e7e", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n/*inline void Scan_f(int a)\n{\nchar c = 0;\nwhile(c<33)\n//c = fgetc_unlocked(stdin);\nc = getc(stdin);\na = 0;\nwhile(c>33)\n{\na = a*10 + c - '0';\n//c = fgetc_unlocked(stdin);\nc = getc(stdin);\n}\n}\n*/\nint main()\n{\n    int n,i;\n    int k;\n    int y[2000];\n    int count =0,ans =0;\n    //scanf(\"%d\",&n);\n    //scanf(\"%d\",&k);\n    Scan_f(n);\n    Scan_f(k);\n    //y=(int *)malloc(sizeof(int)*n);\n    for(i=0;i<n;i++)\n        Scan_f(y[i]);\n        //scanf(\"%d\",&y[i]);\n  //  for(i=0;i<n;i++)\n    //    printf(\"%d\",y[i]);\n    for(i=0;i<n;i++)\n    {\n        if(5-y[i]>=k)\n            count++;\n    }\n    ans = count/3;\n    printf(\"%d\",ans);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n/*inline void Scan_f(int a)\n{\nchar c = 0;\nwhile(c<33)\n//c = fgetc_unlocked(stdin);\nc = getc(stdin);\na = 0;\nwhile(c>33)\n{\na = a*10 + c - '0';\n//c = fgetc_unlocked(stdin);\nc = getc(stdin);\n}\n}\n*/\nint main()\n{\n    int n,i;\n    int k;\n    int y[2000];\n    int count =0,ans =0;\n    //scanf(\"%d\",&n);\n    //scanf(\"%d\",&k);\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&k);\n    //y=(int *)malloc(sizeof(int)*n);\n    for(i=0;i<n;i++)\n        //Scan_f(y[i]);\n        scanf(\"%d\",&y[i]);\n  //  for(i=0;i<n;i++)\n    //    printf(\"%d\",y[i]);\n    for(i=0;i<n;i++)\n    {\n        if(5-y[i]>=k)\n            count++;\n    }\n    ans = count/3;\n    printf(\"%d\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.9705121572684946, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "1db3f99f3587e24d28c23007674ba56d", "bug_code_uid": "27dbd7c13b9bc1c356bb8090b08def13", "src_uid": "5891432c43cfee35a212ad92d7da2a64", "apr_id": "b6bbca81ab920435f5dfa458d9e424da", "difficulty": 1900, "tags": ["brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main(){\n\tlong long int X;\n\tint max,cont,n,L,i,r,respa[100000],respb[100000]\n\tscanf(\"%lld\",&X);\n\tcont=0;\n\tmax=floor(pow(3*X,0.3333333));\n\tif(((max*(max+1)*(2*max+1))/6)==X){\n\t\tfor(n=1;n<=max;n++){\n\t\t\tL=X+(n*n*n-n)/6;\n\t\t\tr=(n*n+n)/2;\n\t\t\tif(L%r==0){\n\t\t\t\trespa[cont]=n;\n\t\t\t\trespb[cont]=L/r;\n\t\t\t\tcont++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",2*cont-1);\n\t\tfor(i=0;i<=cont;i++){\n\t\t\trespa[2*cont-i-2]=respb[i];\n\t\t\trespb[2*cont-i-2]=respa[i];\n\t\t}\n\t\tfor(i=0;i<2*cont-1;i++) printf(\"%d %d\\n\",respa[i],respb[i]);\n\t}else{\n\t\tfor(n=1;n<=max;n++){\n\t\t\tL=X+(n*n*n-n)/6;\n\t\t\tr=(n*n+n)/2;\n\t\t\tif(L%r==0){\n\t\t\t\trespa[cont]=n;\n\t\t\t\trespb[cont]=L/r;\n\t\t\t\tcont++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",2*cont);\n\t\tfor(i=0;i<=cont;i++){\n\t\t\trespa[2*cont-i-1]=respb[i];\n\t\t\trespb[2*cont-i-1]=respa[i];\n\t\t}\n\t\tfor(i=0;i<2*cont;i++) printf(\"%d %d\\n\",respa[i],respb[i]);\n\t}\n\treturn 0;\n\tprintf(\"%d\\n\",cont);\n\tfor(i=0;i<cont;i++) printf(\"%d %d\\n\",respa[i],respb[i]);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main(){\n\tlong long int X,max,cont,n,L,i,r,respa[100000],respb[100000];\n\tscanf(\"%lld\",&X);\n\tcont=0;\n\tmax=floor(pow(3*X,0.3333333333333333333));\n\tif(((max*(max+1)*(2*max+1))/6)==X){\n\t\tfor(n=1;n<=max;n++){\n\t\t\tL=X+(n*n*n-n)/6;\n\t\t\tr=(n*n+n)/2;\n\t\t\tif(L%r==0){\n\t\t\t\trespa[cont]=n;\n\t\t\t\trespb[cont]=L/r;\n\t\t\t\tcont++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",2*cont-1);\n\t\tfor(i=0;i<=cont;i++){\n\t\t\trespa[2*cont-i-2]=respb[i];\n\t\t\trespb[2*cont-i-2]=respa[i];\n\t\t}\n\t\tfor(i=0;i<2*cont-1;i++) printf(\"%lld %lld\\n\",respa[i],respb[i]);\n\t}else{\n\t\tfor(n=1;n<=max;n++){\n\t\t\tL=X+(n*n*n-n)/6;\n\t\t\tr=(n*n+n)/2;\n\t\t\tif(L%r==0){\n\t\t\t\trespa[cont]=n;\n\t\t\t\trespb[cont]=L/r;\n\t\t\t\tcont++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",2*cont);\n\t\tfor(i=0;i<=cont;i++){\n\t\t\trespa[2*cont-i-1]=respb[i];\n\t\t\trespb[2*cont-i-1]=respa[i];\n\t\t}\n\t\tfor(i=0;i<2*cont;i++) printf(\"%lld %lld\\n\",respa[i],respb[i]);\n\t}\n\treturn 0;\n\tprintf(\"%lld\\n\",cont);\n\tfor(i=0;i<cont;i++) printf(\"%lld %lld\\n\",respa[i],respb[i]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.2268041237113402, "equal_cnt": 15, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "2e4f7ab4a73349309ccd3da5c9e92218", "bug_code_uid": "cbed0bada9a483bfd913b26a13fed5a2", "src_uid": "bce9ebad1dc8bd5aae516c4ca9e551c0", "apr_id": "b71f0cbef18bef724bec407a7a01d7f4", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,ara[2000],i,j,b,k,t,d=0,w=0,x=100000,l;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=0;i<n-1;i++){\n        for(j=i+1;j<n;j++){\n            if(ara[i]>ara[j]){\n                b=ara[i];\n                ara[i]=ara[j];\n                ara[j]=b;\n            }\n        }\n    }\n    for(i=(ara[0]+1);i<(ara[n-1]-1);i++){\n            t=0;\n        for(l=0;l<n;l++){\n            if(ara[l]>=(i-1) && ara[l]<=(i+1)){\n                k=0;\n                t+=k;\n            }\n            else if(ara[l]<(i-1)){\n                k=(i-1-ara[l]);\n                t+=k;\n            }\n            else{\n                k=ara[l]-i-1;\n                t+=k;\n            }\n\n        }\n        w=t;\n        if(w<x){\n            x=w;d=i;\n        }\n    }\n    if(w==0)\n        x=0;\n    printf(\"%d %d\",d,x);\n\n}\n\n", "fixed": "#include<stdio.h>\n\n\nint main(){\n\n    int n,max=0,arr[1000];\n    scanf(\"%d\",&n);\n    for(int i=0;i<n ; i++){\n         scanf(\"%d\",&arr[i]);\n         if(arr[i]>max)max=arr[i];\n    }\n    int t=0,cost=0,mincost=10000000;\n    for(int i=1;i<=max; i++){\n            cost=0;\n        for(int j=0;j<n; j++){\n            if(arr[j]<i){\n                cost+=i-1-arr[j];\n            }\n            else if(arr[j]>i){\n                cost+=arr[j]-i-1;\n            }\n        }\n        if(cost<mincost){\n\n            t=i;\n            mincost=cost;\n        }\n\n    }\nprintf(\"%d %d\\n\",t,mincost);\n    return 0;\n}"}
{"similarity_score": 0.9862038273253226, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5338e76b91081f7777cf615458b612d9", "bug_code_uid": "82a62363122a4c6eda800000292a5313", "src_uid": "524273686586cdeb7827ffc1ad59d85a", "apr_id": "4a75895457fbe21db44450c83986703c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#pragma warning(disable:4996)\n#include <stdio.h>\n#include <malloc.h>\n#include <math.h>\n#include <stdlib.h>\nint lol(const void *x1, const void *x2)\n{\n\treturn *(int*)x1 - *(int*)x2;\n}\n/*\nint main(void)\n{\n\tint n,x,y, flag =1;\n\tscanf(\"%i\", &n);\n\tfor (x = 4; x <= 999996 && flag; x+=2)\n\t\tfor (y = 999996; y >= 4 && flag; y-=2)\n\t\t\tif (((n - y) / x == 1 || (n - x) / y == 1) && ((n - y) % x == 0 || (n - x) % y == 0))\n\t\t\t\tflag = 0;\n\tprintf(\"%i %i\", x,y);\n\treturn 0;\n}\n*/\n/*\nint gcd(int a, int b)\n{\n\tint c;\n\twhile (b)\n\t{\n\t\tc = a % b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn a;\n}*/\nint main(void)\n{\n\tchar c;\n\tint flag = 1;\n\tint i, n, m, j, count=0, indMemX,indMemY;\n\tscanf(\"%i%i\", &n, &m);\n\tscanf(\"%c\", &c);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tj = 0;\n\t\tdo\n\t\t{\n\t\t\tscanf(\"%c\", &c);\n\t\t\tif (c != '\\n')\n\t\t\t{\n\t\t\t\tif (flag)\n\t\t\t\t{\n\t\t\t\t\tif (c == 'B')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tindMemY = i;\n\t\t\t\t\t\t\tindMemX = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (count != 0)\n\t\t\t\t\t\t\tflag = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tj++;\n\t\t} while (c != '\\n');\n\t}\n\tprintf(\"%i %i\", indMemY + 1+count / 2, indMemX +1+ count / 2);\n\treturn 0;\n}\n", "fixed": "#pragma warning(disable:4996)\n#include <stdio.h>\n#include <malloc.h>\n#include <math.h>\n#include <stdlib.h>\nint lol(const void *x1, const void *x2)\n{\n\treturn *(int*)x1 - *(int*)x2;\n}\n/*\nint main(void)\n{\n\tint n,x,y, flag =1;\n\tscanf(\"%i\", &n);\n\tfor (x = 4; x <= 999996 && flag; x+=2)\n\t\tfor (y = 999996; y >= 4 && flag; y-=2)\n\t\t\tif (((n - y) / x == 1 || (n - x) / y == 1) && ((n - y) % x == 0 || (n - x) % y == 0))\n\t\t\t\tflag = 0;\n\tprintf(\"%i %i\", x,y);\n\treturn 0;\n}\n*/\n/*\nint gcd(int a, int b)\n{\n\tint c;\n\twhile (b)\n\t{\n\t\tc = a % b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn a;\n}*/\nint main(void)\n{\n\tchar c;\n\tint flag = 1;\n\tint i, n, m, j, count=0, indMemX,indMemY;\n\tscanf(\"%i%i\", &n, &m);\n\tscanf(\"%c\", &c);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tj = 0;\n\t\tdo\n\t\t{\n\t\t\tscanf(\"%c\", &c);\n\t\t\tif (c != '\\n')\n\t\t\t{\n\t\t\t\tif (flag)\n\t\t\t\t{\n\t\t\t\t\tif (c == 'B')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tindMemY = i;\n\t\t\t\t\t\t\tindMemX = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (count != 0)\n\t\t\t\t\t\t\tflag = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tj++;\n\t\t} while (c != '\\n');\n\t\tif (count != 0)\n\t\t\tflag = 0;\n\t}\n\tprintf(\"%i %i\", indMemY + 1+count / 2, indMemX +1+ count / 2);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8442028985507246, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2749171342d0654d47766c06f7a544e1", "bug_code_uid": "b9c80b69ae17440f3543bb54f51e7417", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "de9ebb2e2bb298b8d38131c901dd4500", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n\tint n,i,j=0,k;\n\tchar str1[1002],str2[1002];\n\tscanf(\"%d\",&n);\n\tscanf(\"%s%s\",str1,str2);\n\tfor(i=0;i<n;i++)\n\t{   j = fabs(str1[i] - str2[i]);\n\t\tif(j>5)\n\t\t\tj = 10-j;\n\t\tk = k + j;\n\t}\n\tprintf(\"%d\",k);\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n\tint n,i,j=0,k=0;\n\tscanf(\"%d\",&n);\n\tchar str1[n],str2[n];\n\tscanf(\"%s%s\",str1,str2);\n\tfor(i=0;i<n;i++)\n\t{   j = fabs(str1[i] - str2[i]);\n\t\tif(j>5)\n\t\t\tj = 10-j;\n\t\tk = k + j;\n\t}\n\tprintf(\"%d\",k);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.3825301204819277, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "0181abe7e80abb8ce8b4fff7dacccbfb", "bug_code_uid": "30aec223764480ea244ba77ca973332c", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "01996967247f3350dd937d66c7dca6fc", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\n\n\nint contar_cadena(){\n\t\n\t//~ while(c = getchar())\n\tint cont1  = 0;\n\tc = getchar();\n\tint cont = c - '0';\n\tint i;\n\t\n\tfor(i = 0; i < cont; i++){\n\t\tc = getchar();\n\t\tcont1 += c - '0';\n\t}\n\tint cont0 = cont - cont1;\n\t\n\treturn abs(cont0 - cont1);\n}\n\t\nint main(void){\n\tcontar_cadena();\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\n\n\nint contar_cadena(){\n\t\n\tint cont1  = 0;\n\tint c;\n\tchar arr[200001];\n\tscanf(\"%d\", &c);\n\tscanf(\"%s\", arr);\n\tint i;\n\t\n\tfor(i = 0; i < c; i++){\n\t\tif(arr[i] == '1')\n\t\t\tcont1++;\n\t}\n\tint cont0 = c - cont1;\n\t\n\treturn abs(cont0 - cont1);\n}\n\t\nint main(void){\n\tprintf(\"%d\\n\", contar_cadena());\n\treturn 0;\n}\n"}
{"similarity_score": 0.6345609065155807, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "1592438fab3e3c5af7480af518129c2a", "bug_code_uid": "94aab70f08ff9c0d21062cbbf75d23cd", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "f09451fb0304fbfc800ab28d68464e51", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint size ,nta,count=0;\n\tscanf(\"%d %d\",&size,&nta);\n\tint ar[size];\n\tfor(int i=0;i<size;i++){\n\t\tscanf(\"%d\",&ar[i]);\n\t}\n\tfor(int i=0;i<size-1;i++){\n\t\tif(ar[i]>=ar[i+1]){\n\t\t\tar[i+1]=ar[i+1]+nta;\n\t\t\ti=i-1;\n\t\t\tcount++;\n\t\t}\n\t}\n\tprintf(\"%d\",count);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\n\tint size,count=0,nta,waw;\n\tscanf(\"%d %d\",&size,&nta);\n\tint ar[size];\n\tfor(int i=0;i<size;i++){\n\t\tscanf(\"%d\",&ar[i]);\n\t}\n\tfor(int i=0;i<size-1;i++){\n\t\tif(ar[i]>ar[i+1]){\n\t\t\twaw=ceil((ar[i]-ar[i+1])/nta);\n\t\t\tif(waw==0)\n\t\t\twaw=1;\n\t\t\tar[i+1]=ar[i+1]+(waw*nta);\n\t\t\tcount=count+waw;\n\t\t\ti=i-1;\n\t\t}\n\t\telse if(ar[i]==ar[i+1]){\n\t\t\tar[i+1]=ar[i+1]+nta;\n\t\t\tcount++;\n\t\t}\n\t}\n\tprintf(\"%d\",count);\n}\n"}
{"similarity_score": 0.8708053691275168, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "72d1c9f9ade93b8e69fe73471b8dfa05", "bug_code_uid": "45e25fe44aa376da9d54275c50893865", "src_uid": "f03f1613292cacc36abbd3a3a25cbf86", "apr_id": "bed0a41149bcdddf528b6486ec324290", "difficulty": 1900, "tags": ["constructive algorithms", "greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n     int n, a = 0, b = 0, c = 0, i;\n     char s[100001];\n\n     scanf(\"%s\", s);\n\n     n = strlen(s);\n\n     for (i = 0; i < n; i++) {\n\t  if (s[i] == '0') {\n\t       a++;\n\t  } else if (s[i] == '1') {\n\t       b++;\n\t  } else {\n\t       c++;\n\t  }\n     }\n\n     if (b <= (n - 1) / 2) puts(\"00\");\n\n     if (b + c > (n - 1) / 2 && a + c > (n - 2) / 2) {\n\t  if (s[n - 1] != '0') puts(\"01\");\n\n\t  if (s[n - 1] != '1') puts(\"10\");\n     }\n\n     if (a <= (n - 2) / 2) puts(\"11\");\n\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n     int n, a = 0, b = 0, c = 0, i;\n     char s[100001];\n\n     scanf(\"%s\", s);\n\n     n = strlen(s);\n\n     for (i = 0; i < n; i++) {\n\t  if (s[i] == '0') {\n\t       a++;\n\t  } else if (s[i] == '1') {\n\t       b++;\n\t  } else {\n\t       c++;\n\t  }\n     }\n\n     if (b <= (n - 1) / 2) puts(\"00\");\n\n     if (b + c > (n - 1) / 2 && a + c > (n - 2) / 2) {\n\t  if (s[n - 1] == '1' || (s[n - 1] == '?' && a + c - 1 > (n - 2) / 2)) {\n\t       puts(\"01\");\n\t  }\n\n\t  if (s[n - 1] == '0' || (s[n - 1] == '?' && b + c - 1 > (n - 1) / 2)) {\n\t       puts(\"10\");\n\t  }\n     }\n\n     if (a <= (n - 2) / 2) puts(\"11\");\n\n     return 0;\n}\n"}
{"similarity_score": 0.6255678131083712, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "08f796c13f3dc4dc680a31e642fe5761", "bug_code_uid": "e601f3894ebabddada5c0c23190d06e3", "src_uid": "48f3ff32a11770f3b168d6e15c0df813", "apr_id": "0eeae32ba5605e770baaaace5000833c", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/*\nNAME : VESTRON\nI M FEELIN F***ING BORING . . . \nSKYPE : vimal.vestron      \n*/\n#include<stdio.h>\nint main(){\n    int n,m,i,j,buaaa;\n    scanf(\"%d%d\",&n,&m);buaaa=n+1;\n    long int *a=malloc(buaaa*sizeof(long int));\n    for(i=1;i<=n;i++)scanf(\" %ld\",&a[i]);//printf(\"%d\\n\",m);\n    for(i=0;i<m;i++){\n        int operation;\n        scanf(\" %d\",&operation);\n        if(operation==1){\n            int p,q;\n            scanf(\" %d%d\",&p,&q);\n            a[p]=a[q];\n        }\n        else if(operation==2){\n            int p;\n            scanf(\" %d\",&p);\n            for(j=1;j<=n;j++){a[j]=a[j]+p;}\n        }\n        else if(operation==3){\n            int q;\n            scanf(\" %d\",&q);\n            printf(\"%d\\n\",a[q]);\n        }\n    }\n    return 0;\n}", "fixed": "/*\nNAME : VESTRON\nI M FEELIN F***ING BORING . . . \nSKYPE : vimal.vestron      \n*/\n#include<stdio.h>\nint main(){\n    int n,m,i,j,buaaa,sum=0;\n    scanf(\"%d%d\",&n,&m);buaaa=n+1;\n    long int *a=malloc(buaaa*sizeof(long int));\n    for(i=1;i<=n;i++)scanf(\" %ld\",&a[i]);//printf(\"%d\\n\",m);\n    for(i=0;i<m;i++){\n        int operation;\n        scanf(\" %d\",&operation);\n        if(operation==1){\n            int p,q;\n            scanf(\" %d%d\",&p,&q);\n            a[p]=q-sum;continue;\n        }\n        else if(operation==2){\n            int p;\n            scanf(\" %d\",&p);\n            sum+=p;//for(j=1;j<=n;j++){a[j]=a[j]+p;}continue;\n        }\n        else if(operation==3){\n            int q;\n            scanf(\" %d\",&q);\n            printf(\"%d\\n\",a[q]+sum);continue;\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9981916817359855, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "59234b2f11ac3ec729bd7437a137fe33", "bug_code_uid": "f490b713397edef9b9e8f6475ce65ce1", "src_uid": "192f181cfc74bef5b0b5a192964d9760", "apr_id": "13f04ccf53bff743335fa5243433b2c1", "difficulty": 1400, "tags": ["data structures", "constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint N,n;\nint a[300000];\nint b[300000];\nint c,s,ite,m;\nvoid check(int a[],int b[],int* n,int* m,int* s){\n\tb[0]=a[0];\n\tfor (int j=1;j<*n;j++){\n\t\tif (a[j]<=a[j-1]){\n\t\t\tif (*s==0){\n\t\t\t\tc=1;\n\t\t\t}\n\t\t\t*s=0;}\n\t\tif (*s==0 && a[j]>b[*m-1]){\n\t\t\tb[*m++]=a[j];\n\t\t\t*s=1;\n\t\t}\n\t}\n\t\n\n}\nint main(int argc, char const *argv[])\n{\tif(scanf(\"%d\",&N)!=EOF){};\n\tfor (int i=0;i<N;i++){\n\t\tif(scanf(\"%d\",&n)!=EOF){};\n\t\tfor (int j=0;j<n;j++){\n\t\t\tif(scanf(\"%d\",&a[j])!=EOF){};\n\t\t}\n\t\t\n\t\tif(a[1]>a[n-1]){printf(\"NO\\n\");}\n\t\telse{printf(\"YES\\n\");}\n\t\n\t\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint N,n;\nint a[300000];\nint b[300000];\nint c,s,ite,m;\nvoid check(int a[],int b[],int* n,int* m,int* s){\n\tb[0]=a[0];\n\tfor (int j=1;j<*n;j++){\n\t\tif (a[j]<=a[j-1]){\n\t\t\tif (*s==0){\n\t\t\t\tc=1;\n\t\t\t}\n\t\t\t*s=0;}\n\t\tif (*s==0 && a[j]>b[*m-1]){\n\t\t\tb[*m++]=a[j];\n\t\t\t*s=1;\n\t\t}\n\t}\n\t\n\n}\nint main(int argc, char const *argv[])\n{\tif(scanf(\"%d\",&N)!=EOF){};\n\tfor (int i=0;i<N;i++){\n\t\tif(scanf(\"%d\",&n)!=EOF){};\n\t\tfor (int j=0;j<n;j++){\n\t\t\tif(scanf(\"%d\",&a[j])!=EOF){};\n\t\t}\n\t\t\n\t\tif(a[0]>a[n-1]){printf(\"NO\\n\");}\n\t\telse{printf(\"YES\\n\");}\n\t\n\t\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.993801652892562, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "36074ec59204d0e0f0240b0d895a69ed", "bug_code_uid": "fb5c62d04a51944ae6d23b57a4f7e9cc", "src_uid": "7d774a003d2e3e8ae6fe1912b3998c96", "apr_id": "ede1e337d684e380317e00f7fa8007ac", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    for (; t > 0; t--) {\n        long int path = 0;\n        int n, m;\n        scanf(\"%d %d\", &n, &m);\n        for (int i = 1; i <= m; i++)\n            path += i;\n        for (int j = 2; j <= n; j++)\n            path += j * m;\n        printf(\"%ld\\n\", path);\n        /* int horizontal = m + 1 * m / 2;\n        int vertical = m + (m * n) * n / 2;\n        printf(\"%d\\n\", horizontal + vertical); */\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    for (; t > 0; t--) {\n        long long int path = 0;\n        int n, m;\n        scanf(\"%d %d\", &n, &m);\n        for (int i = 1; i <= m; i++)\n            path += i;\n        for (int j = 2; j <= n; j++)\n            path += j * m;\n        printf(\"%lld\\n\", path);\n        /* int horizontal = m + 1 * m / 2;\n        int vertical = m + (m * n) * n / 2;\n        printf(\"%d\\n\", horizontal + vertical); */\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9930875576036866, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b2f59fc514a44d50993075ab3fd0c821", "bug_code_uid": "e8ee1afb6d1c98b9afe6b8bde44d7173", "src_uid": "7276d7e3a4b594dc64c1ba56fb1a3628", "apr_id": "42a176a1832ae32397f9fd941d0c842d", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int ans[t];\r\n    for(int k=0;k<t;k++){\r\n      \r\n      int n,m;\r\n      scanf(\"%d %d\",&n,&m);\r\n      int j,sum=0;\r\n      for(int x=0;x<n;x++){\r\n           scanf(\"%d\",&j);\r\n           sum=sum+j;\r\n      } \r\n      if(sum>m){\r\n        ans[k]=sum-m;\r\n      }\r\n      else{\r\n        ans[k]=m-sum;\r\n      }\r\n\r\n   }\r\n   for(int s=0;s<t;s++){\r\n    printf(\"%d\\n\",ans[s]);\r\n   }\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int ans[t];\r\n    for(int k=0;k<t;k++){\r\n      \r\n      int n,m;\r\n      scanf(\"%d %d\",&n,&m);\r\n      int j,sum=0;\r\n      for(int x=0;x<n;x++){\r\n           scanf(\"%d\",&j);\r\n           sum=sum+j;\r\n      } \r\n      if(sum>m){\r\n        ans[k]=sum-m;\r\n      }\r\n      else{\r\n        ans[k]=0;\r\n      }\r\n\r\n   }\r\n   for(int s=0;s<t;s++){\r\n    printf(\"%d\\n\",ans[s]);\r\n   }\r\n}"}
{"similarity_score": 0.8588957055214724, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "21d423a292907ae161eaa697470afd5b", "bug_code_uid": "077dc6bce44f48761021c06150eb1910", "src_uid": "ec8060260a6c7f4ff3e6afc9fd248afc", "apr_id": "07aa15d00e55e7c5c57c7f5a3ca3a628", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint t,i;\n  long long int a,b,sum,rem,d,m,n;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++){\n\n    scanf(\"%lld %lld %lld %lld\",&a,&b,&m,&n);\n\n        d=a/b;\n\n        sum=a+(d*m);\n         printf(\"%lld\\n\",sum);\n}\n\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint t,i;\n  long long int a,b,sum,rem,d,m,n;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++){\n\n    scanf(\"%lld %lld %lld %lld\",&a,&b,&m,&n);\n\n        d=a/n;\n\n\n        sum=d+((d/b)*m);\n         printf(\"%lld\\n\",sum);\n        }\n        return 0;\n}"}
{"similarity_score": 0.15308641975308643, "equal_cnt": 18, "replace_cnt": 16, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "6ece452972e02473ddc911e8b0c9e4be", "bug_code_uid": "f324861fd6a4f2a8c9c69d6234f84317", "src_uid": "43ace9254c5d879d11e3484eacb0bcc4", "apr_id": "d5cf6d72ec905e31a13fd398f2b635f6", "difficulty": 1900, "tags": ["dp", "greedy", "graphs", "math", "trees"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "from collections import *\nimport sys  \n\n# \"\". join(strings)  \n    \ndef ri():\n    return int(input())\n \ndef rl():\n    return list(map(int, input().split()))\n\nN = 2*10**6\nMOD = 10**9+7\n\nt= ri()\n#dp[first element is yellow or not][n]\ndp= [0]*(N+5)\n\n\ndp[3]=4\n\ndp[4]=4\n\nfor n in range(5,N+2):\n\tdp[n] = (2*dp[n-2] + dp[n-1])%(MOD)\n\tif n%3==0:\n\t\tdp[n]+=4%MOD\n\n\n\nfor i in range(t):\n\tn= ri()\n\tprint(dp[n])\n\n\n\n\n\t\n", "fixed": "#include <stdio.h>\n#define Rep(i,a,n)for(int i=(int)(a);i<(int)(n);i++)\n#define rep(i,n)Rep(i,0,n)\n#define N 2000000\n#define MOD 1000000007\n\nlong long dp[N+1];\n\n\nint main() {\n\t\n\tdp[3]=4;\n\tdp[4]=4;\n\tint i,n;\n\tfor (i=5; i< N+1; i++){\n\t\tdp[i] = (2*dp[i-2] + dp[i-1])%MOD;\n\t\tif (i%3==0)\n\t\t\tdp[i]+=4%MOD;\n\t}\n\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tscanf(\"%d\", &n);\n\t\tprintf(\"%lld\\n\", dp[n]);\n\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.6379542395693136, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "4698ef781b38e15cfdfd0c1490335403", "bug_code_uid": "bc10ef95209918162feaf450997d9bcd", "src_uid": "322792a11d3eb1df6b54e8f89c9a0490", "apr_id": "8a9a6edc99208184da63b21c193d6260", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    while(n--)\r\n    {\r\n        int sum=0,count=0;\r\n        int a;\r\n        scanf(\"%d\", &a);\r\n        int i;\r\n        for(i=1; i<=a+1; i=i+2)\r\n        {\r\n            sum=sum+i;\r\n             count++;\r\n            if(sum>a)\r\n            {\r\n                break;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    while(n--)\r\n    {\r\n        int sum=0,count=0;\r\n        int a;\r\n        scanf(\"%d\", &a);\r\n        int i=1;\r\n        while(sum<a)\r\n        {\r\n            sum+=i;\r\n            i+=2;\r\n            count++;\r\n\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n    return 0;\r\n\r\n}\r\n\r\n"}
{"similarity_score": 0.9987834549878345, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7139800ab5d0ea9747c750d42baa2909", "bug_code_uid": "d2e6a4c1be3a710929c664deea7ee22d", "src_uid": "94a38067fc8dd8619fa6e5873ca60220", "apr_id": "9dc3a90841e1a7987334547491d33803", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n/* Written by Nishant Mittal aka nishantwrp */\nint main()\n{\n   int n;\n   scanf(\"%d\",&n);\n   int data[n][2];\n   int i=0;\nwhile(i<n) {\nscanf(\"%d\",&data[i][0]);\ndata[i][1] = i+1;\ni++;\n}\nint j=0;\nwhile(j<n) {\n        int k = 0;\nwhile(k<n-j-1) {\nif (data[k][0] < data[k+1][0]){\nint a,b,c,d;\nc = data[k][1];\nd = data[k+1][1];\na = data[k][0];\nb = data[k+1][0];\ndata[k][0] = b;\ndata[k+1][0] = a;\ndata[k][1] = d;\ndata[k+1][1] = c;\n}\nk++;\n}\nj++;\n}\nint ans=0,ans1,ans2,ans3;\nint x=0;\nwhile(x<n-2) {\nint y=x+1;\nwhile(y<n-1) {\nint z=y;\nwhile(z<n) {\nif (data[x][0] == data[y][0] + data[z][0]) {\n    ans = 1;\n    ans1 = data[x][1];\n    ans2 = data[y][1];\n    ans3 = data[z][1];\n}\nz++;\n}\ny++;\n}\nx++;\n}\nif (ans == 0) {\n    printf(\"-1\");\n} else {\nprintf(\"%d %d %d\",ans1,ans2,ans3);\n}\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n/* Written by Nishant Mittal aka nishantwrp */\nint main()\n{\n   int n;\n   scanf(\"%d\",&n);\n   int data[n][2];\n   int i=0;\nwhile(i<n) {\nscanf(\"%d\",&data[i][0]);\ndata[i][1] = i+1;\ni++;\n}\nint j=0;\nwhile(j<n) {\n        int k = 0;\nwhile(k<n-j-1) {\nif (data[k][0] < data[k+1][0]){\nint a,b,c,d;\nc = data[k][1];\nd = data[k+1][1];\na = data[k][0];\nb = data[k+1][0];\ndata[k][0] = b;\ndata[k+1][0] = a;\ndata[k][1] = d;\ndata[k+1][1] = c;\n}\nk++;\n}\nj++;\n}\nint ans=0,ans1,ans2,ans3;\nint x=0;\nwhile(x<n-2) {\nint y=x+1;\nwhile(y<n-1) {\nint z=y+1;\nwhile(z<n) {\nif (data[x][0] == data[y][0] + data[z][0]) {\n    ans = 1;\n    ans1 = data[x][1];\n    ans2 = data[y][1];\n    ans3 = data[z][1];\n}\nz++;\n}\ny++;\n}\nx++;\n}\nif (ans == 0) {\n    printf(\"-1\");\n} else {\nprintf(\"%d %d %d\",ans1,ans2,ans3);\n}\n    return 0;\n}\n"}
{"similarity_score": 0.9836065573770492, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "34d2d1de057380a690cda38e13b5fe88", "bug_code_uid": "a5baef9f4db5e3347a4b2469e6670607", "src_uid": "2e3006d663a3c7ad3781aba1e37be3ca", "apr_id": "30cd0c75da48c4c287ea8492564050e4", "difficulty": 800, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i = 1; i <= t; i++)\r\n    {\r\n        char a[2];\r\n        int ind1, ind0, ans;\r\n        scanf(\"%s\",a);\r\n        ind1 = a[0] - 96;\r\n        ind0 = a[1] - 96;\r\n\r\n        if(ind1 < ind0)\r\n        {\r\n            ans = 25 * (ind1 - 1) + ind0 - 1;\r\n        }\r\n        else{\r\n            ans = 25 * (ind1 - 1) + ind0;\r\n\r\n        }\r\n        printf(\"%d\\n\",ans);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t,i = 1;\r\n    scanf(\"%d\",&t);\r\n    for(i = 1; i <= t; i++)\r\n    {\r\n        char a[4];\r\n        int ind1, ind0, ans;\r\n        scanf(\"%s\",a);\r\n        ind1 = a[0] - 96;\r\n        ind0 = a[1] - 96;\r\n        if(ind1 < ind0)\r\n        {\r\n            ans = 25 * (ind1 - 1) + ind0 - 1;\r\n        }\r\n        else {\r\n            ans = 25 * (ind1 - 1) + ind0;\r\n\r\n        }\r\n        printf(\"%d\\n\",ans);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.5801699716713881, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "862d62b41c831cb292c02b90d102f1d6", "bug_code_uid": "3d38fa98e8dbd26f58fe4369eb940b9a", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "f29a2a4be9ab6bb206cf3af0f3d29248", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint com(void const *a, void const *b)\n{\n    return (*(int*)a)-(*(int*)b);\n}\nint main()\n{\n    int n, i, j, k, cc, d, p, q;\n    \n    scanf(\"%d\", &n);\n    int a[n], b[n-1], c[n-2];\n    for(i=0;i<n;i++)\n        scanf(\"%d\", &a[i]);\n    for(i=0;i<n-1;i++)\n        scanf(\"%d\", &b[i]);\n    for(i=0;i<n-2;i++)\n        scanf(\"%d\", &c[i]);\n    qsort(a, n, 4, com);\n    qsort(c, n-2, 4, com);\n    \n    d=0;\n    for(i=0,j=0;i<n;i++,j++)\n    {\n        if(a[i]!=c[j])\n        {\n            printf(\"%d\\n\", a[i]);\n            j--;\n            d++;\n        }\n        if(d==2)\n            break;\n        else if(d==0 && j==n-3)\n        {\n            printf(\"%d\\n%d\\n\", a[n-2], a[n-1]);\n            break;\n        }\n        else if(d==1 && j==n-3)\n        {\n            printf(\"%d\\n\", a[n-1]);\n            break;\n        }\n    }\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\nint com(void const *a, void const *b)\n{\n    return (*(int*)a)-(*(int*)b);\n}\nint main()\n{\n    int n, i, j, k, cc, d, p, q;\n    \n    scanf(\"%d\", &n);\n    int a[n], b[n], c[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\", &a[i]);\n    for(i=0;i<n-1;i++)\n        scanf(\"%d\", &b[i]);\n    for(i=0;i<n-2;i++)\n        scanf(\"%d\", &c[i]);\n    qsort(a, n, 4, com);\n    qsort(b, n-1, 4, com);\n    qsort(c, n-2, 4, com);\n    \n    b[n-1]=0, c[n-2]=0,c[n-1]=0;\n    d=0;\n\n    for(i=0,j=0, k=0;i<n;i++,j++, k++)\n    {\n        if(a[i]!=b[j])\n        {\n            p=a[i];\n            j--;\n            k--;\n            d++;\n        }\n        else if(a[i]==b[j])\n        {\n            if(b[j]!=c[k])\n            {\n                d++;\n                q=b[j];\n                k--;\n            }\n        }\n        if(d==2)\n        {\n            printf(\"%d\\n%d\\n\", p, q);\n            break;\n        }\n    }\n    \n    return 0;\n}"}
