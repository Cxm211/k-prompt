{"id": "/data/all/data/kmalakoff/knockback", "bugType": "no-invalid-this", "problem": "    const nested_view_model = kb.viewModel(new kb.Model({ name: 'name1' }), { name: {} }, this);\n    const ViewModel = function () {", "fixed": "    const nested_view_model = kb.viewModel(new kb.Model({ name: 'name1' }), { name: {} });\n    const ViewModel = function () {", "message": "Unexpected 'this'."}
{"id": "/data/all/data/Ylianst/MeshCentral", "bugType": "no-empty", "problem": "                }\n                output.on('close', function () { setTimeout(function () { try { obj.parent.fs.unlink(newBackupPath + '.archive'); } catch (ex) { } }, 5000); });\n                output.on('end', function () { });", "fixed": "                }\n                output.on('close', function () { obj.performingBackup = false; setTimeout(function () { try { obj.parent.fs.unlink(newBackupPath + '.archive'); } catch (ex) { console.log(ex); } }, 5000); });\n                output.on('end', function () { });", "message": "Empty block statement."}
{"id": "/data/all/data/kadirahq/flow-router", "bugType": "no-undef", "problem": "const Qs = Npm.require('qs');\nRouter = class extends SharedRouter {\n  constructor() {", "fixed": "Router = class extends SharedRouter {\n  constructor() {", "message": "Undefined variable."}
{"id": "/data/all/data/zloirock/core-js", "bugType": "comma-style", "problem": "'use strict';\nvar $                  = require('./_')\n  , LIBRARY            = require('./_library')\n  , global             = require('./_global')", "fixed": "'use strict';\nvar LIBRARY            = require('./_library')\n  , global             = require('./_global')", "message": "',' should be placed last."}
{"id": "/data/all/data/davidmarkclements/0x", "bugType": "prefer-rest-params", "problem": "function pathTo ({ee}, bin) {\n  if (!ee) bin = arguments[0]\n  if (fs.existsSync(bin)) { return bin }", "fixed": "function pathTo ({ee}, bin) {\n  if (!ee)\n  if (fs.existsSync(bin)) { return bin }", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/gintsmurans/staticphp", "bugType": "no-invalid-this", "problem": "    $.post(BASE_URI + 'home/_json/save', {'id' : $(this).data('id'), 'title' : span.html()}, function(data){\n      if (data.title)", "fixed": "    $.post(BASE_URI + 'home/_json/save', {'id' : _this.data('id'), 'title' : span.html()}, function(data){\n      if (data.title)", "message": "Unexpected 'this'."}
{"id": "/data/all/data/Aldlevine/comptroller", "bugType": "no-fallthrough", "problem": "      await c.update();\n    case 'link':\n      await c.link();", "fixed": "      await c.update();\n      break;\n    case 'link':\n      await c.link();", "message": "Expected a 'break' statement before 'case'."}
{"id": "/data/all/data/leochen36/qmik", "bugType": "no-console", "problem": "\t});\n\tconsole.log(33);\n\tQ(document).ready(function() {", "fixed": "\t});\n\tQ(document).ready(function() {", "message": "Unexpected console statement."}
