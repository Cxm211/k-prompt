{"similarity_score": 0.9955056179775281, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e90288f278da16b472a9148ae41c0974", "bug_code_uid": "e0f4017f0a289de1161d1aa183a13f04", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "15c5d0ecede418bac7808515ec3fc060", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int a;\n    int t;\n    int m=-10000000;\n    int i;\n\n    scanf(\"%d\", &t);\n\n    for(i=0; i<t; i++)\n    {\n        scanf(\"%d\", &a);\n        if(a<0 && a>m)\n        {\n            \n        }\n        else\n        {\n            if((int)(sqrt(a))*(int)(sqrt(a))!=a && a>m)\n            {\n                m=a;\n            }\n        }\n    }\n\n    printf(\"%d\\n\", m);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int a;\n    int t;\n    int m=-10000000;\n    int i;\n\n    scanf(\"%d\", &t);\n\n    for(i=0; i<t; i++)\n    {\n        scanf(\"%d\", &a);\n        if(a<0 && a>m)\n        {\n            m=a;\n        }\n        else\n        {\n            if((int)(sqrt(a))*(int)(sqrt(a))!=a && a>m)\n            {\n                m=a;\n            }\n        }\n    }\n\n    printf(\"%d\\n\", m);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9946977730646872, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7d95455740836a88e1f72b87d9f12f61", "bug_code_uid": "73fb17f803edda05ef3c3b3b8a53d930", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "a1671fd76030e341679993f490c4579a", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nchar s[100001];\nint main()\n{\n    int n,i=0,cnt1=0,cnt2=0;\n    scanf(\"%d\",n);\n    scanf(\"%s\",s);\n    while (i<n)\n    {\n        if (s[i]=='A')\n        {\n            cnt1++;\n        }\n        else\n        {\n            cnt2++;\n        }\n        i++;\n    }\n    \n    \n    if(cnt1==cnt2)\n    {\n        printf(\"Friendship\");\n    \n    }\n    else if (cnt1>cnt2)\n    {\n        printf(\"Anton\");\n    }\n     else\n     {\n         printf(\"Danik\");\n     }\n    return 0;\n}", "fixed": "#include<stdio.h>\nchar s[100001];\nint main()\n{\nint n,i=0,cnt1=0,cnt2=0;\n    scanf(\"%d\",&n);\n    scanf(\"%s\",s);\n    while (i<n)\n    {\n        if (s[i]=='A')\n        {\n            cnt1++;\n        }\n        else\n        {\n            cnt2++;\n        }\n        i++;\n    }\n    \n    \n    if(cnt1==cnt2)\n    {\n        printf(\"Friendship\");\n    \n    }\n    else if (cnt1>cnt2)\n    {\n        printf(\"Anton\");\n    }\n     else\n     {\n         printf(\"Danik\");\n     }\n    return 0;\n}"}
{"similarity_score": 0.9969604863221885, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "08c6dcf9fc51533de8546b0241ddf3a6", "bug_code_uid": "cd7ae903983aa52c8c3b9a777f6e5f31", "src_uid": "066906ee58af5163636dac9334619ea7", "apr_id": "3c299dbfe3538452b9f743522168df7d", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, x;\n    scanf(\"%d%d\", &n, &x);\n    int i;\n    int sum = 0;\n    int counter = 0;\n    for(i = 0; i < n; i++)\n    {\n\n        int temp;\n        scanf(\"%d\", &temp);\n        sum += temp;\n\n    }\n\n    sum = abs(sum);\n\n    for(i = abs(x); i > 0; i--)\n    {\n\n        while(sum % i >= 0 && sum > i)\n        {\n\n            sum -= i;\n            counter++;\n\n        }\n\n    }\n\n    counter += sum;\n\n    printf(\"%d\\n\", counter);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, x;\n    scanf(\"%d%d\", &n, &x);\n    int i;\n    int sum = 0;\n    int counter = 0;\n    for(i = 0; i < n; i++)\n    {\n\n        int temp;\n        scanf(\"%d\", &temp);\n        sum += temp;\n\n    }\n\n    sum = abs(sum);\n\n    for(i = abs(x); i > 1; i--)\n    {\n\n        while(sum % i >= 0 && sum >= i)\n        {\n\n            sum -= i;\n            counter++;\n\n        }\n\n    }\n\n    counter += sum;\n\n    printf(\"%d\\n\", counter);\n\n    return 0;\n}\n"}
{"similarity_score": 0.7046070460704607, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "8b22d89a40a53bb7772a09ddbb58deea", "bug_code_uid": "87c1e099157a26850c81e2ec9bc50a4f", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "08e295d4ab6eca83dffd393d0315b46d", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include<stdio.h>\nint main()\n{\nint n,i;\nlong long int j,k,sumA=0,sumB=0,sumC=0;\nscanf(\"%d\",&n);\nlong long int a[10010]={0};\nfor(i=0;i<n;i++)\n{\nscanf(\"%lld\",&a[i]);\nsumA=sumA+a[i];\n}\nfor(i=0;i<n-1;i++)\n{\nscanf(\"%lld\",&a[i]);\nsumB=sumB+a[i];\n}\nfor(i=0;i<n-2;i++)\n{\nscanf(\"%lld\",&a[i]);\nsumC=sumC+a[i];\n}\nprintf(\"%lld\\n\",sumA-sumB);\nprintf(\"%lld\",sumB-sumC);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\nint n,i;\nlong long int sumo=0,sum1=0,sum2=0;\nscanf(\"%d\",&n);\nlong long int arr[100005]={0};\nfor(i=0;i<n;i++)\n{\nscanf(\"%lld\",&arr[i]);\nsumo=sumo+arr[i];\n}\nfor(i=0;i<n-1;i++)\n{\nscanf(\"%lld\",&arr[i]);\nsum1=sum1+arr[i];\n}\nfor(i=0;i<n-2;i++)\n{\nscanf(\"%lld\",&arr[i]);\nsum2=sum2+arr[i];\n}\nprintf(\"%lld\\n%lld\",sumo-sum1,sum1-sum2);\nreturn 0;\n}\n\n"}
{"similarity_score": 0.5586776859504132, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "3626a5ffca922711b64b54d7eac3935c", "bug_code_uid": "81375db8fbba292b92f5d13d1855ffb2", "src_uid": "dceeb739a56bb799550138aa8c127996", "apr_id": "ecde73c3284b7050acbd2d225f6f688c", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n,k,x,y=0,i;\n\ts2(n,k)\n\tint a[k+1];\n\trep(i,0,k)\n\ta[i]=0;\n\trep(i,0,n)\n\t{\n\t    s(x);\n\t    a[x]++;\n\t}\n\trep(i,0,k+1)\n\t{\n\t    if(a[i]%2!=0)\n            y++;\n\t}\n\tif(n%2==0)\n        p(n-(y/2+y%2))\n    else\n        p(n-(y/2))\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n,k,x,y=0,i;\n\tscanf(\"%d%d\",&n,&k);\n\tint a[k+1];\n\tfor(i=0;i<=k;i++)\n\ta[i]=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t    scanf(\"%d\",&x);\n\t    a[x]++;\n\t}\n\tfor(i=0;i<=k;i++)\n\t{\n\t    if(a[i]%2!=0)\n            y++;\n\t}\n\tif(n%2==0)\n        printf(\"%d\",n-(y/2+y%2));\n    else\n        printf(\"%d\",n-(y/2));\n    return 0;\n}\n\n"}
{"similarity_score": 0.9831181727904668, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fe548bb0f44b29ddb5b2ef33517add5e", "bug_code_uid": "7f0dae0a921d1adc83ea2a43c8aeebd4", "src_uid": "78f25e2bc4ff22dbac94f72af68a745f", "apr_id": "3364db20aab7145d75e468f20164a0bb", "difficulty": 900, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d;\n    scanf(\"%d\",&a);\n    while(a>0)\n    {\n        scanf(\"%d%d%d\",&b,&c,&d);\n           if(b<=d*10)\n           {\n            printf(\"YES\\n\");\n            continue;\n           }\n        while(c>0)\n        {\n            b=b/2+10;\n            if(b<=d*10)\n           {\n            printf(\"YES\\n\");\n            break;\n           }\n            c--;\n        }\n       if(c==0)\n       {\n           printf(\"NO\\n\");\n       }\n        a--;\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d;\n    scanf(\"%d\",&a);\n    while(a>0)\n    {\n        scanf(\"%d%d%d\",&b,&c,&d);\n           if(b<=d*10)\n           {\n            printf(\"YES\\n\");\n            a--;\n            continue;\n           }\n        while(c>0)\n        {\n            b=b/2+10;\n            if(b<=d*10)\n           {\n            printf(\"YES\\n\");\n            break;\n           }\n            c--;\n        }\n       if(c==0)\n       {\n           printf(\"NO\\n\");\n       }\n        a--;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9654576856649395, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4e9a229c84de1572d8610200a9082972", "bug_code_uid": "2c2973452d8ea720f73bc026360d4ab1", "src_uid": "a63cdbd1009a60c0f9b52e4ffbba252e", "apr_id": "2b4926ff7c149e26016a746e9366a296", "difficulty": 1400, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main(int argc, char const *argv[])\n{\n\tint grid[4][4];\n\tchar s[1004];\n\tfor (int i = 0; i < 4; ++i)\n\t\tfor (int j = 0; j < 4; ++j)\n\t\t\tgrid[i][j] = 0;\n\tscanf(\"%s\",s);\n\tint len = strlen(s);\n\tfor (int i = 0; i < len; ++i)\n\t{\n\t\tif(s[i] == '0')\n\t\t{\n\t\t\tint flag = 0;\n\t\t\tfor (int j = 0; j < 3; ++j)\n\t\t\t\tfor (int k = 0; k < 4; ++k)\n\t\t\t\t\tif(flag == 0 && grid[j][k] == 0 && grid[j+1][k] == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tgrid[j][k] = 1,grid[j+1][k] = 1;\n\t\t\t\t\t\tprintf(\"%d %d\\n\",j+1,k+1);\n\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\n\t\t\tint flag = 0;\n\t\t\tfor (int j = 0; j < 4; ++j)\n\t\t\t\tfor (int k = 0; k < 3; ++k)\n\t\t\t\t\tif(flag == 0 && grid[j][k] == 0 && grid[j][k+1] == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tgrid[j][k] = 1,grid[j][k+1] = 1;\n\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t\tprintf(\"%d %d\\n\",j+1,k+1);\n\n\t\t\t\t\t}\n\t\t}\n\t\tfor (int j = 0; j < 4; ++j)\n\t\t\tif(grid[0][j] == 1 && grid[1][j] == 1 && grid[2][j] == 1 && grid[3][j] == 1)\n\t\t\t\tgrid[0][j] = 0,grid[1][j] = 0, grid[2][j] =0, grid[3][j] = 0;\n\t\tfor (int j = 0; j < 4; ++j)\n\t\t\tif(grid[j][0] == 1 && grid[j][1] == 1 && grid[j][2] == 1 && grid[j][3] == 1)\n\t\t\t\tgrid[j][0] = 0,grid[j][1] = 0, grid[j][2] =0, grid[j][3] = 0;\n\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main(int argc, char const *argv[])\n{\n\tint grid[4][4];\n\tchar s[1004];\n\tfor (int i = 0; i < 4; ++i)\n\t\tfor (int j = 0; j < 4; ++j)\n\t\t\tgrid[i][j] = 0;\n\tscanf(\"%s\",s);\n\tint len = strlen(s);\n\tfor (int i = 0; i < len; ++i)\n\t{\n\t\tif(s[i] == '0')\n\t\t{\n\t\t\tint flag = 0;\n\t\t\tfor (int k = 0; k < 4; ++k)\n\t\t\t\tfor (int j = 0; j < 3; ++j)\n\t\t\t\t\tif(flag == 0 && grid[j][k] == 0 && grid[j+1][k] == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tgrid[j][k] = 1,grid[j+1][k] = 1;\n\t\t\t\t\t\tprintf(\"%d %d\\n\",j+1,k+1);\n\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\n\t\t\tint flag = 0;\n\t\t\tfor (int j = 0; j < 4; ++j)\n\t\t\t\tfor (int k = 0; k < 3; ++k)\n\t\t\t\t\tif(flag == 0 && grid[j][k] == 0 && grid[j][k+1] == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tgrid[j][k] = 1,grid[j][k+1] = 1;\n\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t\tprintf(\"%d %d\\n\",j+1,k+1);\n\n\t\t\t\t\t}\n\t\t}\n\t\tfor (int j = 0; j < 4; ++j)\n\t\t\tif(grid[0][j] == 1 && grid[1][j] == 1 && grid[2][j] == 1 && grid[3][j] == 1)\n\t\t\t\tgrid[0][j] = 0,grid[1][j] = 0, grid[2][j] =0, grid[3][j] = 0;\n\t\tfor (int j = 0; j < 4; ++j)\n\t\t\tif(grid[j][0] == 1 && grid[j][1] == 1 && grid[j][2] == 1 && grid[j][3] == 1)\n\t\t\t\tgrid[j][0] = 0,grid[j][1] = 0, grid[j][2] =0, grid[j][3] = 0;\n\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.982078853046595, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5eadd8788a0c9650ab2d546e5f0a1652", "bug_code_uid": "14d41916bb7ccbcfc38dd1017aac3e7b", "src_uid": "c34db7897f051b0de2f49f2696c6ee2f", "apr_id": "f9f7980a360cf954a04930260e6ebf32", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n  long long t;\r\n  scanf(\"%lld\",&t);\r\n  while(t--)\r\n  {\r\n    long long l,r,d,m;\r\n    scanf(\"%lld %lld\",&l,&r); \r\n    \r\n    if((r/2)+1 >=l)\r\n    {\r\n      printf(\"%lld\\n\",r%d);\r\n    }\r\n    else\r\n    {\r\n      printf(\"%lld\\n\",r%l);\r\n    }\r\n  }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n  long long t;\r\n  scanf(\"%lld\",&t);\r\n  while(t--)\r\n  {\r\n    long long l,r,d,m;\r\n    scanf(\"%lld %lld\",&l,&r); \r\n    \r\n    if((r/2)+1 >=l)\r\n    {\r\n      printf(\"%lld\\n\",r%((r/2)+1));\r\n    }\r\n    else\r\n    {\r\n      printf(\"%lld\\n\",r%l);\r\n    }\r\n  }\r\n}"}
{"similarity_score": 0.9823008849557522, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e01c987f325d336ebb2c919e3438b846", "bug_code_uid": "99b06e7f6b1ba368f1aca75432291ede", "src_uid": "6432a543eeee9833c6d849222ad6b93d", "apr_id": "658ba5c2be710e9dabdcd665a515fee7", "difficulty": 1000, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    unsigned long long int l,r,i;\n    scanf(\"%llu%llu\",&l,&r);\n    printf(\"YES\\n\");\n    for(i=1;i<=(l+r-1)/2;i++)\n    {\n        printf(\"%llu %llu\\n\",(l-1)+2*i-1,(l-1)+2*i);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    unsigned long long int l,r,i;\n    scanf(\"%llu%llu\",&l,&r);\n    printf(\"YES\\n\");\n    for(i=1;i<=(r-l+1)/2;i++)\n    {\n        printf(\"%llu %llu\\n\",(l-1)+2*i-1,(l-1)+2*i);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9525244913338358, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "b562f9273e8ebdf5b715e9ebd845efc6", "bug_code_uid": "ccdd8276f5d8e4db87d8590058303c2f", "src_uid": "5698e6fd934b9f6b847d7e30a3d06f2b", "apr_id": "f31195c4673b9cc876360cdd93aab34b", "difficulty": 800, "tags": ["brute force", "constructive algorithms"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t,n,i,a,flag,mx;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        flag=0;\r\n        mx=0;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a);\r\n            if(a<0)\r\n            {\r\n                flag=1;\r\n                break;\r\n            }\r\n            else\r\n            {\r\n                if(a>mx)\r\n                mx=a;\r\n            }\r\n        }\r\n        if(flag==1)\r\n        printf(\"NO\\n\");\r\n        else\r\n        {\r\n            printf(\"YES\\n\");\r\n            printf(\"%d\\n\",mx+1);\r\n            for(i=0;i<=mx;i++)\r\n            printf(\"%d \",i);\r\n            printf(\"\\n\");\r\n        }\r\n    }\r\n    reurn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t,n,i,a,flag=0,mx=0;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        flag=0;\r\n        mx=0;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a);\r\n            if(a<0)\r\n            flag=1;\r\n            else\r\n            {\r\n                if(a>mx)\r\n                mx=a;\r\n            }\r\n        }\r\n        if(flag==1)\r\n        printf(\"NO\\n\");\r\n        else\r\n        {\r\n            printf(\"YES\\n\");\r\n            printf(\"%d\\n\",mx+1);\r\n            for(i=0;i<=mx;i++)\r\n            printf(\"%d \",i);\r\n            printf(\"\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9977116704805492, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b957afdbb5f417636808a8e536ea6fc3", "bug_code_uid": "726a8578f443609c3559d73f36e611d2", "src_uid": "2b6e670b602a89b467975edf5226219a", "apr_id": "83420abf46cc46b402a2f5294e946d3b", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int A[t], B[t],C[t];\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%d%d\", A[i], B[i]);\r\n        C[i]=0;\r\n        if (A[i] == 0)\r\n        {\r\n           C[i]=1;\r\n        }\r\n        else\r\n        {\r\n           C[i]=(A[i] + 2 * B[i] + 1);\r\n        }\r\n    }\r\n    for (int i = 0; i < t; i++)\r\n    {  \r\n            printf(\"%d\\n\",C[i]);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int A[t], B[t],C[t];\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%d%d\", &A[i], &B[i]);\r\n        C[i]=0;\r\n        if (A[i] == 0)\r\n        {\r\n           C[i]=1;\r\n        }\r\n        else\r\n        {\r\n           C[i]=(A[i] + 2 * B[i] + 1);\r\n        }\r\n    }\r\n    for (int i = 0; i < t; i++)\r\n    {  \r\n            printf(\"%d\\n\",C[i]);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.89666951323655, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "fbafe02cc58487847f7a9e28f8fef403", "bug_code_uid": "bfe4c69f66572e132f8b39f45e16bd36", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "03af70f0d884e552d44343531a37f412", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\n\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\n\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    \n    int a[n];\n    for(int i = 0; i < n; i++){\n        scanf(\"%d\",&a[i]);\n    }\n    \n    int sum = 0;\n    for(int i = 0; i < n; i++){\n        sum += a[i];\n    }\n    \n    qsort(a, n, sizeof(int), cmpfunc);\n    \n    int ans = 0;\n    int tracker = 0;\n    int j = 0;\n    while(tracker <= sum/2){\n        j++;\n        ans++; \n        tracker += a[j];\n    }\n    \n    printf(\"%d\",ans);\n}\n    ", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\n\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)b - *(int*)a );\n}\n\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    \n    int a[n];\n    for(int i = 0; i < n; i++){\n        scanf(\"%d\",&a[i]);\n    }\n    \n    int sum = 0;\n    for(int i = 0; i < n; i++){\n        sum += a[i];\n    }\n    \n    qsort(a, n, sizeof(int), cmpfunc);\n    \n    int ans = 0;\n    int tracker = 0;\n    int j = 0;\n    while(tracker <= sum/2){\n        tracker += a[j];\n        j++;\n        ans++; \n        // printf(\"%d %d %d %d\\n\",ans,tracker,sum/2,a[j]);\n    }\n    \n    printf(\"%d\",ans);\n}\n    "}
{"similarity_score": 0.1827956989247312, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "4975b73bea76ef49de6c337506df2105", "bug_code_uid": "6f72d1c98bae88c254889115c81b24f1", "src_uid": "18b3d8f57ecc2b392c7b1708f75a477e", "apr_id": "8b52c80c6aa5ea202a6f00f1add97a63", "difficulty": 1200, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[100005];\nint arr[100005];\nint x[100005];\nint main()\n{\n    int n,k,i;\n    scanf(\"%d %d\",&n,&k);\n    for(i=1;i<=n;i++)\n    {\n                     if(k==1)\n                     break;\n      if(i==1){\n      arr[i]=1;\n      a[arr[i]]=1;}\n      else\n      {\n        if(arr[i-1]+k<=n)\n        {\n          if(a[arr[i-1]+k]!=1)\n          {\n            arr[i]=arr[i-1]+k;\n            a[arr[i-1]+k]=1;\n            k--;\n          }\n        }\n        else if(arr[i-1]-k>=1)\n        {\n             if(a[arr[i-1]-k]!=1)\n             {\n             arr[i]=arr[i-1]-k;\n             a[arr[i-1]-k]=1;\n             k--;\n        }\n        }\n      }\n    }\n    int l=0,j,c;\n    for(j=1;j<=n;j++)\n    {\n       if(a[j]!=1){\n       x[l]=j;\n       l++;} \n    } \n    for(j=i,c=0;j<=n;j++,c++)\n     {\n      arr[j]=x[c];\n      }                                \n    for(i=1;i<=n;i++)\n    printf(\"%d \",arr[i]);\n    \n    return 0;\n}                                    \n      \n                      ", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,i,j;\n    scanf(\"%d %d\",&n,&k);\n    for(i=1;i<=n-k;i++)\n    printf(\"%d \",i);\n    i--;\n    int val=i;\n    int p=1;\n    for(j=i;j<n;j++)\n    {\n      val=val+p*k;\n      printf(\"%d \",val);\n      if(k!=1)\n      p=p*-1;\n      k--;\n    }\n   \n    return 0;\n}\n                    "}
{"similarity_score": 0.9935125115848007, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "eca5d457cecf2c2b7de2d61da8b47dc5", "bug_code_uid": "8c7fc89eddd1116dc589268598b4799c", "src_uid": "ef32a8f37968629673547db574261a9d", "apr_id": "a4b4256208e98a2bd90b249c8dc48475", "difficulty": 1400, "tags": ["two pointers", "binary search", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n        int c,t,n,sum=0,cnt=0,f=0,ans=0;\n        scanf(\"%d %d\",&n,&t);\n        int a[n];\n        for(c=0;c<n;c++)\n        {\n                scanf(\"%d\",&a[c]);\n        }\n        for(c=0;c<n;c++)\n        {\n                sum+=a[c];\n                cnt++;\n                while(sum>t)\n                {\n                        cnt--;\n                        sum-=a[f];\n                        f++;\n                }\n                ans=ans>=sum?ans:cnt;\n        }\n        printf(\"%d\",ans);\n        return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n        int c,t,n,sum=0,cnt=0,f=0,ans=0;\n        scanf(\"%d %d\",&n,&t);\n        int a[n];\n        for(c=0;c<n;c++)\n        {\n                scanf(\"%d\",&a[c]);\n        }\n        for(c=0;c<n;c++)\n        {\n                sum+=a[c];\n                cnt++;\n                while(sum>t)\n                {\n                        cnt--;\n                        sum-=a[f];\n                        f++;\n                }\n                ans=ans>cnt?ans:cnt;\n        }\n        printf(\"%d\",ans);\n        return 0;\n}\n"}
{"similarity_score": 0.9973586899101955, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8f02e3fdeac0f5853caf4426af06aa4e", "bug_code_uid": "3f639eccf404e36fc0151f6af0d608ac", "src_uid": "fc831eda72f2ebe0865a3fb1b783edc5", "apr_id": "f487651fb194a9d52ea402dfd11777fc", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint scan_series();\nint scan()\n{\n    int n=0;\n    char ch;\n    ch=getchar();\n\n   while(ch<'0' ||  ch>'9'){\n      ch=getchar();\n      }\n    while(ch>='0' && ch<='9')\n    {\n\n        n=10*n+ (ch - '0');\n        ch=getchar();\n     }\n    return n;\n}\nint n,k;\nint main()\n{\n       int j=0;\n\n       n=scan();\n       k=scan();\n      // printf(\"N:%d K:%d\",n,k);\n       while(n--)\n       {\n           if(scan_series()){\n              j++;\n           }\n       }\n       printf(\"%d\",j);\n    return 0;\n}\n\nint scan_series()\n{\n     char ch;\n    ch=getchar();\n    int contin[10],i;\n   /*while(ch<'0' ||  ch>'9'){\n      ch=getchar();\n      }*/\n      //system(\"pause\");\n        while(ch>='0' && ch<='9')\n        {\n           //printf(\"%c\",ch);\n           contin[ch-'0']=1;\n           ch=getchar();\n        }\n        for(i=0;i<k;i++)\n        {\n            if(contin[i]!=1)\n                return 0;\n        }\n      return 1;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint scan_series();\nint scan()\n{\n    int n=0;\n    char ch;\n    ch=getchar();\n\n   while(ch<'0' ||  ch>'9'){\n      ch=getchar();\n      }\n    while(ch>='0' && ch<='9')\n    {\n\n        n=10*n+ (ch - '0');\n        ch=getchar();\n     }\n    return n;\n}\nint n,k;\nint main()\n{\n       int j=0;\n\n       n=scan();\n       k=scan();\n      // printf(\"N:%d K:%d\",n,k);\n       while(n--)\n       {\n           if(scan_series()){\n              j++;\n           }\n       }\n       printf(\"%d\",j);\n    return 0;\n}\n\nint scan_series()\n{\n     char ch;\n    ch=getchar();\n    int contin[10]={0},i;\n   /*while(ch<'0' ||  ch>'9'){\n      ch=getchar();\n      }*/\n      //system(\"pause\");\n        while(ch>='0' && ch<='9')\n        {\n           //printf(\"%c\",ch);\n           contin[ch-'0']=1;\n           ch=getchar();\n        }\n        for(i=0;i<=k;i++)\n        {\n            if(contin[i]!=1)\n                return 0;\n        }\n      return 1;\n}\n"}
{"similarity_score": 0.9989795918367347, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ad774724e8f7cb95767f05241e242614", "bug_code_uid": "f47b0372c4d9776df3292f5adb082550", "src_uid": "6db42771fdd582578194c7b69a4ef575", "apr_id": "15250b4d8abc2c25b30b82d61f62e817", "difficulty": 1100, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#include <ctype.h>\r\n#define MAX_LEN 200001\r\nchar num[MAX_LEN];\r\nint main() {\r\n    int n, len;\r\n    scanf(\"%d\", &n);\r\n    for (int tc = 0; tc < n; tc++) {\r\n        scanf(\"%s\", &num);\r\n        len = strlen(num);\r\n        if (len == 2) {\r\n            printf(\"%d\", num[0]-'0'+num[1]-'0');\r\n            continue;\r\n        }\r\n        // check if reduction preserves length\r\n        int done_flag = 0;\r\n        for (char* pc = num+len-2; pc >= num; pc--) {\r\n            int val = *pc - '0' + *(pc+1) - '0';\r\n            if (val >= 10) {\r\n                *pc = val / 10 + '0';\r\n                *(pc+1) = val % 10 + '0';\r\n                printf(\"%s\\n\", num);\r\n                done_flag = 1;\r\n                break;\r\n            }\r\n        }\r\n        if (done_flag) {\r\n            continue;\r\n        }\r\n        // otherwise apply at leftmost position\r\n        num[1] = num[0] - '0' + num[1];\r\n        printf(\"%s\\n\", num+1);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#include <ctype.h>\r\n#define MAX_LEN 200001\r\nchar num[MAX_LEN];\r\nint main() {\r\n    int n, len;\r\n    scanf(\"%d\", &n);\r\n    for (int tc = 0; tc < n; tc++) {\r\n        scanf(\"%s\", &num);\r\n        len = strlen(num);\r\n        if (len == 2) {\r\n            printf(\"%d\\n\", num[0]-'0'+num[1]-'0');\r\n            continue;\r\n        }\r\n        // check if reduction preserves length\r\n        int done_flag = 0;\r\n        for (char* pc = num+len-2; pc >= num; pc--) {\r\n            int val = *pc - '0' + *(pc+1) - '0';\r\n            if (val >= 10) {\r\n                *pc = val / 10 + '0';\r\n                *(pc+1) = val % 10 + '0';\r\n                printf(\"%s\\n\", num);\r\n                done_flag = 1;\r\n                break;\r\n            }\r\n        }\r\n        if (done_flag) {\r\n            continue;\r\n        }\r\n        // otherwise apply at leftmost position\r\n        num[1] = num[0] - '0' + num[1];\r\n        printf(\"%s\\n\", num+1);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9425142135186355, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ecf7bc4f7343dbb79fd923162eb790cd", "bug_code_uid": "faa6bff705f2534f3d5e86f2ba1d5bf0", "src_uid": "ca6b162f945d4216055bf92d7263dbd5", "apr_id": "425316750a1fa1e8bb7912e89ea1dd03", "difficulty": 800, "tags": ["math", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    \r\n    for(int i=0;i<T;i++)\r\n    {\r\n        int a=0,b=0,c=0;\r\n         char A[50];\r\n         scanf(\"%s\",A);\r\n         for(int i=0;i<50;i++)\r\n         {\r\n             if(A[i]=='A')\r\n             {\r\n              \r\n               a++;\r\n             }\r\n             else if(A[i]=='B')\r\n             {\r\n                 \r\n                 b++;\r\n             }\r\n             else if(A[i]=='C')\r\n             {\r\n                \r\n                 c++;\r\n                 \r\n             }\r\n             else\r\n             break;\r\n         }\r\n         if(b==(a+c))\r\n         {\r\n             printf(\"YES\");\r\n         }\r\n         else\r\n         {\r\n             printf(\"NO\");\r\n         }\r\n    }     \r\n         \r\n         \r\n         \r\n        \r\n    \r\n    return 0;\r\n    \r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n \r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    \r\n    for(int i=0;i<T;i++)\r\n    {\r\n        int a=0,b=0,c=0;\r\n         char A[50];\r\n         scanf(\"%s\",A);\r\n         for(int i=0;i<50;i++)\r\n         {\r\n             if(A[i]=='A')\r\n             {\r\n              \r\n               a++;\r\n             }\r\n             else if(A[i]=='B')\r\n             {\r\n                 \r\n                 b++;\r\n             }\r\n             else if(A[i]=='C')\r\n             {\r\n                \r\n                 c++;\r\n                 \r\n             }\r\n             else\r\n             break;\r\n         }\r\n         if(b==(a+c))\r\n         {\r\n             printf(\"YES\\n\");\r\n         }\r\n         else\r\n         {\r\n             printf(\"NO\\n\");\r\n         }\r\n    } \r\n    return 0;\r\n    \r\n}"}
{"similarity_score": 0.9826771653543307, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "97f583621ff678c3bb9c44628dd0db46", "bug_code_uid": "5001fce5879df648524117ea51cba12c", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "a053a3f54591f1aa39a446b5c2cf3f19", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": " #include <stdio.h>\n #include <math.h>\nint main()\n{\n    int i, n;\n    scanf(\"%d\",&n);\n    char a[n+1], b[n+1], c=0, j;\n    scanf(\"%s\", a);\n    scanf(\"%s\", b);\n    for(i=0; i<n; i++){\n        j=abs(a[i]-b[i]);\n        if(j>=5){\n            j=10-j;\n        }\n        c=c+j;\n    }\n    printf(\"%d\\n\", c);\n    return 0;\n}\n\n", "fixed": " #include <stdio.h>\n #include <math.h>\nint main()\n{\n    int i, n, c=0;\n    scanf(\"%d\",&n);\n    char a[n+1], b[n+1], j;\n    scanf(\"%s\", a);\n    scanf(\"%s\", b);\n    for(i=0; i<n; i++){\n        j=abs(a[i]-b[i]);\n        if(j>=5){\n            j=10-j;\n        }\n        c=c+j;\n    }\n    printf(\"%d\\n\", c);\n    return 0;\n}\n"}
{"similarity_score": 0.49170251997541486, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "9da1bf8ff25c124795bd7d1727451f95", "bug_code_uid": "38bd46d9a14db3a291ca3f539e45c8b8", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "562d4b8ce35c01e10c7760b1ab31bf93", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    int i;\n    int found = 0;\n    char course[i][6];\n    scanf(\"%d\",&n);\n    for(i = 0;i<n;i++)\n    {\n        scanf(\"%s\",&course[i][6]);\n        \n    }\n    for(i = 0;i<n;i++)\n    {\n        if(course[i][0]=='O'&&course[i][1]=='O')\n           {\n               course[i][0] = course[i][1] = '+';\n               found = 1;\n               break;\n           }\n          else if(course[i][3]=='O'&&course[i][4]=='O')\n           {\n               course[i][3] = '+';\n               course[i][4] = '+';\n               found = 1;\n               break;\n           }\n        \n    }\n    if(found == 1)\n    {\n        printf(\"YES\\n\");\n        for(i = 0;i<n;i++)\n        {\n            printf(\"%s\\n\",course[i]);\n        }\n    }\n    else\n    {\n        printf(\"NO\\n\");\n    }\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    int i;\n    scanf(\"%d\",&n);\n    char course[n][6];\n    int found = 0;\n    \n    for(i = 0;i<n;i++)\n    {\n        scanf(\"%s\",&course[i]);\n        \n        if(course[i][0]=='O'&&course[i][1]=='O'&&found == 0)\n           {\n               course[i][0] = '+';\n               course[i][1] = '+';\n               found = 1;\n           }\n          else if(course[i][3]=='O'&&course[i][4]=='O'&&found == 0)\n           {\n               course[i][3] = '+';\n               course[i][4] = '+';\n               found = 1;\n           }\n        \n    }\n    if(found == 1)\n    {\n        printf(\"YES\\n\");\n        for(i = 0;i<n;i++)\n        {\n            printf(\"%s\\n\",course[i]);\n        }\n    }\n    else\n    {\n        printf(\"NO\\n\");\n        return 0;\n    }\n    \n    return 0;\n}\n\n\n\n"}
{"similarity_score": 0.9877551020408163, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "17196aa9332ec9344b54b1bf144b71a4", "bug_code_uid": "ab910e430b0765980a57aa3e6de2a61d", "src_uid": "eb3155f0e6ba088308fa942f3572f582", "apr_id": "ff57e474de7621551700ff78e3cd6fb4", "difficulty": 1300, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint lookUp(int num){\n\tif(num == 4)\n\t\treturn 0;\n\telse if(num == 8)\n\t\treturn 1;\n\telse if(num == 15)\n\t\treturn 2;\n\telse if(num == 16)\n\t\treturn 3;\n\telse if(num == 23)\n\t\treturn 4;\n\telse if(num == 42)\n\t\treturn 5;\n\telse\n\t\treturn -1;\n}\n\nint main(int arg, char** argv){\n\tint elements, n;\n\tscanf(\"%d\", &elements);\n\tn = elements;\n\n\tint i;\n\tint cnt[6];\n\tfor(i = 0; i < 6; i++){\n\t\tcnt[i] = 0;\n\t}\n\n\tint num;\n\twhile(elements--){\n\t\tscanf(\"%d\", &num);\n\t\tif(num == 4){\n\t\t\tcnt[0]++;\n\t\t\tcontinue;\n\t\t}\n\t\ti = lookUp(num);\n\t\tif(cnt[i-1] > 0){\n\t\t\tcnt[i]++;\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\", n-(6*cnt[5]));\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint lookUp(int num){\n\tif(num == 4)\n\t\treturn 0;\n\telse if(num == 8)\n\t\treturn 1;\n\telse if(num == 15)\n\t\treturn 2;\n\telse if(num == 16)\n\t\treturn 3;\n\telse if(num == 23)\n\t\treturn 4;\n\telse if(num == 42)\n\t\treturn 5;\n\telse\n\t\treturn -1;\n}\n\nint main(int arg, char** argv){\n\tint elements, n;\n\tscanf(\"%d\", &elements);\n\tn = elements;\n\n\tint i;\n\tint cnt[6];\n\tfor(i = 0; i < 6; i++){\n\t\tcnt[i] = 0;\n\t}\n\n\tint num;\n\twhile(elements--){\n\t\tscanf(\"%d\", &num);\n\t\tif(num == 4){\n\t\t\tcnt[0]++;\n\t\t\tcontinue;\n\t\t}\n\t\ti = lookUp(num);\n\t\tif(cnt[i-1] > 0){\n\t\t\tcnt[i-1]--;\n\t\t\tcnt[i]++;\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\", n-(6*cnt[5]));\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9826937547027841, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "923e240c83e9d3479522569c13469221", "bug_code_uid": "7be9058df34292d5ff13f5e5a3de58ec", "src_uid": "480defc596ee5bc800ea569fd76dc584", "apr_id": "a85851810bb5e36508443b2dccec74d1", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\nlong int a[26]={0};\nint main ()\n{\n  long int n, k,result;\n  char s[100005];\n  scanf (\"%ld %ld\", &n, &k);\n  scanf (\"%s\", s);\n  for(int i=0;s[i]!='\\0';i++)\n    {\n        a[s[i]-65]++;\n    }\n    for(int i=0;i<26;i++)\n    {\n        for(int j=i;j<26;j++)\n        {\n            if(a[i]<a[j])\n            {\n                long int temp=a[i];\n                a[i]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n    for(int i=0;i<26;i++)\n    {\n        long int temp=(a[i]<k)?a[i]:k;\n        result+=temp*temp;\n        k-=temp;\n        if(k==0)\n        break;\n    }\n    printf(\"%ld\",result);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\nlong long int a[26]={0};\nint main ()\n{\n  long long int n, k,result;\n  char s[100005];\n  scanf (\"%lld %lld\", &n, &k);\n  scanf (\"%s\", s);\n  for(int i=0;s[i]!='\\0';i++)\n    {\n        a[s[i]-65]++;\n    }\n    for(int i=0;i<26;i++)\n    {\n        for(int j=i;j<26;j++)\n        {\n            if(a[i]<a[j])\n            {\n                long long int temp=a[i];\n                a[i]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n    for(int i=0;i<26;i++)\n    {\n        long long int temp=(a[i]<k)?a[i]:k;\n        result+=temp*temp;\n        k-=temp;\n        if(k==0)\n        break;\n    }\n    printf(\"%lld\",result);\n    return 0;\n}\n"}
{"similarity_score": 0.47114474929044464, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "bb115af61ffa1e22c2305868e43bcb2e", "bug_code_uid": "82d6f050663e335b4fab23a1c504b730", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "b0ad4ccfad221518c737ffca5e43066a", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\n\tint min = 1000,max = -1,i,n;\n\tscanf(\"%d\",&n);\n\tint b[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t\tif(max<=b[i])\n\t\t\tmax=b[i];\n\t\tif(min>=b[i])\n\t\t\tmin=b[i];\n\t}\n\tint maxdiff = max-min;\n\t//now i will print the difference max - min and the num of ways to do it\n\t// and i want distinct possible \t\t\n\tint j,d=0,c=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=i+1;j<n;j++)\n\t\t{\n\t\t\td=abs(b[j]-b[i]);\n\t\t\tif(d==maxdiff)\n\t\t\t\tc++;\t\n\t\t}\n\t}\n\tprintf(\"%d %d\",maxdiff,c);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\n\tlong long int min = 99999999999,max = -1,i,n;\n\tscanf(\"%I64d\",&n);\n\tlong long int b[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64d\",&b[i]);\n\t\tif(max<=b[i])\n\t\t\tmax=b[i];\n\t\tif(min>=b[i])\n\t\t\tmin=b[i];\n\t}\n\tlong long int maxdiff = max-min;\n\tunsigned long long int maxc=0,minc=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(b[i]==max)\n\t\t\tmaxc++;\t\n\t\tif(b[i]==min)\n\t\t\tminc++;\t\n\t}\n\tunsigned long long int c = maxc*minc;\n\tif(max==min)\n\t\tc=(maxc*(maxc-1))/2;\n\tprintf(\"%I64d %I64u\",maxdiff,c);\n\treturn 0;\n}"}
{"similarity_score": 0.17119838872104734, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "f75832e3e52b5e40a5534a84074bb178", "bug_code_uid": "0afb69949bb1b29069c4e2eed85a537c", "src_uid": "9f095a5f5b39d8c2f99c4162f2d7c5ff", "apr_id": "01daebfc3a9320d571ef5b0f90d43ebf", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,n,k;\n    scanf(\"%d %d\",&n,&k);\n    int a[n];\n    int count=0,j=0;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0; i<n; i++)\n    {\n        if(a[i]<=k)\n            count++;\n        else\n        {\n            j=1;\n            break;\n        }\n    }\n    if(j!=0)\n    {\n        for(i=n-1; i>=0; i--)\n        {\n            if(a[i]<=k)\n                count++;\n            else\n                break;\n        }\n    }\n\n    printf(\"%d\\n\",count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,k,i,j,l,p=0;\n    scanf(\"%d %d\",&n,&k);\n    char s[n];\n    scanf(\"%s\",s);\n    for(i=97;i<=122;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            if(s[j]==i)\n            {\n                s[j]=48;\n                p++;\n            }\n            if(p==k) break;\n        }\n        if(p==k) break;\n    }\n    for(i=0;i<n;i++)\n    {\n        if(s[i]!=48) printf(\"%c\",s[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.6341463414634146, "equal_cnt": 30, "replace_cnt": 26, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 30, "lang": "GNU C11", "fix_code_uid": "d402e1be90f86d42e9c9e5a078c2e8b5", "bug_code_uid": "885c7e6ccd3332c4f71da0460d9040c6", "src_uid": "7fce446de3b01aff8f4aa420a92a096d", "apr_id": "6e4c7db50053351deffbc45214daf8ec", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n\tint t, n, m;\n\tint a[10][10];\n\tfor (int i = 0; i < 10; i++) {\n\t\tfor (int j = 0; j < 10; j++) {\n\t\t\ta[i][j] = 0;\n\t\t}\n\t}\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tint nums = 0, f = 0, max = -100;\n\t\tscanf(\"%d%d\", &n, &m);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tscanf(\"%d\", &a[i][j]);\n\t\t\t\tif (a[i][j] < 0) {\n\t\t\t\t\tnums++;\n\t\t\t\t\tif (a[i][j] > max)max = a[i][j];\n\t\t\t\t}\n\t\t\t\tif (a[i][j] == 0)f = 1;\n\t\t\t}\n\t\t}\n\t\tint acount = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tacount += abs(a[i][j]);\n\t\t\t}\n\t\t}\n\t\tif (f == 1 || nums % 2 == 0) {\n\t\t\tprintf(\"%d\\n\", acount);\n\t\t}\n\t\telse {\n\t\t\tprintf(\"%d\\n\", acount + 2 * max);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main() {\n    int t,n,m;\n    int a[10][10];\n    for (int i = 0; i < 10; i++) {\n        for (int j = 0; j < 10; j++) {\n            a[i][j] = 0;\n        }\n    }\n    scanf(\"%d\", &t);\n    while (t--) {\n        int nums = 0,f=0,min=100;\n        scanf(\"%d%d\", &n,&m);\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                scanf(\"%d\", &a[i][j]);\n                if (a[i][j] < 0) {\n                    nums++;\n                }\n            if(abs(a[i][j])<min)min=abs(a[i][j]);\n                if (a[i][j] == 0)f = 1;\n            }\n        }\n        int acount = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                acount += abs(a[i][j]);\n            }\n        }\n        if (f == 1 || nums % 2 == 0) {\n            printf(\"%d\\n\", acount);\n        }\n        else {\n            printf(\"%d\\n\", acount -2*min);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5271966527196653, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "1ffd767d2f4c62dcf59cf461f4bc53e4", "bug_code_uid": "6b57522b079ba5c0e2eae37f899f81c8", "src_uid": "74cbcbafbffc363137a02697952a8539", "apr_id": "98c42b829e102745385bcf0941691c59", "difficulty": 1200, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int i,j,k,n,key1,key2,num=0;\n    scanf(\"%d\",&n);\n    key1=1+power(2,n)+power(3,n)+power(4,n);\n    key2=key1%5;\n    printf(\"%d\\n\",key2 );\n    return 0;\n}\nint power(int x, int y)\n{\n    int temp;\n    if( y == 0)\n       return 1;\n    temp = power(x, y/2);       \n    if (y%2 == 0)\n        return temp*temp;\n    else\n    {\n        if(y > 0)\n            return x*temp*temp;\n        else\n            return (temp*temp)/x;\n    }\n}  ", "fixed": "#include <stdio.h>\nint main()\n{\n    int i,j,k,n,key1,key2,num=0;\n    scanf(\"%d\",&n);\n    //key1=1+power(2,n)+power(3,n)+power(4,n);\n    //key2=key1%5;\n    if(n%4==0)\n    {\n        printf(\"4\");\n    }\n    else\n    {\n        printf(\"0\");\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9512605042016806, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d86ba47950744fcd898b5a9b62087a61", "bug_code_uid": "26667bb9b6d1728662f4abca96a93a2d", "src_uid": "9afcf090806cc9c3b87120b1b61f8f17", "apr_id": "672ab837ffa2c7cdec9f3372c6879a1c", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    long int x,y,a,b;\n    scanf(\"%d\",&n);\n    while(n>0)\n {\n     scanf(\"%ld %ld %ld %ld\",x,y,a,b);\n     long int sub,add;\n     sub=y-x;\n     add=a+b;\n     if(sub%add ==0)\n     printf(\"%ld\",sub/add);\n     else \n     printf(\"-1\");\n }\n}\n     \n     \n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    long int x,y,a,b;\n    scanf(\"%d\",&n);\n    while(n>0)\n {\n     scanf(\"%ld %ld %ld %ld\",&x,&y,&a,&b);\n     long int sub,add;\n     sub=y-x;\n     add=a+b;\n     if(sub%add ==0)\n     printf(\"%ld\\n\",sub/add);\n     else \n     printf(\"-1\\n\");\n     n--; \n }\n}\n     \n     \n"}
{"similarity_score": 0.9836280288146693, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "d8d0bc6b97d6bacd04cd0b17b6c4af4d", "bug_code_uid": "9c8ae9ab5561a2f729cd1701168f1e8a", "src_uid": "43bb8fec6b0636d88ce30f23b61be39f", "apr_id": "efe89dfb0401015afac8626b7c4c0c38", "difficulty": 1100, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    char a[1000];\n\n    float f,total;\n    int i,j,n,h,m=0,M=0,x,h1,q;\n\n    for(i=0;i<1000;i++)\n    {\n        scanf(\"%c\",&a[i]);\n\n        if(a[i]=='\\n')break;\n    }\n    scanf(\" %d\",&n);\n\n\n    total=i;\n    h=total/n;\n\n    f=total/n;\n    //printf(\"%d %f\\n\",h,f);\n\n    if(h!=f)printf(\"NO\");\n\n    h1=h-1;\n\n    for(x=0;x<n;x++)\n    {\n        if(h!=f)break;\n\n    /*for(i=h,j=total-1;i<total,j>=h;i++,j--)\n    {\n        if(a[i]==a[j])m++;\n    }*/\n    for(i=0,j=h-1;i<h,j>=0;i++,j--)\n    {\n        if(a[i]==a[j])M++;\n    }\n    for(q=0;q<h;q++)\n    {\n        h1++;\n        a[q]=a[h1];\n\n    }\n    //if(m==h&&M==h)printf(\"yes\");\n\n    //else printf(\"NO\");\n    }\n    if(M==n*h)printf(\"YES\");\n    else printf(\"NO\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    char a[10000];\n\n    float f,total;\n    int i,j,n,h,m=0,M=0,x,h1,q;\n\n    for(i=0;i<10000;i++)\n    {\n        scanf(\"%c\",&a[i]);\n\n        if(a[i]=='\\n')break;\n    }\n    scanf(\" %d\",&n);\n\n\n    total=i;\n    h=total/n;\n\n    f=total/n;\n    //printf(\"%d %f\\n\",h,f);\n\n    if(h!=f)printf(\"NO\");\n\n    h1=h-1;\n    if(h==f)\n    {\n    for(x=0;x<n;x++)\n    {\n        if(h!=f)break;\n\n    /*for(i=h,j=total-1;i<total,j>=h;i++,j--)\n    {\n        if(a[i]==a[j])m++;\n    }*/\n    for(i=0,j=h-1;i<h,j>=0;i++,j--)\n    {\n        if(a[i]==a[j])M++;\n    }\n    for(q=0;q<h;q++)\n    {\n        h1++;\n        a[q]=a[h1];\n\n    }\n    //if(m==h&&M==h)printf(\"yes\");\n\n    //else printf(\"NO\");\n    }\n    if(M==n*h)printf(\"YES\");\n    else printf(\"NO\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5775978407557355, "equal_cnt": 25, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 12, "fix_ops_cnt": 25, "lang": "GNU C11", "fix_code_uid": "1f8c46c9b49678ba54b4038f1d8375a6", "bug_code_uid": "bf34599b8bee24433e5b22b6419f9d8c", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "09b1e5dc37269a4e42eda6faff819712", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n\n int e=0,d;\n//scanf(\"%11d %11d\",&a,&b);\n\n//long long int x[a],y[a],m[a],n[a],temp=0;\n\n for(d=0;d<t;d++)\n {\nlong long int n,c,a;\nscanf(\"%11d\",&n);\nfor(c=2;c<n;c++)\n{\na=pow(2,c)-1;\nif(n%a==0)\n{\n    printf(\"%11d\\n\",n/a);\nbreak;\n}\n }\n }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\n#include<math.h>\n \nint main()\n{\n   int t;\n   scanf(\"%d\", &t);\n   for(int r=0;r<t;r++)\n   {\n       long long int n,i,sum;\n       scanf(\"%lld\", &n);\n       for(i=2;i<n;i++)\n       {\n           sum=pow(2,i)-1;\n           if(n%sum==0)\n           {\n               printf(\"%lld\\n\", n/sum);\n               break;\n           }\n       }\n   }\n}"}
{"similarity_score": 0.3197729422894986, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "65d187ebbd1c7e3ff837a5c75bb0026d", "bug_code_uid": "3abeda16a08e834164217decc9846d88", "src_uid": "9d46ae53e6dc8dc54f732ec93a82ded3", "apr_id": "bc3cdf26831358d5f2a1ff6175abc0de", "difficulty": 1400, "tags": ["constructive algorithms", "greedy", "math", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nvoid swap(char *a,char *b){\n    char t;\n    t=*a;\n    *a=*b;\n    *b=t;\n}\n\nint main()\n{\n    char str[200010];\n    scanf(\"%s\",str);\n\n    int len=strlen(str),m=0;\n    scanf(\"%d\",&m);\n\n\n    int a,i=0,k=0,j=0;\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&a);\n\n\n        for(j=a-1,k=len-a;j<k;j++,k--){\n            swap(&str[j],&str[k]);\n        }\n        //swap(&str[a-1],&str[len-a]);\n    }\n\n\n    printf(\"%s\",str);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int m,count[100010]={0},i,a,len=0;\n    char str[200010],temp;\n    scanf(\"%s\",str);\n\n    len=strlen(str);\n\n    scanf(\"%d\",&m);\n\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&a);\n        count[a-1]++;\n    }\n\n    if(count[0]%2==1){\n        temp=str[0];\n        str[0]=str[len-1];\n        str[len-1]=temp;\n    }\n\n    for(i=1;i<=len/2-1;i++){\n        count[i]+=count[i-1];\n\n        if(count[i]%2==1){\n            temp=str[i];\n            str[i]=str[len-i-1];\n            str[len-i-1]=temp;\n        }\n    }\n\n    printf(\"%s\",str);\n    return 0;\n}\n"}
{"similarity_score": 0.9985443959243085, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c284c7f945e75ff092a849fab5c86903", "bug_code_uid": "690badd6ca1f7ddabca0ae4de527a7c5", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "a24f90136f910dc1eec8e37687e5b7b8", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,n,arr[10000],crime=0,recruits=0;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n    for(i=0; i<n; i++)\n    {\n        if(arr[i]>-1) recruits=recruits+arr[i];\n        else if(recruits>0) recruits--;\n        else crime++;\n    }\n    printf(\"%d\",crime);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,n,arr[100000],crime=0,recruits=0;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n    for(i=0; i<n; i++)\n    {\n        if(arr[i]>-1) recruits=recruits+arr[i];\n        else if(recruits>0) recruits--;\n        else crime++;\n    }\n    printf(\"%d\",crime);\n    return 0;\n}\n"}
{"similarity_score": 0.5080091533180778, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "dcd5b8ccba0e3273df0dfc196b22eaf1", "bug_code_uid": "5136a33cdb092ff1115b8492488bf885", "src_uid": "6c9cbe714f8f594654ebc59b6059b30a", "apr_id": "499c752a86e12bc24b2be797ba790344", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{int n,i,k=0,s=0,a[20000];\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{scanf(\"%d\",&a[i]);\ns=s+a[i];}\ndo{s=s-3;\nk++;}\nwhile(s>2);\nprintf(\"%d\",k);\nreturn 0;}\n", "fixed": "#include<stdio.h>\nint main()\n{int n,i,one=0,two=0,gr=0,a[200000];\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{scanf(\"%d\",&a[i]);\nif (a[i]==1)\none++;\nif (a[i]==2)\n    two++;\n}\nwhile (one >=1 && two >=1)\n{\n gr++;\n one--;\n two--;\n}\ngr=gr+(one/3);\nprintf(\"%d\",gr);\nreturn 0;}\n"}
{"similarity_score": 0.9688013136288999, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ecdb00c7d52f9b43ed81195e306b33d0", "bug_code_uid": "edd98c30b7a62ee8dd272a5afef08039", "src_uid": "74cbcbafbffc363137a02697952a8539", "apr_id": "6474974096ef5d17f91baa23e213dcf5", "difficulty": 1200, "tags": ["number theory", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint main() {\n    char s[1000000];\n    scanf(\"%s\", s);\n    \n    int len = strlen(s);\n    \n    int c1 = s[len-1] - '0';\n    int c2 = s[len-2] - '0';\n    \n    int n = c2*10 + c1;\n    \n    if (n%4 == 0) { printf(\"4\"); } else printf(\"0\");\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint main() {\n    char s[1000000];\n    scanf(\"%s\", s);\n    \n    int len = strlen(s);\n    \n    int c1 = s[len-1] - '0';\n    int c2 = s[len-2] - '0';\n    \n    int n = c2*10 + c1;\n    \n    if (n%4 == 0) { printf(\"4\"); } else printf(\"0\");\n    \n    return 0;\n}"}
{"similarity_score": 0.9, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "cb60d9998825dd5deefd64c8ea5c9175", "bug_code_uid": "7c58e23b23c77b706f91f8289d353afe", "src_uid": "db9065d975878227a749083f0036a169", "apr_id": "81b905a79c6d762392ffed10242ebf0d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int a[4];\n    int i;\n    for(i=0;i<4;i++)\n        scanf(\"%d\",&a[i]);\n    char b[100];\n    scanf(\"%s\",b);\n    int sum=0,t;\n    for(i=0;b[i]!='\\0';i++)\n    {\n        t=b[i]-'0';\n        sum+=a[t-1];\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int a[4];\n    char b[1000000];\n    int i;\n    for(i=0;i<4;i++)\n        scanf(\"%d\",&a[i]);\n    int sum=0,t;\n    scanf(\"%s\",b);\n    for(i=0;b[i]!='\\0';i++)\n    {\n        t=b[i]-'0';\n        sum+=a[t-1];\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.6746794871794872, "equal_cnt": 18, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 13, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "65e0ca6e715f4271162d8e6f764df4ab", "bug_code_uid": "ac9c986b5b863160befcab09207e51cc", "src_uid": "4d7de18e76600777ff023e1b61366ee4", "apr_id": "3af3d4ca2ff6fe959146baebeb26ff25", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint cmp(int *a,int *b)\n{\n    return *a-*b;\n}\nint c[100010];\nint main()\n{\n    int n,d,a,b,i,x,y;\n    scanf(\"%d%d\",&n,&d);\n    scanf(\"%d%d\",&a,&b);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        c[i]=x*a+b*y;\n    }\n    qsort(c,n,sizeof(int),cmp);\n    for(i=0;i<n;i++)\n    {\n        if(d<c[i])\n        break;\n        d-=c[i];\n    }\n    printf(\"%d\\n\",i);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nstruct c\n{\n    int v,num;\n}cc[100010];\ntypedef struct c c;\nint cmp1(c *a,c *b)\n{\n    return a->v-b->v;\n}\nint cmp2(int *a,int *b)\n{\n    return *a-*b;\n}\nint ans[100010];\nint main()\n{\n       int n,d,a,b,i,x,y;\n    scanf(\"%d%d\",&n,&d);\n    scanf(\"%d%d\",&a,&b);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        cc[i].v=x*a+b*y;\n        cc[i].num=i+1;\n    }\n    qsort(cc,n,sizeof(c),cmp1);\n    int num=0;\n    for(i=0;i<n;i++)\n    {\n        if(d<cc[i].v)\n        break;\n        d-=cc[i].v;\n        ans[num++]=cc[i].num;\n    }\n    qsort(ans,i,sizeof(int),cmp2);\n    printf(\"%d\\n\",i);\n    for(i=0;i<num;i++)\n    {\n        printf(\"%d\",ans[i]);\n        if(i==num-1)\n        printf(\"\\n\");\n        else\n        printf(\" \");\n    }\n    return 0;\n}"}
{"similarity_score": 0.7054545454545454, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "5de6d5a80b47fe11471cbc56b8546e44", "bug_code_uid": "10a82af7e8e843c811e8c449e055df59", "src_uid": "f336b622fdaf5960032268641320bb53", "apr_id": "71702d5284f1dedf7362957c847f4e09", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int main()\n{\n    int n,m,flag,count=0;\n    scanf(\"%d %d\",&n,&m);\n    int l[200],r[200];\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&l[i],&r[i]);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        flag=0;\n        for(int j=0;j<n;j++)\n        {\n            if(i>=l[j] && i<=r[j])\n            {\n                flag++;\n            }\n        }\n        if(flag==0)\n        {\n            count++;\n            printf(\"%d \",i);\n        }\n    }\n    if(count==0)\n        printf(\"0\");\n    return 0;\n}\n", "fixed": "int main()\n{\n    int n,m,flag,count=0;\n    scanf(\"%d %d\",&n,&m);\n    int l[200],r[200];\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&l[i],&r[i]);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        flag=0;\n        for(int j=0;j<n;j++)\n        {\n            if(i>=l[j] && i<=r[j])\n            {\n                flag++;\n                break;\n            }\n        }\n        if(flag==0)\n        {\n            count++;\n            //printf(\"%d \",i);\n        }\n    }\n    if(count==0)\n        printf(\"0\");\n    else\n    {\n        printf(\"%d\\n\",count);\n        for(int i=1;i<=m;i++)\n    {\n        flag=0;\n        for(int j=0;j<n;j++)\n        {\n            if(i>=l[j] && i<=r[j])\n            {\n                flag++;\n                break;\n            }\n        }\n        if(flag==0)\n        {\n            //count++;\n            printf(\"%d \",i);\n        }\n    }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9892086330935251, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c5fa80aa7621099abf4d3664a77e7cc9", "bug_code_uid": "eb979661f15b54f53a493a23a3a9c0a6", "src_uid": "c249103153c5006e9b37bf15a51fe261", "apr_id": "91faf0f35daff26ab6e8dfce0cadb6f7", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j;\n    scanf(\"%d%d\",&n,&m);\n    int a[10001]={0};\n\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&j);\n        a[j]++;\n    }\n    int ans=n+1;\n    for(i=1;i<=n;i++)\n        ans=ans<a[i]?ans:a[i];\n    printf(\"%d\\n\",ans);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j;\n    scanf(\"%d%d\",&n,&m);\n    int a[10001]={0};\n\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&j);\n        a[j]++;\n    }\n    int ans=1e9;\n    for(i=1;i<=n;i++)\n        ans=ans<a[i]?ans:a[i];\n    printf(\"%d\\n\",ans);\n    return 0;\n}"}
{"similarity_score": 0.44912923923006415, "equal_cnt": 14, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "73bdec3212a4a2bb83ee2e773674af4f", "bug_code_uid": "a28a33c3406fd1c25ae1d9ddbd696cd4", "src_uid": "eb1bb862dc2b0094383192f6998891c5", "apr_id": "ba4ecdd6609200c582df947f9e8d0a9a", "difficulty": 1400, "tags": ["data structures", "constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define limit  1000\nint main()\n{\n    long long int t;\n    scanf(\"%lld\",&t);\n    long long int a[200001],b[200001],i,j,count=0;\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld\",&b[i]);\n    }\n    for(i=0;i<t;i++)\n    {\n            if(a[0]==b[i])\n            {\n               for(j=0;j<t;j++)\n               {\n                  if(b[i+j]==a[j] && i+j<t)\n                  count++;\n                  else if(b[i+j-t]==a[j] && i+j>=t)\n                  count++;\n               }\n            }\n    }\n    printf(\"%lld\",count);\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#define limit  1000\nint main()\n{\n    long long int n;\n    scanf(\"%lld\",&n);\n    long long int a[n+1],b[n],i,j,k,max=0;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&j);\n        a[j]=i;\n        b[i-1]=0;\n    }\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&j);\n        k=a[j]-i;\n        if(k<0)\n        k=k+n;\n        b[k]++;\n        if(b[k]>max)\n        max=b[k];\n    }\n    printf(\"%lld\",max);\n    return 0;\n}"}
{"similarity_score": 0.7807486631016043, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "1b3e131412a7669522c37263c963fa2f", "bug_code_uid": "e3a9fb6c325cf5034f139b00eb13c442", "src_uid": "df94080c5b0b046af2397cafc02b5bdc", "apr_id": "21c4a364741056a2f8656eac9a8aad58", "difficulty": 1000, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tlong long int n, no, sum = 0, cp;\n\tscanf(\"%lld\", &n); cp = n;\n\twhile(n-- && scanf(\"%lld\", &no))\tsum += no;\n\tsum % 2 != 0 ? printf(\"-1\\n\") : printf(\"1\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n\tlong long int n, no; scanf(\"%lld\", &n);\n\twhile(n-- && scanf(\"%lld\", &no)){\n\t\tif(no == 1){printf(\"-1\\n\"); return 0;}\n\t}\n\tprintf(\"1\"); return 0;\n}"}
{"similarity_score": 0.9871589085072231, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "401ac39eb06d4f296669c39403affa3e", "bug_code_uid": "d590601b890e0e7568f1e47362b7b6df", "src_uid": "18554f1bb56e192d9a4bc75047fa5df5", "apr_id": "a70a45b4ade401c30aa9a9c4a6160ded", "difficulty": 1500, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 100\n#define EMPTY '.'\n\nint main (void) {\n\tint ec[N] = {0}, er[N] = {0}, i, j, c, n, x, y;\n\tscanf (\"%d\\n\", &n);\n\tfor (i = 0; i < n; ++i) {\n\t\tfor (j = 0; j < n; ++j) {\n\t\t\tif (c = getchar (), c == EMPTY) {\n\t\t\t\ter[i] = j;\n\t\t\t\tec[j] = i;\n\t\t\t}\n\t\t}\n\t\tgetchar ();\n\t}\n\n\tx = y = 1;\n\tfor (i = 0; i < n; ++i) {\n\t\tif (!ec[i]) x = 0;\n\t\tif (!er[i]) y = 0;\n\t}\n\tif (x) {\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tprintf (\"%d %d\\n\", ec[i] + 1, i + 1);\n\t\t}\n\t} else if (y) {\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tprintf (\"%d %d\\n\", i + 1, er[i] + 1);\n\t\t}\n\t} else {\n\t\tprintf (\"-1\\n\");\n\t}\n\texit (EXIT_SUCCESS);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 100\n#define EMPTY '.'\n\nint main (void) {\n\tint ec[N] = {0}, er[N] = {0}, i, j, c, n, x, y;\n\tscanf (\"%d\\n\", &n);\n\tfor (i = 0; i < n; ++i) {\n\t\tfor (j = 0; j < n; ++j) {\n\t\t\tif (c = getchar (), c == EMPTY) {\n\t\t\t\ter[i] = j + 1;\n\t\t\t\tec[j] = i + 1;\n\t\t\t}\n\t\t}\n\t\tgetchar ();\n\t}\n\n\tx = y = 1;\n\tfor (i = 0; i < n; ++i) {\n\t\tif (!ec[i]) x = 0;\n\t\tif (!er[i]) y = 0;\n\t}\n\tif (x) {\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tprintf (\"%d %d\\n\", ec[i], i + 1);\n\t\t}\n\t} else if (y) {\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tprintf (\"%d %d\\n\", i + 1, er[i]);\n\t\t}\n\t} else {\n\t\tprintf (\"-1\\n\");\n\t}\n\texit (EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.9910233393177738, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f9c0ad0fcfc69a0dcc5b9fc5f6cec1c4", "bug_code_uid": "710169e306f5e21ccf2513b75207b1dc", "src_uid": "b4341e1b0ec0b7341fdbe6edfe81a0d4", "apr_id": "163f58e9f46b3f9bf1fd9738b864333d", "difficulty": 1400, "tags": ["implementation", "sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nlong long a[100000];\n\nint cmp(const void *a, const void *b)\n{\n\treturn (10 - (*(long long *)a) % 10) - (10 - (*(long long *)b) % 10);\n}\n\nint main(void)\n{\n\tint N, K;\n\tint i, k;\n\n\tscanf(\"%d %d\", &N, &K);\n\n\tfor (i = 0; i < N; i++)\n\t\tscanf(\"%lld\", &a[i]);\n\n\tqsort(a, N, sizeof(long long), cmp);\n\n\tfor (i = 0; i < N; i++)\n\t{\n\t\tk = 10 - a[i] % 10;\n\n\t\tif (k <= 0) continue;\n\n\t\tif (K > 0)\n\t\t{\n\t\t\tif (K >= k)\n\t\t\t{\n\t\t\t\tK -= k;\n\t\t\t\ta[i] += k;\n\t\t\t}\n\t\t\telse K = 0;\n\t\t}\n\t\telse break;\n\t}\n\n\tif (K >= 10)\n\t{\n\t\tfor (i = 0; i < N; i++)\n\t\t{\n\t\t\tk = 100 - a[i];\n\n\t\t\tif (k <= 0) continue;\n\n\t\t\tif (K >= 10)\n\t\t\t{\n\t\t\t\tif (K >= k)\n\t\t\t\t{\n\t\t\t\t\tK -= k;\n\t\t\t\t\ta[i] += k;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ta[i] += K;\n\t\t\t\t\tK = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse break;\n\t\t}\n\t}\n\n\tk = 0;\n\n\tfor (i = 0; i < N; i++)\n\t\tk += a[i] / 10;\n\n\tprintf(\"%d\\n\", k);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nlong long a[100000];\n\nint cmp(const void *a, const void *b)\n{\n\treturn (10 - (*(long long *)a) % 10) - (10 - (*(long long *)b) % 10);\n}\n\nint main(void)\n{\n\tint N, K;\n\tint i, k;\n\n\tscanf(\"%d %d\", &N, &K);\n\n\tfor (i = 0; i < N; i++)\n\t\tscanf(\"%lld\", &a[i]);\n\n\tqsort(a, N, sizeof(long long), cmp);\n\n\tfor (i = 0; i < N; i++)\n\t{\n\t\tk = 10 - a[i] % 10;\n\n\t\tif (a[i] == 100 || k <= 0) continue;\n\n\t\tif (K > 0)\n\t\t{\n\t\t\tif (K >= k)\n\t\t\t{\n\t\t\t\tK -= k;\n\t\t\t\ta[i] += k;\n\t\t\t}\n\t\t\telse K = 0;\n\t\t}\n\t\telse break;\n\t}\n\n\tif (K >= 10)\n\t{\n\t\tfor (i = 0; i < N; i++)\n\t\t{\n\t\t\tk = 100 - a[i];\n\n\t\t\tif (k <= 0) continue;\n\n\t\t\tif (K >= 10)\n\t\t\t{\n\t\t\t\tif (K >= k)\n\t\t\t\t{\n\t\t\t\t\tK -= k;\n\t\t\t\t\ta[i] += k;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ta[i] += K;\n\t\t\t\t\tK = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse break;\n\t\t}\n\t}\n\n\tk = 0;\n\n\tfor (i = 0; i < N; i++)\n\t\tk += a[i] / 10;\n\n\tprintf(\"%d\\n\", k);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.6082474226804123, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "d80bc4eea691299022be21713bc9150d", "bug_code_uid": "d3d18c4369ac4f30d3afa178bebd01a2", "src_uid": "f59f92a80f719cdb87ad92cd8c211942", "apr_id": "bd7478d54392c9acf514582b3c8ee7c9", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nlong long int md(int a){\n    if(a >= 0) return a;\n    else if(a < 0) return -a;\n}\n\nint main(){\n    int t;\n    scanf(\"%d\\n\",&t);\n    for(int o=0;o<t;o++){\n        int n;\n        scanf(\"%d\",&n);\n        long long int *arr;\n        arr = malloc(sizeof(int)*n);\n        for(int i=0;i<n;i++){\n            scanf(\"%lld\",&arr[i]);\n        }\n        int s1=0,s2=0;\n        for(int i=0;i<n;i++){\n            if(arr[i] >= 0){\n                s1 = s1 + arr[i];\n            }\n            else if(arr[i] < 0){\n                s2 = s2 + arr[i];\n            }\n        }\n        printf(\"%lld\\n\",md(s1+s2));\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nlong long int md(long long int a){\n    if(a >= 0) return a;\n    else if(a < 0) return -a;\n}\n\n/*int md(int a){\n    if(a >= 0) return a;\n    else if(a < 0) return -a;\n}*/\n\nint main(){\n    int t;\n    scanf(\"%d\\n\",&t);\n    for(int o=0;o<t;o++){\n        int n;\n        long long s=0;\n        long long int a;   \n        scanf(\"%d\",&n);\n        for(int i=0;i<n;i++){\n            scanf(\"%lld\",&a);\n            s = s + a;\n        }\n        printf(\"%lld\\n\",md(s));\n    }\n    return 0;\n}"}
{"similarity_score": 0.9902534113060428, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6fe9da07dc63d2c0af4080f00328bc25", "bug_code_uid": "cf7ab66a3167c71de61e977a0fbc6e3d", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "38805f3d943689661758268c1b496b5e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "include <stdio.h>\n \nint a[101], n, i, sum = 0, r1, r2;\n \nint main()\n{\n    scanf(\"%d\", &n);\n    for (i = 1; i < n; i++) scanf(\"%d\", &a[i]);\n    scanf(\"%d %d\", &r1, &r2);\n    for (i = r1; i < r2; i++) sum = sum + a[i];\n    printf(\"%d\", sum);\n \n    return 0;\n}", "fixed": "\n#include <stdio.h>\n\nint a[101], n, i, sum = 0, r1, r2;\n\nint main()\n{\n    scanf(\"%d\", &n);\n    for (i = 1; i < n; i++) scanf(\"%d\", &a[i]);\n    scanf(\"%d %d\", &r1, &r2);\n    for (i = r1; i < r2; i++) sum = sum + a[i];\n    printf(\"%d\", sum);\n\n    return 0;\n}"}
{"similarity_score": 0.9948519948519948, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "28893aa46b65c94dac99d238602642f7", "bug_code_uid": "08a9db5d8570313ed561dddc0ac3ed35", "src_uid": "6c137a74b36dede61037cb3b05167329", "apr_id": "c710439b46fb0a0c27a700214969d57d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\nchar *s,d[5]=\"Timru\",t;  \r\n\r\nint c=0,tests,i,j,l;\r\n// after sorting Timur\r\nstrcpy(d,\"Timru\");\r\n//printf(\"enter the number of testcases\\n\");\r\nscanf(\"%d\",&tests);\r\n\r\nwhile(tests--)\r\n{\r\n    //printf(\"enter the length of the string\\n\");\r\n    scanf(\"%d\",&l);\r\n    s=(char*)malloc(sizeof(char)*l);\r\n    //printf(\"enter the string\\n\");\r\n    scanf(\"%s\",s);\r\n    for(i=0;s[i];i++)\r\n\t{\r\n\t\tfor(j=i+1;s[j];j++)\r\n\t\t{\r\n\t\t\tif(s[i]>s[j])\r\n\t\t\t{\r\n\t\t\t\tt=s[i];\r\n\t\t\t\ts[i]=s[j];\r\n\t\t\t\ts[j]=t;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n    }\r\n  // printf(\"%s\\n\",s);\r\n   if((strcmp(d,s))==0)\r\n   {\r\n   printf(\"Yes\\n\");\r\n   }\r\n   else\r\n   {\r\n       printf(\"No\\n\");\r\n   }\r\n   //printf(\" d= %s, s= %s\\n\",d,s);\r\n   \r\n    \r\n}\r\n\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\nchar *s,d[5]=\"Timru\",t;  \r\n\r\nint c=0,tests,i,j,l;\r\n// after sorting Timur\r\nstrcpy(d,\"Timru\");\r\n//printf(\"enter the number of testcases\\n\");\r\nscanf(\"%d\",&tests);\r\n\r\nwhile(tests--)\r\n{\r\n    //printf(\"enter the length of the string\\n\");\r\n    scanf(\"%d\",&l);\r\n    s=(char*)malloc(sizeof(char)*l);\r\n    //printf(\"enter the string\\n\");\r\n    scanf(\"%s\",s);\r\n    for(i=0;s[i];i++)\r\n\t{\r\n\t\tfor(j=i+1;s[j];j++)\r\n\t\t{\r\n\t\t\tif(s[i]>s[j])\r\n\t\t\t{\r\n\t\t\t\tt=s[i];\r\n\t\t\t\ts[i]=s[j];\r\n\t\t\t\ts[j]=t;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n    }\r\n  // printf(\"%s\\n\",s);\r\n   if((strcmp(d,s))==0)\r\n   {\r\n   printf(\"Yes\\n\");\r\n   }\r\n   else\r\n   {\r\n       printf(\"No\\n\");\r\n   }\r\n   //printf(\" d= %s, s= %s\\n\",d,s);\r\n  free(s); \r\n    \r\n}\r\n\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.5785498489425982, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "98e460e296a2a5aef586a7b51ca77281", "bug_code_uid": "eb407cdfe0fe12c74a10716f3f89e349", "src_uid": "0b9be2f076cfa13cdc76c489bf1ea416", "apr_id": "987d06f5503af66823dd04634444537e", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nchar a[200005];\r\nint main()\r\n{\r\n\tint t,i,j,k,flag,len,sum1,sum2,l,m;\r\n\tscanf(\"%d\",&t);\r\n\tgetchar();\r\n\tfor(i=1;i<=t;i++)\r\n\t{\tflag=1;sum1=0;sum2=0;m=0;\r\n\t\twhile((a[m]=getchar())!='\\n')\r\n\t\t{\r\n\t\t\tm++;\r\n\t\t}\r\n\t\ta[m]='\\0';\r\n\t\tlen=m;\r\n\t\tfor(l=0;l<len;l++)\r\n\t\t{\r\n\t\t\tif(a[l]=='A')sum1++;\r\n\t\t\telse sum2++;\r\n\t\t}\r\n\t\tif(a[len-1]!='B')flag=0;\r\n\t\telse\r\n\t\t{\r\n\t\t\tj=0,k=len-1;\r\n\t\t}\r\n\t\twhile(k>j&&k>=0&&j<len)\r\n\t\t{\r\n\t\t\tif(a[k]=='B'&&a[j]=='A')\r\n\t\t\t{\r\n\t\t\t\tk--;j++;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\twhile(a[k]=='A')\r\n\t\t\t\t{\r\n\t\t\t\t\tk--;\r\n\t\t\t\t}\r\n\t\t\t\tif(a[j]!='A')\r\n\t\t\t\t{\r\n\t\t\t\t\tflag=0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tj++;\r\n\t\t\t\t\tk--;\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(sum2>sum1)\r\n\t\t\tflag=0;\r\n\t\tif(flag==0)\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"YES\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nchar a[200005];\r\nint main()\r\n{\r\n\tint t,i,j,k,flag,len,sum1,sum2,l,m;\r\n\tscanf(\"%d\",&t);\r\n\tgetchar();\r\n\tfor(i=1;i<=t;i++)\r\n\t{\tflag=1;sum1=0;sum2=0;m=0;\r\n\t\twhile((a[m]=getchar())!='\\n')\r\n\t\t{\r\n\t\t\tm++;\r\n\t\t}\r\n\t\ta[m]='\\0';\r\n\t\tlen=m;\r\n\t\tif(a[len-1]=='A')flag=0;\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor(l=0;l<len;l++)\r\n\t\t\t{\r\n\t\t\t\tif(a[l]=='A')\r\n\t\t\t\t{\r\n\t\t\t\t\tsum1++;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tsum2++;\r\n\t\t\t\t\tif(sum1<sum2)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag=0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t}\r\n\t\tif(flag==0)\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"YES\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9043611323641928, "equal_cnt": 14, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 11, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "18a363e8452a54516caf6ea59b0e5e93", "bug_code_uid": "5176ae22ac85b520fab2a7479ee8f654", "src_uid": "422cbf106fac3216d58bdc8411c0bf9f", "apr_id": "9b2d0bd4ee968ef110992acfc3a67abd", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdint.h>\n\nint compare (const void * a, const void * b)\n{\n  return ( *(int*)a - *(int*)b );\n}\n\n\nint main(int argc, char *argv[])\n{\n    int m,step=1,y=0;\n\n    uint32_t i,x,n,*s;\n\n    scanf (\"%lu%d\\n\",&n,&m);\n\n    s=(uint32_t*)calloc(m+1,sizeof(s));\n\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%lu\",&x);\n        s[i]=x-1;\n    }\n    qsort (s, m+1, sizeof(uint32_t), compare);\n\n    if(s[1]==0 || s[m]==n-1) {y=1;}\n\n    for(i=0;i<m-1 && !y;i++)\n        if(s[i+1]==s[i]+1)\n           if(s[i+2]==s[i]+2) y=1;\n\n\n    if(!y)printf(\"YES\");\n    else printf(\"NO\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdint.h>\n\nint compare (const void * a, const void * b)\n{\n  return ( *(int*)a - *(int*)b );\n}\n\n\nint main(int argc, char *argv[])\n{\n\n    int m,step=1,y=0;\n\n    uint32_t i,x,n,*s;\n\n    scanf (\"%lu%d\\n\",&n,&m);\n\n    if(m>0)\n    {\n        s=(uint32_t*)calloc(m+1,sizeof(s));\n\n        for(i=1;i<=m;i++)\n        {\n            scanf(\"%lu\",&x);\n            s[i]=x-1;\n        }\n      qsort (s, m+1, sizeof(uint32_t), compare);\n\n        if(s[1]==0 || s[m]==n-1) {y=1;}\n\n        for(i=1;i<m-1 && !y;i++)\n            if(s[i+1]==s[i]+1)\n                if(s[i+2]==s[i]+2) {  y=1;}\n\n    }\n\n\n    if(!y)printf(\"YES\");\n    else printf(\"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.5162755488266465, "equal_cnt": 23, "replace_cnt": 11, "delete_cnt": 7, "insert_cnt": 5, "fix_ops_cnt": 23, "lang": "GNU C", "fix_code_uid": "ca48a7c2cca97a034c833266bd120c17", "bug_code_uid": "c350d64abafcf82521ee2d9540ff06ae", "src_uid": "80d3da5aba371f4d572ea928025c5bbd", "apr_id": "44c0615fde4931e8aa60b6e0f4030e5e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int m, n, i, j;\n    scanf(\"%d %d\\n\", &n, &m);\n    char a[n][m];\n\n    for(i=0; i<n; i++) {\n        for(j=0; j<m; j++) {\n            scanf(\"%c\", &a[i][j]);\n            if(a[i][j]=='\\n')\n                j--;\n            }\n        }\n\n    int flg = 0;\n     for(i=0; i<n; i++) {\n        for(j=0; j<m-1; j++) {\n            if(a[i][j]!=a[i][j+1]) {\n                flg = 1;\n                break;\n            }\n\n        }\n     }\n\n     for(i=0; i<m; i++) {\n        for(j=0; j<n-1; j++) {\n            if(a[j][i]==a[j][i+1]) {\n                flg = 1;\n                break;\n            }\n        }\n     }\n\n    if(flg==1)\n        printf(\"NO\");\n    else\n        printf(\"YES\");\n\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int i,n,j,m;\n    scanf(\"%d %d\\n\",&n,&m);\n\n    char str[n][m],ch;\n\n    for(i=0;i<n;i++) {\n         gets(str[i]);\n    }\n\n    int flg = 0;\n    for(i=0;i<n;i++) {\n        ch = str[i][0];\n        for(j=0;j<m;j++) {\n            if(str[i][j]!=ch) {\n                flg = 1;\n                break;\n            }\n        }\n    }\n\n    if(flg==0) {\n        for(i=1;i<n;i++) {\n            if(str[i-1][0]==str[i][0]) {\n                flg = 1;\n                break;\n            }\n        }\n    }\n\n    if(flg == 0)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n\n\n\n\n\n\n}\n"}
{"similarity_score": 0.9839743589743589, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8c3e4fbbe4fe0362fb902022aaaa7131", "bug_code_uid": "5f779b10f922f02290e60cbe5474ec5e", "src_uid": "d5bd27c969d9cd910f13baa53c247871", "apr_id": "bdb45de5b308b5d28eb8b6dfa3fb9a56", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 0; i < t; i++) {\r\n        intpair;\r\n        scanf(\"%d\", &countQuantity);\r\n        int evenQuantity = 0;\r\n        int notEvenQuantity = 0;\r\n\r\n        for (int q = 0; q < 2 *pair; q++) {\r\n            int quantity;\r\n            scanf(\"%d\", &quantity);\r\n\r\n            if (quantity % 2 == 0)\r\n                evenQuantity += 1;\r\n            else\r\n                notEvenQuantity += 1;\r\n        }\r\n\r\n        if (evenQuantity == notEvenQuantity)\r\n            printf(\"Yes\\n\");\r\n        else\r\n            printf(\"No\\n\");\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 0; i < t; i++) {\r\n        int pair;\r\n        scanf(\"%d\", &pair);\r\n        int evenQuantity = 0;\r\n        int notEvenQuantity = 0;\r\n\r\n        for (int q = 0; q < 2 *pair; q++) {\r\n            int quantity;\r\n            scanf(\"%d\", &quantity);\r\n\r\n            if (quantity % 2 == 0)\r\n                evenQuantity += 1;\r\n            else\r\n                notEvenQuantity += 1;\r\n        }\r\n\r\n        if (evenQuantity == notEvenQuantity)\r\n            printf(\"Yes\\n\");\r\n        else\r\n            printf(\"No\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9769392033542977, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2821e57103de423f5209d2a9187fe9f4", "bug_code_uid": "8db58a3e2a4b48fd5b5983e529b1e589", "src_uid": "df94080c5b0b046af2397cafc02b5bdc", "apr_id": "5b8077134789e8b160bed59f0a254f66", "difficulty": 1000, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n, i,min,a;\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &a);\n\tmin = a;\n\tfor (i = 1; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &a);\n\t\tif (min > a)\n\t\t\tmin = a;\n\t}\n\tif (min == 1)\n\t\tprintf(\"-1\");\n\telse\n\t\tprintf(\"%d\", &min);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n, i,min,a;\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &a);\n\tmin = a;\n\tfor (i = 1; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &a);\n\t\tif (min > a)\n\t\t\tmin = a;\n\t}\n\tif (min == 1)\n\t\tprintf(\"-1\");\n\telse\n\t\tprintf(\"1\");\n\treturn 0;\n}"}
{"similarity_score": 0.994535519125683, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "63f8095c64aa93fff19e8b65d9d424f5", "bug_code_uid": "4ef4076ba3fc302af25196a0d989dea7", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "39b97cb9a3e499947248c4dec5508bd3", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n int A[10000],n,i,c=0,sum=0,j,k;\n scanf(\"%d\",&n);\n for(i=0;i<n;i++)\n {\n scanf(\"%d\",&A[i]);\n c=c+A[i];\n }\n for(i=0;i<n-1;i++)\n {\n   for(k=0;k<n-i-1;k++)\n  {\n  if(A[i]>A[i+1])\n  {\n   int temp=A[k];\n  A[k]=A[k+1];\n  A[k+1]=temp;\n  }\n}\n }\n for(j=1;j<=n;j++)\n { \n sum= A[n-j]+ sum;\n  if((c-sum)<sum)\n  break;\n }\n printf(\"%d\",j);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n int A[10000],n,i,c=0,sum=0,j,k;\n scanf(\"%d\",&n);\n for(i=0;i<n;i++)\n {\n scanf(\"%d\",&A[i]);\n c=c+A[i];\n }\n for(i=0;i<n-1;i++)\n {\n   for(k=0;k<n-i-1;k++)\n  {\n  if(A[k]>A[k+1])\n  {\n   int temp=A[k];\n  A[k]=A[k+1];\n  A[k+1]=temp;\n  }\n}\n }\n for(j=1;j<=n;j++)\n { \n sum= A[n-j]+ sum;\n  if((c-sum)<sum)\n  break;\n }\n printf(\"%d\",j);\nreturn 0;\n}"}
{"similarity_score": 0.9009247027741083, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "d4ef5d7c13f335a88342f07d778a11fa", "bug_code_uid": "dca0683b8b20daeba69126629fde6fff", "src_uid": "0e21f1c48c8c0463b2ffa7275eddc633", "apr_id": "d5bf8e3cd0449adc10ab8cd3b051cb6c", "difficulty": 1300, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,t,k;\n    char sud[10][10];\n    scanf(\"%d\",&t);\n    for(k=0;k<t;k++)\n    {\n    for(i=0;i<9;i++)\n    {\n        scanf(\"%s\",&sud[i]);\n        for(j=0;j<9;j++)\n\n                sud[i][j]='1';\n    }\n\n    for(i=0;i<9;i++)\n    {\n        for(j=0;j<9;j++)\n            printf(\"%c\",sud[i][j]);\n            printf(\"\\n\");\n    }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,t,k;\n    char sud[10][10];\n    scanf(\"%d\",&t);\n    for(k=0;k<t;k++)\n    {\n    for(i=0;i<9;i++)\n    {\n        scanf(\"%s\",&sud[i]);\n        for(j=0;j<9;j++)\n            if(sud[i][j]=='2')\n                sud[i][j]='1';\n    }\n    for(i=0;i<9;i++)\n    {\n            printf(\"%s\",sud[i]);\n            printf(\"\\n\");\n    }\n    }\n    return 0;\n}"}
{"similarity_score": 0.38141809290953543, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "fa94e2d7a68c71375d4dafe3ad63dfed", "bug_code_uid": "426cb398acff7d4395a063f3f0f95815", "src_uid": "bc5fb5d6882b86d83e5c86f21d806a52", "apr_id": "d2d3dc04b54e16a4cc3076e752bfda85", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  long long int t,a,b,c,n,i,s;\n  scanf(\"%d\",&t);\n  for(i=0;i<t;i++)\n  {\n      scanf(\"%d%d%d%d\",&a,&b,&c,&n);\n      s=a+b+c+n;\n      s=s%3;\n      if(s==0)\n      {\n          printf(\"YES\\n\");\n      }\n      else\n      {\n          printf(\"NO\\n\");\n      }\n\n  }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  long long int t,n,i,s,j,k,a,m;\n  scanf(\"%lld\",&t);\n  for(i=0;i<t;i++)\n  {    m=0;\n      scanf(\"%lld\",&a);\n      if(a>m)\n      {\n          m=a;\n      }\n      scanf(\"%lld\",&j);\n      if(j>m)\n      {\n          m=j;\n      }\n      scanf(\"%lld%lld\",&k,&n);\n      if(k>m)\n      {\n          m=k;\n      }\n        m=m*3;\n        n=n-(m-a-j-k);\n          if(n<0||n%3!=0)\n          {\n             printf(\"NO\\n\");\n          }\n           else\n            {\n              printf(\"YES\\n\");\n            }\n\n\n\n  }\n}\n"}
{"similarity_score": 0.9976635514018691, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5c0d5142ef81e493097d209bc7ba7955", "bug_code_uid": "30c067307496a8c3784642176c1cfd8a", "src_uid": "8b2b7208630af1d086420513a437a914", "apr_id": "118a9d54a9754927d2443e564469e76a", "difficulty": 1300, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\nlong long int t,n,loc,min,x;\nscanf(\"%lld\",&t);\nwhile(t--){\n    min=1000000001;\n    scanf(\"%lld\",&n);\n    for(int i=1;i<=n;i++){scanf(\"%lld\",&x);if(x<=min){min=x;loc=i;}}\n    if(loc==1){printf(\"%lld\\n\",n-1);}\n    else{printf(\"%lld\\n\",n);}\n    if(loc!=1){printf(\"1 %lld %lld %lld\\n\",loc,min,min+loc-1);}\n    for(int i=2;i<=n;i++){printf(\"1 %lld %lld %lld \\n\",i,min,min+i-1);}\n}\n\n\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\nlong long int t,n,loc,min,x;\nscanf(\"%lld\",&t);\nwhile(t--){\n    min=1000000001;\n    scanf(\"%lld\",&n);\n    for(int i=1;i<=n;i++){scanf(\"%lld\",&x);if(x<=min){min=x;loc=i;}}\n    if(loc==1){printf(\"%lld\\n\",n-1);}\n    else{printf(\"%lld\\n\",n);}\n    if(loc!=1){printf(\"1 %lld %lld %lld\\n\",loc,min,min+loc-1);}\n    for(int i=2;i<=n;i++){printf(\"1 %d %lld %lld \\n\",i,min,min+i-1);}\n}\n\n\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.935969868173258, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "34e79d179576ff41de6c868aeb10c17b", "bug_code_uid": "95c5f5742ce1df344a254ba621e28755", "src_uid": "30cfce44a7a0922929fbe54446986748", "apr_id": "5fab299cf2ceb3b5e69eaae4f79be9b2", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n \nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n,a,b,c,d;\n        scanf(\"%d %d %d %d %d\",&n,&a,&b,&c,&d);\n        int A=a-b;\n        int B=a+b;\n        int C=c-d;\n        int D=c+d;\n        int flag=0;\n        int x=A*n;\n        int y=B*n;\n        if(x>=C&&x<=D){\n            printf(\"Yes\\n\");\n        }\n        else if(y>=C&&y<=D){\n            printf(\"Yes\\n\");\n        }\n        else{\n            printf(\"No\\n\");\n        }\n        \n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n \nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n,a,b,c,d;\n        scanf(\"%d %d %d %d %d\",&n,&a,&b,&c,&d);\n        int A=a-b;\n        int B=a+b;\n        int C=c-d;\n        int D=c+d;\n        int flag=0;\n        int x=A*n;\n        int y=B*n;\n        if(x>=C&&x<=D){\n            printf(\"Yes\\n\");\n        }\n        else if(y>=C&&y<=D){\n            printf(\"Yes\\n\");\n        }\n        else if(x<=C&&y>=D){\n            printf(\"Yes\\n\");\n        }\n        else{\n            printf(\"No\\n\");\n        }\n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.9993986770895971, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a12c01f55f33401209a7cfa0f14c85fa", "bug_code_uid": "d49c650ef114403d5f176aa4c21add3e", "src_uid": "7f28e4dbd199b84bd7885bf7f479cf38", "apr_id": "f2b99e04d9326d3a6ea8b61cab26aa48", "difficulty": 1300, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint a[10]={1,1,1,0,0,1,0,0,1,0};\r\nint b[10]={0,1,5,-1,-1,2,-1,-1,8,-1};\r\nint f(int x)\r\n{\r\n    int ans=0,y=x;\r\n    while(y)\r\n    {\r\n        if(a[y%10]==0) return -1;\r\n        ans=ans*10+b[y%10];\r\n        y/=10;\r\n    }\r\n    if(x>=0&&x<=10) ans*=10;\r\n    return ans;\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int h,m,hh,mm,k=0;\r\n        scanf(\"%d%d\",&h,&m);\r\n        scanf(\"%d:%d\",&hh,&mm);\r\n        while(hh<h)\r\n        {\r\n            while(mm<m)\r\n            {\r\n                if(f(hh)>=0&&f(hh)<m&&f(mm)>=0&&f(mm)<h) {k=1;break;}\r\n                mm++;\r\n            }\r\n            if(mm>=m) mm-=m;\r\n            if(k) break;\r\n            hh++;;\r\n            if(hh>=h) hh-=h;\r\n        }\r\n        printf(\"%02d:%02d\\n\",hh,mm);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint a[10]={1,1,1,0,0,1,0,0,1,0};\r\nint b[10]={0,1,5,-1,-1,2,-1,-1,8,-1};\r\nint f(int x)\r\n{\r\n    int ans=0,y=x;\r\n    while(y)\r\n    {\r\n        if(a[y%10]==0) return -1;\r\n        ans=ans*10+b[y%10];\r\n        y/=10;\r\n    }\r\n    if(x>=0&&x<10) ans*=10;\r\n    return ans;\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int h,m,hh,mm,k=0;\r\n        scanf(\"%d%d\",&h,&m);\r\n        scanf(\"%d:%d\",&hh,&mm);\r\n        while(hh<h)\r\n        {\r\n            while(mm<m)\r\n            {\r\n                if(f(hh)>=0&&f(hh)<m&&f(mm)>=0&&f(mm)<h) {k=1;break;}\r\n                mm++;\r\n            }\r\n            if(mm>=m) mm-=m;\r\n            if(k) break;\r\n            hh++;;\r\n            if(hh>=h) hh-=h;\r\n        }\r\n        printf(\"%02d:%02d\\n\",hh,mm);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9982578397212544, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4e08e2a467ba5102fbeaf9178b153ec5", "bug_code_uid": "ee45b1f025a2f2e4a1d2e79365eea7a0", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "58be6f15ee643d9d0c926f262b79034a", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(void)\n{\n    int i, j;\n    int t;\n    \n    scanf(\"%d\", &t);\n    \n    int n;\n    char *s;\n    \n    for(i=0; i<t; i++)\n    {\n        scanf(\"%d\", &n);\n        s=(char*)malloc(sizeof(char)*(n+1));\n        \n        scanf(\"%s\", s);\n        for(j=0; j<n; j++)\n        {\n            if(s[j]=='8' && n-j>11)\n            {\n                printf(\"YES\\n\");\n                break;\n            }\n        }\n        if(j==n)\n        {\n            printf(\"NO\\n\");\n        }\n        \n        free(s);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(void)\n{\n    int i, j;\n    int t;\n    \n    scanf(\"%d\", &t);\n    \n    int n;\n    char *s;\n    \n    for(i=0; i<t; i++)\n    {\n        scanf(\"%d\", &n);\n        s=(char*)malloc(sizeof(char)*(n+1));\n        \n        scanf(\"%s\", s);\n        for(j=0; j<n; j++)\n        {\n            if(s[j]=='8' && n-j>10)\n            {\n                printf(\"YES\\n\");\n                break;\n            }\n        }\n        if(j==n)\n        {\n            printf(\"NO\\n\");\n        }\n        \n        free(s);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7951807228915663, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "fd07b446561615f0b205ccb165faf39d", "bug_code_uid": "36ab52e664e45c3c701cf35fcc3394f9", "src_uid": "e744184150bf55a30568060cca69de04", "apr_id": "20d840febb4f5ac065579fd5a4f453c6", "difficulty": 800, "tags": ["constructive algorithms", "dsu", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    int t, i;\r\n    char str[51];\r\n    int len;\r\n\r\n    scanf(\"%d\", &t);\r\n    while (t--) {\r\n        scanf(\"%s\", str);\r\n        len = strlen(str);\r\n        for (i = 0; i < len; i++) {\r\n            if (str[i] == 'N')\r\n                break;\r\n        }\r\n        if (i == len-1)\r\n            printf(\"NO\\n\");\r\n        else\r\n            printf(\"YES\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    char str[51];\r\n    int cnt;\r\n\r\n    scanf(\"%d\", &t);\r\n    while (t--) {\r\n        scanf(\"%s\", str);\r\n        cnt = 0;\r\n        for (int i = 0; str[i] != 0; i++) {\r\n            if (str[i] == 'N')\r\n                cnt++;\r\n        }\r\n        if (cnt == 1)\r\n            printf(\"NO\\n\");\r\n        else\r\n            printf(\"YES\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.7809330628803245, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "73da864ab0e1957972f09b3d70367b62", "bug_code_uid": "5adc017b8f90cc573728d263dec2b98a", "src_uid": "ad242f98f1c8eb8d30789ec672fc95a0", "apr_id": "307f823b3562957a415f42f86b4ba317", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#define max(x, y) (((x) > (y)) ? (x) : (y))\r\n#define min(x, y) (((x) > (y)) ? (y) : (x))\r\n\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--){\r\n\t\tint n, chk=0, chk2=0;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tint arr[1003]={0,};\r\n\t\tfor(int i=0; i<n; i++){\r\n\t\t\tint x;\r\n\t\t\tscanf(\"%d\", &x);\r\n\t\t\tarr[x] += 1;\r\n\t\t\tif(arr[x]==2) chk2 = 1;\r\n\t\t\tif(x == 0) chk = 1;\r\n\t\t}\r\n\t\tif(chk) printf(\"%d\\n\",n-1);\r\n\t\telse if(chk2) printf(\"%d\\n\", n);\r\n\t\telse printf(\"%d\\n\", n+1);\r\n\t}\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#define max(x, y) (((x) > (y)) ? (x) : (y))\r\n#define min(x, y) (((x) > (y)) ? (y) : (x))\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--){\r\n\t\tint n, chk=0, chk2=0;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tint arr[1003]={0,};\r\n\t\tfor(int i=0; i<n; i++){\r\n\t\t\tint x;\r\n\t\t\tscanf(\"%d\", &x);\r\n\t\t\tarr[x] += 1;\r\n\t\t\tif(arr[x]==2) chk2 = 1;\r\n\t\t\tif(x == 0) chk++;\r\n\t\t}\r\n\t\tif(chk) printf(\"%d\\n\",n-chk);\r\n\t\telse if(chk2) printf(\"%d\\n\", n);\r\n\t\telse printf(\"%d\\n\", n+1);\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.9758713136729222, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c9cddd88fa03e42ea3c85c3d969c9253", "bug_code_uid": "7d7d84db0f961ba16fa7ce9b3bf6a667", "src_uid": "99e5c907b623c310d6f1599f485ca21d", "apr_id": "089e145faa0e1a63b5c4bd34ad14a437", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,a[100],min=0,t=0; \n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n    scanf(\"%d\",&m);\n    for(j=0;j<m;j++)\n     {\n     scanf(\"%d\",&a[j]);\n     }\n    for(j=0;j<m;j++)\n     {\n     if(a[min]>a[j])\n    min=j;\n     }\n    for(j=0;j<m;j++)\n     {\n     if(a[j]==a[min])\n    t++;\n     }\n    printf(\"%d\\n\",m-t);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,a[100],min,t; \n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n    scanf(\"%d\",&m);\n    for(j=0;j<m;j++)\n     {\n     scanf(\"%d\",&a[j]);\n     }min=0;t=0;\n    for(j=0;j<m;j++)\n     {\n     if(a[min]>a[j])\n    min=j;\n     }\n    for(j=0;j<m;j++)\n     {\n     if(a[j]==a[min])\n    t++;\n     }\n    printf(\"%d\\n\",m-t);\n    }\n    return 0;\n}"}
{"similarity_score": 0.960167714884696, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "83ad31cc5eb6d2c3e66d83dc7d2964da", "bug_code_uid": "af85a5baacfb32170b59c32de1085676", "src_uid": "e1abc81cea4395ba675cf6ca93261ae8", "apr_id": "869d3aaa5ed272989ffceebb2a9a99f7", "difficulty": 1100, "tags": ["dp", "implementation", "*special", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n,s=0,maxi=0,maxi2=0,i,j,r;\n\tscanf(\"%d\",&n);\n\tint ara[200000][2];\n\tfor (i=0;i<n;i++){\n\t\tfor (j=0;j<2;j++){\n\t\t\tscanf(\"%d\",&ara[i][j]);\n\t\t}\n\t\ts=s+ara[i][0];\n\t\tif (ara[i][1]>maxi){\n\t\t\tmaxi=ara[i][1];\n\t\t}\n\t\telse if (ara[i][1]>maxi2){\n\t\t\tmaxi2=ara[i][1];\n\t\t}\n\t}\n\tfor (i=0;i<n;i++){\n\t\tif (ara[i][1]!=maxi){\n\t\t\tr=s-ara[i][0];\n\t\t\tprintf(\"%d \",r*maxi);\n\t\t}\n\t\telse{\n\t\t\tr=s-ara[i][0];\n\t\t\tprintf(\"%d \",r*maxi2);\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n,s=0,maxi=0,maxi2=0,i,j,r;\n\tscanf(\"%d\",&n);\n\tint ara[200000][2];\n\tfor (i=0;i<n;i++){\n\t\tfor (j=0;j<2;j++){\n\t\t\tscanf(\"%d\",&ara[i][j]);\n\t\t}\n\t\ts=s+ara[i][0];\n\t\tif (ara[i][1]>maxi){\n\t\t\tmaxi2=maxi;\n\t\t\tmaxi=ara[i][1];\n\t\t}\n\t\telse if (ara[i][1]>maxi2){\n\t\t\tmaxi2=ara[i][1];\n\t\t}\n\t}\n\t//printf(\"%d\",maxi2);\n\tfor (i=0;i<n;i++){\n\t\tif (ara[i][1]!=maxi){\n\t\t\tr=s-ara[i][0];\n\t\t\tprintf(\"%d \",r*maxi);\n\t\t}\n\t\telse{\n\t\t\tr=s-ara[i][0];\n\t\t\tprintf(\"%d \",r*maxi2);\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.714792899408284, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "9a9917e49cbd55838d16ce15e0773787", "bug_code_uid": "ed5002b54109043eccc1f263576841d1", "src_uid": "749a106d462555543c91753f00a5a479", "apr_id": "918eacdbe21eae411cf3c41e056ce0d3", "difficulty": 1000, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int t, r,g,b,w;\n    scanf(\"%d\\n\",&t);\n    for(int i=0;i<t;i+=1){\n        scanf(\"%d %d %d %d\",&r,&g,&b,&w);\n        if((r+g+b+w)%2==0){\n            if ((r % 2 == 0) && (g % 2 == 0) && (b % 2 == 0) && (w % 2 == 0)){\n                printf(\"Yes\");\n            }\n            else if ((r % 2 == 1) && (g % 2 == 1) && (b % 2 == 1) && (w % 2 == 1))\n            {\n                printf(\"Yes\");\n            }\n            else{\n                printf(\"No\");\n            }\n        \n        }\n        else{\n            if ((r % 2 == 0) && (g % 2 == 0) && (b % 2 == 0) && (w % 2 == 0)){\n                printf(\"No\");\n            }\n            else if ((r % 2 ) + (g % 2 ) + (b % 2 ) + (w % 2) == 1 || 3){\n                printf(\"Yes\");\n            }\n        }\n    }\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int t, r,g,b,w;\n    scanf(\"%d\\n\",&t);\n    for(int i=0;i<t;i+=1){\n        scanf(\"%d %d %d %d\",&r,&g,&b,&w);\n        if((r+g+b+w)%2==0){\n            if ((r % 2 == 0) && (g % 2 == 0) && (b % 2 == 0) && (w % 2 == 0)){\n                printf(\"Yes\\n\");\n            }\n            else if ((r % 2 == 1) && (g % 2 == 1) && (b % 2 == 1) && (w % 2 == 1))\n            {\n                printf(\"Yes\\n\");\n            }\n            else{\n                printf(\"No\\n\");\n            }\n        \n        }\n        else{\n            if ((r % 2 ) + (g % 2 ) + (b % 2 ) + (w % 2) == 1){\n                printf(\"Yes\\n\");\n            }\n            else if (((r % 2) + (g % 2) + (b % 2) + (w % 2) == 3) && r!=0 && g!=0 && b!=0){\n                printf(\"Yes\\n\");\n            }\n            else{\n                printf(\"No\\n\");\n            }\n        }\n    }\n}"}
{"similarity_score": 0.5801139962001267, "equal_cnt": 35, "replace_cnt": 17, "delete_cnt": 7, "insert_cnt": 10, "fix_ops_cnt": 34, "lang": "GNU C11", "fix_code_uid": "fa4c3f53a732aee35d83f8d75a668276", "bug_code_uid": "1c8b983e680159d03e444fc626c7f281", "src_uid": "85383c9e802348a3153e7f98ce278f09", "apr_id": "ea5d309f3dea952df66af7f9d5d4ceaf", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t,n,x,i,j;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n       scanf(\"%d%d\",&n,&x);\r\n       int a[n];\r\n       int sum = 0;\r\n       for(int i=0;i<n;i++)\r\n       {\r\n           scanf(\"%d\",&a[i]);\r\n           sum += a[i];\r\n       }\r\n\r\n\r\n\r\n           if(sum == x)\r\n           {\r\n              printf(\"NO\\n\");\r\n               continue;\r\n           }\r\n\r\n    sum =0;\r\n       for( i=0;i<n;i++)\r\n       {\r\n          sum += a[i];\r\n          if(sum  == x)\r\n          {\r\n             int tem = a[i];\r\n             a[i] = a[n-2];\r\n             a[n-2] = tem;\r\n              sum =0;\r\n              i =0;\r\n          }\r\n\r\n       }\r\n\r\n       printf(\"YES\\n\");\r\n           for(int i=0;i<n;i++)\r\n       {\r\n           printf(\"%d \",a[i]);\r\n\r\n       }\r\n       printf(\"\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int x,y;\r\n        scanf(\"%d%d\",&x,&y);\r\n        int a[x];\r\n        int sum =0;\r\n        for(int i =0;i<x;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            sum += a[i];\r\n        }\r\n        if(sum == y){printf(\"NO\\n\");continue;}\r\n        sum =0;\r\n        for(int i=0;i<x;i++)\r\n        {\r\n            sum += a[i];\r\n            if(sum ==y)\r\n            {\r\n                int tem = a[i];\r\n                a[i] = a[i+1];\r\n                a[i+1] = tem;\r\n            }\r\n        }\r\n        printf(\"YES\\n\");\r\n        for(int i=0;i<x;i++)\r\n        {\r\n            printf(\"%d \",a[i]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9992821249102656, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8ec51b3c59506bc7a0fff15d33162d2e", "bug_code_uid": "608d6f0e86919e5beb43baca0309ad6a", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "a7db5a9474356fe46739c9d9c65fbc15", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint n,m;\nint p,x[100005];\nint find(int a[],int c[],int l)\n{\n  if(l<p)\n  {\n    while(p>=l)\n    {\n      if(x[a[p]]==0)\n      {\n        if(p==n-1)\n        {\n          c[p]=1;\n          x[a[p]]=1;\n        }\n        else\n        {\n        //  printf(\"%d %d \",p,x[a[p]]);\n          c[p]=c[p+1]+1;\n          x[a[p]]=1;\n        }\n      }\n      else\n      c[p]=c[p+1];\n      p--;\n    //  printf(\"%d %d\\n\",p+1,c[p+1]);\n    }\n    return c[l];\n  }\n  else\n  return c[l];\n}\nint main()\n{\n  scanf(\"%d%d\",&n,&m);\n  p=n-1;\n  int a[n],c[n],i,l;\n  for(i=0;i<n;i++)\n  {scanf(\"%d\",&a[i]);c[i]=1;}\n  for(i=0;i<m;i++)\n  {\n    scanf(\"%d\",&l);\n     printf(\"%d\\n\",find(a,c,l-1));\n  }\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint n,m;\nint p,x[100005];\nint find(int a[],int c[],int l)\n{\n  if(l<=p)\n  {\n    while(p>=l)\n    {\n      if(x[a[p]]==0)\n      {\n        if(p==n-1)\n        {\n          c[p]=1;\n          x[a[p]]=1;\n        }\n        else\n        {\n        //  printf(\"%d %d \",p,x[a[p]]);\n          c[p]=c[p+1]+1;\n          x[a[p]]=1;\n        }\n      }\n      else\n      c[p]=c[p+1];\n      p--;\n    //  printf(\"%d %d\\n\",p+1,c[p+1]);\n    }\n    return c[l];\n  }\n  else\n  return c[l];\n}\nint main()\n{\n  scanf(\"%d%d\",&n,&m);\n  p=n-1;\n  int a[n],c[n],i,l;\n  for(i=0;i<n;i++)\n  {scanf(\"%d\",&a[i]);c[i]=1;}\n  for(i=0;i<m;i++)\n  {\n    scanf(\"%d\",&l);\n     printf(\"%d\\n\",find(a,c,l-1));\n  }\n}\n"}
{"similarity_score": 0.937178166838311, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "72e00d2d35f5c9af6236042db4f1f0e1", "bug_code_uid": "7e9cf9305afa78d35126b2e2aec180b1", "src_uid": "bcc758394d012519f0865479b3c6770c", "apr_id": "21b39e6542b7775d01fabfac5311aeda", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint cmp(const void* a,const void*b)\n{\n\treturn *((int*)a) - *((int*)b);\n}\nint a[1000000][2];\nint main()\n{\n\tint p,q,n,s,i,sum;\n\tscanf(\"%d%d\",&n,&s);\n\tsum=s;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&p,&q,&a[i][1]);\n\t\ta[i][0]=p*p+q*q;\n\t}\n\tqsort(a,n,sizeof(a[0]),cmp);\n\tfor(i=0;i<n;i++)\n\t\tif(sum<1000000)\n\t\t\tsum+=a[i][1];\n\tif(sum<1000000)\n\t\tprintf(\"-1\\n\");\n\telse\n\t\tprintf(\"%.7lf\\n\",sqrt(a[i-1][0]));\n\t\n\t\n\t\n\t\nreturn 0;\n\t\t\n\t\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint cmp(const void* a,const void*b)\n{\n\treturn *((int*)a) - *((int*)b);\n}\nint a[1000000][2];\nint main()\n{\n\tint p,q,n,s,i,sum;\n\tscanf(\"%d%d\",&n,&s);\n\tsum=s;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&p,&q,&a[i][1]);\n\t\ta[i][0]=p*p+q*q;\n\t}\n\tqsort(a,n,sizeof(a[0]),cmp);\n\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(sum<1000000)\n\t\t\t\tsum+=a[i][1];\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\tif(sum<1000000)\n\t\tprintf(\"-1\\n\");\n\telse\n\t\tprintf(\"%.7lf\\n\",sqrt(a[i-1][0]));\n\t\n\t\n\t\n\t\nreturn 0;\n\t\t\n\t\n}"}
{"similarity_score": 0.9448198198198198, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c66b19da3f80e18fec19a433a4217176", "bug_code_uid": "3e413323f1042ad577c37b8f7f454f3a", "src_uid": "5de66fbb594bb317654366fd2290c4d3", "apr_id": "f345e44fdd332006a652ee4d46272edc", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n      int t,n,i,j,l;\n      char arr[2000];\n      scanf(\"%d\",&t );\n      while(t--)\n      {\n            scanf(\"%s\",arr);\n          int   count=0,count1=0,sum=0,m=-1,n=-1;\n\n\n\n            l=strlen(arr);\n\n\n\n            for(i=0 ; i<l ;i++)\n            {\n                  if(arr[i]=='1')\n                  {\n                     m=i;\n                     break ;\n                  }\n\n\n                 // break;\n\n\n\n\n\n            }\n            for(i=l-1 ; i>=0 ;i--)\n            {\n               if(arr[i]=='1')\n               {\n                     n=i ;\n                     break ;\n               }\n\n\n\n            }\n            for(i=m ; i<n ; i++)\n            {\n                  if(arr[i]=='0')\n                        count++ ;\n\n\n            }\n\n            printf(\"%d\\n\",count);\n            if(m== -1 && n == -1)\n            {\n                  printf(\"0\");\n            }\n\n\n      }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n      int t,n,i,j,l;\n      char arr[2000];\n      scanf(\"%d\",&t );\n      while(t--)\n      {\n            scanf(\"%s\",arr);\n          int   count=0,count1=0,sum=0,m=-1,n=-1;\n\n\n\n            l=strlen(arr);\n\n\n\n            for(i=0 ; i<l ;i++)\n            {\n                  if(arr[i]=='1')\n                  {\n                     m=i;\n                     break ;\n                  }\n\n\n                 // break;\n\n\n\n\n\n            }\n            for(i=l-1 ; i>=0 ;i--)\n            {\n               if(arr[i]=='1')\n               {\n                     n=i ;\n                     break ;\n               }\n\n\n\n            }\n            for(i=m ; i<n ; i++)\n            {\n                  if(arr[i]=='0')\n                        count++ ;\n\n\n            }\n\n            printf(\"%d\\n\",count);\n\n\n\n      }\n}\n"}
{"similarity_score": 0.960960960960961, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fe34f09556cb1ed9920a64a994110a96", "bug_code_uid": "39a211b40a3392aaa7b6ea694bcfdb99", "src_uid": "f5451b19cf835b1cb154253fbe4ea6df", "apr_id": "acbdb1369bdc26011ef692e551d2b824", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\n\nint main()\n{\n\tint a[26],k,x,j;\n\tchar str[1000],s[1000],s1[1000];\n\tint n=0;\n\t\n\tfor(int i=0; i<26; i++)\n\t{\n\t\ta[i] = 0;\n\t}\n\t\n\tscanf(\"%d\",&k);\n\tscanf(\"%s\",str);\n\tint len = strlen(str);\n\t\n\t\n\tfor(int i=0; i<len; i++)\n\t{\n\t\ta[str[i]-97]++;\n\t}\n\t\n\tfor(int i=0; i<26; i++)\n\t{\n\t\tif(a[i]%k == 0)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tprintf(\"-1\");\n\t\t\texit(0);\n\t\t}\n\t}\n\t\n\tfor(int i=0; i<26; i++)\n\t{\n\t\tif(a[i]!= 0)\n\t\t{\n\t\t\tx = a[i]/k;\n\t\t\tfor(j = 0; j<x; j++)\n\t\t\t{\n//\t\t\t\tprintf(\"%c\",i+97);\n\t\t\t\ts[n] = i+97;\n\t\t\t\tn++;\n\t\t\t}\n\t\t}\n\t}\t\n//\ts[n] = '\\0';\n\ts1[0] = '\\0';\n\twhile(k>=1)\n\t{\n\t\tstrcat(s1,s);\n\t\tk--;\n\t}\n\t\n\tprintf(\"%s\",s1);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\n\nint main()\n{\n\tint a[26],k,x,j;\n\tchar str[10010],s[10010],s1[10010];\n\tint n=0;\n\t\n\tfor(int i=0; i<26; i++)\n\t{\n\t\ta[i] = 0;\n\t}\n\t\n\tscanf(\"%d\",&k);\n\tscanf(\"%s\",str);\n\tint len = strlen(str);\n\t\n\t\n\tfor(int i=0; i<len; i++)\n\t{\n\t\ta[str[i]-97]++;\n\t}\n\t\n\tfor(int i=0; i<26; i++)\n\t{\n\t\tif(a[i]%k == 0)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tprintf(\"-1\");\n\t\t\texit(0);\n\t\t}\n\t}\n\t\n\tfor(int i=0; i<26; i++)\n\t{\n\t\tif(a[i]!= 0)\n\t\t{\n\t\t\tx = a[i]/k;\n\t\t\tfor(j = 0; j<x; j++)\n\t\t\t{\n//\t\t\t\tprintf(\"%c\",i+97);\n\t\t\t\ts[n] = i+97;\n\t\t\t\tn++;\n\t\t\t}\n\t\t}\n\t}\t\n\n\ts1[0] = '\\0';\n\twhile(k>=1)\n\t{\n\t\tstrcat(s1,s);\n\t\tk--;\n\t}\n\t\n\tprintf(\"%s\",s1);\n\treturn 0;\n}"}
{"similarity_score": 0.47664670658682634, "equal_cnt": 22, "replace_cnt": 11, "delete_cnt": 6, "insert_cnt": 4, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "7244a84230dd71db1d6f3800b5441a32", "bug_code_uid": "8f319d188c789aa43aecb1478b7c8cb0", "src_uid": "524273686586cdeb7827ffc1ad59d85a", "apr_id": "d41d711cbfb9c851f88de7c8687e636e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    int i,j;\n    char s;\n    int a=0;\n    int x=0,y=0;\n    for(i=1; i<=n; i++)\n    {\n        for(j=1; j<=m; j++)\n        {    \n            scanf(\"%c\",&s);\n            if(s=='B')\n            {\n                x+=i;\n                y+=j;\n                a++;\n            }\n        }\n    }\n    printf(\"%d %d\\n\",x/a,y/a);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   char a;\n   long long i,t,c=0,d=0,n,m,j,x,q,p;\n   scanf(\"%lld %lld\\n\",&n,&m);\n   p=0;q=0;c=0;d=0;\n   for(i=1;i<=n;i++)\n   {\n       for(j=1;j<=m;j++)\n       {\n           scanf(\"%c\",&a);\n           if(a=='B')\n           {p+=i;c++;\n           q+=j;d++;}\n       }\n       scanf(\"\\n\");\n   }\n        p=p/c;\n       q=q/d;\n        printf(\"%lld %lld\\n\",p,q);\n    return 0;\n}"}
{"similarity_score": 0.41675854465270123, "equal_cnt": 30, "replace_cnt": 19, "delete_cnt": 5, "insert_cnt": 6, "fix_ops_cnt": 30, "lang": "GNU C", "fix_code_uid": "c1d0d13acdaa5eae2abdd631d3a6a5e6", "bug_code_uid": "d042c99d4715df375badf088687dd2e3", "src_uid": "b2cd2f15caf4fac334146f28566fd4a6", "apr_id": "fdf7931df91046f63d3340f786db7703", "difficulty": 2000, "tags": ["hashing", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#define trans(x,y) if(!x) x = n-1, max.x++; if(!y) y = m-1, max.y++; if(x == n) x = 0, max.x--; if(y == m) y = 0, max.y--;\ntypedef struct pair { int x, y; }pair; pair max, h[2000][2000];\nint i, j, k, s, n, m, cx, cy, hash[2000][2000];\nchar matrix[2000][2000];\n\nvoid dfs(int x, int y, pair max) {\n\tif(matrix[x][y] == '#') return ;\n\tif(x < 0 || y < 0 || x >= n || y >= m) trans(x,y);\n\tif(hash[x][y]) { if(h[x][y].x == max.x || h[x][y].y == max.y) { puts(\"Yes\"); exit(0); }  return ;}\n\th[x][y].x = max.y, h[x][y].y = max.y, hash[x][y] = 1;\n\tdfs(x,y+1,max);\n\tdfs(x,y-1,max);\n\tdfs(x+1,y,max);\n\tdfs(x-1,y,max);\n}\n\nint main() {\n\tscanf(\"%d %d\", &n, &m);\n\tfor(i=0; i<n; i++) {\n\t\tscanf(\"%s\", matrix[i]);\n\t\tfor(j = 0; j < m; j++) { if(matrix[i][j] == 'S') matrix[i][j] = '.', cx = i, cy = j; }\n\t}\n\tdfs(cx,cy,max);\n\tputs(\"No\");\n\treturn 0;\n}\n", "fixed": "#include<stdlib.h>\n#include<stdio.h>\n\ntypedef struct pair{ int x, y; } pair;\n\nint const N = 2000;\n\npair lab[2000][2000], max;\n\nint i, j, k, s, n, m, x, y, childX, childY;\n\nchar matrix[2000][2000];\n\nint hash[2000][2000];\n\nvoid dfs(int x, int y, pair max) {\t\n\tif(x < 0 || y < 0 || x >= n || y >= m) {\n\t\tif(x >= n) x = 0, max.x++; if(y >= m) y = 0, max.y++;\n\t\tif(x < 0) x = n-1, max.x--; if(y < 0) y = m-1, max.y--;\n\t}\n\tif(matrix[x][y] == '#') return ;\n\tif(hash[x][y]) {\n\t\tif(lab[x][y].x != max.x || lab[x][y].y != max.y) { printf(\"Yes\");  exit(0); }\n\t\treturn ;\n\t}\n\thash[x][y] = 1, lab[x][y].x = max.x, lab[x][y].y = max.y;\n\tdfs(x+1,y, max);\n\tdfs(x-1,y, max);\n\tdfs(x,y+1, max);\n\tdfs(x,y-1, max);\n}\n\nint main()\n{\n\tscanf(\"%d %d\", &n, &m);\n\tfor(i = 0; i < n; i++) {\n\t\tscanf(\"%s\", matrix[i]);\n\t\tfor(j = 0; j < m; j++) if(matrix[i][j] == 'S') { matrix[i][j] = '.', childX = i, childY = j;  break; }\n\t}\n\tdfs(childX, childY, max);\n\tputs(\"No\");\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.25088757396449707, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "38cdc7b5b6ebed68e95728c1877a6dc0", "bug_code_uid": "1ee9922ca1e8a09ede1a392ecaa31a53", "src_uid": "7d6f76e24fe9a352beea820ab56f03b6", "apr_id": "6f6674bc502ac3acffdf304d834c19c2", "difficulty": 1200, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint Pow(int x , int n);\n\nint main(){\n    int t , n , k=0 , i , a[5] , s=0;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d\",&n);\n        k=0;s=0;\n        for(i=0;n>0;i++){\n            a[i]=(n%10)*Pow(10,i);\n            n/=10;\n            s++;\n            if(a[i] != 0) k++;\n        }\n        printf(\"%d\\n\",k);\n        for(i=0;i<s;i++){\n            if(a[i] != 0) printf(\"%d \",a[i]);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n\nint Pow(int x , int n){\n    int i , r=1;\n    for(i=0;i<n;i++){\n        r*=x;\n    }\n    return r;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int t , n , k , temp , r;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d%d\",&n,&k);\n        temp=k/(n-1);\n        r=k%(n-1);\n        r+=temp*n;\n        if(k == temp*(n-1)) r--;\n        printf(\"%d\\n\",r);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9805194805194806, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fc54f5300c8f9440632b880d69033104", "bug_code_uid": "a1ab972a35c3de742be8df7e4e1225bd", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "b4715c2f6389323f4be77970a1d2170b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\nint a,b,c,X=0;\r\nscanf(\"%d\",&a);\r\nfor(b=0;b<a;b++)\r\n{\r\n\tscanf(\"%d\",&c);\r\n\tif(c>=1900 ){\r\n\tX= 1;\r\n\t}\r\n\telse if(c>=1600 && c<=1899){\r\n\t\tX=2;\r\n\t}\r\n\telse if(c>=1400 && c<=1599){\r\n\t\tX=3;\r\n\t}\r\n\t\r\n\telse if(c<=1399 && c=>-5000){\r\n\t\tX=4;\r\n\t}\r\n\tprintf(\"Division %d\\n\",X);\r\n}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\nint a,b,c,X=0;\r\nscanf(\"%d\",&a);\r\nfor(b=0;b<a;b++)\r\n{\r\n\tscanf(\"%d\",&c);\r\n\tif(c>=1900 ){\r\n\tX= 1;\r\n\t}\r\n\telse if(c>=1600 && c<=1899){\r\n\t\tX=2;\r\n\t}\r\n\telse if(c>=1400 && c<=1599){\r\n\t\tX=3;\r\n\t}\r\n\t\r\n\telse if(c<=1399){\r\n\t\tX=4;\r\n\t}\r\n\tprintf(\"Division %d\\n\",X);\r\n}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9951100244498777, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "90cc71fc39d295d16a661eb9660c754b", "bug_code_uid": "3fb8ce2b6f56dcd3672a3d071772399c", "src_uid": "07c370b99fe85984f5e20826a3bf5eb9", "apr_id": "64eb735c6fec40659ee36c29c69c6d17", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,j,cnt,a;\n    char s[100][15];\n    scanf(\"%d \",&a);\n    cnt=a;\n    for(i=0;i<a;i++)\n    {\n        gets(s[i]);\n    }\n    for(i=0;i<a;i++)\n    {\n        for(j=i+1;j<a;j++)\n        {\n            n=strcmp(s[i],s[j]);\n            if(n==0)\n            {\n                cnt--;\n                break;\n            }\n        }\n    }\n    printf(\"%d\",cnt);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,j,cnt,a;\n    char s[100][30];\n    scanf(\"%d \",&a);\n    cnt=a;\n    for(i=0;i<a;i++)\n    {\n        gets(s[i]);\n    }\n    for(i=0;i<a;i++)\n    {\n        for(j=i+1;j<a;j++)\n        {\n            n=strcmp(s[i],s[j]);\n            if(n==0)\n            {\n                cnt--;\n                break;\n            }\n        }\n    }\n    printf(\"%d\",cnt);\n}\n"}
{"similarity_score": 0.9725888324873097, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "bb2f82b1abccf02878bd580744188eab", "bug_code_uid": "38b08f779c790c20cc15eaf96db4ad5c", "src_uid": "480defc596ee5bc800ea569fd76dc584", "apr_id": "892d54c3a7b676c5c13d6851d133e2f4", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define N 1003\n\nint cnt[26];\nint size=sizeof(cnt[0]);\nint cmp(const void *a, const void *b)\n{\n\treturn *(int*)b-*(int*)a;\n}\nint min(int a, int b)\n{\n\treturn a<b? a : b;\n}\nchar s[N];\n\nint main(void)\n{\n\tint n, k, i, ans, t;\n\t\n\tscanf(\"%d%d%*c\", &n, &k);\n\tgets(s);\n\tfor (i=0; i<n; ++i)\n\t\t++cnt[s[i]-'A'];\n\tqsort(cnt, 26, size, cmp);\n\tans = 0;\n\tfor (i=0; i<n && k; ++i) {\n\t\tt = min(k,cnt[i]);\n\t\tans += t*t;\n\t\tk -= t;\n\t}\n\tprintf(\"%d\\n\", ans);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define N 100005\n\nint cnt[26];\nint size=sizeof(cnt[0]);\nint cmp(const void *a, const void *b)\n{\n\treturn *(int*)b-*(int*)a;\n}\nint min(int a, int b)\n{\n\treturn a<b? a : b;\n}\nchar s[N];\n\nint main(void)\n{\n\tint n, k, i;\n\tlong long ans, t;\n\t\n\tscanf(\"%d%d%*c\", &n, &k);\n\tgets(s);\n\tfor (i=0; i<n; ++i)\n\t\t++cnt[s[i]-'A'];\n\tqsort(cnt, 26, size, cmp);\n\tans = 0;\n\tfor (i=0; k; ++i) {\n\t\tt = min(k,cnt[i]);\n\t\tans += t*t;\n\t\tk -= t;\n\t}\n\tprintf(\"%I64d\\n\", ans);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.35714285714285715, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "f9b3c9b6b951f7ef65165beab3637b08", "bug_code_uid": "1802a4f30505e96fce0f4663b51d9c2a", "src_uid": "1f41c017102f4a997be324a4ec9b7fd6", "apr_id": "6ab42d4f04023b57879bd3fc3ed49e53", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[1000000],b[600000];\nint main()\n{\n\tint n,m,k;\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tint i,j;\n\tfor(i=0;i<m;i++)\n\t\tscanf(\"%d\",&a[i]);//\u6d1e\u7684\u4f4d\u7f6e \n\tint jh;\n\tfor(i=0;i<2*k;i++)\n\t\tscanf(\"%d\",&b[i]);//\u64cd\u4f5c \n\tint ans=1;\n\tfor(i=0;i<2*k-1;i+=2)\n\t{\n\t\tif(b[i]==ans) \n\t\t{\n\t\t\tans=b[i+1];\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\n\t\t\t\tif(ans==a[j])\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d\\n\",ans);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(b[i+1]==ans)\n\t\t{\n\t\t\tans=b[i];\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tif(ans==a[j])\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d\\n\",ans);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n__int64 a[1000000],b[600000],c[1000000];\nint main()\n{\n\t__int64 n,m,k;\n\tscanf(\"%I64d%I64d%I64d\",&n,&m,&k);\n\t__int64 i,j;\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%I64d\",&a[i]);//\u6d1e\u7684\u4f4d\u7f6e \n\t\tc[a[i]]++;\n\t}\n\tfor(i=0;i<2*k;i++)\n\t\t{\n\t\t\tscanf(\"%I64d\",&b[i]);//\u64cd\u4f5c\n\t\t}\n\t__int64 ans=1;\n\tfor(i=0;i<2*k-1;i+=2)\n\t{\n\t\tif(c[1]==1)\n\t\t{\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t\treturn 0;\n\t\t}\n\t\telse if(b[i]==ans) \n\t\t{\n\t\t\tif(c[b[i+1]]==1)\n\t\t\t{\n\t\t\t\tans=b[i+1];\n\t\t\t\tprintf(\"%I64d\\n\",ans);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse ans=b[i+1];\n\t\t}\n\t\telse if(b[i+1]==ans)\n\t\t{\n\t\t\tif(c[b[i]]==1)\n\t\t\t{\n\t\t\t\tans=b[i];\n\t\t\t\tprintf(\"%I64d\\n\",ans);\t\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse ans=b[i];\n\t\t}\n\t\telse continue;\n\t}\n\tprintf(\"%I64d\\n\",ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.5132075471698113, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7d3a8404c471854d026efc30583e27bd", "bug_code_uid": "97446f0c700d3ce03c88443fc483d770", "src_uid": "c249103153c5006e9b37bf15a51fe261", "apr_id": "6fda7c72d1ef5ba007cfc6ee82218ab3", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,m,i,s=0,x ;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&m);\n\tint c[3] = {0,0,0};\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",x);\n\t\tc[x]=c[x]+1\t;\n\t}\n\ts=c[0];\n\tfor(i=1;i<3;i++)\n\t{\n\t\tif(c[i]<s)\n\t\t{\n\t\t\ts=c[i];\n\t\t}\n\t}\n\tprintf(\"%d\",s);\n\t\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,m,i,s=0,x ;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&m);\n\tint c[n] ;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tc[i]=0;\n\t}\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tc[x-1]=c[x-1]+1\t;\n\t}\n\ts=c[0];\n\tfor(i=1;i<n;i++)\n\t{\n\t\t\n\t\tif(c[i]<s)\n\t\t{\n\t\t\ts=c[i];\n\t\t}\n\t}\n\tprintf(\"\\n %d\",s);\n\t\n}"}
{"similarity_score": 0.7202441505595117, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "d746fff98548daf1929bfaaa575c7c50", "bug_code_uid": "f910ad0d2c020d863157ab8552c362ba", "src_uid": "06898c5e25de2664895f512f6b766915", "apr_id": "5b86079f3808a224ee6ebfe6932aca39", "difficulty": 1100, "tags": ["implementation", "sortings", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint l,t=0,b,c,d,i,j=0,k=0,n,m,x[999];\n\tchar a[999][999];\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",a[i]);\n\t\tx[i]=strlen(a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(x[i]==x[n])\n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tif(x[i]<x[n])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t}\n\n\tif(((j+1)/m)==1)\n\t{\n\t\tt=0;\n\t}\n\tif(((j+1)/m)>1)\n\t{\n\t\tt=((j+1)/m)*(5);\n\t}\n\tif(((j+k)/m)==1)\n\t{\n\t\tl=0;\n\t}\n\tif(((j+k)/m)>1)\n\t{\n\t\tl=((j+1)/m)*(5);\n\t}\n\n\tprintf(\"%d %d\",j+1+t,j+k+l);\n\treturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint l=0,t=0,b,c,d,i,j=0,k=0,n,m,x[999];\n\tchar a[999][999];\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",a[i]);\n\t\tx[i]=strlen(a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(x[i]==x[n])\n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tif(x[i]<x[n])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t}\n\tif(((j+1)/m)>=1)\n\t{\n\t\tif((j+1)%m==0)\n\t\t{\n\t\t\tt=(((j+1)/m)*5)-5;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tt=(((j+1)/m)*5);\n\t\t}\n\t}\n\tif(((j+k)/m)>=1)\n\t{\n\t\tif((j+k)%m==0)\n\t\t{\n\t\t\tl=(((j+k)/m)*5)-5;;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl=((j+k)/m)*5;\n\t\t}\n\t}\n\tprintf(\"%d %d\",j+1+t,j+k+l);\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.9936467598475223, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8ef9a859ae11b58a07092290e33d57dc", "bug_code_uid": "62954ed51ff35b381c17bc4c507b2b8b", "src_uid": "ee105b664099808143a94a374d6d5daa", "apr_id": "78f01b195bc7b9487c36588477aa075f", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    int b, k;\n    unsigned long long int a[100];\n    unsigned long long int n = 0;\n\n    scanf(\"%d %d\", &b, &k);\n\n    int i;\n    a[0] = 1;\n    for (i = 1; i < k; i++) {\n        a[i] = a[i - 1] * b;\n    }\n    for (i = k - 1; i >= 0; i--) {\n        int d;\n        scanf(\"%d\", &d);\n        n += d * a[i];\n    }\n    printf(\"%s\", (n % 2 == 0) ? \"even\" : \"odd\");\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n    int b, k;\n    unsigned long long int a[100000];\n    unsigned long long int n = 0;\n\n    scanf(\"%d %d\", &b, &k);\n\n    int i;\n    a[0] = 1;\n    for (i = 1; i < k; i++) {\n        a[i] = a[i - 1] * b;\n    }\n    for (i = k - 1; i >= 0; i--) {\n        int d;\n        scanf(\"%d\", &d);\n        n += (d * a[i]);\n    }\n    printf(\"%s\", (n % 2 == 0) ? \"even\" : \"odd\");\n}\n"}
{"similarity_score": 0.7864823348694316, "equal_cnt": 22, "replace_cnt": 11, "delete_cnt": 6, "insert_cnt": 5, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "a8b8ccc56c1af555c76a8979f5c02da8", "bug_code_uid": "485c7aa85ee87c5479946c08029d9cd0", "src_uid": "20dd260775ea71b1fb5b42bcac90a6f2", "apr_id": "dbb97f0c2c300a942c00f3f8482dc325", "difficulty": 800, "tags": ["greedy", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        int x;\r\n        scanf(\"%d\",&x);\r\n            int arr[x];\r\n        for (int i = 0; i < x; i++)\r\n        {\r\n            int m;\r\n            scanf(\"%d\",&arr[i]);\r\n        int min=arr[0];\r\n        for (int i = 0; i < m; i++)\r\n        {\r\n            if(arr[i]<=min){\r\n                min=arr[i];\r\n            }\r\n        }\r\n        int sum=min*x;\r\n        int sum_i;\r\n        for (int i = 0; i < x; i++)\r\n        {\r\n            sum_i=sum_i+i;\r\n        }\r\n        printf(\"%d\",((sum_i)-(sum)));\r\n        \r\n\r\n            \r\n\r\n\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n\r\n    return(0);\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++) {\r\n        int x;\r\n        scanf(\"%d\",&x);\r\n        int arr[x];\r\n        for (int i = 0; i < x; i++) {\r\n            scanf(\"%d\", arr+i);\r\n        }\r\n        int min = arr[0];\r\n        for (int i = 1; i < x; i++) {\r\n            if (arr[i] < min) {\r\n                min = arr[i];\r\n            }\r\n        }\r\n        int sum = min*x;\r\n        int sum_i = 0;\r\n        for (int i = 0; i < x; i++) {\r\n            sum_i = sum_i + arr[i];\r\n        }\r\n        printf(\"%d\\n\",((sum_i)-(sum)));     \r\n    }\r\n    return(0);\r\n}"}
{"similarity_score": 0.17898832684824903, "equal_cnt": 15, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "89a71c275ff67bf21b58818c1770bdfd", "bug_code_uid": "09e641aa121bbf2b3d77554e0c5df7ff", "src_uid": "53a3313f5d6ce19413d72473717054fc", "apr_id": "18e31d9386981b1dcbd36b409e4833f6", "difficulty": 900, "tags": ["implementation", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n/*\n * Codeforces 1234A\n*/\n\nint progress(int xo[],int count) {\n\tint i,max=0,min=0,lack,ans;\n\tmin = xo[0];\n\tfor(i=0;i<count;i++) {\n\t\t// find the max\n\t\tif(xo[i]>=max)\n\t\t\tmax = xo[i];\n\t\t// find the min\n\t\tif(xo[i]<=min)\n\t\t\tmin = xo[i];\n\t}\n\tlack = max - min;\n\tfor(i=0;i<count;i++) {\n\t\tif(xo[i] != max)\n\t\t\txo[i] += lack;\n\t}\n\ti = 0;\n\tans = 0;\n\t// find the difference value\n\twhile(i < count) {\n\t\tif(xo[i] > max) {\n\t\t\tans = 1;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tif(ans == 1)\n\t\tprintf(\"NO\\n\");\n\telse\n\t\tprintf(\"YES\\n\");\n}\n\nint main () {\n\tint t,i,n,j;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++) {\n\t\tscanf(\"%d\",&n);\n\t\tint numrray[n];\n\t\tfor(j=0;j<n;j++)\n\t\t\tscanf(\"%d\",&numrray[j]);\n\t\tprogress(numrray,n);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define MAX 100\n\nint main (void) {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--) {\n\t\tint n,i,a[MAX],k=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=0;i<n;i++) {\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tif(a[i]%2!=0) k++;\n\t\t}\n\t\tif(k == 0 || k == n) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n} "}
{"similarity_score": 0.8186813186813187, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "4e51b0d49cdcf1cf795d26920e36ce44", "bug_code_uid": "2ef164cd3fcfbf87b69770ae9ae5c15b", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "c514894087f223ee373fe176529430d6", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int a,b;\n    scanf(\"%d %d\",&a,&b);\n    if (a==b)\n        printf(\"0\\n\");\n    else\n        printf(\"1\\n\");\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,a,b;\n    scanf(\"%d %d %d\",&n,&a,&b);\n    char s[n+1];\n    scanf(\"%s\",s);\n    if (s[a-1]==s[b-1])\n        printf(\"0\\n\");\n    else\n        printf(\"1\\n\");\n    return 0;\n}"}
{"similarity_score": 0.6009280742459396, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "dcadfad647fa9a4c229f50c50fa72e42", "bug_code_uid": "cafe8d83cbaa9ed5ceb2269f03045f2f", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "9212b1f4bfcb8aa70e5f36a2e1b712df", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j=0,sum=0;\n\n    scanf(\"%d%d\",&n,&m);\n\n    int a[n];\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]<0){\n            sum=sum-a[i];\n            j++;\n\n            if(j==m) break;\n\n        }\n\n    }\n    printf(\"%d\",sum);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,k=0,sum=0,temp,j;\n\n    scanf(\"%d%d\",&n,&m);\n\n    int a[n];\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n-1;i++){\n        for(j=i+1;j<n;j++){\n            if(a[i]>a[j]){\n                temp=a[i];\n                a[i]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]<0){\n            sum=sum-a[i];\n\n            k++;\n\n        }\n\n        if(k==m) break;\n\n    }\n\n    printf(\"%d\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.4675505931612003, "equal_cnt": 25, "replace_cnt": 13, "delete_cnt": 3, "insert_cnt": 9, "fix_ops_cnt": 25, "lang": "GNU C", "fix_code_uid": "28595ba2261a334166cdd5dfd6d87cd8", "bug_code_uid": "067110cb3d3efe626a338ec59533db97", "src_uid": "1951bf085050c7e32fcf713132b30605", "apr_id": "81442c478e01c9a717212ab3a8618671", "difficulty": 1500, "tags": ["sortings", "implementation", "*special"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\nusing namespace std;\n#include<bits/stdc++.h>\nint main()\n{\n    int n,l,r,i,j;\n    cin>>n>>l>>r;\n    int arr1[n];\n    map <int,int> m;\n    map <int,int> :: iterator it;\n    int arr2[n];\n    for(i=0;i<n;i++)\n        cin>>arr1[i];\n    for(i=0;i<n;i++)\n        cin>>arr2[i];\n    l--;\n    r--;\n    for(i=l;i<=r;i++)\n        m[arr1[i]]++;\n    for(i=l;i<=r;i++)\n    {\n        if(m[arr2[i]]==0)\n        {\n            cout<<\"LIE\";\n            return 0;\n        }\n        m[arr2[i]]--;\n    }\n    for(it = m.begin();it!=m.end();it++)\n    {\n        if((it->second)>0)\n        {\n            cout<<\"LIE\";\n            return 0;\n        }\n    }\n    cout<<\"TRUTH\";\n}\n", "fixed": "#include<stdio.h>\n\nint m[100005];\nint main()\n{\n    int n,l,r,i,j;\n    scanf(\"%d%d%d\",&n,&l,&r);\n    int arr1[n];\n    int arr2[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&arr1[i]);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&arr2[i]);\n    l--;\n    r--;\n    for(i=l;i<=r;i++)\n        m[arr1[i]]++;\n    for(i=l;i<=r;i++)\n    {\n        m[arr2[i]]--;\n    }\n    for(i=0;i<l;i++)\n    {\n        if(arr2[i]!=arr1[i])\n        {\n            printf(\"LIE\");\n            return 0;\n        }\n    }\n    for(i=r+1;i<n;i++)\n    {\n        if(arr2[i]!=arr1[i])\n        {\n            printf(\"LIE\");\n            return 0;\n        }\n    }\n    for(i=0;i<100005;i++)\n    {\n        if(m[i]!=0)\n        {\n            printf(\"LIE\");\n            return 0;\n        }\n    }\n    printf(\"TRUTH\");\n}\n\n"}
{"similarity_score": 0.9930394431554525, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a3981f02dc5164a8dafb619d93c0f1e6", "bug_code_uid": "6ca8804996ece7004402c66db6e28244", "src_uid": "48bb148e2c4d003cad9d57e7b1ab78fb", "apr_id": "0fcaec1ae5c2db0256166fa7d0fa9e85", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint a[100],n,i,j;\n\tscanf(\"%d\",&n);\n\tfor(i-0;i<n;i++) scanf(\"%d\",&a[i]);\n\tfor(j=1;j<=n;j++)\n\tfor(i=0;i<n;i++)\n\tif(a[i]==j) \n\t{\n\t\tprintf(\"%d\",i+1);\n\t\tbreak;\n\t}\n\tputd(\"\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint a[100],n,i,j;\n\tscanf(\"%d\",&n);\n\tfor(i-0;i<n;i++) scanf(\"%d\",&a[i]);\n\tfor(j=1;j<=n;j++)\n\tfor(i=0;i<n;i++)\n\tif(a[i]==j) \n\t{\n\t\tprintf(\"%d \",i+1);\n\t\tbreak;\n\t}\n\tputs(\"\");\n\treturn 0;\n}"}
{"similarity_score": 0.9154013015184381, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "d100cd8690717874482fc9f1c085d00c", "bug_code_uid": "5ad5888a97a91f1013ff96b9039b7874", "src_uid": "f93a8bd64a405233342f84542fce314d", "apr_id": "5e78ce8fb734d33fd8604fbff9ccb563", "difficulty": 800, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\n    int i, j, t, n, a[30];\n    scanf(\"%d\", &n);\n\n    for (i = 0; i < n; ++i)\n        scanf(\"%d\", &a[i]);\n\n    for (i = 0; i < n; ++i)\n    {\n\n        for (j = i + 1; j < n; ++j)\n        {\n\n            if (a[i] > a[j])\n            {\n\n                t =  a[i];\n                a[i] = a[j];\n                a[j] = t;\n\n            }\n\n        }\n\n    }\n\n    printf(\"%d\\n\",a[n/2]);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\n    int i, j, t, n, a[1005];\n    scanf(\"%d\", &n);\n\n    for (i = 0; i < n; ++i)\n        scanf(\"%d\", &a[i]);\n\n    for (i = 0; i < n; ++i)\n    {\n\n        for (j = i + 1; j < n; ++j)\n        {\n\n            if (a[i] > a[j])\n            {\n\n                t =  a[i];\n                a[i] = a[j];\n                a[j] = t;\n\n            }\n\n        }\n\n    }\n    if(n%2!=0){\n    printf(\"%d\\n\",a[n/2]);}\n    if(n%2==0){\n\n        printf(\"%d\\n\",a[n/2-1]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9635941130906274, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7ede42d5a8f0dc9edfa3c9ab2419a4a1", "bug_code_uid": "3c42df2938600afeb61b298aca6af3dd", "src_uid": "d9e9c53b391eb44f469cc92fdcf3ea0a", "apr_id": "8344b0e58222cdbb2953fdf477736c59", "difficulty": 1000, "tags": ["constructive algorithms", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint main(int argc, char const *argv[])\n{\n\tint size,i,j,count,count2;\n\tchar tab[100000];\n\tscanf(\"%d\",&size);\n\tscanf(\"%s\",&tab);\n\ti = 0;\n\tcount = 0;\n\twhile (i < size)\n\t{\n\t\tj = i;\n\t\twhile(tab[j] != '\\0')\n\t\t{\n\t\t\tif (tab[i] == tab[j + 1])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ttab[j + 1] = count + '0';\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tcount2 = 0;\n\twhile (i < size)\n\t{\n\t\tif (tab[i]>= 'a' && tab[i] <= 'z')\n\t\t{\n\t\t\tcount2++;\n\t\t}\n\t\ti++;\n\t}\n\tif (count >= 26)\n\t{\n\t\tprintf(\"-1\");\n\t\treturn (0);\n\t}\n\tif ((count2 + count) >= 26)\n\t{\n\t\tprintf(\"-1\");\n\t\treturn (0);\n\t}\n\tprintf(\"%d\\n\",count );\n\t//printf(\"%s\\n\",tab );\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint main(int argc, char const *argv[])\n{\n\tint size,i,j,count,count2;\n\tchar tab[100000];\n\tscanf(\"%d\",&size);\n\tscanf(\"%s\",&tab);\n\ti = 0;\n\tcount = 0;\n\twhile (i < size)\n\t{\n\t\tj = i;\n\t\twhile(tab[j] != '\\0')\n\t\t{\n\t\t\tif (tab[i] == tab[j + 1])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ttab[j + 1] = count + '0';\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tcount2 = 0;\n\twhile (i < size)\n\t{\n\t\tif (tab[i]>= 'a' && tab[i] <= 'z')\n\t\t{\n\t\t\tcount2++;\n\t\t}\n\t\ti++;\n\t}\n\tif (count >= 26)\n\t{\n\t\tprintf(\"-1\");\n\t\treturn (0);\n\t}\n\tif ((count2 + count) > 26)\n\t{\n\t\tprintf(\"-1\");\n\t\treturn (0);\n\t}\n\tprintf(\"%d\\n\",count );\n\treturn 0;\n}"}
{"similarity_score": 0.9834254143646409, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f7d2282487eaacaf5d625245df8d2bbe", "bug_code_uid": "7ce16e048ea21e6876f971a1ff982aa5", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "eac3bb602386cb9affc94f95e14535f1", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\nint n;\n\nscanf(\"%d\",&n);\n\n\nint x;\nint min1 ,min=1000000001,c=0,tag;\nfor(int i=0;i<n;i++){\n    scanf(\"%d\",&x);\n    if(x<=min&&x<100000)\n    {\n        min=x;\n        tag=i+1;\n        if(min1==min)\n            c=2;\n        else\n            c=1;\n\n    }\n    min1=min;\n\n}\nif(c==1)\n    printf(\"%d\",tag);\nelse\n    printf(\"Still Rozdil\");\n\n\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\nint n;\n\nscanf(\"%d\",&n);\n\n\nint x;\nint min1 ,min=1000000001,c,tag;\nfor(int i=0;i<n;i++){\n    scanf(\"%d\",&x);\n    if(x<=min)\n    {\n        min=x;\n        tag=i+1;\n        if(min1==min)\n            c=2;\n        else\n            c=1;\n\n    }\n    min1=min;\n\n}\nif(c==1)\n    printf(\"%d\",tag);\nelse\n    printf(\"Still Rozdil\");\n\n\n\n\n\n\n}\n"}
{"similarity_score": 0.8940298507462686, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a297c7723cd09fe4c427371a9f07e5d0", "bug_code_uid": "1231f84aa5c2f095f5b754b7c3981d55", "src_uid": "f00eb0452f5933103f1f77ef06473c6a", "apr_id": "6735a8b47c122e88095eca2ccc735096", "difficulty": 1300, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nvoid test()\n{\n      int n,k;\n      scanf(\"%d%d\",&n,&k);\n      if(k>=n){\n            printf(\"%d\\n\",1);\n            return;\n      }\n      int root=sqrt(n),max=n;\n      for(int i=1;i<=root;i++){\n            if(n%i==0){\n                  int z=n/i;\n                  if(k>=z){\n                        printf(\"%d\\n\",i);\n                        return;\n                  }\n                  else if(i>=k){\n                        printf(\"%d\\n\",n/i);\n                        return;\n                  }\n                  ///else if(z<max) max=z;\n            }\n      }\n      printf(\"%d\\n\",max);\n}\nint main()\n{\n      int t;\n      scanf(\"%d\",&t);\n      while(t--) test();\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nvoid test()\n{\n      int n,k;\n      scanf(\"%d%d\",&n,&k);\n      if(k>=n){\n            printf(\"%d\\n\",1);\n            return;\n      }\n      int root=sqrt(n),max=n;\n      for(int i=1;i<=root;i++){\n            if(i>k) break;\n            if(n%i==0){\n                  int z=n/i;\n                  if(k>=z){\n                        printf(\"%d\\n\",i);\n                        return;\n                  }\n                  else if(n/i<max) max=n/i;\n            }\n                  ///else if(z<max) max=z;\n      }\n      printf(\"%d\\n\",max);\n}\nint main()\n{\n      int t;\n      scanf(\"%d\",&t);\n      while(t--) test();\n}\n"}
{"similarity_score": 0.9655712050078247, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "79a2b31a486a05be632d7aa183ba466c", "bug_code_uid": "5db802a1c913ccd233bbb2bb66338f2d", "src_uid": "d6e44bd8ac03876cb03be0731f7dda3d", "apr_id": "7458b12ff3068b33be7bc4f0c4298268", "difficulty": 1700, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nlong long a[100005] = { 0 };\ndouble aver, del, add;\nint n, k, m;\nint cmp(const void * a, const void * b)\n{\n\treturn (*(int *)a - *(int *)b);\n}\nint main()\n{\n\tint i, count;\n\tscanf(\"%d %d %d\", &n, &k, &m);\n\tfor (i = 1; i <= n; i++)scanf(\"%I64d\", &a[i]);\n\tqsort(a, n + 1, sizeof(long long), cmp);\n\tfor (i = 1; i <= n; i++)a[i] += a[i - 1];\n\tadd = (a[n] * 1.0 + (n*k < m ? n * k : m)) / n;\n\tfor (i = 1,count=0; i <= n&&count<m; i++,count++)\n\t{\n\t\tdel = (a[n] * 1.0 - a[i] * 1.0 + ((n - i)*k < (m - i) ? (n - i)*k : (m - i))) / (n - i * 1.0);\n\t\tif (del > add)add = del;\n\t}\n\tprintf(\"%.20f\", add);\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nlong long a[100005] = { 0 };\ndouble aver, del, add;\nlong long k, m;\nint n;\nint cmp(const void * a, const void * b)\n{\n\treturn (*(int *)a - *(int *)b);\n}\nint main()\n{\n\tlong long i, count;\n\tscanf(\"%d %I64d %I64d\", &n, &k, &m);\n\tfor (i = 1; i <= n; i++)scanf(\"%I64d\", &a[i]);\n\tqsort(a, n + 1, sizeof(long long), cmp);\n\tfor (i = 1; i <= n; i++)a[i] += a[i - 1];\n\tadd = (a[n] * 1.0 + (n*k < m ? n * k : m)) / n*1.0;\n\tfor (i = 1,count=0; i <= n&&count<m; i++,count++)\n\t{\n\t\tdel = (a[n] * 1.0 - a[i] * 1.0 + ((n - i)*k < (m - i) ? (n - i)*k : (m - i))) / (n - i * 1.0);\n\t\tif (del > add)add = del;\n\t}\n\tprintf(\"%.20f\", add);\n}"}
{"similarity_score": 0.7026022304832714, "equal_cnt": 26, "replace_cnt": 20, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 25, "lang": "GNU C", "fix_code_uid": "495fb73adc8e0a59a4da456befffade0", "bug_code_uid": "18c29d41630b67f31fa6ad0c8617003a", "src_uid": "ace9fbabc2eda81b4e4adf4f2d5ad402", "apr_id": "38436d78ec9c712b56f909df324c8dbd", "difficulty": 1700, "tags": ["dp", "implementation", "greedy", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int x,y,t,v,z;\n    int C[10];\n    scanf(\"%d\",&v);\n    for(x=y=1;x<=9;x++)\n    {\n        scanf(\"%d\",C+x);\n        if(C[y]>=C[x])\n            y=x;\n\n    }\n    if(v/C[y]>0)\n    {\n        z=v/C[y];\n        v=v%C[y];\n        for(x=0;x<z;x++)\n        {\n            for(t=9;t>y;t--)\n            {\n                if(C[t]-C[y]<=v)\n                {\n                    v=v-C[t]-C[y];\n                    break;\n                }\n            }\n            printf(\"%d\",t);\n        }\n    }else\n        printf(\"-1\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int i,j,t,v,z;\n    int c[10];\n    scanf(\"%d\",&v);\n    for(i=j=1;i<=9;i++){\n        scanf(\"%d\",c+i);\n        if(c[j]>=c[i]){\n            j=i;\n        }\n    }\n    if(v/c[j]>0){\n        z=v/c[j];\n        v=v%c[j];\n        for(i=0;i<z;i++){\n            for(t=9;t>j;t--){\n                if(c[t]-c[j]<=v){\n                    v-=c[t]-c[j];\n                    break;\n                }\n            }\n            printf(\"%d\",t);\n        }\n    }else{\n        printf(\"-1\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9984276729559748, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c7857cd90cddc1f12b82002083d38d50", "bug_code_uid": "0945fb40114c23098759e3b5df3745f7", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "ebea966ba5e8fd8dae3a04e4829221b2", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    long n,v,i=0,flag=0,no=0;\n\n    scanf(\"%ld%ld \",&n,&v);\n\n    int **p=malloc(n*sizeof(int *)),a[n],j=0,count=0;\n\n    for( i=0;i<n;i++)\n    {\n        flag=0;\n        scanf(\"%d\",&no);\n         p[i]=malloc(no*sizeof(int ));\n\n        for(j=0;j<no;j++)\n        {\n            scanf(\"%d\",&p[i][j]);\n            if(p[i][j]<v)\n            if(flag==0)\n            {\n                count++;\n                a[i]=1;\n                flag=1;\n\n            }\n        }\n    }\n\n    printf(\"%d\",count);\n\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==1)\n        printf(\"%d \",i+1);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    long n,v,i=0,flag=0,no=0;\n\n    scanf(\"%ld%ld \",&n,&v);\n\n    int **p=malloc(n*sizeof(int *)),a[n],j=0,count=0;\n\n    for( i=0;i<n;i++)\n    {\n        flag=0;\n        scanf(\"%d\",&no);\n         p[i]=malloc(no*sizeof(int ));\n\n        for(j=0;j<no;j++)\n        {\n            scanf(\"%d\",&p[i][j]);\n            if(p[i][j]<v)\n            if(flag==0)\n            {\n                count++;\n                a[i]=1;\n                flag=1;\n\n            }\n        }\n    }\n\n    printf(\"%d\\n\",count);\n\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==1)\n        printf(\"%d \",i+1);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9962149886449659, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9fc563487f6f5d910e016f32624eb284", "bug_code_uid": "725bd2c9794c0f34974eda74a013d754", "src_uid": "9a92221c760a3b6a1e9318f948fe0473", "apr_id": "9266c5191b1ccab97685cedaac026f29", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint dub [n];\n\nint main ()\n{\n    int n = 0;\n    scanf(\"%d\", &n);\n    int nr = n;\n    int size = 1;\n    int tow [1001] = {0};\n    for (int i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &tow[i]);\n    }\n    \n    for (int i = 0; i < n; i++)\n    {\n        if (dub[i] == 1)\n        {\n            continue;\n        }\n        int sz = 1;\n        for (int j = i + 1; j < n; j++)\n        {\n            \n            if (tow[i] == tow[j])\n            {\n                sz++;\n                nr--;\n                dub[j] = 1;\n            }\n        }\n        if (sz > size)\n        {\n            size = sz;\n        }\n    }\n    printf(\"%d %d\", size, nr);\n}", "fixed": "#include <stdio.h>\n\nint dub [1001];\n\nint main ()\n{\n    int n = 0;\n    scanf(\"%d\", &n);\n    int nr = n;\n    int size = 1;\n    int tow [1001] = {0};\n    for (int i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &tow[i]);\n    }\n    \n    for (int i = 0; i < n; i++)\n    {\n        if (dub[i] == 1)\n        {\n            continue;\n        }\n        int sz = 1;\n        for (int j = i + 1; j < n; j++)\n        {\n            \n            if (tow[i] == tow[j])\n            {\n                sz++;\n                nr--;\n                dub[j] = 1;\n            }\n        }\n        if (sz > size)\n        {\n            size = sz;\n        }\n    }\n    printf(\"%d %d\", size, nr);\n}"}
{"similarity_score": 0.9838709677419355, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "50929b6a4dd67b2190e3a15b11b32e53", "bug_code_uid": "9ca4de130424739c38610cb738d1bb9f", "src_uid": "81c6342b7229892d71cb43e72aee99e9", "apr_id": "610f8a39d12b26544fbcd1837b4bcb27", "difficulty": 1300, "tags": ["implementation", "greedy", "trees"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint b[200004];\nint main()\n{\n\tint n;\n\tint a[200004];\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[a[i]]++;\n\t}\n\tint c=1;\n\tfor(int i=0;i<200004;i++)\n\t{\n\t\tif(b[i]>=2)\n\t\t\tc++;\n\t}\n\n\tprintf(\"%d\",c);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint b[200004];\nint main()\n{\n\tint n;\n\tint a[200004];\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[a[i]]++;\n\t}\n\tint c=1;\n\tfor(int i=0;i<200004;i++)\n\t{\n\t\tif(b[i]>=2)\n\t\t\tc+=b[i]-1;\n\t}\n\n\tprintf(\"%d\",c);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9721463681048608, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4ba62eabc078900e03c8e03e735a4519", "bug_code_uid": "bbb02135254cd1c1e08a673505beb6e4", "src_uid": "adb0f6082367dc432e2e096c64f13a56", "apr_id": "bdf33cb52848e3f47ff76808ab7e6a34", "difficulty": 1000, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#define maxn 100005\nint arr[maxn];\nint compare(const void*a,const void*b){\n    int x=*(int*)a;\n    int y=*(int*)b;\n    return x-y;\n}\nvoid swap(int *a,int *b){\n    int temp=*a;\n    *a=*b;\n    *b=temp;\n}\nvoid heapi(int arr[],int n,int i){\n    int la=i;\n    int l=2*i+1;\n    int r=2*i+2;\n    if(l<n&&arr[l]>arr[la]) la=l;\n    if(r<n&&arr[r]>arr[la]) la=r;\n    if(la!=i){\n        swap(&arr[i],&arr[la]);\n        heapi(arr,n,la);\n    }\n}\nvoid heapsort(int arr[],int n){\n    for(int i=n/2-1;i>=0;i--){\n        heapi(arr,n,i);\n    }\n    for(int i=n-1;i>0;i--){\n        swap(&arr[0],&arr[i]);\n        heapi(arr,i,0);\n    }\n}\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n;\n        scanf(\"%d\",&n);\n        for(int i=0;i<2*n;i++) scanf(\"%d\",arr+i);\n        heapsort(arr,2*n);\n        printf(\"%d\\n\",arr[n]-arr[n-1]);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#define maxn 200005\nint arr[maxn];\nint compare(const void*a,const void*b){\n    int x=*(int*)a;\n    int y=*(int*)b;\n    return x-y;\n}\nvoid swap(int *a,int *b){\n    int temp=*a;\n    *a=*b;\n    *b=temp;\n}\nvoid heapi(int arr[],int n,int i){\n    int la=i;\n    int l=2*i+1;\n    int r=2*i+2;\n    if(l<n&&arr[l]>arr[la]) la=l;\n    if(r<n&&arr[r]>arr[la]) la=r;\n    if(la!=i){\n        swap(&arr[i],&arr[la]);\n        heapi(arr,n,la);\n    }\n}\nvoid heapsort(int arr[],int n){\n    for(int i=n/2-1;i>=0;i--){\n        heapi(arr,n,i);\n    }\n    for(int i=n-1;i>0;i--){\n        swap(&arr[0],&arr[i]);\n        heapi(arr,i,0);\n    }\n}\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n;\n        scanf(\"%d\",&n);\n        for(int i=0;i<2*n;i++) scanf(\"%d\",arr+i);\n        heapsort(arr,2*n);\n        //qsort(arr,2*n,sizeof(arr[0]),compare);\n        printf(\"%d\\n\",arr[n]-arr[n-1]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.7539882451721243, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "14e0ff076fda726b9b7167b2c0ed9bc3", "bug_code_uid": "051b67f5e64113538f75774d1293a41f", "src_uid": "a850dd88a67a6295823e70e2c5c857c9", "apr_id": "ac8d8127e335198a55668dd9d406e6b4", "difficulty": 1500, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nstruct tree\n{\n    long long int point;\n    long long int height;\n};\nint main()\n{\n    int n,i,j,trees=0;\n    struct tree t[100005];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&t[i].point);\n        scanf(\"%I64d\",&t[i].height);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(i==0 || i==n-1)\n            trees++;\n        else if(i<n-1 && (t[i].point+t[i].height<t[i+1].point || t[i].point-t[i].height>t[i-1].point))\n            trees++;\n    }\n    printf(\"%d\\n\",trees);\n    return 0;\n}", "fixed": "#include <stdio.h>\nstruct tree\n{\n    long long int point;\n    long long int height;\n};\nint main()\n{\n    int n,i,j,trees=0;\n    struct tree t[100005];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&t[i].point);\n        scanf(\"%I64d\",&t[i].height);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(i==0 || i==n-1)\n            trees++;\n        else\n        {\n            if(t[i].point-t[i].height>t[i-1].point)\n                trees++;\n            else if(t[i].point+t[i].height<t[i+1].point)\n            {\n                trees++;\n                t[i].point=t[i].point+t[i].height;\n            }\n        }\n    }\n    printf(\"%d\\n\",trees);\n    return 0;\n}"}
{"similarity_score": 0.35046728971962615, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "34349f5b1943b18a683e1732d3150ba3", "bug_code_uid": "d0519da991f452e8bf5d0baaa512b9a1", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "864e415778172e0b84cf898dfef93156", "difficulty": 1100, "tags": ["greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\nint main ()\n{\n\tchar input[100001], delete[100001], max[100001];\n\tint i,j,z;\n\tgets(input);\n\tfor (i=0; i<100001; i++)\n\tmax[i]=0;\n\tfor(i=0; input[i]!='\\0'; i++)\n\t{\n\t\tz=0;\n\t\tfor(j=0; input[j]!='\\0'; j++)\n\t\t{\n\t\t\tif (j!=i)\n\t\t\t\tdelete[z++]=input[j];\n\t\t}\n\t\tdelete[z]='\\0';\n\t\tif(strcmp(max, delete)<0)\n           strcpy(max, delete);\t\t\n\t}\n\tprintf(\"%s\", max);\n\treturn 0;\n}\n\t\t\n\t", "fixed": "#include <stdio.h>\n#include<string.h>\nint main ()\n{\n\tchar input[100001], delete[100001];\n\tint i,j=0,z, length=0;\n\tgets(input);\n\tfor(i=0; input[i]!='\\0'; i++)\n\t{\n\t\tif (input[i]=='0')\n\t\t{\n\t\t\tz=0;\n\t\t\tfor(j=0; input[j]!='\\0'; j++)\n\t\t\t{\n\t\t\t\tif (j!=i)\n\t\t\t\t\tdelete[z++]=input[j];\n\t\t\t\t\tlength=j;\n\t\t\t}\n\t\t\tdelete[z]='\\0';\n\t\t\tprintf(\"%s\", delete);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif (length==0)\n\t{\n\t\ti=strlen(input);\n\t\tinput[i-1]='\\0';\n\t\tprintf(input);\n\t}\n\treturn 0;\n}\n\t\t\n\t"}
{"similarity_score": 0.9957805907172996, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7a6341821eaaa5a249e4041a875dc0c8", "bug_code_uid": "e6848e4b6e1bc41fdf875e8116b6a518", "src_uid": "27ddccc777ef9040284ab6314cbd70e7", "apr_id": "a8c633ef08a6328bb898cea143808097", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){int t;int a, b;scanf(\"%d\", &t); while(t){scanf(\"%d %d\", &a, &b);printf(\"%d\\n\", a+b);t--}}", "fixed": "#include<stdio.h>\nint main(){int t;int a, b;scanf(\"%d\", &t); while(t){scanf(\"%d %d\", &a, &b);printf(\"%d\\n\", a+b);t--;}}"}
{"similarity_score": 0.4378818737270876, "equal_cnt": 18, "replace_cnt": 11, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "8a6b5162e6ecd2b6a63d8ff313ff6516", "bug_code_uid": "a7bd28f1703751e46edf4d238245d54c", "src_uid": "6c9cbe714f8f594654ebc59b6059b30a", "apr_id": "7372e3658b0c85fcba0ffac962e8c371", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int a[110],i;\n    while(scanf(\"%d\",&i)!=EOF)\n    {\n        int q,t=0,s=0,k=0;\n        for(q=0;q<i;q++)\n        {\n            scanf(\"%d\",&a[q]);\n            if(a[q]==1)\n                t++;\n            if(a[q]==2)\n                k++;\n        }\n        if(t==0)\n        {\n            printf(\"0\\n\");\n            continue;\n        }\n        if(k>=t)\n            printf(\"%d\\n\",k);\n        if(k<t)\n        {\n            int s=0;\n            s=(t-k)/3;\n            s+=k;\n            printf(\"%d\\n\",s);\n        }\n    }\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int a,b;\n    int n;\n    scanf(\"%d\",&n);\n    a=b=0;\n    for (int i=1;i<=n;i++)\n    {\n        int k;\n        scanf(\"%d\",&k);\n        if (k==1)\n            a++;\n        else\n            b++;\n    }\n    if (a==0||b==0&&a<=2)\n        printf(\"0\\n\");\n    else\n    {\n        if (a>=b)\n            printf(\"%d\\n\",b+(a-b)/3);\n        else\n            printf(\"%d\\n\",a);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.4625228519195612, "equal_cnt": 17, "replace_cnt": 8, "delete_cnt": 8, "insert_cnt": 0, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "8ae41bcfce69c660d69f8b1a4cb67ce6", "bug_code_uid": "958d5e5abee9c9090d7eec59234a5a96", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "21c7a29b25aea9d88d6c250909e11af7", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    char myarray[n];\n    scanf(\"%s\",myarray);\n    char myarray1[n];\n    int i=0,k=0;\n    while(1)\n    {\n        k=0;\n        for(i=0; i<strlen(myarray); i++)\n        {\n            if(myarray[i]=='1' && myarray[i+1]=='0')\n            {\n                i++;\n                continue;\n            }\n            else if(myarray[i]=='0' && myarray[i+1]=='1')\n            {\n                i++;\n                continue;\n            }\n            myarray1[k]=myarray[i];\n            k++;\n        }\n        myarray1[k]='\\0';\n        strcpy(myarray,myarray1);\n        if(strstr(myarray,\"10\")==0)\n        {\n            break;\n        }\n    }\n    printf(\"%d\",strlen(myarray));\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    char myarray[n];\n    scanf(\"%s\",myarray);\n    int i,flag=0;\n    for(i=0; i<n; i++)\n    {\n        if(myarray[i]=='0')\n        {\n            flag++;\n        }\n    }\n    if(flag>n/2)\n    {\n        flag=n-flag;\n    }\n    n-=flag*2;\n    printf(\"%d\",n);\n    return 0;\n}\n"}
{"similarity_score": 0.9991589571068125, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "4b6248328fa650bba380d1854bb214c8", "bug_code_uid": "088787e7306baa5d3176236b569f2043", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "2223661bec9f9e0fffdddf98de9e14f9", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\n#include <math.h>\nint main()\n{\n\tlong long int a[100002]={0},c[100005]={0},num=0,i;\n\tlong long int n,j,p;\n\tscanf(\"%lld\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&a[i]);\n\t\tnum=(int)sqrt(a[i]);\n\t\tif(a[i]==num*num){\n\t\t\tp=sqrt(num);\n\t\t\tfor(j=2;j<p;j++){\n\t\t\t\tif(num%j==0){\n\t\t\t\t\tc[i]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tc[i]++;\n\t\t}\t\t\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(a[i]!=1){\n\t\t    if(c[i]>=1){\n\t      \t     printf(\"NO\\n\");\n         \t}\n            else{\n\t            printf(\"YES\\n\");\n            }\n        }\n        else{\n        \tprintf(\"NO\\n\");\n        }\n    }\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <conio.h>\n#include <math.h>\nint main()\n{\n\tlong long int a[100002]={0},c[100005]={0},num=0,i;\n\tlong long int n,j,p;\n\tscanf(\"%lld\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&a[i]);\n\t\tnum=(int)sqrt(a[i]);\n\t\tif(a[i]==num*num){\n\t\t\tp=sqrt(num);\n\t\t\tfor(j=2;j<=p;j++){\n\t\t\t\tif(num%j==0){\n\t\t\t\t\tc[i]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tc[i]++;\n\t\t}\t\t\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(a[i]!=1){\n\t\t    if(c[i]>=1){\n\t      \t     printf(\"NO\\n\");\n         \t}\n            else{\n\t            printf(\"YES\\n\");\n            }\n        }\n        else{\n        \tprintf(\"NO\\n\");\n        }\n    }\n\treturn 0;\n}"}
{"similarity_score": 0.8831562974203339, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "d24de53050f1cc3e366e51a5c6ddadd5", "bug_code_uid": "6a8a2b233da4ce8b3d707b810b6c3a16", "src_uid": "a5d56056fd66713128616bc7c2de8b22", "apr_id": "58fd4611d5d5e038a3d9caf4edfb2c9d", "difficulty": 1200, "tags": ["implementation", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\nint main()\n{\n\tint n,i,j;\n\tscanf(\"%d\",&n);\n\tint flowers[n+1],maximal=0,love=1;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&flowers[i]);\n\t\tmaximal=maximal+flowers[i];\n\t}\n\tint temp;\n\tfor (i=0;i<n-1;i++)\n\t{\n\t\tfor (j=i+1;j<n;j++)\n\t\t{\n\t\t\tif (flowers[i]>flowers[j])\n\t\t\t{\n\t\t\t\ttemp=flowers[j];\n\t\t\t\tflowers[j]=flowers[i];\n\t\t\t\tflowers[i]=temp;\n\t\t\t}\n\t\t}\n\t}\n\ti=-1;\n\twhile (love!=0 && i!=n-1)\n\t{\n\t\tif (maximal%2==1)\n\t\t{\n\t\t\tlove=0;\n\t\t}\n\t\ti++;\n\t\tif (maximal%2==0)\n\t\t{\n\t\t\tif ((maximal-flowers[i])%2==1)\n\t\t\t{\n\t\t\t\tmaximal-=flowers[i];\n\t\t\t\tlove=0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t}\n\tif (maximal==0)\n\t{\n\t\tprintf(\"%d\",maximal);\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\",maximal);\n\t}\n\treturn 0;\n}", "fixed": "\nint main()\n{\n\tint n,i,j;\n\tscanf(\"%d\",&n);\n\tint flowers[n+1],maximal=0,love=1;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&flowers[i]);\n\t\tmaximal=maximal+flowers[i];\n\t}\n\tint temp;\n\tfor (i=0;i<n-1;i++)\n\t{\n\t\tfor (j=i+1;j<n;j++)\n\t\t{\n\t\t\tif (flowers[i]>flowers[j])\n\t\t\t{\n\t\t\t\ttemp=flowers[j];\n\t\t\t\tflowers[j]=flowers[i];\n\t\t\t\tflowers[i]=temp;\n\t\t\t}\n\t\t}\n\t}\n\ti=-1;\n\twhile (love!=0 && i!=n-1)\n\t{\n\t\ti++;\n\t\tif (maximal%2==1)\n\t\t{\n\t\t\tlove=0;\n\t\t}\n\t\tif (maximal%2==0 && i==n-1)\n\t\t{\n\t\t\tmaximal=0;\n\t\t}\n\t\tif (maximal%2==0)\n\t\t{\n\t\t\tif ((maximal-flowers[i])%2==1)\n\t\t\t{\n\t\t\t\tmaximal-=flowers[i];\n\t\t\t\tlove=0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t}\n\tif (maximal==0)\n\t{\n\t\tprintf(\"%d\",maximal);\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\",maximal);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9930434782608696, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "9ff3dcc401aefdee167a1c7e606ee00f", "bug_code_uid": "e9f7334098afd9ce83da6d35ffa49f32", "src_uid": "56197d2468d8515e520c0d925874bf3b", "apr_id": "7ed1831512ade907aa2854bd9f1147d1", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint max(int x, int y) {\r\n\treturn x > y ? x : y;\r\n}\r\nint min(int x, int y) {\r\n\treturn x > y ? y : x;\r\n}\r\n\r\nint main(){\r\n\tint t, n, a[110], b[110];\r\n\tscanf_s(\"%d\", &t);\r\n\tfor (int i = 0; i < t; i++) {\r\n\t\tscanf_s(\"%d\", &n);\r\n\t\tint Mmax, mmax;\r\n\t\tMmax = 0;\r\n\t\tmmax = 0;\r\n\t\tfor (int j = 0; j < n; j++) {\r\n\t\t\tscanf_s(\"%d\", &a[j]);\r\n\t\t}\r\n\t\tfor (int j = 0; j < n; j++) {\r\n\t\t\tscanf_s(\"%d\", &b[j]);\r\n\t\t}\r\n\t\tfor (int j = 0; j < n; j++) {\r\n\t\t\tMmax = max(Mmax, max(a[j], b[j]));\r\n\t\t\tmmax = max(mmax, min(a[j], b[j]));\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", Mmax * mmax);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint max(int x, int y) {\r\n\treturn x > y ? x : y;\r\n}\r\nint min(int x, int y) {\r\n\treturn x > y ? y : x;\r\n}\r\n\r\nint main(){\r\n\tint t, n, a[110], b[110];\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 0; i < t; i++) {\r\n\t\tscanf(\"%d\", &n);\r\n\t\tint Mmax, mmax;\r\n\t\tMmax = 0;\r\n\t\tmmax = 0;\r\n\t\tfor (int j = 0; j < n; j++) {\r\n\t\t\tscanf(\"%d\", &a[j]);\r\n\t\t}\r\n\t\tfor (int j = 0; j < n; j++) {\r\n\t\t\tscanf(\"%d\", &b[j]);\r\n\t\t}\r\n\t\tfor (int j = 0; j < n; j++) {\r\n\t\t\tMmax = max(Mmax, max(a[j], b[j]));\r\n\t\t\tmmax = max(mmax, min(a[j], b[j]));\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", Mmax * mmax);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.3459335624284078, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "e4aeb001b78e5768f4238af0d9e9ebe3", "bug_code_uid": "f0d01db16b2d45133a52c67e07943697", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "365b367eea5de2d98a300e1e799870a2", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tchar a[100001];\n\tint  b[100001]={0};\n\tint m,l,r,i;\n\tscanf(\"%s\",a);\n\tif(strstr(a,\"..\")==NULL && strstr(a,\"##\")==NULL ){\n      while(m--){\n\t\t  scanf(\"%d%d\",&l,&r);\n\t\t  printf(\"0\\n\");\n\t  }\n\t}\n\telse{\n    for(i=1;i<strlen(a);i++)\n\t{\n\t\tif(a[i]==a[i-1])\n\t\t\tb[i]=b[i-1]+1;\n\t\telse\n\t\t\tb[i]=b[i-1];\n\t}\n    scanf(\"%d\",&m);\t\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tprintf(\"%d\\n\",b[r-1]-b[l-1]);\n\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    char str[100000];\n    scanf(\"%s\",str);\n    int n,i,m,l,r,count=0;\n    scanf(\"%d\",&m);\n    n = strlen(str);\n    int a[100000] = {0};\n    for(i=0;i<(n-1);i++)\n    {\n        if(str[i] == str[i+1])\n            count++;\n        a[i+1] = count;\n    }\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d %d\",&l,&r);\n        printf(\"%d\\n\",a[r-1]-a[l-1]);\n    }\n    return 0;\n}"}
