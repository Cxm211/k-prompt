{"similarity_score": 0.3023474178403756, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "4b9fc99715efc2c724a33905ba6d254d", "bug_code_uid": "8e2b03dd99aece8fb415ecfea1a64408", "src_uid": "3c63e2e682d3c8051c3cecc3fa9c4e8c", "apr_id": "5756a8404241343a0b03615d5c031d62", "difficulty": 1500, "tags": ["binary search", "implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nconst int max = 100000;\nconst double eps = 1e-6;\n\nint main( void ) {\n    unsigned long long dollars;\n    int tokens[max];\n    int res[max];\n    int i, a, b, n;\n    \n    /* get input */\n    scanf(\"%i %i %i\", &n, &a, &b);\n    for( i = 0; i < n; i++ )        \n        scanf(\"%i\", &tokens[i]);\n    \n    /* compute the tokens left */\n    for( i = 0; i < n; i++ ) {\n        dollars = (double)a/b*tokens[i] + eps;\n        \n        if( (dollars*b) % a != 0 )  1/0;\n        \n        res[i] = tokens[i] - dollars*b/a;\n    }\n    \n    printf(\"%i\", res[0]);\n    for( i = 1; i < n; i++ ) \n        printf(\" %i\", res[i]);\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main( void ) {\n    long long dollars;\n    long long token;\n    int i, n, a, b;\n    \n    scanf(\"%i %i %i\", &n, &a, &b);\n    for( i = 0; i < n; i++ ) {\n        scanf(\"%lli\", &token);\n        \n        dollars = token*a/b;\n        if( dollars*b % a == 0 )\n            printf(\"%lli \", token - dollars*b/a);\n        else\n            printf(\"%lli \", token - dollars*b/a - 1);\n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.19786476868327402, "equal_cnt": 8, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "5b30651a10b548c4cb8b8fb0feadc90a", "bug_code_uid": "09cba339b5ae270f836c61f522fe719c", "src_uid": "731b45747081a800fc6da02efa5ce8cd", "apr_id": "d6d9510ec1ef951f2ec3af6fb8f92a23", "difficulty": 1200, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAX 200001\n\nint n;\nint a[MAX];\n\nint nonDecreasing(int iarr[]){\n\tint i;\n\tfor(i = 0; i < n-1; i++){\n\t\tif(iarr[i] > iarr[i+1])\n\t\t\treturn 0;\n\t}\n\treturn 1;\n}\n\nint try(int pre){\n\tint test[n];\n\tint i;\n\tfor(i = 0; i < n; i++){\n\t\ttest[i] = MAX;\n\t}\n\tint t_idx = 0;\n\ti = pre+1;\n\tint j = n;\n\twhile(i <= j){\n\t\tif(a[j] <= a[i]){\n\t\t\ttest[t_idx] = a[j];\n\t\t\tj--;\n\t\t\tt_idx++;\n\t\t}\n\t\telse{\n\t\t\ttest[t_idx] = a[i];\n\t\t\ti++;\n\t\t\tt_idx++;\n\t\t}\n\t}\n\tif(nonDecreasing(test))\n\t\treturn pre;\n\treturn -1;\n}\n\nint check(void){\n\tint curr = 0;\n\tint i;\n\tfor(i = 1; i <= n-1; i++){\n\t\tif(try(curr) >= 0)\n\t\t\treturn curr;\n\t\tcurr++;\n\t}\n\n\treturn curr;\n}\n\nvoid solve(void){\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i++){\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\t\n\tprintf(\"%d\\n\", check());\n}\n\nint main(){\n\tint cases;\n\tscanf(\"%d\", &cases);\n\twhile(cases--){\n\t\tsolve();\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAX 200001\n\nint n;\nint a[MAX];\n\nint try(void){\n\tint idx = n;\n\t// first half\n\twhile(idx > 1){\n\t\tif(a[idx] > a[idx-1])\n\t\t\tbreak;\n\t\tidx--;\n\t}\n\t//second half\n\twhile(idx > 1){\n\t\tif(a[idx] < a[idx-1])\n\t\t\tbreak;\n\t\tidx--;\n\t}\n\treturn (idx-1);\n}\n\nvoid solve(void){\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i++){\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\t\n\tprintf(\"%d\\n\", try());\n}\n\nint main(){\n\tint cases;\n\tscanf(\"%d\", &cases);\n\twhile(cases--){\n\t\tsolve();\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9985775248933144, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "95de9af2d6dc74f241fbf9b29b3d5eb6", "bug_code_uid": "02d74be3ad22aadb8f6d21859ab4a160", "src_uid": "277948a70c75840445e1826f2b23a897", "apr_id": "1d3d5e385f53e817453c7215ffc3bf75", "difficulty": 1600, "tags": [], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define MAX 100005\n\nint main()\n{\n    int a[MAX];\n    int i,n,t,max=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<=n;i++)\n        a[i]=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&t);\n        a[t]=a[t-1]+1;\n    }\n    for(i=1;i<n;i++)\n        if(max<a[i])\n            max=a[i];\n    printf(\"%d\\n\",n-max);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#define MAX 100005\n\nint main()\n{\n    int a[MAX];\n    int i,n,t,max=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<=n;i++)\n        a[i]=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&t);\n        a[t]=a[t-1]+1;\n    }\n    for(i=1;i<=n;i++)\n        if(max<a[i])\n            max=a[i];\n    printf(\"%d\\n\",n-max);\n    return 0;\n}\n"}
{"similarity_score": 0.9277899343544858, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "f9dcb83f9eec936dac4f1ad8d55ef962", "bug_code_uid": "8bece4ab0d3f1389ae4ac347e745b4a1", "src_uid": "f18a5fa0b2e7e96cb5994b7b2dbe0189", "apr_id": "932f9ad65b8946c941632ed098684d0f", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i,n,j;\n    long long k,a[200001],m,i1;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%d %lld\",&n,&k);\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%lld\",&a[j]);\n        }\n        \n        for(i1=1;i1<=k;i1++)\n        {\n         m=a[0];\n        for(j=1;j<n;j++)\n        {\n            if(a[j]>m)\n            {\n                m=a[j];\n            }\n        }\n        for(j=0;j<n;j++)\n        {\n            a[j]=m-a[j];\n        }\n        }\n        for(j=0;j<(n-1);j++)\n        {\n            printf(\"%lld \",a[j]);\n        }\n        printf(\"%lld\\n\",a[n-1]);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i,n,j,l,i1;\n    long long k,a[200001],m;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%d %lld\",&n,&k);\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%lld\",&a[j]);\n        }\n        if(k%2==0)\n        {\n        l=2;\n        }\n        else\n        {\n        l=1;\n        }\n        for(i1=1;i1<=l;i1++)\n        {\n         m=a[0];\n        for(j=1;j<n;j++)\n        {\n            if(a[j]>m)\n            {\n                m=a[j];\n            }\n        }\n        for(j=0;j<n;j++)\n        {\n            a[j]=m-a[j];\n        }\n        }\n        for(j=0;j<(n-1);j++)\n        {\n            printf(\"%lld \",a[j]);\n        }\n        printf(\"%lld\\n\",a[n-1]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.3765586034912718, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "33a27c8acd01e15688e6f833781414ee", "bug_code_uid": "a20980298698113ce114d0e5f0e54be5", "src_uid": "787a45f427c2db98b2ddb78925e0e0f1", "apr_id": "992d2c614f603bb7b80af3d7ade9b155", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\nint n,t;\n\nscanf(\"%d\",&t);\nint arr[t];\nfor(int i=0;i<t ;i++){\n    scanf(\"%d\",&n);\n    int sum=0;\n    if(n!=2){\n    for(int j=1;j<=n/2;j++)\n    {\n        if(j%2==1)\n            sum=sum+pow(2,j)+pow(2,n-j+1);\n        else if(j%2==0)\n            sum=sum-pow(2,j)-pow(2,n-j+1);\n\n    }\n    }\n    else\n        sum=2;\n   arr[i]=sum;\n\n    }\n    for(int i=0;i<t;i++)\n        printf(\"%d\\n\",arr[i]);\n\n\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\nint n,t;\n\nscanf(\"%d\",&t);\nint arr[t];\nfor(int i=0;i<t ;i++){\n    scanf(\"%d\",&n);\n    int sum=0,s=0;\n    for(int j=n-1;j>n/2-1;j--)\n        sum=sum+pow(2,j);\n    for(int j=1;j<=n;j++)\n        s=s+pow(2,j);\n    arr[i]=s-2*sum;\n\n\n\n    }\n    for(int i=0;i<t;i++)\n        printf(\"%d\\n\",arr[i]);\n\n\n\nreturn 0;\n}\n"}
{"similarity_score": 0.3693304535637149, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "623b69221fc1b49e30f4730b7aca0690", "bug_code_uid": "10c2612126ef21add7e6aa4c9db607b9", "src_uid": "ea616a6b4ba7bf8742420b1c29ff0d16", "apr_id": "64f2a725f2f46377dd740dda1825ecfb", "difficulty": 1600, "tags": ["binary search", "greedy", "strings", "two pointers"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n        char str[200000];\r\n        scanf(\"\\n%s\",str);\r\n        int remain0 = 0, delete1 = 0, ct = 0, size = strlen(str), location1[size];\r\n        for(int i=0;i<size;i++){\r\n            if(str[i] == '0') remain0 ++;\r\n            else{\r\n                location1[ct] = i;\r\n                ct ++;\r\n            }\r\n        }\r\n        remain0 -= location1[0] + (size - 1 - location1[ct-1]);\r\n        int left = 0, right = ct - 1;\r\n        while(delete1 < remain0 && left < right){\r\n            int front = location1[left+1] - location1[left], end = location1[right] - location1[right-1];\r\n            if(front > end){\r\n                remain0  -= front - 1;\r\n                delete1 ++;\r\n                left ++;\r\n            }\r\n            else{\r\n                remain0 -= end - 1;\r\n                delete1 ++;\r\n                right --;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",(remain0>delete1)?remain0:delete1);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n\r\nint MAX(int a,int b){\r\n    return (a>b)?a:b;\r\n}\r\nint MIN(int a,int b){\r\n    return (a<b)?a:b;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n        char str[200000];\r\n        scanf(\"\\n%s\",str);\r\n        int size = strlen(str), pre[size+1];\r\n        pre[0] = 0;\r\n        for(int i=0;i<size;i++){\r\n            if(str[i] == '1') pre[i+1] = pre[i] + 1;\r\n            else pre[i+1] = pre[i];\r\n        }\r\n        int min = pre[size] - pre[pre[size]];\r\n        for(int j=pre[size]+1;j<=size;j++){\r\n            int i = j - pre[size];\r\n            int cost = MAX(pre[size]-(pre[j]-pre[i]),(j-i)-(pre[j]-pre[i]));\r\n            min = MIN(min,cost);\r\n        }\r\n        printf(\"%d\\n\",min);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.996059889676911, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "ec619d390aab1ccfb158b36764746bfb", "bug_code_uid": "7eb7c34290b78f974ec78de1db492254", "src_uid": "6ee356f2b3a4bb88087ed76b251afec2", "apr_id": "14f1abfe881aa7de72f462464f8f129b", "difficulty": 1500, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\nint nDigits, i, j, k;\nchar numbers[1005];\nchar aux[1005];\nchar min[1005];\n\nscanf(\"%d\", &nDigits);\nfor(i = 0; i <  nDigits; i++)\n{\n    min[i] = '9';\n}\nfor(i = nDigits; i < 1000; i++)\n{\n    min[i] = '\\0';\n}\nfor(i = 0; i < 1000; i++)\n{\n    aux[i] = '\\0';\n}\n\nscanf(\"%s\", &numbers);\n\nfor(i = 1; i <= 10; i++)\n{\n    for(j = 0; j < nDigits; j++)\n    {\n        for(k = 0; k < nDigits; k++)\n        {\n            aux[k] = (numbers[(j+k)%nDigits] - '0' + i)%10 + '0';\n        }\n        if(strcmp(min, aux) > 0)\n\t\t\t\tstrcpy(min, aux);\n    }\n}\nprintf(\"%s\", min);\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\nint nDigits, i, j, k;\nchar numbers[1005];\nchar aux[1005];\nchar min[1005];\n\nscanf(\"%d\", &nDigits);\nfor(i = 0; i <  nDigits; i++)\n{\n    min[i] = '9';\n}\nfor(i = nDigits; i < 1005; i++)\n{\n    min[i] = '\\0';\n}\nfor(i = 0; i < 1005; i++)\n{\n    aux[i] = '\\0';\n}\n\nscanf(\"%s\", &numbers);\n\nfor(i = 1; i <= 10; i++)\n{\n    for(j = 0; j < nDigits; j++)\n    {\n        for(k = 0; k < nDigits; k++)\n        {\n            aux[k] = (numbers[(j+k)%nDigits] - '0' + i)%10 + '0';\n        }\n        if(strcmp(min, aux) > 0)\n\t\t\t\tstrcpy(min, aux);\n    }\n}\nprintf(\"%s\", min);\nreturn 0;\n}\n"}
{"similarity_score": 0.8962892483349191, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b452274069a291f244976f4743ca370c", "bug_code_uid": "3e52f67e8eecf70ac5ec5ca6d0382ede", "src_uid": "d563ce32596b54f48544a6085efe5cc5", "apr_id": "00dfb3457e7542027170cf406bc0827e", "difficulty": 1700, "tags": ["dp", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() \n{\n\tint n,t,i,j;\n\tchar data[200010];\n\tscanf(\"%d%d\",&n,&t);\n\tscanf(\"%s\",data+1);\n\tdata[0]='0';\n\tfor(i=n;data[i]!='.'&&t>0&&data[i]!='.'+1;t--,i--)\n\t{\n\t\tif(data[i]>='5')\n\t\t{\n\t\t\tdata[i-1]++;\n\t\t\tn--;\n\t\t}\n\t}\n\twhile(data[n]==':')\n\t\tdata[--n]++;\n\tif(data[n]=='.'+1)\n\t\tdata[--n]++;\n\tfor(i=n;i>0;i--)\n\t\tif(data[i]==':')\n\t\t{\n\t\t\tdata[i]='0';\n\t\t\tdata[i-1]++;\n\t\t}\n\tif(data[0]=='1')\n\t\ti=0;\n\telse\n\t\ti=1;\n\tfor(;i<=n;i++)\n\t\tprintf(\"%c\",data[i]);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main() \n{\n\tint n,t,i,j;\n\tchar data[200010];\n\tscanf(\"%d%d\",&n,&t);\n\tscanf(\"%s\",data+1);\n\tdata[0]='0';\n\tfor(i=1;i<=n;i++)\n\t\tif(data[i]=='.')\n\t\t\tbreak;\n\tfor(;i<=n;i++)\n\t\tif(data[i]>='5')\n\t\t{\n\t\t\tn=i;\n\t\t\tbreak;\n\t\t}\n\tfor(i=n;data[i]!='.'&&t>0&&data[i]!='.'+1;t--,i--)\n\t{\n\t\tif(data[i]>='5')\n\t\t{\n\t\t\tdata[i-1]++;\n\t\t\tn--;\n\t\t}\n\t}\n\twhile(data[n]==':')\n\t\tdata[--n]++;\n\tif(data[n]=='.'+1)\n\t\tdata[--n]++;\n\tfor(i=n;i>0;i--)\n\t\tif(data[i]==':')\n\t\t{\n\t\t\tdata[i]='0';\n\t\t\tdata[i-1]++;\n\t\t}\n\tif(data[0]=='1')\n\t\ti=0;\n\telse\n\t\ti=1;\n\tfor(;i<=n;i++)\n\t\tprintf(\"%c\",data[i]);\n\treturn 0;\n}\n"}
