{"id": "/data/all/data/phantombuster/nickjs", "bugType": "no-console", "problem": "\t_initialize(callback) {\n\t\tconsole.log(\"init\")\n\t\t", "fixed": "\t_initialize(callback) {\n\t\t\n\t\t", "message": "Unexpected console statement."}
{"id": "/data/all/data/luniehq/lunie", "bugType": "no-unsafe-finally", "problem": "        commit(`setLedgerError`, error)\n      } finally {\n        return success\n      }", "fixed": "        commit(`setLedgerError`, error)\n      }", "message": "Unsafe usage of ReturnStatement."}
{"id": "/data/all/data/lps-js/lps.js", "bugType": "no-unused-vars", "problem": "  this.substitute = function substitute(theta) {\n    return new Value(_value);", "fixed": "  this.substitute = function substitute() {\n    return new Value(_value);", "message": "Unused variable."}
{"id": "/data/all/data/video-react/video-react", "bugType": "no-case-declarations", "problem": "    case RESIZE:\n      const newState = {\n        ...state,", "fixed": "    case RESIZE:\n      return {\n        ...state,", "message": "Unexpected lexical declaration in case block."}
{"id": "/data/all/data/an-sh/chat-service", "bugType": "no-this-before-super", "problem": "  constructor(server, userName) {\n    this.server = server;\n    this.userName = userName;", "fixed": "  constructor(server, userName) {\n    super()\n    this.server = server;\n    this.userName = userName;", "message": "'this' is not allowed before 'super()'."}
{"id": "/data/all/data/infernojs/inferno", "bugType": "no-debugger", "problem": "        this.setState({ ids: ['test'] });\n        debugger;\n        rerender();", "fixed": "        this.setState({ ids: ['test'] });\n        rerender();", "message": "Unexpected 'debugger' statement."}
{"id": "/data/all/data/jacobsun/edidor", "bugType": "no-console", "problem": "  const loaded = () => {\n    console.log('loaded: ', ticket, opening)\n    if (!ticket) return", "fixed": "  const loaded = () => {\n    if (!ticket) return", "message": "Unexpected console statement."}
{"id": "/data/all/data/moneybutton/yours-bitcoin", "bugType": "generator-star-spacing", "problem": "  it(\"should asynchronously get m/0'/1 ext. public key from m/0' public key from test vector 1\", function () {\n    return asink(function *() {\n      let bip32 = BIP32().fromString(vector1_m_private)\n      let child = bip32.derive(\"m/0'\")", "fixed": "  it(\"should asynchronously get m/0'/1 ext. public key from m/0' public key from test vector 1\", function () {\n    return asink(function * () {\n      let bip32 = BIP32().fromString(vector1mPrivate)\n      let child = bip32.derive(\"m/0'\")", "message": "Missing space after *."}
