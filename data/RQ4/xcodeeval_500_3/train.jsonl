{"similarity_score": 0.8170940170940171, "equal_cnt": 19, "replace_cnt": 14, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 19, "lang": "GNU C", "fix_code_uid": "72e6ff6f32d47380c0dc61955d9d91e2", "bug_code_uid": "e3069fce6a351b78ca5a7a77be7b13b9", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "e5e8e3b3d46029f6822e7b96691baad3", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#pragma warning(disable:4996)\n#pragma comment(linker, \"/STACK:16777216\")\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define PI 3.1415926535897932384\n\n#ifndef ONLINE_JUDGE\n\tFILE *stream;\n#endif\n\nint main()\n{\n\tchar str[100002];\n\tint m;\n\tint l, r;\n\tint len;\n\tint i;\n\tchar currentSym;\n\tint result;\n#ifndef ONLINE_JUDGE\n \tfreopen_s(&stream, \"D:\\\\Work\\\\CodeForces\\\\input.txt\", \"rt\", stdin);\n  \tfreopen_s(&stream, \"D:\\\\Work\\\\CodeForces\\\\output.txt\", \"wt\", stdout);\n#endif\n\tscanf(\"%s%i\", &str[1], &m);\n\t\n\tlen = strlen(&str[1]);\n\tcurrentSym = str[1];\n\tstr[1] = 1;\n\tfor (i = 2; i <= len; i++){\n\t\tif (str[i] == currentSym)\n\t\t\tstr[i] = str[i-1] + 1;\n\t\telse{\n\t\t\tcurrentSym = str[i];\n\t\t\tstr[i] = 1;\n\t\t}\n\t}\n\n\tfor (; m > 0; m--){\n\t\tscanf(\"%i%i\", &l, &r);\n\n\t\tresult = 0;\n\t\twhile (l < r){\n\t\t\tif (r - str[r] >= l)\n\t\t\t\tresult += str[r] - 1;\n\t\t\telse\n\t\t\t\tresult += str[r] - str[l];\n\n\t\t\tr -= str[r];\n\t\t}\n\n\t\tprintf(\"%i\\n\", result);\n\t}\n  \treturn 0;\n}", "fixed": "#pragma warning(disable:4996)\n#pragma comment(linker, \"/STACK:16777216\")\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define PI 3.1415926535897932384\n\n#ifndef ONLINE_JUDGE\n\tFILE *stream;\n#endif\n\nint main()\n{\n\tchar str[100001];\n\tint  arr[100000];\n\tint m;\n\tint l, r;\n\tint len;\n\tint i;\n\tchar currentSym;\n#ifndef ONLINE_JUDGE\n \tfreopen_s(&stream, \"D:\\\\Work\\\\CodeForces\\\\input.txt\", \"rt\", stdin);\n  \tfreopen_s(&stream, \"D:\\\\Work\\\\CodeForces\\\\output.txt\", \"wt\", stdout);\n#endif\n\tscanf(\"%s%i\", str, &m);\n\t\n\tlen = strlen(str);\n\tcurrentSym = str[0];\n\tarr[0] = 0;\n\tfor (i = 1; i < len; i++){\n\t\tif (str[i] == currentSym)\n\t\t\tarr[i] = arr[i-1] + 1;\n\t\telse{\n\t\t\tcurrentSym = str[i];\n\t\t\tarr[i] = arr[i-1];\n\t\t}\n\t}\n\n\tfor (; m > 0; m--){\n\t\tscanf(\"%i%i\", &l, &r);\n\n\t\tprintf(\"%i\\n\", arr[r-1] - arr[l-1]);\n\t}\n  \treturn 0;\n}"}
{"similarity_score": 0.7628128724672228, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "06ffcc695de6fe7e2024c1b111be6536", "bug_code_uid": "7fa0defbf6834d8e29780d3a25606dbb", "src_uid": "ccfe798f5dc63c492ff54cf40bb40613", "apr_id": "939840a4f69fd8d0ad6a8f67638db377", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,n,i,s,t1,t2,t3,t4,total;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n       scanf(\"%d%d\",&a,&b);\n       if(a>b){\n         s=a-b;\n         t1=s/5;\n         t2=s%5;\n         t3=t2/2;\n         t4=t2%2;\n        total=t1+t3+t4;\n       }\n    printf(\"%d\\n\",total);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,n,i,s,t1,t2,t3,t4,total;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n       scanf(\"%d%d\",&a,&b);\n       if(a>b){\n         s=a-b;\n         t1=s/5;\n         t2=s%5;\n         t3=t2/2;\n         t4=t2%2;\n        total=t1+t3+t4;\n       }\n        else if(a<b){\n            s=b-a;\n         t1=s/5;\n         t2=s%5;\n         t3=t2/2;\n         t4=t2%2;\n        total=t1+t3+t4;\n        }\n        else if(a==b){\n            total=0;\n        }\n    printf(\"%d\\n\",total);\n    }\n    return 0;\n}"}
{"similarity_score": 0.22969187675070027, "equal_cnt": 21, "replace_cnt": 16, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "0fcc2a07b4318ae450fbf924a3a4ff95", "bug_code_uid": "092996df9dad04857c1dd749c8c15554", "src_uid": "71335a9489f0985f4e16435b14d6a34a", "apr_id": "c409df3d520b6b224495ada80f8ff708", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t,n,a,b,i;\n    scanf(\"%lld\",&t);\n    for(i=1;i<t+1;i++)\n    {\n        scanf(\"%lld\",&n);\n        if(n%3==0)\n        {\n            a=n/3;\n            b=n/3;\n            printf(\"%lld %lld\",a,b);\n        }\n        if(n%3==1)\n        {\n            a=n/3+1;\n            b=n/3;\n            printf(\"%lld %lld\",a,b);\n        }\n        if(n%3==2)\n        {\n            a=n/3;\n            b=n/3+1;\n            printf(\"%lld %lld\",a,b);//123\n\n        }\n    }\n    return 0;\n}\n\t \t    \t \t  \t    \t\t \t \t   \t\t \t\t", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tint c1 = 0, c2 = 0;\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor (int i = 1; i <= t; i++)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tif (n == 1)\n\t\t{\n\t\t\tprintf(\"1 0\\n\");\n\t\t}\n\t\tif (n == 2)\n\t\t{\n\t\t\tprintf(\"0 1\\n\");\n\t\t}\n\t\tif (n != 1 && n != 2)\n\t\t{\n\t\t\tif (n % 3 == 0)\n\t\t\t{\n\t\t\t\tc1 = n / 3;\n\t\t\t\tc2 = c1;\n\t\t\t}\n\t\t\tif (n % 3 == 1)\n\t\t\t{\n\t\t\t\tc1 = n / 3 + 1;\n\t\t\t\tc2 = n / 3;\n\t\t\t}\n\t\t\tif (n % 3 == 2)\n\t\t\t{\n\t\t\t\tc1 = n / 3;\n\t\t\t\tc2 = n / 3 + 1;\n\t\t\t}\n            printf(\"%d %d\\n\", c1, c2);\n\t\t}\n\t}\n\treturn 0;\n}\n\n  \t\t\t \t \t\t \t\t\t   \t     \t\t\t \t \t\t"}
{"similarity_score": 0.26246056782334387, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "d45004b520ddca80d54ecaf3f26b1ac9", "bug_code_uid": "f8bf0b5580b6ae686b5b01636134b22f", "src_uid": "371100da1b044ad500ac4e1c09fa8dcb", "apr_id": "e356d113130bd329dca88edb28a95619", "difficulty": 1100, "tags": ["implementation", "*special", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nmain(){\n\tint n,s[100000],car=0,i,j,k,l,c=0,d=0,twofound=0,ones=0;\n\tdouble one;\n\t\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++)\n\t\tscanf(\"%d\",&s[i]);\n\t\n\tfor (i=0;i<n;i++)\n\t\tif (s[i]==4){\n\t\t\ts[i]=0;\n\t\t\tcar++;}\t\t\t\n\t\t\t\t\t\t\n\t\n\t\t\t\t\t\t\t\t\n\tfor (i=0;i<n;i++)\n\t\t\t\tif (s[i]==3){\n\t\t\t\tcar++;\n\t\t\t\ts[i]=0;\n\t\t\t\t\tfor(j=i+1;j<n;j++){\n\t\t\t\t\t\tif (s[j]==1){\n\t\t\t\t\t\t\ts[k]=0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}}\n\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\tfor (i=0;i<n;i++)\n\t\t\t\tif (s[i]==2){\n\t\t\t\t\tcar++;\n\t\t\t\t\ts[i]=0;\n\t\t\t\t\tfor(j=i+1;j<n;j++)\n\t\t\t\t\t\tif (s[j]==2){\n\t\t\t\t\t\t\ts[j]=0;\n\t\t\t\t\t\t\ttwofound=1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (twofound==0){\n\t\t\t\t\t\twhile(c!=2)\t\t\n\t\t\t\t\t\tfor(j=0;j<n;j++)\n\t\t\t\t\t\t\tif (s[j]==1){\n\t\t\t\t\t\t\t\ts[j]=0;\n\t\t\t\t\t\t\t\tc++;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttwofound=0;\n\t\t\t\t\t\t\tc=0;\n\t}\n\t\t\n\t\t\t\t\n\t\tfor (i=0;i<n;i++)\n\t\t\tif (s[i]==1){\n\t\t\t\tones++;\n\t\t\t\t\n\t\t\t}\n\t\tcar=car+ceil((double)ones/4);\n\t\t\n\t\t\n\t\t//\tprintf(\"here car is %d\\n\",car);\t\t\t\t\n\t\t\t\n\tprintf(\"%d\",car);\n\t\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nmain(){\n\tint n,car=0,i,j,k,l,c=0,d=0,twofound=0;\n\tlong int s[100000],ones=0,twos=0,threes=0,fours=0;\n\tdouble one;\n\t\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++)\tscanf(\"%d\",&s[i]);\n\t\n//\tfor(i=0;i<n;i++) s[i]=3;\n\t\n\tfor(i=0;i<n;i++)\n\t\tif (s[i]==1) ones++;\n\t\telse if (s[i]==2) twos++;\n\t\telse if (s[i]==3) threes++;\n\t\telse if (s[i]==4) fours++;\n\t\t\t\n\tcar=car+fours;\t\n\tcar=car+twos/2;\n\tcar=car+twos%2;\n\tones=ones-2*(twos%2);\n\t\t\n\tif (ones>=threes){\n\tones=ones-threes;\n\tcar=car+threes;\n\tthrees=0;}\n\tif (threes>ones){\n\tthrees=threes-ones;\n\tcar=car+ones;\n\tcar=car+threes;\t\n\tones=0;}\n\t\n\t\n\tcar=car+ones/4;\n\tif (ones%4>0) car++;\t\n\tprintf(\"%d\",car);\n\t\n}"}
{"similarity_score": 0.9504643962848297, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "53231c2e797d49440d898b4d73334349", "bug_code_uid": "ca7e8a04c79229b6f37fec10839210df", "src_uid": "4d743a00e11510c824080ad7f1804021", "apr_id": "ea20d060a028d3e0db8fa64ea6fc9b9b", "difficulty": 900, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n, k, i, j, t;\n\tlong long a[51];\n\tscanf(\"%d%d\", &n, &k);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tfor(j=i;j>0;j--){\n\t\t\tif(a[j]>a[j-1])\n\t\t\t\tbreak;\n\t\t\tt=a[j];\n\t\t\ta[j]=a[j-1];\n\t\t\ta[j-1]=t;\n\t\t}\n\t}\n\tif(k > n)\n\t\tprintf(\"-1\\n\");\n\telse\n\t\tprintf(\"%I64d %I64d\", a[k], a[k]);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n, k, i, j, t;\n\tlong long a[51];\n\tscanf(\"%d%d\", &n, &k);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tfor(j=i;j>0;j--){\n\t\t\tif(a[j]>a[j-1])\n\t\t\t\tbreak;\n\t\t\tt=a[j];\n\t\t\ta[j]=a[j-1];\n\t\t\ta[j-1]=t;\n\t\t}\n\t}\n\tif(k > n){\n\t\tprintf(\"-1\\n\");\n\t}\n\telse{\n\t\tprintf(\"%I64d %I64d\", a[n-k], a[n-k]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.5904628330995793, "equal_cnt": 16, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 7, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "f34c29591c08c792daf656c28cd55d56", "bug_code_uid": "f59f3581f87cee06965f66086b333c2e", "src_uid": "18b1814234b05bae56ea4446506b543b", "apr_id": "f174a5dbcf8ddc18a523873dbda6ed00", "difficulty": 1300, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint sort(int x[], int );\n\nint main()\n{\nint r1[100000],p1[100000],p2[100000],m,n,k,a,b,i;\ndouble r2,p;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n  scanf(\"%d\",&r1[i]);\n  sort(r1,n);\n  \n  \n scanf(\"%d\",&m); \nfor(i=0;i<m;i++)\n   scanf(\"%d\",&p1[i]);\n   sort(p1,m);\n   \n   \n   \n scanf(\"%d\",&k);  \nfor(i=0;i<k;i++)\n  scanf(\"%d\",&p2[i]);\n  sort(p2,k);\n  \n scanf(\"%d %d\",&a,&b); \n  p=double(a)/b;\n  \n r2=(sqrt((p1[m-1]*r1[n-1]*r1[n-1])/(double)(p1[m-1]+p*p2[0])));\n printf(\"%lf\",r2);\n \n return 0;\n }\n \n int sort(int a[],int n)\n {\n int i,j,b;\n \n for(i=0;i<n;i++)\n {\n  for(j=0;j<n-i-1;j++)\n    {\n      if (a[j]>a[j+1])\n      { b=a[j];\n       a[j]=a[j+1];\n       a[j+1]=b;\n       }\n       }}\n       }\n  \n ", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint sort(int x[], int );\n\nint main()\n{\nint r1[100000],p1[100000],p2[100000],m,n,k,a,b,i,x1,y1,x2,y2,x3,y3;\ndouble r2,p;\nscanf(\"%d\",&n);\nx1=0;\nfor(i=0;i<n;i++)\n { scanf(\"%d\",&r1[i]);\n  if(r1[i]>x1)\n  {  x1=y1;\n      x1=r1[i];\n      r1[i]=y1;\n    }}\n  \n  x2=0;\n  scanf(\"%d\",&m); \nfor(i=0;i<m;i++)\n  { scanf(\"%d\",&p1[i]);\n   \n   if(p1[i]>x2)\n  {  x2=y2;\n      x2=p1[i];\n      p1[i]=y2;\n    }}\n   \n   x3=10000;\n   scanf(\"%d\",&k);  \nfor(i=0;i<k;i++)\n { scanf(\"%d\",&p2[i]);\n \n  if(p2[i]<x3)\n  {  x3=y3;\n      x3=p2[i];\n      p2[i]=y3;\n    }}\n \n \n  \n  \n scanf(\"%d %d\",&a,&b); \n  p=(double)a/b;\n  \n r2=(sqrt(x2/(double)(x2+p*x3)));\n r2=r2*x1;\n printf(\"%lf\",r2);\n\n return 0;\n }\n \n "}
{"similarity_score": 0.9144356955380577, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "13184ac965207a312daffb02e0c2db2f", "bug_code_uid": "c992833157ef33eb549203f032f0c4fd", "src_uid": "e344de8280fb607c556671db9cfbaa9e", "apr_id": "07c3433296dcb3dec65e24419962b1df", "difficulty": 800, "tags": ["implementation", "geometry", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define MAX 100\nint main(int argc, char *argv[]) {\n    int i, j, n, m, x=0, pos_x, pos_y;\n    char linea[MAX+1];\n    scanf(\"%d %d\", &n,&m);\n    char City[n][m];\n    int distritos[3][2];\n    for(i=0; i<n; i++){\n        scanf(\"%s\", linea);\n        for(j=0; j<m; j++){\n            City[i][j]=linea[j];\n        }\n    }\n    \n    for(i=0; i<n; i++){\n        for(j=0; j<m; j++){\n            if(City[i][j]=='*'){\n                distritos[x][0]=i+1;\n                distritos[x][1]=j+1;\n                x++;\n            }\n        }\n    }\n    \n\n    if(distritos[0][0]==distritos[1][0])\n        pos_x=distritos[2][0];\n    else\n        pos_x=distritos[0][0];\n        \n    if(distritos[0][1]==distritos[1][1])\n        pos_y=distritos[2][1];\n    else\n        pos_y=distritos[0][1];\n        \n        printf(\"%d %d\", pos_x, pos_y);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define MAX 100\nint main(int argc, char *argv[]) {\n    int i, j, n, m, x=0, pos_x, pos_y;\n    char linea[MAX+1];\n    scanf(\"%d %d\", &n,&m);\n    char City[n][m];\n    int distritos[3][2];\n    for(i=0; i<n; i++){\n        scanf(\"%s\", linea);\n        for(j=0; j<m; j++){\n            City[i][j]=linea[j];\n        }\n    }\n    \n    for(i=0; i<n; i++){\n        for(j=0; j<m; j++){\n            if(City[i][j]=='*'){\n                distritos[x][0]=i+1;\n                distritos[x][1]=j+1;\n                x++;\n            }\n        }\n    }\n    \n\n    if(distritos[0][0]==distritos[1][0])\n        pos_x=distritos[2][0];\n    else if(distritos[1][0]==distritos[2][0])\n        pos_x=distritos[0][0];\n    else        \n        pos_x=distritos[1][0];\n        \n    if(distritos[0][1]==distritos[1][1])\n        pos_y=distritos[2][1];\n    else if (distritos[1][1]==distritos[2][1])\n        pos_y=distritos[0][1];\n    else\n        pos_y=distritos[1][1];\n        \n        printf(\"%d %d\", pos_x, pos_y);\n    return 0;\n}"}
{"similarity_score": 0.9605662285136501, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8d4df0ca6c23e1dbb201a37739d15a2b", "bug_code_uid": "944247f8a107302fa09c6c12c8ad59ef", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "81a9d5053d222091bdc7a9d9f9c66f12", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n\n    int a[n];\n\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n\n    int s=0;\n    int boro=0;\n    int x=0;\n\n    for(int i=0;i<n;i++)\n    {\n       x=a[i];\n       s=sqrt(x);\n\n       if(s*s!=x)\n       {\n           if(x>boro)\n           {\n               boro=x;\n           }\n       }\n\n       else\n       {\n           x=0;\n           s=0;\n       }\n    }\n\n\n    printf(\"%d\",boro);\n\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n\n    int a[n];\n\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n\n    int s=0;\n    int boro=-1000008;\n    int x=0;\n\n\n    for(int i=0;i<n;i++)\n    {\n       x=a[i];\n       s=sqrt(x);\n\n       if(s*s!=x)\n       {\n           if(x>boro)\n           {\n               boro=x;\n           }\n       }\n\n       else\n       {\n           x=0;\n           s=0;\n       }\n    }\n\n\n    printf(\"%d\",boro);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.7203980099502487, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "7f3ff71f30c0168b83d9158f2c537e8b", "bug_code_uid": "0bf633c6a11837f6e042a9ab7116a81f", "src_uid": "2df181f2d1f4063a22fd2fa2d47eef92", "apr_id": "9a919369894ac6ec57c1c0a02c66015a", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n char s[100001],t[100001];\n scanf(\"%s%s\",s,t);\n int i,n;\n n=strlen(s);\n int distance=0;\n int k=-1,l=-1;\n for(i=0;i<n;i++)\n \t{\n \t\tif(s[i]!=t[i])\n \t\t\tk=i,distance++;\n \t\telse\n \t\t\tl=i;\n \t}\n if(distance==0 || distance == n)\n \tprintf(\"impossible\\n\");\n else\n {\n \tfor(i=0;i<n;i++)\n \t{\n \t\tif(i==k || i==l)\n \t\t{\n \t\t\tif(t[i]=='0')\n \t\t\t\tprintf(\"1\");\n \t\t\telse\n \t\t\t\tprintf(\"0\");\n \t\t}\n \t\telse\n \t\t\tprintf(\"%c\",t[i]);\n \t}\n \tprintf(\"\\n\");\n }\n return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n char s[100001],t[100001];\n scanf(\"%s%s\",s,t);\n int i,n;\n n=strlen(s);\n int distance=0;\n int k=-1,l=-1;\n for(i=0;i<n;i++)\n \t{\n \t\tif(s[i]!=t[i])\n \t\t\tk=i,distance++;\n \t\telse\n \t\t\tl=i;\n \t}\n if(distance%2)\n \tprintf(\"impossible\\n\");\n else\n {\n \tdistance/=2;\n \tfor(i=0;i<n;i++)\n \t{\n \t\tif(s[i]==t[i])\n \t\t\tprintf(\"%c\",s[i]);\n \t\telse\n \t\t\t{\n \t\t\t\tif(distance<=0)\n \t\t\t\t\tprintf(\"%c\",t[i]);\n \t\t\t\telse\n \t\t\t\t\tprintf(\"%c\",s[i]);\n \t\t\t\tdistance--;\n \t\t\t}\n\n \t}\n \tprintf(\"\\n\");\n }\n return 0;\n}"}
{"similarity_score": 0.645320197044335, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "6e4553830c7b975a2baaed06443e94ff", "bug_code_uid": "23c1181b434e8233487c95ff8742e7d6", "src_uid": "1cd295e204724335c63e685fcc0708b8", "apr_id": "cc8c55725887328798ee4e16cee32247", "difficulty": 1400, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long a[100003],i,n,j,ans=0,s=0,b;\n    scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    for(i=1;i<n;i++)\n    {\n        if(a[i-1]>=a[i])\n        {\n            a[i]+=s;\n            b=a[i-1]-a[i];\n            ans+=b;\n            a[i]+=b;\n            s+=b;\n        }\n        else\n        {\n            s=0;\n        }\n    }\n    printf(\"%I64d\",ans);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long a[100003],i,n,j,ans=0,s=0,b;\n    scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    for(i=1;i<n;i++)\n    {\n        a[i]+=s;\n        s+=((a[i-1]-a[i]<0)?0:a[i-1]-a[i]);\n        a[i]=(a[i-1]<a[i])?a[i]:a[i-1];\n    }\n    printf(\"%I64d\",s);\n    return 0;\n}\n"}
{"similarity_score": 0.9860696517412936, "equal_cnt": 9, "replace_cnt": 0, "delete_cnt": 6, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "d43689fffd765d4f552cb918b5c9cbc1", "bug_code_uid": "a20cd308e424552274aed5afdab16ead", "src_uid": "65a64ea63153fec4d660bad1287169d3", "apr_id": "c3067a157fd68bd4b8713b96846a860d", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a;\r\n    scanf(\"%d\",&a);\r\n    for(int i=0;i<a;i++)\r\n    {\r\n        int px=0,py=0,l=0,r=0,u=0,d=0,e=0,x=0,y=0;\r\n        scanf(\"%d %d\",&px,&py);\r\n        char s[100000];\r\n        scanf(\"%s\",s);\r\n        for(e=0;s[e]!='\\0';e++)\r\n        {\r\n            if(s[e]=='L'||'l')\r\n            {l++;}\r\n            if(s[e]=='R'||'r')\r\n            {r++;}\r\n            if(s[e]=='U'||'u')\r\n            {u++;}\r\n            if(s[e]=='D'||'d')\r\n            {d++;}\r\n        }\r\n        for(int j=0;j<=l;j++)\r\n        {\r\n            for(int k=0;k<=r;k++)\r\n            {\r\n                if((k-j)==px)\r\n                x=k-j;\r\n            }\r\n        }\r\n\r\n        for(int j=0;j<=u;j++)\r\n        {\r\n            for(int k=0;k<=d;k++)\r\n            {\r\n                if((j-k)==py)\r\n                y=j-k;\r\n            }\r\n        }\r\n        if((px==x)&&(py==y))\r\n        {\r\n            printf(\"\\nYES\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"\\nNO\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a;\r\n    scanf(\"%d\",&a);\r\n    for(int i=0;i<a;i++)\r\n    {\r\n        int px=0,py=0,l=0,r=0,u=0,d=0,e=0,x=0,y=0;\r\n        scanf(\"%d %d\",&px,&py);\r\n        char s[100000];\r\n        scanf(\"%s\",s);\r\n        for(e=0;s[e]!='\\0';e++)\r\n        {\r\n            if(s[e]=='L')\r\n            {l++;}\r\n            if(s[e]=='R')\r\n            {r++;}\r\n            if(s[e]=='U')\r\n            {u++;}\r\n            if(s[e]=='D')\r\n            {d++;}\r\n        }\r\n        for(int j=0;j<=l;j++)\r\n        {\r\n            for(int k=0;k<=r;k++)\r\n            {\r\n                if((k-j)==px)\r\n                x=k-j;\r\n            }\r\n        }\r\n\r\n        for(int j=0;j<=u;j++)\r\n        {\r\n            for(int k=0;k<=d;k++)\r\n            {\r\n                if((j-k)==py)\r\n                y=j-k;\r\n            }\r\n        }\r\n        if((px==x)&&(py==y))\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.11373092926490985, "equal_cnt": 15, "replace_cnt": 13, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "5eec34e34ad9672fdd1dc5caa4a5ce6a", "bug_code_uid": "b0092f9dd9495cbf90ab6854c2fc4820", "src_uid": "bf0422de4347a308d68a52421fbad0f3", "apr_id": "072048d66e33135fcd794f172c5103c5", "difficulty": 1200, "tags": ["two pointers", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int main (){\nint a,b,i,j,k,u;\nk=0;u=0;\nscanf(\"%d %d\",&a,&b);\nlong long unsigned int comp[a];\nlong long unsigned int prob[b];\n\nfor(i=0;i<a;i++){\nscanf(\"%lld\",&comp[i]);}\nfor(i=0;i<b;i++){\nscanf(\"%lld\",&prob[i]);}\n\nfor(i=0;i<a;i++){\nfor(j=0+u;j<b;j++){\nif(comp[i]==prob[j]){k++;u++;break;}}}\n\nif(k<a){k=a-k;\nprintf(\"%d\",k);}else{printf(\"0\");}\n\n}\n// 1457184252393", "fixed": "#include <stdio.h>\n\nint a[3001];\nint b[3001];\n\nint main()\n{\n    int n, m;\n    int i, j;\n\n    scanf(\"%d %d\", &n, &m);\n    for (i = 0; i < n; i++) scanf(\"%d\", a+i);\n    for (i = 0; i < m; i++) scanf(\"%d\", b+i);\n\n    j = 0;\n    for (i = 0; i < m; i++)\n    {\n        if (a[j] <= b[i]) j++;\n        if (j >= n) break;\n    }\n\n    printf(\"%d\", n-j);\n}\n// 1457186655131"}
{"similarity_score": 0.8495575221238938, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "de9148d03d8ef2e82474ede065727308", "bug_code_uid": "fd14e7adb6bcafceb94beb48b2873be7", "src_uid": "27b73a87fc30c77abb55784e2e1fde38", "apr_id": "0876eae0c93b1296c13ef10b089e4167", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t,i;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tint n,j,k,f;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tchar str[n][2*n+1];\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tf=j-1;\r\n\t\t\tfor(k=0;k<n-j;k++)\r\n\t\t\t{\r\n\t\t\t\tstr[j][k]='(';\r\n\t\t\t}\r\n\t\t\tfor(k=n+1-j;f>=0;k=k+2,f--)\r\n\t\t\t{\r\n\t\t\t\tstr[j][k]='(';\r\n\t\t\t}\r\n\t\t\tfor(k=0;k<2*n;k++)\r\n\t\t\t{\r\n\t\t\t\tif(str[j][k]!='(')\r\n\t\t\t\tstr[j][k]=')';\r\n\t\t\t}\r\n\t\t\tfor(k=0;k<2*n;k++)\r\n\t\t\tprintf(\"%c\",str[j][k]);\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n\tint t,i;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tint n,j,k,f;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tchar str[n][2*n+1];\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tfor(k=0;k<2*n;k++)\r\n\t\t\tstr[j][k]='\\0';\r\n\t\t}\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tf=j-1;\r\n\t\t\tfor(k=0;k<n-j;k++)\r\n\t\t\t{\r\n\t\t\t\tstr[j][k]='(';\r\n\t\t\t}\r\n\t\t\tfor(k=n+1-j;f>=0;k=k+2)\r\n\t\t\t{\r\n\t\t\t\tstr[j][k]='(';\r\n\t\t\t\tf--;\r\n\t\t\t}\r\n\t\t\tfor(k=0;k<2*n;k++)\r\n\t\t\t{\r\n\t\t\t\tif(str[j][k]!='(')\r\n\t\t\t\tstr[j][k]=')';\r\n\t\t\t}\r\n\t\t\tfor(k=0;k<2*n;k++)\r\n\t\t\tprintf(\"%c\",str[j][k]);\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.9468822170900693, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "117c723c5c78e4b737b2bc98073de53f", "bug_code_uid": "870d32b3761beb8e832e4329017c9dce", "src_uid": "f1d3032f1cb07ad6187a37c84376510d", "apr_id": "fc15783aed0df199bf96a7b8979fa14b", "difficulty": 800, "tags": ["brute force", "constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\nint main(void)\r\n{\r\n    int t, x, y, flag=0;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d%d\", &x, &y);\r\n        for (int i = 0; i < 51; i++)\r\n        {\r\n            for (int j = 0; j < 51; j++)\r\n            {\r\n                if (((i + j) == (x + y) / 2) && ((abs(x - i) + abs(y - j)) == (x + y) / 2))\r\n                {\r\n                    printf(\"%d %d\\n\", i, j);\r\n                    flag=1;\r\n                    break;\r\n                }\r\n            }\r\n            if (flag)\r\n                break;\r\n        }\r\n        flag=0;\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nint main(void)\r\n{\r\n    int t, x, y, flag=0;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d%d\", &x, &y);\r\n        for (int i = 0; i < 51; i++)\r\n        {\r\n            for (int j = 0; j < 51; j++)\r\n            {\r\n                if (((i + j) == (x + y) / 2) && ((abs(x - i) + abs(y - j)) == (x + y) / 2))\r\n                {\r\n                    printf(\"%d %d\\n\", i, j);\r\n                    flag=1;\r\n                    break;\r\n                }\r\n            }\r\n            if (flag)\r\n                break;\r\n        }\r\n        if (flag)\r\n            flag=0;\r\n        else\r\n            printf(\"-1 -1\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9845916795069337, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "ecf3483fd46847fef9bb91cf6a9bae42", "bug_code_uid": "92c210efa32ba14762fc9c90663ff527", "src_uid": "4b7b0fba7b0af78c3956c34c29785e7c", "apr_id": "3e4fc4915cc61e1efa36c12e4380969d", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int n, i, j, count = 0;\n    scanf(\"%d\", &n);\n    char str[n], str1[][10] = {\"ABSINTH\", \"BEER\", \"BRANDY\", \"CHAMPAGNE\", \"GIN\",\n                                 \"RUM\", \"SAKE\", \"TEQUILA\", \"VODKA\", \"WHISKEY\", \"WINE\",\n                                 \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\",\n                                 \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\"};\n\n    for(i=0; i<n; i++){\n        scanf(\"%s\", str);\n        for(j=0; j<29; j++){\n            if(strcmp(str, str1[j]) == 0)\n                count++;\n        }\n    }\n    printf(\"%d\", count);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int n, i, j, count = 0;\n    scanf(\"%d\", &n);\n    char str[n][101], str1[][10] = {\"ABSINTH\", \"BEER\", \"BRANDY\", \"CHAMPAGNE\", \"GIN\",\n                                    \"RUM\", \"SAKE\", \"TEQUILA\", \"VODKA\", \"WHISKEY\", \"WINE\",\n                                    \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\",\n                                    \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\"};\n\n    for(i=0; i<n; i++){\n        scanf(\"%s\", str[i]);\n        for(j=0; j<29; j++){\n            if(strcmp(str[i], str1[j]) == 0)\n                count++;\n        }\n    }\n    printf(\"%d\", count);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9818181818181818, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b09eb5d860dfc0ddc5af4e7719becb33", "bug_code_uid": "67d2ac9304b8e8f7143fd40ef9bb0d79", "src_uid": "4ebea3f56ffd43efc9e1496a0ef7fa2d", "apr_id": "4be7ec21e43e072dc6f7ac0e42ff1590", "difficulty": 1200, "tags": ["constructive algorithms", "*special", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "/*Md: Shamim Imtiaz*/\n\n#include<stdio.h>\nint main()\n{\n    int i,j,k,l,m,n,c,d,p,q;\n    int cs=0,tc,t=1,flg,f,sm;\n    //string s,s1,s2;\n    //while(cin >> n)\n    scanf(\"%d\",&n);\n    {\n        p=n/2;\n        q=n%2;\n        if(q==0)\n        {\n            for(i=1;i<=p;i++)\n            {\n                printf(\"1\");\n            }\n            printf(\"\\n\");\n        }\n        else if(q==1)\n        {\n            for(i=1;i<p;i++)\n            {\n                printf(\"1\");\n            }\n            printf(\"7\\n\");\n        }\n//        else\n//        {\n//            for(i=1;i<=p;i++)\n//            {\n//                printf(\"7\");\n//            }\n//            printf(\"1\\n\");\n//        }\n    }\n    return 0;\n}\n", "fixed": "/*Md: Shamim Imtiaz*/\n\n#include<stdio.h>\nint main()\n{\n    int i,j,k,l,m,n,c,d,p,q;\n    int cs=0,tc,t=1,flg,f,sm;\n    //string s,s1,s2;\n    //while(cin >> n)\n    scanf(\"%d\",&n);\n    {\n        p=n/2;\n        q=n%2;\n        if(q==0)\n        {\n            for(i=1;i<=p;i++)\n            {\n                printf(\"1\");\n            }\n            printf(\"\\n\");\n        }\n        else if(q==1)\n        {\n            printf(\"7\");\n            for(i=1;i<p;i++)\n            {\n                printf(\"1\");\n            }\n            printf(\"\\n\");\n        }\n//        else\n//        {\n//            for(i=1;i<=p;i++)\n//            {\n//                printf(\"7\");\n//            }\n//            printf(\"1\\n\");\n//        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9769585253456221, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ba3b907b9b8ac7d5f61a27fe020df153", "bug_code_uid": "ec772639f2eabde32abb525e189ac43a", "src_uid": "46d734178b3acaddf2ee3706f04d603d", "apr_id": "c08a2b33bbdc69b86437ef4901e5f712", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int i=0,j=0,k=0,l=0,m=0,n=0,o=0;\n    char a[100],b[100],c[100];\n    gets(a);\n    gets(b);\n    gets(c);    \n    while(a[i]!='\\0')\n    {\n        if(a[i]=='a' || a[i]=='e' || a[i]=='i' || a[i]=='o' || a[i]=='u' )\n        m++;\n        i++;\n    }\n        while(b[k]!='\\0')\n    {\n        if(b[k]=='a' || b[k]=='e' || b[k]=='i' || b[k]=='o' || b[k]=='u' )\n        n++;\n        k++;\n    }\n        while(c[l]!='\\0')\n    {\n        if(c[l]=='a' || c[l]=='e' || c[l]=='i' || c[l]=='o' || c[l]=='u' )\n        o++;\n        l++;\n    }\n    if (m==5 && n==7 && o==5)\n    printf(\"YES\\n\");\n    else\n    printf(\"NO\\n\");\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int i=0,j=0,k=0,l=0,m=0,n=0,o=0;\n    char a[200],b[200],c[200];\n    gets(a);\n    gets(b);\n    gets(c);    \n    while(a[i]!='\\0')\n    {\n        if(a[i]=='a' || a[i]=='e' || a[i]=='i' || a[i]=='o' || a[i]=='u' )\n        m++;\n        i++;\n    }\n        while(b[k]!='\\0')\n    {\n        if(b[k]=='a' || b[k]=='e' || b[k]=='i' || b[k]=='o' || b[k]=='u' )\n        n++;\n        k++;\n    }\n        while(c[l]!='\\0')\n    {\n        if(c[l]=='a' || c[l]=='e' || c[l]=='i' || c[l]=='o' || c[l]=='u' )\n        o++;\n        l++;\n    }\n    if (m==5 && n==7 && o==5)\n    printf(\"YES\\n\");\n    else\n    printf(\"NO\\n\");\n}"}
{"similarity_score": 0.9965811965811966, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ab1482c0033586ecc9b23276c1bd0716", "bug_code_uid": "06cfa35e79721790501d7c903be9283b", "src_uid": "3f3a013cedaaf8cbee0a74a4ed50f09d", "apr_id": "3af774c317f7fa9855e06655fb30f313", "difficulty": 1200, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define min(a, b) (a) < (b) ? (a) : (b)\n\nint main() {\n    int np = 0;\n    int x, t;\n    scanf(\"%d\", &t);\n\n    int n;\n    scanf(\"%d\", &n);\n    int c[n];\n    memset(c, 0, sizeof(int) * n);\n\n    while (t--) {\n        scanf(\"%d\", &x);\n        c[x % n]++;\n    }\n\n    int count = c[0] & 0xFFFFFFFE;\n    int c0 = 1, c1 = n - 1;\n    for (int c0 = 1, c1 = n - 1; c0 <= c1; c0++, c1--) {\n        if (c0 == c1)\n            count += (c[c0] & 0xFFFFFFFE);\n        else\n            count += min(c[c0], c[c1]);\n    }\n    printf(\"%d\\n\", count);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#define min(a, b) (a) < (b) ? (a) : (b)\n\nint main() {\n    int np = 0;\n    int x, t;\n    scanf(\"%d\", &t);\n\n    int n;\n    scanf(\"%d\", &n);\n    int c[n];\n    memset(c, 0, sizeof(int) * n);\n\n    while (t--) {\n        scanf(\"%d\", &x);\n        c[x % n]++;\n    }\n\n    int count = c[0] & 0xFFFFFFFE;\n    int c0 = 1, c1 = n - 1;\n    for (int c0 = 1, c1 = n - 1; c0 <= c1; c0++, c1--) {\n        if (c0 == c1)\n            count += (c[c0] & 0xFFFFFFFE);\n        else\n            count += (min(c[c0], c[c1]))*2;\n    }\n    printf(\"%d\\n\", count);\n    return 0;\n}"}
{"similarity_score": 0.9936880072137061, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0529e3a181cbd9c1a997dad9aea1f212", "bug_code_uid": "aa5f8d2449c4205d71fd9df882655959", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "9336ba9f490695671b0114fcbd4dd487", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint A[500005];\nlong long int count[500005]={0};\nint main(){\n\n\tint n,i;\n\tlong long int sum=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&A[i]);\n\t\tsum+=A[i];\n\t}\n\tif(A[i]%3){\n\t\tprintf(\"0\\n\");\n\t\treturn(0);\n\t}\n\t\n\tsum /=3;\n\tlong long int currSum = 0;\n\t\n\tfor(i=n-1;i>=0;i--){\n\t\tcurrSum +=A[i];\n\t\tif(currSum==sum)\n\t\t\tcount[i]  = count[i] + 1;\n\t\t\n\t\tcount[i] += count[i+1];\n\t\n\t}\n\tlong long int ans = 0;\n\tcurrSum = 0;\n\tfor(i=0;i<n-2;i++){\n\t\tcurrSum += A[i];\n\t\tif(currSum==sum)\n\t\t\tans += count[i+2];\n\t}\n\t\n\tprintf(\"%lld\\n\",ans);\n\treturn(0);\n}\n", "fixed": "#include<stdio.h>\nint A[500005];\nlong long int count[500005]={0};\nint main(){\n\n\tint n,i;\n\tlong long int sum=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&A[i]);\n\t\tsum+=A[i];\n\t}\n\tif(sum%3){\n\t\tprintf(\"0\\n\");\n\t\treturn(0);\n\t}\n\t\n\tsum /=3;\n\tlong long int currSum = 0;\n\t\n\tfor(i=n-1;i>=0;i--){\n\t\tcurrSum +=A[i];\n\t\tif(currSum==sum)\n\t\t\tcount[i]  = count[i] + 1;\n\t\t\n\t\tcount[i] += count[i+1];\n\t\n\t}\n\tlong long int ans = 0;\n\tcurrSum = 0;\n\tfor(i=0;i<n-2;i++){\n\t\tcurrSum += A[i];\n\t\tif(currSum==sum)\n\t\t\tans += count[i+2];\n\t}\n\t\n\tprintf(\"%lld\\n\",ans);\n\treturn(0);\n}\n"}
{"similarity_score": 0.7380699893955461, "equal_cnt": 13, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "1e4c05a8450d71073329dd3738036afd", "bug_code_uid": "d22c5b658f5273258c0bcf7745821109", "src_uid": "130fd7f40d879e25b0bff886046bf699", "apr_id": "8c9109e2229971fedfdbfc88ba69d848", "difficulty": 900, "tags": ["sortings", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int m;\n    scanf(\"%d\",&m);\n\n    while(m--){\n    int n;\n    scanf(\"%d\",&n);\n    int l[n];\n    int i,j,temp;\n\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&l[i]);\n    }\n\n    for(i=0;i<n;i++){\n            for(j=i+1;j<n;j++){\n                if(l[i]>l[j]){\n                temp=l[i];\n                l[i]=l[j];\n                l[j]=temp;\n                }\n            }\n    }\n\n    int maximum1=l[n-1];\n    int maximum2=l[n-2];\n\n   // printf(\"%d %d\",maximum1,maximum2);\n\n   int count=0;\n\n   for(i=0;i<n;i++){\n    if(l[i]<maximum2)\n        count=count+1;\n   }\n\n   //printf(\"%d\",count);\n   if(count+2==n){\n\n   if(count>maximum2-1)\n    printf(\"%d\\n\",maximum2-1);\n   else\n    printf(\"%d\\n\",count);\n   }\n\n\n   else{\n    int f=n-(count+2);\n    count=count+f;\n      if(count>maximum2-1)\n    printf(\"%d\\n\",maximum2-1);\n   else\n    printf(\"%d\\n\",count);\n   }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <limits.h>\n\nint main()\n{\n    int m;\n    int maximum1,maximum2;\n    scanf(\"%d\",&m);\n\n    while(m--){\n    int n;\n    scanf(\"%d\",&n);\n    int l[n];\n    int i,j,temp;\n\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&l[i]);\n    }\nmaximum1=maximum2=INT_MIN;\n\n   if(maximum1<maximum2){\n        temp=maximum1;\n    maximum1=maximum2;\n   maximum2=temp;\n   }\n\n   for(i=0;i<n;i++){\n    if(l[i]>=maximum1){\n        maximum2=maximum1;\n        maximum1=l[i];\n\n    }\n      else if(l[i]>maximum2 && l[i]<maximum1){\n            maximum2=l[i];\n\n   }\n   }\n   // printf(\"%d %d\",maximum1,maximum2);\n\n   int count=0;\n\n   for(i=0;i<n;i++){\n    if(l[i]<maximum2)\n        count=count+1;\n   }\n\n   //printf(\"%d\",count);\n   if(count+2==n){\n\n   if(count>maximum2-1)\n    printf(\"%d\\n\",maximum2-1);\n   else\n    printf(\"%d\\n\",count);\n   }\n\n\n   else{\n    int f=n-(count+2);\n    count=count+f;\n      if(count>maximum2-1)\n    printf(\"%d\\n\",maximum2-1);\n   else\n    printf(\"%d\\n\",count);\n   }\n    }\n}\n\n"}
{"similarity_score": 0.999104744852283, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c916a4f5e879af8e726937726816cf25", "bug_code_uid": "b0c0cccdb0f0e5577d1db47b5c3c95b0", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "ce95db341e2d2dd1716eabf220f0eafa", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n\tchar s[10001];\n\tscanf(\"%s\",s);\n\tint len = strlen(s);\n\tint x = (int)s[len-1]-48;\n\t//printf(\"%d\\n\",x);\n\tint flag = 0;\n\tint pos = -1;\n\tfor(int i=0;i<len-1;i++) {\n\t\tif(((int)s[i]-48)%2==0) {\n\t\t\tflag = 1;\n\t\t\tpos = i;\n\t\t\tif(x>((int)s[i]-48)) {\n\t\t\t\tchar temp = s[i];\n\t\t\t\ts[i] = s[len-1];\n\t\t\t\ts[len-1] = temp;\n\t\t\t\tprintf(\"%s\\n\",s);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tif(flag==0) {\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\telse {\n\t\tchar temp = s[pos];\n\t\ts[pos] = s[len-1];\n\t\ts[len-1] = temp;\n\t\tprintf(\"%s\\n\",s) ;\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n\tchar s[100001];\n\tscanf(\"%s\",s);\n\tint len = strlen(s);\n\tint x = (int)s[len-1]-48;\n\t//printf(\"%d\\n\",x);\n\tint flag = 0;\n\tint pos = -1;\n\tfor(int i=0;i<len-1;i++) {\n\t\tif(((int)s[i]-48)%2==0) {\n\t\t\tflag = 1;\n\t\t\tpos = i;\n\t\t\tif(x>((int)s[i]-48)) {\n\t\t\t\tchar temp = s[i];\n\t\t\t\ts[i] = s[len-1];\n\t\t\t\ts[len-1] = temp;\n\t\t\t\tprintf(\"%s\\n\",s);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tif(flag==0) {\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\telse {\n\t\tchar temp = s[pos];\n\t\ts[pos] = s[len-1];\n\t\ts[len-1] = temp;\n\t\tprintf(\"%s\\n\",s) ;\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.7682333873581848, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "d94175e55e6da66cb7b018789047f455", "bug_code_uid": "1dc1414c2f08e4ae7d2eb199c32f2e7b", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "fd96d0c27154f27aca73ce48cf1a6445", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint m[100000],c[100000];\nint i,cost=0,n;\nint main()\n{\n\nscanf(\"%d\",&n);\nscanf(\"%d%d\",&m[0],&c[0]);\ncost=cost+c[0]*m[0];\nfor(i=1;i<n;i++)\n{scanf(\"%d%d\",&m[i],&c[i]);\nif(c[i-1]<c[i])\ncost=cost+c[i-1]*m[i];\nelse\ncost=cost+c[i]*m[i];\n\n}\nprintf(\"%d\",cost);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint m[100000],c[100000];\nint i,cost=0,n,min=100000;\nint main()\n{\n\nscanf(\"%d\",&n);\nscanf(\"%d%d\",&m[0],&c[0]);\ncost=cost+c[0]*m[0];\nmin=c[0];\nfor(i=1;i<n;i++)\n{scanf(\"%d%d\",&m[i],&c[i]);\nif(min>c[i])\n   {\n\n    min=c[i];\n    cost=cost+min*m[i];}\n    else\n    {\n\n    cost=cost+min*m[i];}\n\n}\nprintf(\"%d\",cost);\nreturn 0;\n}\n"}
{"similarity_score": 0.9968051118210862, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "72ae271a037ca21b1239c372cc180fd7", "bug_code_uid": "a397446aa762717b044163aa3f08be58", "src_uid": "df94080c5b0b046af2397cafc02b5bdc", "apr_id": "be177c0d003ed0ed1ddf7c996b7df33f", "difficulty": 1000, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int tc,i,n;\n    long long ara[100000];\n    scanf(\"%d\",&tc);\n    for(i=0;i<tc;i++){\n        scanf(\"%I64d\",&ara[i]);\n        if(ara[i]==1){\n            n=1;\n        }\n    }\n    if(n){\n        printf(\"-1\\n\");\n        return 0;\n    }\n    else\n        printf(\"1\\n\");\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n    int tc,i,n=0;\n    long long ara[100000];\n    scanf(\"%d\",&tc);\n    for(i=0;i<tc;i++){\n        scanf(\"%I64d\",&ara[i]);\n        if(ara[i]==1){\n            n=1;\n        }\n    }\n    if(n){\n        printf(\"-1\\n\");\n        return 0;\n    }\n    else\n        printf(\"1\\n\");\n    return 0;\n}"}
{"similarity_score": 0.92970946579194, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "a4678c1ad883c948bf2993c4391d3aa6", "bug_code_uid": "dd687d0bbed64b4b9c89be6a9179bf50", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "b6d9a5d66980bc5959102a37e89444e1", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,t=0,l=0;\n    int m[10000];\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++)\n    {\n\tscanf(\"%d\",&m[i]);\n\n    }\n    for(i=0;i<n;i++)\n    {\t\n\tif(m[i]%2!=m[i+1]%2 && m[i+1]%2!=m[i+2]%2)\n        {\t\n\t   printf(\"%d\",i+2);\n\t   break;\n        }\t \n\t\n\tif(m[i]%2!=m[i+1]%2 && m[i+1]%2==m[i+2]%2)\n\t{ \n\t    printf(\"%d\",i+1);\n\t    break;\n\n\t}\n\t\n        if(m[n-1]%2!=m[i]%2 && m[n-1]%2!=m[i+1]%2)\n\t    printf(\"%d\",n);\n            \n\t    \n        \n\n\n    }\n       \n             \n\t     \n  \n\n  return 0;\n}\n       \n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,t=0,l=0;\n    int m[10000];\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++)\n    {\n\tscanf(\"%d\",&m[i]);\n\n    }\n    for(i=0;i<n;i++)\n    {\t\n\tif(m[i]%2!=m[i+1]%2 && m[i+1]%2!=m[i+2]%2)\n        {\t\n\t   printf(\"%d\",i+2);\n\t   break;\n        }\t \n\t\n\tif(m[i]%2!=m[i+1]%2 && m[i+1]%2==m[i+2]%2)\n\t{ \n\t    printf(\"%d\",i+1);\n\t    break;\n\n\t}\n\t\n        if(m[n-1]%2!=m[0]%2 && m[n-1]%2!=m[1]%2)\n\t{ printf(\"%d\",n);\n            break;\n         }\n\t    \n        \n\n\n    }\n       \n             \n\t     \n  \n\n  return 0;\n}\n       \n"}
{"similarity_score": 0.9977011494252873, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c6baede5d1a642a2f07d6432cd6b3d9a", "bug_code_uid": "7253e18b6bf1a8d23e1ff5fbded15160", "src_uid": "e8ba3fb95800806465386ecbfbe924e9", "apr_id": "afe163616c2c9404ec66c4675923d5d8", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main()\n{\n\tint t, l, r, i;\n\t\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t{\n\t\t\n\t\tscanf(\"%d %d\", &l, &r);\n\t\t{\n\t\t\tif (2*l > r)\n\t\t\t\tprintf(\"-1 -1\\n\");\n\t\t\telse if(2*l < r)\n\t\t\t\tprintf(\"%d %d\\n\", l, 2 * l);\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\nvoid main()\n{\n\tint t, l, r, i;\n\t\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t{\n\t\t\n\t\tscanf(\"%d %d\", &l, &r);\n\t\t{\n\t\t\tif (2*l > r)\n\t\t\t\tprintf(\"-1 -1\\n\");\n\t\t\telse if(2*l <= r)\n\t\t\t\tprintf(\"%d %d\\n\", l, 2 * l);\n\t\t}\n\t}\n}"}
{"similarity_score": 0.7233333333333334, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "174307917a8245ef71fb9eda3b893cd7", "bug_code_uid": "f62e75510d7ae2df5d838d3f8692b270", "src_uid": "fc831eda72f2ebe0865a3fb1b783edc5", "apr_id": "68e7917811eb3f8927401aab6184730c", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,j,n,m,k;\n\tscanf(\"%d%d\",&n,&k);\n\tint count=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&m);\n\t\twhile(m)\n\t\t{\n\t\t\tj=m%10;\n\t\t\tif(j>k)\tbreak;\n\t\t\telse\tm=m/10;\n\t\t}\n\t\tif(m==0)\tcount++;\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,j,n,m,k,l;\n\tscanf(\"%d%d\",&n,&k);\n\tint a[10];\n\tint count=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(l=0;l<=k;l++)\n\t\t{\n\t\t\ta[l]=0;\n\t\t}\n\t\tscanf(\"%d\",&m);\n\t\tif(!m)\ta[0]++;\n\t\twhile(m)\n\t\t{\n\t\t\tj=m%10;\n\t\t\ta[j]++;\n\t\t\tm=m/10;\n\t\t}\n\t\tfor(l=0;l<=k;l++)\n\t\t{\n\t\t\tif(a[l]==0)\tbreak;\n\t\t}\n\t\tif(l==k+1)\tcount++;\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9081022294725394, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "c5ca962fb65badb1f69ec3b323f1f5f9", "bug_code_uid": "db4ae2e151b04ce73b6813e17084850b", "src_uid": "a51d2e6e321d7db67687a594a2b85e47", "apr_id": "53eee28b9baca5206897c9593233c921", "difficulty": 1200, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,x;\n    char ara[100009][100009],ara1[100009],c='\\0';\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%s\",ara[i]);\n    }\n    x=strlen(ara[0]);\n    for(i=0;i<x;i++){\n        for(j=0;j<n;j++){\n            if(ara[j][i]==63){\n                continue;\n            }\n            else{\n                if(c=='\\0'){\n                    c=ara[j][i];\n                }\n                else{\n                    if(ara[j][i]!=c){\n                        break;\n                    }\n                }\n            }\n        }\n        if(j==n){\n            if(c=='\\0'){\n                ara1[i]='a';\n            }\n            else{\n                ara1[i]=c;\n            }\n        }\n        else{\n            ara1[i]=63;\n        }\n        c='\\0';\n\n    }\n    for(i=0;i<x;i++){\n        printf(\"%c\",ara1[i]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,x;\n    char *ara[100009],ara1[100009],c='\\0',d[100009];\n    scanf(\"%d%s\",&n,d);\n    x=strlen(d);\n    for(i=0;i<n;i++){\n        ara[i]=(char *)malloc((x+9)*sizeof(char));\n    }\n    strcpy(ara[0],d);\n    for(i=1;i<n;i++){\n        scanf(\"%s\",ara[i]);\n    }\n    for(i=0;i<x;i++){\n        for(j=0;j<n;j++){\n            if(ara[j][i]==63){\n                continue;\n            }\n            else{\n                if(c=='\\0'){\n                    c=ara[j][i];\n                }\n                else{\n                    if(ara[j][i]!=c){\n                        break;\n                    }\n                }\n            }\n        }\n        if(j==n){\n            if(c=='\\0'){\n                ara1[i]='a';\n            }\n            else{\n                ara1[i]=c;\n            }\n        }\n        else{\n            ara1[i]=63;\n        }\n        c='\\0';\n\n    }\n    for(i=0;i<x;i++){\n        printf(\"%c\",ara1[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.3179791976225854, "equal_cnt": 22, "replace_cnt": 6, "delete_cnt": 9, "insert_cnt": 6, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "7902b8ee288b531b6c8948625fab2f69", "bug_code_uid": "db15d1c67df086aa095d362ee598ddfb", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "d72d6a87d707e88589450fbb555127a6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main (){\n\tint i ,m[100],n, count = 1;\n\tscanf (\"%d\",&n);\n\t\tfor (i=0 ; i < n ; i++){\n\t\tscanf (\"%d\",&m[i]);\n\t\t}\n\tif (n==2){\n\t\tfor (i=0; i<n ; i++){\n\t\t\n\t\tif (m[i]==m[i+1]){\n\t\tprintf (\"%d\",1);\n\t\tbreak;}\n\t\telse{\n\t\t printf (\"%d\",2);\n\t\t break;}\n\t\t}\n\t\treturn 0;\n\t}\n\tif (n==3){\n\t\tfor (i=0; i<n ; i++){\n\t\t\n\t\tif (m[i]==m[i+1]){\n\t\tprintf (\"%d\",2);\n\t\tbreak;}\n\t\telse{\n\t\t printf (\"%d\",3);\n\t\t break;}\n\t\t}\n\t\treturn 0;\n\t}\n\tfor (i=0 ; i<n ; i++){\n\t\tif (m[i]==m[i+1]) count++;\n\t\telse break;\n\t}\n\tprintf (\"%d\",count);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main (void){\nint a , n , m , s=0; \nscanf (\"%d\",&n);\nwhile (n--){\n\tscanf(\"%d\",&m);\n\ts+=a!=m;\n\ta=m;\n}\nprintf (\"%d\",s);\n}\n"}
{"similarity_score": 0.9989701338825953, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "69909251ea92cf2385c7c3a49f95feea", "bug_code_uid": "c095b75d3db26f1cda88bf7dd34f3df2", "src_uid": "2c58d94f37a9dd5fb09fd69fc7788f0d", "apr_id": "15fe5f35d5e01d2e4dce280654f78f59", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[3];\n    int i,j;\n    for (i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    if (n==1){\n        printf(\"YES\");\n        exit(0);\n    }\n    for (i=0;i<n;i++){\n            int check=0;\n        for (j=0;j<n-1-i;j++){\n            if (a[j]>a[j+1]){\n                int temp=a[j];\n                a[j]=a[j+1];\n                a[j+1]=temp;\n                 check=1;\n            }\n        }\n        if (check==0){\n            break;\n        }\n    }\n    i=0;\n    while (i<n){\n            int count=1;\n        while ((i+1)<n&&a[i]==a[i+1]){\n            count++;\n            i++;\n        }\n        if (n%2==0){\n            if (count>n/2){\n                printf(\"NO\");\n                exit(0);\n            }\n        }else {\n            if (count>(n/2)+1){\n                printf(\"NO\");\n                exit(0);\n            }\n        }\n        i++;\n    }\n    printf(\"YES\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n];\n    int i,j;\n    for (i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    if (n==1){\n        printf(\"YES\");\n        exit(0);\n    }\n    for (i=0;i<n;i++){\n            int check=0;\n        for (j=0;j<n-1-i;j++){\n            if (a[j]>a[j+1]){\n                int temp=a[j];\n                a[j]=a[j+1];\n                a[j+1]=temp;\n                 check=1;\n            }\n        }\n        if (check==0){\n            break;\n        }\n    }\n    i=0;\n    while (i<n){\n            int count=1;\n        while ((i+1)<n&&a[i]==a[i+1]){\n            count++;\n            i++;\n        }\n        if (n%2==0){\n            if (count>n/2){\n                printf(\"NO\");\n                exit(0);\n            }\n        }else {\n            if (count>(n/2)+1){\n                printf(\"NO\");\n                exit(0);\n            }\n        }\n        i++;\n    }\n    printf(\"YES\");\n    return 0;\n}\n"}
{"similarity_score": 0.3354474982381959, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "d406ce67384a74bbda2b25676eea944d", "bug_code_uid": "f46dc668ef5375d8f14fa760eb3c8213", "src_uid": "7e765c1b0e3f3e9c44de825a79bc1da2", "apr_id": "f41d24d19db73bf2b96f40966454d713", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define ll long long\n\nll findMin(ll *b, ll n){\n\tll i, min;\n\tmin = 1000;\n\tfor (i = 0; i < n; i++){\n\t\tif (b[i] < min){\n\t\t\tmin = b[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nll findMax(ll *a, ll n){\n\tll i, max;\n\tmax= 1;\n\tfor (i = 0; i < n; i++){\n\t\tif (a[i] > max){\n\t\t\tmax = a[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nvoid work(ll turn){\n\tll n, x, q, r, i;\n\tll a[100], b[100];\n\tscanf(\"%lld %lld\", &n, &x);\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%lld\", a+i);\n\t}\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%lld\", b+i);\n\t}\n\tq = findMin(b, n);\n\tr = findMax(a, n);\n\tif (q + r <= x){\n\t\tprintf(\"Yes\\n\");\n\t} else {\n\t\tprintf(\"No\\n\");\n\t}\n}\n\nint main (){\n\tll t, i;\n\tscanf(\"%lld\", &t);\n\tfor (i = 0; i < t; i++){\n\t\twork(i);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#define ll long long\n\nvoid work(ll turn){\n\tll n, x, can = 1, i, j, track;\n\tll a[100] = {0}, b[100] = {0}, taken[100] = {0};\n\tscanf(\"%lld %lld\", &n, &x);\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%lld\", a+i);\n\t}\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%lld\", b+i);\n\t}\n\tfor (i = 0; i < n; i++){\n\t\tll flag = 0;\n\t\tll tr = a[i];\n\t\tfor(j = 0; j < n; j++){\n\t\t\tif (taken[j] == 0){\n\t\t\t\tif (tr + b[j] <= x){\n\t\t\t\t\tflag = 1;\n\t\t\t\t\ttrack = j;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tif (flag == 0){\n\t\t\tcan = 0;\n\t\t\tbreak;\n\t\t} else {\n\t\t\ttaken[track] = 1;\n\t\t}\n \t}\n \t\n\tif (can == 0){\n\t\tprintf(\"No\\n\");\n\t} else {\n\t\tprintf(\"Yes\\n\");\n\t}\n}\n\nint main (){\n\tll t, i;\n\tscanf(\"%lld\", &t);\n\tfor (i = 0; i < t; i++){\n\t\twork(i);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9754601226993865, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "eba0ea288d3257cc10164e7471472a41", "bug_code_uid": "85e567ed5953895321308030fe5f8d6f", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "63fb7f7719679a8bc5339d0eac505085", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint t,max=0;\nscanf(\"%d\",&t);\nfor(int i=0;i<t;i++)\n{\nint a,b,c=0;\nscanf(\"%d%d\",&a,&b);\nc=c-a+b;\nif(max<c)\nmax=c;\n}\nprintf(\"%d\",max);\n}", "fixed": "#include<stdio.h>\nint main(){\nint t,max=0,c=0;\nscanf(\"%d\",&t);\nfor(int i=0;i<t;i++)\n{\nint a,b;\nscanf(\"%d%d\",&a,&b);\nc=c-a+b;\nif(max<c)\nmax=c;\n}\nprintf(\"%d\",max);\n}"}
{"similarity_score": 0.5808917197452229, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "34afcfe11c9fb16d7183047cb0d613aa", "bug_code_uid": "85b674023d6aed5f62b1f793e8ee61ea", "src_uid": "f82058f6ba3ce0da15a5ce059674af35", "apr_id": "2e5147947971e49bd844978d9a0d983e", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n\n    while(t--)\n    {\n        int n, i=1;\n        scanf(\"%d\", &n);\n        while(n--){\n            printf(\"%d \", i);\n            i=i+2;}\n            printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n\n    while(t--)\n    {\n        int n, i=1, j;\n        scanf(\"%d\", &n);\n        if(n%2!=0)\n        {\n            for(j=1; j<=n/2; j++)\n            {\n                printf(\"%d %d \", i, i);\n                i=i+2;\n            }\n            printf(\"%d\\n\", i);\n        }\n        else\n        {\n            for(j=1; j<=n/2; j++)\n            {\n                printf(\"%d %d \", i, i);\n                i=i+2;\n            }\n            printf(\"\\n\");\n        }\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9499192245557351, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "cfc5053a6bfe9118e2fa5b2b8960492c", "bug_code_uid": "1e0dd1c5613bc85eb14504379ba4e49f", "src_uid": "d9fd10700cb122b148202a664e7f7689", "apr_id": "dee70826af3d33c342ffb82e6c53f638", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint t;\nscanf(\"%d\",&t);\nwhile(t--)\n{\n    int cnt=0,x,y;\n    int a,b;\n    scanf(\"%d%d\",&a,&b);\n    if(a>b)\n     {\n         x=a/b;\n         x++;\n         cnt=b*x-a;\n     }\n     else\n     {\n         cnt=b-a;\n     }\n\n    printf(\"%d\\n\",cnt);\n}\n    \n    \nreturn 0;    \n}", "fixed": "#include<stdio.h>\nint main()\n{\nint t;\nscanf(\"%d\",&t);\nwhile(t--)\n{\n    int cnt=0,x,y;\n    int a,b;\n    scanf(\"%d%d\",&a,&b);\n    if(a>b)\n     {\n        if(a%b!=0){ \n         x=a/b;\n         x++;\n         cnt=b*x-a;\n        }\n     }\n     else\n     {\n         cnt=b-a;\n     }\n\n    printf(\"%d\\n\",cnt);\n}\n    \n    \nreturn 0;    \n}"}
{"similarity_score": 0.9776247848537005, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "799860d0b002fb14ffca05970d58f03a", "bug_code_uid": "5f47fde2ab7075da1531489e08c0b061", "src_uid": "c0ad2a6d14b0c9e09af2221d88a34d52", "apr_id": "aa7f7e91e7b658751d07a575042495ea", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main()\r\n{\r\n    int r,b,d;\r\n    int t,maxvalue,minvalue,flag;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d%d%d\",&r,&b,&d);\r\n        if(b>r)\r\n        {   maxvalue=b;\r\n            minvalue=r;\r\n        }\r\n        \r\n        else\r\n        {\r\n            maxvalue=r;\r\n            minvalue=b;\r\n        }\r\n        \r\n        if(maxvalue<=minvalue*(d+1))\r\n        flag=1;\r\n        else\r\n        flag=0;\r\n        \r\n        if(flag==1)\r\n        printf(\"YES\\n\");\r\n        else\r\n        printf(\"NO\\n\");\r\n        \r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main()\r\n{\r\n   long long int r,b,d;\r\n   long long int t,maxvalue,minvalue,flag;\r\n    scanf(\"%lld\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%lld%lld%lld\",&r,&b,&d);\r\n        if(b>r)\r\n        {   maxvalue=b;\r\n            minvalue=r;\r\n        }\r\n        \r\n        else\r\n        {\r\n            maxvalue=r;\r\n            minvalue=b;\r\n        }\r\n        \r\n        if(maxvalue<=minvalue*(d+1))\r\n        flag=1;\r\n        else\r\n        flag=0;\r\n        \r\n        if(flag==1)\r\n        printf(\"YES\\n\");\r\n        else\r\n        printf(\"NO\\n\");\r\n        \r\n    }\r\n}"}
{"similarity_score": 0.6450060168471721, "equal_cnt": 12, "replace_cnt": 3, "delete_cnt": 7, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "7858c91fa6578b608425992157dfb485", "bug_code_uid": "159427ffa65dfe34b0b1d2e923dd2596", "src_uid": "ccf7aba6ca9bbf39a5ec8a20ec018825", "apr_id": "36c3a6dcdfec15e431fae78d1e877c0d", "difficulty": 800, "tags": ["brute force", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int n,q,bin;\r\n    scanf(\"%d %d\",&n,&q);\r\n    int arr[n];\r\n   // int ar1[100000],ar0[100000];\r\n    int k =1,i1=0,i0=0;\r\n    for(int i = 0;i<n;i++){\r\n         // scanf(\"%d\",&bin);\r\n          //arr[i] = bin;\r\n        scanf(\"%d\",&arr[i]);\r\n          //if (bin==1) {//ar1[i1] = k;\r\n              if (arr[i]==1) i1++;//}\r\n          //else {ar0[i2] = k;i2++;}\r\n          else i0++;\r\n          //k++;\r\n    }\r\n\r\n    int t,t2;\r\n    for(int i= 0;i<q;i++){\r\n        scanf(\"%d %d\",&t,&t2);\r\n        if (t==1){\r\n           /* for(int j = 0;j<=i2;j++){\r\n                if (ar0[j]==t2) goto x:\r\n            }\r\n            for (int j )\r\n            x:*/\r\n           if (arr[t2-1]==1) {\r\n               arr[t2] = 0;\r\n               i0++;\r\n               i1--;\r\n           }\r\n           else {\r\n               arr[t2-1] = 1;\r\n               i0--;i1++;\r\n           }\r\n        }\r\n        else {\r\n               if (t2<=i1) printf(\"1\\n\");\r\n               else printf(\"0\\n\");\r\n        }\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main() {\r\n    int n,q;\r\n    scanf(\"%d %d\",&n,&q);\r\n    int arr[n];\r\n    int i1=0,i0=0;\r\n    for(int i = 0;i<n;i++){\r\n        scanf(\"%d\",&arr[i]);\r\n        if (arr[i]==1) i1++;\r\n        else i0++;\r\n    }\r\n    int t,t2;\r\n    for(int i= 0;i<q;i++){\r\n        scanf(\"%d %d\",&t,&t2);\r\n        if (t==1){\r\n            if (arr[t2-1]==1) {\r\n               arr[t2-1] = 0;\r\n               i0++;i1--;\r\n           }\r\n           else {\r\n               arr[t2-1] = 1;\r\n               i0--;i1++;\r\n           }\r\n        }\r\n        else {\r\n               if (t2<=i1) printf(\"1\\n\");\r\n               else printf(\"0\\n\");\r\n        }\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9983193277310924, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a44c67631de054d57bd912e46570f57e", "bug_code_uid": "f8f202ee3885c52ede5ca3af76c1a81f", "src_uid": "3992602be20a386f0ec57c51e14b39c5", "apr_id": "2f5939255e8239ba3939df0637b4e42f", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main(){\n\n    long int  m, res = 0, n, arr[10005];\n\n    scanf(\"%ld %ld\", &n, &m);\n    for(int i = 0; i < n; i++) {\n        scanf(\"%ld\", &arr[i]);\n        res += ceil(arr[i]*1.0/( m));\n    }\n    res = ceil(res*1.0/2);\n    printf(\"%ld\", res);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main(){\n\n    long int  m, res = 0, n, arr[100005];\n\n    scanf(\"%ld %ld\", &n, &m);\n    for(int i = 0; i < n; i++) {\n        scanf(\"%ld\", &arr[i]);\n        res += ceil(arr[i]*1.0/( m));\n    }\n    res = ceil(res*1.0/2);\n    printf(\"%ld\", res);\n    return 0;\n}"}
{"similarity_score": 0.9977728285077951, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "4fac6ac88db3d8db924a37772234ef4f", "bug_code_uid": "4f519dcada6c0d8c3ed4737fc13f0dfe", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "3f4726da60e2e35bd0a590ca47745f44", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n;\n\tchar s[1000];\n\tint sum1,sum2,i;\n\twhile(~scanf(\"%d\", &n))\n\t{\n\t\tsum1=0;\n\t\tsum2=0;\n\t\tfor(i=0;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%c\", &s[i]);\n\t\t\tif(s[i]=='A')\n\t\t\t{\n\t\t\t\tsum1++;\n\t\t\t}\n\t\t\tif(s[i]=='D')\n\t\t\t{\n\t\t\t\tsum2++;\n\t\t\t}\n\t\t}\n\t\tif(sum1>sum2)\n\t\t{\n\t\t\tprintf(\"Anton\\n\");\n\t\t\n\t\t}\n\t\telse if(sum1<sum2)\n\t\t{\n\t\t\tprintf(\"Danik\\n\");\n\t\t\n\t\t}\n\t\telse if(sum1=sum2)\n\t\t{\n\t\t\tprintf(\"Friendship\\n\");\n\t\t\t\n\t\t}\n\t}\n\treturn 0;\n } ", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n;\n\tchar s[100001];\n\tint sum1,sum2,i;\n\twhile(~scanf(\"%d\", &n))\n\t{\n\t\tsum1=0;\n\t\tsum2=0;\n\t\tfor(i=0;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%c\", &s[i]);\n\t\t\tif(s[i]=='A')\n\t\t\t{\n\t\t\t\tsum1++;\n\t\t\t}\n\t\t\tif(s[i]=='D')\n\t\t\t{\n\t\t\t\tsum2++;\n\t\t\t}\n\t\t}\n\t\tif(sum1>sum2)\n\t\t{\n\t\t\tprintf(\"Anton\\n\");\n\t\t\n\t\t}\n\t\telse if(sum1<sum2)\n\t\t{\n\t\t\tprintf(\"Danik\\n\");\n\t\t\n\t\t}\n\t\telse if(sum1=sum2)\n\t\t{\n\t\t\tprintf(\"Friendship\\n\");\n\t\t\t\n\t\t}\n\t}\n\treturn 0;\n } "}
{"similarity_score": 0.9925705794947994, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a0377c9d531685fddde143f7afbadff9", "bug_code_uid": "00ba51f5663ddf22aa1ad7128f648b75", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "3b5279a9626dfc028b32c442ef487211", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong int n,m,p;\n\tscanf(\"%ld\",&n);\n\tlong int a[n],i,j,count=0,max=0,min=101;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%ld\",&a[i]);\n\t\tif(a[i]>=max)\n\t\t{\n\t\t  max=a[i];m=i;}\n\t\tif(a[i]<=min)\n\t   {\n\t\t  \tmin=a[i];p=i;}\n\t}\n\t   if(m<p)\n\t   count=m-0+n-1-p;\n\t   else\n\t   count=m-0+n-1-p-1;\n\t\tprintf(\"%ld\\n\",count);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong int n,m,p;\n\tscanf(\"%ld\",&n);\n\tlong int a[n],i,j,count=0,max=0,min=1000;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%ld\",&a[i]);\n\t\tif(a[i]>max)\n\t\t{\n\t\t  max=a[i];m=i;}\n\t\tif(a[i]<=min)\n\t   {\n\t\t  \tmin=a[i];p=i;}\n\t}\n   if(m<p)\n\t   count=m-0+n-1-p;\n\t   else\n\t   count=m-0+n-1-p-1;\n\t\tprintf(\"%ld\\n\",count);\n\treturn 0;\n}"}
{"similarity_score": 0.8461538461538461, "equal_cnt": 14, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 8, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "da642ff5abc163c017a8d2abf8ddc9a0", "bug_code_uid": "a0834a170aafc1a29715736e3e5df902", "src_uid": "b4bb11ea4650ead54026453ea9a76f39", "apr_id": "fa26ecfa7928ebfe96d14cfe45df4324", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main(){\r\n    int t;\r\n    cin>>t;\r\n    while(t--){\r\n        int n,k;\r\n        cin>>n>>k;\r\n        int max= (n-1)/2;\r\n        if(k>max){\r\n            cout<<-1<<\"\\n\";\r\n        }\r\n        else{\r\n        int a[n];\r\n        for(int i=0;i<n;i++){\r\n            a[i]=i+1;\r\n        }\r\n        int temp,c;\r\n        for(int i=0;i<k;i++){\r\n            c=2*i +1;\r\n            temp=a[c];\r\n            a[c]=a[c+1];\r\n            a[c+1]=temp;\r\n        }\r\n        for(int i=0;i<n;i++)\r\n        cout<<a[i]<<\" \";\r\n        cout<<\"\\n\";\r\n        }\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main(){\r\n    int t;\r\n    // cin>>t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n,k;\r\n        //cin>>n>>k;\r\n        scanf(\"%d%d\",&n,&k);\r\n        int max= (n-1)/2;\r\n        if(k>max){\r\n            //cout<<-1<<\"\\n\";\r\n        \r\n            printf(\"-1 \\n\");\r\n        }\r\n        else{\r\n        int a[n];\r\n        for(int i=0;i<n;i++){\r\n            a[i]=i+1;\r\n        }\r\n        int temp,c;\r\n        for(int i=0;i<k;i++){\r\n            c=2*i +1;\r\n            temp=a[c];\r\n            a[c]=a[c+1];\r\n            a[c+1]=temp;\r\n        }\r\n        for(int i=0;i<n;i++)\r\n        printf(\"%d \",a[i]);\r\n        printf(\"\\n\");\r\n        // cout<<a[i]<<\" \";\r\n        // cout<<\"\\n\";\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.9991289198606271, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "4db08bc3dbd672ccf0ae235ec5afa3d5", "bug_code_uid": "7e1a727608a35ee86fa9ea1f4f83eb56", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "db91c60acfe709be7342746a4c6c1f71", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nvoid merge (int array[10003][2],int a,int mid,int b){\n\tint auxiliar[10003][2];\n\tint i=a,j=mid+1,k=0;\n \n\twhile(i<=mid&&j<=b)\n\t{\n\t\tif(array[i][0]<array[j][0])\n\t\t{\n\t\t\tauxiliar[k][0]=array[i][0];\n\t\t\tauxiliar[k][1]=array[i][1];\n\t\t\ti++,k++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tauxiliar[k][0]=array[j][0];\n\t\t\tauxiliar[k][1]=array[j][1];\n\t\t\tj++,k++;\n\t\t}\n\t}\n \n\twhile(i<=mid)\n\t{\n\t\tauxiliar[k][0]=array[i][0];\n\t\tauxiliar[k][1]=array[i][1];\n\t\ti++,k++;\n\t}\n\twhile(j<=b)\n\t{\t\n\t\tauxiliar[k][0]=array[j][0];\n\t\tauxiliar[k][1]=array[j][0];\n\t\tj++,k++;\n\t}\n \n\tfor(k=0;k<b-a+1;k++)\n\t{\n\t\tarray[a+k][0]=auxiliar[k][0];\n\t\tarray[a+k][1]=auxiliar[k][1];\n\t}\n \n}\n \nvoid mergesort(int array[10003][2],int a,int b){\n\tif(a<b)\n\t{\n\t\tint mid=(a+b)/2;\n\t\tmergesort(array,a,mid);\n\t\tmergesort(array,mid+1,b);\n\t\tmerge(array,a,mid,b);\n\t}\n}\n \nint main(void) {\n\tint s,n;\n\tint array[10003][2];\n \n\tscanf(\"%d %d\",&s,&n);\n \n\tint i;\n \n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&array[i][0],&array[i][1]);\n\t}\n \n\tmergesort(array,0,n-1);\n \n\tint k=0;\n \n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(array[i][0]<s) \n\t\t{\n\t\t\ts=s+array[i][1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\t\n\t\t}\n\t}\n \n\tprintf(\"YES\");\n \n\treturn 0;\n}", "fixed": "#include <stdio.h>\n \nvoid merge (int array[10003][2],int a,int mid,int b){\n\tint auxiliar[10003][2];\n\tint i=a,j=mid+1,k=0;\n \n\twhile(i<=mid&&j<=b)\n\t{\n\t\tif(array[i][0]<array[j][0])\n\t\t{\n\t\t\tauxiliar[k][0]=array[i][0];\n\t\t\tauxiliar[k][1]=array[i][1];\n\t\t\ti++,k++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tauxiliar[k][0]=array[j][0];\n\t\t\tauxiliar[k][1]=array[j][1];\n\t\t\tj++,k++;\n\t\t}\n\t}\n \n\twhile(i<=mid)\n\t{\n\t\tauxiliar[k][0]=array[i][0];\n\t\tauxiliar[k][1]=array[i][1];\n\t\ti++,k++;\n\t}\n\twhile(j<=b)\n\t{\t\n\t\tauxiliar[k][0]=array[j][0];\n\t\tauxiliar[k][1]=array[j][1];\n\t\tj++,k++;\n\t}\n \n\tfor(k=0;k<b-a+1;k++)\n\t{\n\t\tarray[a+k][0]=auxiliar[k][0];\n\t\tarray[a+k][1]=auxiliar[k][1];\n\t}\n \n}\n \nvoid mergesort(int array[10003][2],int a,int b){\n\tif(a<b)\n\t{\n\t\tint mid=(a+b)/2;\n\t\tmergesort(array,a,mid);\n\t\tmergesort(array,mid+1,b);\n\t\tmerge(array,a,mid,b);\n\t}\n}\n \nint main(void) {\n\tint s,n;\n\tint array[10003][2];\n \n\tscanf(\"%d %d\",&s,&n);\n \n\tint i;\n \n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&array[i][0],&array[i][1]);\n\t}\n \n\tmergesort(array,0,n-1);\n \n\tint k=0;\n \n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(array[i][0]<s) \n\t\t{\n\t\t\ts=s+array[i][1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\t\n\t\t}\n\t}\n \n\tprintf(\"YES\");\n \n\treturn 0;\n}"}
{"similarity_score": 0.9983108108108109, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2d311094fb8c240138e769e436b12b7c", "bug_code_uid": "df3605412c89efcc46a9919c60b85766", "src_uid": "565056bfe716ee89230270bdc14c9051", "apr_id": "7889f34a0bbd593ceb103609184f56b4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n\t\r\n\tint s=0,len=0;\r\n\tchar str1[3],str2[3],ans[105];\r\n\tscanf(\"%d\",&s);\r\n\tfor(int i=0;i<s;i++){\r\n\t\tscanf(\"%d\",&len);\r\n\t\tscanf(\"%s\",&str1);\r\n\t\tans[len]='\\0';\r\n\t\tans[0]=str1[0];\r\n\t\tint flag=0;\r\n\t\tint tag=1;\r\n\t\tfor(int j=0;j<len-3;j++){\r\n\t\t\tscanf(\"%s\",&str2);\r\n\t\t\tans[tag++]=str1[1]; \r\n\t\t\tif(str1[1]!=str2[0]){\r\n\t\t\t\tans[tag++]=str2[0];\r\n\t\t\t\tflag=1;\r\n\t\t\t}\r\n\t\t\tmemcpy(str1,str2,sizeof(str1));\r\n\t\t}\r\n\t\tif(!flag){\r\n\t\t\tans[len-2]=str1[1];\r\n\t\t\tans[len-1]='a';\r\n\t\t}else{\r\n\t\t\tans[len-1]=str1[1];\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%s\",ans);\r\n\t}\r\n\t\r\n\t\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n\t\r\n\tint s=0,len=0;\r\n\tchar str1[3],str2[3],ans[105];\r\n\tscanf(\"%d\",&s);\r\n\tfor(int i=0;i<s;i++){\r\n\t\tscanf(\"%d\",&len);\r\n\t\tscanf(\"%s\",&str1);\r\n\t\tans[len]='\\0';\r\n\t\tans[0]=str1[0];\r\n\t\tint flag=0;\r\n\t\tint tag=1;\r\n\t\tfor(int j=0;j<len-3;j++){\r\n\t\t\tscanf(\"%s\",&str2);\r\n\t\t\tans[tag++]=str1[1]; \r\n\t\t\tif(str1[1]!=str2[0]){\r\n\t\t\t\tans[tag++]=str2[0];\r\n\t\t\t\tflag=1;\r\n\t\t\t}\r\n\t\t\tmemcpy(str1,str2,sizeof(str1));\r\n\t\t}\r\n\t\tif(!flag){\r\n\t\t\tans[len-2]=str1[1];\r\n\t\t\tans[len-1]='a';\r\n\t\t}else{\r\n\t\t\tans[len-1]=str1[1];\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%s\\n\",ans);\r\n\t}\r\n\t\r\n\t\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9761194029850746, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "6a18ab048b57f1bc9494a0b34931abc9", "bug_code_uid": "a5b2a2ee18bda5b007d58093857e5846", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "38fd73471e359ca9500ab2234b6fa13d", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int i,n,A=0,D=0;\n    char a;\n    scanf(\"%d\",&n);\n    for (i=0;i<n;i++){\n        scanf(\"%c\",&a);\n        if(a=='A')\n            A++;\n        else D++;\n    }\n    if (A==D)\n        printf(\"Friendship\");\n    else if (A>D)\n        printf(\"Anton\");\n    else\n        printf(\"Danik\");\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int i,n,A=0,D=0;\n    char a;\n    scanf(\"%d \\n\",&n);\n    for (i=0;i<n;i++){\n        scanf(\"%c\",&a);\n        if(a=='A')\n            A++;\n        else\n            D++;\n    }\n    if (A==D)\n        printf(\"Friendship\");\n    else if (A>D)\n        printf(\"Anton\");\n    else\n        printf(\"Danik\");\n    return 0;\n}\n"}
{"similarity_score": 0.26004728132387706, "equal_cnt": 16, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "5a7878bc0c04d1a016eaac66d991783a", "bug_code_uid": "f8c4ce94c7f8aaa905f8441d2804a142", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "14dd41864f730495eb30e1faa72624fd", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int a, b, f=1, g=0;\n    scanf(\"%d\",&b);\n    int d[b];\n    int e[50];\n    for(a=1;a<=b;a++){\n            int c;\n        scanf(\"%d\",&c);\n    d[a-1]=c;\n    }\n    for(a=1;a<b;a++){\n        if(d[a]>=d[a-1]){\n            f++;\n        }\n        else{\n            e[g]=f;\n            f=1;\n            g++;\n        }\n    }\ne[g]=f;\n    int h=0;\n    for(a=0;a<=g;a++){\n        if(e[a]>h){\n            h=e[a];\n        }\n\n    }\n     printf(\"%d\",h);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\", &n);\n    int ar[n],temp = 0,Max = 0;\n\n    for(int in=0; in<n; in++)\n        scanf(\"%d\",&ar[in]);\n\n    int i=0, j=1;\n    while(j<n)\n    {\n        if(ar[j] >= ar[i]) temp++;\n        else temp = 0;\n        if(Max < temp) Max = temp;\n        j++;\n        i++;\n    }\n    printf(\"%d\",Max+1);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9898648648648649, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b14348e28be556e9aa8a1345129bd68d", "bug_code_uid": "a785d3b19852f5b9999663397646526a", "src_uid": "fce6d690c2790951f7e04c622c3c2d44", "apr_id": "f00b8b7539edb0dc5a990fa987449ae4", "difficulty": 800, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n\tint n,x,y,i;\r\n\tscanf(\"%d\",&n);\r\n\tfor(i=0;i<n;i++){\r\n\t\tscanf(\"%d %d\",&x,&y);\r\n\t\tif(x==0&&y==0){\r\n\t\t\tprintf(\"0\");\r\n\t\t}\r\n\t\telse if(sqrt(x*x+y*y)-(int)sqrt(x*x+y*y)==0){\r\n\t\t\tprintf(\"1\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"2\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n} ", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n\tint n,x,y,i;\r\n\tscanf(\"%d\",&n);\r\n\tfor(i=0;i<n;i++){\r\n\t\tscanf(\"%d %d\",&x,&y);\r\n\t\tif(x==0&&y==0){\r\n\t\t\tprintf(\"0\\n\");\r\n\t\t}\r\n\t\telse if(sqrt(x*x+y*y)-(int)sqrt(x*x+y*y)==0){\r\n\t\t\tprintf(\"1\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"2\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n} "}
{"similarity_score": 0.9987179487179487, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0d9833d7dda124fc5ff51699b9ee338c", "bug_code_uid": "bc7742bf63ec52c607bbe00da2e1673c", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "8cb877de47777454798394f24c8404c8", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n\n    int i = 0, ara[n];\n\n    while(n--)\n    {\n        int temp;\n        scanf(\"%d\", &temp);\n\n        if(temp < 0)\n        {\n            ara[i] = temp;\n            i++;\n        }\n    }\n\n    int sum = 0;\n    int size = i;\n\n    if(size <= m)\n    {\n        for(i = 0; i < size; i++)\n            sum += ara[i];\n        printf(\"%d\\n\", abs(sum));\n        return 0;\n    }\n\n    for(i = 0; i < m; i++)\n    {\n        int min_index = i, j;\n\n        for(j = 1; j < size; j++)\n        {\n            if(ara[j] < ara[min_index])\n                min_index = j;\n        }\n\n        sum += ara[min_index];\n        ara[min_index] = 0;\n    }\n\n    printf(\"%d\\n\", abs(sum));\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n\n    int i = 0, ara[n];\n\n    while(n--)\n    {\n        int temp;\n        scanf(\"%d\", &temp);\n\n        if(temp < 0)\n        {\n            ara[i] = temp;\n            i++;\n        }\n    }\n\n    int sum = 0;\n    int size = i;\n\n    if(size <= m)\n    {\n        for(i = 0; i < size; i++)\n            sum += ara[i];\n        printf(\"%d\\n\", abs(sum));\n        return 0;\n    }\n\n    for(i = 0; i < m; i++)\n    {\n        int min_index = 0, j;\n\n        for(j = 1; j < size; j++)\n        {\n            if(ara[j] < ara[min_index])\n                min_index = j;\n        }\n\n        sum += ara[min_index];\n        ara[min_index] = 0;\n    }\n\n    printf(\"%d\\n\", abs(sum));\n\n    return 0;\n}\n"}
{"similarity_score": 0.8933217692974849, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "aeec686d1f016f89d454b992d14f1a2e", "bug_code_uid": "904fbf934c51205a6d3a15dfbb5c3ab9", "src_uid": "72d70a1c2e579bf81954ff932a9bc16e", "apr_id": "2622933d4bf2cfe6777cf37f37aa7752", "difficulty": 2500, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint P[200000], U[200000];\nint X[200000];\nint N;\nint A;\n\nint main()\n{\n\t//FILE *input;\n\t//input = fopen(\"apples.in\", \"r\");\n\t//fscanf(input, \"%d\\n\", &N);\n\tscanf(\"%d\\n\", &N);\n\n\tint i, j, a, r=0;\n\t\n\tfor(i=2; i<=N; i++)\n\t{\n\t\tif(i*i > N && r == 0)\n\t\t\tr = i;\n\t\tif(P[i] != 0)\n\t\t\tcontinue;\n\t\tX[i] = 1;\n\t\tfor(j=i+i; j<=N; j+=i)\n\t\t{\n\t\t\tif(P[j] == 0)\n\t\t\t{\n\t\t\t\tX[i]++;\n\t\t\t\tP[j] = i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(i=2; i+i<=N; i++)\n\t{\n\t\tif(i >= r && P[i] == 0)\n\t\t{\n\t\t\tU[i] = 2*i;\n\t\t\tU[2*i] = i;\n\t\t\tA++;\n\t\t\tX[i]--;\n\t\t}\n\t}\n\t\n\tfor(i=2; i*i<=N; i++)\n\t{\n\t\tif(X[i]%2 == 0)\n\t\t\tcontinue;\n\t\tfor(j=i+1; j*j<=N; j++)\n\t\t{\n\t\t\tif(X[j]%2 != 0)\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif(X[j]%2 != 0)\n\t\t{\n\t\t\tU[i*j] = j;\n\t\t\tU[j] = i*j;\n\t\t\tX[i]--;\n\t\t\tX[j]--;\n\t\t\tA++;\n\t\t\ti = j+1;\n\t\t}\n\t}\n\t\n\tfor(i=2; i+i<=N; i++)\n\t{\n\t\tif(P[i] != 0)\n\t\t\tcontinue;\n\t\tfor(j=i, a=-1; j<=N; j += i)\n\t\t{\n\t\t\tif((i == P[j] || j == i) && U[j] == 0)\n\t\t\t{\n\t\t\t\tX[i]--;\n\t\t\t\tif(a != -1)\n\t\t\t\t{\n\t\t\t\t\tU[a] = j;\n\t\t\t\t\tU[j] = a;\n\t\t\t\t\ta = -1;\n\t\t\t\t\tA++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\ta = j;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprintf(\"%d\\n\", A);\n\tfor(i=2; i<=N; i++)\n\t{\n\t\tif(U[i] < i && U[i] != 0)\n\t\t{\n\t\t\tprintf(\"%d %d\\n\", i, U[i]);\n\t\t}\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint P[200000], U[200000];\nint X[200000];\nint N;\nint A;\n\nint main()\n{\n\t//FILE *input;\n\t//input = fopen(\"apples.in\", \"r\");\n\t//fscanf(input, \"%d\\n\", &N);\n\tscanf(\"%d\\n\", &N);\n\n\tint i, j, a, r=0;\n\t\n\tfor(i=2; i<=N; i++)\n\t{\n\t\tif(i*i > N && r == 0)\n\t\t\tr = i;\n\t\tif(P[i] != 0)\n\t\t\tcontinue;\n\t\tX[i] = 1;\n\t\tfor(j=i+i; j<=N; j+=i)\n\t\t{\n\t\t\tif(P[j] == 0)\n\t\t\t{\n\t\t\t\tX[i]++;\n\t\t\t\tP[j] = i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(i=2; i+i<=N; i++)\n\t{\n\t\tif(i >= r && P[i] == 0)\n\t\t{\n\t\t\tU[i] = 2*i;\n\t\t\tU[2*i] = i;\n\t\t\tA++;\n\t\t\tX[i]--;\n\t\t\tX[2]--;\n\t\t}\n\t}\n\t\n\tfor(i=2; i*i<=N; i++)\n\t{\n\t\tif(X[i]%2 == 0)\n\t\t\tcontinue;\n\t\tfor(j=i+1; j*j<=N; j++)\n\t\t{\n\t\t\tif(X[j]%2 != 0)\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif(X[j]%2 != 0)\n\t\t{\n\t\t\tU[i*j] = j;\n\t\t\tU[j] = i*j;\n\t\t\tA++;\n\t\t\ti = j+1;\n\t\t}\n\t}\n\t\n\tfor(i=2; i+i<=N; i++)\n\t{\n\t\tif(P[i] != 0)\n\t\t\tcontinue;\n\t\tfor(j=i, a=-1; j<=N; j += i)\n\t\t{\n\t\t\tif((i == P[j] || j == i) && U[j] == 0)\n\t\t\t{\n\t\t\t\tif(a != -1)\n\t\t\t\t{\n\t\t\t\t\tU[a] = j;\n\t\t\t\t\tU[j] = a;\n\t\t\t\t\ta = -1;\n\t\t\t\t\tA++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\ta = j;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(a != -1)\n\t\t{\n\t\t\t//printf(\"%d %d\\n\", i, a);\n\t\t}\n\t}\n\t\n\tprintf(\"%d\\n\", A);\n\tfor(i=2; i<=N; i++)\n\t{\n\t\tif(U[i] < i && U[i] != 0)\n\t\t{\n\t\t\tprintf(\"%d %d\\n\", i, U[i]);\n\t\t}\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9803921568627451, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "af293ced0acb52c889e301108db39457", "bug_code_uid": "77ef14e7fc586c88edd6a7afaa8d12b0", "src_uid": "e3a1f53f78fcb3a551c3ae1cbeedaf15", "apr_id": "d6eeaa5bbcbd2829015f1aa9c5d29d15", "difficulty": 1100, "tags": ["greedy", "math", "shortest paths"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,l,r,x,a,b;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d%d%d%d%d\",&l,&r,&x,&a,&b);\r\n        if(a==b)printf(\"0\\n\");\r\n        if(b>a)\r\n        {\r\n            if(b-a>=x)printf(\"1\\n\");\r\n            else if(a-l>=x||r-b>=x)printf(\"2\\n\");\r\n            else if(b-l>=x&&r-a>=x)printf(\"3\\n\");\r\n            else printf(\"-1\\n\");\r\n        }\r\n        else\r\n        {\r\n            if(a-b>=x)printf(\"1\\n\");\r\n            else if(b-l>=x||r-a>=x)printf(\"2\\n\");\r\n            else if(a-l>=x&&r-b>=x)printf(\"3\\n\");\r\n            else printf(\"-1\\n\");\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t,l,r,x,a,b;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d%d%d%d%d\",&l,&r,&x,&a,&b);\r\n        if(a==b)printf(\"0\\n\");\r\n        else if(b>a)\r\n        {\r\n            if(b-a>=x)printf(\"1\\n\");\r\n            else if(a-l>=x||r-b>=x)printf(\"2\\n\");\r\n            else if(b-l>=x&&r-a>=x)printf(\"3\\n\");\r\n            else printf(\"-1\\n\");\r\n        }\r\n        else\r\n        {\r\n            if(a-b>=x)printf(\"1\\n\");\r\n            else if(b-l>=x||r-a>=x)printf(\"2\\n\");\r\n            else if(a-l>=x&&r-b>=x)printf(\"3\\n\");\r\n            else printf(\"-1\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.4575757575757576, "equal_cnt": 19, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "10c4e449a471baf1f21464eadec05ccc", "bug_code_uid": "f7b3877cdb047ae05193ec87c2fa8bcc", "src_uid": "c5389b39312ce95936eebdd83f510e40", "apr_id": "5f319c95cfe844eeb785f0406a6242c1", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t,i;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        int p,m=0,n=0;\r\n        scanf(\"%d\",&p);\r\n        char s[p];\r\n        scanf(\"%s\",s);\r\n\r\n        for(int j=0;j<p;j++)\r\n        {\r\n            if(s[j]=='Q')\r\n                m++;\r\n            else\r\n                n++;\r\n        }\r\n        ifm==n||m<n)\r\n            printf(\"YES\\n\");\r\n        else if(s[p-1]=='Q')\r\n            printf(\"NO\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    long long t;\r\n    scanf(\"%lld\",&t);\r\n    while(t--)\r\n    {\r\n        long long n;\r\n        scanf(\"%lld\",&n);\r\n        char s[n];\r\n        scanf(\"%s\",s);\r\n        int x,y;\r\n        y=x=0;\r\n        if(s[strlen(s)-1]!='A'){\r\n            printf(\"NO\\n\");\r\n        }\r\n        else\r\n        {\r\n            int flag=0;\r\n            for(int i=strlen(s)-1;i>=0;i--)\r\n            {\r\n                if(s[i]=='Q')\r\n                    x++;\r\n                else\r\n                    y++;\r\n                if(x>y){\r\n                    printf(\"NO\\n\");\r\n                    flag=1;\r\n                    break;\r\n                }\r\n            }\r\n            if(flag==0)\r\n                printf(\"YES\\n\");\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.7811568276684556, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "ee55640b5d6605021f4f44ee922aece2", "bug_code_uid": "f828a97903add62b5e773c16173d0c31", "src_uid": "9a365e26f58ecb22a1e382fad3062387", "apr_id": "c20311f36a43928ce198fce6939b369b", "difficulty": 1300, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    unsigned long long int n,k=1,a=0,p=0;\n    int i=0,j=0;\n    char s1[1001],s2[1001];\n    scanf(\"%I64u\",&n);\n    scanf(\"%s%s\",s1,s2);\n    while(k<=n)\n    {\n        if(s1[i]=='P' && s2[j]=='S')\n        a++;\n        if(s1[i]=='P' && s2[j]=='R')\n        p++;\n        if(s1[i]=='S' && s2[j]=='P')\n        p++;\n        if(s1[i]=='S' && s2[j]=='R')\n        a++;\n        if(s1[i]=='R' && s2[j]=='P')\n        a++;\n        if(s1[i]=='R' && s2[j]=='S')\n        p++;\n        i++;\n        j++;\n        if(s1[i]=='\\0')\n        i=0;\n        if(s2[j]=='\\0')\n        j=0;\n        k++;\n    }\n    printf(\"%I64u %I64u\\n\",a,p);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint gcd(int a,int b)\n{\n    if(b==0)\n    return a;\n    else\n    return gcd(b,a%b);\n}\nint main()\n{\n    unsigned long long int n,k=1,a=0,p=0,l1,l2,l;\n    int i=0,j=0;\n    char s1[1001],s2[1001];\n    scanf(\"%I64u\",&n);\n    scanf(\"%s%s\",s1,s2);\n    l1=strlen(s1);\n    l2=strlen(s2);\n    l=(l1*l2)/(gcd(l1,l2));\n    l1=0;l2=0;\n    while(k<=l)\n    {\n        if(s1[i]=='P' && s2[j]=='S')\n        a++;\n        if(s1[i]=='P' && s2[j]=='R')\n        p++;\n        if(s1[i]=='S' && s2[j]=='P')\n        p++;\n        if(s1[i]=='S' && s2[j]=='R')\n        a++;\n        if(s1[i]=='R' && s2[j]=='P')\n        a++;\n        if(s1[i]=='R' && s2[j]=='S')\n        p++;\n        if(k==(n%l))\n        {\n                l1=a;\n                l2=p;\n                if((n/l)==0)\n                break;\n        }\n        i++;\n        j++;\n        if(s1[i]=='\\0')\n        i=0;\n        if(s2[j]=='\\0')\n        j=0;\n        k++;\n    }\n    a=a*(n/l)+l1;\n    p=p*(n/l)+l2;\n    printf(\"%I64u %I64u\\n\",a,p);\n    return 0;\n}\n"}
{"similarity_score": 0.9990521327014218, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e30fa98004475c875b5ba86e65d9f5c0", "bug_code_uid": "936ee627af84541b85510552cc901dd0", "src_uid": "4849a1f65afe69aad12c010302465ccd", "apr_id": "f7c0dabcf2377653df80aab80508ab9f", "difficulty": 1100, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nlong a[2000005],b[2000005],c[2000005],d[2000005],i,n=200000000,m=-1,k=-1,j=2000000000,s,x;\nint main()\n{\n\n    scanf(\"%ld\",&s);\n    for(i=0;i<s;i++)\n    {\n        scanf(\"%ld %ld\",&a[i],&b[i]);\n\n        if(a[i]>m) m=a[i]; if(b[i]<n) n=b[i];\n    } scanf(\"%ld\",&x);\n       for(i=0;i<x;i++)\n    {\n        scanf(\"%ld %ld\",&c[i],&d[i]);\n\n        if(c[i]>k) k=c[i]; if(d[i]<j) j=d[i];\n    }\n    m-=j; k-=n;\n    if(m>k && m>0) printf(\"%ld\",m);\n    else if(k>0) printf(\"%ld\",k);\n    else printf(\"0\");\n\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\nlong a[2000005],b[2000005],c[2000005],d[2000005],i,n=2000000000,m=-1,k=-1,j=2000000000,s,x;\nint main()\n{\n\n    scanf(\"%ld\",&s);\n    for(i=0;i<s;i++)\n    {\n        scanf(\"%ld %ld\",&a[i],&b[i]);\n\n        if(a[i]>m) m=a[i]; if(b[i]<n) n=b[i];\n    } scanf(\"%ld\",&x);\n       for(i=0;i<x;i++)\n    {\n        scanf(\"%ld %ld\",&c[i],&d[i]);\n\n        if(c[i]>k) k=c[i]; if(d[i]<j) j=d[i];\n    }\n    m-=j; k-=n;\n    if(m>k && m>0) printf(\"%ld\",m);\n    else if(k>0) printf(\"%ld\",k);\n    else printf(\"0\");\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.9992962702322308, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1b9655f1b20ac3e88667b043b2d2c6c9", "bug_code_uid": "38cf71d07c296b86b86d13503a3bc575", "src_uid": "88d56c1e3a7ffa94354ce0c70d8e958f", "apr_id": "466a40aa7667124620975e17edb479bc", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nvoid get(char* s, int* h, int* m) {\n    *h = (s[0] - '0') * 10 + (s[1] - '0');\n    *m = (s[3] - '0') * 10 + (s[4] - '0');\n}\nvoid solve(int type, char* s) {\n    int h, m;\n    get(s, &h, &m);\n    if(type == 24) {\n        if(h > 24)\n            s[0] = '0';\n        if(m >= 60)\n            s[3] = '0';\n    }\n    if(type == 12) {\n        if(h == 0) \n            s[1] = '1';\n        if(h > 12 && h % 10 != 0)\n            s[0] = '0';\n        if(h > 12 && h % 10 == 0)\n            s[0] = '1';\n        if(m >= 60)\n            s[3] = '0';\n    }\n}\nint main(void) {\n    int type;\n    char str[10];\n    scanf(\"%d\\n\", &type);\n    fgets(str, 10, stdin);\n    solve(type, str);\n    puts(str);\n    return 0;\n}", "fixed": "#include <stdio.h>\nvoid get(char* s, int* h, int* m) {\n    *h = (s[0] - '0') * 10 + (s[1] - '0');\n    *m = (s[3] - '0') * 10 + (s[4] - '0');\n}\nvoid solve(int type, char* s) {\n    int h, m;\n    get(s, &h, &m);\n    if(type == 24) {\n        if(h >= 24)\n            s[0] = '0';\n        if(m >= 60)\n            s[3] = '0';\n    }\n    if(type == 12) {\n        if(h == 0) \n            s[1] = '1';\n        if(h > 12 && h % 10 != 0)\n            s[0] = '0';\n        if(h > 12 && h % 10 == 0)\n            s[0] = '1';\n        if(m >= 60)\n            s[3] = '0';\n    }\n}\nint main(void) {\n    int type;\n    char str[10];\n    scanf(\"%d\\n\", &type);\n    fgets(str, 10, stdin);\n    solve(type, str);\n    puts(str);\n    return 0;\n}"}
{"similarity_score": 0.9989165763813651, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "26a3bcbd6887b68eb4ddbdbe61730182", "bug_code_uid": "3114b9e3c4b2e949281d901ffb1f4e7c", "src_uid": "d638f524fe07cb8e822b5c6ec3fe8216", "apr_id": "15320472a16dab69cae23f8c25fb469e", "difficulty": 900, "tags": ["brute force", "greedy", "math", "number theory", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//\n//  main.c\n//  1535B Array Reodering\n//\n//  Created by Admin on 1.01.2022.\n//\n\n#include <stdio.h>\n\nint gcd(int a, int b)\n{\n    if(a == 0)\n        return b;\n    if(a > b)\n        return gcd(b, a);\n    return gcd(a, b - a);\n}\n\nint main(int argc, const char * argv[]) {\n    // insert code here...\n    int t;\n    scanf(\"%d\", &t);\n    for(int k = 0; k < t; k++) {\n        int n, m = 0;\n        scanf(\"%d\", &n);\n        int ar[n], ans[n];\n        for(int i = 0; i < n; i++) {\n            scanf(\"%d \", &ar[i]);\n            if(ar[i] % 2 == 0)\n                ans[m++] = ar[i];\n        }\n        for(int i = 0; i < n; i++)\n            if(ar[i] % 2)\n                ans[m++] = ar[i];\n        int cnt = 0;\n        for(int i = 0; i < n; i++)\n            for(int j = i + 1; j < n; j++)\n                if( ans[i] % 2 == 0 || gcd(ans[i], 2 * ans[j]) > 1 )\n                    cnt++;\n        printf(\"%d\\n\", cnt);\n    }\n    return 0;\n}\n", "fixed": "//\n//  main.c\n//  1535B Array Reodering\n//\n//  Created by Admin on 1.01.2022.\n//\n\n#include <stdio.h>\n\nint gcd(int a, int b)\n{\n    if(a == 0)\n        return b;\n    if(a > b)\n        return gcd(b, a);\n    return gcd(a, b % a);\n}\n\nint main(int argc, const char * argv[]) {\n    // insert code here...\n    int t;\n    scanf(\"%d\", &t);\n    for(int k = 0; k < t; k++) {\n        int n, m = 0;\n        scanf(\"%d\", &n);\n        int ar[n], ans[n];\n        for(int i = 0; i < n; i++) {\n            scanf(\"%d \", &ar[i]);\n            if(ar[i] % 2 == 0)\n                ans[m++] = ar[i];\n        }\n        for(int i = 0; i < n; i++)\n            if(ar[i] % 2)\n                ans[m++] = ar[i];\n        int cnt = 0;\n        for(int i = 0; i < n; i++)\n            for(int j = i + 1; j < n; j++)\n                if( ans[i] % 2 == 0 || gcd(ans[i], 2 * ans[j]) > 1 )\n                    cnt++;\n        printf(\"%d\\n\", cnt);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9975609756097561, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6fea6f717dac059d41cbd06fd0602ac9", "bug_code_uid": "06d3a877b58b93e1b6953d422619c84d", "src_uid": "2b757fa66ce89046fe18cdfdeafa6660", "apr_id": "c5fc59ce0cf512964979c9f4c5fc76bb", "difficulty": 1000, "tags": ["brute force", "greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nlong divide(long a,long b)\r\n{if(b==1)\r\n\treturn a;\r\nelse \r\n\t{long ans=0;\r\n\twhile(a!=0)\r\n\t{a=a/b;ans++;}\r\nreturn ans;}}\r\n\r\nvoid solve(){\r\nlong a,b,i,ans=0;\r\nscanf(\"%ld %ld\",&a,&b);\r\nans=divide(a,b);\r\nif(a==b)\r\n\tans++;\r\nfor(i=1;i<=ans;i++)\r\n\tif(ans>(divide(a,b+i)+i))\r\n\t\tans=(divide(a,b+i)+i);\r\nprintf(\"%ld\\n\",ans);\r\n}\r\nint main(){\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n\tsolve();\r\nreturn 0;}", "fixed": "#include<stdio.h>\r\n\r\nlong divide(long a,long b)\r\n{if(b==1)\r\n\treturn a+1;\r\nelse \r\n\t{long ans=0;\r\n\twhile(a!=0)\r\n\t{a=a/b;ans++;}\r\nreturn ans;}}\r\n\r\nvoid solve(){\r\nlong a,b,i,ans=0;\r\nscanf(\"%ld %ld\",&a,&b);\r\nans=divide(a,b);\r\nif(a==b)\r\n\tans++;\r\nfor(i=1;i<=ans;i++)\r\n\tif(ans>(divide(a,b+i)+i))\r\n\t\tans=(divide(a,b+i)+i);\r\nprintf(\"%ld\\n\",ans);\r\n}\r\nint main(){\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n\tsolve();\r\nreturn 0;}"}
{"similarity_score": 0.9134287661895024, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4a311484af91bc8a1c94939c96748877", "bug_code_uid": "ad2aafd5e2177883612e0d55bf173f1b", "src_uid": "a1951e7d11b504273765fc9fb2f18a5e", "apr_id": "772e6ca6ff1c92cc40307fbf536f122b", "difficulty": 1100, "tags": ["sortings", "binary search", "implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long t;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tlong long n;\n\t\tscanf(\"%lld\",&n);\n\t\tlong long arr[200005];\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tarr[i]=0;\n\t\t}\n\t\tfor(long long i=0;i<n;i++)\n\t\t{\n\t\t\tlong long p;\n\t\t\tscanf(\"%lld\",&p);\n\t\t\tarr[p]++;\n\t\t}\n\t\tlong long max=arr[0];\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tif(max<=arr[i])\n\t\t\t{\n\t\t\t\tmax=arr[i];\n\t\t\t}\n\t\t}\n\t\tlong long count=0;\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tif(arr[i]!=0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(max>count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",count);\n\t\t}\n\t\telse if(max==count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",count-1);\n\t\t}\n\t\telse if(max<count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",max);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long t;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tlong long n;\n\t\tscanf(\"%lld\",&n);\n\t\tlong long arr[200005];\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tarr[i]=0;\n\t\t}\n\t\tlong long max=0,count=0;\t\n\t\tfor(long long i=0;i<n;i++)\n\t\t{\n\t\t\tlong long p;\n\t\t\tscanf(\"%lld\",&p);\n\t\t\tarr[p]++;\n\t\t\tif(max<=arr[p])\n\t\t\t{\n\t\t\t\tmax=arr[p];\n\t\t\t}\n\t\t\tif(arr[p]==1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\n\n\t\t}\n\t\t/*long long max=arr[0];\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tif(max<=arr[i])\n\t\t\t{\n\t\t\t\tmax=arr[i];\n\t\t\t}\n\t\t}\n\t\tlong long count=0;\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tif(arr[i]!=0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}*/\n\t\tif(max>count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",count);\n\t\t}\n\t\telse if(max==count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",count-1);\n\t\t}\n\t\telse if(max<count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",max);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9603399433427762, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "ce2992ef7917b9d63f3d3f5cc2f9501d", "bug_code_uid": "7bfbbe6683093f387f532e4a9f365d40", "src_uid": "b1e09df7c47dbd04992e64826337c28a", "apr_id": "938942e04abb3e423c283508be577598", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    freopen(\"in\",\"r\",stdin);\n    char x[1005],y[1005];\n    int a[26],b[26];\n    int i,m,n,count;\n    memset(a,0,sizeof(a));\n    memset(b,0,sizeof(b));\n    scanf(\"%s\",&x);\n    scanf(\"%s\",&y);\n    m=strlen(x);\n    n=strlen(y);\n    for(i=0;i<m;i++)\n    {\n        a[x[i]-97]++;\n    }\n\n    for(i=0;i<n;i++)\n    {\n        b[y[i]-97]++;\n    }\n    count=0;\n\n    for(i=0;i<26;i++)\n    {\n        if (b[i]!=0&&a[i]==0)\n        {\n            count=0;\n            break;\n        }\n        else\n        count+= a[i]>b[i]?b[i]:a[i];\n    }\n    if(count)\n    printf(\"%d\",count);\n    else\n    printf(\"-1\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n   // freopen(\"in\",\"r\",stdin);\n    char x[1005],y[1005];\n    int a[26],b[26];\n    int i,m,n,count;\n    memset(a,0,sizeof(a));\n    memset(b,0,sizeof(b));\n    memset(x,0,sizeof(x));\n    memset(y,0,sizeof(y));\n    scanf(\"%s\",&x);\n    scanf(\"%s\",&y);\n    m=strlen(x);\n    n=strlen(y);\n    for(i=0;i<m;i++)\n    {\n        a[x[i]-97]++;\n    }\n\n    for(i=0;i<n;i++)\n    {\n        b[y[i]-97]++;\n    }\n    count=0;\n\n    for(i=0;i<26;i++)\n    {\n        if (b[i]!=0&&a[i]==0)\n        {\n            count=0;\n            break;\n        }\n        else\n        count+= a[i]>b[i]?b[i]:a[i];\n    }\n    if(count)\n    printf(\"%d\",count);\n    else\n    printf(\"-1\");\n    return 0;\n}\n"}
{"similarity_score": 0.5498839907192575, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "3bfc2218150ad7426da6fadda01350b5", "bug_code_uid": "06d6671a5383986be70fc1a1971b92de", "src_uid": "14ad30e33bf8cad492e665b0a486008e", "apr_id": "78bebd42a32e8fe1c70a72b44469bc3a", "difficulty": 1500, "tags": ["data structures", "constructive algorithms", "greedy", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void){\n    int N;\n    scanf(\"%i\", &N);\n    int deg[N];\n    int sum[N];\n    int now[N];\n    int fronta[N];\n    int i;\n    int j=0;\n    int pocet;\n    int suma=0;\n    for(i=0;i<N;i++){\n        scanf(\"%i %i\", &deg[i], &sum[i]);\n        now[i]=0;\n        if(deg[i]==1) {fronta[j]=i; j++;}\n        suma=suma+deg[i];\n    }\n    pocet=suma/2;\n    int hrany[pocet][2];\n    for(i=0;i<pocet;i++){\n        hrany[i][0]=fronta[i];\n        hrany[i][1]=sum[fronta[i]];\n        deg[fronta[i]]--;\n        deg[sum[fronta[i]]]--;\n        sum[sum[fronta[i]]]=sum[sum[fronta[i]]]^fronta[i];\n        if(deg[sum[fronta[i]]]==1) {fronta[j]=sum[fronta[i]]; j++;}\n        sum[fronta[i]]=0;\n    }\n    printf(\"%i\\n\", pocet);\n    for(i=0;i<pocet;i++){\n        printf(\"%i %i\\n\", hrany[i][0], hrany[i][1]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(void){\n    int N;\n    scanf(\"%i\", &N);\n    int deg[N];\n    int sum[N];\n    int now[N];\n    int fronta[2*N];\n    int i;\n    int j=0;\n    int pocet;\n    int suma=0;\n    for(i=0;i<N;i++){\n        scanf(\"%i %i\", &deg[i], &sum[i]);\n        now[i]=0;\n        if(deg[i]==1) {fronta[j]=i; j++;}\n        suma=suma+deg[i];\n    }\n    pocet=suma/2;\n    int zrovna=0;\n    int hrany[pocet][2];\n    for(i=0;i<j;i++){\n        if(deg[fronta[i]]==1){\n        hrany[zrovna][0]=fronta[i];\n        hrany[zrovna][1]=sum[fronta[i]];\n        deg[fronta[i]]--;\n        deg[sum[fronta[i]]]--;\n        sum[sum[fronta[i]]]=sum[sum[fronta[i]]]^fronta[i];\n        zrovna++;\n        if(deg[sum[fronta[i]]]==1) {fronta[j]=sum[fronta[i]]; j++;}\n        sum[fronta[i]]=0;}\n    }\n    printf(\"%i\\n\", pocet);\n    for(i=0;i<pocet;i++){\n        printf(\"%i %i\\n\", hrany[i][0], hrany[i][1]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9737039819684448, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "fbf1daa3d2331abfb12849b06094bfb1", "bug_code_uid": "17939c5726bff0cfef792a6841eca26b", "src_uid": "4266948a2e793b4b461156af226e98fd", "apr_id": "d5624c2f218c165be344847e07068905", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n#include<time.h>\n\n#define SORT(a) int t=x,o;while(t--){for(i=0;i<x-1;i++)if(a[i]>a[i+1]){o=a[i];a[i]=a[i+1];a[i+1]=o;}}\n#define R return 0;\n#define and &&\n#define or ||\n#define buyuk(a,b) (a<b)? b:a\n#define kucuk(a,b) (a<b)? a:b\nmain(){\n\tint x,i,j,arr[1000010],h[1000100]={0},top=0,snc=0,s=0,u;\n\tscanf(\"%d\",&x);\n\tfor(i=0;i<x;i++){\n\t\tscanf(\"%d\",&arr[i]);\n\t\th[arr[i]]++;\n\t\ttop+=arr[i];\n\t}\n\tfor(i=0;i<=1000000;i++)\n\t\twhile(h[i]){\n\t\t\tarr[s++]=i;\n\t\t\th[i]--;\n\t\t}\n\tu=arr[x-1];\n\ts=0;\n\twhile(arr[x-1]){\n\t\tsnc+=top;\n\t\ttop-=arr[s];\n\t\tsnc+=arr[s];\n\t\tarr[s++]=0;\n\t}\n\tprintf(\"%d\",snc-u);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n#include<time.h>\n\n#define SORT(a) int t=x,o;while(t--){for(i=0;i<x-1;i++)if(a[i]>a[i+1]){o=a[i];a[i]=a[i+1];a[i+1]=o;}}\n#define R return 0;\n#define and &&\n#define or ||\n#define ll long long int \n#define buyuk(a,b) (a<b)? b:a\n#define kucuk(a,b) (a<b)? a:b\nmain(){\n\tint x,i,j,arr[1000010],h[1000100]={0};\n\tll top=0,snc=0,s=0,u;\n\tscanf(\"%d\",&x);\n\tfor(i=0;i<x;i++){\n\t\tscanf(\"%d\",&arr[i]);\n\t\th[arr[i]]++;\n\t\ttop+=arr[i];\n\t}\n\tfor(i=0;i<=1000000;i++)\n\t\twhile(h[i]){\n\t\t\tarr[s++]=i;\n\t\t\th[i]--;\n\t\t}\n\tu=arr[x-1];\n\ts=0;\n\twhile(arr[x-1]){\n\t\tsnc+=top;\n\t\ttop-=arr[s];\n\t\tsnc+=arr[s];\n\t\tarr[s++]=0;\n\t}\n\tprintf(\"%lld\",snc-u);\n}\n"}
{"similarity_score": 0.9881925522252498, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ba4cdb717034d3415e02f68e5dc1de75", "bug_code_uid": "f8fde4574d0d9ca45d307028e62618dc", "src_uid": "02a94c136d3fb198025242e91264823b", "apr_id": "8157d1bb4f0363e847d1fcc35a9d8cc8", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint c,i,n,j,k,flag,lung,r;\nchar z[101];\nint main()\n{   \n    scanf(\"%d\",&k);\n    for(r=1;r<=k;r++){\n        scanf(\"%s\",&z);\n        n=strlen(z);\n        for (i=0;i<n-1;i++)\n        for(j=0;j<n-1;j++)\n        if(z[j]>z[j+1]) {\n            c=z[j]; z[j]=z[j+1]; z[j+1]=c;\n        }    \n        lung=z[n-1]-z[0];\n        flag=0;\n        for(i=0;i<n-1;i++) \n        if(z[i]==z[i+1]) {flag=1; break;}\n    \n        if(lung==n-1 && flag==0 ) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    \n    )\n    \n    \n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint c,i,n,j,k,flag,lung,r;\nchar z[101];\nint main()\n{   \n    scanf(\"%d\",&k);\n    for(r=1;r<=k;r++){\n        scanf(\"%s\",&z);\n        n=strlen(z);\n        for (i=0;i<n-1;i++)\n        for(j=0;j<n-1;j++)\n        if(z[j]>z[j+1]) {\n            c=z[j]; z[j]=z[j+1]; z[j+1]=c;\n        }    \n        lung=z[n-1]-z[0];\n        flag=0;\n        for(i=0;i<n-1;i++) \n        if(z[i]==z[i+1]) {flag=1; break;}\n    \n        if(lung==n-1 && flag==0 ) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    \n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9460122699386503, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "6a38a5de9577606031ea6b5f0b97edca", "bug_code_uid": "14b0f07fe3b540659726a1a330191a7b", "src_uid": "90a47422f7ae53beb0a817422d760c6e", "apr_id": "705577966311ebb88ff9c42fe219389a", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint n,cnt[101] = {0};\nshort card[101][101] = {0},ans[101] = {0};\nvoid check(int id)\n{\n    int i,j;\n    short ok;\n    for(i=1;i<id;i++)\n    {\n        ok = 1;\n        for(j=1;j<=100;j++) if(card[i][j] == 1 && card[id][j] == 0)\n        {\n            ok = 0;\n            break;\n        }\n        if(ok)\n        {\n            ans[id] = 0;\n            if(cnt[i] == cnt[id]) ans[i] = 0;\n        }\n    }\n}\nint main()\n{\n    int i,j,num;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        ans[i] = 1;\n        scanf(\"%d\",&cnt[i]);\n        for(j=1;j<=cnt[i];j++)\n        {\n            scanf(\"%d\",&num);\n            card[i][num] = 1;\n        }\n        check(i);\n    }\n    for(i=1;i<=n;i++)\n    {\n        if(ans[i]) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint n,cnt[101] = {0};\nshort card[101][101] = {0},ans[101] = {0};\nvoid check(int id)\n{\n    int i,j;\n    short ok;\n    for(i=1;i<=n;i++)\n    {\n        if(i == id) continue;\n        ok = 1;\n        for(j=1;j<=100;j++) if(card[i][j] == 1 && card[id][j] == 0)\n        {\n            ok = 0;\n            break;\n        }\n        if(ok)\n        {\n            ans[id] = 0;\n            if(cnt[i] == cnt[id]) ans[i] = 0;\n        }\n    }\n}\nint main()\n{\n    int i,j,num;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        ans[i] = 1;\n        scanf(\"%d\",&cnt[i]);\n        for(j=1;j<=cnt[i];j++)\n        {\n            scanf(\"%d\",&num);\n            card[i][num] = 1;\n        }\n    }\n    for(i=1;i<=n;i++) check(i);\n    for(i=1;i<=n;i++)\n    {\n        if(ans[i]) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9891540130151844, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "74baea68e5d5a4ff966f6ce3ae8f9949", "bug_code_uid": "2db2445eb235696388f1047e1bad83d0", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "168048fa30932d400cd7442f69f22327", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int i,n,j,fl=0,c=0;\n    scanf(\"%I64d\",&n);\n\n    long long int a[n];double b;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n        b=sqrt(a[i]);\n        if(b==(int)b&&a[i]!=1)\n        {\n            for(j=1; j<=b/2; j++)\n            {\n                if((int)b%j==0)c++;\n            }\n\n        }\n\n        if(c==1) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n        c=0;\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int i,n,j,fl=0,c=0;\n    scanf(\"%I64d\",&n);\n\n    long long int a[n];double b;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n        b=sqrt(a[i]);\n        if(b==(int)b&&a[i]!=1)\n        {\n            for(j=1; j<=sqrt(b); j++)\n            {\n                if((int)b%j==0)c++;\n            }\n\n        }\n\n        if(c==1) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n        c=0;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8789986091794159, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "f3230db11f9eb5ce648e8885e1995d0b", "bug_code_uid": "b3157f6055002d2df0e874f808aafb22", "src_uid": "7db0b870177e7d7b01da083e21ba35f5", "apr_id": "81d301755b1e70352bec8600a885701b", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdlib.h>\n#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint n,c1=0,c0=0;\n\tscanf(\"%d\",&n);\n\tint buttons[n];\n\tfor(int o=0;o<n;o++)\n\t{\n\t\tscanf(\"%d\",&buttons[o]);\n\t\tif(buttons[o]==0)\n\t\t{\n\t\t\tc0+=1;\n\t\t}\n\t}\n\tif(n==1&buttons[0]==0)\n\t{\n\t\tprintf(\"No\");\n\t\texit(0);\n\t}\n\tif(c0>=1)\n\t{\n\t\tprintf(\"No\");\n\t\t\n\t}\n\telse printf(\"Yes\");\n}", "fixed": "#include<stdlib.h>\n#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint n,c1=0,c0=0;\n\tscanf(\"%d\",&n);\n\tint buttons[n];\n\tfor(int o=0;o<n;o++)\n\t{\n\t\tscanf(\"%d\",&buttons[o]);\n\t\tif(buttons[o]==0)\n\t\t{\n\t\t\tc0+=1;\n\t\t}\n\t}\n\tif(n==1&buttons[0]==0)\n\t{\n\t\tprintf(\"NO\");\n\t\texit(0);\n\t}\n\tif(n==1&&buttons[0]==1)\n\t{\n\t\tprintf(\"YES\");\n\t\texit(0);\n\t}\n\tif(c0>1||c0==0)\n\t{\n\t\tprintf(\"NO\");\n\t\t\n\t}\n\telse printf(\"YES\");\n}"}
{"similarity_score": 0.8245283018867925, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "efa8abb67d3b0b15d2a46779b2bd1a9a", "bug_code_uid": "a44285d45f4ef48ad7e6a66da02fddb2", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "9513d225eef60ad446bd045d40404238", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <limits.h>\n#include <stdio.h>\n\n#define N 150000\n\nint h[N];\n\nint main(void) {\n    int n, k, i, sum, bestsum, res;\n    scanf(\"%d %d\", &n, &k);\n    for (i = 0; i < n; ++i) {\n        scanf(\"%d\", &h[i]);\n    }\n\n    sum = 0;\n    i = 0;\n    while (i < k) {\n        sum += h[i++];\n    }\n    bestsum = sum;\n    res = 0;\n    while (i < n) {\n        if (sum < bestsum) {\n            bestsum = sum;\n            res = i - k;\n        }\n        sum += h[i] - h[i - k];\n        ++i;\n    }\n\n    printf(\"%d\\n\", res + 1);\n    return 0;\n}\n", "fixed": "#include <limits.h>\n#include <stdio.h>\n\n#define N 150000\n\nint h[N];\n\nint main(void) {\n    int n, k, i, sum, bestsum, res;\n    scanf(\"%d %d\", &n, &k);\n    for (i = 0; i < n; ++i) {\n        scanf(\"%d\", &h[i]);\n    }\n\n    sum = 0;\n    i = 0;\n    while (i < k) {\n        sum += h[i++];\n    }\n    bestsum = sum;\n    res = 0;\n    while (i < n) {\n        sum += h[i] - h[i - k];\n        if (sum < bestsum) {\n            bestsum = sum;\n            res = i - k + 1;\n        }\n        ++i;\n    }\n\n    printf(\"%d\\n\", res + 1);\n    return 0;\n}\n"}
{"similarity_score": 0.8345323741007195, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "22d2420753256124bf9ac903ec6c8bce", "bug_code_uid": "6b8d49cce3393c99c253e8856d77c4b5", "src_uid": "854c561539596722b1dbc8f99cbdca78", "apr_id": "7e806a2523bda2867c038a64d35917ac", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,m,i;\n\tscanf(\"%d %d\",&n,&m);\n\tif(m<=n/2||m>=2*n+3)\n\tprintf(\"%d\",-1);\n\telse\n\t{\n\t\tif(n>=m)\n\t\t{\n\t\t\tfor(i=1;i<=n+m;++i)\n\t\t\t{\n\t\t\t\tif(i%2)\n\t\t\t\t\tprintf(\"%d\",0);\n\t\t\t\t\telse\n\t\t\t\t\tprintf(\"%d\",1);\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t     for(i=1;i<=n+m;++i)\n\t\t\t     {\n\t\t\t\t if(i%3)\n\t\t\t\t\tprintf(\"%d\",1);\n\t\t\t\t\telse\n\t\t\t\t\tprintf(\"%d\",0);\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,m,i;\n\tscanf(\"%d %d\",&n,&m);\n\tif(n>m+1||m>=2*n+3)\n\tprintf(\"%d\",-1);\n\telse\n\t{\n\t\tif(n>=m)\n\t\t{\n\t\t\tfor(i=1;i<=n+m;++i)\n\t\t\t{\n\t\t\t\tif(i%2)\n\t\t\t\t\tprintf(\"%d\",0);\n\t\t\t\t\telse\n\t\t\t\t\tprintf(\"%d\",1);\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\twhile(1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(m>=2*n)\n\t\t\t\t\t\t\t{\n\t\t\t     for(i=1;i<=n+m;++i)\n\t\t\t     {\n\t\t\t\t if(i%3)\n\t\t\t\t\tprintf(\"%d\",1);\n\t\t\t\t\telse\n\t\t\t\t\tprintf(\"%d\",0);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprintf(\"%d%d\",1,0);\n\t\t\t\t\t\tm--;\n\t\t\t\t\t\t--n;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t"}
{"similarity_score": 0.9344608879492601, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "f58d0c1985492fd953c59d845f1f709f", "bug_code_uid": "7907b7b96b3e13b53dc6c4762fceb6df", "src_uid": "71bc7c4eb577441f2563e40d95306752", "apr_id": "25f3a74a186e6f9569ca9396ecd0f43c", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "typedef struct E{\n  int a;int b;\n} E;day,i,n,ok;\nE e[5003];\ncmp(const void*x, const void*y) {\n  return ((E*)x)->a - ((E*)y)->a;\n}\nmain() {\n  scanf(\"%d\", &n);\n  for(i=0;i<n;i++) {\n    scanf(\"%d%d\", &e[i].a, &e[i].b);\n  }\n  qsort(e, n, sizeof(E), cmp);\n  for(ok = 1, day = e[n-1].b, i=n-2;ok && i>=0;i--) {\n    if(e[i].a <= day) day = e[i].a;\n    else if(e[i].b <= day) day = e[i].b;\n    else ok = 0;\n  }\n  printf(\"%d\\n\", ok?e[n-1].b:e[n-1].a);\n}", "fixed": "typedef struct E{\n  int a;int b;\n} E;day,i,n,ok;\nE e[5003];\ncmp(const void*x, const void*y) {\n  int k = ((E*)x)->a - ((E*)y)->a;\n  if(k) return k;\n  else return ((E*)x)->b - ((E*)y)->b;\n}\nmain() {\n  scanf(\"%d\", &n);\n  for(i=0;i<n;i++) {\n    scanf(\"%d%d\", &e[i].a, &e[i].b);\n  }\n  qsort(e, n, sizeof(E), cmp);\n  for(ok = 1, day = e[n-1].b, i=n-2;ok && i>=0;i--) {\n    if(e[i].a <= day) day = e[i].a;\n    else if(e[i].b <= day) day = e[i].b;\n    else ok = 0;\n  }\n  printf(\"%d\\n\", ok?e[n-1].b:e[n-1].a);\n}"}
{"similarity_score": 0.9609810479375697, "equal_cnt": 10, "replace_cnt": 0, "delete_cnt": 8, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "9ba298fa9a5e94c17b147dab52ac0aea", "bug_code_uid": "1283bd12685b34cd1414837fa8d80d54", "src_uid": "7a724f327c6202735661be25ef9328d2", "apr_id": "06515eb84319b0528ce532a421ff7754", "difficulty": 1000, "tags": ["greedy", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint t,n,i,j,S[2000],k,d[2000];\n\tchar s[51];\n\tscanf(\"%d\",&t);\n\tfor(i=1;i<=t;i++)\n\t{\n\t\tscanf(\"%d\",&n);\tgetchar();\n\t\tgets(s[i]);\n\t\tmn:\n\t\tS[i]=strlen(s[i]);\n\t\twhile(S[i]>0)\n\t\t{\n\t\t\tk=0;\n\t\t\tfor(j=0;j<S[i]-1;j++)\n\t\t\t{\n\t\t\t\tif(s[j]=='('&&s[j+1]==')')\n\t\t\t\t{\n\t\t\t\t\tstrcpy(&s[j],&s[j+2]);\n\t\t\t\t\tgoto mn;\n\t\t\t\t}\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tif(k==S[i]-1) {break;}\n\t\t}\n\t\td[i]=S[i]/2;\n\t}\n\tfor(i=1;i<=t;i++){printf(\"%d\\n\",d[i]);}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint t,n,i,j,S,k,d[2000];\n\tchar s[51];\n\tscanf(\"%d\",&t);\n\tfor(i=1;i<=t;i++)\n\t{\n\t\tscanf(\"%d\",&n);\tgetchar();\n\t\tgets(s);\n\t\tmn:\n\t\tS=strlen(s);\n\t\twhile(S>0)\n\t\t{\n\t\t\tk=0;\n\t\t\tfor(j=0;j<S-1;j++)\n\t\t\t{\n\t\t\t\tif(s[j]=='('&&s[j+1]==')')\n\t\t\t\t{\n\t\t\t\t\tstrcpy(&s[j],&s[j+2]);\n\t\t\t\t\tgoto mn;\n\t\t\t\t}\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tif(k==S-1) {break;}\n\t\t}\n\t\td[i]=S/2;\n\t}\n\tfor(i=1;i<=t;i++){printf(\"%d\\n\",d[i]);}\n\treturn 0;\n}"}
{"similarity_score": 0.5610687022900763, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "27eb9c697dce272fe59bf8ad14d8b34c", "bug_code_uid": "579a6652ff438f03b09a287c3fe4bba4", "src_uid": "787a45f427c2db98b2ddb78925e0e0f1", "apr_id": "e3859be12a401e45e30d14185561a76e", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n  int t, n, i, ans1, ans2;\n  scanf(\"%d\", &t);\n  while(t--){\n    scanf(\"%d\", &n);\n    ans1=(1<<(n/2))-2+(1<<(n/2));\n    ans2=0;\n    int i;\n    for(i=n/2; i<n; i++)\n      ans2+=(1<<i);\n    printf(\"%d\\n\", ans1-ans2);\n  }\n  return 0;\n}\n", "fixed": "#include <stdio.h>\nint main(){\n  int t, n, i, ans1, ans2;\n  scanf(\"%d\", &t);\n  while(t--){\n    scanf(\"%d\", &n);\n    ans1=(1<<(n/2))-2+(1<<(n));\n    ans2=0;\n    int i;\n    for(i=n/2; i<n; i++)\n      ans2+=(1<<i);\n    printf(\"%d\\n\", ans1-ans2);\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.20330578512396694, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "4bee0ded2faac439293cfd7fe692eb3d", "bug_code_uid": "2070eb3bb90cac04c8b3c02d9ff17bc7", "src_uid": "4c387ab2a0d028141634ade32ae97d03", "apr_id": "3a60695eabcb4807db982001a142a51f", "difficulty": 1300, "tags": ["constructive algorithms", "graphs", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i=1;\n\tif(n%4==0)\n\t{\n\t\tprintf(\"0\\n\");\n\t\tprintf(\"%d\",n/2);\n\t\twhile(i<=n/2)\n\t\t{\n\t\t\tprintf(\" %d %d\",i,n-i+1);\n\t\t\ti=i+2;\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\telse if(n%4==1)\n\t{\n\t\tprintf(\"%d\\n\",(n+1)/2);\n\t\tprintf(\"%d\",(n+1)/2);\n\t\twhile(i<=n/2)\n\t\t{\n\t\t\tprintf(\" %d %d\",i,n-i+1);\n\t\t\ti=i+2;\n\t\t}\n\t\tprintf(\" %d\\n\",i);\n\t}\n\telse if(n%4==2)\n\t{\n\t\tprintf(\"1\\n\");\n\t\tprintf(\"%d\",n/2);\n\t\twhile(i<n/2)\n\t\t{\n\t\t\tprintf(\" %d %d\",i,n-i+1);\n\t\t\ti=i+2;\n\t\t}\n\t\tprintf(\" %d\\n\",i);\n\t}\n\telse if(n%4==3)\n\t{\n\t\tprintf(\"%d\\n\",(n+1)/2);\n\t\tprintf(\"%d\",(n+1)/2);\n\t\twhile(i<=n/2)\n\t\t{\n\t\t\tprintf(\" %d %d\",i,n-i+1);\n\t\t\ti=i+2;\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i,count=0;\n\tint a[n+1],k=0,diff=0;\n\tfor(i=0;i<n;i++)a[i]=0;\n\twhile(n>4)\n\t{\n\t\tif(count%2==0)\n\t\t\ta[k++]=n;\n\t\telse a[k++]=n-1;\n\t\tcount++;\n\t\tn=n-2;\n\t}\n\tif(count%2==1)\n\t{\n\t\ta[k++]=n-1;\n\t\tn=n-2;\n\t}\n\tif(n%4==0)\n\t{\n\t\ta[k++]=4;\n\t\ta[k++]=1;\n\t\tdiff=0;\n\t}\n\tif(n%4==1)\n\t{\n\t\ta[k++]=1;\n\t\tdiff=1;\n\t}\n\tif(n%4==2)\n\t{\n\t\ta[k++]=1;\n\t\tdiff=1;\n\t}\n\tif(n%4==3)\n\t{\n\t\ta[k++]=2;\n\t\ta[k++]=1;\n\t\tdiff=0;\n\t}\n\tprintf(\"%d\\n\",diff);\n\tprintf(\"%d\",k);\n\tfor(i=0;i<k;i++)\n\t\tprintf(\" %d\",a[i]);\n\tprintf(\"\\n\");\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9721311475409836, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "e5294e284088802aaefa66ff0154c4e8", "bug_code_uid": "90856bfd949d2ac65ab37c1f5fa3baa3", "src_uid": "b4ca6a5ee6307ab2bcdab2ea5dd5b2b3", "apr_id": "a163fa3ae3fa14110df374dcfc3f5630", "difficulty": 1100, "tags": ["binary search", "brute force", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint sum_cub(long long int n)\r\n{\r\n    long long int x = 1;\r\n    long long y = pow(n, 1./3);\r\n    long long s;\r\n    while(y >= x) {\r\n        s = pow(y, 3) + pow(x, 3);\r\n        if (s == n)\r\n            return 1;\r\n        else if(s > n)\r\n            y--;\r\n        else\r\n            x++;\r\n    }\r\n    return 0;\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int i = 0; i < t; i++) {\r\n        long long int n;\r\n        scanf(\"%lld\", &n);\r\n        if (sum_cub(n))\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint sum_cub(long long int n)\r\n{\r\n    long long int x = 1;\r\n    long long y = pow(n, 1./3);\r\n    long long s;\r\n    while(y >= x) {\r\n        s = y * y * y + x * x * x;\r\n        if (s == n)\r\n            return 1;\r\n        else if(s > n)\r\n            y--;\r\n        else\r\n            x++;\r\n    }\r\n    return 0;\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int i = 0; i < t; i++) {\r\n        long long int n;\r\n        scanf(\"%lld\", &n);\r\n        if (sum_cub(n))\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9990900818926297, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "515d85bec1e3f0f5a7b219a6748da51a", "bug_code_uid": "9d4ea656e0c5a0e0c87133d0dce14810", "src_uid": "e519e4495c9acef4c4a614aef73cb322", "apr_id": "2c55bc03edd69672afb22fd5fa73edba", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nlong long ceilFrac(long long a, long long b) {\r\n    return a % b ? a / b + 1 : a / b;\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int tNumber = 1; tNumber <= t; tNumber++) {\r\n        long long n, m, x;\r\n        scanf(\"%lld %lld %lld\", &n, &m, &x);\r\n\r\n        long long cellnumberN = ceilFrac(x, n);\r\n        long long cellnumberM = x - (1 + (cellnumberN - 1) * n) + 1);\r\n        long long cellNumber = cellnumberN + m * (cellnumberM - 1);\r\n\r\n        printf(\"%lld\\n\", cellNumber);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nlong long ceilFrac(long long a, long long b) {\r\n    return a % b ? a / b + 1 : a / b;\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int tNumber = 1; tNumber <= t; tNumber++) {\r\n        long long n, m, x;\r\n        scanf(\"%lld %lld %lld\", &n, &m, &x);\r\n\r\n        long long cellnumberN = ceilFrac(x, n);\r\n        long long cellnumberM = x - (1 + (cellnumberN - 1) * n) + 1;\r\n        long long cellNumber = cellnumberN + m * (cellnumberM - 1);\r\n\r\n        printf(\"%lld\\n\", cellNumber);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.5815789473684211, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "83e3bd4ef763b4a8cd79df065bf06882", "bug_code_uid": "2263f9e1db79e3f89da9672f316e2d97", "src_uid": "955bc1e2769ea407ef02506bf1e4259b", "apr_id": "9d6f59039379f2d6ab413de6942d3057", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t, n, m;\r\n    scanf(\"%d\", &t);\r\n    \r\n    \r\n    \r\n\r\n    for (int k = 0; k <t; k++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        int p[n];\r\n        m = n;\r\n        for (int i = 1; m>0 ; i++)\r\n        {\r\n\r\n            p[i] = m--;\r\n            printf(\"%d \",p[i]);\r\n        }\r\n        printf(\"\\n\");\r\n       \r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t, n, m;\r\n    scanf(\"%d\", &t);\r\n    \r\n    \r\n    \r\n\r\n    for (int k = 0; k <t; k++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        int p[n];\r\n        m = n;\r\n        for (int i = 1; i<=n ; i++)\r\n        {\r\n\r\n            p[1] = n;\r\n            p[i+1] = i;\r\n            printf(\"%d \",p[i]);\r\n        }\r\n        printf(\"\\n\");\r\n       \r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9891196834817013, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "6a51dc076ece7e9f271a36ef19737552", "bug_code_uid": "abe37fa0036a499d9a78712071853bd7", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "7e6438b807a436296a77d80ceb4795f1", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        if(n>=1900){\r\n            printf(\"Division 1\");\r\n        }\r\n        else if(n>=1600 && n<=1899){\r\n              printf(\"Division 2\");   \r\n        }\r\n        else if(n>=1400 && n<=1599){\r\n         printf(\"Division 3\"); \r\n        }\r\n        else if(n>=1399){\r\n         printf(\"Division 4\"); \r\n        }\r\n        else{\r\n            break;\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n       int n;\r\n        scanf(\"%d\",&n);\r\n        if(n>=1900){\r\n            printf(\"Division 1\\n\");\r\n        }\r\n        else if(n>=1600 && n<=1899){\r\n              printf(\"Division 2\\n\");   \r\n        }\r\n        else if(n>=1400 && n<=1599){\r\n         printf(\"Division 3\\n\"); \r\n        }\r\n        else if(n<=1399){\r\n         printf(\"Division 4\\n\"); \r\n        }\r\n        else{\r\n            break;\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.32327919566898683, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "7e7ae591b7103234e45330ef89273fd1", "bug_code_uid": "8f1175cda88bd1aff6b2a5b8012b5e89", "src_uid": "6d146936ab34deaee24721e53474aef0", "apr_id": "460f961c91d220aa623f2946ca45e638", "difficulty": 1500, "tags": ["two pointers", "implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,m,flag;\n\tscanf(\"%d %d %d\",&n,&m,&flag);\n\n\tint a[n][m];\n\tint i,j=0;\n\n\tfor( i=0;i<n;i++)\n\t{\n\tfor( j=0;j<m;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\n\t\t}\n\t\tprintf(\"\\n\\n\");\n\n\t}\n\tint k=0,temp,p=0;\n\n\n\n\twhile(k<n)\n\t{\n\n\t\tfor( i=0;i<m-1;i++)\n\t\t{\n\t\t\tfor(j=1;j<m;j++)\n\t\t\t{\n\t\t\t\tif(a[k][i]<a[k][j])\n\t\t\t\t{\t\n\t\t\t\t\ttemp=a[k][i];\n\t\t\t\t\ta[k][i]=a[k][j];\n\t\t\t\t\ta[k][j]=temp;\n\t\t\t\t\tp++;\n\t\t\t\t\tprintf(\"%d %d\",i+1,j+1);\n\t\t\t\t\tprintf(\"\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tk++;\n\t\t\n\t}\n\n\tprintf(\"\\n\");\t\n\tprintf(\"p=%d\",p);\n\treturn 0;\n}\n\n\t\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,m,flag;\n\tscanf(\"%d %d %d\",&n,&m,&flag);\n\n\tint a[n][m];\n\tint i,j=0;\n\tfor( i=0;i<n;i++)\n\t{\n\t\tfor( j=0;j<m;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\n\t\t}\n\t\tprintf(\"\\n\\n\");\n\n\t}\n\tint k=0,temp,p=0;\n\tif( flag==1)\n\t{\n\n\n\t\t\tfor( i=0;i<m;i++)\n\t\t\t{\n\t\t\t\tfor(j=i+1;j<m;j++)\n\t\t\t\t{\n\t\t\t\t\t\tp++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\n\t\tprintf(\"%d\",p);\n\t\tprintf(\"\\n\\n\");\n\t\tk=0;\n\n\t\t\tfor( i=0;i<m;i++)\n\t\t\t{\n\t\t\t\tfor(j=i+1;j<m;j++)\n\t\t\t\t{\n\t\t\t\t\t\tprintf(\"%d %d\",j+1,i+1);\n\t\t\t\t\t\tprintf(\"\\n\");\n\n\t\t\t\t}\n\t\t\t}\n\t}\n\tif(flag==0)\n\t{\n\n\t\tfor( i=0;i<m;i++)\n\t\t\t{\n\t\t\t\tfor(j=i+1;j<m;j++)\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\tprintf(\"%d\\t\",p);\n\t\tprintf(\"\\n\");\n\t\tfor( i=0;i<m;i++)\n\t\t{\n\t\t\tfor(j=i+1;j<m;j++)\n\t\t\t{\n\t\t\t\t\tprintf(\"%d %d\",i+1,j+1);\n\t\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n\t}\n\t\n\n\treturn 0;\n\n\n\n}\n\n\n"}
{"similarity_score": 0.7062146892655368, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "0f8cdc4b9b629f4a47e3fd0444f6c118", "bug_code_uid": "1273b04e8033f809cf5c9611c093bbb0", "src_uid": "241157c465fe5dd96acd514010904321", "apr_id": "1f31d280aca2773f4a67ee84b6b5eef2", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\nmain()\n{\n    int n,i,a[100000];\n    int sum=0,d;\n    int jog=0;\n\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum=sum+a[i];\n    }\n    d=ceil(sum*1.0/2);\n    for(i=0;i<n;i++)\n    {\n        jog=jog+a[i];\n        if(jog>=d)\n        {\n            printf(\"%d\\n\",i+1);\n            exit(0);\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n    int n,i,sum=0,s=0,d;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    d=ceil(sum*1.0/2);\n    for(i=0;i<n;i++)\n    {\n        s+=a[i];\n        if(s>=d)\n            break;\n    }\n    printf(\"%d\",i+1);\n}\n"}
{"similarity_score": 0.3623789764868603, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "d1e40f433830decfbdccb6a0e08f62af", "bug_code_uid": "4f284ffc8726ecc9d50a07ceec0df98e", "src_uid": "9b1887582a9eb7cff49994ddcc2ee9b8", "apr_id": "833e551b4783321ece7b2bd30eae9f26", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char str[1000];\n    gets(str);\n    int i,j,len=strlen(str),count=0;\n    if(str[len-1]==str[len-2] || (str[len-1]==str[len-3] && len%2==0))\n    {\n    {\n        for(i=0;i<1;i++)\n            str[len+i]=str[i];\n    }\n    str[len+1]='\\0';\n   }\n   else if(str[len-1]!=str[len-2])\n   {\n       for(i=0;i<len-1;i++)\n       {\n        str[len+i]=str[len-i-2];\n        count++;;\n       }\n       str[len+count]='\\0';\n   }\n    puts(str);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char str[10000];\n    gets(str);\n    int i,j,len=strlen(str);\n    for(i=0;i<len;i++)\n        str[len+i]=str[len-2-i];\n        str[2*len-1]='\\0';\n    puts(str);\n    return 0;\n}\n"}
{"similarity_score": 0.9831410825199645, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "fcf982844387eefe4d1557f8891eb16a", "bug_code_uid": "0da9694afcf6d4901edad5f73c3e76c5", "src_uid": "5d11fa8528f1dc873d50b3417bef8c79", "apr_id": "872dc6489cf190315965d028d5773640", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main () {\n\tint squares[1000];\n\tint n;\n\tscanf(\"%d\", &n);\n\tint i=0;\n\twhile(i<n) {\n\t\tscanf(\" %d\", &squares[i]);\n\t\ti++;\n\t}\n\tint max = 0;\n\tint j;\n\ti = 0;\n\twhile(i<n) {\n\t\tint cur = 1;\n\t\tint prev = squares[i];\n\t\tj=i-1;\n\t\twhile(j>=0) {\n\t\t\tif (squares[j] > prev) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tcur++;\n\t\t\t\tprev = squares[j];\n\t\t\t}\n\t\t\tj--;\n\t\t}\n\t\tj=i+1;\n\t\twhile(j<n) {\n\t\t\tif (squares[j] > prev) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tcur++;\n\t\t\t\tprev = squares[j];\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\tif (cur > max) max = cur;\n\t\ti++;\n\t}\n\t\n\tprintf(\"%d\", max);\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main () {\n\tint squares[1000];\n\tint n;\n\tscanf(\"%d\", &n);\n\tint i=0;\n\twhile(i<n) {\n\t\tscanf(\" %d\", &squares[i]);\n\t\ti++;\n\t}\n\tint max = 0;\n\tint j;\n\ti = 0;\n\twhile(i<n) {\n\t\tint cur = 1;\n\t\tint prev = squares[i];\n\t\tj=i-1;\n\t\twhile(j>=0) {\n\t\t\tif (squares[j] > prev) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tcur++;\n\t\t\t\tprev = squares[j];\n\t\t\t}\n\t\t\tj--;\n\t\t}\n\t\tj=i+1;\n\t\tprev=squares[i];\n\t\twhile(j<n) {\n\t\t\tif (squares[j] > prev) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tcur++;\n\t\t\t\tprev = squares[j];\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\tif (cur > max) max = cur;\n\t\ti++;\n\t}\n\t\n\tprintf(\"%d\", max);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9980013324450366, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "73366ae3f963b247d9ebc7fb1657959e", "bug_code_uid": "26529895e014d7fddc9f28def2b0a1da", "src_uid": "240a2b88ded6016d0fd7157d0ee2beea", "apr_id": "671431a547fe715fe47dea0066931081", "difficulty": 1200, "tags": ["greedy", "math", "implementation", "brute force", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{    int i,n,k,out,p;\n     out=0;\n    char arr[5001];\n    int arr2[5001];\n    k=0;\n    \n    scanf(\"%s\",arr);\n    n=strlen(arr);\n    if(n>1)\n    {\n    \n    \n    for(i=0;i<(n-3);i++){\n    \n    \n    if((arr[i]=='b')&&(arr[i+1]=='e')&&(arr[i+2]=='a')&&(arr[i+3]=='r'))\n    {\n    arr2[k]=i;\n    k++;\n    \n    \n    }\n    p=k;\n    }\n    \n    for(k=0;k<p;k++)\n    {\n        if (k==0)\n        {\n        \n        out=(arr2[0]+1)*(n-arr2[0]-3);\n        }\n        else if(k>0)\n        {\n        \n        \n        out=out+((arr2[k]-arr2[k-1])*(n-arr2[k]-3));\n        }\n       \n    }\n    \n     printf(\"%d\",out);\n}\n else printf(\"0\")  ;\n    \n    return 0;\n}\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{    int i,n,k,out,p;\n     out=0;\n    char arr[5001];\n    int arr2[5001];\n    k=0;\n    \n    scanf(\"%s\",arr);\n    n=strlen(arr);\n    if(n>=4)\n    {\n    \n    \n    for(i=0;i<(n-3);i++){\n    \n    \n    if((arr[i]=='b')&&(arr[i+1]=='e')&&(arr[i+2]=='a')&&(arr[i+3]=='r'))\n    {\n    arr2[k]=i;\n    k++;\n    \n    \n    }\n    p=k;\n    }\n    \n    for(k=0;k<p;k++)\n    {\n        if (k==0)\n        {\n        \n        out=(arr2[0]+1)*(n-arr2[0]-3);\n        }\n        else if(k>0)\n        {\n        \n        \n        out=out+((arr2[k]-arr2[k-1])*(n-arr2[k]-3));\n        }\n       \n    }\n    \n     printf(\"%d\",out);\n}\n else printf(\"0\")  ;\n    \n    return 0;\n}\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n"}
{"similarity_score": 0.7417783191230207, "equal_cnt": 13, "replace_cnt": 2, "delete_cnt": 5, "insert_cnt": 6, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "753516a4f0cbace777a6b9cfcbe5333c", "bug_code_uid": "fd4fcdd32448c9610a04df1fca9a6601", "src_uid": "07597a8d08b59d4f8f82369bb5d74a49", "apr_id": "1093d72f61a41d3dff00199d411bd9dc", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<conio.h>\r\n#include<math.h>\r\n int main(){\r\n \tint n,i,j,s;\r\n \tscanf(\"%d\",&n);\r\n \tint t[n][3];\r\n \tfor(i=0;i<n;i++){\r\n \t\tfor(j=0;j<3;j++){\r\n \t\t\tscanf(\"%d\",&t[i][j]);\r\n\t\t }\r\n\t }\r\n\tfor (i=0;i<n;i++){\r\n\t\ts=abs(t[i][0]-t[i][1]);\r\n\t\tif(t[i][0]>=s*2 || t[i][1]>=s*2 ){\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\telse if(t[i][2]>s*2){\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t}\r\n\t\telse if(t[i][2]+s>s*2){\r\n\t\t\tif(t[i][2]-s<1){\r\n\t\t\t\tprintf(\"-1\\n\");\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse if (t[i][2]-s >0 && t[i][2]-s < s+1 && t[i][2]-s!= t[i][0] && t[i][2]-s != t[i][1] && t[i][2]-s!=t[i][2]  ){\r\n\t\t\t\tprintf(\"%d\\n\",t[i][2]-s);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\telse if (t[i][2]+s < 1+s*2 && t[i][2]+s!= t[i][0] && t[i][2]+s != t[i][1] && t[i][2]+s!=t[i][2]){\r\n\t\t\tprintf(\"%d\\n\",t[i][2]+s);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t}\r\n\t}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<conio.h>\r\n#include<math.h>\r\n int main(){\r\n \tint n,i,j,s;\r\n \tscanf(\"%d\",&n);\r\n \tint t[n][3];\r\n \tfor(i=0;i<n;i++){\r\n \t\tfor(j=0;j<3;j++){\r\n \t\t\tscanf(\"%d\",&t[i][j]);\r\n\t\t }\r\n\t }\r\n\tfor (i=0;i<n;i++){\r\n\t\ts=abs(t[i][0]-t[i][1]);\r\n\t\tif(t[i][0]>s*2 || t[i][1]>s*2 ){\r\n\t\t\tprintf(\"\\n-1\");\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\telse if(t[i][2]>s*2){\r\n\t\t\tprintf(\"\\n-1\");\r\n\t\t}\r\n\t\telse if(t[i][2]+s>s*2){\r\n\t\t\tif(t[i][2]-s<1){\r\n\t\t\t\tprintf(\"\\n-1\");\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse if (t[i][2]-s >0 && t[i][2]-s < s+1 && t[i][2]-s!= t[i][0] && t[i][2]-s != t[i][1] && t[i][2]-s!=t[i][2]  ){\r\n\t\t\t\tprintf(\"\\n%d\",t[i][2]-s);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\telse if (t[i][2]+s < 1+s*2 && t[i][2]+s!= t[i][0] && t[i][2]+s != t[i][1] && t[i][2]+s!=t[i][2]){\r\n\t\t\tprintf(\"\\n%d\",t[i][2]+s);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tprintf(\"\\n-1\");\r\n\t\t}\r\n\t}\r\n\t \r\n\treturn 0;\r\n }\r\n"}
{"similarity_score": 0.9957134109001837, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ef2c39f4bcac5fda7f349eecf65b14fa", "bug_code_uid": "5ba3f19f50a244ee88e5310017495b0d", "src_uid": "f3ee3a0de5ddf3cf15ef02fb62a2768e", "apr_id": "44769170933436b75cc89e56ca51bc81", "difficulty": 1300, "tags": ["brute force", "constructive algorithms", "dp", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <math.h>\r\n#include <ctype.h>\r\n#include <time.h>\r\n#define ll long long\r\n#define forn(i, n) for(int i = 0; i < int(n); i++)\r\n\r\nint max(int a, int b)\r\n{\r\n\treturn a > b ? a : b;\r\n}\r\n\r\nint min(int a, int b)\r\n{\r\n\treturn a < b ? a : b;\r\n}\r\n\r\nint main()\r\n{\r\n\tint t,n;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\t\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint arr[2][n];\r\n\t\tforn(i,2)\r\n\t\t{\r\n\t\t\tforn(j,n)\r\n\t\t\t{\r\n\t\t\t\tscanf(\"%d\",&arr[i][j]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tint ans,sum1=0,sum2=0;\r\n\t\t\r\n\t\tforn(i,n)\r\n\t\t{\r\n\t\t\tsum1 += arr[0][i];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tforn(i,n)\r\n\t\t{\r\n\t\t\tsum1 -= arr[0][i];\r\n\t\t\tif(!i)\r\n\t\t\t{\r\n\t\t\t\tans = max(sum1,sum2);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tans = min(ans,max(sum1,sum2));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tsum2 += arr[1][i];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%d\\n\",ans);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <math.h>\r\n#include <ctype.h>\r\n#include <time.h>\r\n#define ll long long\r\n#define forn(i, n) for(int i = 0; i < n; i++)\r\n\r\nint max(int a, int b)\r\n{\r\n\treturn a > b ? a : b;\r\n}\r\n\r\nint min(int a, int b)\r\n{\r\n\treturn a < b ? a : b;\r\n}\r\n\r\nint main()\r\n{\r\n\tint t,n;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\t\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint arr[2][n];\r\n\t\tforn(i,2)\r\n\t\t{\r\n\t\t\tforn(j,n)\r\n\t\t\t{\r\n\t\t\t\tscanf(\"%d\",&arr[i][j]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tint ans,sum1=0,sum2=0;\r\n\t\t\r\n\t\tforn(i,n)\r\n\t\t{\r\n\t\t\tsum1 += arr[0][i];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tforn(i,n)\r\n\t\t{\r\n\t\t\tsum1 -= arr[0][i];\r\n\t\t\tif(!i)\r\n\t\t\t{\r\n\t\t\t\tans = max(sum1,sum2);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tans = min(ans,max(sum1,sum2));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tsum2 += arr[1][i];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%d\\n\",ans);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.7685342388228636, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "b87ef15a0a5ae1839c340f647b8325b5", "bug_code_uid": "9e86f1cd322e5551999e1c5d535309f1", "src_uid": "684273a4c6711295996e520739744b0f", "apr_id": "7463e25d9895301cf7d37b348c72cfb5", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//practice with dukkha\nint main()\n{   \n    long long int m,n,p;\n    scanf(\"%lld %lld %lld\",&m,&n,&p);\n    long long int arr[n];\n    for(long long int i=0;i<n;i++)\n    scanf(\"%lld\",&arr[i]);\n    long long int index=0;\n    long long int ans=0;\n    while(index!=n)\n    {\n        long long ele=arr[index];\n        long long page=ele/p;\n        if(ele%p==0)\n        page--;\n        long long int count=0;\n        for(long long int i=index;i<n && i<index+p;i++)\n        {\n            long long int ele1=arr[i];\n            long long page1=ele1/p;\n            if(ele1%p==0)\n            page1--;\n            if(page1==page)\n            count++;\n            else\n            break;\n        }\n        index+=count;\n        for(long long int i=index;i<n;i++)\n        arr[i]-=count;\n        ans++;\n    }\n    printf(\"%lld\",ans);\n    return 0;\n }", "fixed": "//practice with dukkha\nint main()\n{   \n    long long int m,n,p;\n    scanf(\"%lld %lld %lld\",&m,&n,&p);\n    long long int arr[n];\n    for(long long int i=0;i<n;i++)\n    scanf(\"%lld\",&arr[i]);\n    long long int index=0;\n    long long int ans=0;\n    long long sub=0;\n    while(index!=n)\n    {\n        long long ele=arr[index]-sub;\n        long long page=ele/p;\n        if(ele%p==0)\n        page--;\n        long long int count=0;\n        long long int maxl=(page+1)*p;\n        for(long long int i=index;i<n && i<index+p;i++)\n        {\n            //long long int ele1=arr[i];\n            //long long page1=ele1/p;\n        //    if(ele1%p==0)\n          //  page1--;\n            if((arr[i]-sub)<=maxl)\n            count++;\n            else\n            break;\n        }\n        index+=count;\n        //for(long long int i=index;i<n;i++)\n        //arr[i]-=count;\n        sub+=count;\n        ans++;\n    }\n    printf(\"%lld\",ans);\n    return 0;\n }"}
{"similarity_score": 0.3248847926267281, "equal_cnt": 16, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "70bef23eef43f039ed7289b91a1a6059", "bug_code_uid": "ba2e38e3291654de190fd62e5cffad7f", "src_uid": "daabf732540e0f66d009dc211c2d7b0b", "apr_id": "151ed007c33c9f71a8fb39e3ccb560a3", "difficulty": 1500, "tags": ["number theory", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n,x;\n\tscanf(\"%d %d\",&n,&x);\n\tint a[n];\n\tint i,j,ans,m;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tans=0;\n\tfor(i=0;i<n;i++)\n\t\tfor(j=i+1;j<n;j++)\n\t{\n\t\t//printf(\"%d   a[i]xora[j]:%d\\n\",x,a[i]^a[j]);\n\t\tif((a[i]^a[j])==x)\n\t\t\tans++;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tlong long int n,x;\n\tscanf(\"%I64d %I64d\",&n,&x);\n\tlong long int a[n],fre[100001];\n\tlong long int i,j,m;\n\tlong long int ans;\n\tfor(i=0;i<100001;i++)\n\t\tfre[i]=0;\n\tfor(i=0;i<n;i++)\n\t{\tscanf(\"%I64d\",&a[i]);\n\t\tfre[a[i]]+=1;\n\t}\n\t\n\tans=0;\n\tif(x==0)\n\t{\n\t\tfor(i=0;i<100001;i++)\t\n\t\t\tans+=(fre[i]*(fre[i]-1))/2;\n\t}\n\telse\n\t{\n\n\t\tfor(i=0;i<n;i++)\t\n\t\t\t{\t\n\t\t\t\t\n\t\t\t\tif((a[i]^x)<=100000)\n\t\t\t\t{\n\t\t\t\t\tans+=fre[a[i]]*fre[a[i]^x];\n\t\t\t\t\tif(fre[a[i]]>1)\n\t\t\t\t\t\tans-=(fre[a[i]]-1)*fre[a[i]^x];\n\n\t\t\t\t}\n\t\t\t}\n\t\tans/=2;\n\t}\n\n\t\n\n\tprintf(\"%I64d\\n\",ans);\n\n\n\n\n\n\n\n\treturn 0;\n}"}
{"similarity_score": 0.36363636363636365, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 5, "insert_cnt": 4, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "c260ddc3ab1ddcb77effc43083756ccd", "bug_code_uid": "5ed5bceea8bd151af483934879777c9b", "src_uid": "8e4194b356500cdaacca2b1d49c2affb", "apr_id": "d6f787054b5b0afde852e12f4fa8441e", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n #include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    freopen(\"INPUT.txt\",\"r\",stdin);\n    freopen(\"OUTPUT.txt\",\"w\",stdout);\n    long long int a;\n    int shuru;\n    scanf(\"%d\",&shuru);\n    for(int i = 0;i < shuru;i++){\n        scanf(\"%lld\",&a);\n        long long int b = (a+1)/10;\n        printf(\"%lld\\n\",b);\n    }\n    return 0;\n}\n\n\t\t \t\t\t  \t\t      \t \t\t   \t\t \t\t  \t", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,t;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        int n,a,z,x;\n        scanf(\"%d\",&n);\n        a=n/10;\n        x=n%10;\n        if(x==9)\n        {\n            z=a+1;\n            printf(\"%d\",z);\n        }\n        else\n        {\n            printf(\"%d\",a);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n\t\t  \t   \t \t\t   \t\t\t    \t\t  \t"}
{"similarity_score": 0.9398572884811417, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "db025e0a4bf759789133b24dca78b825", "bug_code_uid": "62fcbd27d2decc227f7174fb3db04a28", "src_uid": "eea15ff7e939bfcc7002cacbc8a1a3a5", "apr_id": "4907b03b7389020f9816c560c64598b8", "difficulty": 1300, "tags": ["dp", "implementation", "graphs", "shortest paths"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t, n, i, j, k, h;\n\t\n\tscanf(\"%d\", &t);\n\t\n\twhile(t--)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tint a[n][n], f=0;\n\t\t\n\t\tfor(i=0; i<n; i++)\n\t\t{\n\t\t\tfor(j=0; j<n; j++)\n\t\t\t{\n\t\t\t\tscanf(\"%d\", &a[i][j]);\n\t\t\t}\n\t\t}\n\t\tfor(k=0; k<n-1; k++)\n\t\t{\n\t\t\tfor(h=0; h<n-1; h++)\n\t\t\t{\n\t\t\t\tif(a[k][h]==1 && a[k][h+1]==0 && a[k+1][h]==0)\n\t\t\t\t{\n\t\t\t\t\tf=1;\n\t\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f==1){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(f==0)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t, n, i, j, k, h;\n\tchar s[51];\n\t\n\tscanf(\"%d\", &t);\n\t\n\twhile(t--)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tint a[n][n], f=0;\n\t\t\n\t\tfor(i=0; i<n; i++)\n\t\t{\n\t\t\tscanf(\"%s\", s);\n\t\t\t\n\t\t\tfor(j=0; j<n; j++)\n\t\t\t{\n\t\t\t\ta[i][j]=s[j]-'0';\n\t\t\t}\n\t\t}\n\t\tfor(k=0; k<n-1; k++)\n\t\t{\n\t\t\tfor(h=0; h<n-1; h++)\n\t\t\t{\n\t\t\t\tif(a[k][h]==1 && a[k][h+1]==0 && a[k+1][h]==0)\n\t\t\t\t{\n\t\t\t\t\tf=1;\n\t\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f==1){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(f==0)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9198813056379822, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "e644bdff8a874f7b9cd1ea4eedc2e69a", "bug_code_uid": "82dc83649609a28b7592a757ad259f53", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "f80470adef05981ad0a0820bda082fcc", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\n#include <string.h>\nint main()\n{\n\tint n,l,i;\n\tchar a[200][100],b[100];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\t\n\t    strcpy(b,a[i]);\n\t\tl=strlen(b);\n\t\tif(l<=10)\n\t\t{\n\t\t\tprintf(\"%s\\n\",b);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%s%d%s\\n\",b[0],l-2,b[l-3]);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\n#include <string.h>\nint main()\n{\n\tint n,l,i;\n\tchar a[200][200],b[100];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\t\n\t   // strcpy(b,a[i]);\n\t\tl=strlen(a[i]);\n\t\tif(l<=10)\n\t\t{\n\t\t\tprintf(\"%s\\n\",a[i]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%c%d%c\\n\",a[i][0],l-2,a[i][l-1]);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.5497206703910614, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "e04440be7fc04ed4bf140891c7aace46", "bug_code_uid": "173fb5c10370392c9ba24471ffa090d7", "src_uid": "0c7e019e1e955cadacca55b4e823a3e5", "apr_id": "69ec45dc5062ebd0dac4aef9a8b127dc", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tint t,n;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tint a[n],x,i;\n\t\tx=n/2;\n\t\tif(x%2!=0)\n\t\tprintf(\"NO\\n\");\n\t\telse\n\t\t{int y=2;\n\t\tint z=y-1;\n\t\tprintf(\"YES\\n\");\n\t\t\tfor(i=0;i<x;i++)\n\t\t\t{\n\t\t\t\tif(i%2==0)\n\t\t\t\tz=y-1;\n\t\t\t\telse\n\t\t\t\tz=y+1;\n\t\t\t\t\n\t\t\t\ta[i]=y;\n\t\t\t\ta[x+i]=z;\n\t\t\t\ty+=2;\n\t\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d \",a[i]);\n\t\tprintf(\"\\n\");\n\t\t}\n\t\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tint t,n;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tint a[n],x,i;\n\t\tx=n/2;\n\t\tif(x%2!=0)\n\t\tprintf(\"NO\\n\");\n\t\telse\n\t\t{int y=2,sum_e=0,sum_o=0;\n\t\t\n\t\tprintf(\"YES\\n\");\n\t\t\tfor(i=0;i<x;i++)\n\t\t\t{\n\t\t\t\ta[i]=y;\n\t\t\t\ty+=2;\n\t\t\t\tsum_e+=a[i];\n\t\t\t}\n\t\t\ty=1;\n\t\tfor(i=0;i<x;i++)\n\t\t{\n\t\t\ta[i+x]=y;\n\t\t\ty+=2;\n\t\t\tsum_o+=a[i+x];\n\t\t\tif(i==x-2)\n\t\t\ty=sum_e-sum_o;\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d \",a[i]);\n\t\tprintf(\"\\n\");\n\t\t}\n\t\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9747784594410361, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5f736bd83c8c58383f74807c1ed7c6a8", "bug_code_uid": "75638ac39e392ec9f11c54e9fd21e231", "src_uid": "5e449867d9fcecc84333b81eac9b5d92", "apr_id": "3bc743335533da031a6097a9e8893170", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid selectionSort(int a[], int n);\nint main()\n{\n    int n, win[3001], i;\n    scanf(\"%d\", &n);\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &win[i]);\n    }\n    selectionSort(win, n);\n    /*for(i=0; i<n; i++){\n        printf(\"%d\", win[i]);\n    }*/\n    for(i=0; i<n; i++){\n        if(win[i]!=i+1){\n            printf(\"%d\", i+1);\n            return 0;\n        }\n    }\n\n}\n\nvoid selectionSort(int a[], int n){\n    int min, idx, i, t, j;\n    for(j=0; j<n-1; j++){\n        idx = j;\n        min = a[j];\n        for(i=j+1; i<n; i++){\n            if(min>a[i]){\n                min = a[i];\n                idx= i;\n            }\n        }\n        t = a[j];\n        a[j] = a[idx];\n        a[idx] = t;\n\n    }\n}\n", "fixed": "#include<stdio.h>\n\nvoid selectionSort(int a[], int n);\nint main()\n{\n    int n, win[3001], i;\n    scanf(\"%d\", &n);\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &win[i]);\n    }\n    selectionSort(win, n);\n    /*for(i=0; i<n; i++){\n        printf(\"%d\", win[i]);\n    }*/\n    for(i=0; i<n; i++){\n        if(win[i]!=i+1){\n            printf(\"%d\", i+1);\n            return 0;\n        }\n    }\n    printf(\"%d\", i+1);\n    return 0;\n\n}\n\nvoid selectionSort(int a[], int n){\n    int min, idx, i, t, j;\n    for(j=0; j<n-1; j++){\n        idx = j;\n        min = a[j];\n        for(i=j+1; i<n; i++){\n            if(min>a[i]){\n                min = a[i];\n                idx= i;\n            }\n        }\n        t = a[j];\n        a[j] = a[idx];\n        a[idx] = t;\n\n    }\n}\n"}
{"similarity_score": 0.9783080260303688, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4075c4de572b15bf7f4eddbda07e2fb8", "bug_code_uid": "5cde3cd283abaa4f397a2b19528beb61", "src_uid": "08679e44ee5d3c3287230befddf7eced", "apr_id": "a04a85b2c87ddda2c4bbdcbb54487041", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(){\nint n;\nchar a[100],b[100],c[100];\nscanf(\"%d\",&n);\nint i;\nint k;\nint v;\nint t[100];\nfor(i=0;i<n;i++)\n{\n    v=1;\n    scanf(\"%s\",a);\n    scanf(\"%s\",b);\n    scanf(\"%s\",c);\n    for(k=0;k<strlen(a);k++)\n    {\n        if ((a[k]!=c[k])&&(b[k]!=c[k])){\n            v=0;\n            break;}\n\n\n    }\n    t[i]=v;\n}\nfor(i=0;i<n;i++){\n    if(t[i]==1)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n\n}\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(){\nint n;\nchar a[105],b[105],c[105];\nscanf(\"%d\",&n);\nint i;\nint k;\nint v;\nint t[105];\nfor(i=0;i<n;i++)\n{\n    v=1;\n    scanf(\"%s\",a);\n    scanf(\"%s\",b);\n    scanf(\"%s\",c);\n    for(k=0;k<strlen(a);k++)\n    {\n        if ((a[k]!=c[k])&&(b[k]!=c[k])){\n            v=0;\n            break;}\n\n\n    }\n    t[i]=v;\n}\nfor(i=0;i<n;i++){\n    if(t[i]==1)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.9949545913218971, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "73309f3f7ab1c548f03d22da87e4356b", "bug_code_uid": "79787446cc4ce95034a639b638958bfa", "src_uid": "6f5d41346419901c830233b3bf5c9e65", "apr_id": "3e36c0422ab83a4af7bfb0340c0530ec", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\nint n;\nscanf(\"%d\",&n);\nint g[n];int i=0;\nfor(i=0;i<n;i++)\n    scanf(\"%d\",&g[i]);\ndouble a=0.0,b=0.0,c=0.0,e=0.0;double d=0.0;\nfor(i=0;i<n;i++){\n        d=g[i];\n    b=(d+sqrt(d*d-4*d))/2;\n    if(b>=0.0)\n        a=d-b;\n    c=(d-sqrt(d*d-4*d))/2;\n    if(c>=0.0)\n        e=d-b;\n    if(b>=0.0 && a>=0.0)\n        printf(\"Y %.9lf %.9lf\\n\",b,a);\n    else if(c>=0.0 && d>=0.0)\n        printf(\"Y %.9lf %.9lf\\n\",e,c);\n    else\n        printf(\"N\\n\");}\nreturn 0;}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\nint n;\nscanf(\"%d\",&n);\nint g[n];int i=0;\nfor(i=0;i<n;i++)\n    scanf(\"%d\",&g[i]);\ndouble a=0.0,b=0.0,c=0.0,e=0.0;double d=0.0;\nfor(i=0;i<n;i++){\n        d=g[i];\n    b=(d+sqrt(d*d-4*d))/2;\n    if(b>=0.0)\n        a=d-b;\n    c=(d-sqrt(d*d-4*d))/2;\n    if(c>=0.0)\n        e=d-b;\n    if(b>=0.0 && a>=0.0)\n        printf(\"Y %.9f %.9f\\n\",b,a);\n    else if(c>=0.0 && d>=0.0)\n        printf(\"Y %.9f %.9f\\n\",e,c);\n    else\n        printf(\"N\\n\");}\nreturn 0;}"}
{"similarity_score": 0.9467625899280575, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "50fcf25e327afab961a89ca0083997c9", "bug_code_uid": "94c9a077acce9f81d5c3bff8954eb7ee", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "c96052006b5c34f28815216334e6c003", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n//#include<conio.h>\nint main(){\nint n,i,j,c;\nscanf(\"%d\",&n);\nif(n%2==0)\nc=n*n/2;\nelse c=(n*n+1)/2;\nprintf(\"%d\\n\",c);\nfor(i=1;i<=n;i++){\nfor(j=1;j<=n;j++){\nif(i%2!=0){\nif(j%2!=0)\nprintf(\"C\");\nelse printf(\".\");\n}\nelse{\n     if(j%2!=0) printf(\".\");\n     else printf(\"C\");\n     }\n     }\n     printf(\"\\n\");\n     }\n    .// getch();\n     return 0;\n     }\n", "fixed": "#include<stdio.h>\nint main(){\nint n,i,j,c;\nscanf(\"%d\",&n);\nif(n%2==0)\nc=n*n/2;\nelse c=(n*n+1)/2;\nprintf(\"%d\\n\",c);\nfor(i=1;i<=n;i++){\nfor(j=1;j<=n;j++){\nif(i%2!=0){\nif(j%2!=0)\nprintf(\"C\");\nelse printf(\".\");\n}\nelse{\n     if(j%2!=0) printf(\".\");\n     else printf(\"C\");\n     }\n     }\n     printf(\"\\n\");\n     }\n     return 0;\n     }\n"}
{"similarity_score": 0.6107594936708861, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "05e2c9e491e1142ef2cefddbfab2c870", "bug_code_uid": "2622abf13d2bc3f54fa7363f2b36a295", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "945617da867a370ceeb99c33c5e34927", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int y=0,k=0,n=0,i=1;\n    scanf(\"%d\",&y);\n    scanf(\"%d\",&k);\n    scanf(\"%d\",&n);\n    if((i+y)>n){\n        printf(\"%d\",-1);\n        return 0;\n    }\n    for(i=1;(i+y)<=n;i++){\n        if(((i+y)%k)==0){\n            printf(\"%d \",i);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int y=0,k=0,n=0,x=1,notfound=0;\n    scanf(\"%d\",&y);\n    scanf(\"%d\",&k);\n    scanf(\"%d\",&n);\n    x=k-y%k;\n    while((x+y)<=n){\n        printf(\"%d \",x);\n        x+=k;\n        notfound=1;\n    }\n    if(!notfound){\n        printf(\"%d\",-1);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.11482254697286012, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "a6ad66fbe91834e017d351c7efc43565", "bug_code_uid": "21e3151ea0f70158836f83fcfc85bcd8", "src_uid": "59154ca15716f0c1c91a37d34c5bbf1d", "apr_id": "21cf7748ba560910c4ad74f02309960b", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,l,r,sall,sk,i,j,p=0,t,d,numrem,rem,u,s,u1,t1,k1=0,u2,t2,u3,u4;\n    scanf(\"%d %d %d %d %d %d\",&n,&k,&l,&r,&sall,&sk);   \n    d=sk/k;\n    rem=sall-sk;\n    numrem=n-k;\n     t2=rem/numrem;\n    p=rem%numrem;\n    k1=sk%k;\n    for(t1=0;t1<k1;t1++)\n    {\n        printf(\"%d \",d+1);\n    }\n    for(t1=0;t1<k-k1;t1++)\n    {\n        printf(\"%d \",d);\n    }\n    if(n-k!=0)\n    {\n        for(s=0;s<p;s++)\n        {\n            printf(\"%d \",t2+1);\n        }\n        for(s=0;s<n-k-p;s++)\n        {\n            printf(\"%d \",t2);\n        }   \n    }\n    printf(\"\\n\");\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint n,k,r,l,sall,sk,d,k1,i,t2,p,j,u,s;\nscanf(\"%d%d%d%d%d%d\",&n,&k,&l,&r,&sall,&sk);\nd=sk/k;\nk1=sk%k;\nfor(i=0;i<k1;i++)\n{\nprintf(\"%d \",d+1);\n}\nfor(j=0;j<k-k1;j++)\n{\nprintf(\"%d \",d);\n}\nif(n-k!=0)\n{\n t2=(sall-sk)/(n-k);\n p=(sall-sk)%(n-k);\nfor(u=0;u<p;u++)\n{\nprintf(\"%d \",t2+1);\n}\nfor(s=0;s<n-k-p;s++)\nprintf(\"%d \",t2);\n}\nprintf(\"\\n\");\n}\n"}
{"similarity_score": 0.9966996699669967, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1b94ce6a02802d9531b51cc5b22a9606", "bug_code_uid": "6ca4f0a75fbcdfc6ba126fcb85feb9a7", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "37b33231718a9416f225a36e0245aa22", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint n;\nint arr[3];\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=0;i<3;i++){\n        for(int j=n-1;j>=i;j--){\n            int num;\n            scanf(\"%d\",&num);\n            arr[i]+=m;\n        }\n    }\n    printf(\"%d\\n\",arr[0]-arr[1]);\n    printf(\"%d\\n\",arr[1]-arr[2]);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint n;\nint arr[3];\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=0;i<3;i++){\n        for(int j=n-1;j>=i;j--){\n            int num;\n            scanf(\"%d\",&num);\n            arr[i]+=num;\n        }\n    }\n    printf(\"%d\\n\",arr[0]-arr[1]);\n    printf(\"%d\\n\",arr[1]-arr[2]);\n    return 0;\n}\n"}
{"similarity_score": 0.0420032310177706, "equal_cnt": 5, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "70b75085c1d9bb7949b959852dab731a", "bug_code_uid": "9423362c7358ee25b59d8f1e1f322d3b", "src_uid": "8e4194b356500cdaacca2b1d49c2affb", "apr_id": "1498fa81e7ad29efa4cd5f182507c642", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <bits/stdc++.h>\r\n#define long long int \r\nusing namespace std;\r\nint main(){\r\n    int t,n;\r\n    cin>>t;\r\n    while(t--){\r\ncin>>n;\r\nint k = n+1/10;\r\nif(n==9){\r\n    cout<<1<<endl;\r\n}\r\nelse if(n >= 10){\r\ncout<<k<<endl;\r\n}\r\nelse\r\n{\r\n    cout<<0<<endl;\r\n}\r\n \r\n \r\n    }\r\n}", "fixed": "#include\"stdio.h\"\r\nint main() {\r\n\tint T;\r\n\tlong  int n,res;\r\n//\tprintf(\"Enter T\\n\");\r\n\tscanf(\"%d\",&T);\r\n\tfor(int i=0;i<T;i++) {\r\n\t//\tprintf(\"Enter n\\n\");\r\n\t\tscanf(\"%ld\",&n);\r\n\t\tif(n==9 || n==10) {\r\n\t\t\tprintf(\"1\\n\");\r\n\t\t}\r\n\t\telse if(n>10) {\r\n        res = (n+1)/10;\r\n\t\tprintf(\"%ld\\n\",res);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tprintf(\"0\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9896049896049897, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5939ae285a4a22d2c34e0f74850102d9", "bug_code_uid": "af7c194393387642341f55e552ba6314", "src_uid": "1f435ba837f59b007167419896c836ae", "apr_id": "2ab8ff4db6415991edfc8d23944c2913", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\n\nint main(int argc, char *argv[]) {\n\t\n\tlong int a,b,number;\n\tint k,t,i ;\n\tscanf(\"%d\",&t);\t\n\tfor(i=0;i<t;i++){\n\t\n\t\tscanf(\"%ld\",&a);\n\t\tscanf(\"%ld\",&b);\n\t\tscanf(\"%d\",&k);\n\t\tif(k%2==0){\n\t\t\t\n\t\t\tnumber=(k/2)*(a-b);\n\t\t\t\n\t\t}\n\t\telse{\n\t\t\t\n\t\t\tk++;\n\t\t\tnumber=(k/2)*(a-b)+b;\n\t\t\t\n\t\t}\n\t\t\n\t\tprintf(\"%ld \\n\",number);\n\t\t\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\n\nint main(int argc, char *argv[]) {\n\t\n\tlong long a,b,number;\n\tint k,t,i ;\n\tscanf(\"%d\",&t);\t\n\tfor(i=0;i<t;i++){\n\t\n\t\tscanf(\"%lld\",&a);\n\t\tscanf(\"%lld\",&b);\n\t\tscanf(\"%d\",&k);\n\t\tif(k%2==0){\n\t\t\t\n\t\t\tnumber=(k/2)*(a-b);\n\t\t\t\n\t\t}\n\t\telse{\n\t\t\t\n\t\t\tk++;\n\t\t\tnumber=(k/2)*(a-b)+b;\n\t\t\t\n\t\t}\n\t\t\n\t\tprintf(\"%lld \\n\",number);\n\t\t\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8138195777351248, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "9445f6826329fb833ca4c0d6a60341e9", "bug_code_uid": "d373006cddbe1a3f12218c2eb6d6d1c8", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "f55f8ca95c94845d18594ddfb03ada49", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain(){\n  int  Petya, Vasya, Tonya,n,i,count=0;\n  scanf(\"%d\",&n);\n  for(i=1;i<=n;i++){\n      scanf(\"%d %d %d\",&Petya,&Vasya,&Tonya);\n      if((Petya+Vasya+Tonya)>=2){\n         count++;\n      }\n  }\n  printf(\"%d\\n\",count);\n}\n", "fixed": "#include<stdio.h>\nint main(){\n  int  Petya, Vasya, Tonya,n,i,sum=0,count=0;\n  scanf(\"%d\",&n);\n\n  for(i=1;i<=n;i++){\n      scanf(\"%d %d %d\",&Petya,&Vasya,&Tonya);\n      sum=Petya+Vasya+Tonya;\n      if(sum>=2){\n         count++;\n      }\n  }\n  printf(\"%d\\n\",count);\n  \n  return 0;\n}\n"}
{"similarity_score": 0.8268156424581006, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "b22b5214cbe661d6bcb49431543c82a9", "bug_code_uid": "b8758a2dda54512746000e3c7db448cd", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "cc94ee2a9f316e30fd7aa5e54747d038", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int array[101],array1[101];\n    int a,b,m,n,i;\n    scanf(\"%d %d %d %d\",&a,&b,&m,&n);\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\",&array[i]);\n    }\n    for(i=0;i<b;i++)\n    {\n        scanf(\"%d\",&array1[i]);\n    }\n    if(array[m-1]<array1[b-n])printf(\"YES\");\n\n    else printf(\"NO\");\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int array[100001],array1[100001];\n    long long int a,b,m,n,i;\n    scanf(\"%I64d %I64d %I64d %I64d\",&a,&b,&m,&n);\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%I64d\",&array[i]);\n    }\n    for(i=0;i<b;i++)\n    {\n        scanf(\"%I64d\",&array1[i]);\n    }\n    if(array[m-1]<array1[b-n])printf(\"YES\");\n\n    else printf(\"NO\");\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.784966112138016, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "03db44a351241ea0bd2fea7f0857f782", "bug_code_uid": "fb4a32a32d261472d5cd41cf3b30fcfe", "src_uid": "dd098a17343a02fa5dc0d2d6cea853c7", "apr_id": "dae3bf60e846375018c9476aef04d12d", "difficulty": 1100, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "char c[200001];\r\nint main()\r\n{\r\n    int n,i,cnt,fn,k;\r\n    scanf(\"%d\",&n);\r\n    while (n--) {\r\n        int a[26] = {0};\r\n        scanf(\"%s\",c); \r\n        i = cnt = fn = 0;\r\n        for (; c[i] != '\\0'; i++) {\r\n            cnt += a[c[i]-'a'] == 0;\r\n            a[c[i]-'a']++;\r\n        } k = 0; int pos[26];\r\n        for (int m = 0; m < 26; m++) pos[m] = -1;\r\n        for (int j = 0; j < 26; j++) a[j] = k;\r\n        for (int l = 0; l < i; l++) {\r\n            if (pos[c[l]-'a']==-1) pos[c[l]-'a']= l;\r\n            else {\r\n                int cur = 0;\r\n                for (int p = pos[c[l]-'a'] + 1; p < l; p++) {\r\n                   if (a[c[p]-'a'] == k) {\r\n                       cur++; a[c[p]-'a']++;\r\n                   }\r\n                } k++;\r\n                if (cur != cnt-1)  {\r\n                    fn = 1; break;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%s\\n\", fn ? \"NO\" : \"YES\");\r\n    }\r\n}", "fixed": "char c[200001];\r\nint main()\r\n{\r\n    int n,i,cnt,fn,k;\r\n    scanf(\"%d\",&n);\r\n    while (n--) {\r\n        int a[26] = {0};\r\n        scanf(\"%s\",c); \r\n        i = cnt = fn = 0;\r\n        for (; c[i] != '\\0'; i++) {\r\n            cnt += a[c[i]-'a'] == 0;\r\n            a[c[i]-'a']++;\r\n        } k = 0; int pos[26];\r\n        for (int m = 0; m < 26; m++) pos[m] = -1;\r\n        for (int j = 0; j < 26; j++) a[j] = k;\r\n        for (int l = 0; l < i; l++) {\r\n            if (pos[c[l]-'a']==-1) pos[c[l]-'a']= l;\r\n            else {\r\n                if (l-pos[c[l]-'a']-1 != cnt-1)  { fn = 1; break; }\r\n                pos[c[l]-'a'] = l;\r\n            }\r\n        }\r\n        printf(\"%s\\n\", fn ? \"NO\" : \"YES\");\r\n    }\r\n}\r\n"}
{"similarity_score": 0.7997407647440052, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "a7685f2321dab2d242e38cab697e2c10", "bug_code_uid": "bb27ee9fa93483a6e63a38e6022a0ec2", "src_uid": "5ebb0ee239d68ea33d9dac2d0bdd5f4e", "apr_id": "80f5a91b65f97fe1c5a59bc9ea71b23c", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "bitmasks", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\n\nint main()\n{\n\tint n, m, k;\n\tint army;\n\tint** binary;\n\tint count = 0;\n\tint friends = 0;\n\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\t\n\tbinary = new int*[m + 1];\n\tfor (int t = 0; t < m + 1; t++) {\n\t\tbinary[t] = new int[10];\n\t}\n\tfor (int t = 0; t < m + 1; t++) {\n\t\tfor (int u = 0; u < 10; u++) {\n\t\t\tbinary[t][u] = NULL;\n\t\t}\n\t}\n\n\n\tfor (int i = 0; i < m+1; i++)\n\t{\n\t\tbinary[i] = new int[n];\n\t\tscanf(\"%d\", &army);\n\t\tfor (int j = n-1; j >=0; j--)\n\t\t{\n\t\t\tif (army >= pow(2, j))\n\t\t\t{\n\t\t\t\tbinary[i][n - 1 - j] = 1;\n\t\t\t\tarmy -= pow(2, j);\n\t\t\t}\n\t\t\telse\n\t\t\t\tbinary[i][n - 1 - j] = 0;\n\t\t}\n\t}\n\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tfor (int j = 0; j < n; j++)\n\t\t{\n\t\t\tif (binary[i][j] != binary[m][j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (count <= k)\n\t\t{\n\t\t\tfriends++;\n\t\t}\n\t\tcount = 0;\n\t}\n\n\tprintf(\"%d\", friends);\n\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\n\nint main()\n{\n\tint n, m, k;\n\tint army;\n\tint** binary;\n\tint count = 0;\n\tint friends = 0;\n\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\t\n\tbinary = (int**) malloc(sizeof(int*)*(m+1));\n\n\n\tfor (int i = 0; i < m+1; i++)\n\t{\n\t\tbinary[i] = (int*) malloc(sizeof(int)*n);\n\t\tscanf(\"%d\", &army);\n\t\tfor (int j = n-1; j >=0; j--)\n\t\t{\n\t\t\tif (army >= pow(2, j))\n\t\t\t{\n\t\t\t\tbinary[i][n - 1 - j] = 1;\n\t\t\t\tarmy -= pow(2, j);\n\t\t\t}\n\t\t\telse\n\t\t\t\tbinary[i][n - 1 - j] = 0;\n\t\t}\n\t}\n\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tfor (int j = 0; j < n; j++)\n\t\t{\n\t\t\tif (binary[i][j] != binary[m][j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (count <= k)\n\t\t{\n\t\t\tfriends++;\n\t\t}\n\t\tcount = 0;\n\t}\n\n\tprintf(\"%d\", friends);\n\n\n    return 0;\n}"}
{"similarity_score": 0.7709090909090909, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "f3364e50ff07af1cc242220f4a2ed176", "bug_code_uid": "9cdb7e9d3730f8d60026262496a80e8f", "src_uid": "62a672fcaee8be282700176803c623a7", "apr_id": "2108499ce64c8e5f1ca3d31d2b61ce22", "difficulty": 1200, "tags": ["constructive algorithms", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n\tchar a[100100],b[100];\n\tscanf(\"%s %s\",a,b);\n\tint i,j,q,w,count=0,flag=0;\n\tq=strlen(a);\n\tw=strlen(b);\n\tfor(i=0;i<q;i++)\n\t{\n\t\tfor(j=0;j<w;j++)\n\t\t{\n\t\t\tif(a[i+j]!=b[j])\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==0)\n\t\t\tcount+=1;\n\t\tflag=0;\n\n\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n\tchar a[100100],b[100];\n\tscanf(\"%s %s\",a,b);\n\tint i,j,q,w,count=0,flag=0,t=0;\n\tq=strlen(a);\n\tw=strlen(b);\n\t//if(w<=q)\n\t//{\n\tfor(i=0;i<q;i++)\n\t{\n\t\tfor(j=0;j<w;j++)\n\t\t{\n\t\t\tif(i+j>=q)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tt=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(a[i+j]!=b[j])\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==0)\n\t\t{\n\t\t\tcount+=1;\n\t\t\ti=i-1+w;\n\t\t}\n\t\tflag=0;\n\t\tif(t==1)\n\t\t\tbreak;\n\n\t}\n\t//\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n\n}\n"}
{"similarity_score": 0.9959677419354839, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "092dcad6a7f0904570e34117d8e3ae47", "bug_code_uid": "8b95a085cff24f854ef9494005b9dd8a", "src_uid": "854c561539596722b1dbc8f99cbdca78", "apr_id": "5f13325f6b52d083c4575f567b0cb014", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long n, m;\n    scanf(\"%ld %ld\", &n, &m);\n    if (((n * 3) < m) || ((n - m) > 1)){\n        printf(\"-1\\n\");\n        return 0;\n    }\n    while ((n != 0) || (m != 0)){\n        if (((m - n) > 1) && n){\n            printf(\"110\");\n            m -= 2; n--;\n        }else if ((m - n) > 1){\n            printf(\"11\");\n            m -= 2;\n        }else if (((m - n) >= 0) && n){\n            printf(\"10\");\n            m--; n--;\n        }else if ((m - n) >= 0){\n            printf(\"1\");\n            m--;\n        }else if (((m - n) < 0) && m){\n            printf(\"01\");\n            m--; n--;\n        }else {\n            printf(\"0\");\n            n--;\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long n, m;\n    scanf(\"%ld %ld\", &n, &m);\n    if (((n * 2 + 2) < m) || ((n - m) > 1)){\n        printf(\"-1\\n\");\n        return 0;\n    }\n    while ((n != 0) || (m != 0)){\n        if (((m - n) > 1) && n){\n            printf(\"110\");\n            m -= 2; n--;\n        }else if ((m - n) > 1){\n            printf(\"11\");\n            m -= 2;\n        }else if (((m - n) >= 0) && n){\n            printf(\"10\");\n            m--; n--;\n        }else if ((m - n) >= 0){\n            printf(\"1\");\n            m--;\n        }else if (((m - n) < 0) && m){\n            printf(\"01\");\n            m--; n--;\n        }else {\n            printf(\"0\");\n            n--;\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.48074921956295524, "equal_cnt": 11, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "1249d148779a89e41acccc6b17ac29f3", "bug_code_uid": "66776a596b2237af9c1fab5bb2b394c2", "src_uid": "91be5db48b44a44adff4c809ffbb8e3e", "apr_id": "62fa0a8ddaa904e55c42464f6b8c8639", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\ntypedef int ll;\n\nint main()\n{\n\tll d,c;\n\tint n,s,max=-1,i,a;\n\tscanf(\"%d%d\",&n,&s);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&d,&c);\n\t\tif(d<s)\n\t\t{\n\t\t\ta=100-c;\n\t\t\tif(a>max)\n\t\t\t{\n\t\t\t\tmax=a;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",max);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\ntypedef int ll;\n\nint main()\n{\n    ll d,c;\n    int n,s,max=-1,i,a;\n    scanf(\"%d%d\",&n,&s);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&d,&c);\n        if(d<s)\n        {\n            if(c>0)\n            {\n                a=100-c;\n            }\n            else\n            {\n                a=0;\n            }\n            if(a>max)\n            {\n                max=a;\n            }\n        }\n        else if(d==s)\n        {\n            if(c==0)\n            {\n                if(c>max)\n                {\n                    max=c;\n                }\n            }\n        }\n    }\n    printf(\"%d\\n\",max);\n    return 0;\n}"}
{"similarity_score": 0.7930232558139535, "equal_cnt": 16, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "c082fe9a51aeb53524d02bdc21b6bda4", "bug_code_uid": "a4c7ae3f6bf3e7f0a721a25b2b1dd11c", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "7845577f49b2eeb6c1203463ac510d2c", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n\n    int n,i,sum=0;\n    scanf(\"%d\",&n);\n    string str;\n    for (i=1;i<=n;i++){\n    scanf(\"%s\",str);\n    if (str==\"Tetrahedron\"){\n    sum=sum+4;\n    }\n    else if (str==\"Cube\"){\n    sum=sum+6;\n    }\n    else if (str==\"Octahedron\"){\n    sum=sum+8;\n    }\n    else if (str==\"Dodecahedron\"){\n    sum=sum+12;\n    }\n    else if (str==\"Icosahedron\"){\n    sum=sum+20;\n    }\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint main ()\n{\n\n    int n,i,sum;\n    scanf(\"%d\",&n);\n    char x[20];\n    sum=0;\n    for (i=0;i<n;i++){\n    scanf(\"%s\",x);\n    if (x[0]=='T'){\n    sum=sum+4;\n    }\n    else if (x[0]=='C'){\n    sum=sum+6;\n    }\n    else if (x[0]=='O'){\n    sum=sum+8;\n    }\n    else if (x[0]=='D'){\n    sum=sum+12;\n    }\n    else if (x[0]=='I'){\n    sum=sum+20;\n    }\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.7535410764872521, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "94ad685bc765d2cbfafa0ed99f07cffe", "bug_code_uid": "4cd52c66d6763fde4d0a0f0a6ccaa7d4", "src_uid": "a20ca4b053ba71f6b2dc05749287e0a4", "apr_id": "26a0c3153d8852b5f56c7b404518e423", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n, h1, h2, num = 0;\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &h1);\n\tif( n == 1 ){\n\t\tprintf(\"%d\\n\", h1+1);\n\t\treturn 0;\n\t}\n\tn--;\n\tif( 1 == h1 )\n\t\tnum += h1;\n\telse\n\t\tnum += h1 + 1;\n\twhile( n-- ){\n\t\tscanf(\"%d\", &h2);\n\t\tif( h1 > h2 ){\n\t\t\tnum += 2;\n\t\t\th1 = h2;\n\t\t}\n\t\telse{\n\t\t\tnum += h1 + h2 + 1;\n\t\t\th1 = h2;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", num);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong n, h1, h2, num = 0;\n\tscanf(\"%ld\", &n);\n\tscanf(\"%ld\", &h1);\n\tif( n == 1 ){\n\t\tprintf(\"%ld\\n\", h1+1);\n\t\treturn 0;\n\t}\n\tn--;\n\tnum += h1 + 1;\n\twhile( n-- ){\n\t\tscanf(\"%ld\", &h2);\n\t\tif( h1 > h2 ){\n\t\t\tnum += h1 - h2 + 2;\n\t\t}\n\t\telse{\n\t\t\tnum += h2 - h1 + 2;\n\t\t}\n\t\th1 = h2;\n\t}\n\tprintf(\"%ld\\n\", num);\n\treturn 0;\n}"}
{"similarity_score": 0.7648183556405354, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "491f72511899912fed94f019b4676a2c", "bug_code_uid": "1c9bab32e11070ea126b3796a1626cba", "src_uid": "daabf732540e0f66d009dc211c2d7b0b", "apr_id": "5dd28ea3f5259bed86e4e84030c4d8bf", "difficulty": 1500, "tags": ["number theory", "brute force", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint b[100009];\n\nint main()\n{\n\tint j, count = 0, i, n, x, a;\n\n\tscanf(\"%d %d\", &n, &x);\n\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &a);\n\t\tcount = count + b[a ^ x];\n\t\tb[a]++;\n\t}\n\n\tprintf(\"%d\\n\", count);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint b[1000009];\n\nint main()\n{\n\tlong long int j, count = 0, i, n, x, a;\n\n\tscanf(\"%lld %lld\", &n, &x);\n\n\tfor(i=0; i<n; i++)\n\t\tb[i]=0;\n\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d\", &a);\n\t\tif (b[a^x])\n\t\t\tcount = count + b[a ^ x];\n\t\tb[a]++;\n\t}\n\n\tprintf(\"%lld\\n\", count);\n\treturn 0;\n}\n"}
{"similarity_score": 0.33202614379084966, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "9c31905d4ea86ad3ec28d1fccc365720", "bug_code_uid": "a809bfd35fea27550d01d8d516ac9a4a", "src_uid": "64b597a47106d0f08fcfad155e0495c3", "apr_id": "74273bb77b431cfb1feb1f5ae3912732", "difficulty": 900, "tags": ["graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,s;\n    scanf(\"%d %d\",&n,&s);\n    int a[n+1],b[n+1],i,flag=0;\n    for(i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=1;i<=n;i++)\n    scanf(\"%d\",&b[i]);\n    if(a[1]==0||(b[s]==0&&a[s]==0))\n    flag=0;\n    else{\n        i=s;\n        while(a[i]!=1)\n        i++;\n        while(i!=s&&a[i]==1)\n        i--;\n    }if(i==s) flag=1;\n    if(flag) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main ()\n{\n\tint n,s,i,cou=0;\n\tscanf(\"%d %d\",&n,&s);\n\tint a[n],b[n];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&b[i]);\n\tfor(i=s;i<n;i++)\n\tif ((a[i]==1)&&(b[i]==1))\n\t\tcou=1;\n\tif ((a[0]==1) && ((a[s-1]==1)|| ((b[s-1]==1) &&(cou==1))))\n\t\tprintf(\"Yes\");\n\t\telse\n\t\tprintf(\"NO\");\n\treturn 0;\n}"}
{"similarity_score": 0.3702770780856423, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "840d88effd9d74e5586d7f5e6a690982", "bug_code_uid": "ae38c26343258fcd06ca6dd9b1735613", "src_uid": "046900001c7326fc8d890a22fa7267c9", "apr_id": "6b26c338773d38d00d073ed0ccb4a2d5", "difficulty": 900, "tags": ["games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nmain()\n{\n    int t, i, len;\n    char s[101];\n\n    scanf(\"%d \", &t);\n\n    for(i=0; i<t; i++)\n    {\n        gets(s);\n\n        len = strlen(s);\n\n        if(((len/2) % 2) != 0 ) printf(\"DA\");\n        else if(((len/2) % 2) == 0) printf(\"NET\");\n\n        printf(\"\\n\");\n\n    }\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int t, len, one, zero, temp;\n    char a[101];\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        one=0;\n        zero=0;\n        scanf(\"%s\", &a);\n        len = strlen(a);\n        for(int i=0; i<len; i++)\n        {\n            if(a[i]=='1') one++;\n            else if(a[i]=='0') zero++;\n        }\n        if(one<zero) temp=one;\n        else temp=zero;\n        if(temp%2==0) printf(\"NET\\n\");\n        else printf(\"DA\\n\", temp);\n    }\n}\n"}
{"similarity_score": 0.9972067039106145, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "725adb7f4fe6cc8ff90dae80e567e935", "bug_code_uid": "bcd6299c5bf3b0d06166c4803b317b6e", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "afc88c22766325254053d80232df1bba", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h> \n#include <stdlib.h>\n #include <string.h>\n #include<math.h>\n  int main()\n{\nint n,x,z,y,p,t,m,s;\nscanf(\"%d\",&n);\nif(n%2==0)\n{\nx=n/3;\nz=x*2;\ny=n-z;\nprintf(\"%d %d\\n\",z,y);\nreturn 0;\n}\nif(n%2!=0)\n{\n\tif(n%3==0)\n\t{\n\t\tp=3*2;\n\t\tt=n-p;\n\t\tprintf(\"%d %d\\n\",p,t);\n\t\t\n\t}\n\telse\n\t{\n\t\tm=3*2+2;\n\t\ts=n-m;\n\t\tprintf(\"%d %d\\n\",m,s);\n\t\t\n\t}\n\t\n}\n\treturn 0;\n\t}\n\t\n\t", "fixed": "#include <stdio.h> \n#include <stdlib.h>\n #include <string.h>\n #include<math.h>\n  int main()\n{\nint n,x,z,y,p,t,m,s;\nscanf(\"%d\",&n);\nif(n%2==0)\n{\nx=n/3;\nz=x*2;\ny=n-z;\nprintf(\"%d %d\\n\",z,y);\nreturn 0;\n}\nif(n%2!=0)\n{\n\tif(n%3==0)\n\t{\n\t\tp=3*2;\n\t\tt=n-p;\n\t\tprintf(\"%d %d\\n\",p,t);\n\t\t\n\t}\n\telse\n\t{\n\t\tm=3*2+3;\n\t\ts=n-m;\n\t\tprintf(\"%d %d\\n\",m,s);\n\t\t\n\t}\n\t\n}\n\treturn 0;\n\t}\n\t\n\t"}
{"similarity_score": 0.6058631921824105, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "d051843233903c83b352b828a30efaa6", "bug_code_uid": "3618513feece36860b847155b8dabdb5", "src_uid": "31064ad58b7802c32b3c51137057b6f5", "apr_id": "83b091afd30c613cba8431bbf4b3dcae", "difficulty": 1500, "tags": ["binary search", "brute force", "math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<math.h>\r\n\r\nint main(void) {\r\n\t// your code goes here\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t    int i,j,count=0;\r\n\t    double n,t;\r\n\t    scanf(\"%lf\",&n);\r\n\t    for(i=2;i<=n;i++)\r\n\t    {\r\n\t       t=sqrt(2*i-1);//printf(\"%lf  \",t);\r\n\t       if(t*t==(double)2*i-1 && t==(int)t)count++;\r\n\t    }\r\n\t    printf(\"%d\\n\",count);\r\n\t    \r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include<math.h>\r\n\r\nint main(void) {\r\n\t// your code goes here\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t    int n,i;\r\n\t    scanf(\"%d\",&n);\r\n\t    i=sqrt(2*n-1);\r\n\t    printf(\"%d\\n\",(i-1)/2);\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.6496815286624203, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "51c238a380cebfc0b5392ff4b9ff4b0b", "bug_code_uid": "dc63bd0ceae81923fb6793db16704745", "src_uid": "3b0fb001333e53da458e1fb7ed760e32", "apr_id": "b30eaa6f3eb369241703a89abfe64523", "difficulty": 1600, "tags": ["data structures", "constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a[100005];\n\tint n,m,k,l,j,i,t;\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tint step=0;\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif(a[j]==t)\n\t\t\t{\n\t\t\t\tl=j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tstep=step+l/k+1;\n\t\tif(l>1)\n\t\t{\n\t\t\tint temp=a[l];\n\t\t\ta[l]=a[l-1];\n\t\t\ta[l-1]=temp;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",step);\n\treturn 0;\n}\n\t\t\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a[100005],c[100005];\n\tint n,m,k,l,j,i;\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tc[a[i]]=i;\n\t}\n\tlong long int step=0;\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&l);\n\t\tstep=step+(c[l]/k)+1;\n\t\tj=c[l];\n\t\tif (j>0)\n\t\t{\t\n\t\t\tint temp=a[j];\n\t\t\ta[j]=a[j-1];\n\t\t\ta[j-1]=temp;\n\t\t\t\n\t\t\tc[l]--;\n\t\t\tc[a[j]]++;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",step);\n\treturn 0;\n}\n\n\t\t\n\n"}
{"similarity_score": 0.910958904109589, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "939df2ad9da3a3a4b385f7f5d5952d94", "bug_code_uid": "463dc4721dfa4afe87ca90c6ce9d5b31", "src_uid": "3674a98de27b9bd2c8eb951da72996f5", "apr_id": "228cef9300bfabca4dccd28c7975e631", "difficulty": 1000, "tags": ["data structures", "constructive algorithms", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\n\tint a,b;\n\tscanf(\"%d\",&a);\n\tfor(int i=0;i!=a;i++){\n\t\tscanf(\"%d\",&b);\n\t\tlong long int arr[b+1],ar[b+1];\n\t\tfor(int x=0;x!=b;x++){\n\t\t\tscanf(\"%d\",&arr[x]);\n\t\t\tar[x]=pow(2,arr[x]);\n\t\t}\n\t\tlong long int num=0,num1=0;\n\t\tint fin=0;\n\t\tfor(int x=0;x!=b;x++){\n\t\t\tfor(int w=x+1;w!=b;w++){\n\t\t\t\tif(ar[x]==ar[w]){\n\t\t\t\t\tfin=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\t\n\t\t\t}\n\t\t\tif(fin==1) break;\n\t\t}\n\t\tif(fin==1) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\n\tint a,b;\n\tscanf(\"%d\",&a);\n\tfor(int i=0;i!=a;i++){\n\t\tscanf(\"%d\",&b);\n\t\tint arr[b];\n\t\tfor(int x=0;x!=b;x++){\n\t\t\tscanf(\"%d\",&arr[x]);\n\t\t}\n\t\tint fin=0;\n\t\tfor(int x=0;x!=b;x++){\n\t\t\tfor(int w=x+1;w!=b;w++){\n\t\t\t\tif(arr[x]==arr[w]){\n\t\t\t\t\tfin=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\t\n\t\t\t}\n\t\t\tif(fin==1) break;\n\t\t}\n\t\tif(fin==1) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.5883940620782726, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "a74a93eed6b0de10a098e2c8941c9f3a", "bug_code_uid": "c0e616ee28dbfbf803d564dbcfc09e87", "src_uid": "8fcec28fb4d165eb58f829c03e6b31d1", "apr_id": "40dcf0d7146da29d7e5c1bd0c960876c", "difficulty": 1500, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n\tlong long l, r, k;\n\tscanf(\"%I64d %I64d %I64d\", &l, &r, &k);\n\t\n\tlong long v = 1;\n\tint first = 1;\n\twhile (v <= r) {\n\t\tif (v >= l) {\n\t\t\tif (!first)\n\t\t\t\tprintf(\" \");\n\t\t\telse\n\t\t\t\tfirst = 0;\n\t\t\t\n\t\t\tprintf(\"%I64d\", v);\n\t\t}\n\t\t\n\t\tv *= k;\n\t}\n\t\n\tif (first)\n\t\tprintf(\"%d\", -1);\n\telse\n\t\tprintf(\"\\n\");\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n\tlong long l, r, k;\n\tscanf(\"%I64d %I64d %I64d\", &l, &r, &k);\n\t\n\tlong long cur = k;\n\tint found = 0;\n\t\n\tif (1 >= l) {\n\t\tfound = 1;\n\t\tprintf(\"%d \", 1);\n\t}\n\t\n\twhile (cur <= r) {\n\t\tif (cur >= l) {\n\t\t\tprintf(\"%I64d \", cur);\n\t\t\tfound = 1;\n\t\t}\n\t\t\n\t\tif (cur > r / k)\n\t\t\tbreak;\n\t\t\n\t\tcur *= k;\n\t}\n\t\n\tif (!found)\n\t\tprintf(\"%d\", -1);\n\t\n\tprintf(\"\\n\");\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.5207253886010362, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "65eb5a727afbb04fd869af403fe0326b", "bug_code_uid": "1770d427a7280afa3e41c715016aedf8", "src_uid": "8f0172f742b058f5905c0a02d79000dc", "apr_id": "41b7c27fd0bba9bdc5d2b97e590c3bf6", "difficulty": 1200, "tags": ["two pointers", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n\nint n, s[102400];\nint main()\n{\n    int a, b, c, i;\n    scanf(\"%d\",&n);\n    for (i = 1; i <= n; ++i){\n        scanf(\"%d\", &c);\n        s[i] = s[i-1] + c;\n    }\n    for (i = 1, c = 0; i <= n; ++i){\n        if ((c + s[i]) * 2 <= s[n])\n            c += s[i];\n        else break;\n    }\n    a = i;\n    b = n-i;\n    if (n > 1 && a == 0){\n        a = 1;\n        b = n-1;\n    }\n    printf(\"%d %d\\n\", a, b);\n    return 0;\n}", "fixed": "\n#include <stdio.h>\n\nint n, s[102400];\nint main()\n{\n    int a, b, c, i;\n    scanf(\"%d\",&n);\n    for (i = 1; i <= n; ++i){\n        scanf(\"%d\", &c);\n        s[i] = s[i-1] + c;\n    }\n    for (i = 1; i <= n && s[i] << 1 <= s[n]; ++i) ;\n    a = i-1;\n    if (s[a] <= s[n] - s[a+1]) a++;\n    b = n-a;\n    printf(\"%d %d\\n\", a, b);\n    return 0;\n}"}
{"similarity_score": 0.8646408839779005, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "eda74765396c7853daebdf25c4fd5de3", "bug_code_uid": "362680d5c8a98d48564ca0310b4c9fc1", "src_uid": "85f90533a9840e944deef9f3b4229cb8", "apr_id": "a8e21470704f53c41905d4e75ec9b55b", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int i,k,a[27],d,max=0,s=0;\n    char st[1005];\n    gets(st);\n    scanf(\"%d\",&k);\n    for(i=0;i<26;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<strlen(st);i++)\n    {\n        d=st[i]-'a';\n        s+=a[d]*(i+1);\n        if(a[d]>max)\n            max=a[d];\n    }\n    s+=max*(((i+k)*(i+k+1))/2-(i*(i+1))/2);\n    printf(\"%d\",s);\n}\n\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int i,k,a[27],d,max=0,s=0;\n    char st[1005];\n    gets(st);\n    scanf(\"%d\",&k);\n    for(i=0;i<26;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]>max)\n            max=a[i];\n    }\n    for(i=0;i<strlen(st);i++)\n    {\n        d=st[i]-'a';\n        s+=a[d]*(i+1);\n    }\n    s+=max*(((i+k)*(i+k+1))/2-(i*(i+1))/2);\n    printf(\"%d\",s);\n}\n\n"}
{"similarity_score": 0.983016983016983, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "56aedbfe069e30220d921edf1d39615e", "bug_code_uid": "230abc2dc47d2b03d871611348560c63", "src_uid": "8afcdfaabba66fb9cefc5b6ceabac0d0", "apr_id": "f920e669a1d6a28f5ed9844ef8288a25", "difficulty": 1200, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{       \n        long long int t,n,i,j,grid[305][305],k,m,flag;\n        scanf(\"%lld\",&t);\n        for(i=0;i<t;i++)\n        {\n\t\tflag=0;\n                scanf(\"%lld%lld\",&n,&m);\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tfor(k=0;k<m;k++)\n\t\t\t{\n\t\t\t\tscanf(\"%lld\",&grid[j][k]);\n\t\t\t\tif(j==0||j==n-1)\n\t\t\t\t{\n\t\t\t\t\tif(grid[j][k]>3)\n\t\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t\tif(k==0||k==m-1)\n\t\t\t\t{\n\t\t\t\t\tif(grid[j][k]>3)\n\t\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(grid[0][0]>2||grid[0][m-1]>2||grid[n-1][0]>2||grid[n-1][m-1]>2)\n\t\t\tflag=1;\n\t\tif(flag==1)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tfor(j=0;j<n;j++)\n                \t{\t\n                \t        for(k=0;k<m;k++)\n                \t        {\n                \t        \tif(j==0||j==n-1)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(k==0||k==m-1)\n\t\t\t\t\t\t\tprintf(\"2 \");\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tprintf(\"3 \");\n\t\t\t\t\t}\n\t\t\t\t\telse if(k==0||k==m-1)\n\t\t\t\t\t{\n\t\t\t\t\t\tprintf(\"3 \");\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tprintf(\"4 \");\n                \t        }\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n        }\n\n} \n", "fixed": "#include<stdio.h>\nint main()\n{       \n        long long int t,n,i,j,grid[305][305],k,m,flag;\n        scanf(\"%lld\",&t);\n        for(i=0;i<t;i++)\n        {\n\t\tflag=0;\n                scanf(\"%lld%lld\",&n,&m);\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tfor(k=0;k<m;k++)\n\t\t\t{\n\t\t\t\tscanf(\"%lld\",&grid[j][k]);\n\t\t\t\tif(grid[j][k]>4)\n\t\t\t\t\tflag=1;\n\t\t\t\tif(j==0||j==n-1)\n\t\t\t\t{\n\t\t\t\t\tif(grid[j][k]>3)\n\t\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t\tif(k==0||k==m-1)\n\t\t\t\t{\n\t\t\t\t\tif(grid[j][k]>3)\n\t\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(grid[0][0]>2||grid[0][m-1]>2||grid[n-1][0]>2||grid[n-1][m-1]>2)\n\t\t\tflag=1;\n\t\tif(flag==1)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tfor(j=0;j<n;j++)\n                \t{\t\n                \t        for(k=0;k<m;k++)\n                \t        {\n                \t        \tif(j==0||j==n-1)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(k==0||k==m-1)\n\t\t\t\t\t\t\tprintf(\"2 \");\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tprintf(\"3 \");\n\t\t\t\t\t}\n\t\t\t\t\telse if(k==0||k==m-1)\n\t\t\t\t\t{\n\t\t\t\t\t\tprintf(\"3 \");\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tprintf(\"4 \");\n                \t        }\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n        }\n\n} \n"}
{"similarity_score": 0.30121608980355474, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "4ec1ec57abc1cbeef37a3337f3dc8935", "bug_code_uid": "432c9790b6a03348a968ace9af811394", "src_uid": "07597a8d08b59d4f8f82369bb5d74a49", "apr_id": "dbb7f831bf53cb6efe537463ba59dca3", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nvoid f1()\r\n{\r\n    int a,b,c,n,res;\r\n    scanf(\"%d %d %d\",&a,&b,&c);\r\n    if((a-b)>=0)\r\n    {\r\n        n=2*(a-b);\r\n    }\r\n    else\r\n    {\r\n        n=2*(b-a);\r\n    }\r\n    if(c>n)\r\n    {\r\n        printf(\"-1\\n\");\r\n    }\r\n    else if(c>(n/2) && c<n)\r\n    {\r\n        res=c-(n/2);\r\n        printf(\"%d\\n\",res);\r\n    }\r\n    else\r\n    {\r\n        res=(n/2)-c;\r\n        printf(\"%d\\n\",res);\r\n    }\r\n\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",t);\r\n    while(t--)\r\n    {\r\n        f1();\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nvoid f1()\r\n{\r\n    int a,b,c,res,temp;\r\n    scanf(\"%d %d %d\",&a,&b,&c);\r\n    int n=2*abs(a-b);\r\n    if(a>n || b>n || c>n)\r\n    {\r\n        res=-1;\r\n    }\r\n    else\r\n    {\r\n        temp=(n/2)+c;\r\n        if(temp>n)\r\n        {\r\n            res=temp-n;\r\n        }\r\n        else\r\n        {\r\n        res=temp;   \r\n        }    \r\n    }\r\n    if(res>=1 && res<=n)\r\n    {\r\n    printf(\"%d\\n\",res);\r\n    }\r\n    else\r\n    {\r\n        printf(\"-1\\n\");\r\n    }\r\n}\r\nint main()\r\n{\r\n    int t;scanf(\"%d\",&t);\r\n    while(t--){f1();}\r\n    return 0;\r\n}"}
{"similarity_score": 0.6839967506092608, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "cbc359b61d45b13c99b68b263cdf6d82", "bug_code_uid": "833db57340e8add29fafed57124c281b", "src_uid": "afce38aa7065da88d824d1d981b5b338", "apr_id": "31ba2538003ec429f5d246ac572c842e", "difficulty": 1200, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{ int t,i;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++)\n{ int n,x,j,k,se=0,so=0;\nscanf(\"%d %d\",&n,&x);\nint a[n];\nfor(j=0;j<n;j++)\n{ scanf(\"%d\",&a[j]);}\nfor(k=0;k<n;k++)\n{ if(a[k]%2==0)\n{ se++;}\nelse\n{so++;}\nif(x==1&&so>0)\nbreak;\nelse\n{ continue;}\n}\nif(x==1&&so>0)\nprintf(\"Yes\\n\");\nelse if(x%2!=0)\n{ if(so>=x)\n  printf(\"Yes\\n\");\n  else\n  { if(so>0&&se>0%)\n   printf(\"Yes\\n\");\n   else\n   printf(\"No\\n\");}}\nelse\n{ if(x==n)\n  { if(so%2!=0)\n  printf(\"Yes\\n\");\n  else\n   printf(\"No\\n\");}\n  else\n{ if(se>0&&so>0)\n  printf(\"Yes\\n\");\nelse\nprintf(\"No\\n\");}\n}}\n\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{ int t,i;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++)\n{ int n,x,j,k,se=0,so=0;\nscanf(\"%d %d\",&n,&x);\nint a[n];\nfor(j=0;j<n;j++)\n{ scanf(\"%d\",&a[j]);}\nfor(k=0;k<n;k++)\n{ if(a[k]%2==0)\n{ se++;}\nelse\n{so++;}\nif(x==1&&so>0)\nbreak;\nelse\n{ continue;}\n}\nif(x==1&&so>0)\nprintf(\"Yes\\n\");\nelse if(x%2!=0)\n{ if(x==n)\n { if(so%2!=0)\n  printf(\"Yes\\n\");\nelse\nprintf(\"No\\n\"); }\nelse\n{\nif(so>=x)\n  printf(\"Yes\\n\");\n  else\n  { if(so>0&&se>0)\n   printf(\"Yes\\n\");\n   else\n   printf(\"No\\n\");}}}\nelse\n{ if(x==n)\n  { if(so%2!=0)\n  printf(\"Yes\\n\");\n  else\n   printf(\"No\\n\");}\n  else\n{ if(se>0&&so>0)\n  printf(\"Yes\\n\");\nelse\nprintf(\"No\\n\");}\n}}\n\nreturn 0;\n}"}
{"similarity_score": 0.9415887850467289, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "62553e6d9272b87c2ab6b2b3ef320c9d", "bug_code_uid": "356631291ae957ba2a0ee8b9967463b8", "src_uid": "a5d3c9ea1c9affb0359d81dae4ecd7c8", "apr_id": "124c72f6ace6dde9bc4bc2f785a69ae5", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int str[101];\n    int max,i,n,p;\n    long long int sum=0;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++) {\n        scanf(\"%d\",&str[i]);\n    }\n    max=str[0];\n    for(i=0; i<n-1; i++) {\n        if (str[i]<str[i+1])\n            max=str[i+1];\n    }\n    for(i=0; i<n; i++) {\n      \n        p=max-str[i];\n        sum=sum+p;\n    }\n    printf(\"%lld\",sum);\n    \n            return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int str[101];\n    int max,i,n,p;\n    long long int sum=0;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++) {\n        scanf(\"%d\",&str[i]);\n    }\n    max=str[0];\n    for(i=0; i< n-1; i++) {\n        if (max<str[i+1])\n            max=str[i+1];\n            else continue;\n            \n    }\n    for(i=0; i<n; i++) {\n      \n        p=max-str[i];\n        sum=sum+p;\n    }\n    printf(\"%lld\",sum);\n    \n            return 0;\n}"}
{"similarity_score": 0.5135869565217391, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "fb94abbce7a4e41c4b859a103e70fe09", "bug_code_uid": "63d086313cf65fdabf5c158452fce204", "src_uid": "adb66b7b22d70bb37cb625d531d8865f", "apr_id": "894a103c872e6744f988777f07d4ad84", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int sum=0;\n\tint n,i,temp,min,j;\n\t\n\tscanf(\"%d\",&n);\n\tint list[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&list[i]);\n\t\tsum+=list[i];\n\t}\n\tif((sum%2)!=0)\n\t{\n\tfor(i=0;i<n;i++)\n\t{\n\t\tmin=i;\n\t\tfor(j=i+1;j<n;j++)\n\t\tif(list[j]<list[min])\n\t\t\tmin=j;\n\t\ttemp=list[i];\n\t\tlist[i]=list[min];\n\t\tlist[min]=temp;\n\n\t\tif(list[i]%2!=0)\n\t\t{\n\t\t\tsum=sum-list[i];\n\t\t\tbreak;\n\t\t}\n\n\t}\n\n\t}\n\tprintf(\"%lld\",sum);\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int sum=0;\n\tint n,i,temp,min=999999999;\n\t\n\tscanf(\"%d\",&n);\n\tint list[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&list[i]);\n\t\tsum+=list[i];\n\t\n\t\tif((list[i]%2!=0)&& (list[i]<=min))\n\t\t\tmin=list[i];\n\t\n\t}\n\tif((sum%2)!=0)\n\t\tsum-=min;\n\t\t\n\tprintf(\"%lld\",sum);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9670014347202296, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "4e1868c33dc403842ddb56d66320be42", "bug_code_uid": "529f524cc7b254994eec1628c53ee926", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "f8bfbf0ae8e52266379f7290b45aed92", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tlong int n,a[1010],b[1100],i;\n\tscanf(\"%ld\",&n);\n\tb[n]=0;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%ld\",&a[i]);\n\tfor(i=n-1;i>=0;i--)\n\t\tif(a[i]>b[i+1])\n\t\t\tb[i]=a[i];\n\t\telse\n\t\t\tb[i]=b[i+1];\n\tfor(i=0;i<n-1;i++)\n\t\tif(a[i]>=b[i+1])\n\t\t\tprintf(\"0 \");\n\t\telse\n\t\t\tprintf(\"%ld \",b[i+1]-a[i]+1);\n\tprintf(\"0\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tlong int n,a[100010],b[100010],i;\n\tscanf(\"%ld\",&n);\n\tb[n]=0;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%ld\",&a[i]);\n\tfor(i=n-1;i>=0;i--)\n\t\tif(a[i]>b[i+1])\n\t\t\tb[i]=a[i];\n\t\telse\n\t\t\tb[i]=b[i+1];\n\tfor(i=0;i<n-1;i++)\n\t\tif(a[i]>b[i+1])\n\t\t\tprintf(\"0 \");\n\t\telse\n\t\t\tprintf(\"%ld \",b[i+1]-a[i]+1);\n\tprintf(\"0\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9537815126050421, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "4fd0fe2b083d8a19c20d4306c146ca7a", "bug_code_uid": "f6aaa52cbeb258767fdaab430ced55ad", "src_uid": "48b9c68380d3bd64bbc69d921a098641", "apr_id": "457c1e4af2cac4ff9450ea6574cc8048", "difficulty": 1000, "tags": ["sortings", "geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nconst double pi=3.141592653589793;\nint a[110];\n\nvoid swap(int i,int j)\n{\n  int temp;\n  temp=a[i];\n  a[i] =a[j];\n  a[j]=temp;\n}\n\nint partition(int l,int r)\n{\n    int i,j;\n    for(j=l,i=l+1;i<=r;i++)\n       if(a[i]<a[l]) swap(i,++j);\n    swap(l,j);\n    return j;\n}\n\nvoid quick_sort(int l,int r)\n{\n    int k;\n    if(l>=r) return;\n    k=partition(l, r);\n    quick_sort(l,k-1);\n    quick_sort(k+1,r);\n}\n\nint main()\n{\n    int n,i,m;\n    double t=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n      scanf(\"%d\",&a[i]);\n    quick_sort(0,n-1);\n    t+=a[0]*a[0]*pi;\n    m=2;\n    while(m<n)\n    {\n        t+=(a[m]*a[m]-a[m-1]*a[m-1])*pi;\n        m+=2;\n    }\n    printf(\"%.15f\",t);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n\nconst double pi=3.141592653589793;\nint a[110];\n\nvoid swap(int i,int j)\n{\n  int temp;\n  temp=a[i];\n  a[i] =a[j];\n  a[j]=temp;\n}\n\nint partition(int l,int r)\n{\n    int i,j;\n    for(j=l,i=l+1;i<=r;i++)\n       if(a[i]<a[l]) swap(i,++j);\n    swap(l,j);\n    return j;\n}\n\nvoid quick_sort(int l,int r)\n{\n    int k;\n    if(l>=r) return;\n    k=partition(l, r);\n    quick_sort(l,k-1);\n    quick_sort(k+1,r);\n}\n\nint main()\n{\n    int n,i,m;\n    double t=0;\n    scanf(\"%d\",&n);\n    a[0]=0;\n    for(i=1;i<=n;i++)\n      scanf(\"%d\",&a[i]);\n    quick_sort(0,n);\n    m=n;\n    while(m>=1)\n    {\n        t+=(a[m]*a[m]-a[m-1]*a[m-1])*pi;\n        m-=2;\n    }\n    printf(\"%.15f\",t);\n    return 0;\n}\n"}
{"similarity_score": 0.9975062344139651, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "62467f18a0d30f86d56eefda17d4ffea", "bug_code_uid": "3df73aad1163cdf8eee171df5ea4e9ad", "src_uid": "6421a81f85a53a0c8c63fbc32750f77f", "apr_id": "f74e8fb6842397bbc61e143b8b85230c", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "include<stdio.h>\nint main()\n{\n        float l;\n        scanf(\"%f\",&l);\n        float p,q,ans;\n        scanf(\"%f %f\",&p,&q);\n    \n        ans=p*l/(p+q);\n        printf(\"%.4f\",ans);\n        return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n        float l;\n        scanf(\"%f\",&l);\n        float p,q,ans;\n        scanf(\"%f %f\",&p,&q);\n    \n        ans=p*l/(p+q);\n        printf(\"%.4f\",ans);\n        return 0;\n}\n"}
{"similarity_score": 0.9981378026070763, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "85b040d29afa66a272ab14fa808656d6", "bug_code_uid": "c8d3c1b2bd70cb9fb164fe3862269d9d", "src_uid": "5e5dbd70c7fcedf0f965aed5bafeb06c", "apr_id": "3e2d9b30688bb2db86bf778cacaa0a96", "difficulty": 800, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/*Author:Hrishikesh P\n  Roll NO:AM.EN.U4CSE19024\n  Class-CSE-A \n  Program to input a string and check if contains only unique characters.*/\n\n#include<stdio.h>\nint main()\n{\n\tchar s[100001];\n\tint i,counto=0,count1=0,count0=0,counte=0,countr=0,n;\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",s);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='o')\n\t\tcounto++;\n\t\telse if(s[i]=='z')\n\t\tcount0++;\n\t\telse if(s[i]=='e')\n\t\tcounte++;\n\t\telse if(s[i]=='r')\n\t\tcountr++;\n\t\telse if(s[i]=='n')\n\t\tcount1++;\n\t}\n\tfor(i=0;i<count1;i++)\n\tprintf(\"1\");\n\tfor(i=0;i<count0;i++)\n\tprintf(\"0\");\n}", "fixed": "/*Author:Hrishikesh P\n  Roll NO:AM.EN.U4CSE19024\n  Class-CSE-A \n  Program to input a string and check if contains only unique characters.*/\n\n#include<stdio.h>\nint main()\n{\n\tchar s[100001];\n\tint i,counto=0,count1=0,count0=0,counte=0,countr=0,n;\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",s);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='o')\n\t\tcounto++;\n\t\telse if(s[i]=='z')\n\t\tcount0++;\n\t\telse if(s[i]=='e')\n\t\tcounte++;\n\t\telse if(s[i]=='r')\n\t\tcountr++;\n\t\telse if(s[i]=='n')\n\t\tcount1++;\n\t}\n\tfor(i=0;i<count1;i++)\n\tprintf(\"1 \");\n\tfor(i=0;i<count0;i++)\n\tprintf(\"0 \");\n}"}
{"similarity_score": 0.8762169680111266, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5bdff44535966743afd23167e5ef6d8e", "bug_code_uid": "7ffe4f0f36a0fd1003217cbbcec1b3cc", "src_uid": "293f9b996eee9f76d4bfdeda85685baa", "apr_id": "d4dfbc8d1e7cddc21b4648e4dd93a4ce", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int m=0;m<t;m++)\r\n    {\r\n        long long p, a, b, c;\r\n        long long t1, t2, t3;\r\n        scanf(\"%lld %lld %lld %lld\\n\", &p, &a, &b, &c);\r\n        long long i=1, j=1, k=1;\r\n        while(p>a*i)\r\n        i++;\r\n        while(p>b*j)\r\n        j++;\r\n        while(p>c*k)\r\n        k++;\r\n        t1=a*i-p;\r\n        t2=b*j-p;\r\n        t3=c*k-p;\r\n        if(t1<t2)\r\n        {\r\n            if(t1<t3)\r\n            printf(\"%lld\", t1);\r\n            else\r\n            printf(\"%lld\", t3);\r\n        }\r\n        else\r\n        {\r\n            if(t2<t3)\r\n            printf(\"%lld\", t2);\r\n            else\r\n            printf(\"%lld\", t3);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int m=0;m<t;m++)\r\n    {\r\n        long long p, a, b, c;\r\n        long long t1, t2, t3;\r\n        scanf(\"%lld %lld %lld %lld\\n\", &p, &a, &b, &c);\r\n        long long i=(p+a-1)/a;\r\n        long long j=(p+b-1)/b;\r\n        long long k=(p+c-1)/c;\r\n        t1=a*i-p;\r\n        t2=b*j-p;\r\n        t3=c*k-p;\r\n        if(t1<t2)\r\n        {\r\n            if(t1<t3)\r\n            printf(\"%lld\", t1);\r\n            else\r\n            printf(\"%lld\", t3);\r\n        }\r\n        else\r\n        {\r\n            if(t2<t3)\r\n            printf(\"%lld\", t2);\r\n            else\r\n            printf(\"%lld\", t3);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.9924242424242424, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "df3e355b27b64c128abefc6d470ebc8c", "bug_code_uid": "993569cfdf0f2718aca1330e6aaac75b", "src_uid": "85383c9e802348a3153e7f98ce278f09", "apr_id": "ce2f451300ca609606d451d6be768664", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n\nvoid solve() {\n\tint n, x; scanf(\"%d %d\", &n, &x);\n\n\tint arr[n]; bool y[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &arr[i]);\n\t\ty[i] = false;\n\t}\n\n\tint ans[n], l = 0, sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tif (y[j]) continue ;\n\t\t\tif ((sum + arr[j]) == x) continue ;\n\t\t\tsum += arr[j]; y[j] = true;\n\t\t\tans[l++] = arr[j];\n\t\t}\n\t}\n\n\tif (sum == 0) puts(\"NO\");\n\telse {\n\t\tputs(\"YES\");\n\t\tfor (int i = 0; i < l; i++)\n\t\t\tprintf(\"%d \", ans[i]);\n\t\tputs(\"\");\n\t}\n}\n\nint main (int argc, char *argv[]) {\n \n    int t; scanf(\"%d\", &t);\n \n    while(t--) { solve(); /*puts(\"\");*/ }\n \nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n\nvoid solve() {\n\tint n, x; scanf(\"%d %d\", &n, &x);\n\n\tint arr[n]; bool y[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &arr[i]);\n\t\ty[i] = false;\n\t}\n\n\tint ans[n], l = 0, sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tif (y[j]) continue ;\n\t\t\tif ((sum + arr[j]) == x) continue ;\n\t\t\tsum += arr[j]; y[j] = true;\n\t\t\tans[l++] = arr[j];\n\t\t}\n\t}\n\n\tif (sum == 0 || l != n) puts(\"NO\");\n\telse {\n\t\tputs(\"YES\");\n\t\tfor (int i = 0; i < l; i++)\n\t\t\tprintf(\"%d \", ans[i]);\n\t\tputs(\"\");\n\t}\n}\n\nint main (int argc, char *argv[]) {\n \n    int t; scanf(\"%d\", &t);\n \n    while(t--) { solve(); /*puts(\"\");*/ }\n \nreturn 0;\n}\n"}
{"similarity_score": 0.3264812575574365, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "658255917e6b670b87f190353b8fbf90", "bug_code_uid": "ad7430d110b89c13c3506563cbd44aa5", "src_uid": "091e91352973b18040e2d57c46f2bf8a", "apr_id": "0b27102656149f97e3f9d584a5922a93", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int l,r,d,t,m;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int temp=0;\n        scanf(\"%d%d%d\",&l,&r,&d);\n        for(m=d;;m++)\n        {\n             if(m%d==0)\n             {\n                if(m>=l && m<=r){\n                    continue;\n                }\n                else\n                {\n                    printf(\"%d\\n\",m);\n                    temp=1;\n                    break;\n                }\n             }\n             if(temp==1)\n                break;\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int l,r,d,t,m;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d%d%d\",&l,&r,&d);\n        if(l>d)\n        {\n            printf(\"%d\\n\",d);\n        }\n        else\n        {\n            printf(\"%d\\n\",(r/d+1)*d);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9233038348082596, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "031e1aaf76818f2768400f582d8b2c0a", "bug_code_uid": "a49e1efcf7e3474f2799dfa2914ab98e", "src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "apr_id": "09a8eba1f496e8cd3c512cbba360d26b", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint room[1000001];\nint cap,max,min;\n\nint main() {\n\tint n;\n\tscanf(\"%i\\n\",&n);\n\twhile (n--) {\n\t\tint id;\n\t\tchar event;\n\t\tscanf(\"%c %d\\n\",&event,&id);\n\t\tif (event=='+') {\n\t\t\tcap++;\n\t\t\tif (cap>max) max=cap;\n\t\t} else {\n\t\t\tcap--;\n\t\t\tif (cap<min) min=cap;\n\t\t}\n\t}\n\tprintf(\"%i\\n\",max-min);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint room[1000001];\nint cap,max,min;\n\nint main() {\n\tint n;\n\tscanf(\"%i\\n\",&n);\n\twhile (n--) {\n\t\tint id;\n\t\tchar event;\n\t\tscanf(\"%c %d\\n\",&event,&id);\n\t\tif (event=='+') {\n\t\t\tcap++;\n\t\t\tif (cap>max) max=cap;\n\t\t\troom[id]=1;\n\t\t} else {\n\t\t\tcap--;\n\t\t\tif (room[id]) {\n\t\t\t\tif (cap<min) min=cap;\n\t\t\t} else min--;\n\t\t}\n\t}\n\tprintf(\"%i\\n\",max-min);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9897610921501706, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5881f133e0b0209224998ab87cf60219", "bug_code_uid": "b587a8f9d08bab0bfb0b6e996505743d", "src_uid": "95d83cfdb2131f2f23ba5ef005c18b38", "apr_id": "f4b2f5ab1936967e08c38e8855ebbd1d", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int n, k, x;\r\n        int check = 0;\r\n        scanf(\"%d %d\", &n, &k);\r\n        for(int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &x);\r\n            if(x == 1)\r\n                check = 1;\r\n        }\r\n        if(check == 1)\r\n            printf(\"TAK\\n\");\r\n        else\r\n            printf(\"NIE\\n\");\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int n, k, x;\r\n        int check = 0;\r\n        scanf(\"%d %d\", &n, &k);\r\n        for(int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &x);\r\n            if(x == 1)\r\n                check = 1;\r\n        }\r\n        if(check == 1)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9803424223208624, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "8729ad145507980067ee745a2bc2d2c8", "bug_code_uid": "b136b63c73ea2e6bd7363a60364c6452", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "a09b9ab63618d4f62de4f8362e251230", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint min (int T[], int j,int len)\n{\n    int m=j,i;\n    for(i=j;i<len;i++)\n    {\n        if (T[i]<T[m]) m=i;\n    }\n    return m;\n}\nvoid tri(int T[], int len)\n{\n    int i,ind,aux;\n    for(i=0;i<len;i++)\n    {\n        ind=min(T,i,len);\n        aux=T[ind];\n        T[ind]=T[i];\n        T[i]=aux;\n    }\n}\nint main()\n{\n    int n,m,i,j=0,ind,cpt=0;\n    int g[100],f[100];\n    scanf(\"%d\",&n);\n    for (i=0;i<n;i++)\n        scanf(\"%d\",&g[i]);\n    scanf(\"%d\",&m);\n    for (i=0;i<m;i++)\n        scanf(\"%d\",&f[i]);\n    tri(g,n);\n    tri(f,m);\n\n    i=0;\n    while(i<n)\n    {\n        if ( f[j]-g[i] <= 1 && f[j]-g[i] >= -1 )\n        {cpt++; i++; j++;}\n        else if (f[j] > g[i]+1) i++;\n        else if (f[j] < g[i]-1) j++;\n    }\n    printf(\"%d\",cpt);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint min (int T[], int j,int len)\n{\n    int m=j,i;\n    for(i=j;i<len;i++)\n    {\n        if (T[i]<T[m]) m=i;\n    }\n    return m;\n}\nvoid tri(int T[], int len)\n{\n    int i,ind,aux;\n    for(i=0;i<len;i++)\n    {\n        ind=min(T,i,len);\n        aux=T[ind];\n        T[ind]=T[i];\n        T[i]=aux;\n    }\n}\nint main()\n{\n    int n,m,i,cpt=0;\n    int g[100],f[100];\n\n    scanf(\"%d\",&n);\n    for (i=0;i<n;i++)\n        scanf(\"%d\",&g[i]);\n\n    scanf(\"%d\",&m);\n    for (i=0;i<m;i++)\n        scanf(\"%d\",&f[i]);\n\n    tri(g,n);\n    tri(f,m);\n\n    i=0; int j=0;\n    while(i<n && j<m)\n    {\n        if ( f[j]-g[i] <= 1 && f[j]-g[i] >= -1 )\n            {cpt++; i++; j++;}\n        else if (f[j] > g[i]+1) i++;\n        else if (f[j] < g[i]-1) j++;\n    }\n    printf(\"%d\",cpt);\n}\n"}
{"similarity_score": 0.7117117117117117, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "ebbb87ee45e1a324e03810f192e4aeea", "bug_code_uid": "ee3627ce83820570976528330473236e", "src_uid": "168dbc4994529f5407a440b0c71086da", "apr_id": "e78d24ff99afbe185b74bd0eafccf7c7", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint tc;\n\tlong long int n;\n\tscanf(\"%d\",&tc);\n\twhile(tc--)\n\t{\n\t\tscanf(\"%lld\",&n);\n\t\tprintf(\"%lld\\n\",(n*4)+1);\n\t}\n\treturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint tc;\n\tlong long int n;\n\tscanf(\"%d\",&tc);\n\twhile(tc--)\n\t{\n\t\tscanf(\"%lld\",&n);\n\t\tif(n%2==0)\n\t\t\tprintf(\"%lld\\n\",(n*4)+1);\n\t\telse if((n+1)%4==0)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",n+1);\n\t\t}\n\t\telse if((n-1)%4==0)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",(2*n)+1);\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.9782971619365609, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "c551a48a76c711b8e74c3292c86dbd11", "bug_code_uid": "134ba6cf5460be0bfbcddec42d9a5219", "src_uid": "9f019c3898f27d687c5b3498586644e8", "apr_id": "13a884be3ad0107f0fef968db139a934", "difficulty": 800, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int a;\r\n    scanf(\"%d\", &a);\r\n    while(a--) {\r\n        double d[4][2]={}, s=0;\r\n        for(int i=1; i<=3; i++) scanf(\"%lf%lf\", &d[i][0], &d[i][1]);\r\n        for(int i=1; i<=3; i++)\r\n            for(int j=1; j<=3; j++)\r\n                if(i==j) continue;\r\n                else if(d[i][1]==d[j][1]) {\r\n                    if(d[6-i-j][1]>d[j][1])\r\n                        s=0;\r\n                    else s=d[i][0]-d[j][0]<0?d[j][0]-d[i][0]:d[i][0]-d[j][0];\r\n                    break;\r\n                }\r\n        printf(\"%.9lf\\n\", s);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int a;\r\n    scanf(\"%d\", &a);\r\n    while(a--) {\r\n        long long d[4][2]={}, s=0;\r\n        for(int i=1; i<=3; i++) scanf(\"%lld%lld\", &d[i][0], &d[i][1]);\r\n        for(int i=1; i<=3; i++)\r\n            for(int j=1; j<=3; j++)\r\n                if(i==j) continue;\r\n                else if(d[i][1]==d[j][1]) {\r\n                    if(d[6-i-j][1]>d[j][1])\r\n                        s=0;\r\n                    else s=d[i][0]-d[j][0]<0?d[j][0]-d[i][0]:d[i][0]-d[j][0];\r\n                    break;\r\n                }\r\n        printf(\"%lld\\n\", s);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.863588667366212, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "82d7ca4dad3e13508040e82df03d33f5", "bug_code_uid": "025b077d996d4a493fa1afddd6332c03", "src_uid": "7965b6ce237b02617b55dc175ffa0451", "apr_id": "f8be934dc2a92dfdd333f74d6459df29", "difficulty": 800, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t, n, max1, max2;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++) {\r\n        scanf(\"%d\", &n);\r\n        int arr[n];\r\n        scanf(\"%d %d\", &arr[0], &arr[1]);\r\n        for (int j = 0; j < n; j++) {\r\n            scanf(\"%d\", &arr[j]);\r\n        }\r\n        if (arr[0] < arr[1]) {\r\n            max2 = 0;\r\n           max1 = 1;\r\n        } else {\r\n            max1 = 0;\r\n            max2 = 1;\r\n        }\r\n        for (int j = 0; j < n; j++) {\r\n            if (arr[max1] < arr[j]) {\r\n                max1 = j;\r\n            }\r\n        }\r\n        for (int j = 0; j < n; j++) {\r\n            if (arr[max2] < arr[j] && j != max1) {\r\n                max2 = j;\r\n            }\r\n        }\r\n        for (int j = 0; j < n; j++) {\r\n            if (j != max1) {\r\n                printf(\"%d \", arr[j] - arr[max1]);\r\n            } else {\r\n                printf(\"%d \", arr[j] - arr[max2]);\r\n            }\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t, n, max1, max2;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++) {\r\n        scanf(\"%d\", &n);\r\n        int arr[n];\r\n        for (int j = 0; j < n; j++) {\r\n            scanf(\"%d\", &arr[j]);\r\n        }\r\n        if (arr[0] < arr[1]) {\r\n            max2 = 0;\r\n            max1 = 1;\r\n        } else {\r\n            max1 = 0;\r\n            max2 = 1;\r\n        }\r\n        for (int j = 0; j < n; j++) {\r\n            if (arr[max1] < arr[j]) {\r\n                max1 = j;\r\n            }\r\n        }\r\n        for (int j = 0; j < n; j++) {\r\n            if (arr[max2] < arr[j] && j != max1) {\r\n                max2 = j;\r\n            }\r\n        }\r\n        for (int j = 0; j < n; j++) {\r\n            if (j != max1) {\r\n                printf(\"%d \", arr[j] - arr[max1]);\r\n            } else {\r\n                printf(\"%d \", arr[j] - arr[max2]);\r\n            }\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.615568862275449, "equal_cnt": 23, "replace_cnt": 8, "delete_cnt": 6, "insert_cnt": 9, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "400ce0a9aee3c5816566501dfffe31ea", "bug_code_uid": "e2ec09b1e26fa7718c61b4778d0a117a", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "0eaed2706840d7b30c1b1e684130c284", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "        #include <stdio.h>\n     \n        int main(){\n            char s[100000];\n            gets(s);\n            int j;\n            for (int i = 0; i < strlen(s); i++){\n                if(s[i]=='A'&&s[i+1]=='B'){\n                    j+=2;\n                    for (j; j < strlen(s); j++){\n                        if(s[j]=='B'&&s[j+1]=='A'){\n                            printf(\"YES\");\n                            return(0);\n                        }\n                    }\n                }\n            }\n            for (int i = 0; i < strlen(s); i++){\n                if(s[i]=='B'&&s[i+1]=='A'){\n                    j+=2;\n                    for (j; j < strlen(s); j++){\n                        if(s[j]=='A'&&s[j+1]=='B'){\n                            printf(\"YES\");\n                            return(0);\n                        }\n                    }\n                }\n            }\n            printf(\"NO\");\n        }+", "fixed": "        #include <stdio.h>\n        #include <math.h>\n     \n        int main(){\n            char s[100000];\n            //size_t i,c,d=0;\n            gets(s);\n            int len = strlen(s);\n            for(int i=0;i<len-1;i++){\n                    if(s[i]=='A'&&s[i+1]=='B'){\n                        //c=i+2;\n                        for(int j=0;j<len-1;j++){\n                                if(s[j]=='B'&&s[j+1]=='A'){\n                                    if (abs(i-j)>=2) {\n                                        printf(\"YES\");\n                                        return 0;\n                                    }\n                                }\n                        }\n                    }\n            }\n            printf(\"NO\");\n        }"}
{"similarity_score": 0.9919028340080972, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2b346b7c0c5529b30d1fe1568fd69278", "bug_code_uid": "39c5fe60a8058fe2fa3f6ed9c1a78f9a", "src_uid": "43996d7e052aa628a46d03086f9c5436", "apr_id": "2e0ecf480e14d5bcf220a118ea279a2f", "difficulty": 1000, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid main(){\nint t;\nscanf(\"%d\",&t);\nwhile(t--){\n    int n,s;\n    scanf(\"%d\",&n);\n    if(n==1)\n        printf(\"-1\\n\");\n    else{\n        for(int i=0;i<n-1;i++){\n            printf(\"6\");\n        }\n        printf(\"9\\n\");\n    }\n}\n}\n", "fixed": "#include<stdio.h>\n\nvoid main(){\nint t;\nscanf(\"%d\",&t);\nwhile(t--){\n    int n,s;\n    scanf(\"%d\",&n);\n    if(n==1)\n        printf(\"-1\\n\");\n    else{\n        for(int i=0;i<n-1;i++){\n            printf(\"5\");\n        }\n        printf(\"4\\n\");\n    }\n}\n}\n"}
{"similarity_score": 0.9339152119700748, "equal_cnt": 12, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "6a909b62ecbf26909af9b946edfde73b", "bug_code_uid": "504ca9c195accb5b18df175ed551a406", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "91335e53a1a56d60e881042bc97c6173", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\n\nint main()\n {\n int l,n,i=1,j=1,k=1,m=1,count=0;\n scanf(\"%d\",&n);\n int s[n],team[n]; s[0]=0;\n for(l=1;l<=n;l++)\n { scanf(\"%d\",&s[l]);\n \n }s[l]=0;\n l=1;\n while(s[l]!=0)\n {  int f1=0,f2=0,f3=0;\n\t   while(s[i]!=0)\n\t\t{\n\t\t\tif(s[i]==1)\n\t\t\t{\n\t\t\t\tteam[k++]=i; break; f1=1; \n\t\t\t}\n\t\t}\n\t\twhile(s[j]!=0)\n\t\t{\n\t\t\tif(s[j]==2)\n\t\t\t{\n\t\t\t\tteam[k++]=j; break; f2=1;\n\t\t\t}\n\t\t}\n\t\twhile(s[m]!=0)\n\t\t{\n\t\t\tif(s[m]==1)\n\t\t\t{\n\t\t\t\tteam[k++]=m; break;f3=1;\n\t\t\t}\n\t\t}\n\t\tif(f1&&f2&&f3) count++; else break;\n\t\t\n\t  \n \t\n }j=1;\n printf(\"%d\\n\",count);\n for(i=0;i<count;i++)\n {\n \tprintf(\"%d\",team[j++]);\n \tprintf(\"%d\",team[j++]);\n\tprintf(\"%d\",team[j++]);\n    printf(\"\\n\");\n }\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\n\nint main()\n {\n int l,n,i=1,j=1,k=1,m=1,count=0;\n scanf(\"%d\",&n);\n int s[n],team[n]; s[0]=0;\n for(l=1;l<=n;l++)\n { scanf(\"%d\",&s[l]);\n \n }\n l=1;\n while(s[l]!=0)\n {  int f1=0,f2=0,f3=0;\n\t   while(s[i]!=0)\n\t\t{\n\t\t\tif(s[i]==1)\n\t\t\t{\n\t\t\t\tteam[k++]=i;f1=1;i++; break;  \n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\twhile(s[j]!=0)\n\t\t{\n\t\t\tif(s[j]==2)\n\t\t\t{\n\t\t\t\tteam[k++]=j; f2=1;j++;break; \n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\twhile(s[m]!=0)\n\t\t{\n\t\t\tif(s[m]==3)\n\t\t\t{\n\t\t\t\tteam[k++]=m; f3=1;m++;break;\n\t\t\t}m++;\n\t\t}\n\t\tif(f1&&f2&&f3) count++; else break;\n\t\t\n\t  \n \t\n }j=1;\n printf(\"%d\\n\",count);\n for(i=0;i<count;i++)\n {\n \tprintf(\"%d \",team[j++]);\n \tprintf(\"%d \",team[j++]);\n\tprintf(\"%d \",team[j++]);\n    printf(\"\\n\");\n }\n\treturn 0;\n}"}
{"similarity_score": 0.9985096870342772, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4a44e7efa9bf3d7a37f23a9357f21a87", "bug_code_uid": "7dac1885ee8c821847403babb756a0d9", "src_uid": "0a9ee8cbfa9888caef39b024563b7dcd", "apr_id": "d310ed0ee5de1dbf71159c5f5e7934fc", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n\tchar c;\n\tlong long int x1[100];\n\tint i,n,x;\n\tscanf(\"%d %d%*c\",&n,&x);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%c %I64d%*c\",&c,&x1[i]);\n\t\tif(c=='-') x1[i]=-x1[i];\n\t}\n\tlong long int s=x,count=0;\n\tfor(i=0;i<n;i++){\n\t\tif( s<-x1[i] && x1[i]<0 ) count++;\n\t\telse s=s+x1[i];\n\t}\n\tprintf(\"%I64d %I64d\",s,count);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main() {\n\tchar c;\n\tlong long int x1[1000];\n\tint i,n,x;\n\tscanf(\"%d %d%*c\",&n,&x);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%c %I64d%*c\",&c,&x1[i]);\n\t\tif(c=='-') x1[i]=-x1[i];\n\t}\n\tlong long int s=x,count=0;\n\tfor(i=0;i<n;i++){\n\t\tif( s<-x1[i] && x1[i]<0 ) count++;\n\t\telse s=s+x1[i];\n\t}\n\tprintf(\"%I64d %I64d\",s,count);\n\treturn 0;\n}"}
{"similarity_score": 0.9011235955056179, "equal_cnt": 9, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "771cbabd516ce995ed9bc8cf2e14b9f8", "bug_code_uid": "aabbb8a09ccfa0add93705e38e214b60", "src_uid": "ac33b73da5aaf2139b348a9c237f93a4", "apr_id": "10f43b171696cb774992815594852d9c", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,x,c,a,k=0,j,i,b=0;\n    scanf(\"%d %d\",&n,&x);\n    for(i=0;i<n;i++)\n    {\n        c=b;\n        scanf(\"%d %d\",&a,&b);\n        int m=0,z=0;\n        for(j=0;;j++)\n        {\n            m+=(x+c);\n            if(m<a)\n            {\n                z=m;\n\n            }\n            else\n            break;\n        }\n        k+=(b-z);\n    }\n    printf(\"%d\\n\",k);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,x,c,a,k=0,j,i,m=0,b=0;\n    scanf(\"%d %d\",&n,&x);\n    for(i=0;i<n;i++)\n    {\n        c=b;\n        m=c;\n        scanf(\"%d %d\",&a,&b);\n        int z=0,n=0;\n        for(j=0;;j++)\n        {\n            m+=x;\n            if(m<a)\n            {\n                z=m;n++;\n\n            }\n            else\n            break;\n        }\n        if(n==0)\n        {\n            z=c;\n        }\n\n        k+=(b-z);\n    }\n    printf(\"%d\\n\",k);\n    return 0;\n}\n"}
{"similarity_score": 0.32273838630806845, "equal_cnt": 8, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "65a5bbd5a452cec9023c74196e4e5402", "bug_code_uid": "b3aba9de453edeb31ee227d29245a1f8", "src_uid": "ec8060260a6c7f4ff3e6afc9fd248afc", "apr_id": "7e30a02fa9bb73d9f8cd47f6e5fbf32e", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{ float s,a,b,c,d,v,f,m;\n scanf(\"%f\",&s);\n scanf(\"%f\",&a);\n scanf(\"%f\",&b);\n scanf(\"%f\",&c);\n v=s/c;\n d=b/a;\n f=v*d;\n m=v+f;\n printf(\"%f\",m);\n return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nlong long a,b,s,c,x,e,d;\nint n;\nscanf(\"%d\",&n);\nfor(int i=n;i>0;i--)\n{\nscanf(\"%lld%lld\",&s,&a);\nscanf(\"%lld%lld\",&b,&c);\ns=s/c;\nd=s%a;\ne=s/a;\nx=a*e+(e*b)+d;\nprintf(\"%lld\\n\",x);\nx=0;\n}\nreturn 0;\n}"}
{"similarity_score": 0.9331941544885177, "equal_cnt": 9, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "b6524dfb62a691a531fa71d19a724687", "bug_code_uid": "8c9aac0d0cffca5673ce610af8a1adec", "src_uid": "204e75827b7016eb1f1fbe1d6b60b03d", "apr_id": "642086e9d5850cb10bce074348b566f1", "difficulty": 800, "tags": ["brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint gcd(int,int);\r\nint digit_sum(int);\r\nint main() {\r\n\tint t,n,i;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--) {\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor( i=n;gcd(i,digit_sum(i))==1;i++) {}\r\n\t\tprintf(\"%d\\n\",i);\r\n\t}\r\n\treturn 0;\r\n}\r\nint gcd(int x,int y) {\r\n\tint com=1;\r\n\tfor(int i=2;i<=y;i++) {\r\n\t\tif(x%i==0&&y%i==0)\r\n\t\t\tcom=i;\r\n\t}\r\n\treturn com;\r\n}\r\nint digit_sum(int x) {\r\n\tint sum=0;\r\n\twhile(x) {\r\n\t\tsum+=(x%10);\r\n\t\tx-=(x%10);\r\n\t\tx/=10;\r\n\t}\r\n\treturn sum;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint gcd(long long int,int);\r\nint digit_sum(long long int);\r\nint main() {\r\n\tint t;\r\n\tlong long int n,i;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--) {\r\n\t\tscanf(\"%lld\",&n);\r\n\t\tfor(i=n;gcd(i,digit_sum(i))==1;i++) {}\r\n\t\tprintf(\"%lld\\n\",i);\r\n\t}\r\n\treturn 0;\r\n}\r\nint gcd(long long int x,int y) {\r\n\tint com=1;\r\n\tfor(int i=2;i<=y;i++) {\r\n\t\tif(x%i==0&&y%i==0)\r\n\t\t\tcom=i;\r\n\t}\r\n\treturn com;\r\n}\r\nint digit_sum(long long int x) {\r\n\tint sum=0;\r\n\twhile(x) {\r\n\t\tsum+=(x%10);\r\n\t\tx-=(x%10);\r\n\t\tx/=10;\r\n\t}\r\n\treturn sum;\r\n}\r\n"}
{"similarity_score": 0.8671586715867159, "equal_cnt": 11, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "88c24d8e68c7b2f48343fc166414671b", "bug_code_uid": "e9041809f5edb4430cc5c586b8e61a1f", "src_uid": "a82f15c1b0ddcacc1de966be20cfc5a2", "apr_id": "7a8e2a0f569d5fd77391882815050f94", "difficulty": 900, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,t,n,a,b;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d%d%d\",&n,&a,&b);\n        char s[n];\n        for(i=0;i<n;i++)\n        {\n              printf(\"%c\",97+i%b);\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n     int i,t,n,a,b;\n     scanf(\"%d\",&t);\n     while(t--)\n     {\n          scanf(\"%d%d%d\",&n,&a,&b);\n          char s[n];\n          for(i=0;i<n;i++)\n          {\n               printf(\"%c\",97+i%b);\n          }\n          printf(\"\\n\");\n     }\n}\n"}
{"similarity_score": 0.9730639730639731, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "f6c107ea64b0735a832fe2f99f745008", "bug_code_uid": "721b020b0e337623a21a980383bfce4e", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "2e0e6a3c1e4f5a215b8e5f62718ba96c", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int T,i,n,m,sum;\n    scanf(\"%d\",&T);\n    for(i=1; i<=T; i++)\n    {\n        scanf(\"%lld %lld\",&n,&m);\n        sum=m*n;\n        if(sum%2==0)\n            printf(\"%lld\\n\",(sum/2));\n            else\n            printf(\"%lld\\n\",(sum/2)+1);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long int T,i,n,m,sum;\n    scanf(\"%ld\",&T);\n    for(i=1; i<=T; i++)\n    {\n        scanf(\"%ld %ld\",&n,&m);\n        sum=m*n;\n        if(sum%2==0)\n            printf(\"%ld\\n\",(sum/2));\n            else\n            printf(\"%ld\\n\",(sum/2)+1);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7215777262180975, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "b05c002e8b4bb68022e2130a768b11b6", "bug_code_uid": "e28201ad503cd1b319a2d81673a6b6ba", "src_uid": "c5389b39312ce95936eebdd83f510e40", "apr_id": "1b766c49c75914d54befdeb9a07535d7", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n, i, q=0, a=0;\r\n        scanf(\"%d\",&n);\r\n        char arr[n];\r\n        scanf(\"%s\",arr);\r\n        for(i=0;i<n;i++)\r\n        {\r\n            if(arr[i]=='Q')\r\n            q++;\r\n            else\r\n            a++;\r\n        }\r\n        if(q<=a)\r\n        printf(\"Yes\\n\");\r\n        else\r\n        printf(\"No\\n\");\r\n    }\r\n}\r\n    ", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n, i, ans=0;\r\n        scanf(\"%d\",&n);\r\n        char arr[n];\r\n        scanf(\"%s\",arr);\r\n        for(i=0;i<n;i++)\r\n        {\r\n            if(arr[i]=='A')  \r\n            ans--;\r\n            if(arr[i]=='Q')\r\n            ans++;\r\n            if(ans<0) ans=0;\r\n        }\r\n        if(ans==0) printf(\"Yes\\n\");\r\n        else printf(\"No\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.9921259842519685, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "3741693844eac5de919181c71b7f7d8b", "bug_code_uid": "f100b79bcd6b13c7f6598c9056290aaf", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "b65f165ce3c7584a1745136207ee3f09", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\nint main(){\r\n    \r\n    int i, a,b,c,count;\r\n    scanf(\"%d\",&count);\r\n    for(i=0;i<count;i++){\r\n    \tscanf(\"%d\",&a);\r\n    \tscanf(\"%d\",&b);\r\n    \tscanf(\"%d\",&c);\r\n    \tif(a+b==c||a+c==b||b+c=a)\r\n    \t\tprintf(\"YES\");\r\n    \telse\r\n    \t\tprintf(\"NO\");\r\n\r\n\t}\r\n    \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nint main(){\r\n    \r\n    int i, a,b,c,count;\r\n    scanf(\"%d\",&count);\r\n    for(i=0;i<count;i++){\r\n    \tscanf(\"%d\",&a);\r\n    \tscanf(\"%d\",&b);\r\n    \tscanf(\"%d\",&c);\r\n    \tif(a+b==c||a+c==b||b+c==a)\r\n    \t\tprintf(\"YES\\n\");\r\n    \telse\r\n    \t\tprintf(\"NO\\n\");\r\n\r\n\t}\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.5489051094890511, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "5afdc8021eac4c465f2b6598aa3b1b98", "bug_code_uid": "cf1d436b194fdec344e90a0b04b1dce7", "src_uid": "fb58bc3be4a7a78bdc001298d35c6b21", "apr_id": "e5c155289b711cf96390f2a63cfa4091", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    int n,i;\n    int count=1;\n    int c;\n    scanf(\"%d%d\",&n,&c);\n    int t[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",t[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(t[i+1]-t[i]>c)\n        {\n            count=1;\n        }\n        else\n            count++;\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    int n,i,c,j,count=1;\n    scanf(\"%d %d\",&n,&c);\n    int t[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&t[i]);\n    for(j=0;j<n-1;j++)\n    {\n        if(t[j+1]-t[j]<=c)\n            count++;\n        else\n            count=1;\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.9956616052060737, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7e0f4d69ff161051b40c9ee18210e7a0", "bug_code_uid": "3211c5f68b8ddbc0a528b0b1d44fae44", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "f1599955b2076e39ccc127ad5909e03b", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{       int n,p;\n        scanf(\"%d\",&n);\n        char s[101];\n        for(int i=0;i<n;i++)\n        {\n                scanf(\"%s\",&s);\n                if(strlen(s)>10)\n                {\n                        p=strlen(s)-2;\n\n                printf(\"%c%d%c\",s[0],p,s[(strlen(s)-1)]);\n                }\n                else\n                {\n                        printf(\"%s\",s);\n                }\n        }\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{       int n,p;\n        scanf(\"%d\",&n);\n        char s[101];\n        for(int i=0;i<n;i++)\n        {\n                scanf(\"%s\",&s);\n                if(strlen(s)>10)\n                {\n                        p=strlen(s)-2;\n\n                printf(\"%c%d%c\\n\",s[0],p,s[(strlen(s)-1)]);\n                }\n                else\n                {\n                        printf(\"%s\\n\",s);\n                }\n        }\n\n\n}\n"}
{"similarity_score": 0.4554865424430642, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "bc2e4ecbfa9ab42e247b37c147df5343", "bug_code_uid": "3e07f9c79557453a075486d2733bab6e", "src_uid": "3c63e2e682d3c8051c3cecc3fa9c4e8c", "apr_id": "5df5d8a625fd5ea7b86dbeb28d4c3213", "difficulty": 1500, "tags": ["binary search", "implementation", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\nlong int n,i;\ndouble a,b;\nlong int t[10001];\n\tscanf(\"%ld%lf%lf\",&n,&a,&b);\n\tfor (i=1;i<=n;i++)\n\n{\n\tscanf(\"%ld\",&t[i]);\nlong int  temp=t[i]*a/b;\nif (i!=n) printf(\"%ld \",t[i]-int(temp*b/a));\nelse\nprintf(\"%ld\\n\",t[i]-int(temp*b/a));\n\n}\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\nlong int n,i;\nlong long int  a,b;\nlong long int t;\n\tscanf(\"%ld%I64d%I64d\",&n,&a,&b);\n\tfor (i=1;i<=n;i++)\n\n{\n\tscanf(\"%I64d\",&t);\n\nprintf(\"%I64d \",((t*a)%b)/a);\n\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.8169905106190691, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "07a32ec41775fbc33c0a72fde7457f1f", "bug_code_uid": "988252fca16d8148124259e0c2ecedd5", "src_uid": "730cc4be2656c1dcdbda220b8778cdbf", "apr_id": "bf8dbdb2886ac5dc99570780d85c45a4", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <malloc.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tint row, j, col, i;\r\n\tint **tem;\r\n\ttem = NULL;\r\n\tscanf(\"%d\", &t);\r\n\tgetchar();\r\n\twhile (t--)\r\n\t{\r\n\t\tscanf(\"%d%d\", &row, &col);\r\n\t\tgetchar();\r\n\t\ttem = (int**)malloc(sizeof(int*) * row);\r\n\t\tfor (j = 0; j < row; j++)\r\n\t\t\ttem[j] = (int*)malloc(sizeof(int) * col);\r\n\t\tfor (j = 0; j < row; j++)\r\n\t\t\tfor (i = 0; i < col; i++)\r\n\t\t\t\ttem[j][i] = 0;//0\r\n\r\n\t\tif (col % 2 == 0)\r\n\t\t{\r\n\t\t\ttem[0][0] = 0;\r\n\t\t\ti = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\ttem[0][0] = 1;\r\n\t\t\ti = 0;\r\n\t\t}//j or o,csh\r\n\t\tfor (;; i += 2)\r\n\t\t{\r\n\t\t\tif (i > col)\r\n\t\t\t\tbreak;\r\n\t\t\telse\r\n\t\t\t\ttem[0][i] = 1;\r\n\t\t}//The first line.\r\n\t\tfor (j = 2;; j += 2)\r\n\t\t{\r\n\t\t\tif (j > row)\r\n\t\t\t\tbreak;\r\n\t\t\telse\r\n\t\t\t\ttem[j][col - 1] = 1;\r\n\t\t}//Right\r\n\t\tfor (i = col - 3;; i -= 2)\r\n\t\t{\r\n\t\t\tif (i < 0)\r\n\t\t\t\tbreak;\r\n\t\t\telse\r\n\t\t\t\ttem[row - 1][i] = 1;\r\n\t\t}//Bottom.\r\n\t\tfor (j = row - 3;; j -= 2)\r\n\t\t{\r\n\t\t\tif (j < 0)\r\n\t\t\t\tbreak;\r\n\t\t\telse\r\n\t\t\t\ttem[j][0] = 1;\r\n\t\t}//Left.\r\n\t\tif (tem[0][0] == 1)\r\n\t\t\ttem[1][0] = 0;//The last.\r\n\t\tfor (j = 0; j < row; j++)\r\n\t\t{\r\n\t\t\tfor (i = 0; i < col; i++)\r\n\t\t\t\tprintf(\"%d\", tem[j][i]);\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\tfor (j = 0; j < row; j++)\r\n\t\t\tfree(tem[j]);\r\n\t\ttem = NULL;\r\n\t\t\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tint row, j, col, i;\r\n\tint tem[30][30];\r\n\tscanf(\"%d\", &t);\r\n\tgetchar();\r\n\twhile (t--)\r\n\t{\r\n\t\tmemset(tem, 0, sizeof(tem));\r\n\t\tscanf(\"%d%d\", &row, &col);\r\n\t\tgetchar();\r\n\r\n\t\tif (col % 2 == 0)\r\n\t\t{\r\n\t\t\ttem[0][0] = 0;\r\n\t\t\ti = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\ttem[0][0] = 1;\r\n\t\t\ti = 2;\r\n\t\t}//j or o,csh\r\n\t\tfor (;; i += 2)\r\n\t\t{\r\n\t\t\tif (i > col)\r\n\t\t\t\tbreak;\r\n\t\t\telse\r\n\t\t\t\ttem[0][i] = 1;\r\n\t\t}//The first line.\r\n\t\tfor (j = 2;; j += 2)\r\n\t\t{\r\n\t\t\tif (j > row)\r\n\t\t\t\tbreak;\r\n\t\t\telse\r\n\t\t\t\ttem[j][col - 1] = 1;\r\n\t\t}//Right\r\n\t\tfor (i = col - 3;; i -= 2)\r\n\t\t{\r\n\t\t\tif (i < 0)\r\n\t\t\t\tbreak;\r\n\t\t\telse\r\n\t\t\t\ttem[row - 1][i] = 1;\r\n\t\t}//Bottom.\r\n\t\tfor (j = row - 3;; j -= 2)\r\n\t\t{\r\n\t\t\tif (j < 0)\r\n\t\t\t\tbreak;\r\n\t\t\telse\r\n\t\t\t\ttem[j][0] = 1;\r\n\t\t}//Left.\r\n\t\tif (tem[0][0] == 1 || tem[0][1])\r\n\t\t\ttem[1][0] = 0;//The last.\r\n\t\tif (col % 2 == 0)\r\n\t\t\ttem[0][0] = 0;\r\n\t\tfor (j = 0; j < row; j++)\r\n\t\t{\r\n\t\t\tfor (i = 0; i < col; i++)\r\n\t\t\t\tprintf(\"%d\", tem[j][i]);\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.997093023255814, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2b68be0adc2883799a37204a3245e359", "bug_code_uid": "d1176f748c865ad876420b99de280bf4", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "9df2a3f7217a9bbf6e017ec4e4b65739", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n,x;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int i,sum=0;\n        scanf(\"%d\",&n);\n        for(i=1;i>0;i*=2)\n        {\n\n            sum+=i;\n            if((n%sum)==0&&sum!=1)\n            {\n                x=n/sum;\n\n                break;\n            }\n        }\n        printf(\"%d\",x);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n,x;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int i,sum=0;\n        scanf(\"%d\",&n);\n        for(i=1;i>0;i*=2)\n        {\n\n            sum+=i;\n            if((n%sum)==0&&sum!=1)\n            {\n                x=n/sum;\n\n                break;\n            }\n        }\n        printf(\"%d\\n\",x);\n    }\n}\n"}
{"similarity_score": 0.9595015576323987, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7a347a0f1ee5e58d6e8b1a2235240ded", "bug_code_uid": "2b165a2f3bea26e505afd5bf9f01ef01", "src_uid": "1951bf085050c7e32fcf713132b30605", "apr_id": "a460d695584818057c77a81599ddb98e", "difficulty": 1500, "tags": ["sortings", "implementation", "*special"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n\n#define debug(x) cerr << #x\" = \" << x << endl\n\nconst int N = 1e5 + 10;\nint a[N], b[N];\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\nint main() {\n  int n, L, R;\n  scanf(\"%d%d%d\", &n, &L, &R);\n  --L;\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", &a[i]);\n  }\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", &b[i]);\n  }\n  qsort(a + L, R - L, sizeof(int), cmpfunc);\n  qsort(b + L, R - L, sizeof(int), cmpfunc);\n  int found = 0;\n  for (int i = 0; i < n; ++i) {\n    if (a[i] != b[i]) {\n      found = 1;\n      break;\n    }\n  }\n  puts(found ? \"LIE\" : \"TRUTH\");\n  return 0;\n}\n", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n\n#define debug(x) cerr << #x\" = \" << x << endl\n\nint a[110000], b[110000];\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\nint main() {\n  int n, L, R;\n  scanf(\"%d%d%d\", &n, &L, &R);\n  --L;\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", &a[i]);\n  }\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", &b[i]);\n  }\n  qsort(a + L, R - L, sizeof(int), cmpfunc);\n  qsort(b + L, R - L, sizeof(int), cmpfunc);\n  int found = 0;\n  for (int i = 0; i < n; ++i) {\n    if (a[i] != b[i]) {\n      found = 1;\n      break;\n    }\n  }\n  puts(found ? \"LIE\" : \"TRUTH\");\n  return 0;\n}\n"}
{"similarity_score": 0.9922779922779923, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "92c05abb3e9e1943392d3d90eb5ca847", "bug_code_uid": "79c8f26ff65c278cfe4c571d374e9ed8", "src_uid": "d6423f380e6ba711d175d91e73f97b47", "apr_id": "3ef8a352d0b8b7376a507ee7126ee20a", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void) \n{\n    int n,i,j=0,q=0,count=0,a=0,g=0,c=0,t=0;\n    scanf(\"%d\",&n);\n    char s[260],r[260];\n    scanf(\"%s\",s);\n    if(n%4!=0){\n    printf(\"===\\n\");\n    return 0;}\n    for(i=0;i<n;i++)\n    {\n        if(s[i]=='A')\n        a++;\n        if(s[i]=='G')\n        g++;\n        if(s[i]=='C')\n        c++;\n        if(s[i]=='T')\n        t++;\n        if(s[i]=='?'){\n        q++;r[j]=i;j++;}\n    }\n    if(a>n/4||g>n/4||c>n/4||t>n/4){\n    printf(\"===\\n\");\n    return 0;\n    }\n    i=0;\n    for(;a<n/4;a++)\n    {\n        s[r[i]]='A';\n        i++;\n    }\n    for(;g<n/4;g++)\n    {\n        s[r[i]]='G';i++;\n    }\n    for(;c<n/4;c++)\n    {\n        s[r[i]]='C';i++;\n    }\n    for(;t<n/4;t++)\n    {\n        s[r[i]]='T';i++;\n    }\n    printf(\"%s\\n\",s);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main(void) \n{\n    int n,i,j=0,q=0,count=0,a=0,g=0,c=0,t=0;\n    scanf(\"%d\",&n);\n    char s[260];int r[260];\n    scanf(\"%s\",s);\n    if(n%4!=0){\n    printf(\"===\");\n    return 0;}\n    for(i=0;i<n;i++)\n    {\n        if(s[i]=='A')\n        a++;\n        if(s[i]=='G')\n        g++;\n        if(s[i]=='C')\n        c++;\n        if(s[i]=='T')\n        t++;\n        if(s[i]=='?'){\n        q++;r[j]=i;j++;}\n    }\n    if(a>n/4||g>n/4||c>n/4||t>n/4){\n    printf(\"===\");\n    return 0;\n    }\n    i=0;\n    for(;a<n/4;a++)\n    {\n        s[r[i]]='A';\n        i++;\n    }\n    for(;g<n/4;g++)\n    {\n        s[r[i]]='G';i++;\n    }\n    for(;c<n/4;c++)\n    {\n        s[r[i]]='C';i++;\n    }\n    for(;t<n/4;t++)\n    {\n        s[r[i]]='T';i++;\n    }\n    printf(\"%s\",s);\n    return 0;\n}"}
{"similarity_score": 0.9349930843706777, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "11f0c3b19b64dc9ba161d2f57366b38d", "bug_code_uid": "b03bce776bd36f88f0ec08ef7465491f", "src_uid": "d497431eb37fafdf211309da8740ece6", "apr_id": "d632f919ed457a6f491a066cfbf38cc4", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int ara[100000],i,j,k,h1,h2,a1,a2,c1,sum,tmp,a,b,c;\n    scanf(\"%d%d%d%d%d\",&h1,&a1,&c1,&h2,&a2);\n    k=0;\n    while(1){\n        if(h1<a2){\n            h1+=c1;\n            h1-=a2;\n            ara[k++]=1;\n        }\n        if(h1==a2){\n            if(a1>=h2){\n                ara[k++]=2;\n                break;\n            }\n            else{\n                h1+=c1;\n                h1-=a2;\n                ara[k++]=1;\n            }\n        }\n        else{\n            h2-=a1;\n            h1-=a2;\n            ara[k++]=2;\n        }\n        if(h2<=0)\n            break;\n    }\n    printf(\"%d\\n\",k);\n    for(i=0;i<k;i++){\n        if(ara[i]==1)\n            printf(\"HEAL\\n\");\n        else\n            printf(\"STRIKE\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int ara[100000],i,j,k,h1,h2,a1,a2,c1,sum,tmp,a,b,c;\n    scanf(\"%d%d%d%d%d\",&h1,&a1,&c1,&h2,&a2);\n    k=0;\n    while(1){\n        if(h1<=a2){\n            if(a1>=h2){\n                ara[k++]=2;\n                break;\n            }\n            else{\n                h1+=c1;\n                h1-=a2;\n                ara[k++]=1;\n            }\n        }\n\n        else{\n            h2-=a1;\n            h1-=a2;\n            ara[k++]=2;\n        }\n        if(h2<=0)\n            break;\n    }\n    printf(\"%d\\n\",k);\n    for(i=0;i<k;i++){\n        if(ara[i]==1)\n            printf(\"HEAL\\n\");\n        else\n            printf(\"STRIKE\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9968051118210862, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d557236a3caaf0c30b69f55d8d7a2ce3", "bug_code_uid": "4423eb4b74ba792b930996de90bac1bf", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "14b779cdafc2c1b516eea65dbc39b898", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,a[100005],b;\n    long long i,s;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        s=0;\n        scanf(\"%d\",&m);\n        for(i=0;i<m;i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n        b=a[0];\n        for(i=0;i<m;i++)\n        {\n            if(b<=a[i])\n            {\n                b=a[i];\n            }\n            else\n            {\n                s+=n;\n                b=a[i];\n            }\n        }\n        if(s==0)\n            printf(\"%d\\n\",a[i-1]-1);\n        else \n            {\n                printf(\"%ld\\n\",s+a[i-1]-1);             \n        }\n\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,a[100005],b;\n    long long i,s;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        s=0;\n        scanf(\"%d\",&m);\n        for(i=0;i<m;i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n        b=a[0];\n        for(i=0;i<m;i++)\n        {\n            if(b<=a[i])\n            {\n                b=a[i];\n            }\n            else\n            {\n                s+=n;\n                b=a[i];\n            }\n        }\n        if(s==0)\n            printf(\"%d\\n\",a[i-1]-1);\n        else \n            {\n                printf(\"%lld\\n\",s+a[i-1]-1);                \n        }\n\n    }\n    return 0;\n}"}
{"similarity_score": 0.9994340690435767, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1a168fffc9bef6fb31778e4bd240da0b", "bug_code_uid": "5e29e2dc1f36540eca357a7d5c4e2097", "src_uid": "8b926a19f380a56018308668c17c6928", "apr_id": "a31d82ae82a25cdd1b24b283e8c2d7c3", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <limits.h>\r\n\r\nint getMaxIdx(int arr[], int n, int prevIdx) {\r\n\t\r\n\tint maxIdx = (prevIdx == 0 ? prevIdx+1 : 0);\r\n\tfor(int i = 0; i < n; i++) {\r\n\t\tif(i != prevIdx && arr[i] > arr[maxIdx]) {\r\n\t\t\tmaxIdx = i;\r\n\t\t}\r\n\t}\r\n\treturn maxIdx;\r\n}\r\n\r\nint main() {\r\n\t\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--) {\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tint arr[n];\r\n\t\tfor(int i = 0; i < n; i++) {\r\n\t\t\tscanf(\"%d\", &arr[i]);\r\n\t\t}\r\n\t\t\r\n\t\tif(n == 1) {\r\n\t\t\tprintf((arr[0] == 1) ? \"YES\\n\" : \"NO\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\t\r\n\t\t// Find top 2 max\r\n\t\tint max1 = INT_MIN, max2 = INT_MIN;\r\n\t\tfor(int i = 0; i < n; i++) {\r\n\t\t\tif(arr[i] > max1) {\r\n\t\t\t\tmax2 = max1;\r\n\t\t\t\tmax1 = arr[i];\r\n\t\t\t}\r\n\t\t\telse if(arr[i] < max1) {\r\n\t\t\t\tif(arr[i] > max2) {\r\n\t\t\t\t\tmax2 = arr[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(max1 >= max2 + 2) {\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <limits.h>\r\n\r\nint getMaxIdx(int arr[], int n, int prevIdx) {\r\n\t\r\n\tint maxIdx = (prevIdx == 0 ? prevIdx+1 : 0);\r\n\tfor(int i = 0; i < n; i++) {\r\n\t\tif(i != prevIdx && arr[i] > arr[maxIdx]) {\r\n\t\t\tmaxIdx = i;\r\n\t\t}\r\n\t}\r\n\treturn maxIdx;\r\n}\r\n\r\nint main() {\r\n\t\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--) {\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tint arr[n];\r\n\t\tfor(int i = 0; i < n; i++) {\r\n\t\t\tscanf(\"%d\", &arr[i]);\r\n\t\t}\r\n\t\t\r\n\t\tif(n == 1) {\r\n\t\t\tprintf((arr[0] == 1) ? \"YES\\n\" : \"NO\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\t\r\n\t\t// Find top 2 max\r\n\t\tint max1 = INT_MIN, max2 = INT_MIN;\r\n\t\tfor(int i = 0; i < n; i++) {\r\n\t\t\tif(arr[i] > max1) {\r\n\t\t\t\tmax2 = max1;\r\n\t\t\t\tmax1 = arr[i];\r\n\t\t\t}\r\n\t\t\telse if(arr[i] <= max1) {\r\n\t\t\t\tif(arr[i] > max2) {\r\n\t\t\t\t\tmax2 = arr[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(max1 >= max2 + 2) {\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8463508322663252, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "b55607a74033c648d0dab970256871f2", "bug_code_uid": "7e0a3a717626446dbf80890747cd845a", "src_uid": "c408b1d198c7c88fc635936d960c962a", "apr_id": "1ba074fb5ed5def6d10f3213848bb677", "difficulty": 1400, "tags": ["games", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,max,i,j=0,k;\n    long long int ans=-1000000000000000001;\n    scanf(\"%d%d\",&n,&m);\n    long long int tommy[n],Banban[m];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&tommy[i]);\n    }\n    for(j=0;j<m;j++)\n    {\n        scanf(\"%I64d\",&Banban[j]);\n    }\n    long long int exclude=tommy[0]*Banban[0];\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            if(tommy[i]*Banban[j]>exclude)\n            {\n                ans=exclude;\n                exclude=tommy[i]*Banban[j];\n            }\n            else if(tommy[i]*Banban[j]>ans)\n            {\n                ans=tommy[i]*Banban[j];\n            }\n        }\n    }\n    printf(\"%I64d\",ans);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,k;\n    long long int ans=-1000000000000000001;\n    scanf(\"%d%d\",&n,&m);\n    long long int tommy[n],Banban[m];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&tommy[i]);\n    }\n    for(j=0;j<m;j++)\n    {\n        scanf(\"%I64d\",&Banban[j]);\n    }\n    long long int exclude=tommy[0]*Banban[0];\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            if(tommy[i]*Banban[j]>exclude)\n            {\n                exclude=tommy[i]*Banban[j];\n                k=i;\n            }\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(i!=k)\n        {\n            for(j=0;j<m;j++)\n            {\n                if(tommy[i]*Banban[j]>ans)\n                {\n                    ans=tommy[i]*Banban[j];\n                }\n            }\n        }\n    }\n    printf(\"%I64d\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.31212615551930395, "equal_cnt": 21, "replace_cnt": 16, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "5bcdedf1c841673a54704f3ff8aa6f7c", "bug_code_uid": "a0f104ddf589a0ad39e4b5c9a7bddaba", "src_uid": "3ae468c425c7b156983414372fd35ab8", "apr_id": "569b1eb6edc008db4ad111a26edaf174", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,test,ans,m,cout=0;\n    scanf(\"%d\",&test);\n    for(i=0;i<test;i++)\n       {\n        scanf(\"%d\",&m);\n        if(m==1)\n            printf(\"0\\n\");\n        else\n        {\n            if(m<6)\n        {\n            while(1)\n            {\n                m=m*2;\n                cout++;\n                if(m>=6)\n                    break;\n            }\n        }\n         if(m%6!=0)\n            printf(\"-1\\n\");\n        else\n        {\n            while(1)\n            {\n                ans=m/6;\n                cout++;\n                if(ans==1)\n                {\n                    printf(\"%d\\n\",cout);\n                    break;\n                }\n                if(ans==0)\n                    break;\n            }\n            printf(\"%d\\n\",cout);\n           cout=0;\n        }\n\n        }\n\n\n       }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int test,n,ans,cout2=0,cout3=0,other=0;\n    scanf(\"%d\",&test);\n    while(test--)\n       {\n        scanf(\"%d\",&n);\n        if(n==1)\n            printf(\"0\\n\");\n        else\n                {\n                  while(n>1)\n                  {\n                      if(n%2==0)\n                        {\n                          cout2++;\n                          n=n/2;\n                        }\n                      else if(n%3==0)\n                        {\n                          cout3++;\n                          n=n/3;\n                        }\n                        else\n                        {other++;\n                         break;\n                         }\n\n                  }\n         if(other>0)\n            printf(\"-1\\n\");\n         else if(cout2>cout3)\n               printf(\"-1\\n\");\n         else if(cout3>=cout2)\n            printf(\"%d\\n\",(cout3-cout2)+cout3);\n         cout2=0;\n         cout3=0;\n         other=0;\n                }\n\n       }\n\n\n\n\n}\n"}
{"similarity_score": 0.9031318281136198, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "edd7632243f2bc77aab47e646fbc1ca8", "bug_code_uid": "caffa9740b2c520c9a38ff66fa58db49", "src_uid": "38fe0e19974a7bc60153793b9060369a", "apr_id": "6832fdfa95bf2d9c8e6ef4ef01f86681", "difficulty": 1500, "tags": ["two pointers", "binary search", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nstruct friend {\n\tint m; \n\tlong long s;\n} *ff;\n\nint compare(const void *a, const void *b) {\n\tstruct friend *pa = (struct friend *) a;\n\tstruct friend *pb = (struct friend *) b;\n\n\treturn pa->m != pb->m ? pa->m - pb->m : pb->s - pa->s;\n}\n\nint main() {\n\tint i, j, n, d;\n\tlong long max, sum;\n\n\tscanf(\"%d%d\", &n, &d);\n\tff = malloc(n * sizeof(*ff));\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d%lld\", &ff[i].m, &ff[i].s);\n\tqsort(ff, n, sizeof(*ff), compare);\n\tmax = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tsum = 0;\n\t\tfor (j = i; j < n && ff[j].m - ff[i].m < d; j++)\n\t\t\tsum += ff[j].s;\n\t\tif (max < sum)\n\t\t\tmax = sum;\n\t}\n\tprintf(\"%lld\\n\", max);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nstruct friend {\n\tint m; \n\tlong long s;\n} *ff;\n\nint compare(const void *a, const void *b) {\n\tstruct friend *pa = (struct friend *) a;\n\tstruct friend *pb = (struct friend *) b;\n\n\treturn pa->m != pb->m ? pa->m - pb->m : pb->s - pa->s;\n}\n\nint main() {\n\tint i, j, n, d;\n\tlong long max, sum;\n\n\tscanf(\"%d%d\", &n, &d);\n\tff = malloc(n * sizeof(*ff));\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d%lld\", &ff[i].m, &ff[i].s);\n\tqsort(ff, n, sizeof(*ff), compare);\n\tj = 0;\n\tmax = sum = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tif (ff[i].m - ff[j].m < d)\n\t\t\tsum += ff[i].s;\n\t\telse {\n\t\t\tsum -= ff[j].s;\n\t\t\ti--;\n\t\t\tj++;\n\t\t}\n\t\tif (max < sum)\n\t\t\tmax = sum;\n\t}\n\tprintf(\"%lld\\n\", max);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9355191256830601, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "0c3441e624a0f9b8834c2521820edcad", "bug_code_uid": "0b223e1fdf9a395e49c6b266b0fb8377", "src_uid": "ee8ca9b2c6104d1ff9ba1fc39e9df277", "apr_id": "a881c2f8a8c8c96ea8c4522a7cda4526", "difficulty": 1100, "tags": ["dp", "graphs"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint a[200001], b[200001];\r\nint checked[200001];\r\n\r\nint check(int i, int n)\r\n{\r\n    int ct = a[i];\r\n    if (i + a[i] <= n && checked[i + a[i]] == 1)\r\n        ct += b[i + a[i]];\r\n    else if (i + a[i] > n)\r\n    {\r\n        b[i] = ct;\r\n        checked[i] = 1;\r\n    }\r\n    else\r\n        ct += check(i+a[i], n);\r\n    return ct;\r\n}\r\n\r\nint main()\r\n{\r\n\tint times, n, i, j, k, max, ct, h;\r\n\tscanf(\"%d\", &times);\r\n\t\r\n\tfor (j = 1; j <= times; j++)\r\n\t{\r\n\t    for (h=0; h<=200000; h++)\r\n\t        checked[h] = 0;\r\n\r\n\t    scanf(\"\\n%d\", &n);\r\n\t    max = 0;\r\n        for (i=1; i <= n; i++)\r\n        {\r\n            scanf(\"%d\", &a[i]);\r\n        }\r\n        for (i=1; i <= n; i++)\r\n        {\r\n                b[i] = check(i, n);\r\n                if (b[i] > max)\r\n                    max = b[i];\r\n        }\r\n        printf(\"%d\\n\", max);\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\nint a[200001], b[200001];\r\nint checked[200001];\r\n\r\nint check(int i, int n)\r\n{\r\n    int ct = a[i];\r\n    if (i + a[i] <= n && checked[i + a[i]] == 1)\r\n    {\r\n        ct += b[i + a[i]];\r\n        b[i] = ct;\r\n        checked[i] = 1;\r\n    }\r\n    else if (i + a[i] > n)\r\n    {\r\n        b[i] = ct;\r\n        checked[i] = 1;\r\n    }\r\n    else\r\n    {\r\n        ct += check(i+a[i], n);\r\n        b[i] = ct;\r\n        checked[i] = 1;\r\n    }\r\n    return ct;\r\n}\r\n\r\nint main()\r\n{\r\n\tint times, n, i, j, k, max, ct, h;\r\n\tscanf(\"%d\", &times);\r\n\t\r\n\tfor (j = 1; j <= times; j++)\r\n\t{\r\n\t    for (h=0; h<=200000; h++)\r\n\t        checked[h] = 0;\r\n\r\n\t    scanf(\"\\n%d\", &n);\r\n\t    max = 0;\r\n        for (i=1; i <= n; i++)\r\n        {\r\n            scanf(\"%d\", &a[i]);\r\n        }\r\n        for (i=1; i <= n; i++)\r\n        {\r\n                b[i] = check(i, n);\r\n                if (b[i] > max)\r\n                    max = b[i];\r\n        }\r\n        printf(\"%d\\n\", max);\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9832007073386384, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "93622fd157d3d1acde4cb59963a84847", "bug_code_uid": "e76376247816f00f0d787c78d19a7b42", "src_uid": "960e4c234666d2444b80d5966f1d285d", "apr_id": "69bf9abb1f9659cd65e854457873679e", "difficulty": 1300, "tags": ["two pointers", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nvoid slice(char *st,char *new,int sta, int nd)\n{\n    int j = 0;\n    for (int i = sta; i < nd; i++ ) \n    {\n        new[j++] = st[i];\n    }\n    new[j] = '\\0';\n\n}\nint main()\n{\n    char s[1000000],p[1000000];\n    unsigned int i,l,r=0,h=0;\n    scanf(\"%s\",s);\n    l=strlen(s);\n    for(i=0;i<l;i++)\n    {\n        slice(s,p,i,i+5);\n        if(strcmp(p,\"heavy\")==0)\n        {\n            h=h+1;\n        }\n        else if(strcmp(p,\"metal\")==0)\n        {\n            r=r+h;\n        }\n        \n            \n    }\n    printf(\"%u\\n\",r);\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nvoid slice(char *st,char *new,int sta, int nd)\n{\n    int j = 0;\n    for (int i = sta; i < nd; i++ ) \n    {\n        new[j++] = st[i];\n    }\n    new[j] = '\\0';\n\n}\nint main()\n{\n    char s[1000000],p[1000000];\n    long long int i,l,r=0,h=0;\n    scanf(\"%s\",s);\n    l=strlen(s);\n    for(i=0;i<l;i++)\n    {\n        slice(s,p,i,i+5);\n        if(strcmp(p,\"heavy\")==0)\n        {\n            h=h+1;\n        }\n        else if(strcmp(p,\"metal\")==0)\n        {\n            r=r+h;\n        }\n        \n            \n    }\n    printf(\"%lld\\n\",r);\n}"}
{"similarity_score": 0.5703971119133574, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "78e60c18305a02470920aabcc510d748", "bug_code_uid": "4bc806e283edb62fc1df6c8deb09c58d", "src_uid": "337b6d2a11a25ef917809e6409f8edef", "apr_id": "d2fad32918072ef1c447607bd33c3f2a", "difficulty": 1400, "tags": ["dp", "implementation", "greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define max(a, b) (a > b) ? (a) : (b);\n\nint R, C, Q;\nint grid[502][502];\n\nint maxConsecutiveRow();\n\nint main()\n{\n\tint i, r, c;\n\n\tscanf(\"%d %d %d\", &R, &C, &Q);\n\tfor(r = 1; r <= R; r++) {\n\t\tfor(c = 1; c <= C; c++) {\n\t\t\tscanf(\"%d\", &grid[r][c]);\n\t\t}\n\t}\n\tfor(i = 0; i < Q; i++) {\n\t\tscanf(\"%d %d\", &r, &c);\n\t\tgrid[r][c] = !(grid[r][c]);\n\t\tprintf(\"%d\\n\", maxConsecutiveRow());\n\t}\n\t\n\treturn 0;\n}\n\nint maxConsecutiveRow() {\n\tint ret = 0, r, c, cnt;\n\t\n\tfor(r = 1; r <= R; r++) {\n\t\t//cnt = 0;\n\t\tfor(c = 1; c <= C; ) {\n\t\t\tif(!grid[r][c])\t{\n\t\t\t\tc++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcnt = 0;\n\t\t\twhile(grid[r][c]) {\n\t\t\t\tc++;\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\tret = max(ret, cnt);\n\t\t}\n\t}\n\treturn ret;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#define max(a, b) (a > b) ? (a) : (b);\n\nint R, C, Q;\nint grid[502][502], sum[502];\n\nvoid init();\nint maxConsecutive(int r);\nint maxConsecutiveRow(int row);\n\nint main()\n{\n\tint i, r, c;\n\n\tscanf(\"%d %d %d\", &R, &C, &Q);\n\tfor(r = 1; r <= R; r++) {\n\t\tfor(c = 1; c <= C; c++) {\n\t\t\tscanf(\"%d\", &grid[r][c]);\n\t\t}\n\t}\n\tinit();\n\tfor(i = 0; i < Q; i++) {\n\t\tscanf(\"%d %d\", &r, &c);\n\t\tgrid[r][c] = !(grid[r][c]);\n\t\tprintf(\"%d\\n\", maxConsecutiveRow(r));\n\t}\n\t\n\treturn 0;\n}\n\nvoid init() {\n\tint r;\n\t\n\tfor(r = 1; r <= R; r++) {\n\t\tsum[r] = maxConsecutive(r);\n\t}\n}\n\nint maxConsecutive(int r) {\n\tint ret = 0, c, cnt;\n\t\n\tfor(c = 1; c <= C; ) {\n\t\tif(!grid[r][c]) {\n\t\t\tc++;\n\t\t\tcontinue;\n\t\t}\n\t\tcnt = 0;\n\t\twhile(grid[r][c]) {\n\t\t\tc++;\n\t\t\tcnt++;\n\t\t}\n\t\tret = max(ret, cnt);\n\t}\n\treturn ret;\n}\n\nint maxConsecutiveRow(int row) {\n\tint ret = 0, r, c, cnt, maximum = 0;\n\t\n\tsum[row] = maxConsecutive(row);\n\tfor(r = 1; r <= R; r++) {\n\t\tret = max(ret, sum[r]);\n\t}\n\treturn ret;\n}\n"}
{"similarity_score": 0.9167643610785463, "equal_cnt": 11, "replace_cnt": 0, "delete_cnt": 5, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "d9b85142262e00ff178f418354c3fcf9", "bug_code_uid": "50c4db7e66e30a879f1273ce227284b5", "src_uid": "12a768b502ddb07798830c9728fba5c4", "apr_id": "bc065facde67b7802f10326e60e13ea4", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <cstdio>\n\nint cnt_r[1020],cnt_c[1020];\n\nint main()\n{\n\tint r,c,cnt=0;\n\tchar x;\n\tscanf(\"%d%d\",&r,&c);\n\tfor (int i=1;i<=r;i++)\n\t\tfor (int j=1;j<=c;j++)\n\t\t{\n\t\t\tscanf(\" %c\",&x);\n\t\t\tif (x=='*')\n\t\t\t\tcnt_r[i]++,\n\t\t\t\tcnt_c[j]++,\n\t\t\t\tcnt++;\n\t\t}\n\tfor (int i=1;i<=r;i++)\n\t\tfor (int j=1;j<=c;j++)\n\t\t\tif (cnt_r[i]+cnt_c[j] >= cnt)\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n%d %d\",i,j);\n\t\t\t\treturn 0;\n\t\t\t}\n\tprintf(\"NO\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint cnt_r[1020],cnt_c[1020],wall[1020][1020];\n\nint main()\n{\n\tint r,c,cnt=0,i,j;\n\tchar x;\n\tscanf(\"%d%d\",&r,&c);\n\tfor (i=1;i<=r;i++)\n\t\tfor (j=1;j<=c;j++)\n\t\t{\n\t\t\tscanf(\" %c\",&x);\n\t\t\tif (x=='*')\n\t\t\t\tcnt_r[i]++,\n\t\t\t\tcnt_c[j]++,\n\t\t\t\twall[i][j] = 1,\n\t\t\t\tcnt++;\n\t\t}\n\tfor (i=1;i<=r;i++)\n\t\tfor (j=1;j<=c;j++)\n\t\t\tif (cnt_r[i]+cnt_c[j]-wall[i][j] >= cnt)\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n%d %d\",i,j);\n\t\t\t\treturn 0;\n\t\t\t}\n\tprintf(\"NO\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9865711727842436, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "ebcf3f7d52aa449ae352edc2a980e9ed", "bug_code_uid": "9d5b2623d0dedb8df33fbe52eb74068a", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "13d7d95b2130d6b7075f7afddaf6c150", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,c=0;\n    scanf(\"%d\",&n);\n    long long int a[100005],p;\n    for(i=0;i<n;i++)\n        scanf(\"%lld\",&a[i]);\n    for(i=0;i<n;i++)\n    {\n        if(a[i]>4 && a[i]%2==0)\n            {printf(\"NO\\n\");c=0;}\n        else{\n            p=sqrt(a[i]);\n            if(p*p==a[i]){\n            for(j=2;j*j<=p;j++)\n\n            {\n                if(a[i]%j==0){c++;if(c>1)break;}\n\n            }\n            if(c){printf(\"NO\\n\");c=0;}\n            else{printf(\"YES\\n\");c=0;}\n            }\n            else{printf(\"NO\\n\");}\n        }\n    }}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,c=0;\n    scanf(\"%d\",&n);\n    long long int a[100005],p;\n    for(i=0;i<n;i++)\n        scanf(\"%lld\",&a[i]);\n    for(i=0;i<n;i++)\n    {\n        if(a[i]<4)\n            {printf(\"NO\\n\");c=0;}\n        else{\n            p=sqrt(a[i]);\n            if(p*p==a[i]){\n            for(j=2;j*j<=p;j++)\n\n            {\n                if(a[i]%j==0){c++;if(c>1)break;}\n\n            }\n            if(c){printf(\"NO\\n\");c=0;}\n            else{printf(\"YES\\n\");c=0;}\n            }\n            else{printf(\"NO\\n\");}\n        }\n    }}\n"}
{"similarity_score": 0.9992044550517104, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ee87dbf592973a0832235b622b0df529", "bug_code_uid": "1bfa31adc1eee21ba5d88ac91e8b94b2", "src_uid": "f472f9df8b4d588c67b39df6865507ca", "apr_id": "92e7a725affbb98f0fd3338b7f561e2c", "difficulty": 1000, "tags": ["greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n  int t,n,o,z,mis[1000],i,j;\r\n  char str[1001];\r\n  scanf(\"%d\",&t);\r\n  while(t)\r\n  { \r\n    j=0;\r\n     n=o=0;\r\n    scanf(\"%d\\n\",&n);\r\n   gets(str);\r\n   for(i=0;i<n;++i)\r\n     if(str[i]=='1')\r\n      o++;\r\n    z=n-o;\r\n  for(i=0,j=0;i<n;++i)\r\n   {\r\n    if((str[i]=='1')&&(i<z))\r\n      mis[j++]=i+1;\r\n    else if((str[i]=='0')&&(i>=z))\r\n      mis[j++]=i+1;\r\n   }\r\n   if(j==0)\r\n    printf(\"0\\n\");\r\n   else\r\n   {\r\n    printf(\"1\\n\");\r\n    printf(\"%d \",j);\r\n   for(i=0;i<j;++i)\r\n    printf(\"%d\",mis[i]);\r\n    printf(\"\\n\");\r\n    }\r\n    t--;\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n  int t,n,o,z,mis[1000],i,j;\r\n  char str[1001];\r\n  scanf(\"%d\",&t);\r\n  while(t)\r\n  { \r\n    j=0;\r\n     n=o=0;\r\n    scanf(\"%d\\n\",&n);\r\n   gets(str);\r\n   for(i=0;i<n;++i)\r\n     if(str[i]=='1')\r\n      o++;\r\n    z=n-o;\r\n  for(i=0,j=0;i<n;++i)\r\n   {\r\n    if((str[i]=='1')&&(i<z))\r\n      mis[j++]=i+1;\r\n    else if((str[i]=='0')&&(i>=z))\r\n      mis[j++]=i+1;\r\n   }\r\n   if(j==0)\r\n    printf(\"0\\n\");\r\n   else\r\n   {\r\n    printf(\"1\\n\");\r\n    printf(\"%d \",j);\r\n   for(i=0;i<j;++i)\r\n    printf(\"%d \",mis[i]);\r\n    printf(\"\\n\");\r\n    }\r\n    t--;\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8870867124142233, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b8ce95c566e1dbbd77c217111f713b55", "bug_code_uid": "182234d4c6aa93928944c1334293f98a", "src_uid": "6e85f83d544eeb16f57523eb532abf04", "apr_id": "48f2260d4d9a9e8cd203d4035d33740b", "difficulty": 1700, "tags": ["combinatorics", "dfs and similar", "brute force", "graphs"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\ntypedef struct graph\n{\n\tint data;\n\tstruct graph *next;\n}graph;\ngraph **head;\nvoid insert(int a,int b)\n{\n\tgraph *node=(graph*)malloc(sizeof(graph));\n\tnode->data=b;\n\tnode->next=head[a];\n\thead[a]=node;\n}\nint main()\n{\n\tint v,e,i,j,a,b,**adj,cnt,res=0;\n\tscanf(\"%d%d\",&v,&e);\n\thead=(graph**)malloc((v+1)*sizeof(graph*));\n\tadj=(int**)malloc((v+1)*sizeof(int*));\n\tfor(i=1;i<=v;i++)\n\t\tadj[i]=(int*)malloc((v+1)*sizeof(int));\n\tfor(i=1;i<=v;i++)\n\t\tfor(j=1;j<=v;j++)\n\t\t\tadj[i][j]=0;\n\tfor(i=0;i<e;i++)\n\t{\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tinsert(a,b);\n\t\tadj[a][b]=1;\n\t}\n\tfor(i=1;i<=v;i++)\n\t\tfor(j=1;j<=v;j++)\n\t\t\tif(i!=j)\n\t\t\t{\n\t\t\t\tcnt=0;\n\t\t\t\tgraph *temp=head[i];\n\t\t\t\twhile(temp!=NULL)\n\t\t\t\t{\n\t\t\t\t\tif(adj[i][temp->data]==1 && adj[temp->data][j]==1)\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\ttemp=temp->next;\n\t\t\t\t}\n\t\t\t\tres+=(cnt*(cnt-1))/2;\n\t\t\t}\n\tprintf(\"%d\\n\",res);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\ntypedef struct graph\n{\n\tint data;\n\tstruct graph *next;\n}graph;\ngraph *head[3001];\nvoid insert(int a,int b)\n{\n\tgraph *node=(graph*)malloc(sizeof(graph));\n\tnode->data=b;\n\tnode->next=head[a];\n\thead[a]=node;\n}\nint main()\n{\n\tint v,e,i,j,a,b,adj[3001][3001],cnt,res=0;\n\tscanf(\"%d%d\",&v,&e);\n\tfor(i=1;i<=v;i++)\n\t\tfor(j=1;j<=v;j++)\n\t\t\tadj[i][j]=0;\n\tfor(i=0;i<e;i++)\n\t{\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tinsert(a,b);\n\t\tadj[a][b]=1;\n\t}\n\tfor(i=1;i<=v;i++)\n\t\tfor(j=1;j<=v;j++)\n\t\t\tif(i!=j)\n\t\t\t{\n\t\t\t\tcnt=0;\n\t\t\t\tgraph *temp=head[i];\n\t\t\t\twhile(temp!=NULL)\n\t\t\t\t{\n\t\t\t\t\tif(adj[i][temp->data]==1 && adj[temp->data][j]==1)\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\ttemp=temp->next;\n\t\t\t\t}\n\t\t\t\tres+=(cnt*(cnt-1))/2;\n\t\t\t}\n\tprintf(\"%d\\n\",res);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8810126582278481, "equal_cnt": 9, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "56b69ac699e1029f99f82b9ead9858d7", "bug_code_uid": "aae00565edf4fd87be9591ea566654f5", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "0ca6ca3b4f09c6c31f0307582ada5acc", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void *a,const void *b){\n\tif(*(int *)a>*(int*)b)\treturn 1;\n\telse return -1;\n}\nint main(){\n\tlong int n,m,max,i,a[n];\n\tscanf(\"%ld %ld\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%ld\",&a[i]);\n\ta[i++]=m;\n\tqsort(a,n,sizeof(long int),cmp);\n\tmax=2*a[0];\n\tfor(i=0;i<n;i++)\n\t\tif(max<a[i+1]-a[i])\tmax=a[i+1]-a[i];\n\tprintf(\"%.6f\",max/2.0);\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void *a,const void *b){\n\tif(*(int *)a>*(int*)b)\treturn 1;\n\telse return -1;\n}\nint main(){\n    long int n,m,i;\n    double max;\n\tscanf(\"%ld %ld\",&n,&m);\n\tlong int a[n];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%ld\",&a[i]);\n\tqsort(a,n,sizeof(int),cmp);\n\tmax=2*a[0]>2*(m-a[n-1])? 2*a[0]:2*(m-a[n-1]);\n\tfor(i=0;i<n-1;i++)\n\t\tif(max<a[i+1]-a[i])\tmax=a[i+1]-a[i];\n\tprintf(\"%.6f\",max/2.0);\n}"}
{"similarity_score": 0.9946524064171123, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "41082a9761c01695f65a96c03b8c77d9", "bug_code_uid": "97fe6364192bead274cc514e149c0fcf", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "108fda7ef2e044dde0d1d0da0acd3f32", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint i=0;\n\n\n \nint main(){\n    int x,j;\n    char ch[3];\n    scanf(\"%d\",&x);\n    for(j=0;j<x;j++){\n    scanf(\"%s\",&ch);\n      if(ch[1]=='+'){\n        i+=1;\n    }\n    else if(ch[1]=='-'){\n        i-=1;\n}\n    }\n    printf(\"%d\",i);\n \n    \n    \n    \n    \n    return 0;\n}", "fixed": "#include<stdio.h>\nint i=0;\n\n\n \nint main(){\n    int x,j;\n    char ch[4];\n    scanf(\"%d\",&x);\n    for(j=0;j<x;j++){\n    scanf(\"%s\",ch);\n      if(ch[1]=='+'){\n        i+=1;\n    }\n    else if(ch[1]=='-'){\n        i-=1;\n}\n    }\n    printf(\"%d\",i);\n \n    \n    \n    \n    \n    return 0;\n}"}
{"similarity_score": 0.9063400576368876, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "fd38a60e7225f08f0f3b04622e979b71", "bug_code_uid": "2ea9afbce413bbd2cb8161551d0bb383", "src_uid": "71335a9489f0985f4e16435b14d6a34a", "apr_id": "9afffbeccc69ccd2eea4fef5b84f4fc7", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int numberSets;\r\n    scanf(\"%d\", &numberSets);\r\n\r\n    for (int setNumber = 1; setNumber <= numberSets; setNumber++) {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n\r\n        int c1, c2, kek;\r\n        kek = n / 3;\r\n        if (n % 3 == 0) {\r\n            c1 = kek;\r\n            c2 = kek;\r\n        } else if (n == 1) {\r\n            c1 = kek + 1;\r\n            c2 = kek;\r\n        } else if (n % 10 != 0) {\r\n            c1 = kek;\r\n            c2 = kek + 1;\r\n        } else {\r\n            c1 = kek + 1;\r\n            c2 = kek;\r\n        }\r\n\r\n\r\n        printf(\"%d %d\\n\", c1, c2);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int numberSets;\r\n    scanf(\"%d\", &numberSets);\r\n\r\n    for (int setNumber = 1; setNumber <= numberSets; setNumber++) {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n\r\n        int c1, c2, kek;\r\n        kek = 1.0 * (n / 3);\r\n        if (n % 3 == 0) {\r\n            c1 = kek;\r\n            c2 = kek;\r\n        } else if (n == 1) {\r\n            c1 = kek + 1;\r\n            c2 = kek;\r\n        } else if (n % 10 != 0) {\r\n            c1 = kek;\r\n            c2 = kek + 1;\r\n        } else {\r\n            c1 = kek + 1;\r\n            c2 = kek;\r\n        }\r\n        if (c1 + c2 * 2 == n) {\r\n            printf(\"%d %d\\n\", c1, c2);\r\n        } else {\r\n            printf(\"%d %d\\n\", c2, c1);\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9728033472803347, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8cec3be01194ead73d3d2fcdc039d8a6", "bug_code_uid": "5a8eed4dba4eedbd747bd3918ca69084", "src_uid": "71be4cccd3b8c494ad7cc2d8a00cf5ed", "apr_id": "f92e4e21e45fb0f723b0c92cf4306404", "difficulty": 1000, "tags": ["brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    unsigned long long int t,k,l,count=0,c=99999999;\n    scanf(\"%d%d\",&t,&k);\n    while(t--)\n    {\n        unsigned int a=0,b=0;\n        scanf(\"%d%d\",&a,&b);\n        count++;\n        while(1)\n        {\n            if(a>=k)\n            {\n                if(c>a)\n                {\n                    c=a;\n                    l=count;\n                }\n                break;\n            }\n            a=a+b;\n        }\n    }\n    printf(\"%d\",l);\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t,k;\n    unsigned long long int l,count=0,c=99999999;\n    scanf(\"%d%d\",&t,&k);\n    while(t--)\n    {\n        int a=0,b=0;\n        scanf(\"%d%d\",&a,&b);\n        count++;\n        while(1)\n        {\n            if(a>=k)\n            {\n                if(c>a)\n                {\n                    c=a;\n                    l=count;\n                }\n                break;\n            }\n            a=a+b;\n        }\n    }\n    printf(\"%d\",l);\n}\n"}
{"similarity_score": 0.6150061500615006, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "e141ecdeac3dd435d1ce8b13e9c0723c", "bug_code_uid": "0b7cce5698929aa44a18e5af545c4b80", "src_uid": "75a00d8a614fd0bcb8504b0268a121e0", "apr_id": "59780770445c962fbd8c3bd58183cc68", "difficulty": 1700, "tags": [], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nshort n,a[100000+10];\n\nint main()\n{\n    scanf(\"%hd\",&n);\n    short i;\n    for (i=1;i<=n;i++) scanf(\"%hd\",&a[i]);\n    i=1;\n    while (i<=n&&a[1]==a[i]) i++;\n    int sum=i-1;\n    short kt=1;\n    while (i<=n)\n    {\n        short j=i;\n        while (j<=n&&a[j]==a[i]) j++;\n        if (j-i!=sum) {kt=0;break;}\n        i=j;\n    }\n    if (kt==1) printf(\"YES\"); else printf(\"NO\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nshort a[100000+10];\n\nint main()\n{\n    int n,i,sum;\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;i++) scanf(\"%hd\",&a[i]);\n    i=1;\n    while (i<=n&&a[1]==a[i]) i++;\n    sum=i-1;\n    short kt=1;\n    while (i<=n)\n    {\n        int j=i;\n        while (j<=n&&a[j]==a[i]) j++;\n        if (j-i!=sum) {kt=0;break;}\n        i=j;\n    }\n    if (kt==1) printf(\"YES\"); else printf(\"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.23758099352051837, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "c0761c37b734b72d1220e3552d14c35a", "bug_code_uid": "4f2cd4fb30638498958c4d6a4138c9d1", "src_uid": "97a226f47973fcb39c40e16f66654b5f", "apr_id": "6900f1af8316216634eb27d6a95837de", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\ntypedef long long ll;\nll arr[100006];\nint main()\n{\n    int n,la,lb;\n    scanf(\"%d\",&n);\n    for(la=1;la<=n;la++)\n    scanf(\"%lld\",&arr[la]);\n    ll cur=0,cou=0;\n    for(la=1;la<=n;la++){\n        if(cur>arr[la]){\n            ll dif=cur-arr[la];\n            cou+=dif;\n            cur=arr[la];\n        }\n        else{\n            ll dif=arr[la]-cur;\n            cou+=dif;\n            cur=arr[la];\n        }\n    }\n    printf(\"%lld\\n\",cou);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\ntypedef long long ll;\n\nint main()\n{\n    int n,la,lb;\n    scanf(\"%d\",&n);\n    ll cur=0,cou=0,num;\n    for(la=1;la<=n;la++){\n        scanf(\"%lld\",&num);\n        if(cur>num){\n            ll dif=cur-num;\n            cou+=dif;\n            cur=num;\n        }\n        else{\n            ll dif=num-cur;\n            cou+=dif;\n            cur=num;\n        }\n    }\n    printf(\"%lld\\n\",cou);\n    return 0;\n}\n"}
{"similarity_score": 0.9927140255009107, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3dd5bf887a9b63afc812d02393f0b105", "bug_code_uid": "d1ef787089e129a06c5fde32a09dc874", "src_uid": "3d6cd0a82513bc2119c9af3d1243846f", "apr_id": "678ca8a0a0426ec392f3a08588dd3e6f", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n  int t;\n  scanf(\"%d\",&t);\n  while(t-->0)\n  {\n    int n;\n    scanf(\"%d\",&n);\n    int count[26];\n    for(int i=0;i<26;i++)\n     count[i] = 0;\n    for(int i=0;i<n;i++)\n    {\n      char str[1000];\n      scanf(\"%s\",&str);\n      int j=0;\n      while(str[j]!='\\0')\n      {\n        count[str[j]-97]++;\n        j++;\n      }\n    }\n    int flag = 1;\n    for(int i=0;i<26;i++)\n    {\n      if(count[i]%2==1)\n      {\n        printf(\"NO\\n\");\n        flag=0;\n        break;\n      }\n    }\n    if(flag == 1)\n    printf(\"YES\\n\");\n  }\n}", "fixed": "#include <stdio.h>\nint main()\n{\n  int t;\n  scanf(\"%d\",&t);\n  while(t-->0)\n  {\n    int n;\n    scanf(\"%d\",&n);\n    int count[26];\n    for(int i=0;i<26;i++)\n     count[i] = 0;\n    for(int i=0;i<n;i++)\n    {\n      char str[1000];\n      scanf(\"%s\",&str);\n      int j=0;\n      while(str[j]!='\\0')\n      {\n        count[str[j]-97]++;\n        j++;\n      }\n    }\n    int flag = 1;\n    for(int i=0;i<26;i++)\n    {\n      if(count[i]%n!=0)\n      {\n        printf(\"NO\\n\");\n        flag=0;\n        break;\n      }\n    }\n    if(flag == 1)\n    printf(\"YES\\n\");\n  }\n}"}
{"similarity_score": 0.35228331780055916, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "1cab45355e4d3985ee8fd5037ac1a350", "bug_code_uid": "715c9eef80a14f6b4e57442f8f47f65d", "src_uid": "d8a93129cb5e7f05a5d6bbeedbd9ef1a", "apr_id": "d2ad2d7c5b3bed5ec20ab58ff4cc1e4a", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n\tstatic char used[1024];\n\tint n, cnt, max;\n\n\tscanf(\"%d\", &n);\n\tmax = cnt = 0;\n\twhile (n--) {\n\t\tstatic char s[1024];\n\t\tint l, i, k;\n\n\t\tscanf(\"%s\", s);\n\t\tl = strlen(s);\n\t\tk = 0;\n\t\tfor (i = 0; i < l; i++)\n\t\t\tif (!used[s[i] - 'a']) {\n\t\t\t\tcnt++;\n\t\t\t\tk++;\n\t\t\t\tused[s[i] - 'a'] = 1;\n\t\t\t}\n\t\tif (k > 2)\n\t\t\tcontinue;\n\t\tif (cnt <= 2)\n\t\t\tmax += l;\n\t\telse\n\t\t\tcnt -= k;\n\t}\n\tprintf(\"%d\\n\", max);\n\treturn 0;\n}\n", "fixed": "/* Coached by rainboy */\n#include <stdio.h>\n#include <string.h>\n\n#define N 100\n\nint main() {\n\tstatic char ss[N][1024];\n\tstatic int ll[N];\n\tint n, i, max;\n\tchar a, b;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%s\", ss[i]);\n\t\tll[i] = strlen(ss[i]);\n\t}\n\tmax = 0;\n\tfor (a = 'a'; a <= 'z'; a++)\n\t\tfor (b = a + 1; b <= 'z'; b++) {\n\t\t\tint l;\n\n\t\t\tl = 0;\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\tint j, ok;\n\n\t\t\t\tok = 1;\n\t\t\t\tfor (j = 0; j < ll[i]; j++)\n\t\t\t\t\tif (ss[i][j] != a && ss[i][j] != b) {\n\t\t\t\t\t\tok = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif (ok)\n\t\t\t\t\tl += ll[i];\n\t\t\t}\n\t\t\tif (max < l)\n\t\t\t\tmax = l;\n\t\t}\n\tprintf(\"%d\\n\", max);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9854748603351955, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9d603b37b31d4c552d99ffaa3fafb092", "bug_code_uid": "b3a4b39e7e5871ee5cf84e9c9d221089", "src_uid": "15aa3adb14c17023f71eec11e1c32efe", "apr_id": "1947d5b7677f1dcf90abf6e37d521fcc", "difficulty": 1700, "tags": ["dp", "greedy", "graphs", "constructive algorithms", "shortest paths", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint m; int found = 0;\nchar w[20]; int seen[11][11], next[11][11];\nvoid dfs(int diff, int last, int depth) {\n    int i;\n    if (depth == m || seen[diff][last]) {\n        found = 1; return;\n    }\n    seen[diff][last] = 1;\n    for (i = 1; i <= 10; i++) {\n        if (w[i-1] == '0') continue;\n        if (i == last || i <= diff) continue;\n        //printf(\"%d %d %d %c %d\\n\", diff, last, i, w[i-1], w[i-1] == '0');\n        next[diff][last] = i;\n        dfs(i - diff, i, depth+1);\n        if (found) return;\n    }\n}\nint main() {\n    int i, d, l, t;\n\n    scanf(\"%s %d\", w, &m);\n    dfs(0, 0, 0);\n    if (!found) printf(\"NO\\n\");\n    else {\n        printf(\"YES\\n\");\n        for (i = d = l = 0; i < m; i++) {\n            printf(\"%d%c\", next[d][l], i == m-1 ? '\\n' : ' ');\n            t = next[d][l] - d;\n            l = next[d][l]; d = t;\n        }\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint m; int found = 0;\nchar w[20]; int seen[11][11], next[11][11];\nvoid dfs(int diff, int last, int depth) {\n    int i;\n    if (depth == m || seen[diff][last]) {\n        found = 1; return;\n    }\n    seen[diff][last] = 1;\n    for (i = 1; i <= 10; i++) {\n        if (w[i-1] == '0') continue;\n        if (i == last || i <= diff) continue;\n        //printf(\"%d %d %d %c %d\\n\", diff, last, i, w[i-1], w[i-1] == '0');\n        next[diff][last] = i;\n        dfs(i - diff, i, depth+1);\n        if (found) return;\n    }\n    seen[diff][last] = 0;\n}\nint main() {\n    int i, d, l, t;\n\n    scanf(\"%s %d\", w, &m);\n    dfs(0, 0, 0);\n    if (!found) printf(\"NO\\n\");\n    else {\n        printf(\"YES\\n\");\n        for (i = d = l = 0; i < m; i++) {\n            printf(\"%d%c\", next[d][l], i == m-1 ? '\\n' : ' ');\n            t = next[d][l] - d;\n            l = next[d][l]; d = t;\n        }\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.8945454545454545, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5c4da978d0f4b2f39639642bf118bdb0", "bug_code_uid": "47082ef900e02441609444367d56435a", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "b4c7bcd864ec8e9acf8e8a3fb227792f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,a=0,i,b=1000,c=0,d=0,x;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&x);\n        if(x>a){c=i;a=x;}\n        if(x<=b){d=i;b=x;}\n    }\n    if(c>d)printf(\"(c-1)+(n-d)-1\");\n    else printf(\"(c-1)+(n-d)\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,a=0,i,b=1000,c=0,d=0,x;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&x);\n        if(x>a){c=i;a=x;}\n        if(x<=b){d=i;b=x;}\n    }\n    if(c>d)printf(\"%d\",(c-1)+(n-d)-1);\n    else printf(\"%d\",(c-1)+(n-d));\n    return 0;\n}"}
{"similarity_score": 0.9955817378497791, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "90fd69475b97d0ecce7a61f6361a5010", "bug_code_uid": "04102b52d54ece2fed99bf90b7ce25cc", "src_uid": "4c0b0cb8a11cb1fd40fef47616987029", "apr_id": "0d64ea4691b9789d079a7bdf2dade2eb", "difficulty": 800, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main()\r\n{\r\n    char s[3];\r\n    int n,n1,K,i,j,ans,count=0;\r\n    scanf(\"%d\", &n);\r\n    for(K=0; K<n; K++)\r\n    {\r\n        scanf(\"%s\", &s);\r\n        if(s[0]=='Y'||s[0]=='y')\r\n        {\r\n            if(s[1]=='E'||s[1]=='e')\r\n            {\r\n                if(s[2]=='S'||s[2]=='s')\r\n                {\r\n                    printf(\"YES\\n\");\r\n                }\r\n                else\r\n                {\r\n                    printf(\"NO\\n\");\r\n                }\r\n            }\r\n            else\r\n            {\r\n                printf(\"NO\\n\");\r\n            }\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main()\r\n{\r\n    char s[4];\r\n\r\n    int n,n1,K,i,j,ans,count=0;\r\n    scanf(\"%d\", &n);\r\n    for(K=0; K<n; K++)\r\n    {\r\n        scanf(\"%s\", &s);\r\n        if(s[0]=='Y'||s[0]=='y')\r\n        {\r\n            if(s[1]=='E'||s[1]=='e')\r\n            {\r\n                if(s[2]=='S'||s[2]=='s')\r\n                {\r\n                    printf(\"YES\\n\");\r\n                }\r\n                else\r\n                {\r\n                    printf(\"NO\\n\");\r\n                }\r\n            }\r\n            else\r\n            {\r\n                printf(\"NO\\n\");\r\n            }\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.7915343915343915, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "3edcdd04c3926914f6d829d43e566b80", "bug_code_uid": "fbbb007ad5a2b48efc01a93224cb3a31", "src_uid": "5babbb7c5f6b494992ffa921c8e19294", "apr_id": "9b1cd37f062e4944bc0a2342f7dff843", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong long int n, d;\n\tscanf(\"%d%d\", &n, &d);\n\tlong long int *ar = NULL;\n\tar = (long long int*)malloc(n * sizeof(long long int));\n\tlong long int i, length, N = 0;\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &ar[i]);\n\tfor (i = 0; i < n - 1; i++)\n\t{\n\t\tlength = abs(ar[i + 1] - ar[i]);\n\t\tif (length - d == d)\n\t\t\tN++;\n\t\telse if (length - d > d)\n\t\t\tN += 2;\n\t}\n\tif (ar[0] - d >= -1000000000)\n\t\tN++;\n\tif (ar[n] + d <= 1000000000)\n\t\tN++;\n\tfree(ar);\n\tprintf(\"%d\", N);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong int n, d;\n\tscanf(\"%d%d\", &n, &d);\n\tlong int *ar = NULL;\n\tar = (long int*)malloc(n * sizeof(long int));\n\tlong int i, length, N = 0;\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &ar[i]);\n\tfor (i = 0; i < n - 1; i++)\n\t{\n\t\tlength = abs(ar[i + 1] - ar[i]);\n\t\tif (length - d == d)\n\t\t\tN++;\n\t\telse if (length - d > d)\n\t\t\tN += 2;\n\t}\n\tN += 2;\n\tfree(ar);\n\tprintf(\"%d\", N);\n\treturn 0;\n}"}
{"similarity_score": 0.703125, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "53573ba8804d087f69473e86f1d382e8", "bug_code_uid": "949cee7c46c564932a3075c92afb7fb4", "src_uid": "2cd5807e3f9685d4eff88f2283904f0d", "apr_id": "375229010e2e1b0f2ec605b1b99fe0c7", "difficulty": 1000, "tags": ["geometry", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int h,l;\n    scanf(\"%d %d \",&h,&l);\n    float deapth=((l*l)-(h*h))/2h;\n    printf(\"%.13f\",deapth);\n    return 0;\n}", "fixed": "    #include<stdio.h>\n         \n        int main()\n        {\n            float h,l;\n            scanf(\"%f %f \",&h,&l);\n            float deapth=(((l*l)-(h*h))/(2*h));\n            printf(\"%.13f\",deapth);\n            return 0;\n        }"}
{"similarity_score": 0.9973190348525469, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9e3268bd33637f16152947c6ac41892b", "bug_code_uid": "c5ee8bf9e812739bbc65f155831b8450", "src_uid": "ca6b162f945d4216055bf92d7263dbd5", "apr_id": "ef2f9316076ba718180c0ba53ad1950c", "difficulty": 800, "tags": ["math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\r\n\tconst int N = 60;\r\n\tint q;\r\n\tint a, b, c;\r\n\ta = b = c = 0;\r\n\r\n\tint * const tof = malloc(t * sizeof(int));\r\n\tmemset(tof, sizeof(int), t);\r\n\r\n\tchar ** const s2 = malloc(t * sizeof(char *)); \r\n\tfor(int q = 0; q < t; q++) {\r\n\t\t s2[q] = malloc(N);\r\n\t}\r\n\r\n\tfor(int i = 0; i < t; i++) {\r\n\t\tscanf(\"%s\", s2[i]);\r\n\t\ta = b = c = 0;\r\n\t\tfor(int j = 0; (s2[i])[j] != 0; j++) {\r\n\t\t\tif((s2[i])[j] == 'A')\r\n\t\t\t\ta++;\r\n\t\t\telse if((s2[i])[j] == 'B')\r\n\t\t\t\tb++;\r\n\t\t\telse if((s2[i])[j] == 'C')\r\n\t\t\t\tc++;\r\n\t\t}\r\n\t\tif(b - a - c == 0)\r\n\t\t\ttof[i] = 1;\r\n\t}\r\n\r\n\tfor(int i = 0; i < t; i++) {\r\n\t\tif(tof[i] == 1)\r\n\t\t\tprintf(\"YES\");\r\n\t\telse \r\n\t\t\tprintf(\"NO\");\r\n\t}\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\r\n\tconst int N = 60;\r\n\tint q;\r\n\tint a, b, c;\r\n\ta = b = c = 0;\r\n\r\n\tint * const tof = malloc(t * sizeof(int));\r\n\tmemset(tof, sizeof(int), t);\r\n\r\n\tchar ** const s2 = malloc(t * sizeof(char *)); \r\n\tfor(int q = 0; q < t; q++) {\r\n\t\t s2[q] = malloc(N);\r\n\t}\r\n\r\n\tfor(int i = 0; i < t; i++) {\r\n\t\tscanf(\"%s\", s2[i]);\r\n\t\ta = b = c = 0;\r\n\t\tfor(int j = 0; (s2[i])[j] != 0; j++) {\r\n\t\t\tif((s2[i])[j] == 'A')\r\n\t\t\t\ta++;\r\n\t\t\telse if((s2[i])[j] == 'B')\r\n\t\t\t\tb++;\r\n\t\t\telse if((s2[i])[j] == 'C')\r\n\t\t\t\tc++;\r\n\t\t}\r\n\t\tif(b - a - c == 0)\r\n\t\t\ttof[i] = 1;\r\n\t}\r\n\r\n\tfor(int i = 0; i < t; i++) {\r\n\t\tif(tof[i] == 1)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse \r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n}"}
{"similarity_score": 0.9977477477477478, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "78fb6a95b6274139829ca9e8412b28b9", "bug_code_uid": "f939ac007c90b5eb51c770311b9cca0f", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "80ea52fc94d4c193f5c1489c6b2db040", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int a, i, n;\n    int len;\n    \n    scanf(\"%d\", &n);\n    \n    char str[n][101];\n    \n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",str[i]);\n    }\n    \n    for(a=0;a<n;a++)\n    {\n        len = strlen(str[a]);\n        if (len <=0)\n        {\n            puts(str[a]);\n        }\n        else\n        printf(\"%c%d%c\\n\",str[a][0],len-2,str[a][len-1]);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int a, i, n;\n    int len;\n    \n    scanf(\"%d\", &n);\n    \n    char str[n][101];\n    \n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",str[i]);\n    }\n    \n    for(a=0;a<n;a++)\n    {\n        len = strlen(str[a]);\n        if (len <= 10)\n        {\n            puts(str[a]);\n        }\n        else\n        printf(\"%c%d%c\\n\",str[a][0],len-2,str[a][len-1]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9892294946147473, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6aff83e72d2cbdbf0f9da40edda21871", "bug_code_uid": "bba7d6790746393c6e634e002b011fd6", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "9c68147efab8a89dd070ba50bfada3f3", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nint ara[1000];\nint main()\n{\n\tint n;\n\tint zero = 0, five = 0;\n\tscanf(\"%d\", &n);\n\tlong long int total = 0;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &ara[i]);\n\t\t(ara[i] == 0) ? ++zero : ++five, total += ara[i];\n\n\t}\n\tif (total < 45)\n\t{\n\t\tif (zero > 0)\n\t\t{\n\t\t\tprintf(\"%d\\n\", 0 );\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"-1\\n\");\n\t\t\treturn 0;\n\t\t}\n\n\t}\n\twhile (total % 9 != 0)\n\t{\n\t\ttotal -= 5;\n\t}\n\tfor (int i = 0; i < (total / 5); i++)\n\t{\n\t\tprintf(\"%d\", 5 );\n\t}\n\tfor (int i = 0; i < zero; i++)\n\t{\n\t\tprintf(\"%d\", 0 );\n\t}\n\tputs(\"\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nint ara[1000];\nint main()\n{\n\tint n;\n\tint zero = 0, five = 0;\n\tscanf(\"%d\", &n);\n\tlong long int total = 0;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &ara[i]);\n\t\t(ara[i] == 0) ? ++zero : ++five, total += ara[i];\n\n\t}\n\tif (total < 45 || zero == 0)\n\t{\n\t\tif (zero > 0)\n\t\t{\n\t\t\tprintf(\"%d\\n\", 0 );\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"-1\\n\");\n\t\t\treturn 0;\n\t\t}\n\n\t}\n\twhile (total % 9 != 0)\n\t{\n\t\ttotal -= 5;\n\t}\n\tfor (int i = 0; i < (total / 5); i++)\n\t{\n\t\tprintf(\"%d\", 5 );\n\t}\n\tfor (int i = 0; i < zero; i++)\n\t{\n\t\tprintf(\"%d\", 0 );\n\t}\n\tputs(\"\");\n\treturn 0;\n}"}
{"similarity_score": 0.47950819672131145, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "a72b88929dd38a7432710e83b0389e1d", "bug_code_uid": "1af563e16526f0972ae152b55e2b7aa3", "src_uid": "e27cff5d681217460d5238bf7ef6a876", "apr_id": "ed9a5a590a87a7e6944e5bde20c12ea7", "difficulty": 1200, "tags": ["binary search", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,i;\n    double R,r,n,ti,pi;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%lf %lf\",&R,&n);\n        ti=acos(-1)/n;\n        r=(R*sin(ti))/(sin(ti)+1);\n        printf(\"Case %d: %.10f\\n\",i,r);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    double n,r,ans,t,pi;\n    scanf(\"%lf %lf\",&n,&r);\n    pi=acos(-1);\n    t=pi/n;\n    ans=(r*sin(t))/(1-sin(t));\n    printf(\"%.7f\\n\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.8985294117647059, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1788f72c9eb14b5ebaa489e962717b6e", "bug_code_uid": "6de097d51bcd713352afcef8f52e600b", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "df4d292a601681885e19856fcda835d4", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long int n, i, p, max, min, count1 = 1, count2 = 1, ans;\n    scanf(\"%I64d\", &n);\n\n    for(i=0; i<n; i++){\n        scanf(\"%I64d\", &p);\n        if(i == 0){\n            max = p;\n            min = p;\n        }\n        else{\n            if (p > max)\n                max = p;\n            else if (p == max)\n                count1++;\n            if (p < min)\n                min = p;\n            else if (p == min)\n                count2++;\n        }\n    }\n    if (max == min)\n        ans = n*(n-1)/2;\n    else\n        ans = count1 * count2;\n\n    printf(\"%I64d %I64d\", max - min, ans);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long int n, i, p, max, min, count1 = 1, count2 = 1, ans;\n    scanf(\"%I64d\", &n);\n\n    for(i=0; i<n; i++){\n        scanf(\"%I64d\", &p);\n        if(i == 0){\n            max = p;\n            min = p;\n        }\n        else{\n            if (p > max){\n                max = p;\n                count1 = 1;\n            }\n            else if (p == max)\n                count1++;\n            if (p < min){\n                min = p;\n                count2 = 1;\n            }\n            else if (p == min)\n                count2++;\n        }\n    }\n    if (max == min)\n        ans = n*(n-1)/2;\n    else\n        ans = count1 * count2;\n\n    printf(\"%I64d %I64d\", max-min, ans);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9768934531450578, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "890014491113812e0da62c21f99d1445", "bug_code_uid": "045845e793cb00b9894ab77274ac1640", "src_uid": "ce27e56433175ebf9d3bbcb97e71091e", "apr_id": "a62c694e2d267896dfd6fd06625d9cd3", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n#include <string.h>\n\n#define MAXN 100100\n\nlong long c[MAXN];\n\nint cmp(const void* a, const void*b) {\n    return *(int*)a - *(int*)b;\n}\n\nint main() {\n#ifdef AT_HOME\n    FILE* in = fopen(\"b.in\", \"r\");\n    FILE* out = fopen(\"b.out\", \"w\");\n#else\n    FILE* in = stdin;\n    FILE* out = stdout;\n#endif\n\n    int n, x, i;\n    fscanf(in, \"%d %d\", &n, &x);\n    for (i = 0; i < n; i++) {\n        fscanf(in, \"%I64d\", c + i);\n    }\n\n    qsort(c, n, sizeof(int), cmp);\n\n    long long sol = 0;\n    for (i = 0; i < n; i++) {\n        sol += c[i] * x;\n        if (x > 1) {\n            x--;\n        }\n    }\n\n    fprintf(out, \"%I64d\", sol);\n\n#ifdef AT_HOME\n    fclose(in);\n    fclose(out);\n    system(\"pause\");\n#endif\n\n    return 0;\n}", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n#include <string.h>\n\n#define MAXN 100100\n\nlong long c[MAXN];\n\nint cmp(const void* a, const void*b) {\n    return *(long long*)a - *(long long*)b;\n}\n\nint main() {\n#ifdef AT_HOME\n    FILE* in = fopen(\"b.in\", \"r\");\n    FILE* out = fopen(\"b.out\", \"w\");\n#else\n    FILE* in = stdin;\n    FILE* out = stdout;\n#endif\n\n    int n, x, i;\n    fscanf(in, \"%d %d\", &n, &x);\n    for (i = 0; i < n; i++) {\n        fscanf(in, \"%I64d\", c + i);\n    }\n\n    qsort(c, n, sizeof(long long), cmp);\n\n    long long sol = 0;\n    for (i = 0; i < n; i++) {\n        sol += c[i] * x;\n        if (x > 1) {\n            x--;\n        }\n    }\n\n    fprintf(out, \"%I64d\", sol);\n\n#ifdef AT_HOME\n    fclose(in);\n    fclose(out);\n    system(\"pause\");\n#endif\n\n    return 0;\n}"}
{"similarity_score": 0.2256169212690952, "equal_cnt": 13, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "04aacfe73397d2de33cbcc0c23e68ff0", "bug_code_uid": "a8d20b5b862d4df8d21ba26fe9afb001", "src_uid": "a28b84c9d1a54e322ab2d54bd5ab45c8", "apr_id": "044a125b6ac6f40b53cff369af17b87e", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\twhile(n--){\n\t\tint a, b;\n\t\tscanf(\"%d%d\", &a, &b);\n\t\tif(a == 1) printf(\"%d\\n\", b);\n\t\telse if(a == b) printf(\"1\\n\");\n\t\telse if(a < b){\n\t\t\tif(b % a == 0)printf(\"%d\\n\", b/a);\n\t\t\telse printf(\"%d\\n\", b/a+1);\n\t\t} else if(a > b){\n\t\t\tif(a % b == 0)printf(\"%d\\n\", a/b);\n\t\t\telse printf(\"%d\\n\",a/b+1);\n\t\t}\n\t}\n\treturn 0;\n}\n\t\t \t\t  \t\t \t\t  \t\t  \t \t\t\t\t\t \t   \t", "fixed": "/*\nk<n &&k%n==0;->k%n;else(++)\nk>n  ==0=1;else 2;\n*/\n#include <stdio.h>\nint main(){\n\tint pp,o;\n\tscanf(\"%d\",&pp);\n\tfor(o=0;o<pp;o++){\n\t\tint k,n;\n\t\tscanf(\"%d %d\",&n,&k);\n\t\tif(k>n){\n\t\t\tdouble k1=k*1.0;\n\t\t\tif(k%n==0){\n\t\t\t\tprintf(\"%d\\n\",k/n);\n\t\t\t}else{\n\t\t\t\tint u=k/n;\n\t\t\t\tu++;\n\t\t\t\tprintf(\"%d\\n\",u);\n\t\t\t}\n\t\t}else {\n\t\t\tdouble k2 = k*1.0;\n\t\t\tif(n%k==0){\n\t\t\t\tprintf(\"1\\n\");\n\t\t\t}else{\n\t\t\t\tprintf(\"2\\n\");\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\treturn 0;\n}\n\t\t\t \t\t  \t \t\t\t\t\t \t\t\t\t   \t  \t \t"}
{"similarity_score": 0.10832497492477432, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "84e61cd843ef7b97f0fcbdfadcecde54", "bug_code_uid": "e59b1e185134f31fea578fdb79f1e0a9", "src_uid": "d08e39db62215d7817113aaa384e3f59", "apr_id": "b0ce152163c2aefe24a215ef5dbce6ee", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n\n\t\n\t\n\t#include\"stdio.h\"\n\t#include\"algorithm\"\n\tusing namespace std;\n\tint main()\n\t{\n\t\tint t;\n\t\tscanf(\"%d\",&t);\n\t\twhile(t--)\n\t\t{\n\t\t\tint n,k,q;\n\t\t\tint sum=0; \n\t\t\tscanf(\"%d %d\",&n,&k);\n\t\t\tif(n==1&&k==1)\n\t\t\t{\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",k);\n\t\t\t\tfor(int i=0;i<k-1;i++)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d \",n--);\n\t\t\t\t}\n\t\t\t\tprintf(\"%d\\n\",n--);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t} \n \t  \t\t\t\t \t\t \t \t   \t\t\t   \t \t\t\t\t", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,k;\n\t\tscanf(\"%d%d\",&n,&k);\n\t\tint left_p,right_p;\n\t\tleft_p=1;\n\t\tright_p=n;\n\t\tint arr[n];\n\t\tint count=0;\n\t\twhile(left_p<=right_p)\n\t\t{\n\t\t\tif(right_p==k)\n\t\t\t{\n\t\t\t\tright_p--;\n\t\t\t\tcontinue;\n\t\t\t}\n \n\t\t\telse if(right_p+left_p==k){\n\t\t\t\t\tarr[count++]=right_p;\n\t\t\t\t\tright_p--;\n\t\t\t\t\tleft_p++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tarr[count++]=right_p;\n\t\t\t\tright_p--;\n\t\t\t}\n\n \n\t\t}\n\t\tprintf(\"%d\\n\",count);\n\t\tif(count>0)\n\t\t{\n\t\t\tfor(int i=0;i<count;i++)\n\t\t\t\tprintf(\"%d \",arr[i]);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n \n}\n\n \t\t  \t\t \t\t\t \t\t\t \t \t \t\t \t\t\t\t\t  \t"}
{"similarity_score": 0.19958706125258086, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "aade3e1f34673d30980536f832cfdcaf", "bug_code_uid": "b3145cea59b85d7c2d18e87336f8b938", "src_uid": "0f100199a720b0fdead5f03e1882f2f3", "apr_id": "e791c525a04c3c7185c2bd102215f4b4", "difficulty": 1000, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,k;\n\tscanf(\"%d %d\",&n,&k);\n\tint arr[100005];\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d\",&arr[i]);\n\twhile(k--)\n\t{\n\t\tint min=100000,flag=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tif(arr[i]<min && arr[i]!=0)\n\t\t\t{\tmin=arr[i];\n\t\t\t\tflag=1;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tif(arr[i]!=0)\n\t\t\t{arr[i]-=min;}\n\t\t}\n\n\t\tif(flag==0)\n\t\t{printf(\"0\\n\");}\n\t\telse\n\t\t\tprintf(\"%d\\n\",min);\n\t}\n}\n", "fixed": "#include<stdio.h>\nvoid merge(int arr[],int  l, int  m, int  r) \n{ \n\tint  i, j, k; \n\tint  n1 = m - l + 1; \n\tint  n2 = r - m; \n\tint  L[n1], R[n2]; \n\tfor (i = 0; i < n1; i++) \n\t{\n\t\tL[i]= arr[l + i]; \n\t}\n\tfor (j = 0; j < n2; j++) \n\t{\n\t\tR[j] = arr[m + 1+ j]; \n\t}\n\ti = 0;\n\tj = 0; \n\tk = l;\n\twhile (i < n1 && j < n2) \n\t{ \n\t\tif (L[i] <= R[j]) \n\t\t{ \n\t\t\tarr[k] = L[i]; \n\t\t\ti++; \n\t\t} \n\t\telse\n\t\t{ \n\t\t\tarr[k]= R[j]; \n\t\t\tj++; \n\t\t} \n\t\tk++; \n\t} \n\twhile (i < n1) \n\t{ \n\t\tarr[k]= L[i]; \n\t\ti++; \n\t\tk++; \n\t} \n\twhile (j < n2) \n\t{ \n\t\tarr[k] = R[j]; \n\t\tj++; \n\t\tk++; \n\t} \n}\nvoid mergeSort(int arr[],int  l, int  r) \n{ \n\tif (l < r) \n\t{ \n\t\tint  m = l+(r-l)/2; \n\t\tmergeSort(arr,l, m); \n\t\tmergeSort(arr,m+1, r); \n\t\tmerge(arr,l,m,r);\n\t}\n}\nint main()\n{\n\tint n,k;\n\tscanf(\"%d %d\",&n,&k);\n\tint arr[100005];\n\tfor( int i=0;i<n;i++)\n\t\tscanf(\"%d\",&arr[i]);\n\tmergeSort(arr,0,n-1);\n\tint i,temp=1,min=arr[0];\n\tprintf(\"%d\\n\",arr[0]);\n\tfor(i=1;i<n && temp<k;i++)\n\t{\n\t\tif(arr[i]!=arr[i-1])\n\t\t{\n\t\t\tprintf(\"%d\\n\",arr[i]-min);\n\t\t\ttemp++;\n\t\t\tmin=arr[i];\n\t\t}\n\t}\n\twhile(temp<k)\n\t{\tprintf(\"0\\n\");temp++;}\n}\n"}
{"similarity_score": 0.7828080229226361, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "4242b1f4d212a69cd1aed0c33a9168a5", "bug_code_uid": "83a8eb31b6bd23a56fb4e36cc96e0e8a", "src_uid": "ad641a44ecaf78ca253b199f3d40ef96", "apr_id": "3a00b295eb220fa116a91d51331d84bb", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int m,n,a[100][50],c,c1,b[2500],d[2500],i,j,z[100][50];\n    scanf(\"%d%d\",&m,&n);\n    c=0;c1=0;\n    for(i=1;i<=m;i++)\n    {\n        for(j=1;j<=n;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    for(i=1;i<m;i++)\n    {\n        for(j=1;j<n;j++)\n        {\n            if((a[i][j]==1) && (a[i][j+1]==1) && (a[i+1][j]==1) && (a[i+1][j+1]==1))\n            {\n                b[c]=i;\n                d[c]=j;\n                (z[i][j]==1); (z[i][j+1]==1);(z[i+1][j]==1);(z[i+1][j+1]==1);\n                c++;\n            }\n        }\n    }\n    for(i=1;i<=m;i++)\n    {\n        for(j=1;j<=n;j++)\n        {\n            if(a[i][j]==z[i][j])\n            c1++;\n        }\n    }\n    if(c1==(m*n))\n    {printf(\"%d\",c);\n    for(i=0;i<c;i++)\n    {\n        printf(\"\\n%d %d\",b[i],d[i]);\n    }}\n    else\n    printf(\"-1\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int m,n,a[100][50],c,c1,b[2500],d[2500],i,j,z[100][50];\n    scanf(\"%d%d\",&m,&n);\n    c=0;c1=0;\n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n            z[i][j]=0;\n        }\n    }\n    for(i=0;i<m-1;i++)\n    {\n        for(j=0;j<n-1;j++)\n        {\n            if((a[i][j]==1) && (a[i][j+1]==1) && (a[i+1][j]==1) && (a[i+1][j+1]==1))\n            {\n                b[c]=i+1;\n                d[c]=j+1;\n                z[i][j]=1; z[i][j+1]=1;z[i+1][j]=1;z[i+1][j+1]=1;\n                c++;\n            }\n        }\n    }\n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            if(a[i][j]==z[i][j])\n            c1++;\n        }\n    }\n    if(c1==(m*n))\n    {printf(\"%d\",c);\n    for(i=0;i<c;i++)\n    {\n        printf(\"\\n%d %d\",b[i],d[i]);\n    }}\n    else\n    printf(\"-1\");\n    return 0;\n}"}
{"similarity_score": 0.9652220438737292, "equal_cnt": 17, "replace_cnt": 1, "delete_cnt": 13, "insert_cnt": 3, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "76a56e8798bbb72071f427bbf442775e", "bug_code_uid": "e71836a849dacbdc2755d144f6fa8672", "src_uid": "4d5457d9f053556c78c102f5c32f7542", "apr_id": "4f82c4c81a051c9be45b481d15e2b5ab", "difficulty": 800, "tags": ["binary search", "greedy", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    long long int a[10000];\r\n    long long int i,j,t,n,H,l1,l2,b,w,k,m,v;\r\n    scanf(\"%lld\",&t);\r\n    for(i=0;i<t;i++){\r\n        scanf(\"%lld %lld\",&n,&H);\r\n        scanf(\"%lld %lld\",&a[0],&a[1]);\r\n        if(a[0]<a[1]){\r\n            l2=a[0];\r\n            l1=a[1];\r\n        }\r\n        else{\r\n            l1=a[0];\r\n            l2=a[1];\r\n        }\r\n        for(j=2;j<n;j++){\r\n            scanf(\"%lld\",&a[j]);\r\n            if(a[j]>l1){\r\n                l2=l1;\r\n                l1=a[j];\r\n                v=j;\r\n            }\r\n            else if(a[j]>l2&&v!=j){\r\n                l2=a[j];\r\n            }\r\n        }\r\n        b=l1+l2;\r\n        if(H%b==0){\r\n            k=H/b;\r\n        }\r\n        else{\r\n            k=(H/b)+1;\r\n        }\r\n        if(((b*k)-l2)>=H){\r\n            m=2*k-1;\r\n        }\r\n        else{\r\n           m=k*2;\r\n        }\r\n        printf(\"%lld\\n\",m);\r\n    }\r\n    return 0;\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int a[10000];\r\n    int i,j,t,n,H,l1,l2,b,w,k,m,v;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n        scanf(\"%d %d\",&n,&H);\r\n        scanf(\"%d %d\",&a[0],&a[1]);\r\n        v=n+1;\r\n        if(a[0]<a[1]){\r\n            l2=a[0];\r\n            l1=a[1];\r\n        }\r\n        else{\r\n            l1=a[0];\r\n            l2=a[1];\r\n        }\r\n        for(j=2;j<n;j++){\r\n            scanf(\"%d\",&a[j]);\r\n            if(a[j]>l1){\r\n                l2=l1;\r\n                l1=a[j];\r\n                v=j;\r\n            }\r\n            else if(a[j]>l2&&v!=j){\r\n                l2=a[j];\r\n            }\r\n        }\r\n        b=l1+l2;\r\n        if(H%b==0){\r\n            k=H/b;\r\n        }\r\n        else{\r\n            k=(H/b)+1;\r\n        }\r\n        if(k*b-l2>=H){\r\n            m=2*k-1;\r\n        }\r\n        else{\r\n            m=2*k;\r\n        }\r\n        printf(\"%d\\n\",m);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9876977152899824, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "6bb7d7395920789a056e0d2cf467a12c", "bug_code_uid": "3710660966635d68cc34bce7321e5e3d", "src_uid": "7d6f76e24fe9a352beea820ab56f03b6", "apr_id": "f7fef534252ee97f0d224f1bea6d5602", "difficulty": 1200, "tags": ["binary search", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t>0)\n\t{\n\t\tint n, k;\n\t\tscanf(\"%d %d\",&n, &k);\n\t\tif(k<n)\n\t\t\tprintf(\"%d\\n\",k);\n\t\telse\n\t\t{\n\t\t\tint x = k/n,i=x;\n\t\t\twhile(x!=0)\n\t\t\t{\n\t\t\t\tk = k+x;\n\t\t\t\tx=(k/n)-i;\n\t\t\t\ti = k/n;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\", k);\n\t\t\tt--;\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t>0)\n\t{\n\t\tint n, k;\n\t\tscanf(\"%d %d\",&n, &k);\n\t\tif(k<n)\n\t\t\tprintf(\"%d\\n\",k);\n\t\telse\n\t\t{\n\t\t\tint x = k/n,i=x;\n\t\t\twhile(x!=0)\n\t\t\t{\n\t\t\t\tk = k+x;\n\t\t\t\tx=(k/n)-i;\n\t\t\t\ti = k/n;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\", k);\n\t\t}\n\t\tt--;\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.679372197309417, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "8cf14523b2c1f363d0046f79c8713deb", "bug_code_uid": "4cc60ed432bb875aa2ce5688e836cb50", "src_uid": "30cfce44a7a0922929fbe54446986748", "apr_id": "b4b54a53ca8466d4772b988a10a6391a", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    float t,x,a,b,c,d,p,q,r,s;\n    int i,j,l=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%f%f%f%f%f\",&x,&a,&b,&c,&d);\n        p=a-b;\n        q=a+b;\n        r=c-d;\n        s=c+d;\n        for(i=r;i<=s;i++){\n            t=(1.0*i/x);\n            if(t>=p && t<=q){\n                    l=1;\n            break;\n            }\n            else\n                l=0;\n        }\n        if(l==0){\n            printf(\"NO\\n\");\n        }\n        else{\n            printf(\"YES\\n\");\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t,x,a,b,c,d,p,q,r,s;\n    int i,j,l=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d%d%d%d%d\",&x,&a,&b,&c,&d);\n        p=a-b;\n        q=a+b;\n        r=c-d;\n        s=c+d;\n        i=p*x;\n        j=q*x;\n        if(i>s || j<r)\n            printf(\"NO\\n\");\n            else\n                printf(\"YES\\n\");\n    }\n}\n"}
{"similarity_score": 0.993897122929381, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "68df0a7569ce0cd8f874f8051ba94d85", "bug_code_uid": "6457f5082d99a61e5e56420e6cc254d6", "src_uid": "081b35620952bd32ce6d8ddc756e5c9d", "apr_id": "77e35ce39fde9b0cabbb1bb1fbc252eb", "difficulty": 800, "tags": ["implementation", "*special", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int num,i,x,count=0;\n    char **phone,temp;\n    scanf(\"%d\",&num);\n    phone=malloc(num*sizeof(char));\n    for(i=0;i<num;i++)\n    {\n        phone[i]=malloc(20*sizeof(char));\n        scanf(\"%s\\n\",phone[i]);\n    }\n    \n    for(i=0;i<20 && phone[0][i]!='\\0';i++)\n    {\n        temp=phone[0][i];\n        for(x=1;x<num;x++)\n        {\n            if(phone[x][i]==temp)\n            continue;\n            else\n            break;\n        }\n        if(x==num)\n        count++;\n        else\n        break;\n    }\n    printf(\"%d\",count);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int num,i,x,count=0;\n    char **phone,temp;\n    scanf(\"%d\",&num);\n    phone=malloc(num*sizeof(int));\n    for(i=0;i<num;i++)\n    {\n        phone[i]=malloc(20*sizeof(char));\n        scanf(\"%s\\n\",phone[i]);\n    }\n    \n    for(i=0;i<20 && phone[0][i]!='\\0';i++)\n    {\n        temp=phone[0][i];\n        for(x=1;x<num;x++)\n        {\n            if(phone[x][i]==temp)\n            continue;\n            else\n            break;\n        }\n        if(x==num)\n        count++;\n        else\n        break;\n    }\n    printf(\"%d\",count);\n    return 0;\n}"}
{"similarity_score": 0.9967320261437909, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "19b323474631183692143644b6bbacdf", "bug_code_uid": "6503d42a8b68878e730980919ad96ff2", "src_uid": "76bfced1345f871832957a65e2a660f8", "apr_id": "57630fcf5484c210a54bf218a0d01a35", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "# include <stdio.h>\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        if (n==1)\r\n        printf(\"1\");\r\n        else{\r\n        for(int j=2;j<n+2;j++)\r\n        printf(\"%d \",j);\r\n        printf(\"\\n\"); }        \r\n    }\r\n    return 0;\r\n\r\n\r\n}\r\n", "fixed": "# include <stdio.h>\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        if (n==1)\r\n        printf(\"1\\n\");\r\n        else{\r\n        for(int j=2;j<n+2;j++)\r\n        printf(\"%d \",j);\r\n        printf(\"\\n\"); }        \r\n    }\r\n    return 0;\r\n\r\n\r\n}\r\n"}
{"similarity_score": 0.9825436408977556, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c2366a31ad5485359d3cad0e4d0ffe6c", "bug_code_uid": "4794665d061551a6d75105f94444aa2f", "src_uid": "15fa49860e978d3b3fb7a20bf9f8aa86", "apr_id": "a95170869297b04658769c87b75d834d", "difficulty": 1200, "tags": ["implementation", "geometry", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(void)\n{\n    int n,i,j,m;\n    double vb,vs,a[105],xu,yu,s,min=99999999;\n    scanf(\"%d%lf%lf\",&n,&vb,&vs);\n    for(i=1;i<=n;i++)\n        scanf(\"%lf\",&a[i]);\n    scanf(\"%lf%lf\",&xu,&yu);\n    for(j=2;j<=n;j++)\n        {\n            s=a[j]/vb+sqrt(yu*yu+(xu-a[j])*(xu-a[j]))/vs;\n            if(s<min) {min=s;m=j;}\n        }\n    printf(\"%d\\n\",m);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(void)\n{\n    int n,i,j,m;\n    double vb,vs,a[105],xu,yu,s,min=99999999;\n    scanf(\"%d%lf%lf\",&n,&vb,&vs);\n    for(i=1;i<=n;i++)\n        scanf(\"%lf\",&a[i]);\n    scanf(\"%lf%lf\",&xu,&yu);\n    for(j=n;j>=2;j--)\n        {\n            s=a[j]/vb+sqrt(yu*yu+(xu-a[j])*(xu-a[j]))/vs;\n            if(s<min) {min=s;m=j;}\n        }\n    printf(\"%d\\n\",m);\n    return 0;\n}\n"}
{"similarity_score": 0.7992202729044834, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "7af4bceb97504e66f4050bb12ac8156d", "bug_code_uid": "a43fffbcf70402367d3d821d970ec777", "src_uid": "a850dd88a67a6295823e70e2c5c857c9", "apr_id": "fa6cf1b94d3c61360d1bf9c1cff69e6f", "difficulty": 1500, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n,i,j,a=0,max=0;\n\tscanf(\"%d\",&n);\n\tint x[n],h[n];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d %d\",&x[i],&h[i]);\n\tfor(i=0;i<n;i++){\n\t\tif(i==0){\n\t\t\tif(x[i]-h[i]<x[i+1])\n\t\t\t\tmax++;\t\t\t\n\t\t\tif(x[i]+h[i]<x[i+1]){\n\t\t\t\ta=x[i]+h[i];\n\t\t\t\tmax++;\t\t\n\t\t\t}\n\t\t}\n\t\tif(i==n-1){\n\t\t\tif(x[i]-h[i]>a)\n\t\t\t\tmax++;\t\n\t\t\telse{\n\t\t\t\ta=x[i]+h[i];\n\t\t\t\tmax++;\n\t\t\t}\n\t\t\n\t\t}\n\t\tif(i!=n-1){\n\t\t\tif(x[i]-h[i]>a)\n\t\t\t\tmax++;\t\n\t\t\tif(x[i]+h[i]<x[i+1]){\n\t\t\t\ta=x[i]+h[i];\n\t\t\t\tmax++;\t\t\t\n\t\t\t}\t\n\t\t}\n\t\tif(!(a>x[i]))\n\t\t\ta=x[i];\n\t}\n\n\tprintf(\"\\n%d\",max);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint n,i,j,a=0,max=0;\n\tscanf(\"%d\",&n);\n\tint x[n],h[n];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d %d\",&x[i],&h[i]);\n\tfor(i=0;i<n;i++){\n\t\tif(i==0){\n\t\t\tif(x[i]-h[i]<x[i+1])\n\t\t\t\tmax++;\n\t\t}\n\t\telse if(i==n-1){\n\t\t\tif(x[i]-h[i]>a)\n\t\t\t\tmax++;\t\n\t\t\telse{\n\t\t\t\ta=x[i]+h[i];\n\t\t\t\tmax++;\n\t\t\t}\n\t\t\n\t\t}\n\t\telse{\n\t\t\tif(x[i]-h[i]>a)\n\t\t\t\tmax++;\t\n\t\t\tif(x[i]+h[i]<x[i+1]&&(!(x[i]-h[i]>a))){\n\t\t\t\ta=x[i]+h[i];\n\t\t\t\tmax++;\t\t\t\n\t\t\t}\t\n\t\t}\n\t\tif(!(a>x[i]))\n\t\t\ta=x[i];\n\t}\n\n\tprintf(\"\\n%d\",max);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7845410628019324, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "93e26e1ae366920d81925a9ccb392f98", "bug_code_uid": "cf340c05702b6f36087d1318709d66f1", "src_uid": "4c0b0cb8a11cb1fd40fef47616987029", "apr_id": "94a1617c901e2d6ca0778940c6b9cb00", "difficulty": 800, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    char s[10];\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    \r\n    while( t > 0)\r\n    {\r\n        t = t - 1;\r\n        scanf(\" %s\",s);\r\n        \r\n        if( (strcmp(s,\"YES\") == 0)  || (strcmp(s,\"yES\") == 0) || (strcmp(s,\"yES\") == 0) || (strcmp(s,\"yes\") == 0)  )\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    \r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n#include <ctype.h>\r\n\r\nint main()\r\n{\r\n    char s[10];\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    \r\n    while( t > 0)\r\n    {\r\n        t = t - 1;\r\n        scanf(\" %s\",s);\r\n        \r\n        for(int i = 0 ; i < 10 ; i = i + 1 )\r\n        {\r\n            s[i] = toupper(s[i]);\r\n        }\r\n        \r\n        \r\n        if( (strcmp(s,\"YES\") == 0) )\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    \r\n}\r\n"}
{"similarity_score": 0.619815668202765, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "768075533166eb6c740cd65ef8a0fb9c", "bug_code_uid": "6e7a4600070447448702ecbf6a55a7c8", "src_uid": "b34f29e6fb586c22fa1b9e559c5a6c50", "apr_id": "42775aee7e6da1b2bac42b50283023a3", "difficulty": 900, "tags": ["sortings", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\n#include<stdio.h>\nint main() {\n\tint count, i, j, k, n,num[100000],p,temp;\n\tscanf(\"%d\", &k);\n\twhile (k--) {\n\t\tscanf(\"%d\", &n);\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tscanf(\"%d\", &num[i]);\n\t\t}\n\t\tp = n * (n - 1) / 2-1;\n\t\tfor (i = 0, count = 0; i < n; i++) {\n\t\t\tfor (j = i + 1; j < n; j++) {\n\t\t\t\tif (num[j] < num[j - 1]) {\n\t\t\t\t\tcount++;\n\t\t\t\t\ttemp = num[j];\n\t\t\t\t\tnum[j] = num[j - 1];\n\t\t\t\t\tnum[j - 1] = num[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (count > p) printf(\"NO\\n\");\n\t\telse printf(\"YES\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#define _CRT_SECURE_NO_WARNINGS\n#include<stdio.h>\nint main() {\n\tint count, i, j, k, n,num[100000];\n\tscanf(\"%d\", &k);\n\twhile (k--) {\n\t\tscanf(\"%d\", &n);\n\t\tfor (i = 0,count=0; i < n; i++) {\n\t\t\tscanf(\"%d\", &num[i]);\n\t\t\tif (i != 0) {\n\t\t\t\tif (num[i] < num[i - 1]) count++;\n\t\t\t}\n\t\t}\n\t\tif (count == n - 1)printf(\"NO\\n\");\n\t\telse printf(\"YES\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9435665914221218, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "35c2a06d2046cfd76707a28a8e5f3210", "bug_code_uid": "089ac52e1da8014a2018172ec09f0e03", "src_uid": "86a2e0854f9faf0b119d0d5e4b8fe952", "apr_id": "4efd3ed33c29c30bb1359b5d33ea9477", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main(void){\r\n    int tst,c,sum;\r\n    char s1[100], s2[100];\r\n    scanf(\"%d\", &tst);\r\n    for(int i=0; i<tst; i++){\r\n        scanf(\"%d\", &c);\r\n        scanf(\"%s %s\", &s1, &s2);sum=0;\r\n        for(int i=0; i<c; i++){\r\n\r\n            if(s1[i]==s2[i] || s1[i]=='G'&&s2[i]=='B' || s1[i]=='B'&&s2[i]=='G'){sum++;}\r\n            else{sum;}\r\n\r\n        }if(sum>=c){printf(\"yes\");}\r\n            else{printf(\"no\");}\r\n\r\n    }\r\n\r\n\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main(void){\r\n    int tst,c,sum;\r\n    char s1[100], s2[100];\r\n    scanf(\"%d\", &tst);\r\n    for(int i=0; i<tst; i++){\r\n        scanf(\"%d\", &c);\r\n        scanf(\"%s %s\", &s1, &s2);sum=0;\r\n        for(int i=0; i<c; i++){\r\n\r\n            if(s1[i]==s2[i] || s1[i]=='G'&&s2[i]=='B' || s1[i]=='B'&&s2[i]=='G'){sum++;}\r\n            else{sum;}\r\n\r\n        }if(sum>=c){printf(\"YES\\n\");}\r\n            else{printf(\"NO\\n\");}\r\n\r\n    }\r\n}"}
{"similarity_score": 0.9694323144104804, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "4857944e0abbbcaed9538be675da20f0", "bug_code_uid": "fec539c61cd514cd2eb92693e7cd615d", "src_uid": "4d743a00e11510c824080ad7f1804021", "apr_id": "5e34196f1d290d2718b6aab4aa0c34a7", "difficulty": 900, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void *a,const void *b) {\n    return *(int *)b-*(int *)a;\n}\nint main() {\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    if(k>n) {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    //n\u4e2a\u65b9\u5757\n    //\u5305\u542bk\u4e2a\u65b9\u5757\n    int i;\n    int *a=malloc(sizeof(a[0]));\n    if(a==NULL) printf(\"a don't get memory\\n\");\n    //\u5f97\u5230\u6bcf\u4e00\u4e2a\u65b9\u5757\u7684\u5750\u6807\n    for(i=0; i<n; i++) {\n        scanf(\"%d\",&a[i]);\n    }\n    //\u8fd9\u91cc\u6211\u4ece\u5927\u5230\u5c0f\u6392\u5217\uff0c\u5728\u7b2ck\u4e2a\u6b63\u65b9\u5f62\u4e0a\u627e\u4e00\u4e2a\n//\u70b9\u5c31\u53ef\u4ee5\u6ee1\u8db3\u8be5\u70b9\u5305\u542bk\u4e2a\u6b63\u65b9\u5f62\u7684\u8981\u6c42\u3002\n//\u6211\u9009\u7684\u70b9\u662fak\uff0c0\n    qsort(a,n,sizeof(a[0]),cmp);\n\n    printf(\"%d 0\\n\",a[k-1]);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void *a,const void *b) {\n    return *(int *)b-*(int *)a;\n}\nint main() {\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    //printf(\"n=%d,k=%d\\n\",n,k);\n    if(k>n) {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    //n\u4e2a\u65b9\u5757\n    //\u5305\u542bk\u4e2a\u65b9\u5757\n    int i;\n    int *a=malloc(n*sizeof(a[0]));\n    if(a==NULL) printf(\"a don't get memory\\n\");\n    //\u5f97\u5230\u6bcf\u4e00\u4e2a\u65b9\u5757\u7684\u5750\u6807\n    for(i=0; i<n; i++) {\n        scanf(\"%d\",&a[i]);\n    }\n    //\u8fd9\u91cc\u6211\u4ece\u5927\u5230\u5c0f\u6392\u5217\uff0c\u5728\u7b2ck\u4e2a\u6b63\u65b9\u5f62\u4e0a\u627e\u4e00\u4e2a\n//\u70b9\u5c31\u53ef\u4ee5\u6ee1\u8db3\u8be5\u70b9\u5305\u542bk\u4e2a\u6b63\u65b9\u5f62\u7684\u8981\u6c42\u3002\n//\u6211\u9009\u7684\u70b9\u662fak\uff0c0\n    qsort(a,n,sizeof(a[0]),cmp);\n\n    printf(\"%d 0\\n\",a[k-1]);\n    return 0;\n}\n"}
{"similarity_score": 0.8156583629893238, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "4a5c6b66f0b8a76c8a134b28b67d3317", "bug_code_uid": "40f75c9b7e615e99664f9c99d7d4f955", "src_uid": "357dcc8fb7783d878cd2c4ed34eb437e", "apr_id": "3e3a841da180c4557cbcf13012b36040", "difficulty": 1000, "tags": ["brute force", "dp", "greedy", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n    int t, n, k1, k2, w ,b, i = 0, a[3001];\n    char c[101];\n    scanf(\"%d\", &t);\n    for (i = 0; i < t; i++){\n        k2 = 0;\n        scanf(\"%s\", c);\n        for (b = 0; b < strlen(c) - 3; b ++){\n            if (c[b] == '1' && c[b+1] == '1' && c[b+2] == '0' && c[b+3] == '0'){\n                k2 = 1;\n                break;\n            }\n        }\n        if (k2 == 0)\n            a[i] = 1;\n        else\n            a[i] = 0;\n    }\n    for (i = 0; i < t; i++){\n        if (a[i] == 1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n    int t, n, k1, k2, w ,b, i = 0, a[3001];\n    char c[101];\n    scanf(\"%d\", &t);\n    for (i = 0; i < t; i++){\n        k2 = 0;\n        k1 = 0;\n        scanf(\"%s\", c);\n        for (b = 0; b < strlen(c) - 1; b ++){\n            if (k2 == 0)\n                if (c[b] == '1' && c[b + 1] == '1') {\n                    k2 = 1;\n                }\n            if (k2 == 1)\n                if (c[b] == '0' && c[b+1] =='0'){\n                    k1 = 1;\n                    break;\n                }\n        }\n        if (k1 == 0)\n            a[i] = 1;\n        else\n            a[i] = 0;\n    }\n    for (i = 0; i < t; i++){\n        if (a[i] == 1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9975550122249389, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b18e3ca4ae34204ece74bdf44edd3cd8", "bug_code_uid": "7bb47511d20e6259359364ca0b2f76c7", "src_uid": "14ce451a31c0dbc2b2f4e04a939b199d", "apr_id": "0d2347cf4c78e47ab8611cdd78109433", "difficulty": 1400, "tags": ["combinatorics", "graphs", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nlong long int nC2(long long int n)\r\n{\r\n  return n*(n-1)/2;\r\n}\r\n\r\nint main()\r\n{\r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  while(t--)\r\n  {\r\n    long long int a,b,k,n=0;\r\n    scanf(\"%lli %lli %lli\",&a,&b,&k);\r\n    long long int A[k],B[k],An[k+1],Bn[k+1];\r\n    memset(An,0,sizeof(An));\r\n    memset(Bn,0,sizeof(Bn));\r\n    for(long long int i=0;i<k;i++)\r\n    {\r\n      scanf(\"%lli\",&A[i]);\r\n      An[A[i]-1]++;\r\n    }\r\n    for(long long int i=0;i<k;i++)\r\n    {\r\n      scanf(\"%lli\",&B[i]);\r\n      Bn[B[i]-1]++;\r\n    }\r\n    if(k<2)\r\n    {\r\n      printf(\"%d\\n\",0);\r\n      continue;\r\n    }\r\n    n = nC2(k);\r\n    for(long long int i=0;i<a;i++)\r\n    {\r\n      n-=nC2(An[i]);\r\n    }\r\n    for(long long int i=0;i<b;i++)\r\n    {\r\n      n-=nC2(Bn[i]);\r\n    }\r\n    printf(\"%lli\\n\",n);\r\n  }\r\n  return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nlong long int nC2(long long int n)\r\n{\r\n  return n*(n-1)/2;\r\n}\r\n\r\nint main()\r\n{\r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  while(t--)\r\n  {\r\n    long long int a,b,k,n=0;\r\n    scanf(\"%lli %lli %lli\",&a,&b,&k);\r\n    long long int A[k],B[k],An[a+1],Bn[b+1];\r\n    memset(An,0,sizeof(An));\r\n    memset(Bn,0,sizeof(Bn));\r\n    for(long long int i=0;i<k;i++)\r\n    {\r\n      scanf(\"%lli\",&A[i]);\r\n      An[A[i]-1]++;\r\n    }\r\n    for(long long int i=0;i<k;i++)\r\n    {\r\n      scanf(\"%lli\",&B[i]);\r\n      Bn[B[i]-1]++;\r\n    }\r\n    if(k<2)\r\n    {\r\n      printf(\"%d\\n\",0);\r\n      continue;\r\n    }\r\n    n = nC2(k);\r\n    for(long long int i=0;i<a;i++)\r\n    {\r\n      n-=nC2(An[i]);\r\n    }\r\n    for(long long int i=0;i<b;i++)\r\n    {\r\n      n-=nC2(Bn[i]);\r\n    }\r\n    printf(\"%lli\\n\",n);\r\n  }\r\n  return 0;\r\n}\r\n"}
{"similarity_score": 0.8564036222509702, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "0659998fb3d7b491812c76d56db2d06c", "bug_code_uid": "f871b611ad4f0558feb1c1365ec662a7", "src_uid": "6581dbaff7eb52b63ccfe9c0c4117c09", "apr_id": "69717be51e33cf33f8f110efe89ef551", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,j,count1=0,count2=0,count3=0,flag=0;\n    char arr[100000]={};\n    scanf(\"%s\",arr);\n    for(i=0;i<strlen(arr);i++)\n    {\n        if(arr[i]=='a')\n        {\n            count1++;\n        }\n        else if(arr[i]=='b')\n        {\n            count2++;\n        }\n        else if(arr[i]=='c')\n        {\n            count3++;\n        }\n    }\n    for(i=0;i<(strlen(arr)-1);i++)\n    {\n        if(arr[i]>arr[i+1])\n        {\n            flag=1;\n        }\n    }\n    if(count3==count1 && flag==0)\n    {\n        printf(\"YES\");\n    }\n    else if(count3==count2 && flag==0)\n    {\n        printf(\"YES\");\n    }\n    else\n    {\n        printf(\"NO\");\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,j,count1=0,count2=0,count3=0,flag=0;\n    char arr[100000]= {};\n    scanf(\"%s\",arr);\n    for(i=0; i<strlen(arr); i++)\n    {\n        if(arr[i]=='a')\n        {\n            count1++;\n        }\n        else if(arr[i]=='b')\n        {\n            count2++;\n        }\n        else if(arr[i]=='c')\n        {\n            count3++;\n        }\n    }\n    for(i=0; i<(strlen(arr)-1); i++)\n    {\n        if(arr[i]>arr[i+1])\n        {\n            flag=1;\n        }\n    }\n    if(count1!=0 && count2!=0 && count3!=0)\n    {\n        if(count3==count1 && flag==0)\n        {\n            printf(\"YES\");\n        }\n        else if(count3==count2 && flag==0)\n        {\n            printf(\"YES\");\n        }\n        else\n        {\n            printf(\"NO\");\n        }\n    }\n    else\n    {\n        printf(\"NO\");\n    }\n}\n"}
{"similarity_score": 0.9488054607508533, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2fe5920f2f7369635a7d96c3d5510093", "bug_code_uid": "3289420b0b5aeae67585828c1727845a", "src_uid": "2e8f7f611ba8d417fb7d12fda22c908b", "apr_id": "8208140e9e42cbaa26c1745593c2dc11", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n,a[2000],i,j,c_e=0,c_o=0;;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n        for(j=0;j<n;j++){ \n            scanf(\"%d\",&a[j]);\n            if(a[j]%2==0) c_e++;\n            else c_o++;\n        }\n          if(c_o%2!=0) printf(\"YES\\n\");\n          else{\n              if(c_e>0) printf(\"YES\\n\");\n              else printf(\"NO\\n\");\n          }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n,a[2000],i,j;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n      int c_o=0,c_e=0;\n        scanf(\"%d\",&n);\n        for(j=0;j<n;j++){ \n            scanf(\"%d\",&a[j]);\n            if(a[j]%2==0) c_e++;\n            else c_o++;\n        }\n          if(c_o%2!=0) printf(\"YES\\n\");\n          else{\n              if(c_o>0 && c_e>0) printf(\"YES\\n\");\n              else printf(\"NO\\n\");\n          }\n    }\n    return 0;\n}"}
{"similarity_score": 0.980701754385965, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "63aa1afa2c31dd409c879a6f2d1ce95b", "bug_code_uid": "020521b3af32db94020ced18d6fe9894", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "3ee25a326b5ddd8b6f1de0d3cf35fb0d", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int ch[40000]= {0},cp[40000];\n    char kh[600][600],arr[200000];\n    int a,b=0,c,d,e,i=0,j=0,k=0,l=0,tep,temp,m,n,x,y;\n    double z,go;\n\n    scanf(\"%d%d\",&a,&b);\n    j=k=l=m=n=0;\n    j=1;\n    for(i=0; i<a-2; i++)\n    {\n        scanf(\"%d\",&ch[i]);\n\n    }\n    while(1)\n    {\n        j+=ch[j-1];\n        if(j==b)\n        {\n            printf(\"YES\");\n            return 0;\n        }\n        if(j>b)\n        {\n            printf(\"NO\");\n            return 0;\n        }\n\n\n    }\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int ch[40000]= {0},cp[40000];\n    char kh[600][600],arr[200000];\n    int a,b=0,c,d,e,i=0,j=0,k=0,l=0,tep,temp,m,n,x,y;\n    double z,go;\n\n    scanf(\"%d%d\",&a,&b);\n    j=k=l=m=n=0;\n    j=1;\n    for(i=0; i<a-1; i++)\n    {\n        scanf(\"%d\",&ch[i]);\n\n    }\n    while(j<a)\n    {\n        j+=ch[j-1];\n        if(j==b)\n        {\n            printf(\"YES\");\n            return 0;\n        }\n        if(j>b)\n        {\n            printf(\"NO\");\n            return 0;\n        }\n\n\n    }\n   printf(\"NO\");\n    return 0;\n}"}
{"similarity_score": 0.9737470167064439, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "51e375c1add08a4ddcc2358d25be8587", "bug_code_uid": "db2de266f84b509348d60c091e7a2752", "src_uid": "3b9380ca571dbf3e24fc1b1c8b91790b", "apr_id": "70dc9ff64c2219cd59344df6a91a894c", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nbool vis[200007];\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 1; i <= t; i++){\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tprintf(\"2\\n\");\r\n\t\tfor (int j = 1; j <= n; j++){\r\n\t\t\tvis[j] = false;\r\n\t\t}\r\n\t\tfor (int j = 1; j <= n; j++){\r\n\t\t\tif (!vis[j]){\r\n\t\t\t\tfor (int k = j; k <= n; k *= 2){\r\n\t\t\t\t\tprintf(\"%d \", k);\r\n\t\t\t\t\tvis[k] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdbool.h>\r\n\r\nbool vis[200007];\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 1; i <= t; i++){\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tprintf(\"2\\n\");\r\n\t\tfor (int j = 1; j <= n; j++){\r\n\t\t\tvis[j] = false;\r\n\t\t}\r\n\t\tfor (int j = 1; j <= n; j++){\r\n\t\t\tif (!vis[j]){\r\n\t\t\t\tfor (int k = j; k <= n; k *= 2){\r\n\t\t\t\t\tprintf(\"%d \", k);\r\n\t\t\t\t\tvis[k] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.47758761206193967, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "87808d2ac112121087739e9509ab8122", "bug_code_uid": "e8374471fe149f7a0531a7d3aaad2e02", "src_uid": "7ac5f084c403bd26802e1b941105d34b", "apr_id": "220985565fb6cb69cbae4444685e695c", "difficulty": 1100, "tags": ["brute force", "greedy", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t, i, j;\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        int n, a[160000] = {0};\n        scanf(\"%d\", &n);\n        int l = 0, r = n + 1;\n        for (i = 0; i < n; i++)\n        {\n            scanf(\"%d\", &a[i]);\n            int j = i;\n            while (j--)\n            {\n                if (i - j == r - l)\n                {\n                    break;\n                }\n                if (a[j] == a[i] && i - j < r - l)\n                {\n                    l = j;\n                    r = i;\n                }\n            }\n        }\n        printf(\"%d\\n\", l + (n - r));\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t, i, j;\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        int n, a[160000] = {0}, tmp;\n        scanf(\"%d\", &n);\n        int m = n + 1;\n        for (i = 1; i <= n; i++)\n        {\n            scanf(\"%d\", &tmp);\n            if (a[tmp])\n            {\n                if (i - a[tmp] < m)\n                {\n                    m = i - a[tmp];\n                }\n                a[tmp] = i;\n            }\n            else\n            {\n                a[tmp] = i;\n            }\n        }\n        m = n - m;\n        printf(\"%d\\n\", m);\n    }\n    return 0;\n}"}
{"similarity_score": 0.7397820163487738, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "a3e59bf59ec6923e45ec77a28d8d57be", "bug_code_uid": "8e2d71531ecdc9d5bb0f08996f7939cf", "src_uid": "dfe5af743c9e23e98e6c9c5c319d2126", "apr_id": "b072f5b2ffd79d7d3e0ceaceed4bc5e0", "difficulty": 1900, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\nint s[1001],tmps[1001],t[4001],n,m;\nint gcd(int a,int b)\n{\n\tif (a<b) return gcd(b,a);\n\tif (b==0) return a;\n\treturn gcd(b,a%b);\n}\nint found(int l,int r,int dst)\n{\n\tint mid=(l+r)/2;\n\tif (l>r) return 0;\n\tif (s[mid]==dst) return mid;\n\tif (s[mid]<dst) l=mid+1; else r=mid-1;\n\treturn found(l,r,dst);\n}\nint main()\n{\n\tscanf(\"%d\",&m);\n\tint i;\n\tfor (i=1;i<=m;i++) scanf(\"%d\",&s[i]);\n\tmemcpy(tmps,s,sizeof(s));\n\tint now=s[m];\n\tn=1; t[1]=s[m];\n\tfor (i=m-1;i>=1;i--)\n\t{\n\t\tt[++n]=s[i];\n\t\tnow=gcd(now,t[n]);\n\t\tif (!found(1,m,now))\n\t\t{\n\t\t\tprintf(\"-1\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",2*m);\n\tfor (i=1;i<=m;i++)\n\t{\n\t\tprintf(\"%d %d\",s[i],s[1]);\n\t\tif (i<n) printf(\" \"); else printf(\"\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\nint s[1001],tmps[1001],t[4001],n,m;\nint gcd(int a,int b)\n{\n\tif (a<b) return gcd(b,a);\n\tif (b==0) return a;\n\treturn gcd(b,a%b);\n}\nint found(int l,int r,int dst)\n{\n\tint mid=(l+r)/2;\n\tif (l>r) return 0;\n\tif (s[mid]==dst) return mid;\n\tif (s[mid]<dst) l=mid+1; else r=mid-1;\n\treturn found(l,r,dst);\n}\nint main()\n{\n\tscanf(\"%d\",&m);\n\tint i;\n\tfor (i=1;i<=m;i++) scanf(\"%d\",&s[i]);\n\tmemcpy(tmps,s,sizeof(s));\n\tint now=s[m];\n\tn=1; t[1]=s[m];\n\tfor (i=m-1;i>=1;i--)\n\t{\n\t\tnow=gcd(now,s[i]);\n\t}\n\tif (now!=s[1])\n\t{\n\t\tprintf(\"-1\\n\"); return 0;\n\t}\n\tprintf(\"%d\\n\",2*m);\n\tfor (i=1;i<=m;i++)\n\t{\n\t\tprintf(\"%d %d\",s[i],s[1]);\n\t\tif (i<n) printf(\" \"); else printf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9547325102880658, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "56bfa9a5ec561c53d075836ba240a700", "bug_code_uid": "0b57e483a1551a73fb23dcaf2edb8762", "src_uid": "edf394051c6b35f593abd4c34b091eae", "apr_id": "d7cbcad759a38c5eb651a17ada015c1d", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long long int x,y,a,b,ans=0,min,max,t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        scanf(\"%lld%lld%lld%lld\",&x,&y,&a,&b);\n        if(x>y)\n        {\n            min=y;\n            max=x-y;\n        }\n        else\n        {\n            min=x;\n            max=y-x;\n        }\n        if(2*a<=b)\n        {\n            printf(\"%d\\n\",(x+y)*a);\n            continue;\n        }\n        else\n        {\n        ans=max*a+min*b;\n        printf(\"%lld\\n\",ans);\n        }\n    }\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    long long int x,y,a,b,ans=0,min,max,t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        scanf(\"%lld%lld%lld%lld\",&x,&y,&a,&b);\n        if(x>y)\n        {\n            min=y;\n            max=x-y;\n        }\n        else\n        {\n            min=x;\n            max=y-x;\n        }\n        if(2*a<=b)\n            printf(\"%lld\\n\",(x+y)*a);\n        else\n        {\n        ans=max*a+min*b;\n        printf(\"%lld\\n\",ans);\n        }\n    }\n}"}
{"similarity_score": 0.519916142557652, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "0251f49a9d8cc49ef021d7f743ad45f5", "bug_code_uid": "0e29c7e741b061f37552a50de1846e2d", "src_uid": "b0ffab0bf169f8278af48fe2d58dcd2d", "apr_id": "c947d68459f9b72673871ebbb1cd625b", "difficulty": 1000, "tags": ["number theory", "sortings", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int i, j;\n    int n;\n    scanf(\"%d\", &n);\n    long array[n];\n    for(i = 0; i < n; i += 1) scanf(\"%ld\", array + i);\n    \n    for(i = 0; i < n; i += 1)\n    {\n        int flag = 1;\n        for(j = 0; j < n; j += 1)\n        {\n            if(array[j] % array[i])\n            {\n                flag = 0;\n                break;\n            }\n        }\n        if(flag)\n        {\n            printf(\"%ld\\n\", array[i]);\n            return 0;\n        }\n    }\n    \n    printf(\"-1\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int i, j;\n    int n;\n    scanf(\"%d\", &n);\n    long array[n], min = 1000000000;\n    for(i = 0; i < n; i += 1)\n    {\n        scanf(\"%ld\", array + i);\n        if(array[i] < min)\n            min = array[i];\n    }\n    for(i = 0; i < n; i += 1)\n    {\n        if(array[i] % min)\n        {\n            printf(\"-1\\n\");\n            return 0;\n        }\n    }\n\n    printf(\"%ld\\n\", min);\n    return 0;\n}\n"}
{"similarity_score": 0.9484808454425363, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d0c542f546287c08bf6d2f86dee2b444", "bug_code_uid": "ea8d46267a3833037338726e805fe037", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "99dca6e0aa4fc4c5cb52be567c41c81e", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\\n\",&n);\n\tint a[1000000];\n\tint w,c=0,b=0;\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%d\",&w);\n\t\tif (w==25)c++;\n\t\telse\n\t\tif (w==50){\n\t\t    c--;\n\t\t    b++;\n\t\t}\n\t\telse{\n\t\tif (b>0)\n\t\t{\n\t\t    b--;\n\t\t    c--;\n\t\t}   \n\t\telse\n\t\tc-=2;\n\t\t}\n\t\t\n\t\tif (c<0){\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t\n\t}\nprintf(\"YES\");\nreturn 0;\n\t\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\\n\",&n);\n\tint a[1000000];\n\tint w,c=0,b=0;\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%d\",&w);\n\t\tif (w==25)c++;\n\t\telse\n\t\tif (w==50){\n\t\t    c--;\n\t\t    b++;\n\t\t}\n\t\telse{\n\t\tif (b>0)\n\t\t{\n\t\t    b--;\n\t\t    c--;\n\t\t}   \n\t\telse\n\t\tc-=3;\n\t\t}\n\t\t\n\t\tif (c<0||b<0){\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t\n\t}\nprintf(\"YES\");\nreturn 0;\n\t\n}"}
{"similarity_score": 0.9923273657289002, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "f8389a3acd5969df0cf3237cba94c502", "bug_code_uid": "8b13f901172a949b7c27671180b5003a", "src_uid": "5ebb0ee239d68ea33d9dac2d0bdd5f4e", "apr_id": "bdba988c37f67d55f7c7270edb315b75", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "bitmasks", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint  count_bit(int x);\nint main()\n{\n\tint i,j,k,l,n,c,t,d,m;\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tint a[m+1];\n\tfor(i=0;i<m+1;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tc=0;\n\tfor(j=0;j<m;j++)\n\t{\n\t\n\t\tt=a[m]&a[j];\n\t\td=count_bit(t);\n\t\tif((n-d<=k))\n\t\t{\n\t\t\tc++;\n\t\t}\n\t}\n\tprintf(\"%d\",c);\n\treturn 0;\n}\nint count_bit(int x)\n{\n\tint p,q,r,s;\n\ts=x;\n\tr=0;\n\twhile(s)\n\t{\n\t\ts=(s)&(s-1);\n\t\tr++;\n\t}\n\treturn r;\n}\n", "fixed": "#include<stdio.h>\nint  count_bit(int x);\nint main()\n{\n\tint i,j,k,l,n,c,t,d,m;\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tint a[m+1];\n\tfor(i=0;i<m+1;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tc=0;\n\tfor(j=0;j<m;j++)\n\t{\n\t\n\t\tt=(a[m]^a[j]);\n\t\td=count_bit(t);\n\t\tif((d<=k))\n\t\t{\n\t\t\tc++;\n\t\t}\n\t}\n\tprintf(\"%d\",c);\n\treturn 0;\n}\nint count_bit(int x)\n{\n\tint p,q,r,s;\n\ts=x;\n\tr=0;\n\twhile(s)\n\t{\n\t\ts=(s)&(s-1);\n\t\tr++;\n\t}\n\treturn r;\n}\n"}
{"similarity_score": 0.9984350547730829, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c8bc482b02dbdb53929faa94ec8ef4b1", "bug_code_uid": "b995f1d82e89ee6b94356d6904cb0e68", "src_uid": "8f0172f742b058f5905c0a02d79000dc", "apr_id": "d45e962f8631021c1e1ad3b9e5c46172", "difficulty": 1200, "tags": ["two pointers", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,j,n,count1,count2,a[100001];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\ti=0,j=n-1;\n\t\n\t\tcount1=a[i];\n\t\tcount2=a[j];\n\twhile(i<=j)\n\t{\n\t\tif(count1<count2)\n\t\t{\n\t\t\ti++;\n\t\t\tcount1+=a[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tj--;\n\t\t\tcount2+=a[j];\n\t\t}\n\t}\n\tprintf(\"%d %d\",i,n-1-j);\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,j,n,count1,count2,a[100001];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\ti=0,j=n-1;\n\t\n\t\tcount1=a[i];\n\t\tcount2=a[j];\n\twhile(i<=j)\n\t{\n\t\tif(count1<=count2)\n\t\t{\n\t\t\ti++;\n\t\t\tcount1+=a[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tj--;\n\t\t\tcount2+=a[j];\n\t\t}\n\t}\n\tprintf(\"%d %d\",i,n-1-j);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.6758494031221304, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "7999e401f0f904d040ccabd2d1e3562b", "bug_code_uid": "c787cae0d0a018776622efdad40dcfe5", "src_uid": "dc31adef80f06897ea2f5ef76854bcf1", "apr_id": "890f019ae8e1495920f800bf6232f913", "difficulty": 1200, "tags": ["implementation", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar c[101][101];\nint main()\n{\n    long n,m,i,j;\n    scanf(\"%ld%ld\",&n,&m);\n    gets(c[0]);\n    for(i=1;i<=n;i++)\n        gets(c[i]);\n\n    for(i=1;i<=n;i++)\n        {\n            for(j=0;j<m;j++)\n                if(c[i][j]=='-')\n                    printf(\"-\");\n                else\n                {\n                    if((i*j)%2==0)\n                        printf(\"W\");\n                    else\n                        printf(\"B\");\n                }\n            printf(\"\\n\");\n        }\n\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nchar c[101][101];\nint main()\n{\n    long n,m,i,j;\n    scanf(\"%ld%ld\",&n,&m);\n    gets(c[0]);\n    for(i=1;i<=n;i++)\n        gets(c[i]);\n\n    for(i=1;i<=n;i++)\n        {\n            for(j=0;j<m;j++)\n                if(c[i][j]=='-')\n                    printf(\"-\");\n                else\n                {\n                    if((i%2)^(j%2))\n                        printf(\"W\");\n                    else\n                        printf(\"B\");\n                }\n            printf(\"\\n\");\n        }\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.9919261822376009, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "ec2cbce9a32db70ec773a7508a38862d", "bug_code_uid": "d7a71610bdd63267805b4916513c1efc", "src_uid": "a5d3c9ea1c9affb0359d81dae4ecd7c8", "apr_id": "0e4febda696cbaa0e0c187251b44cc1f", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int i,j,n,sum=0,temp=0,b;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=1;i<n;i++){\n        for(j=i;j<n;j++){\n            if(a[j]<a[i]){\n                temp=a[i];\n                a[i]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n    for(i=0;i<n;i++){\n        b=a[n-1]-a[i];\n        sum=sum+b;\n    }printf(\"%d\",sum);\n\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int i,j,n,sum=0,temp,b;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        for(j=i;j<n;j++){\n            if(a[j]<a[i]){\n                temp=a[i];\n                a[i]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n\n   for(i=0;i<n;i++){\n        b=a[n-1]-a[i];\n        sum=sum+b;\n    }printf(\"%d\",sum);\n\nreturn 0;\n}\n"}
{"similarity_score": 0.9976905311778291, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f7a6e22196f57c169555524d463c671d", "bug_code_uid": "2e2cf89f6814c4ab8a76e81eebf3544a", "src_uid": "0515ac888937a4dda30cad5e2383164f", "apr_id": "6046236a24fa2a4ce6e20521fcbfb15d", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,i;\n    char s[100001];\n    scanf(\"%d%d%s\",&n,&k,s);\n    if(n==1&&k)\n    {\n    \tprintf(\"0\\n\");\n    \treturn 0;\n    }\n    if(k)\n        {\n            if(s[0]!='1')\n            {\n                s[0]='1';\n                k--;\n            }\n        }\n    for(i=1;i<n&&k>0;i++)\n        if(s[i]!='0')\n        {\n            s[i]='0';\n            k--;\n        }\n    printf(\"%s\\n\",s);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,i;\n    char s[200001];\n    scanf(\"%d%d%s\",&n,&k,s);\n    if(n==1&&k)\n    {\n    \tprintf(\"0\\n\");\n    \treturn 0;\n    }\n    if(k)\n        {\n            if(s[0]!='1')\n            {\n                s[0]='1';\n                k--;\n            }\n        }\n    for(i=1;i<n&&k>0;i++)\n        if(s[i]!='0')\n        {\n            s[i]='0';\n            k--;\n        }\n    printf(\"%s\\n\",s);\n    return 0;\n}"}
{"similarity_score": 0.978433598183882, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "5bd47f3e56936be647eb7e9a30285a80", "bug_code_uid": "4538f2b95a17454b80bbcd8620c943ef", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "c12dda24d2e55b74e5b7470acc4f3896", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,t,sum,flag=0;\n    scanf(\"%d %d\",&n,&t);\n\n    int a[n],i;\n\n    for(i=0;i<n-1;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n\n    i=0;\n\n    while(1)\n    {\n        sum=i+1+a[i];\n\n        if(sum==t)\n        {\n            flag=1;\n            break;\n        }\n\n        else if(sum>t)\n        break;\n\n        i=sum;\n    }\n\n    if(flag==0)\n    printf(\"NO\\n\");\n\n    else\n    printf(\"YES\\n\");\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,t,sum,flag=0;\n    scanf(\"%d %d\",&n,&t);\n\n    int a[n],i;\n    a[0]=0;\n\n    for(i=1;i<=n-1;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n\n    i=1;\n\n    while(1)\n    {\n        sum=i+a[i];\n\n        if(sum==t)\n        {\n            flag=1;\n            break;\n        }\n\n        else if(sum>t)\n        break;\n\n        i=sum;\n    }\n\n    if(flag==0)\n    printf(\"NO\\n\");\n\n    else\n    printf(\"YES\\n\");\n\nreturn 0;\n}\n"}
{"similarity_score": 0.41155234657039713, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "cfdfa1308a20e22cb948c75e2c96f237", "bug_code_uid": "bcb39c1003aff229d4ddc1e035720aba", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "dacb045672467717a60a166b320309c8", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar arr[100001];\nint main()\n{\nint i,c1=0,c2=0,flag=0;\n\tscanf(\"%s\",arr);\nfor(i=0;i<strlen(arr);i++)\n{\n\tif(arr[i]=='A'&&arr[i+1]=='B')\n\t{\n\tc1++;i++;\n\t}\n\telse if(arr[i+1]=='A'&&arr[i]=='B')\n\t{\n\tc2++;i++;\n\t}\n\tif(c1>=1&&c2>=1)\n\t{\n\t\tflag=1;\n\t\tbreak;\n\t}\n}\nif(flag==1)\n\tprintf(\"YES\");\n\telse\n\tprintf(\"NO\");\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\nchar a[100005];\nint main() \n{\n\tscanf(\"%s\",a);\n\tint i=0,l=strlen(a),j,flag=0;\n\tfor(i=0;i<l-1;i++)\n\t{\n\t\tif(a[i]=='A' && a[i+1]=='B')\n\t\t{\n\t\t\tfor(j=i+2;j<l-1;j++)\n\t\t\tif(a[j]=='B' && a[j+1]=='A')\n\t\t\t{flag=1;\n\t\t\tbreak;}\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==0)\n\tfor(i=0;i<l-1;i++)\n\t{\n\t\tif(a[i]=='B' && a[i+1]=='A')\n\t\t{\n\t\t\tfor(j=i+2;j<l-1;j++)\n\t\t\tif(a[j]=='A' && a[j+1]=='B')\n\t\t\t{flag=1;\n\t\t\tbreak;}\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==1)\n\tprintf(\"YES\\n\");\n\telse\n\tprintf(\"NO\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.9857464366091523, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "678f5a7f04886fd84913663d9614ea93", "bug_code_uid": "b7ebef3e1e21a46be4266d3addafc315", "src_uid": "1539fc8ef4f4cdcd1e14faf4f1b4ee8b", "apr_id": "32c34007cc985df159cf9eca9829532f", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint count_patient(char *str, const int len, const int idx){\n    int count = 0;\n    for(int i = idx + 1; str[i] == 'P'; i++){\n        count++;\n    }\n    return count;\n}\n\nint main(void){\n    int t;\n    scanf(\"%d\", &t);\n\n    for(int i = 0; i < t; i++){\n        int k, max = 0, next = 0;\n        char str[101] = {0, };\n        scanf(\"%d\", &k);\n        scanf(\"%s\", str);\n\n        while(str[next++] != 'A');\n\n        while(next < k){\n            int temp = count_patient(str, k, next);\n            max = (max < temp) ? temp : max;\n            next += temp + 1;\n        }\n\n\n\n        printf(\"%d\\n\", max);\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint count_patient(char *str, const int len, const int idx){\n    int count = 0;\n    for(int i = idx + 1; str[i] == 'P'; i++){\n        count++;\n    }\n    return count;\n}\n\nint main(void){\n    int t;\n    scanf(\"%d\", &t);\n\n    for(int i = 0; i < t; i++){\n        int k, max = 0, next = 0;\n        char str[101] = {0, };\n        scanf(\"%d\", &k);\n        scanf(\"%s\", str);\n\n        while(str[next++] == 'P');\n        next--;\n        while(next < k){\n            int temp = count_patient(str, k, next);\n            max = (max < temp) ? temp : max;\n            next += temp + 1;\n        }\n\n\n\n        printf(\"%d\\n\", max);\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.6437869822485207, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "bb1f0e50a432de91201e7cd328024894", "bug_code_uid": "3524dc78501362a1415440d09c299ff8", "src_uid": "85f90533a9840e944deef9f3b4229cb8", "apr_id": "f7e1e92ab82258e4b18af2c5c1c1f9f5", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>  \nint main()\n{\n    char a[1005];\n    int k;\n    int p;\n    int max,i,s,j;\n    scanf(\"%s\",a);\n    scanf(\"%ld\",&k);\n    int b[26];\n    max=-1;\n    s=0;\n    for(i=0;i<26;i++)\n    {\n        scanf(\"%ld\",&b[i]);\n        if(b[i]>max)\n        max=b[i];\n    }\n    for(i=0;a[i]!='\\0';i++)\n    {\n        s=s+(i+1)*b[a[i]-97];\n    }\n    for(j=i+1;j<=(i+k);j++)\n    {   \n        s=s+j*max;\n    }\n\n    printf(\"%ld\\n\",s);\n}", "fixed": "#include<stdio.h>  \n#include<string.h>\nint main()\n{\n    char a[1010];\n    scanf(\"%s\",a);\n    long k,b[26],max=-1,s=0,l,i;\n    scanf(\"%ld\",&k);\n    for(i=0;i<26;i++)\n    {\n        scanf(\"%ld\",&b[i]);\n        if(b[i]>max)\n        max=b[i];\n    }\n    l=strlen(a);\n    for(i=0;i<(l+k);i++)\n    {\n        if(i<l)\n        s=s+(i+1)*b[a[i]-97];\n        else\n        s=s+(i+1)*max;\n    }\n    printf(\"%ld\\n\",s);\n    return 0;\n}"}
{"similarity_score": 0.8247422680412371, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "94481bd96f979f8595b25aef6c81cf6c", "bug_code_uid": "17c206d1607901030bc642c6a5ebbf81", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "ce3f4002ec4b78ed1d09ebe9b98e279a", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef  unsigned long long int ll;\nint main()\n{\n    ll n,v,t,k,temp,x = 0;\n    scanf(\"%llu%llu\",&n,&v);\n    ll a[n],i;\n    for( i = 0; i < n; i++)\n    {\n        scanf(\"%llu\",&k);\n        for(ll j = 0; j < k;j++)\n        {\n            scanf(\"%llu\",&temp);\n            if(temp < v)\n                a[x++] = i + 1;\n        }\n    }\n    printf(\"%llu\\n\",x);\n    for(ll y = 0; y < x; y++)\n        printf(\"%llu \",a[y]);\n    //printf(\"\\n\");\n    return 0;\n}", "fixed": "#include<stdio.h>\ntypedef  unsigned long long int ll;\nint main()\n{\n    ll n,v,t,k,temp,x = 0;\n    scanf(\"%llu%llu\",&n,&v);\n    ll a[n],i;\n    for( i = 0; i < n; i++)\n    {\n        scanf(\"%llu\",&k);\n        ll dummy[k];\n        for(ll j = 0; j < k;j++)\n        {\n            scanf(\"%llu\",&dummy[j]);\n        }\n        for(ll b = 0 ; b < k; b++)\n        {\n            if(dummy[b] < v)\n            {\n                a[x++] = i + 1;\n                break;\n            }\n        }\n    }\n    printf(\"%llu\\n\",x);\n    for(ll y = 0; y < x; y++)\n        printf(\"%llu \",a[y]);\n    //printf(\"\\n\");\n    return 0;\n}"}
{"similarity_score": 0.8144329896907216, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "d6198c1ae7d95786955874fc2717dfd9", "bug_code_uid": "aba36e774074c82a0f5742557ac28a8b", "src_uid": "e27cff5d681217460d5238bf7ef6a876", "apr_id": "1abf76d11ec2d24ed3038495f1c43136", "difficulty": 1200, "tags": ["binary search", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n\tint n,r;\n\tdouble pi=3.14159265359;\n\n\tscanf(\"%d%d\",&n,&r);\n\tdouble ans=(r*sin(pi/n))/(1-sin(pi/n));\n\tprintf(\"%0.7lf\\n\",ans);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\nint n,r;\nscanf(\"%d %d\",&n,&r);\n\tdouble pi=3.14159265359;\n\n\tdouble t=pi/n;\n\tdouble ans=(r*sin(t))/(1-sin(t));\n   printf(\"%0.7f\",ans);\n\t\n\n\treturn 0;\n}"}
{"similarity_score": 0.9627192982456141, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "acb46014be90c1dc152b396f6383e3fc", "bug_code_uid": "35ada6c1ba3854ba0f2ce3f0d855b7f6", "src_uid": "461378e9179c9de454674ea9dc49c56c", "apr_id": "a49a120808fb6f114da4a5c47bb1e586", "difficulty": 800, "tags": ["dp", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main()\r\n{\r\n  int n,q;\r\n  scanf(\"%d %d\",&n,&q);\r\n  char s[n+1];\r\n  scanf(\"%s\",s);\r\n  int arr[n];\r\n  for(int i=0;i<n;i++)\r\n  {\r\n    if(i==0)\r\n    arr[i] = s[i]-96;\r\n    else\r\n    arr[i] = arr[i-1]+s[i]-96;\r\n    printf(\"%d\\n\",arr[i]);\r\n  }\r\n  while(q>0)\r\n  {\r\n    q--;\r\n    int l,r,sum=0;\r\n    scanf(\"%d %d\",&l,&r);\r\n    if(l==1)\r\n    printf(\"%d\",arr[r-1]);\r\n    else\r\n    printf(\"%d\",arr[r-1]-arr[l-2]);\r\n  }\r\n  return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main()\r\n{\r\n  int n,q;\r\n  scanf(\"%d %d\",&n,&q);\r\n  char s[n+1];\r\n  scanf(\"%s\",s);\r\n  int arr[n];\r\n  for(int i=0;i<n;i++)\r\n  {\r\n    if(i==0)\r\n    arr[i] = s[i]-96;\r\n    else\r\n    arr[i] = arr[i-1]+s[i]-96;\r\n  }\r\n  while(q>0)\r\n  {\r\n    q--;\r\n    int l,r,sum=0;\r\n    scanf(\"%d %d\",&l,&r);\r\n    if(l==1)\r\n    printf(\"%d\\n\",arr[r-1]);\r\n    else\r\n    printf(\"%d\\n\",arr[r-1]-arr[l-2]);\r\n  }\r\n  return 0;\r\n}\r\n"}
{"similarity_score": 0.9921052631578947, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d9cad87d32f5ce53993aff5bcf073a88", "bug_code_uid": "abbf20eccb9ce84cd0d1e785e0490d85", "src_uid": "4a58039c5171597ecf78837e9db1d71d", "apr_id": "4090f4095a5a7e62d4ddf4a8dd9d04dc", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nvoid solve (){\r\nchar s[100] ;\r\nscanf(\"%s\",s);\r\nint index=0 , n;\r\nchar a=s[0];\r\nn=strlen(s);\r\nfor(int i=1;i<n;i++){\r\nif(s[i]<a){\r\na=s[i];\r\nindex=i;\r\n}\r\n}\r\nprintf(\"%c \",a);\r\nfor(int i=0;i<n;\r\n{\r\nif(i!=index)\r\nprintf(\"%c\",s[i]);\r\n}\r\nprintf(\"\\n\");\r\n\r\n}\r\n\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\nsolve();\r\n\r\nreturn 0;\r\n\r\n}\r\n\r\n\r\n\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nvoid solve (){\r\nchar s[100] ;\r\nscanf(\"%s\",s);\r\nint index=0 , n;\r\nchar a=s[0];\r\nn=strlen(s);\r\nfor(int i=1;i<n;i++){\r\nif(s[i]<a){\r\na=s[i];\r\nindex=i;\r\n}\r\n}\r\nprintf(\"%c \",a);\r\nfor(int i=0;i<n;i++){\r\nif(i!=index)\r\nprintf(\"%c\",s[i]);\r\n}\r\nprintf(\"\\n\");\r\n\r\n}\r\n\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\nsolve();\r\n\r\nreturn 0;\r\n\r\n}\r\n\r\n\r\n\r\n"}
{"similarity_score": 0.7100130039011704, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f172eec504db270083ab58781dbc658d", "bug_code_uid": "0487b8a2a4b87d2809cf33255eaad622", "src_uid": "eb7457fe1e1b571e5ee8dd9689c7d66a", "apr_id": "5e44dbd789ca01f7b0c8ec3030275ba0", "difficulty": 1300, "tags": ["combinatorics", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,s=0,a,b;\n    scanf(\"%d\",&n);\n    int c[2001],d[2001];\n    for(i=0;i<=2000;i++)\n    {\n        c[i]=0;\n        d[i]=0;\n    }\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n      s +=c[a+b];\n      c[a+b]++;\n        if(a-b>-1)\n        {\n            s +=d[a-b];\n            d[a-b]++;\n        }\n    }\n\n    printf(\"%d\",s);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,s=0,a,m,b;\n    scanf(\"%d\",&n);\n    int c[2001],d[2001];\n    for(i=0;i<=2000;i++)\n    {\n        c[i]=0;\n        d[i]=0;\n    }\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n      s +=c[a+b];\n      c[a+b]++;\n      if(a<b) m=1000+b-a;\n      else\n        m=a-b;\n      s +=d[m];\n      d[m]++;\n    }\n\n    printf(\"%d\",s);\n    return 0;\n}\n"}
{"similarity_score": 0.8549019607843137, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a4b4b481632bb47348caeaaeb9253fd8", "bug_code_uid": "4f3359a41280ccae358dda492c86a213", "src_uid": "1f435ba837f59b007167419896c836ae", "apr_id": "d88c60c5ed1b22682833fded778a0c18", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\nlong int test, i, right, left, numberofjumps;\nlong int position;\nscanf(\"%ld\", &test);\nfor(i=1; i<=test; i++)\n{\nscanf(\"%ld %ld %ld\", &right, &left, &numberofjumps);\nif(numberofjumps%2==0)\n{position=(numberofjumps/2)*(right-left);}\nelse\n{position=(((numberofjumps/2)+1)*right)-((numberofjumps/2)*left);}\nprintf(\"%ld\\n\", position);\n}\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\nlong long int test, i, right, left, numberofjumps;\nlong long int position;\nscanf(\"%lld\", &test);\nfor(i=1; i<=test; i++)\n{\nscanf(\"%lld %lld %lld\", &right, &left, &numberofjumps);\nif(numberofjumps%2==0)\n{position=(numberofjumps/2)*(right-left);}\nelse\n{position=(((numberofjumps/2)+1)*right)-((numberofjumps/2)*left);}\nprintf(\"%lld\\n\", position);\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.8869715271786023, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4d5143a81cbc0b911352bac746dee8c2", "bug_code_uid": "b2a4aa2beb3b24c181c63fdbe458324e", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "f0aa26298a4baf450d7968108e1e765f", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint abs(int a){\n\tif(a>0){\n\t\treturn a; \n\t}\n\telse{\n\t\treturn -a;\n\t}\n}\nint main()\n{ int x1,x2,y1,y2,d;\n\tscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n\tif(x1==x2||y2==y1) { if(abs(x1-x2)>abs(y1-y2)) d=abs(x1-x2); else d=abs(y1-y2);\n\t\t\t\t\t\t if(x1==x2) {\n\t\t\t\t\t\t if(x1+d<=1000 && y1+d<=100) printf(\"%d %d %d %d\",x1+d,y1,x2+d,y2); else printf(\"%d %d %d %d\",x1-d,y1,x2-d,y2);}\n\t\t\t\t\t\t  else {if(y1+d<=1000 && y2+d<=1000) printf(\"%d %d %d %d\",x1,y1+d,x2,y2+d); else printf(\"%d %d %d %d\",x1,y1-d,x2,y2-d);\n\t\t\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t\t\t}\t\n\t\t\n", "fixed": "#include<stdio.h>\nint abs(int a){\n\tif(a>0){\n\t\treturn a; \n\t}\n\telse{\n\t\treturn -a;\n\t}\n}\nint main()\n{ int x1,x2,y1,y2,d;\n\tscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n\tif(x1==x2||y2==y1) { if(abs(x1-x2)>abs(y1-y2)) d=abs(x1-x2); else d=abs(y1-y2);\n\t\t\t\t\t\t if(x1==x2) {\n\t\t\t\t\t\t if(x1+d<=1000 && y1+d<=100) printf(\"%d %d %d %d\",x1+d,y1,x2+d,y2); else printf(\"%d %d %d %d\",x1-d,y1,x2-d,y2);}\n\t\t\t\t\t\t  else {if(y1+d<=1000 && y2+d<=1000) printf(\"%d %d %d %d\",x1,y1+d,x2,y2+d); else printf(\"%d %d %d %d\",x1,y1-d,x2,y2-d);\n\t\t\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tif(abs(x1-x2)==abs(y1-y2)) printf(\"%d %d %d %d\",x1,y2,x2,y1); else printf(\"-1\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\n"}
{"similarity_score": 0.1794871794871795, "equal_cnt": 13, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "9a399c401b8fa74d210915c7d3517a07", "bug_code_uid": "8875c131608375067f3d219a460bb24e", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "f95a717f8cdb7f8f8bbabbd8645527ae", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int num[n];\n\n    int freq[101] = {0};\n\n    for(int i= 0; i<n;i++){\n        scanf(\"%d\", &num[i]);\n    }\n\n    for(int i= 0; i<n;i++){\n        int digit = num[i];\n        freq[digit]++;\n    }\n\n    int ans =  0;\n\n    for(int i= 0; i<101;i++){\n        if(freq[i] >= 3){\n            ans = i;\n        }\n    }\n\n    if(ans > 0){\n        printf(\"%d\\n\", ans);\n    }\n    else{\n        printf(\"-1\\n\");\n    }\n\n    return 0;\n}\n\n//Saakeeb\n\n\t\t \t\t \t\t\t \t\t\t \t\t \t\t\t\t \t\t\t\t \t\t", "fixed": "int t, n, x;\nint main() {\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tint a[200001] = {}, e = -1;\n\t\tscanf(\"%d\", &n);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tscanf(\"%d\", &x);\n\t\t\ta[x]++;\n\t\t\tif (a[x] > 2)\n\t\t\t\te = x;\n\t\t}\n\t\tprintf(\"%d\\n\", e);\n\t}\n}\n  \t  \t\t  \t  \t   \t  \t   \t\t\t  \t"}
{"similarity_score": 0.9237588652482269, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "76c8d98e2b9069106886ccdc65fddbd3", "bug_code_uid": "ccb47230ec5b6b999fb0d2667c706e03", "src_uid": "7db0b870177e7d7b01da083e21ba35f5", "apr_id": "d17658ec4230b9496c7bf830e9224d9c", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n   int n,a[1001],i,x=0;\n  \n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n      {\n         scanf(\"%d\",&a[i]);\n       }\n\n    if((n==1) && a[1]==1)\n        {\n           x=1;\n        }\n     else\n        {\n          for(i=1;i<=n;i++)\n            {\n              if(a[i]==0)\n               x++;\n             }\n         }            \n\n     if(x==1)\n        {\n            printf(\"YES\");\n        }\n      else\n         {\n            printf(\"NO\");\n         }\n        \n\n\n\n\n\n\n      \n\n\n\n\n\n\n\n\n      \n        \n\n  \n\n\n return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n   int n,a[1001],i,x=0;\n  \n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n      {\n         scanf(\"%d\",&a[i]);\n       }\n\n    if(n==1) \n       {\n           if(a[1]==1)\n            x=1;\n           else\n           x=0;\n       }\n\n\n\n\n     else\n        {\n          for(i=1;i<=n;i++)\n            {\n              if(a[i]==0)\n               x++;\n             }\n         }            \n\n     if(x==1)\n        {\n            printf(\"YES\");\n        }\n      else\n         {\n            printf(\"NO\");\n         }\n        \n\n\n\n\n\n\n      \n\n\n\n\n\n\n\n\n      \n        \n\n  \n\n\n return 0;\n}\n"}
{"similarity_score": 0.9399477806788512, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "a6ea53f566a976dd3a6bc2acd12b5a7e", "bug_code_uid": "a31a88e7747253e4f3b46342b2978fc2", "src_uid": "260666df22ee510fcce3ebdfbb8b71a2", "apr_id": "bcb80734950b51cd2aa31347a54b822e", "difficulty": 1000, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main () {\n    long n;\n    double sum;\n    sum=0;\n    scanf(\"%d\", &n);\n    for (i=1; i<n; i++) {\n        sum+=1/i;\n    }\n    printf(\"%f\", sum);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main () {\n    long n, i;\n    double sum, t;\n    sum=0;\n    scanf(\"%d\", &n);\n    for (i=1; i<=n; i++) {\n        t=i;\n        sum+=1/t;\n    }\n    printf(\"%f\", sum);\n    return 0;\n}\n"}
{"similarity_score": 0.5968586387434555, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "cc4feb195c899e9b545137c9f173f5e5", "bug_code_uid": "8aea92a2281d090d4f5b1b957fff9c93", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "f1a8f282aba0e655370ba20d0eb2b060", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include<stdio.h>\nint main()\n{\n\n long long int n,i,k,x,g,d,j,m=0,b,w,sum=0,count=0;\n\nscanf(\"%lld\",&n);\nlong long int h[n],t[n];\nfor(i=0;i<n;i++){\n\nscanf(\"%lld %lld\",&h[i],&t[i]);\n}\nfor(i=0;i<n-1;i++){\n\nif((h[i]==h[i+1])&&t[i]==t[i+1]){\n    count++;\nm++;\n}\nelse {\n    if(count>0){\n        sum=sum+count+1;\n        count =0;\n    }\n    else count =0;\n}\n\n\n}\nif(count>0){\nsum=sum+count+1;}\nif(m==0){sum=1;}\n    printf(\"%lld\\n\",sum);\n\n\n        return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n long long int n,i,k=0,x,g,d,j,m=0,w,sum=0,count=1;\n\nscanf(\"%lld\",&n);\nlong long int h[n],t[n],b[n];\nfor(i=0;i<n;i++){\n\nscanf(\"%lld %lld\",&h[i],&t[i]);\n}\nfor(i=0;i<n-1;i++){\n\nif((h[i]==h[i+1])&&t[i]==t[i+1]){   count++;\n        if(i==n-2){\n\n\n            b[k]=count;\n            k++;\n           }\n\n\n\n}\n\nelse {b[k]=count;\ncount=1;\nk++;}}\nif(i==n-1){\nb[k]=count;\nk++;}\nx=b[0];\nfor(i=0;i<k-1;i++){\nif(x<b[i+1]){\n    x=b[i+1];\n}}\n\n    printf(\"%lld\\n\",x);\n\n\n        return 0;\n}\n"}
{"similarity_score": 0.95171202809482, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9cb268ed3ba3b3032b5bb73042813e26", "bug_code_uid": "c57cfd09155efcff2b40737dd3064362", "src_uid": "a74c65acd41ff9bb845062222135c60a", "apr_id": "3aefca7708357f6db5d7976d884956cb", "difficulty": 900, "tags": ["implementation", "geometry", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,n,i;\n    scanf(\"%d%d%d\",&a,&b,&n);\n    float x[n],y[n],p[n],q[n];\n    float t[n],v[n],min;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%f%f%f\",&x[i],&y[i],&v[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        p[i]=a-x[i];\n        q[i]=b-y[i];\n        if(p[i]<0)\n            p[i]=-p[i];\n        if(q[i]<0)\n            q[i]=-q[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        t[i]=(p[i]+q[i])/v[i];\n    }\n    min=t[0];\n    for(i=0;i<n;i++)\n    {\n        if(min>t[i])\n            min=t[i];\n    }\n    printf(\"%.19f\",min);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int a,b,n,i;\n    scanf(\"%d%d%d\",&a,&b,&n);\n    float x[n],y[n],p[n],q[n];\n    float t[n],v[n],min;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%f%f%f\",&x[i],&y[i],&v[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        p[i]=a-x[i];\n        q[i]=b-y[i];\n        if(p[i]<0)\n            p[i]=-p[i];\n        if(q[i]<0)\n            q[i]=-q[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        t[i]=sqrt((p[i]*p[i])+(q[i]*q[i]))/v[i];\n    }\n    min=t[0];\n    for(i=0;i<n;i++)\n    {\n        if(min>t[i])\n            min=t[i];\n    }\n    printf(\"%.19f\",min);\n}\n"}
{"similarity_score": 0.9975490196078431, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1d180f1cf7f0a17ec1bb7275a3757e04", "bug_code_uid": "a4a023242d58cdb4c88d389f399b027e", "src_uid": "fce9d78ad7d4ea01be1704f588e42d37", "apr_id": "7abc61ffcf62eeec3ca472ae64bc2457", "difficulty": 1100, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int r,d;\n    scanf(\"%d%d\",&r,&d);\n    int n;\n    scanf(\"%d\",&n);\n    int i;\n    int x,y,z,sum,count=0;\n    double a;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        sum=(x*x)+(y*y);\n        a=sqrt((double)sum);\n        if(a-z>=(double)r-d && a-z<=(double)r)count++;\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int r,d;\n    scanf(\"%d%d\",&r,&d);\n    int n;\n    scanf(\"%d\",&n);\n    int i;\n    int x,y,z,sum,count=0;\n    double a;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        sum=(x*x)+(y*y);\n        a=sqrt((double)sum);\n        if(a-z>=(double)r-d && a+z<=(double)r)count++;\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.9966386554621849, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2a9b8bc7645e81273819d132b4d57396", "bug_code_uid": "71b26bdf9b54f353062725e263e3fd3a", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "564b8018fc811ec29a5e69c463708998", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\ndouble max(double a,double b){\n\tif(a>b){\n\treturn a;\n\t}\n\telse{\n\treturn b;\n\t}\n}\n\nint compare(const void *a,const void *b){\n\t\treturn *(int *)a-*(int *)b; \n}\nint main()\n{\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tint l;\n\t\tscanf(\"%d\",&l);\n\t\t\n\t\tfor(int i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\t\n\t\tqsort(a,n,sizeof(int),compare);\n\n\t\t\n\t\tdouble p;\n\t\tif((l-a[n])>a[0]){\n\t\t\tp=l-a[n];\n\t\t}\n\t\telse{\n\t\t\tp=a[0];\n\t\t}\n\t\tdouble k;\n\t\tdouble ans=0;\n\t\tfor(int i=0;i<n-1;i++){\n\t\t\tk=(a[i+1]-a[i])/(2.0);\n\t\t    ans=max(ans,k);\n\t\t}\n\t\tans=max(ans,p);\n\t\tprintf(\"%.10f\",ans);\n\t\t\n\t\n}\n\t\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\ndouble max(double a,double b){\n\tif(a>b){\n\treturn a;\n\t}\n\telse{\n\treturn b;\n\t}\n}\n\nint compare(const void *a,const void *b){\n\t\treturn *(int *)a-*(int *)b; \n}\nint main()\n{\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tint l;\n\t\tscanf(\"%d\",&l);\n\t\t\n\t\tfor(int i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\t\n\t\tqsort(a,n,sizeof(int),compare);\n\n\t\t\n\t\tdouble p;\n\t\tif((l-a[n-1])>a[0]){\n\t\t\tp=l-a[n-1];\n\t\t}\n\t\telse{\n\t\t\tp=a[0];\n\t\t}\n\t\tdouble k;\n\t\tdouble ans=0;\n\t\tfor(int i=0;i<n-1;i++){\n\t\t\tk=(a[i+1]-a[i])/(2.0);\n\t\t    ans=max(ans,k);\n\t\t}\n\t\tans=max(ans,p);\n\t\tprintf(\"%.10f\",ans);\n\t\t\n\t\n}\n\t\n"}
{"similarity_score": 0.7331118493909191, "equal_cnt": 15, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "3538bbb375f7da723c0ec7a82bbd40b0", "bug_code_uid": "faaa2abda25f7ec1f0d112117aa2c8db", "src_uid": "4849a1f65afe69aad12c010302465ccd", "apr_id": "feb62638b5761419051a1e114baa23ab", "difficulty": 1100, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define INF 0x3f3f3f3f\n\nint main() {\n\tint n, m, min, max;\n\n\tscanf(\"%d\", &n);\n\tmin = INF;\n\twhile (n--) {\n\t\tint l1, r1;\n\n\t\tscanf(\"%d%d\", &l1, &r1);\n\t\tif (min > r1)\n\t\t\tmin = r1;\n\t}\n\tscanf(\"%d\", &m);\n\tmax = 0;\n\twhile (m--) {\n\t\tint l2, r2;\n\n\t\tscanf(\"%d%d\", &l2, &r2);\n\t\tif (max < l2)\n\t\t\tmax = l2;\n\t}\n\tprintf(\"%d\\n\", min < max ? max - min : 0);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define INF 0x3f3f3f3f\n\nint main() {\n\tint n, m, min1, max1, min2, max2, x;\n\n\tscanf(\"%d\", &n);\n\tmin1 = INF;\n\tmax1 = 0;\n\twhile (n--) {\n\t\tint l1, r1;\n\n\t\tscanf(\"%d%d\", &l1, &r1);\n\t\tif (min1 > r1)\n\t\t\tmin1 = r1;\n\t\tif (max1 < l1)\n\t\t\tmax1 = l1;\n\t}\n\tscanf(\"%d\", &m);\n\tmin2 = INF;\n\tmax2 = 0;\n\twhile (m--) {\n\t\tint l2, r2;\n\n\t\tscanf(\"%d%d\", &l2, &r2);\n\t\tif (max2 < l2)\n\t\t\tmax2 = l2;\n\t\tif (min2 > r2)\n\t\t\tmin2 = r2;\n\t}\n\tx = (max1 - min2 > max2 - min1 ? max1 - min2 : max2 - min1);\n\tprintf(\"%d\\n\", x < 0 ? 0 : x);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9128205128205128, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d34f17b122e2708aa8ea7ff139241ff8", "bug_code_uid": "f6cdadee7e9ef6e601fe7a98515df351", "src_uid": "2b6e670b602a89b467975edf5226219a", "apr_id": "7576f789aef70c1c70992dbc69654526", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a,b,s,i,t;\r\n    scanf(\"%d\\n\",&t);\r\n    for(i=0;i<=t;i++)\r\n    {\r\n        scanf(\"%d %d\",&a,&b);\r\n        if(a==0)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else{\r\n                s=a+(b*2)+1;\r\n        printf(\"%d\\n\",s);}\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a,b,s,i,t;\r\n    scanf(\"%d\\n\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d %d\",&a,&b);\r\n        if(a==0)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else{\r\n        printf(\"%d\\n\",a+(b*2)+1);}\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.7050359712230215, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "77a62b396ce4a67dea5c22759f24e756", "bug_code_uid": "afbe570a0e5ed9eb5128e7ec9b9ebdd3", "src_uid": "e3dcb1cf2186bf7e67fd8da20c1242a9", "apr_id": "8d0eaef96a6501186b7e9b1e2f6e14c9", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n\n{\n  int n,i,j,k,l,s=0,a=0;\n  scanf(\"%d\",&n);\n  getchar();\n\n\n  char str[n][1000];\n\n  for(i=0;i<n;i++)\n    gets(str[i]);\n\n    if(n==1)\n        puts(str[0]);\n\n    else\n    {\n\n\n\n  for(i=0;i<n-1;i++)\n  {\n      if(str[i]!=str[i+1])\n      {\n          k=i;\n          l=i+1;\n\n          break;\n      }\n  }\n\n  for(i=k;i<=k;i++)\n  {\n      for(j=0;j<n;j++)\n        if(strcmp(str[i],str[j])==0)\n          s++;\n  }\n   for(i=l;i<=l;i++)\n  {\n      for(j=0;j<n;j++)\n        if(strcmp(str[i],str[j])==0)\n          a++;\n  }\n\n  if(a>s)\n    puts(str[l]);\n\n  else\n    puts(str[k]);\n\n    }\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n\n{\n  int n,i,j,k,l,s=0,a=0;\n  scanf(\"%d\",&n);\n  getchar();\n\n\n  char str[n][1000];\n\n  for(i=0;i<n;i++)\n    gets(str[i]);\n\n    if(n==1)\n        puts(str[0]);\n\n    else\n    {\n\n\n\n  for(i=0;i<n-1;i++)\n  {\n      if(strcmp(str[i],str[i+1])!=0)\n      {\n          k=i;\n          l=i+1;\n\n          break;\n      }\n  }\n\n  for(i=k;i<=k;i++)\n  {\n      for(j=0;j<n;j++)\n        if(strcmp(str[i],str[j])==0)\n          s++;\n  }\n\n   for(i=l;i<=l;i++)\n  {\n      for(j=0;j<n;j++)\n        if(strcmp(str[i],str[j])==0)\n           a++;\n  }\n\n\n\n  if(a>s)\n    puts(str[l]);\n\n  else\n    puts(str[k]);\n\n    }\n\n}"}
{"similarity_score": 0.958139534883721, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "e3d9640ef86be35cee37a4f08d26b726", "bug_code_uid": "c0e81534b74861524990b03c76dec1ac", "src_uid": "3ec1b7027f487181dbdfb12f295f11ae", "apr_id": "a1a04229ca6705a13fe1403a8f37ceb1", "difficulty": 900, "tags": ["brute force", "dp", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\nlong long num,t;\r\nscanf(\"%d\",&t);\r\nwhile(t--){\r\nscanf(\"%lld\",&num);\r\n\tif(num<2020)\r\n\tprintf(\"\\nNO\");\r\n\telse if(num%2020<=(2*num/2020))\r\n\tprintf(\"YES\\n\");\r\n\telse\r\n\tprintf(\"\\nNO\");\r\n}}", "fixed": "#include<stdio.h>\r\nint main(){int t;\r\nlong long num;\r\nscanf(\"%d\",&t);\r\nwhile(t--){\r\nscanf(\"%lld\",&num);\r\n\tif(num<2020)\r\n\tprintf(\"NO\\n\");\r\n\telse if(num%2020<=(num/2020))\r\n\tprintf(\"YES\\n\");\r\n\telse\r\n\tprintf(\"NO\\n\");\r\n}}"}
{"similarity_score": 0.36, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "14bb739364cd64c321e1bc7886b8c71a", "bug_code_uid": "d80497cb083ce0db9908b79b394aad52", "src_uid": "c047040426e736e9085395ed9666135f", "apr_id": "9cfa2dba6df973e55c57ff434ed136cf", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//CoDE DeVeloPed UndER AcE ProDuctionS\n#include<stdio.h>\n#include<math.h>\ntypedef long long int ll;\nll isprime(ll);\nmain()\n{\n    ll n,i,j,cnt=0;\n    scanf(\"%I64d\",&n);\n    for(i=2;i<=10000000;i++)\n    {\n        if(isprime(i)==0) {cnt++; printf(\"%I64d \",i);}\n        if(cnt>=n) break;\n    }\n\n}\nll isprime(ll x)\n{\n    ll a,b,c,flg=0;\n    for(a=2;a*a<=x;a++)\n    {\n        if(x%a==0) {flg=1; break;}\n    }\n    return(flg);\n}\n\n\n//CoDE DeVeloPed UndER AcE ProDuctionS\n", "fixed": "//COde DevELOped UndeR AcE ProDuCTions>\n#include<stdio.h>\ntypedef long long int ll;\nmain()\n{\n    ll n,i,j;\n    scanf(\"%I64d\",&n);\n    for(i=n;i<2*n;i++)\n    {\n        printf(\"%I64d \",i);\n    }\n\n}\n\n//COde DevELOped UndeR AcE ProDuCTions>\n"}
{"similarity_score": 0.4280397022332506, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "7ed06c8fa125f2521188b124424e05f2", "bug_code_uid": "f022e37f8ffcf99654ff43924a770079", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "b35b84cc43301692c5077ae74a1a0fbf", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,n;\n    scanf(\"%d\",&n);\n    int s[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&s[i]);\n    }\n    if(s[0]==s[1]||s[0]==s[2]||s[1]==s[2]){\n        for(i=1;i<n;i++){\n            if(s[0]!=s[i]&&s[0]!=s[2]){\n                printf(\"1\");\n                return 0;\n            }\n            else{\n                printf(\"%d\",i+1);\n                return 0;\n            }\n        }\n    }\n    else if(s[0]%2==0){\n        for(i=1;i<n;i++){\n            if(s[i]%2!=0){\n                printf(\"%d\",i+1);\n                return 0;\n            }\n        }\n    }\n    else if(s[0]%2!=0){\n        for(i=1;i<n;i++){\n            if(s[i]%2==0){\n                printf(\"%d\",i+1);\n                return 0;\n            }\n        }\n    }\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,l=0,n,j=0;\n    scanf(\"%d\",&n);\n    int s[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&s[i]);\n    }\n    for(i=0;i<n;i++){\n        if(s[i]%2!=0)\n            l++;\n    }\n    if(l==1){\n        for(i=0;i<n;i++){\n            if(s[i]%2!=0){\n                printf(\"%d\",i+1);\n                return 0;\n            }\n            \n        }\n    }\n    else if(l==n-1){\n        for(i=0;i<n;i++){\n            if(s[i]%2==0){\n                printf(\"%d\",i+1);\n                return 0;\n            }\n        }\n    }\n    else if(l==n||l==0){\n        for(i=1;i<n;i++){\n            if(s[0]!=s[1]&&s[0]!=s){\n                printf(\"1\");\n                return 0;\n            }\n            else if(s[0]!=s[i]){\n                printf(\"%d\",i+1);\n                return 0;\n            }\n        } \n    }\n    return 0;\n}"}
{"similarity_score": 0.7622641509433963, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "dda1c10cee07e820313213555c54ccf9", "bug_code_uid": "a0f53e0e3a37702a5f741ae627d0d8a5", "src_uid": "d67a97a3b69d599b03d3fce988980646", "apr_id": "65c6bc579d7f92790034cb922f8f347a", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int a, b, t, move=0;\n        scanf(\"%d %d\", &a, &b);\n        if(a>b)\n        {\n            t=b;\n            b=a;\n            a=t;\n        }\n\n        while(b-a>=10)\n        {\n            b=b-10;\n            move++;\n        }\n\n        if(b>a)\n            move++;\n\n        printf(\"%d\\n\", move);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int a, b, t, move=0;\n        scanf(\"%d %d\", &a, &b);\n        if(a>b)\n        {\n            t=b;\n            b=a;\n            a=t;\n        }\n\n        move=(b-a)/10;\n\n        if(((b-a)%10)==0)\n            printf(\"%d\\n\", move);\n        else\n            printf(\"%d\\n\", move+1);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8964451313755796, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "49ee27ef266370c5db2db828f024737f", "bug_code_uid": "d299e3bfc74e3671fa29698e173c241b", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "ddb6f9e43b5834277788f42a02a7aa70", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tint n,m,i,sum=0;\n\tscanf(\"%d%d\",&n,&m);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tqsort(a,n,sizeof(int),cmpfunc);\n\tfor(i=0;i<m;i++)\n\t{if(a[i]<0)\n\tsum=sum+a[i]*(-1);\n\telse\n\tsum=sum+a[i];}\n\tprintf(\"%d\",sum);\n\t\n\t\n}\n", "fixed": "#include<stdio.h>\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tint n,m,i,sum=0;\n\tscanf(\"%d%d\",&n,&m);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tqsort(a,n,sizeof(int),cmpfunc);\n\tfor(i=0;i<m;i++)\n\tif(a[i]<0)\n\tsum=sum+a[i]*(-1);\n\tprintf(\"%d\",sum);\n\t\n\t\n}\n"}
{"similarity_score": 0.9576174112256587, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "e7858d52a7449254bb432a5cfd834fe0", "bug_code_uid": "22396ba380fcba35b5207c93ba1fc979", "src_uid": "28610d192329c78580db354f8dfc4094", "apr_id": "12c2a59d29d57a7bfe0ad1afc03274c0", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int t;\n    long long int x,y,k,total,c=0,j=1;\n    scanf(\"%d\\n\",&t);\n    for(int i=0;i<t;i+=1){\n        j=1;\n        c=0;\n        scanf(\"%lld %lld %lld\",&x,&y,&k);\n        total = y * k + k;\n        if(x==2){\n            c = ((total - 1) / (x - 1));\n        }\n        else{\n            c = ((total - 1) / (x - 1)) + 1;\n        }\n        \n        \n        printf(\"%lld\\n\",c+k);\n\n    }\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int t;\n    long long int x,y,k,total,c=0,j=1;\n    scanf(\"%d\\n\",&t);\n    for(int i=0;i<t;i+=1){\n        j=1;\n        c=0;\n        scanf(\"%lld %lld %lld\",&x,&y,&k);\n        total = y * k + k;\n        if((total - 1)%(x-1)==0){\n            c = ((total - 1) / (x - 1));\n        }\n        else{\n            c = ((total - 1)/(x-1)) + 1;\n        }\n        \n        printf(\"%lld\\n\",c+k);\n\n    }\n}"}
{"similarity_score": 0.9854014598540146, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4e6edc65f2cd7ee8f3dc56e0f8b62739", "bug_code_uid": "d4232a0644e91cebf5f14a95b34f196c", "src_uid": "0ac2a0954fe43d66eac32072c8ea5070", "apr_id": "5401fd66c655c6dd5d0d2dd8b060ac3b", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i=n;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tprintf(\"%d %d\\n\",i,n*n-i+1);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i=n;\n\tfor(i=1;i<=n*n/2;i++)\n\t{\n\t\tprintf(\"%d %d\\n\",i,n*n-i+1);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9629629629629629, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "688be545a4fe193e3655697a19ab3107", "bug_code_uid": "aba945b8f6e991daa9983c55a5d6f9f2", "src_uid": "ac248c83c99d8a2262772816b5f4ac6e", "apr_id": "fbafa0a759e4d33ff8b0a5e7063ab473", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid main()\n{\n    int t,n,i,j;\n    scanf(\"%d\",&t);\n    for(j=t;j>0;j--)\n    {\n        scanf(\"%d\",&n);\n            printf(\"%d \\n\",n);\n            for(i=1;i<=n;i++)\n                printf(\"%d \",i);\n                printf(\"\\n\");\n    }\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t,n,i,j;\n    scanf(\"%d\",&t);\n    for(j=t;j>0;j--)\n    {\n        scanf(\"%d\",&n);\n            printf(\"%d \\n\",n);\n            for(i=1;i<=n;i++)\n                printf(\"%d \",i);\n                printf(\"\\n\");\n    }\n return 0;\n}"}
{"similarity_score": 0.9975903614457832, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4ee36b3b022a82eeac525f147a31e210", "bug_code_uid": "bdabc086b9aa6622662334605525e13d", "src_uid": "82de6d4c892f4140e72606386ec2ef59", "apr_id": "be0365ca23b3ba1749b6de14e7da25ac", "difficulty": 1400, "tags": ["dp", "constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long long int n,k,l,m;\n     scanf(\"%I64d %I64d\",&n,&k);\n     long long int a[n],i;\n     for(i=1;i<=2*n;i++)\n     {\n          a[i]=i;\n     }\n               for(l=1;l<=2*k;l+=2)\n               {\n                 a[l]=l+1;\n                 a[l+1]=l;\n                    \n               }\n          for(i=1;i<=2*n;i++)\n          {\n               printf(\"%I64d \",a[i]);\n          }\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    long long int n,k,l,m;\n     scanf(\"%I64d %I64d\",&n,&k);\n     long long int a[2*n],i;\n     for(i=1;i<=2*n;i++)\n     {\n          a[i]=i;\n     }\n               for(l=1;l<=2*k;l+=2)\n               {\n                 a[l]=l+1;\n                 a[l+1]=l;\n                    \n               }\n          for(i=1;i<=2*n;i++)\n          {\n               printf(\"%I64d \",a[i]);\n          }\n}"}
{"similarity_score": 0.9870290302655961, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ef257318972fe1157bab6d001bee4590", "bug_code_uid": "d81d274c97380fdae82e301e248f9da2", "src_uid": "6477fdad8455f57555f93c021995bb4d", "apr_id": "2b5e154c83075ce9e88d9557760879c3", "difficulty": 900, "tags": ["binary search", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int a[t],i,count1=0,count2=0,k=0,d[t+1],max=-1,value=0;\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<t;i++)\n    {\n        count1=0;\n        count2=0;\n        while(a[i]==1)\n        {\n            count1++;\n            i++;\n        }\n        while(a[i]==2)\n        {\n            count2++;\n            i++;\n        }\n        i--;\n        d[k]=count1;\n        k++;\n        d[k]=count2;\n        k++;\n    }\n    for(i=1;i<k-1;i++)\n    {\n        if(d[i-1]>=d[i+1])\n        {\n            value=d[i]<=d[i-1]?d[i]:d[i-1];\n        }\n        if(d[i-1]<d[i+1])\n        {\n            value=d[i]<=d[i+1]?d[i]:d[i+1];\n        }\n        if(max<value)\n        {\n            max=value;\n        }\n    }\n    printf(\"%d\",2*max);\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int a[t],i,count1=0,count2=0,k=0,d[t+1],max=-1,value=0;\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<t;i++)\n    {\n        count1=0;\n        count2=0;\n        while(a[i]==1)\n        {\n            count1++;\n            i++;\n        }\n        while(a[i]==2)\n        {\n            count2++;\n            i++;\n        }\n        i--;\n        d[k]=count1;\n        k++;\n        d[k]=count2;\n        k++;\n    }\n    d[k]=0;\n    k++;\n    for(i=1;i<k-1;i++)\n    {\n        if(d[i-1]>=d[i+1])\n        {\n            value=d[i]<=d[i-1]?d[i]:d[i-1];\n        }\n        if(d[i-1]<d[i+1])\n        {\n            value=d[i]<=d[i+1]?d[i]:d[i+1];\n        }\n        if(max<value)\n        {\n            max=value;\n        }\n    }\n    printf(\"%d\",2*max);\n}\n"}
{"similarity_score": 0.6865671641791045, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "15c908b5c0f7fcaf7b020c5aeae0f274", "bug_code_uid": "b8163a9b303a2e86b2889c3c90e12175", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "a3b075990b5e3de7923e656e3d2ce123", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,m;\n    scanf(\"%d\",&n);\n    int i,j,a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    scanf(\"%d\",&m);\n    int b[m];\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&b[i]);\n    }\n    int count=0;\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            if(a[i]-b[j]>=-1 && a[i]-b[j]<=1)\n            {\n                count++;b[j]=-2;break;\n            }\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,m;\n    scanf(\"%d\",&n);\n    int i,j,a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    scanf(\"%d\",&m);\n    int b[m];\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&b[i]);\n    }\n    int temp;\n    for(i=0;i<n-1;i++)\n    {\n        for(j=0;j<n-1;j++)\n        {\n            if(a[j]>a[j+1])\n            {\n                temp=a[j];\n                a[j]=a[j+1];\n                a[j+1]=temp;\n            }\n        }\n    }\n\n    for(i=0;i<m-1;i++)\n    {\n        for(j=0;j<m-1;j++)\n        {\n            if(b[j]>b[j+1])\n            {\n                temp=b[j];\n                b[j]=b[j+1];\n                b[j+1]=temp;\n            }\n        }\n    }\n\n    int count=0;\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            if(a[i]-b[j]>=-1 && a[i]-b[j]<=1)\n            {\n                count++;b[j]=-2;break;\n            }\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.9054151624548736, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "ed830770092647f463d59ec4d21861ef", "bug_code_uid": "9346b87f2c02f17d787bbc321594124c", "src_uid": "2c58d94f37a9dd5fb09fd69fc7788f0d", "apr_id": "433731d6e2c0c9bf466d76143a5fbbc2", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "# include <stdio.h>\n# include <conio.h>\n\nint main()\n{\n\tint n,i,j,max,count,b,k,swap;\n\tscanf(\"%d\", &n);\n\tint a[n];\n\t\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\t\n\tfor(i = 1; i <= n-1; i++){\n\t\tj = i;\n\t\twhile(j >0 && a[j] < a[j-1]){\n\t\t\tswap = a[j];\n\t\t\ta[j] = a[j-1];\n\t\t\ta[j-1] = swap;\n\t\t\tj--;\n\t\t}\n\t}\n\t\n\t\n\tif(n == 1){\n\t\tprintf(\"YES\");\n\t}\n\telse{\n\t\tcount = 1;\n\t\tmax = 0;\n\t\tfor(i = 0; i < n-1; i++){\n\t\t\tif(a[i] == a[i+1]){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse if(a[i] != a[i+1]){\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tif(max < count){\n\t\t\t\tmax = count;\n\t\t\t}\n\t\t}\n\t\tb = n/2 +1;\n\t\tif(max > b){\n\t\t\tprintf(\"NO\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"YES\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n\n", "fixed": "# include <stdio.h>\n# include <conio.h>\n\nint main()\n{\n\tint n,i,j,max,count,b,k,swap;\n\tscanf(\"%d\", &n);\n\tint a[n];\n\t\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\t\n\tfor(i = 1; i <= n-1; i++){\n\t\tj = i;\n\t\twhile(j >0 && a[j] < a[j-1]){\n\t\t\tswap = a[j];\n\t\t\ta[j] = a[j-1];\n\t\t\ta[j-1] = swap;\n\t\t\tj--;\n\t\t}\n\t}\n\t\n\t\n\tif(n == 1){\n\t\tprintf(\"YES\");\n\t}\n\telse{\n\t\tcount = 1;\n\t\tmax = 0;\n\t\tfor(i = 0; i < n-1; i++){\n\t\t\tif(a[i] == a[i+1]){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse if(a[i] != a[i+1]){\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tif(max < count){\n\t\t\t\tmax = count;\n\t\t\t}\n\t\t}\n\t\tb = n/2;\n\t\tif(n%2 == 0){\n\t\t\tif(max > b){\n\t\t\t\tprintf(\"NO\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"YES\");\n\t\t\t}\n\t\t}\n\t\tif(n%2 == 1){\n\t\t\tif(max > b+1){\n\t\t\t\tprintf(\"NO\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"YES\");\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.7426556991774383, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "8fd35cad6f836e5c68b4418a651c5d44", "bug_code_uid": "0bb2fdb624a0f832488e1a7b7e258311", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "9629c3028d3391c0eb2e75821e7b0730", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n    int n,d,i,a[3000],count=0;\n    scanf(\"%d %d\",&n,&d);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=1;i<n;i++)\n    {\n        while(a[i]>=a[i+1])\n        {\n            a[i+1]+=d;\n            count++;\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n    int n,d,i,c,e,a[3000],count=0;\n    scanf(\"%d %d\",&n,&d);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=1;i<n;i++)\n    {\n        if(a[i]==a[i+1])\n        {\n            a[i+1]+=d;\n            count++;\n        }\n        else if(a[i]>a[i+1])\n        {\n            c=a[i]-a[i+1];\n            e=(c/d)+1;\n            a[i+1]+=(e*d);\n            count+=e;\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.9986893840104849, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "949656d6a46419b0788a0e083ca109e6", "bug_code_uid": "94579126ed4fb9433d435f6152f62c8c", "src_uid": "2617287ffa84d1e75e20ee89d36dcbb1", "apr_id": "bb8bd5c43d2fc993d71d7d3b3d52cb02", "difficulty": 2500, "tags": ["data structures", "hashing", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <string.h>\n#include <stdio.h>\nint n, m, k, type, l, r, c, i;\nchar s[100001];\n\n\nint main() {\n    scanf(\"%d%d%d\\n\", &n, &m, &k);\n    gets(s);\n    for (i = 0; i < m + k; ++i) {\n        scanf(\"%d%d%d%d\", &type, &l, &r, &c);\n        --l; --r;\n        type == 1 ? memset(s + l, c + '0', r - l + 1);\n        : puts(!memcmp(s + l, s + l + c, r - l - c + 1) ? \"YES\" : \"NO\");\n    }\n}", "fixed": "#include <string.h>\n#include <stdio.h>\nint n, m, k, type, l, r, c, i;\nchar s[100001];\n\n\nint main() {\n    scanf(\"%d%d%d\\n\", &n, &m, &k);\n    gets(s);\n    for (i = 0; i < m + k; ++i) {\n        scanf(\"%d%d%d%d\", &type, &l, &r, &c);\n        --l; --r;\n        type == 1 ? memset(s + l, c + '0', r - l + 1)\n        : puts(!memcmp(s + l, s + l + c, r - l - c + 1) ? \"YES\" : \"NO\");\n    }\n}"}
{"similarity_score": 0.9808660624370594, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1818811bbe54f5c5b2e6606125b7d1fd", "bug_code_uid": "76004c78b0460eed054cbc81f611e74c", "src_uid": "b7e36ca8a96dd7951359070d4953beec", "apr_id": "f8c63319c76455bde97d443a49f2bf33", "difficulty": 800, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        if(n != 3 && n % 2 != 0)\r\n        {\r\n            printf(\"%d\\n\", n+3);\r\n        }\r\n        else if(n != 2 && n % 2 == 0)\r\n        {\r\n            printf(\"%d\\n\", n+2);\r\n        }\r\n        else if(n == 2)\r\n        {\r\n            printf(\"%d\\n\", n+7);\r\n        }\r\n        else if(n == 3)\r\n        {\r\n            printf(\"%d\\n\", n+5);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        if(n != 3 && n % 2 != 0)\r\n        {\r\n            printf(\"%d\\n\", 3);\r\n        }\r\n        else if(n != 2 && n % 2 == 0)\r\n        {\r\n            printf(\"%d\\n\", 2);\r\n        }\r\n        else if(n == 2)\r\n        {\r\n            printf(\"%d\\n\", 7);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\\n\", 5);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9323843416370107, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "55d7daa0481d36d04ac3b35849b18387", "bug_code_uid": "4b1d016b501b749534a61ef26b7c5f44", "src_uid": "b46244f39e30c0cfab592a97105c60f4", "apr_id": "49bf7d42d52cc4a33466e47ee94ceccb", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n\tint t;\n\tint n;\n\tscanf_s(\"%d\", &t);\n\twhile (t--)\n\t{\n\t\tscanf_s('%d', &n);\n\t\tprintf(\"%d\\n\", n / 2);\n\t}\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\n\tint t;\n\tint n;\n\tscanf(\"%d\", &t);\n\twhile (t--)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tprintf(\"%d\\n\", n / 2);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9991823385118561, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cc514646252dd4f69ea052f302831bf9", "bug_code_uid": "f511dc4e3cd393bd636e0287f1452e66", "src_uid": "f98d1d426f68241bad437eb221f617f4", "apr_id": "9aa3a09dfb74673a99c2a559ad787696", "difficulty": 900, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<limits.h>\n#include<math.h>\n\nint diffAbs(int x, int y){\n\treturn abs(x - y); \n}\n\nint main(int argc, char const *argv[])\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor(int i = 0;i < t;i++){\n\t\t//n is \"start A\"\n\t\t//k is \"distance\"\n\t\tint n, k;\n\t\tscanf(\"%d%d\", &n,&k);\n\n\t\tif(k == 0){ //correct\n\t\t\tif(n % 2){\n\t\t\t\tprintf(\"1\\n\");\n\t\t\t}else{\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t}\n\t\t}else{ //k >= 1, k != 0 , n >= 1\n\t\t\tif(n < k){\n\t\t\t\tint diff = diffAbs(n, k);\n\t\t\t\tprintf(\"%d\\n\", diff);\n\t\t\t}else if(n > k){ //n > k\n\t\t\t\tif( (n % 2) == k % 2) printf(\"0\\n\");\n\t\t\t\telse printf(\"1\\n\");\n\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<limits.h>\n#include<math.h>\n\nint diffAbs(int x, int y){\n\treturn abs(x - y); \n}\n\nint main(int argc, char const *argv[])\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor(int i = 0;i < t;i++){\n\t\t//n is \"start A\"\n\t\t//k is \"distance\"\n\t\tint n, k;\n\t\tscanf(\"%d%d\", &n,&k);\n\n\t\tif(k == 0){ //correct\n\t\t\tif(n % 2){\n\t\t\t\tprintf(\"1\\n\");\n\t\t\t}else{\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t}\n\t\t}else{ //k >= 1, k != 0 , n >= 1\n\t\t\tif(n <= k){\n\t\t\t\tint diff = diffAbs(n, k);\n\t\t\t\tprintf(\"%d\\n\", diff);\n\t\t\t}else if(n > k){ //n > k\n\t\t\t\tif( (n % 2) == k % 2) printf(\"0\\n\");\n\t\t\t\telse printf(\"1\\n\");\n\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9900662251655629, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "960887bc4994db60cc21d0ec5b6ba3a9", "bug_code_uid": "4400ee5344f5bfbf3625652a7ac25a95", "src_uid": "cf7bf89a6038586b69d3b8021cee0b27", "apr_id": "502fe4e5d0e2047777cff0b2b49a8615", "difficulty": 800, "tags": ["implementation", "geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\nlong long int max(long long int a,long long int b){\n    if(a>b){\n        return a;\n    }\n    return b;\n}\nlong long int cmp(const void *a,const void *b){\n    return *(long long int *)b-*(long long int*)a;\n}\nint main()\n{\n   long long int i,j,test,k,m,l,r,flag=0,max=0,n,m1,m2,x,sum=0,ans=0,y,count, a[10000]={0},b[1000]={0};\nscanf(\"%lld\",&n);\ncount=0;\nfor(i=0;i<n;i++){\n    scanf(\"%lld%lld\",&x,&y);\n    if(x>0){\n        count++;\n    }\n}\nif(count+1==n || count==1 || count==0){\n    printf(\"YES\\n\");\n}else{\n    printf(\"NO\\n\");\n}\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\nlong long int max(long long int a,long long int b){\n    if(a>b){\n        return a;\n    }\n    return b;\n}\nlong long int cmp(const void *a,const void *b){\n    return *(long long int *)b-*(long long int*)a;\n}\nint main()\n{\n   long long int i,j,test,k,m,l,r,flag=0,max=0,n,m1,m2,x,sum=0,ans=0,y,count, a[10000]={0},b[1000]={0};\nscanf(\"%lld\",&n);\ncount=0;\nfor(i=0;i<n;i++){\n    scanf(\"%lld%lld\",&x,&y);\n    if(x>0){\n        count++;\n    }\n}\nif(count+1==n || count==1 || count==n || count==0){\n    printf(\"YES\\n\");\n}else{\n    printf(\"NO\\n\");\n}\n\n    return 0;\n}"}
{"similarity_score": 0.9918367346938776, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "93661b5dcf09887cb949a984ffca3446", "bug_code_uid": "0edad2ef71b4c4cc775684f8e59a1e7c", "src_uid": "0f7ceecdffe11f45d0c1d618ef3c6469", "apr_id": "4e2d2ba48b3451555ad82cd2bafb0c65", "difficulty": 1300, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n;\n\t\tint i;\n\t\tint test=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor( i=2;i*i<=n;i++)\n\t\t{\n\t\t\tif(n%i==0)\n\t\t\t{\n\t\t\t\ttest=1;\n\t\t\n\t\t\t\tn=n/i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tint a=i;\n\t\ti++;\n\t\tif(test==0)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\ttest=0;\n\t\tfor(;i*i<=n;i++)\n\t\t{\n\t\t\tif(n%i==0)\n\t\t\t{\n\t\t\t\ttest=1;\n\t\t\t\tn=n/i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tint c=i;\n\t\tif(test==1)\n\t\t{\n\t\t\tprintf(\"YES\\n%d %d %d\\n\",a,c,n);\n\t\t}\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n;\n\t\tint i;\n\t\tint test=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor( i=2;i*i<=n;i++)\n\t\t{\n\t\t\tif(n%i==0)\n\t\t\t{\n\t\t\t\ttest=1;\n\t\t\n\t\t\t\tn=n/i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tint a=i;\n\t\ti++;\n\t\tif(test==0)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\ttest=0;\n\t\tfor(;i*i<=n;i++)\n\t\t{\n\t\t\tif(n%i==0)\n\t\t\t{\n\t\t\t\ttest=1;\n\t\t\t\tn=n/i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tint c=i;\n\t\tif(test==1 && n!=c)\n\t\t{\n\t\t\tprintf(\"YES\\n%d %d %d\\n\",a,c,n);\n\t\t}\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\n}\n"}
{"similarity_score": 0.939209726443769, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "b48d2928e6478bb270f4146234dad5e3", "bug_code_uid": "58751463b288e08921d4eb07fc7485cf", "src_uid": "c611808e636d9307e6df9ee0e706310b", "apr_id": "e0fd10a1cde88a358d98455d7467a3f1", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nmain()\n{\n\tint n,i,a,b,t=0;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tint m[n],m2[n];\n\t\n\tfor(i=0;i<n;i++)\n\tm[i]=0;\n\t\t\n\t\n\t\n\tfor(i=0;i<n*n;i++)\n\t{\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tif(m[a-1]==0 && m[b-1]==0)\n\t\t{\n\t\t\tm2[t]=i+1;\n\t\t\tm[a-1]=1;\n\t\t\tm[b-1]=1;\n\t\t\tt++;\n\t\t}\n\t}\t\n\t\n\tfor(i=0;i<t;i++) printf(\"%d \",m2[i]);\t\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n\nmain()\n{\n\tint n,i,a,b,t=0;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tint m[n],mb[n],m2[n];\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tm[i]=0;\n\t\tmb[i]=0;\n\t}\n\t\t\n\t\n\t\n\tfor(i=0;i<n*n;i++)\n\t{\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tif(m[a-1]==0 && mb[b-1]==0)\n\t\t{\n\t\t\tm2[t]=i+1;\n\t\t\tm[a-1]=1;\n\t\t\tmb[b-1]=1;\n\t\t\tt++;\n\t\t}\n\t}\t\n\t\n\tfor(i=0;i<t;i++) printf(\"%d \",m2[i]);\t\n}"}
{"similarity_score": 0.6170678336980306, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "d386271538c3584e67570466412700ac", "bug_code_uid": "955e17d1d359fc054ba92c7f2a902fa8", "src_uid": "bcf75978c9ef6202293773cf533afadf", "apr_id": "9659bc4892f83945432e551195af083c", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n\n    int i,j=0;\n    char st[1000],ch[1000];\n    gets(st);\n\n    for ( i=strlen(st)-1 ; i>=0 ; i-- ){\n\n        ch[j]=st[i];\n        j++;\n     }\n     ch[j]='\\0';\n     strcat ( st,ch );\n     printf (st);\n\n     return 0;\n }\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n\t\n\tchar st[1000000];\n\tint i;\n\t\n\tgets(st);\n\tprintf(st);\n\t\n\tfor ( i=strlen(st)-1 ; i>=0 ; i-- ){\n\t\tprintf( \"%c\",st[i] );\n\t}\n\t\n\treturn 0;\n\t\n}\t\t"}
{"similarity_score": 0.9874686716791979, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ad9cadce6aa49b23ab90e5b3109f3d53", "bug_code_uid": "3fe5a2d4082ab23527d03bc28ce0b752", "src_uid": "7749f37aa9bf88a00013557e14342952", "apr_id": "7f657a7091a4a2f532f4676d2524783d", "difficulty": 800, "tags": ["combinatorics", "implementation", "constructive algorithms", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "//#include <iostream.h>\n#include <stdio.h>\nusing namespace std;\nlong long c(long long);\nint main()\n{\n    long long n,p=0;\n    char a[101][101];\n    char ch;\n    int i,j;\n\n\n\n    scanf(\"%I64d\\n\", &n);\n    for (i=0;i<n; i++)\n    {\n        for (j=0; j<n; j++)\n    {\n        scanf(\"%c\", &a[i][j]);\n    }\n     scanf(\"%c\", &ch);\n    }\n\n\n    for (i=0; i<n; i++){\n                long long x=0;\n        for (j=0; j<n; j++){\n            if (a[i][j]=='C') x++;\n        }\n        p+=c(x);\n    }\n\n    for (j=0; j<n; j++){\n                long long x=0;\n        for (i=0; i<n; i++){\n            if (a[i][j]=='C') x++;\n        }\n    p+=c(x);\n    }\n   printf(\"%I64d\",p);\n    return 0;\n}\nlong long c(long long y){\n    long long ans=1;\n    long long i;\n    for (i=y-2+1; i<y+1; i++){\n        ans*=i;\n    }\n    return ans/2;\n}\n", "fixed": "//#include <iostream.h>\n#include <stdio.h>\n\nlong long c(long long);\nint main()\n{\n    long long n,p=0;\n    char a[101][101];\n    char ch;\n    int i,j;\n\n\n\n    scanf(\"%I64d\\n\", &n);\n    for (i=0;i<n; i++)\n    {\n        for (j=0; j<n; j++)\n    {\n        scanf(\"%c\", &a[i][j]);\n    }\n     scanf(\"%c\", &ch);\n    }\n\n\n    for (i=0; i<n; i++){\n                long long x=0;\n        for (j=0; j<n; j++){\n            if (a[i][j]=='C') x++;\n        }\n        p+=c(x);\n    }\n\n    for (j=0; j<n; j++){\n                long long x=0;\n        for (i=0; i<n; i++){\n            if (a[i][j]=='C') x++;\n        }\n    p+=c(x);\n    }\n   printf(\"%I64d\",p);\n    return 0;\n}\nlong long c(long long y){\n    long long ans=1;\n    long long i;\n    for (i=y-2+1; i<y+1; i++){\n        ans*=i;\n    }\n    return ans/2;\n}\n"}
{"similarity_score": 0.9892904953145917, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "da6e90abb027677cb0df33c1a710db1d", "bug_code_uid": "8faccfe5c9f84f216a692af119e57929", "src_uid": "88d56c1e3a7ffa94354ce0c70d8e958f", "apr_id": "8b183debcc30ebf387354bbbc1986b23", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n;\nchar a[10];\nint p,q;\nscanf(\"%d\\n\",&n);\ngets(a);\np=10*a[0] + a[1] -528;\nq=10*a[3] + a[4] -528; \n\nswitch(n)\n\n{\ncase 12:\n\t\t\tif(p==0)\n\t\t\t{\n\t\t\tp=1;\n\t\t\tprintf(\"0\");\n\t\t\t\n\t\t\t}\n\t\t\tif(p>0 && p<10)\n\t\t\tprintf(\"0\");\n\t\t\tif(p>12)\n\t\t\t{\n\t\t\t\tif(p%10==0)\n\t\t\t\tp=10;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\tp=p%10;\n\t\t\t\tprintf(\"0\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%d:\",p);\n\t\t\tif((q>=0) && (q<10))\n\t\t\t{\n\t\t\tprintf(\"0\");\n\t\t\t}\n\t\t\tif(q>59)\n\t\t\t{\n\t\t\t\tq=10 + (q%10);\n\t\t\t}\n\t\t\tprintf(\"%d\",q);\n\nbreak;\t\n\n\ncase 24:\n\t\t\tif(p>23)\n\t\t\t{\n\t\t\t\tif(p%10==0)\n\t\t\t\tp=10;\n\t\t\t\telse\n\t\t\t\tp=10 + p%10;\n\t\t\t}\n\t\t\tif(p<10 && p>=0)\n\t\t\tprintf(\"0\");\n\t\t\t\n\t\t\t\n\t\t\tprintf(\"%d:\",p); \n\t\t\tif(q<10 && q>=0)\n\t\t\tprintf(\"0\");\n\t\t\tif(q>59)\n\t\t\t{\n\t\t\t\tq=10 + (q%10);\n\t\t\t} \t\n\n\t\t\tprintf(\"%d\",q);\nbreak;\n}\n\n\n\n\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint n;\nchar a[10];\nint p,q;\nscanf(\"%d\\n\",&n);\ngets(a);\np=10*a[0] + a[1] -528;\nq=10*a[3] + a[4] -528; \n\nswitch(n)\n\n{\ncase 12:\n\t\t\tif(p==0)\n\t\t\t{\n\t\t\tp=1;\n\t\t\t\n\t\t\t\n\t\t\t}\n\t\t\tif(p>0 && p<10)\n\t\t\tprintf(\"0\");\n\t\t\tif(p>12)\n\t\t\t{\n\t\t\t\tif(p%10==0)\n\t\t\t\tp=10;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\tp=p%10;\n\t\t\t\tprintf(\"0\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%d:\",p);\n\t\t\t\n\t\t\tif((q>=0) && (q<10))\n\t\t\t{\n\t\t\tprintf(\"0\");\n\t\t\t}\n\t\t\tif(q>59)\n\t\t\t{\n\t\t\t\tq=10 + (q%10);\n\t\t\t}\n\t\t\tprintf(\"%d\",q);\n\nbreak;\t\n\n\ncase 24:\n\t\t\tif(p>23)\n\t\t\t{\n\t\t\t\tif(p%10==0)\n\t\t\t\tp=10;\n\t\t\t\telse\n\t\t\t\tp=10 + p%10;\n\t\t\t}\n\t\t\tif(p<10 && p>=0)\n\t\t\tprintf(\"0\");\n\t\t\t\n\t\t\t\n\t\t\tprintf(\"%d:\",p); \n\t\t\tif(q<10 && q>=0)\n\t\t\tprintf(\"0\");\n\t\t\tif(q>59)\n\t\t\t{\n\t\t\t\tq=10 + (q%10);\n\t\t\t} \t\n\n\t\t\tprintf(\"%d\",q);\nbreak;\n}\n\n\n\n\nreturn 0;\n}"}
{"similarity_score": 0.9954337899543378, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ac96d58894fc1632356b92fc266709d5", "bug_code_uid": "6fa2a443c3cf822a328bf0413ea0da47", "src_uid": "3b3b2408609082fa5c3a0d55bb65d29a", "apr_id": "d53ceb7b6da3ea47dc81f8a9b72e2aac", "difficulty": 900, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int a,p=0,n=0,z=0;\n    scanf(\"%d\",&a);\n    long long num,t=0;\n    for(int i=0;i<a;i++)\n    {\n    scanf(\"%lld\",&num);\n    if(num>0)\n    {\n    p++;\n    t+=(num-1);\n    }\n    else if(num<0)\n    {\n    n++;\n    t+=(-1-num);\n    }\n    else\n    z++;\n    }\n    if(n%2!=0)\n    {\n    if(z>0)\n    t+=z;\n    else if(p>1)\n    t+=2;\n    else\n    t+=(n*2);\n    }\n    else\n    t+=z;\n    printf(\"%lld\",t);\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int a,p=0,n=0,z=0;\n    scanf(\"%d\",&a);\n    long long num,t=0;\n    for(int i=0;i<a;i++)\n    {\n    scanf(\"%lld\",&num);\n    if(num>0)\n    {\n    p++;\n    t+=(num-1);\n    }\n    else if(num<0)\n    {\n    n++;\n    t+=(-1-num);\n    }\n    else\n    z++;\n    }\n    if(n%2!=0)\n    {\n    if(z>0)\n    t+=z;\n    else if(p>1)\n    t+=2;\n    else\n    t+=2;\n    }\n    else\n    t+=z;\n    printf(\"%lld\",t);\n    return 0;\n}"}
{"similarity_score": 0.9983579638752053, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b6748da42be10011012316ee8bee7c39", "bug_code_uid": "13e013db466c7799593d36da7698689b", "src_uid": "6b37fc623110e49a5e311a2d186aae46", "apr_id": "885401a66a286216b4ede5a37437ee52", "difficulty": 800, "tags": ["number theory", "geometry", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <studio.h>\nint main ()\n{\n    int t;\n    scanf (\"%d\",&t);\n    for (int i=1; i<=t; i++)\n    {\n        int n,m;\n        scanf(\"%d %d\",&n,&m);\n        if (n%m==0)\n        {\n            printf(\"YES\\n\");\n        }\n        else \n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n    \n}", "fixed": "#include <stdio.h>\nint main ()\n{\n    int t;\n    scanf (\"%d\",&t);\n    for (int i=1; i<=t; i++)\n    {\n        int n,m;\n        scanf(\"%d %d\",&n,&m);\n        if (n%m==0)\n        {\n            printf(\"YES\\n\");\n        }\n        else \n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n    \n}"}
{"similarity_score": 0.2857142857142857, "equal_cnt": 7, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "8950031d73d8df275b3701229e968f11", "bug_code_uid": "e39364bd12632daffcf718fd3d6d4bfd", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "5505e7f56031c8d7a6c18be439acb6be", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nvoid Swap(char*, char*);\nint main()\n{\n    unsigned short n, i, j;\n    char s1 = 'C', s2 = '.';\n    scanf(\"%hu\", &n);\n    printf(\"%hu\\n\", 3 * n - 4);\n    for(i = 0; i < n; i++){\n        for(j = 0; j < n; j++){\n            printf(\"%c\", s1);\n            Swap(&s1, &s2);\n        }\n        printf(\"\\n\");\n        if(n % 2 == 0){ Swap(&s1, &s2); }\n    }\n\n    return 0;\n}\nvoid Swap(char* x, char* y){ *x ^= *y, *y ^= *x, *x ^= *y; }\n", "fixed": "#include <stdio.h>\nint main()\n{\n    unsigned int n;\n    unsigned short i, j;\n    scanf(\"%u\", &n);\n    printf(\"%u\\n\", n % 2 ? n * n / 2 + 1 : n * n / 2);\n    for(i = 0; i < n; i++){\n        for(j = 0; j < n; j++){\n           if(i % 2 == 0){\n            if(j % 2){ putchar('.'); }\n            else{ putchar('C'); }\n           }else{\n            if(j % 2){ putchar('C'); }\n            else{ putchar('.'); }\n           }\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.9194444444444444, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "423c92f1f5df586587ce9d9aa9c48d24", "bug_code_uid": "14310595661d147ea0012743d4561efe", "src_uid": "14fc3a7fef44a02791aee62838c4c8c8", "apr_id": "bcc2eeef704c76998f4690e670bf75cd", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tprintf(\"%d\\n\",n+m-1);\n\tint i=1,j=1;\n\tprintf(\"%d %d\\n\",i,j);\n\twhile(i<=n||j<=m)\n\t{\n\t\tif(j+1<=m)\n\t\tprintf(\"%d %d\\n\",i,j+1);\n\t\telse if(i+1<=n)\n\t\t\tprintf(\"%d %d\\n\",i+1,j);\n\t\tif(j+1<=m&&i+1<=n)\n\t\tprintf(\"%d %d\\n\",i+1,j+1);\n\t\tif(i<n)\n\t\ti++;\n\t\tif(j<m)\n\t\tj++;\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tprintf(\"%d\\n\",n+m-1);\n\tint i=1,j=1;\n\tprintf(\"%d %d\\n\",i,j);\n\tint count = 0;\n\twhile(i<=n||j<=m)\n\t{\n\t\tif(count==(n+m-1))\n\t\t\tbreak;\n\t\tif(j+1<=m)\n\t\tprintf(\"%d %d\\n\",i,j+1);\n\t\telse if(i+1<=n)\n\t\t\tprintf(\"%d %d\\n\",i+1,j);\n\t\tif(j+1<=m&&i+1<=n)\n\t\tprintf(\"%d %d\\n\",i+1,j+1);\n\t\tif(i<n)\n\t\ti++;\n\t\tif(j<m)\n\t\tj++;\n\t\tcount++;\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.6864784546805349, "equal_cnt": 13, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "f1151ac66087d17a7720e5edc0391f3c", "bug_code_uid": "58edcb14e1a76795c33a4978c112d980", "src_uid": "b34f29e6fb586c22fa1b9e559c5a6c50", "apr_id": "e07236db3d25b0b113a2ef2b7474f65a", "difficulty": 900, "tags": ["sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdint.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define bool unsigned char\n#define true 1\n#define false 0\n\nint comp(const void *l, const void *r) { return *((int *)r) - *((int *)l); }\n\nint main(void) {\n  int t, n, a[100000], b[100000];\n\n  scanf(\"%d\", &t);\n\n  for (int i = 0; i < t; i++) {\n    bool f = true;\n\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &a[0]);\n    b[0] = a[0];\n\n    for (int j = 1; j < n; j++) {\n      scanf(\"%d\", &a[j]);\n      b[j] = a[j];\n\n      if (b[j] != b[j - 1])\n        f = false;\n    }\n\n    if (f)\n      goto ok;\n\n    qsort(a, n, sizeof(int), comp);\n\n    for (int j = 0; j < n; j++) {\n      if (a[j] != b[j]) {\n        goto ok;\n      }\n    }\n\n    printf(\"NO\\n\");\n\n  fin:\n    continue;\n\n  ok:\n    printf(\"YES\\n\");\n    goto fin;\n  }\n  return 0;\n}\n", "fixed": "#include <stdint.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define bool unsigned char\n#define true 1\n#define false 0\n\nint comp(const void *l, const void *r) { return *((int *)r) - *((int *)l); }\n\nint main(void) {\n  int t, n, p;\n\n  scanf(\"%d\", &t);\n\n  for (int i = 0; i < t; i++) {\n    bool f = false;\n\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &p);\n\n    for (int j = 1; j < n; j++) {\n      int a;\n\n      scanf(\"%d\", &a);\n      if (p <= a)\n        f = true;\n\n      p = a;\n    }\n\n    printf(\"%s\\n\", f ? \"YES\" : \"NO\");\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.9543209876543209, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "ff7278daaf828b7018ce69379d26f027", "bug_code_uid": "9af83959142b840e06ddb4a5aec160d2", "src_uid": "928f18ee5dbf44364c0d578f4317944c", "apr_id": "c43f9e324a93ba5bc6c89ead5fb17c09", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,i,j,l,m;\n    scanf(\"%d%d\",&n,&k);\n    m=n*k;\n    \n     int seg[m];\n     for(i=0;i<m;i++)\n     seg[i]=0;\n     int ans[n][k],pref[k];\n    for(i=0;i<k;i++)\n    scanf(\"%d\",&pref[i]);\n    for(j=0,i=0;j<k;j++)\n    {\n        ans[j][0]=pref[i];\n        seg[pref[i]-1]=1;\n        i++;\n    }\n      for(i=0;i<n;i++)\n     {\n        for(j=1;j<k;j++)\n        {\n           for(l=0;l<m;l++)\n           {\n            if(seg[l]==1)\n            continue;\n            else\n            {\n                ans[i][j]=l+1;\n                seg[l]=1;\n                break;\n            }\n           }    \n    \n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<k;j++)\n        {\n            printf(\"%d \",ans[i][j]);\n        }\n        printf(\"\\n\");\n    }\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,i,j,l,m;\n    scanf(\"%d%d\",&n,&k);\n    m=n*k;\n    \n     int seg[m];\n     for(i=0;i<m;i++)\n     seg[i]=0;\n     int ans[k][n],pref[k];\n    for(i=0;i<k;i++)\n    scanf(\"%d\",&pref[i]);\n    for(j=0,i=0;j<k;j++)\n    {\n        ans[j][0]=pref[i];\n        //printf(\"\\nans= %d\\n \",ans[j][0]);\n        seg[pref[i]-1]=1;\n        i++;\n    }\n      for(i=0;i<k;i++)\n     {\n        for(j=1;j<n;j++)\n        {\n           for(l=0;l<m;l++)\n           {\n            if(seg[l]==1)\n            continue;\n            else\n            {\n                ans[i][j]=l+1;\n                seg[l]=1;\n                break;\n            }\n           }    \n    \n        }\n    }\n    for(i=0;i<k;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            printf(\"%d \",ans[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n\n}"}
{"similarity_score": 0.8359941944847605, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "2af28008fd13ce702efefa55c6d4b632", "bug_code_uid": "c8b3654bf29baaaddda185878d9b42d1", "src_uid": "066906ee58af5163636dac9334619ea7", "apr_id": "b352df56849c7e828cf7d5fcb5884b87", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long x[1100], n, m, i, j, g;\n\n    scanf(\"%d %d\", &n, &m);\n    j=0, g=0;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &x[i]);\n\n        if(x[i]>0)\n            j++;\n        else if(x[i]<0)\n            g++;\n    }\n\n    printf(\"%d\", labs(j-g));\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long x[1100], n, m, i, j, g;\n\n    scanf(\"%d %d\", &n, &m);\n    j=0, g=0;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &x[i]);\n\n        if(x[i]>0)\n            j = j+x[i];\n        else if(x[i]<0)\n            g = g+x[i];\n    }\n\n    i = labs(j+g);\n\n    if(i%m==0)\n        printf(\"%d\", i/m);\n    else\n        printf(\"%d\", (i/m)+1);\n}"}
{"similarity_score": 0.9488372093023256, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d95ab851e31b4dbae88cc8b0d0fc079d", "bug_code_uid": "c1593d65f516e4c8242ff9202fd744c2", "src_uid": "6f6859aabc1c9cbb9ee0d910064d87c2", "apr_id": "77cae9619c29302ca4ab15a91baa26a4", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "main()\n{\n    int n,i=0,c=0;\n    scanf(\"%d\",&n);\n    char str[n];\n    scanf(\"%s\",&str);\n    if(strlen(str)%2)\n    {\n        printf(\"%c%c%c\",str[0],str[1],str[2]);\n        i=3;\n    }\n    for(;str[i];i++)\n    {\n        if(c<2)\n        {\n            printf(\"%c\",str[i]);\n            c++;\n        }\n        else\n        {\n            c=0;\n            printf(\"-\");\n            i--;\n        }\n    }\n    return 0;\n}\n", "fixed": "main()\n{\n    int n,i=0,c=0;\n    scanf(\"%d\",&n);\n    char str[n];\n    scanf(\"%s\",&str);\n    if(strlen(str)%2)\n    {\n        printf(\"%c%c%c\",str[0],str[1],str[2]);\n        i=3;\n        if(str[i])\n            printf(\"-\");\n    }\n    for(;str[i];i++)\n    {\n        if(c<2)\n        {\n            printf(\"%c\",str[i]);\n            c++;\n        }\n        else\n        {\n            c=0;\n            printf(\"-\");\n            i--;\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.12339331619537275, "equal_cnt": 9, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "9d1ef93a788ec814428b2dc059d5697f", "bug_code_uid": "c7f9529ec42ada1f19b3f54ae5c18070", "src_uid": "b894e16e8c00f8d97fde4a104466b3ef", "apr_id": "4ca1ea94369c4155237ad1f4dcca6618", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nchar str1[5000][100];\r\nint main(){\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=0;i<n;i++){\r\n\t\tint x;\r\n\t\tscanf(\"%d\",&x);\r\n\t\tfgets(str1[i],100,stdin);\r\n\t\tfor(int j=0;j<strlen(str1[i]);j++){\r\n\t\t\tif(str1[i][j]=='U'){\r\n\t\t\t\tstr1[i][j]='D';\r\n\t\t\t}\r\n\t\t\telse if(str1[i][j]=='D'){\r\n\t\t\t\tstr1[i][j]='U';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(int i=0;i<n;i++){\r\n\t\tprintf(\"%s\",str1[i]);\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\nvoid delet(char a[],int n){\r\n\tfor(int i=0;i<n;i++)\r\n\ta[i]='\\0';\r\n}\r\nint main(){\r\n\tint num,n;\r\n\tchar in[100];\r\n\tscanf(\"%d\",&num);\r\n\tfor(int i=0;i<num;i++){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tscanf(\"%s\",in);\r\n\t\tfor(int j=0;j<n;j++){\r\n\t\t\tif(in[j]=='U'){\r\n\t\t\tin[j]='D';\r\n\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif(in[j]=='D')\r\n\t\t\tin[j]='U';\t\t\t\r\n\t\t}\r\n\t\tputs(in);\r\n\t\tdelet(in,n);\t\t\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8426966292134831, "equal_cnt": 14, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "b15ef25f17ea855cfd868ff36f0ed169", "bug_code_uid": "4ea8c5d1a472fdf856db12034c138325", "src_uid": "0593f79604377dcfa98d2b69840ec0a6", "apr_id": "4d3d006717b17dfc977fbdade800a4b1", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint freq[200001];\nvoid main()\n{\n    int n;\n   int i ; \n\n    scanf(\"%d\",&n);\n\n  signed int arr[n],counter=0;\n   \n   for(i=0;i<n;i++){\n      scanf(\"%d\",&arr[i]);\n      if (arr[i]!=0){\n    freq[arr[i]+100000]=1;\n      }\n\n   }\n\nfor(i=0; i<200001;i++)\n{\nif(freq[i]==1)\n     counter++;\n}\nprintf(\"%d\",counter);}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint freq[200001];\nint  main()\n{\n   int i,n,counter=0;\n   scanf(\"%d\",&n);\n   signed int arr[n];\n   for(i=0;i<n;i++)\n   {\n      scanf(\"%d\",&arr[i]);\n      if (arr[i]!=0)\n      {\n         freq[arr[i]+100000]=1;\n      }\n \n   }\n \n  for(i=0; i<200001;i++)\n  {\n \n     if(freq[i]==1)\n     counter++;\n  }\nprintf(\"%d\",counter);\nreturn 0;\n}"}
{"similarity_score": 0.9927797833935018, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "103417d6d0138f8be2177249e3a12b42", "bug_code_uid": "94b38a9043324c88e7a1310e99e81fc8", "src_uid": "9afcf090806cc9c3b87120b1b61f8f17", "apr_id": "7267564be87bb20ba912b069cb3fdbdb", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int c;\n    scanf(\"%d\",& c);\n    while(c--)\n    {long long x,y,a,b;\n    scanf(\"%lld %lld %lld %lld\",&x,&y,&a,&b);\n    if((y-x)%(a+b)==0)\n    {long long t;\n    t=(y-x)/(a+b);\n    printf(\"%lld\",t);}\n    else\n    printf(\"-1\");}\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int c;\n    scanf(\"%d\",& c);\n    while(c--)\n    {long long x,y,a,b;\n    scanf(\"%lld %lld %lld %lld\",&x,&y,&a,&b);\n    if((y-x)%(a+b)==0)\n    {long long t;\n    t=(y-x)/(a+b);\n    printf(\"%lld\\n\",t);}\n    else\n    printf(\"-1\\n\");}\n    return 0;\n}"}
{"similarity_score": 0.943717277486911, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "03fdb21615402b35a35efb9602ac12f4", "bug_code_uid": "08308a25d090dcd59817b10d3e57c79b", "src_uid": "09236a3faa7fce573a4e5e758287040f", "apr_id": "d9c1a76cf55db9c885336b286227cf02", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "# include <stdio.h>\nint main()\n{\n    int t,i,max,n,j,k,c;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n        int a[n];\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%d\",&a[j]);\n            if(j==0)\n            {\n                max=a[0];\n            }\n            else if(a[j]>max)\n            {\n                max=a[j];\n            }\n        }\n        for(j=0;j<n;j++)\n        {printf(\"%d \",a[j]);}\n        printf(\"\\t%d\\n\",max);\n        for(j=max;j>=1;j--)\n        {\n            c=0;\n            for(k=0;k<n;k++)\n            {\n                if(a[k]>=j)\n                {\n                    c++;\n                }\n            }\n            if(c>=j)\n            {\n                printf(\"c%d\\n\",j);\n                break;\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "# include <stdio.h>\nint main()\n{\n    int t,i,max,n,j,k,c;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n        int a[n];\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%d\",&a[j]);\n            if(j==0)\n            {\n                max=a[0];\n            }\n            else if(a[j]>max)\n            {\n                max=a[j];\n            }\n        }\n        for(j=max;j>=1;j--)\n        {\n            c=0;\n            for(k=0;k<n;k++)\n            {\n                if(a[k]>=j)\n                {\n                    c++;\n                }\n            }\n            if(c>=j)\n            {\n                printf(\"%d\\n\",j);\n                break;\n            }\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9808126410835214, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "6371c7e66c092c855aaa0e2fd354e5af", "bug_code_uid": "cd5e5d8c82c810385d89663c32907761", "src_uid": "6c137a74b36dede61037cb3b05167329", "apr_id": "d861c38b1fdfceb8313be49ee1eb735c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n\tint t = 0, n = 0, i = 0, j = 0, x = 0, count = 0;\r\n\tint a[1000];\r\n\tchar s[11];\r\n\tchar tun = '0';\r\n\tchar name[5] = { 'T','i','m','u','r' };\r\n\tmemset(a, 0, sizeof(a));\r\n\tscanf_s(\"%d\", &t);\r\n\twhile (i < t)\r\n\t{\r\n\t\tmemset(s, 0, sizeof(s));\r\n\t\tscanf_s(\"%d\", &n);\r\n\t\ttun = getchar();\r\n\t\tgets_s(s);\r\n\t\tif (n != 5)\r\n\t\t{\r\n\t\t\ta[i] = 2;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor (j = 0; j < 5; j++)\r\n\t\t\t{\r\n\t\t\t\tfor (x = 0; s[x] != '\\0'; x++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (name[j] == s[x])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (count == 5)\r\n\t\t\t{\r\n\t\t\t\ta[i] = 1;\r\n\t\t\t}\r\n\t\t\telse if (count != 5)\r\n\t\t\t{\r\n\t\t\t\ta[i] = 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++;\r\n\t}\r\n\tfor (i = 0; a[i] != 0; i++) \r\n\t{\r\n\t\tif (a[i] == 1)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse if (a[i] == 2)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n\tint t = 0, n = 0, i = 0, j = 0, x = 0, count = 0;\r\n\tint a[1000];\r\n\tchar s[11];\r\n\tchar tun = '0';\r\n\tchar name[5] = { 'T','i','m','u','r' };\r\n\tmemset(a, 0, sizeof(a));\r\n\tscanf(\"%d\", &t);\r\n\twhile (i < t)\r\n\t{\r\n\t\tcount = 0;\r\n\t\tmemset(s, 0, sizeof(s));\r\n\t\tscanf(\"%d\", &n);\r\n\t\ttun = getchar();\r\n\t\tgets(s);\r\n\t\tif (n != 5)\r\n\t\t{\r\n\t\t\ta[i] = 2;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor (j = 0; j < 5; j++)\r\n\t\t\t{\r\n\t\t\t\tfor (x = 0; s[x] != '\\0'; x++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (name[j] == s[x])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (count == 5)\r\n\t\t\t{\r\n\t\t\t\ta[i] = 1;\r\n\t\t\t}\r\n\t\t\telse if (count != 5)\r\n\t\t\t{\r\n\t\t\t\ta[i] = 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++;\r\n\t}\r\n\tfor (i = 0; i < t; i++) \r\n\t{\r\n\t\tif (a[i] == 1)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse if (a[i] == 2)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.652073732718894, "equal_cnt": 14, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "aafdf9c74850a7a2f35ef275efe44160", "bug_code_uid": "1dbb12702024a6498828cff9a84865ec", "src_uid": "0c7e019e1e955cadacca55b4e823a3e5", "apr_id": "13ee1f9812cd57a411178bf5c544857f", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t!=0){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tif((n/2)%2==0){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tint sum=0;\n\t\t\tint even=2;\n\t\t\tint odd=1;\n\t\t\tfor(int i=0;i<n/2;i++){\n\t\t\t\tprintf(\"%d \",even);\n\t\t\t\teven=even+2;\n\t\t\t}\n\t\t\tfor(int i=n/2;i<n-1;i++){\n\t\t\t\tprintf(\"%d \",odd);\n\t\t\t\todd=odd+2;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",(even-odd));\n\t\t\t\n\t\t}\n\t\telse{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\tt--;\n\t\t\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t!=0){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint k=n/2;\n\t\tif(k%2==0){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tint sume=0,even=2,odds=0,odd=1;\n\t\t\tint i;\n\t\t\tfor(i=0;i<k;i++){\n\t\t\t\tsume=even+sume;\n\t\t\t\tprintf(\"%d \",even);\n\t\t\t\teven=even+2;\n\t\t\t}\n\t\t\tfor(i=0;i<k-1;i++){\n\t\t\t\todds=odds+odd;\n\t\t\t\t\n\t\t\t\tprintf(\"%d \",odd);\n\t\t\t\todd=odd+2;\n\t\t\t}\n\t\t\tsume=sume-odds;\n\t\t\tprintf(\"%d\\n\",sume);\n\t\t\t\n\t\t}\n\t\telse{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\t\n\t\tt--;\n\t}\n}"}
{"similarity_score": 0.8584686774941995, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "5fdd0cb9c4772928de1560d03ec0d83b", "bug_code_uid": "595f55b52dea4c46f1bc63581602939a", "src_uid": "80fdb95372c1e8d558b8c8f31c9d0479", "apr_id": "842449a3faa6865b37b528073e546f10", "difficulty": 1100, "tags": ["hashing", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n    int n,i;\n    scanf(\"%d\",&n);\n    char s[(2*n-2)];\n    scanf(\"%s\",s);\n    int k[26];\n    for(i=0;i<26;i++){\n        k[i]=0;\n    }\n    int x,ans=0;\n    for(i=0;i<strlen(s);i++){\n        if(i%2==0){\n            k[(int)s[i]-97]++;\n        } else {\n            x=((int)s[i])-65;\n            if(k[x]>0)\n                k[x]--;\n            else\n                ans++;\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n    int n,i;\n    scanf(\"%d\",&n);\n    char s[(2*n-2)];\n    scanf(\"%s\",s);\n    int k[26];\n    for(i=0;i<26;i++){\n        k[i]=0;\n    }\n    int x,ans=0,l=strlen(s);\n    for(i=0;i<l;i++){\n        k[(int)s[i]-97]++;\n        i++;\n        x=((int)s[i])-65;\n        if(k[x]>0)\n            k[x]--;\n        else\n            ans++;\n        }\n    printf(\"%d\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.649164677804296, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "d0b0a68347bef19bbb8d3096fbed810c", "bug_code_uid": "a09ef1e1be081fd521b4c55b431f7127", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "560a7829e9bd945073754a23304be82c", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h> \nint main()\n{\n      long long int t,n,k,i,c,j;\n      scanf(\"%lld\",&t);\n      while(t--){\n              scanf(\"%lld %lld\",&n,&k);\n              for(i=0;i<k;i++){\n                    for(j=2;j<=n;){\n                          if(n%j==0){\n                                c=j;break;\n                          }\n                          else j++;\n                    }\n                    n+=c;\n              }\n              printf(\"%lld\\n\",n);\n      }\n      return 0;\n}", "fixed": "#include<stdio.h> \nint main()\n{\n      long long int t,n,k,i,c;\n      scanf(\"%lld\",&t);\n      while(t--){\n              scanf(\"%lld %lld\",&n,&k);\n              for(i=2;i>1;i++){\n                    if(n%i==0){\n                          c=i;break;\n                    }\n              }\n              printf(\"%lld\\n\",(n+c)+(k-1)*2);\n      }\n      return 0;\n}"}
{"similarity_score": 0.15475313190862197, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "8f344e5a85dfb4ab730a69d26bc91c18", "bug_code_uid": "15483cb1350acda821f802e78bce247d", "src_uid": "b7aef95015e326307521fd59d4fccb64", "apr_id": "78bfb3c6918115f270406e24aef3dfe4", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n/*int binarySearch(int arr[], int l, int r, int x) \n{ \n    if (r >= l) { \n        int mid = l + (r - l) / 2; \n        if (arr[mid] == x) \n            return mid; \n        if (arr[mid] > x) \n            return binarySearch(arr, l, mid - 1, x); \n        return binarySearch(arr, mid + 1, r, x); \n    } \n    return -1; \n}*/\nlong int search(long int arr[], int n, int x) \n{ \n    long int i; \n    for (i = 0; i < n; i++) \n        if (arr[i] == x) \n            return i; \n    return -1; \n} \nint main() {\n\tlong int n,t,ans1=0,ans2=0,res=0;\n\tscanf(\"%ld\",&n);\n\tlong int arr[n];\n\tfor(long int i=0;i<n;i++)\n\t{\n\t    scanf(\"%ld\",&arr[i]);\n\t}\n\t/*for(int i=1;i<=n;i++)\n\t{\n\t    printf(\"%d \",arr[i]);\n\t}*/\n\tscanf(\"%ld\",&t);\n\tfor(long int j=0;j<t;j++)\n\t{\n\t    long int x;\n\t    scanf(\"%ld\",&x);\n\t    //printf(\"%d\",x);\n\t    res=search(arr,n,x);\n\t    //printf(\"%d\",res);\n\t    ans1+=(res+1);\n\t    ans2+=(n-res);\n\t}\n\tprintf(\"%ld %ld\",ans1,ans2);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main() {\n\tint a,n,t;\n\tlong long int ans1=0,ans2=0;\n\tscanf(\"%d\",&n);\n\tint arr[n+1];\n\tfor(long int i=1;i<=n;i++)\n\t{\n\t    scanf(\"%d\",&a);\n\t    arr[a]=i;\n\t}\n\t/*for(int i=1;i<=n;i++)\n\t{\n\t    printf(\"%d\",arr[i]);\n\t}*/\n\tscanf(\"%d\",&t);\n\tfor(int j=0;j<t;j++)\n\t{\n\t    int x;\n\t    scanf(\"%d\",&x);\n\t    ans1+=(arr[x]);\n\t    ans2+=(n-arr[x]+1);\n\t}\n\tprintf(\"%lld %lld\",ans1,ans2);\n\treturn 0;\n}"}
{"similarity_score": 0.9414634146341463, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f615b9110f3dc533455c157f7d2789f8", "bug_code_uid": "028d8180069f2109dee33472be14c8b3", "src_uid": "311f74b766818633581af67a88244709", "apr_id": "48bf704e3c3679f18440c5f7402ba9b1", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,a,m,sum,l,r;\n    scanf(\"%d\",&n);\n    sum = 0;\n    while(n--){\n        scanf(\"%d\",&a);\n        sum += a;\n    }\n\n    scanf(\"%d\",&m);\n    while(m--){\n        scanf(\"%d\",&l);\n        scanf(\"%d\",&r);\n        if(sum <= r){\n            printf(\"%d\\n\",sum);\n            return 0;\n        }\n    }\n    printf(\"-1\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,a,m,sum,l,r;\n    scanf(\"%d\",&n);\n    sum = 0;\n    while(n--){\n        scanf(\"%d\",&a);\n        sum += a;\n    }\n\n    scanf(\"%d\",&m);\n    while(m--){\n        scanf(\"%d\",&l);\n        scanf(\"%d\",&r);\n        if(sum <= r){\n            if(sum >= l) printf(\"%d\\n\",sum);\n            else printf(\"%d\\n\",l);\n            return 0;\n        }\n    }\n    printf(\"-1\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.7802197802197802, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "a324b503b96ae3da522a1dfa6c411776", "bug_code_uid": "0556c7caf0d0c138942af5162cf36757", "src_uid": "378a9ab7ad891d60f23645106d24f314", "apr_id": "b2239c5b4a2e29da03755d8894033b61", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define INP_INT_ARA(ara_ads , size) for(int i = 1; i <= size ; i++) scanf(\"%d\",(ara_ads + i));\n\nint main(void)\n{   \n    int n , flag[10];  char num[200001];\n\n    scanf(\"%d\",&n);\n    scanf(\"%s\",num);\n    INP_INT_ARA(flag , 9);\n    \n    for(int i = 0 ; i < n ; i++)\n    {\n        if(num[i] < flag[num[i] - '0'] + '0') \n        {\n            num[i] = flag[num[i] - '0'] + '0';\n\n            for(int j = i + 1 ; ; j++)\n            {\n                if(num[j] > flag[num[i] - '0'] + '0' || j == n)\n                {\n                    printf(\"%s\",num);\n                    return 0;\n                } \n                \n                else  num[j] = flag[num[j] - '0'] + '0';\n            }\n        }\n    }\n    \n    printf(\"%s\",num);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{   \n    int n , flag[10];  char num[200001];\n\n    scanf(\"%d\",&n);\n    scanf(\"%s\",num);\n\n    for(int i = 1 ; i <= 9 ; i++) scanf(\"%d\",&flag[i]);\n\n    for(int i = 0 ; i < n ; i++)\n    {\n        if(num[i] < flag[num[i] - '0'] + '0') \n        {\n            num[i] = flag[num[i] - '0'] + '0';\n\n            for(int j = i + 1 ; ; j++)\n            {\n                if(num[j] > flag[num[j] - '0'] + '0' || j == n)\n                {\n                    printf(\"%s\",num);\n                    return 0;\n                } \n                \n                else  num[j] = flag[num[j] - '0'] + '0';\n            }\n        }\n    }\n    \n    printf(\"%s\",num);\n    return 0;\n}"}
{"similarity_score": 0.9322033898305084, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a57681eeb2bfa9f475d7856064bfb24a", "bug_code_uid": "b8257bef1bc1377bb16c656e79b57abc", "src_uid": "bcee233ddb1509a14f2bd9fd5ec58798", "apr_id": "a57a17bb3e2f80870293231867fd1319", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nlong int n,k,a[100000],p=0,i,m=0,s=0;\nscanf(\"%ld%ld\",&n,&k);\nfor(i=0;i<n;i++)\n{\nscanf(\"%ld\",&a[i]);\nm=m+a[i];\nif(i>=k-1)\n{\np=p+a[i];\n}\n}\nif(m/n==a[0])\n{printf(\"0\");\n}\nelse\n{\nif(p/(n-k+1)==a[k-1])\n{\nfor(i=k-1;i>0;i--)\n{\nwhile(a[i]!=a[i-1])\n{\nprintf(\"%ld\",i);\ngoto next;\n}\n}\n}\nelse\n{\nprintf(\"-1\");\n}\n}\nnext:\nreturn(0);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nlong int i,n,k;\ndouble a[100000],p=0,m=0,s=0;\nscanf(\"%ld%ld\",&n,&k);\nfor(i=0;i<n;i++)\n{\nscanf(\"%lf\",&a[i]);\nm=m+a[i];\nif(i>=k-1)\n{\np=p+a[i];\n}\n}\nif(m/n==a[0])\n{printf(\"0\");\n}\nelse\n{\nif(p/(n-k+1)==a[k-1])\n{\nfor(i=k-1;i>0;i--)\n{\nwhile(a[i]!=a[i-1])\n{\nprintf(\"%ld\",i);\ngoto next;\n}\n}\n}\nelse\n{\nprintf(\"-1\");\n}\n}\nnext:\nreturn(0);\n}\n"}
{"similarity_score": 0.9850746268656716, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "afa4e90e19af4241ef4cc83ff3e7e37c", "bug_code_uid": "8a16a9a973c4a7c3ea925579ac97e8db", "src_uid": "f4bb0b8f285b0c8cbaf469964505cc56", "apr_id": "7ffc68699c6fb551969725d526e1cc18", "difficulty": 1200, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n#define N 200001\n\nint main(void){\nlong n,x;\nlong t,t1,a[2][N];\nlong i,l=-1;\n\tscanf(\"%ld%ld\",&n,&x);\n\tfor(i=0;i<N;i++){\n\t\ta[0][i]=0;\n\t\ta[1][i]=0;\n\t}\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%ld\",&t);\n\t\tif(!a[0][t])\n\t\t\ta[0][t]=1;\n\t\telse{\n\t\t\tl=0;\n\t\t\tbreak;\n\t\t}\n\t\tif(a[1][t])\n\t\t\tl=1;\n\t\tt1=((t&x)==t)?(-1):(t&x);\n\t\tif(t1!=-1){\n\t\t\tif(a[0][t1]&&(l==2||l==-1))\n\t\t\t\tl=1;\n\t\t\tif(a[1][t1]&&l==-1)\n\t\t\t\tl=2;\n\t\t}\n\t}\n\tprintf(\"%ld\",l);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n#define N 200001\n\nint main(void){\nlong n,x;\nlong t,t1,a[2][N];\nlong i,l=-1;\n\tscanf(\"%ld%ld\",&n,&x);\n\tfor(i=0;i<N;i++){\n\t\ta[0][i]=0;\n\t\ta[1][i]=0;\n\t}\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%ld\",&t);\n\t\tif(!a[0][t])\n\t\t\ta[0][t]=1;\n\t\telse{\n\t\t\tl=0;\n\t\t\tbreak;\n\t\t}\n\t\tif(a[1][t])\n\t\t\tl=1;\n\t\tt1=((t&x)==t)?(-1):(t&x);\n\t\tif(t1!=-1){\n\t\t\tif(a[0][t1]&&(l==2||l==-1))\n\t\t\t\tl=1;\n\t\t\tif(a[1][t1]&&l==-1)\n\t\t\t\tl=2;\n\t\t\ta[1][t1]++;\n\t\t}\n\t}\n\tprintf(\"%ld\",l);\n\treturn 0;\n}"}
{"similarity_score": 0.999104744852283, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "08ee6a8339674b429c2180eb9e5b5803", "bug_code_uid": "d8f43fe63d5df462cb777698680492ba", "src_uid": "0816295355375a2d3f1cd45852b86360", "apr_id": "77a5abac761f201966126b8a94e8c2ee", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int T,i,str,in,exp,c,ans,j;\n    scanf(\"%i\",&T);\n    for(i=0;i<T;i++)\n    {\n        c=0;\n       scanf(\"%i %i %i\",&str,&in,&exp);\n       if(str+exp<=in)printf(\"0\\n\");\n       else if(str>=in)\n       {\n           ans=exp+1;\n           for(j=exp;j>=str-in;j=j-2)c++;\n           ans=ans-c;\n           printf(\"%i\\n\",ans);\n       }\n       else\n       {\n           //ans=exp+1;\n           for(j=exp;j>=in-str;j=j-2)c++;\n           ans=c;\n           if(ans>0)printf(\"%i\\n\",ans);\n           else printf(\"%i\\n\",0);\n       }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int T,i,str,in,exp,c,ans,j;\n    scanf(\"%i\",&T);\n    for(i=0;i<T;i++)\n    {\n        c=0;\n       scanf(\"%i %i %i\",&str,&in,&exp);\n       if(str+exp<=in)printf(\"0\\n\");\n       else if(str>=in)\n       {\n           ans=exp+1;\n           for(j=exp;j>=str-in;j=j-2)c++;\n           ans=ans-c;\n           printf(\"%i\\n\",ans);\n       }\n       else\n       {\n           //ans=exp+1;\n           for(j=exp;j>in-str;j=j-2)c++;\n           ans=c;\n           if(ans>0)printf(\"%i\\n\",ans);\n           else printf(\"%i\\n\",0);\n       }\n    }\n}\n"}
{"similarity_score": 0.9978070175438597, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d9af73dac031f6a5f673199c51c66b5c", "bug_code_uid": "05162b60ecf834433f04e05da4678b9e", "src_uid": "1f41c017102f4a997be324a4ec9b7fd6", "apr_id": "0bf2767bb1c1402b2610b5f09a13bab4", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n \nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    int n,m,k,i,y=0,z=0;\n    scanf(\"%d %d %d\",&n,&m,&k);\n    int *b=(int *)malloc(m*sizeof(int));\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",b+i);    \n    }\n    int a[m];\n    for(i=0;i<m;i++)\n    {\n        a[i]=0;    \n    }\n    for(i=0;i<m;i++)\n    {\n        a[b[i]]=1;\n    }\n    int c,d,temp=1;\n    if(a[1]!=1)\n    {\n        for(i=0;i<k;i++)\n        {\n            scanf(\"%d %d\",&c,&d);\n            if(c==temp)\n            {\n                temp=d;\n                if(a[temp]==1){break;}\n            }\n            else \n            {\n                if(d==temp)\n                {\n                    temp=c;\n                    if(a[temp]==1){break;}\n                }\n            }\n        }\n    }\n    printf(\"%d\",temp);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n \nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    int n,m,k,i,y=0,z=0;\n    scanf(\"%d %d %d\",&n,&m,&k);\n    int *b=(int *)malloc(m*sizeof(int));\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",b+i);    \n    }\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        a[i]=0;    \n    }\n    for(i=0;i<m;i++)\n    {\n        a[b[i]]=1;\n    }\n    int c,d,temp=1;\n    if(a[1]!=1)\n    {\n        for(i=0;i<k;i++)\n        {\n            scanf(\"%d %d\",&c,&d);\n            if(c==temp)\n            {\n                temp=d;\n                if(a[temp]==1){break;}\n            }\n            else \n            {\n                if(d==temp)\n                {\n                    temp=c;\n                    if(a[temp]==1){break;}\n                }\n            }\n        }\n    }\n    printf(\"%d\",temp);\n    return 0;\n}"}
{"similarity_score": 0.897803247373448, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "4e996e9eb43d4079408b361d26e63b8b", "bug_code_uid": "0901d33a8726960556f6fa5f870c07aa", "src_uid": "c647e36495fb931ac72702a12c6bfe58", "apr_id": "cc7d69d68620a252cf9321964b61865a", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint breaks_found=0;\n\tint index_of_break=0;\n\tint n;\n\tint cn;\n\tint ln;\n\tscanf(\"%i\",&n);\n\tscanf(\"%i\",&cn);\n\t--n;\n\tdo\n\t{\n\t\tln=cn;\n\t\tscanf(\"%i\",&cn);\n\t\tif(ln>cn)\n\t\t{\n\t\t\t++breaks_found;\n\t\t\tindex_of_break=n;\n\t\t}\n\t\t//printf(\"n=%i ln=%i cn=%i index_of_break=%i\\n\",n,ln,cn,index_of_break);\n\t\t--n;\n\t}while(n>0);\n\tif(breaks_found>1)\n\t{\n\t\tprintf(\"-1\\n\");\n//\t\tprintf(\"%i\\n\",breaks_found);\n\t}\n\telse\n\t{\n\t\tprintf(\"%i\\n\",index_of_break);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint breaks_found=0;\n\tint index_of_break=0;\n\tint n;\n\tint cn;\n\tint ln;\n\tint fn;\n\tscanf(\"%i\",&n);\n\tscanf(\"%i\",&cn);\n\tfn=cn;\n\t--n;\n\tdo\n\t{\n\t\tln=cn;\n\t\tscanf(\"%i\",&cn);\n\t\tif(ln>cn)\n\t\t{\n\t\t\t++breaks_found;\n\t\t\tindex_of_break=n;\n\t\t}\n\t\t//printf(\"n=%i ln=%i cn=%i index_of_break=%i\\n\",n,ln,cn,index_of_break);\n\t\t--n;\n\t}while(n>0);\n\tif(fn<cn)\n\t{\n\t\t++breaks_found;\n\t\tindex_of_break=n;\n\t}\n\tif(breaks_found>1)\n\t{\n\t\tprintf(\"-1\\n\");\n//\t\tprintf(\"%i\\n\",breaks_found);\n//\t\tprintf(\"%i\\n\",index_of_break);\n\t}\n\telse\n\t{\n\t\tprintf(\"%i\\n\",index_of_break);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9924050632911392, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0aeb832143904bd36e00348bd5c6d190", "bug_code_uid": "29f50deb85b61b374354f836f69f3d38", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "dd3bbe774047a98fa5028f58c4b2d6cc", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{int n,i;\nint l=1;\nchar s[50000000][100];\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{scanf(\"%s\",&s[i]);\n}\n\n\nfor(i=0;i<n;i++)\n{if(s[i][1]==s[i+1][0]){\n\t\nl++;}\n}\n\nprintf(\"%d\",l);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{int n,i;\nint l=1;\nchar s[500000][100];\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{scanf(\"%s\",&s[i]);\n}\n\n\nfor(i=0;i<n;i++)\n{if(s[i][1]==s[i+1][0]){\n\t\nl++;}\n}\n\nprintf(\"%d\",l);\n}"}
{"similarity_score": 0.5714285714285714, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "efa2cda7b3143251e96fa32199744d32", "bug_code_uid": "b24b635873ef0d46c6effb6f353c7ff3", "src_uid": "d03ad531630cbecc43f8da53b02d842e", "apr_id": "83b266084791133a8cbb58ac14993c7b", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\nint main()\n{\n    int n,i,j,sum=-1;\n  scanf(\"%d\",&n);\n  int a[n];\n  for(i=0;i<n;i++)\n  {\n      scanf(\"%d\",&a[i]);\n  }\n\ni=a[0];\n      while(sum<0)\n{\n    sum=i;\n    for(j=0;j<n;j++)\n    {\n    sum=sum+(sum-a[j]);\n    if(sum<0)\n        break;\n    }\nif (sum>=0)\n    {\n        printf(\"%d\",i);\n    break;\n    }\ni++;\n\n}\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\nint main()\n{\n    int n,i;\n  scanf(\"%d\",&n);\n  int a[n];\n  for(i=0;i<n;i++)\n  {\n      scanf(\"%d\",&a[i]);\n  }\n\nint max;\n max = a[0];\n\n  for (i = 1; i < n; i++)\n  {\n    if (a[i] > max)\n    {\n       max  = a[i];\n    }\n  }\n    printf(\"%d\",max);\n    return 0;\n\n}\n"}
{"similarity_score": 0.37627811860940696, "equal_cnt": 11, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "4e834a89b0efd9d4e7ef5f97c19dc621", "bug_code_uid": "7f7d73c5c413eb8e01c2c8d4606a7c87", "src_uid": "d78cd4a06fb566d58275e92f976166f2", "apr_id": "1205fa59e5a999570444b88da36b77f1", "difficulty": 1100, "tags": ["constructive algorithms", "binary search", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void)\n{\n    int test,n,flag=0,min=-1;\n\n    scanf(\"%d\",&test);\n    while(test--)\n    {\n        scanf(\"%d\",&n);\n        if(n==1)\n        {\n            printf(\"%d\\n\",0);\n            continue;\n        }\n\n      //  for (int i = 1; i < n; i++)\n        {\n            int eq = (n - 1);\n                eq = eq / i;\n                eq += (i - 1);\n                if (eq < min|| min==-1) {\n                    min = eq;\n                }\n        }\n      //  printf(\"%d\\n\", min);\n        //min=-1;\n    }\n}\n", "fixed": "#include <stdio.h>\nint main(void)\n{\n    int test,flag=0;\n    long min=-1,n;\n\n    scanf(\"%d\",&test);\n    while(test--)\n    {\n        scanf(\" %ld\",&n);\n        for (int i = 1; i < 65000; i++)\n        {\n            int eq = (n - 1);\n            eq = eq / i;\n            eq += (i - 1);\n            if (eq < min|| min==-1) {\n                min = eq;\n            }\n        }\n        min= min > 0? min : 0;\n        printf(\"%ld\\n\", min);\n        min=-1;\n    }\n\n}"}
{"similarity_score": 0.5714285714285714, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "513355b4a693d336ab301ee51c72ce15", "bug_code_uid": "bf76398f9bf304e1171b53f5a5a08cba", "src_uid": "259e39c9e63e43678e596c0d8c66937c", "apr_id": "4e138f8881f296291d23d56a908d65e0", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n\r\n{\r\n    int p, t, i, remainder, k=3;\r\n    scanf(\"%d\", &t);\r\n    for(i=1; i<=t; i++)\r\n    {\r\n        scanf(\"%d\", &p);\r\n        while(1)\r\n        {\r\n            remainder=p%k;\r\n            if(remainder==1)\r\n            {\r\n                printf(\"2 %d\\n\", k);\r\n                break;\r\n            }\r\n            else\r\n                k++;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n\r\n{\r\n    int p, t, i, remainder, k=3;\r\n    scanf(\"%d\", &t);\r\n    for(i=1; i<=t; i++)\r\n    {\r\n        scanf(\"%d\", &p);\r\n        printf(\"2 %d\\n\", p-1);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8595890410958904, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f4b4d9919b2a54a2b85a03a90d82d48a", "bug_code_uid": "f5e6dfa3603f26c4d81990e31ddca06c", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "82e3d12d86e62589de8e9d62d98fa7c0", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain(){\n\tint n,i,p=0,q=0;\n\tscanf(\"%d\",&n);\n\tint arr[n][2];\n\tfor(i=0;i<n;i++){\n\t  scanf(\"%d%d\",&arr[i][0],&arr[i][1]);\t\n\t  p=p+arr[i][0];\n\t  q=q+arr[i][1];\n\t}\n\t\n\tif(p>q) printf(\"Mishka\");\n\tif(p<q) printf(\"Chris\");\n\tif(p==q) printf(\"Friendship is magic!^^\");\n\t\n}", "fixed": "#include<stdio.h>\nmain(){\n\tint n,i,p=0,q=0;\n\tscanf(\"%d\",&n);\n\tint arr[n][2];\n\tfor(i=0;i<n;i++){\n\t  scanf(\"%d%d\",&arr[i][0],&arr[i][1]);\n\t  if(arr[i][0]>arr[i][1]) p++;\t\n\t  if(arr[i][1]>arr[i][0]) q++;\n\t}\n\t\n\tif(p>q) printf(\"Mishka\");\n\tif(p<q) printf(\"Chris\");\n\tif(p==q) printf(\"Friendship is magic!^^\");\n\t\n}"}
{"similarity_score": 0.9852941176470589, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b42dce1ea4ccda157d8e09235625c001", "bug_code_uid": "9e57d07c3e707ed27f52c37a17240257", "src_uid": "3bff9b69423cf6c8425e347a4beef96b", "apr_id": "742d4658357831cc7a9c74bd8a0e1ade", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    int n, i, a, b, ok = 0;\n    char name[30];\n\n    scanf(\"%d\", &n);\n\n    for(i = 0; i < n; i++){\n        scanf(\"%s %d %d%*c\", name, &a, &b);\n\n        if(a >= 2400)\n            if(b - a < 0)\n                ok++;\n    }\n    if(ok)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int n, i, a, b, ok = 0;\n    char name[30];\n\n    scanf(\"%d\", &n);\n\n    for(i = 0; i < n; i++){\n        scanf(\"%s %d %d%*c\", name, &a, &b);\n\n        if(a >= 2400)\n            if(b > a)\n                ok++;\n    }\n    if(ok)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.5261945883707542, "equal_cnt": 16, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "74da9065c2e29e32b9672275421fd73a", "bug_code_uid": "df30e24a021c38e6b181d89244e09005", "src_uid": "54e2b6bea0dc6ee68366405945af50c6", "apr_id": "0b186f7e19b8b715f95f4206ca7f0560", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n\nstatic size_t\nfind_block (size_t block, const size_t *blocks, size_t blocks_n);\n\nstatic unsigned int\ncompute_file_read_time (const size_t *blocks, size_t blocks_n);\n\nint\nmain (void) {\n\tsize_t blocks_n;\n\tscanf (\"%zu\", &blocks_n);\n\n\tsize_t blocks[blocks_n];\n\tfor (size_t i = 0; i < blocks_n; ++i)\n\t\tscanf (\"%zu\", &blocks[i]);\n\n\tunsigned int read_time = compute_file_read_time (blocks, blocks_n);\n\tprintf (\"%u\\n\", read_time);\n\n\treturn 0;\n}\n\nstatic size_t\nfind_block (size_t block, const size_t *blocks, size_t blocks_n) {\n\tfor (size_t i = 0; i < blocks_n; ++i)\n\t\tif (blocks[i] == block)\n\t\t\treturn i;\n\n\treturn 0; // just to please the compiler\n}\n\nstatic unsigned int\ncompute_file_read_time (const size_t *blocks, size_t blocks_n) {\n\tunsigned int time = 0;\n\tfor (size_t prev = 1, cur = 2; prev < blocks_n; ++prev, ++cur) {\n\t\tsize_t prev_idx = find_block (prev, blocks, blocks_n);\n\t\tsize_t cur_idx = find_block (cur, blocks, blocks_n);\n\t\ttime += abs (cur_idx - prev_idx);\n\t}\n\n\treturn time;\n}\n", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n\nstatic unsigned long long\ncompute_file_read_time (const size_t *blocks, size_t blocks_n);\n\nint\nmain (void) {\n\tsize_t blocks_n;\n\tscanf (\"%llu\", &blocks_n);\n\n\tsize_t blocks[blocks_n];\n\tfor (size_t i = 0; i < blocks_n; ++i) {\n\t\tsize_t block;\n\t\tscanf (\"%llu\", &block);\n\t\tblocks[block - 1] = i;\n\t}\n\n\tunsigned long long read_time = compute_file_read_time (blocks, blocks_n);\n\tprintf (\"%llu\\n\", read_time);\n\n\treturn 0;\n}\n\nstatic unsigned long long\ncompute_file_read_time (const size_t *blocks, size_t blocks_n) {\n\tunsigned long long time = 0;\n\tfor (size_t i = 1; i < blocks_n; ++i)\n\t\ttime += abs (blocks[i] - blocks[i - 1]);\n\n\treturn time;\n}\n"}
{"similarity_score": 0.9912280701754386, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b95a27bd0df85fa369ed2bb66a335640", "bug_code_uid": "be3204b24495996adcf237612d218260", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "73262e66e20b2f37b747a0797e1d0381", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#define MIN(a,b) a<b?a:b\n#define MAX(a,b) a>b?a:b\n#define rep(i,a,b) for(i=a;i<b;i++)\n#define rev(i,a,b) for(i=a;i>b;i--)\n#define sf(a) scanf(\"%d\",&(a))\n#define pf(a) printf(\"%d\",(a))\n#define sfll(a) scanf(\"%lld\",&(a))\n#define pfll(a) printf(\"%lld\",(a))\n#define ssf(a) scanf(\"%s\",(a))\n#define spf(a) printf(\"%s\",(a))\n#define spc printf(\" \");\n#define nl printf(\"\\n\")\n#define play int main()\n#define out return\ntypedef int I;\ntypedef long long LL;\ntypedef char S;\ntypedef float F;\ntypedef double D;\n/*int cmp(const void *a,const void *b)\n{\n    return (*(int*)a-*(int*)b);\n}*/\nplay\n{\n    I n,d,a,t,c=0;\n    sf(n),sf(d);\n    sf(t);\n    while(--n)\n    {\n        sf(a);\n        if(a<=t)\n        {\n            t-=a;\n            t=ceil((double)t/d);\n            c+=t;\n            a+=(t*d);\n        }\n        t=a;\n    }\n    pf(c);\n    nl;\n    out 0;\n}\n", "fixed": "\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#define MIN(a,b) a<b?a:b\n#define MAX(a,b) a>b?a:b\n#define rep(i,a,b) for(i=a;i<b;i++)\n#define rev(i,a,b) for(i=a;i>b;i--)\n#define sf(a) scanf(\"%d\",&(a))\n#define pf(a) printf(\"%d\",(a))\n#define sfll(a) scanf(\"%lld\",&(a))\n#define pfll(a) printf(\"%lld\",(a))\n#define ssf(a) scanf(\"%s\",(a))\n#define spf(a) printf(\"%s\",(a))\n#define spc printf(\" \");\n#define nl printf(\"\\n\")\n#define play int main()\n#define out return\ntypedef int I;\ntypedef long long LL;\ntypedef char S;\ntypedef float F;\ntypedef double D;\n/*int cmp(const void *a,const void *b)\n{\n    return (*(int*)a-*(int*)b);\n}*/\nplay\n{\n    I n,d,a,t,c=0;\n    sf(n),sf(d);\n    sf(t);\n    while(--n)\n    {\n        sf(a);\n        if(a<=t)\n        {\n            t-=a;\n            t=(t/d)+1;\n            c+=t;\n            a+=(t*d);\n        }\n        t=a;\n    }\n    pf(c);\n    nl;\n    out 0;\n}\n"}
{"similarity_score": 0.9971126082771896, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8b6881a9583d57b623299b1047e62bc6", "bug_code_uid": "ba8e2ccb3a12f85c852c307a0b84b0a2", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "a056be5efcef696730b4bf81102097bd", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,i,j,k,f=0,z=0;\n    scanf(\"%d\",&n);\n    int A[n];\n    scanf(\"%d\",&A[0]);\n    if(A[0]==0){\n            z++;\n        }else{\n            f++;\n        }\n    for(i=1;i<n;i++){\n        scanf(\" %d\",&A[i]);\n        if(A[i]==0){\n            z++;\n        }else{\n            f++;\n        }\n    }\n    if(z>0){\n        if((f%9) != 0){\n            k=(f/9);\n            j=0;\n            for(i=0;i<n,j<(k*9);i++){\n                if(A[i]==5){\n                    printf(\"%d\",A[i]);j++;\n                }\n            }\n            for(i=0;i<n;i++){\n                if(A[i]==0){\n                    printf(\"%d\",A[i]);\n                    if(j==0){break;}\n                }\n            }\n        }else{\n            for(i=0;i<n;i++){\n                if(A[i]==5){\n                    printf(\"%d\",A[i]);\n                }\n            }\n            for(i=0;i<n;i++){\n                if(A[i]==0){\n                    printf(\"%d\",A[i]);\n                }\n            }\n        }\n    }else{\n        printf(\"%d\",-1);\n    }\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,i,j,k,f=0,z=0;\n    scanf(\"%d\",&n);\n    int A[n];\n    scanf(\"%d\",&A[0]);\n    if(A[0]==0){\n            z++;\n        }else{\n            f++;\n        }\n    for(i=1;i<n;i++){\n        scanf(\" %d\",&A[i]);\n        if(A[i]==0){\n            z++;\n        }else{\n            f++;\n        }\n    }\n    if(z>0){\n        //if((f%9) != 0){\n            k=(f/9);\n            j=0;\n            for(i=0;i<n,j<(k*9);i++){\n                if(A[i]==5){\n                    printf(\"%d\",A[i]);j++;\n                }\n            }\n            for(i=0;i<n;i++){\n                if(A[i]==0){\n                    printf(\"%d\",A[i]);\n                    if(j==0){break;}\n                }\n            }\n        /*}else{\n            for(i=0;i<n;i++){\n                if(A[i]==5){\n                    printf(\"%d\",A[i]);\n                }\n            }\n            for(i=0;i<n;i++){\n                if(A[i]==0){\n                    printf(\"%d\",A[i]);\n                }\n            }\n        }*/\n    }else{\n        printf(\"%d\",-1);\n    }\n}"}
{"similarity_score": 0.9976762199845082, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b25c64f42d943da05770eba2cd3c4467", "bug_code_uid": "e9a797fd9b81c11b42f34465a522c6fb", "src_uid": "7ed9265b56ef6244f95a7a663f7860dd", "apr_id": "c0b25acc4276b7e87650152d5cda46ac", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint i,n,m,p1,p2,p3,t1,t2,l,r,p,s,t,ar[2][101];\n\nint main(){\n    scanf(\"%d%d%d%d%d%d\",&n,&p1,&p2,&p3,&t1,&t2);\n\n    for (i=0; i<n; i++){\n        scanf(\"%d%d\",&l,&r);\n        ar[0][i]=l;\n        ar[1][i]=r;\n    }\n\n    i=0;\n    while (i<=n){\n        s=ar[1][i]-ar[0][i];\n        p+=s*p1;\n        if (n>=i+1 && ar[0][i+1]-ar[1][i]>0){\n            m=ar[0][i+1]-ar[1][i];\n            if (m>=t1){p+=p1*t1;} else {p+=p1*m;}\n            if (m-t1>=t2){p+=p2*t2;} else if (m>t1 && m<t2) {p+=p2*(m-t1);}\n            if (m-t1>t2){p+=p3*(m-(t2+t1));}\n        }\n        t=ar[1][i];\n        i++;\n    }\n\n    printf(\"%d\",p);\n    return(0);\n}\n", "fixed": "#include <stdio.h>\n\nint i,n,m,p1,p2,p3,t1,t2,l,r,p,s,t,ar[2][101];\n\nint main(){\n    scanf(\"%d%d%d%d%d%d\",&n,&p1,&p2,&p3,&t1,&t2);\n\n    for (i=0; i<n; i++){\n        scanf(\"%d%d\",&l,&r);\n        ar[0][i]=l;\n        ar[1][i]=r;\n    }\n\n    i=0;\n    while (i<=n){\n        s=ar[1][i]-ar[0][i];\n        p+=s*p1;\n        if (n>=i+1 && ar[0][i+1]-ar[1][i]>0){\n            m=ar[0][i+1]-ar[1][i];\n            if (m>=t1){p+=p1*t1;} else {p+=p1*m;}\n            if (m-t1>=t2){p+=p2*t2;} else if (m>t1 && m-t1<t2) {p+=p2*(m-t1);}\n            if (m-t1>t2){p+=p3*(m-(t2+t1));}\n        }\n        t=ar[1][i];\n        i++;\n    }\n\n    printf(\"%d\",p);\n    return(0);\n}\n"}
{"similarity_score": 0.9975, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1daaf1be722c3dfd28dcd77b2961f3bc", "bug_code_uid": "13e9f00d66318f53b27af44bc047aef9", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "e7284b5c36e35d0e71b4e498cc407d57", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int postcardsTotal;\r\n    scanf(\"%d\", &postcardsTotal);\r\n\r\n    for (int i = 0; i < postcardsTotal; ++i) {\r\n        long long weightPaper, heightPaper, sectionsTotal;\r\n        scanf(\"%lld %lld %lld\", &weightPaper, &heightPaper, &sectionsTotal);\r\n\r\n        long long counterPaper = 1;\r\n        while (weightPaper % 2 != 1 && heightPaper % 2 != 1) {\r\n            if (weightPaper % 2 == 0) {\r\n                weightPaper /= 2;\r\n                counterPaper *= 2;\r\n            }\r\n            if (heightPaper % 2 == 0) {\r\n                heightPaper /= 2;\r\n                counterPaper *= 2;\r\n            }\r\n        }\r\n\r\n        if (counterPaper >= sectionsTotal)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int postcardsTotal;\r\n    scanf(\"%d\", &postcardsTotal);\r\n\r\n    for (int i = 0; i < postcardsTotal; ++i) {\r\n        long long weightPaper, heightPaper, sectionsTotal;\r\n        scanf(\"%lld %lld %lld\", &weightPaper, &heightPaper, &sectionsTotal);\r\n\r\n        long long counterPaper = 1;\r\n        while (weightPaper % 2 != 1 || heightPaper % 2 != 1) {\r\n            if (weightPaper % 2 == 0) {\r\n                weightPaper /= 2;\r\n                counterPaper *= 2;\r\n            }\r\n            if (heightPaper % 2 == 0) {\r\n                heightPaper /= 2;\r\n                counterPaper *= 2;\r\n            }\r\n        }\r\n\r\n        if (counterPaper >= sectionsTotal)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.666005946481665, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "73a18c10cfb92e306ab216e7592f02b0", "bug_code_uid": "c7661635e5234a3d1d382b09720e0138", "src_uid": "2a770c32d741b3440e7f78cd5670d54d", "apr_id": "6bf80c25efb0604f91347f0a2b8ccf6b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tint n, m;\n\tscanf(\"%d %d\", &n, &m);\n\tchar str[51][51];\n\tint i, j, flag = 0;;\n\tfor(i=0;i<n;i++){\n\t\tif(i%2 == 0){\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t\tstr[i][j] = '#';\n\t\t}\n\t\telse{\n\t\t\tif(flag == 0){\n\t\t\t\tstr[i][m-1] = '#';\n\t\t\t\tflag = 1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tstr[i][0] = '#';\n\t\t\t\tflag = 0;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<m;j++){\n\t\t\tif(str[i][j] != '#')\n\t\t\t\tstr[i][j] = '.';\n\t\t}\t\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<m;j++)\n\t\t\tprintf(\"%c\", str[i][j]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tint n, m;\n\tscanf(\"%d %d\", &n, &m);\n\tchar str[50][51];\n\tint i, j, flag = 0;;\n\tfor(i=0;i<n;i++){\n\t\tif(i%2 == 0){\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t\tstr[i][j] = '#';\n\t\t}\n\t\telse{\n\t\t\tif((i+1)%4 == 0){\n\t\t\t\tstr[i][0] = '#';\n\t\t\t\tfor(j=1;j<m;j++)\n\t\t\t\t\tstr[i][j] = '.';\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor(j=0;j<m-1;j++)\n\t\t\t\t\tstr[i][j] = '.';\n\t\t\t\tstr[i][m-1] = '#';\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<m;j++)\n\t\t\tprintf(\"%c\", str[i][j]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9762282091917591, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "0401265e03659f7ba8607d2b663fac4c", "bug_code_uid": "750d0b34bd565bc5e294c2c168689da8", "src_uid": "2d6a1202139e1f77f32377224e1fe752", "apr_id": "77a17f26a008fa9d6328f76968518c37", "difficulty": 1100, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a,b,flag=0;\n   scanf(\"%d\",&a);\n   scanf(\"%d\",&b);\n   int k=b;\n   int i,j,ax[210];\n   j=7-b;\n   for(i=0;i<2*a;i++)\n   {\n   \tscanf(\"%d\",&ax[i]);\n   }\n   for(i=2;i<2*a;i=i+2)\n   {\n   \tif(ax[i]==j||ax[i+1]==j||ax[i-1]==j||ax[i-2]==j)\n   \t{\n   \t\tflag=1;\n   \t\tprintf(\"NO\\n\");\n   \t\tbreak;\n   \t}\n   \tint c=b;\n   \tb=j;\n   \tj=c;\n   }\n   int w=2*a;\n   j=7-k;\n   if(a%2==0)\n   {\n   \tif(ax[w-1]==k||ax[w-2]==k)\n   \t\t{printf(\"NO\\n\");flag=1;}\n   }\n   else\n   {\n   \tif(ax[w-1]==j||ax[w-2]==j)\n   \t{\n   \t\tprintf(\"NO\");flag=1;\n   \t}\n   }\n   if(flag==0)\n   {\n   \tprintf(\"YES\\n\");\n   }\n   return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a,b,flag=0;\n   scanf(\"%d\",&a);\n   scanf(\"%d\",&b);\n   int k=b;\n   int i,j,ax[210];\n   j=7-b;\n   for(i=0;i<2*a;i++)\n   {\n   \tscanf(\"%d\",&ax[i]);\n   }\n   for(i=2;i<2*a;i=i+2)\n   {\n   \tif(ax[i]==j||ax[i+1]==j||ax[i-1]==j||ax[i-2]==j)\n   \t{\n   \t\tflag=1;\n   \t\tprintf(\"NO\\n\");\n   \t\tbreak;\n   \t}\n   \tint c=b;\n   \tb=j;\n   \tj=c;\n   }\n   int w=2*a;\n   j=7-k;\n   if(a%2==0 && flag!=1)\n   {\n   \tif(ax[w-1]==k||ax[w-2]==k)\n   \t\t{\n   \t\t\tprintf(\"NO\\n\");flag=1;}\n   }\n   else if(flag!=1)\n   {\n   \tif(ax[w-1]==j||ax[w-2]==j)\n   \t{\n   \t\tprintf(\"NO\");flag=1;\n   \t}\n   }\n   if(flag==0)\n   {\n   \tprintf(\"YES\\n\");\n   }\n   return 0;\n}"}
{"similarity_score": 0.6001635322976288, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "95dea08659bd4d039552d21f674aec15", "bug_code_uid": "af91d0d50a9a92740c5a2c26d5bde541", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "c05c5d75ea2f58d0ad64c4928a02116b", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define pp printf\n#define ss scanf\n#define min(a,b) (a<b) ? a : b\n#define max(a,b) (a>b) ? a : b\nint main(){\n\tchar a[100004],n,x1=0,x2=0,i,xxx=0;\n\tss(\"%s\",a);\n\tfor(i=0;i<strlen(a);i++){\n\t\tif(!x1 && a[i]=='A' && a[i+1]=='B'){\n\t\t\tx1++;i+=2;}\n\t\tif(x1 && a[i]=='B' && a[i+1]=='A'){\n\t\t\tx2++;}\n\t}\n\tif(x1 && x2)\n\t\txxx++;\n\telse{\n\t\txxx--;\n\t\treturn 0;}\n\tx1=0;\n\tx2=0;\n\tfor(i=0;i<strlen(a);i++){\n\t\tif(!x2 && a[i]=='B' && a[i+1]=='A'){\n\t\t\tx2++;i+=2;}\n\t\tif(x2 && a[i]=='A' && a[i+1]=='B'){\n\t\t\tx1++;}\n\t}\n\tif(x1 && x2)\n\t\txxx++;\n\telse\n\t\txxx--;\n\tif(xxx)\n\t\tpp(\"YES\");\n\telse(!xxx)\n\t\tpp(\"NO\");\n\t\t\n\n\n\n\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#define pp printf\n#define ss scanf\n#define min(a,b) (a<b) ? a : b\n#define max(a,b) (a>b) ? a : b\nint main(){\n\tchar a[100004];\n\tlong long int u,n,x1=0,x2=0,i,xxx=0;\n\tss(\"%s\",a);\n\tu=strlen(a);\n\tfor(i=0;i<u;i++){\n\t\tif(!x1 && a[i]=='A' && a[i+1]=='B'){\n\t\t\tx1++;i+=2;}\n\t\tif(x1 && a[i]=='B' && a[i+1]=='A'){\n\t\t\tx2++;}\n\t}\n\tif(x1 && x2){\n\t\tpp(\"YES\");\n\t\treturn 0;\n\t\t}\n\telse{\n\tx1=0;\n\tx2=0;\n\tfor(i=0;i<u;i++){\n\t\tif(!x2 && a[i]=='B' && a[i+1]=='A'){\n\t\t\tx2++;i+=2;}\n\t\tif(x2 && a[i]=='A' && a[i+1]=='B'){\n\t\t\tx1++;}\n\t}\n\tif(x1 && x2){\n\t\tpp(\"YES\");\n\t\treturn 0;}\n\t\t\n\t\tpp(\"NO\");\n}}\n"}
{"similarity_score": 0.08783783783783784, "equal_cnt": 5, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "226e1a3884b16e5da80bf048668bcba9", "bug_code_uid": "91835b877914dc6d38b7cb5946feb997", "src_uid": "5bffe38e3ac9511a30ee02b4ec5cb1d5", "apr_id": "660d64c9618479eb28236311c596e786", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint n;int re=0;\n\t//int cnt=0;\n\tscanf(\"%d\",&n);\n\tint a[5005];\n\tfor(int i=0;i<n*3;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\t\n    for(int i=0;i<3*n;i++)\n    {\n    \tif(i%3==0)\n    \t{\n    \t\tre=(abs(a[i]+a[i+2]-2*a[i+1]))%3;\n    \t\tif(re==2){--re;}\n    \t    printf(\"%d\\n\",re);\n\t\t}\n\t}\nreturn 0;\n}\n\n  \t\t \t \t\t\t \t\t\t\t\t   \t\t\t   \t \t\t\t\t", "fixed": "#include<stdio.h>\nint main()\n{\n int n,m,a,b,c;\n scanf(\"%d\",&n);\n while(n--)\n {\n  m=0;\n  scanf(\"%d %d %d\",&a,&b,&c);\n  m=a+b+c;\n  if(m%3==0)\n    printf(\"0\\n\");\n  else\n    printf(\"1\\n\"); \n }\n return 0;\n}\n \t \t\t\t\t \t \t\t\t\t \t\t \t \t    \t \t\t"}
{"similarity_score": 0.9937629937629938, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "394b9cc8cfa3b226bcb0c68056612247", "bug_code_uid": "a73284deb789a58cdbe46e96e8a94cd0", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "2aab7fd053c9cff3edf4a54adb2c8ca7", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int t, n, m, sum;\n\tscanf(\"%lld\", &t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%lld %lld\", &n, &m);\n\t\tsum= n*m;\n\t\tif(sum%2==0)\n\t\t{\n\t\t\tprintf(\"%lld\", sum/2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%lld \\n\", (sum/2 +1));\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int t, n, m, sum;\n\tscanf(\"%lld\", &t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%lld %lld\", &n, &m);\n\t\tsum= n*m;\n\t\tif(sum%2==0)\n\t\t{\n\t\t\tprintf(\"%lld \\n\", sum/2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%lld \\n\", (sum/2 +1));\n\t\t}\n\t}\n}"}
{"similarity_score": 0.5524100994644223, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "fdee9a545adf3ee5b3c81751f990ea6e", "bug_code_uid": "732f08d1d217b6e192cf200851e03420", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "b7b523030d0f7266ed3360072270743d", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    //freopen(\"1.txt\", \"r\", stdin);\n    int n, m, i, j, k, l, sum;\n    int lookup[100001];\n    for(i = 0; i < 100001; i++)\n        lookup[i] = 0;\n    scanf(\"%d %d\", &n, &m);\n    int a[n+1];\n    for(i = 1; i <= n; i++)\n        scanf(\"%d\", &a[i]);\n\n    for(i = 0, l = 1; i < m; i++, l++)\n    {\n        scanf(\"%d\", &j);\n        sum = 1;\n        lookup[a[j]] = l;\n        //printf(\"%d %d \", a[j], lookup[a[j]]);\n        for(k = j+1; k <= n; k++)\n        {\n            //printf(\"%d %d \", a[k], lookup[a[k]]);\n            if(lookup[a[k]] != l)\n            {\n                lookup[a[k]] = l;\n                sum++;\n            }\n\n        }\n        printf(\"%d\\n\", sum);\n\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    //freopen(\"1.txt\", \"r\", stdin);\n    int n, m, i, j, k, l, sum;\n    int lookup[100001];\n    for(i = 0; i < 100001; i++)\n        lookup[i] = 0;\n    scanf(\"%d %d\", &n, &m);\n    int a[n+1], ans[n+1];\n    for(i = 1; i <= n; i++)\n        scanf(\"%d\", &a[i]);\n\n    int count = 0;\n    for(j = n; j > 0; j--)\n    {\n        if(!lookup[a[j]])\n        {\n            count++;\n            lookup[a[j]] = 1;\n        }\n\n         ans[j] = count;\n    }\n\n\n    for(i = 0; i < m; i++)\n    {\n        scanf(\"%d\", &j);\n        printf(\"%d\\n\", ans[j]);\n\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.5342831700801425, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "7beb09a370a1c2c57298ed16be7a5794", "bug_code_uid": "08c4a0a85a5083d61179319a669241a0", "src_uid": "faf1abdeb6f0cf34972d5cb981116186", "apr_id": "0747966133efdebdc35626d66c230bf6", "difficulty": 1200, "tags": ["data structures", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint visit1[100001],visit2[100001];\nint main()\n{\n  long long n,m,i,j,x,y,ans;\n  memset(visit1,0,sizeof(visit1));\n  memset(visit2,0,sizeof(visit2));\n  scanf(\"%lld%lld\",&n,&m);\n  ans=n*m;\n  while(m--)\n  {\n      scanf(\"%lld%lld\",&x,&y);\n      if(visit1[x]==0&&visit2[y]==0)\n      {\n          visit1[x]=1;visit2[y]=1;\n          ans-=(n*2-1);\n      }\n      else if(visit1[x]==0&&visit2[y]==1)\n      {\n          visit1[x]=1;\n          ans-=n;\n      }\n      else if(visit1[x]==1&&visit2[y]==0)\n      {\n          visit2[y]=1;\n          ans-=n;\n      }\n    printf(\"%lld \",ans);\n  }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint visit1[100001],visit2[100001];\nint main()\n{\n  long long n,m,i,j,x,y,ans,a,b;\n  scanf(\"%lld%lld\",&n,&m);\n  memset(visit1,0,sizeof(visit1));\n  memset(visit2,0,sizeof(visit2));\n  ans=n*n;\n  a=0,b=0;\n  while(m--)\n  {\n      scanf(\"%lld%lld\",&x,&y);\n      if(!visit1[x])\n      {\n          ans-=(n-b);\n          a++;\n          visit1[x]=1;\n      }\n      if(!visit2[y])\n      {\n          ans-=(n-a);\n          b++;\n          visit2[y]=1;\n      }\n      printf(\"%lld \",ans);\n  }\n}\n"}
{"similarity_score": 0.8243114909781576, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "8c589fb5b58eb36a3f814f8717f8a8a3", "bug_code_uid": "3d8898ae507e187227de4eee8664a1a4", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "ea6fc3dad55688b20386d46011a71b5f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nmain()\n{\n    int a[100][100],i,max=0,exit,enter,n,j,res,f;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<2;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n\n        }\n    }\n    int k,g,tot,suck=0,tem[100],x=0,fuck[1000];\n    for(i=0;i<n;i++)\n    {\n        j=0;\n        if(i==n-1)  break;\n\n        a[k=i+1][j]=a[i][g=j+1]-a[k=i+1][j];\n        res=a[k=i+1][j]+a[k=i+1][g=j+1];\n        a[k=i+1][g=j+1]=res;\n\n\n       if(res>max) max=res;\n\n    }\n    printf(\"%d\\n\",max);\n\n\n}\n", "fixed": "#include <stdio.h>\nmain()\n{\n    int a[1005][10],n,i,j,max=0,res;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<2;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n\n        }\n    }\n    int k,g,x,y;\n    for(i=0;i<n;i++)\n    {\n        j=0;\n        if(i==n-1)  break;\n        x=a[0][1];\n        a[k=i+1][j]=a[i][g=j+1]-a[k=i+1][j];\n        res=a[k=i+1][j]+a[k=i+1][g=j+1];\n        a[k=i+1][g=j+1]=res;\n\n\n       if(res>max) {\n            max=res;\n       }\n\n    }\n    if(max>x) printf(\"%d\\n\",max);\n\n    else\n    printf(\"%d\\n\",x);\n\n\n}\n"}
{"similarity_score": 0.09832402234636871, "equal_cnt": 11, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "51910e59e187712a964df352e3a38ec9", "bug_code_uid": "869d0829436f8c76bd46a98352264b3f", "src_uid": "89b4a7b4a6160ce784c588409b6ce935", "apr_id": "561d11552a3c21a8950d61113d045cc2", "difficulty": 1600, "tags": ["data structures", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar s[100000];\nint main()\n{\n\tscanf(\"%s\",s);\n\tint n=strlen(s),flag,i;\n\tint end=1,beg=0,count=2;\n\twhile(count<=n)\n\t{\n\t\tif(s[beg]!=s[end])\n\t\t{\n\t\t\tbeg++;\n\t\t\tend++;\n\t\t}\n\t\telse if(s[beg]==s[end])\n\t\t{\n\t\t\ts[beg]=s[end]=0;\n\t\t\tbeg--;\n\t\t\tend++;\n\t\t}\n\t\tcount++;\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]!=0)\n\t\t\tflag=1;\n\t\telse if(s[i]==0)\n\t\t\tflag=0;\n\t}\n\tif(flag==0)\n\t\tprintf(\"Yes\\n\");\n\telse if(flag==1)\n\t\tprintf(\"No\\n\");\t\n\treturn 0;\n}\t\n", "fixed": "#include<stdio.h>\nchar s[100000];\nint main()\n{\n\tint top=0,i,flag;\n\tscanf(\"%c\",&s[0]);\n\tchar k=s[0];\n\twhile(k!='\\n')\n\t{\n\t\tscanf(\"%c\",&k);\n\t\tif(s[top]!=k)\n\t\t{\n\t\t\ttop++;\n\t\t\ts[top]=k;\n\t\t}\n\t\telse if(s[top]==k)\n\t\t{\n\t\t\tif(top>0)\n\t\t\t\ttop--;\n\t\t\telse \n\t\t\t\ts[top]=0;\n\t\t}\n\t}\n\tfor(i=0;i<top;i++)\n\t{\n\t\tif(s[i]==0)\n\t\t\tflag=1;\n\t\telse if(s[i]!=0)\n\t\t{\n\t\t\tflag=0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==1)\n\t\tprintf(\"Yes\\n\");\n\telse if(flag==0)\n\t\tprintf(\"No\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9049919484702094, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "36da68cc8d7d69b4065ec5816d6bc9a9", "bug_code_uid": "4b4a4016d311aca4c490f40f8f1655c1", "src_uid": "a457e22fc8ff882c15ac57bca6960657", "apr_id": "1151c6c3e8a180cf5ecb4b469627ef68", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main ()\n{\n    int n, i,l, j=0;\n    char a[1200];\n    gets(a);\n    char s[5] = \"heidi\";\n\n    l = strlen(a);\n    s[5] ='\\0';\n    for(i=0;i<l;i++){\n        if(a[i] == s[j]) j++;\n    }\n    if(j == 5) printf(\"YES\");\n    else printf(\"NO\");\n\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main ()\n{\n    int n, i,l, j=0;\n    char a[1200];\n    gets(a);\n    char s[5] = \"heidi\";\n\n    l = strlen(a);\n    s[5] ='\\0';\n    for(i=0;i<l;i++){\n        if(a[i] == s[j]) j++;\n        if(j==5) break;\n    }\n    if(j == 5) printf(\"YES\");\n    else printf(\"NO\");\n    //printf(\"%c %c\", s[3], s[4]);\n\n}\n"}
{"similarity_score": 0.9291521486643438, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "23440021f2d557dafe2b3ea5307e3241", "bug_code_uid": "fc597aef6455b7f85b9e6655b9c37239", "src_uid": "a61b96d4913b419f5715a53916c1ae93", "apr_id": "9b672b134b2586b539d35db69ee82a1e", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    int n,a[1000],i,min=10000,max=0,q=-1,w=-1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]<min)\n        {\n            q++;\n            min=a[i];\n        }\n        if(a[i]>max)\n        {\n            w++;    \n            max=a[i];\n        }\n    }\n    if(q+w<0)\n    printf(\"0\");\n    else\n    printf(\"%d\",q+w);\n    return 0;\n}\n    ", "fixed": "#include <stdio.h>\n\nint main() {\n    int n,a[1000],i,min=10001,max=0,q=0,w=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&a[0]);\n    min=a[0];\n    max=a[0];\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]<min)\n        {\n            q++;\n            min=a[i];\n        }\n        if(a[i]>max)\n        {\n            w++;    \n            max=a[i];\n        }\n    }\n    if(q+w<0)\n    printf(\"0\");\n    else\n    printf(\"%d\",q+w);\n    return 0;\n}\n    "}
{"similarity_score": 0.9175738724727839, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "c6ad813ae180a1327c58a8fad3c8e284", "bug_code_uid": "ec012e9151234b603e74123df38f5329", "src_uid": "ff9745ec5cc22c2ea50b6d789596f719", "apr_id": "b3d3411721ad161e215a9db749e71d1d", "difficulty": 1700, "tags": ["data structures", "two pointers", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MIN(a,b) (a<b)? a: b\n#define MAX(a,b) (a>b)? a: b\n\nint ARR[200002];\nint SCORE[500002];\nint ms=0;\nint L=0,R=500002;\n\nint main(){\n\n\tint t;scanf(\"%d\",&t);\n\twhile(t--){\n\t\tint n,k;scanf(\"%d %d\",&n,&k);\n\t\tL = 0;\n\t\tR = 500002;\n\t\tms = 0;\n\t\tfor(int i=0;i<=k*2;i++)SCORE[i] = 0;\n\t\tfor(int i=1;i<=n;i++)scanf(\"%d\",&ARR[i]);\n\n\t\tfor(int i=1;i<=n/2;i++){\n\t\t\tSCORE[0]+=2;\n\t\t\tSCORE[(MIN(ARR[i],ARR[n-i+1]))]-=1;\n\t\t\tSCORE[ARR[i]+ARR[n-i+1]]-=1;\n\t\t\tSCORE[ARR[i]+ARR[n-i+1]+1]+=1;\n\t\t\tSCORE[(MAX(ARR[i],ARR[n-i+1]))+k+1]+=1;\n\t\t}\n\t\tms = SCORE[0];\n\t\tfor(int i=1;i<=k*2;i++){SCORE[i]+=SCORE[i-1];ms = MIN(ms,SCORE[i]);}\n\n\t\tprintf(\"%d\\n\",ms);\n\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define MIN(a,b) (a<b)? a: b\n#define MAX(a,b) (a>b)? a: b\n\nint ARR[200002];\nint SCORE[500002];\nint ms=0;\n\nint main(){\n\n\tint t;scanf(\"%d\",&t);\n\twhile(t--){\n\t\tint n,k;scanf(\"%d %d\",&n,&k);\n\t\tfor(int i=0;i<=k*2;i++)SCORE[i] = 0;\n\t\tfor(int i=1;i<=n;i++)scanf(\"%d\",&ARR[i]);\n\n\t\tfor(int i=1;i<=n/2;i++){\n\t\t\tSCORE[0]+=2;\n\t\t\tSCORE[(MIN(ARR[i],ARR[n-i+1]))+1]-=1;\n\t\t\tSCORE[ARR[i]+ARR[n-i+1]]-=1;\n\t\t\tSCORE[ARR[i]+ARR[n-i+1]+1]+=1;\n\t\t\tSCORE[(MAX(ARR[i],ARR[n-i+1]))+k+1]+=1;\n\t\t}\n\t\tms = SCORE[0];\n\t\tfor(int i=1;i<=k*2;i++){\n\t\t\tSCORE[i]+=SCORE[i-1];\n\t\t\tms = MIN(ms,SCORE[i]);\n\t\t}\n\n\t\tprintf(\"%d\\n\",ms);\n\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.3499616270145817, "equal_cnt": 17, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "d7c4b2662b213b16070f7b215a2a39b5", "bug_code_uid": "3019d3fc526345afbda9876d49f5af38", "src_uid": "8a6c3436f73286ca54f51fb90017a299", "apr_id": "c5ba9e76e12bd492551550d457c729c0", "difficulty": 800, "tags": ["number theory", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <string.h>\n#include <math.h>\n#include <stdio.h>\n#include <ctype.h>\nint main(){\nint n;\nint i;\nint a;\nint b;\nint c;\nint d;\nint odd;\nint even;\nint flag;\n\nscanf(\"%d\",&n);\nfor (i=0;i<n;i++){\n        scanf(\"%d\",&a);\n        scanf(\"%d\",&b);\n        scanf(\"%d\",&c);\n        scanf(\"%d\",&d);\n        odd=0;\n        even=0;\n  if(a%2==0){\n           even++;}\n           if(a%2==1){odd++;}\n           if(b%2==0){even++;}\n           if(b%2==1){odd++;}\n           if(c%2==0){even++;}\n           if(c%2==1){odd++;}\n           if(d%2==0){even++;}\n           if(d%2==1){odd++;}\n         if(a!=0&&b!=0&&c!=0){  if(even>2||odd>2){printf(\"Yes\\n\");}\n           else{printf(\"No\\n\");}}\n          else if(a==0&&b==0&&c==0){printf(\"Yes\\n\");}\n           else if(a%2+b%2+c%2+d%2==0||a%2+b%2+c%2+d%2==1){printf(\"Yes\\n\");}\n   else{printf(\"No\\n\");}\n   \n        \n}\n}", "fixed": "#include <string.h>\n#include <math.h>\n#include <stdio.h>\n#include <ctype.h>\nint main(){\nint i;\nint n;\nint a;\n\n\n\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++){\n        scanf(\"%d\",&a);\n        if(a<31){\n                printf(\"NO\\n\");\n                \n        }\n        if(a==36||a==40||a==44){\n              \n                printf(\"YES\\n6 10 15 %d\\n\",a-31);\n        }\n        else if(a>30){\n                printf(\"YES\\n6 10 14 %d\\n\",a-30);\n                \n        }\n}\n\n\n}"}
{"similarity_score": 0.9551122194513716, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "73a397d808e40ea05000e96c33edb5de", "bug_code_uid": "abc5c3469b4768cb367dd02717e955e7", "src_uid": "2a770c32d741b3440e7f78cd5670d54d", "apr_id": "75496d379167d800229f1aae1d0dd079", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int i, j;\n    int m, n;\n    scanf(\"%d%d\",&m,&n);\n\n    for(i=1;i<=m;i++) {\n        for(j=1;j<=n;j++) {\n           if(i%2!=0) printf(\"#\");\n           else {\n                if(i%4==0 && j==1) printf(\"#\");\n                else if(i%2==0 && j==n) printf(\"#\");\n                else printf(\".\");\n           }\n        }\n        printf(\"\\n\");\n    }\n    \n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int i, j;\n    int m, n;\n    scanf(\"%d%d\",&m,&n);\n\n    for(i=1;i<=m;i++) {\n        for(j=1;j<=n;j++) {\n           if(i%2!=0) printf(\"#\");\n           else {\n                if(i%2==0 && j==n && i%4!=0) printf(\"#\");\n                else if(i%4==0 && j==1) printf(\"#\");\n                else printf(\".\");\n           }\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9989615784008308, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a49f691e5c648110ae16d1c2dfe8c3f3", "bug_code_uid": "e9124c076b5cdca5a35aab9bcfb87f2f", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "358563d89d570c9f30f9ebeed80f53de", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n    long int n;\n    int flag=0;\n    long int min=1000000000,pos=0;\n    scanf(\"%ld\", &n);\n    long a[n];\n    for (long i=0; i<n; i++) {\n        scanf(\"%ld\", &a[i]);\n    }\n    for (long i=0; i<n; i++) {\n        if (min>a[i]) {\n            min = a[i];\n            pos=i;\n            flag=0;\n        }\n        else if(min==a[i]) {\n            flag=1;\n        }\n    }\n    if (flag==0) printf(\"%ld\", pos+1);\n    else printf(\"Still Rozdil\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main() {\n    long int n;\n    int flag=0;\n    long int min=10000000000,pos=0;\n    scanf(\"%ld\", &n);\n    long a[n];\n    for (long i=0; i<n; i++) {\n        scanf(\"%ld\", &a[i]);\n    }\n    for (long i=0; i<n; i++) {\n        if (min>a[i]) {\n            min = a[i];\n            pos=i;\n            flag=0;\n        }\n        else if(min==a[i]) {\n            flag=1;\n        }\n    }\n    if (flag==0) printf(\"%ld\", pos+1);\n    else printf(\"Still Rozdil\");\n    return 0;\n}"}
{"similarity_score": 0.6115241635687733, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "5702cd0abd86a70de1f88e98b3dcdae3", "bug_code_uid": "d554d63f3bc5b12f76b49efaf0cd7d1b", "src_uid": "819d3694fccf2b5af0ec3b4ee429dbb3", "apr_id": "ecd4a67de9f35e43493f5995fbbc55bb", "difficulty": 1600, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n;\nint arr[200001][2];\nint out[200001];\n\nint main()\n{\n\tint n1, n2;\n\tint buf;\n\n\tscanf(\"%d\", &n);\n\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d %d\", &arr[i][0], &arr[i][1]);\n\t}\n\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tn1 = arr[i][0];\n\t\tn2 = arr[i][1];\n\n\t\tif (arr[n1][0] == n2 || arr[n1][1] == n2)\n\t\t{\n\t\t\tout[i] = n1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tout[i] = n2;\n\t\t}\n\t}\n\n\tbuf = 1;\n\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tprintf(\"%d \", out[buf]);\n\t\tbuf = out[buf];\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint n;\nint arr[300000][2];\nint out[300000];\n\nint main()\n{\n\tint n1, n2;\n\tint buf;\n\n\tscanf(\"%d\", &n);\n\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d %d\", &arr[i][0], &arr[i][1]);\n\t}\n\n\tif (n == 3)\n\t{\n\t\tfor (int i = 1; i <= n; i++)\n\t\t{\n\t\t\tout[i] = i % n + 1;\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (int i = 1; i <= n; i++)\n\t\t{\n\t\t\tn1 = arr[i][0];\n\t\t\tn2 = arr[i][1];\n\n\t\t\tif (arr[n1][0] == n2 || arr[n1][1] == n2)\n\t\t\t{\n\t\t\t\tif (arr)\n\t\t\t\t\tout[i] = n1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tout[i] = n2;\n\t\t\t}\n\t\t}\n\t}\n\n\tbuf = 1;\n\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tprintf(\"%d \", out[buf]);\n\t\tbuf = out[buf];\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.9266187050359712, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f6980191a079dde7bab6c2447f1c3250", "bug_code_uid": "0b07fb541b67fa3c1726c5ef7c625048", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "f431cfd90bbf07e3a2693eb019ef0dbe", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,d,i,ans=0,a,x;\n    scanf(\"%d %d\",&n,&d);\n    int s[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&s[i]);\n    }\n    for(i=1;i<n;i++)\n    {\n        if(s[i]<=s[i-1])\n        {\n            a=s[i-1]-s[i];\n            x=a/d;\n            ans=ans+a+1;\n        }\n    }\n    printf(\"%d\\n\",ans);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,d,i,ans=0,a,x;\n    scanf(\"%d %d\",&n,&d);\n    int s[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&s[i]);\n    }\n    for(i=1;i<n;i++)\n    {\n        if(s[i]<=s[i-1])\n        {\n            a=s[i-1]-s[i];\n            x=a/d;\n            s[i]=s[i]+((x+1)*d);\n            ans=ans+x+1;\n        }\n    }\n    printf(\"%d\\n\",ans);\n}\n"}
{"similarity_score": 0.993485342019544, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6ca948946087511eaa1caa23ac65236d", "bug_code_uid": "93637799bd14b0a6309b094989dd93b3", "src_uid": "ad242f98f1c8eb8d30789ec672fc95a0", "apr_id": "2d1182ad475e62fff93150a819a807fb", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int ar[100];\r\n    for(int i=0;i<t;i++){\r\n        int n,l=0;\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++){\r\n        scanf(\"%d\",&ar[i]);\r\n        int czero=0;\r\n        if (ar[i]==0)\r\n          l++;\r\n    }\r\n    int csame=0;\r\n    for(int i=0;i<n;i++){\r\n        for(int j=i+1;j<n;j++){\r\n            if(ar[i]==ar[j])\r\n              csame++;\r\n        }\r\n    }\r\n    if(l!=0){\r\n        printf(\"%d\",n-l);}\r\n    else if(csame!=0){\r\n        printf(\"%d\",n);}\r\n    else{\r\n        printf(\"%d\",n+1);}\r\n}\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int ar[100];\r\n    for(int i=0;i<t;i++){\r\n        int n,l=0;\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++){\r\n        scanf(\"%d\",&ar[i]);\r\n        int czero=0;\r\n        if (ar[i]==0)\r\n          l++;\r\n    }\r\n    int csame=0;\r\n    for(int i=0;i<n;i++){\r\n        for(int j=i+1;j<n;j++){\r\n            if(ar[i]==ar[j])\r\n              csame++;\r\n        }\r\n    }\r\n    if(l!=0){\r\n        printf(\"%d\\n\",n-l);}\r\n    else if(csame!=0){\r\n        printf(\"%d\\n\",n);}\r\n    else{\r\n        printf(\"%d\\n\",n+1);}\r\n}\r\n    return 0;\r\n}"}
{"similarity_score": 0.6606334841628959, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "6a15a542d1a98bd86309c64702409cbe", "bug_code_uid": "5faad181d33a39879b17c6778d5b28f1", "src_uid": "178876bfe161ba9ccfd80c9310f75cbc", "apr_id": "988b506e1bb851d88a7a53efe60e6457", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int x,n;\n    scanf(\"%d\",&x);\n    while(x--)\n    {\n        scanf(\"%d\",&n);\n        if(n%4==1||n%4==3) printf(\"1\\n\");\n        else if(n%4==0) printf(\"0\\n\");\n        else printf(\"2\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int x,n;\n    scanf(\"%d\",&x);\n    while(x--)\n    {\n        scanf(\"%d\",&n);\n        if(n==2) printf(\"2\\n\");\n        else if(n%2==0) printf(\"0\\n\");\n        else printf(\"1\\n\");\n    }\n}\n"}
{"similarity_score": 0.7889221556886228, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "95db5f79171961a3d63e93bfe90d6650", "bug_code_uid": "0034cbe1dfa9c10c797c5f4d330b584d", "src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "apr_id": "835be3e98a3585f8d9fdec497deff745", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct {\n\n\tchar sign;\n\tint num;\n} Id;\n\nint main() {\n\n\tint n, i, j, entra = 0, sai = 0;\n\n\tscanf(\"%d\", &n);\n\tgetchar();\n\n\tint *v = (int*) malloc(n * sizeof(int));\n\tId *id = (Id*) malloc(n * sizeof(int));\n\n\tfor(i = 0; i < n; i++) {\n\n\t\tscanf(\"%c %d\", &id[i].sign, &id[i].num);\n\t\tgetchar();\n\n\t\tif(id[i].sign == '-') {\n\n\t\t\tv[i] = (-1)*id[i].num;\n\t\t}\n\t\telse {\n\t\t\tv[i] = id[i].num;\n\t\t}\n\t}\n\n\tfor(i = 0; i < n; i++) {\n\n\t\tif(v[i] > 0) {\n\n\t\t\tif(sai > 0)\n\t\t\t\tsai--;\n\t\t\telse\n\t\t\t\tentra++;\n\t\t}\n\n\t\tif(v[i] < 0) {\n\n\t\t\tfor(j = 0; j < i; j++) {\n\n\t\t\t\tif(v[i] == (-1)*v[j]) {\n\n\t\t\t\t\tentra--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsai++;\n\t\t\tentra++;\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\", entra);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n\n\tint n, i, j, entra = 0, sai = 0;\n\n\tscanf(\"%d\", &n);\n\tgetchar();\n\n\tchar *ch = (char*) malloc(n * sizeof(char));\n\tint *num = (int*) malloc(n * sizeof(int));\n\n\tfor(i = 0; i < n; i++) {\n\n\t\tscanf(\"%c %d\", &ch[i], &num[i]);\n\t\tgetchar();\n\n\t\tif(ch[i] == '-') {\n\n\t\t\tnum[i] = (-1)*num[i];\n\t\t}\n\t}\n\n\tfor(i = 0; i < n; i++) {\n\n\t\tif(num[i] > 0) {\n\n\t\t\tif(sai > 0)\n\t\t\t\tsai--;\n\t\t\telse\n\t\t\t\tentra++;\n\t\t}\n\n\t\tif(num[i] < 0) {\n\n\t\t\tfor(j = 0; j < i; j++) {\n\n\t\t\t\tif(num[i] == (-1)*num[j]) {\n\n\t\t\t\t\tentra--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsai++;\n\t\t\tentra++;\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\", entra);\n\n\treturn 0;\n}"}
{"similarity_score": 0.9884836852207294, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0c4f1d78773e4995f0d6d74505735bd6", "bug_code_uid": "bb154e2809d2795cb67e579002e800d5", "src_uid": "ed0a8a10e03de931856e287f9e650e1a", "apr_id": "c93275d6de9e2f16ed5ba514cbe9c2a5", "difficulty": 2200, "tags": ["binary search", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nlong long a[100005],n,m,ans;\nlong long check(long long t)\n{\n\tlong long cnt=m,s=0;\n\tfor (int i=1;i<=n;++i)\n\t{\n\t\tfor (s+=a[i];s+i>=t;)\n\t\t{\n\t\t\ts-=t-i;\n\t\t\tif (--cnt<0) return 0;\n\t\t}\n\t}\n\treturn cnt?1:s<=0;\n}\nsigned main()\n{\n\tscanf(\"%I64d%I64d\",&n,&m);\n\tint l=0,r=0;\n\tfor (int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%I64d\",a+i);\n\t\tr+=a[i];\n\t\tif (a[i]) l=i;\n\t}\n\tr+=l;n=l;\n\tfor (;l<=r;)\n\t{\n\t\tlong long mid=l+r>>1;\n\t\tif (check(mid))\n\t\t{\n\t\t\tr=mid-1;\n\t\t\tans=mid;\n\t\t}\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%I64d\\n\",ans);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nlong long a[100005],n,m,ans;\nlong long check(long long t)\n{\n\tlong long cnt=m,s=0;\n\tfor (int i=1;i<=n;++i)\n\t{\n\t\tfor (s+=a[i];s+i>=t;)\n\t\t{\n\t\t\ts-=t-i;\n\t\t\tif (--cnt<0) return 0;\n\t\t}\n\t}\n\treturn cnt?1:s<=0;\n}\nsigned main()\n{\n\tscanf(\"%I64d%I64d\",&n,&m);\n\tlong long l=0,r=0;\n\tfor (int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%I64d\",a+i);\n\t\tr+=a[i];\n\t\tif (a[i]) l=i;\n\t}\n\tr+=l;n=l;\n\tfor (;l<=r;)\n\t{\n\t\tlong long mid=l+r>>1;\n\t\tif (check(mid))\n\t\t{\n\t\t\tr=mid-1;\n\t\t\tans=mid;\n\t\t}\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%I64d\\n\",ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9640198511166254, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "9da1bf8ff25c124795bd7d1727451f95", "bug_code_uid": "55cd7e8a24020a943b83a5f68ad35d10", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "562d4b8ce35c01e10c7760b1ab31bf93", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    int i;\n    char course[n][6];\n    int found = 0;\n    scanf(\"%d\",&n);\n    for(i = 0;i<n;i++)\n    {\n        scanf(\"%s\",&course[n][6]);\n        \n        if(course[i][0]=='O'&&course[n][1]=='O'&&found == 0)\n           {\n               course[n][0] = '+';\n               course[n][1] = '+';\n               found = 1;\n           }\n          else if(course[n][3]=='O'&&course[n][4]=='O'&&found == 0)\n           {\n               course[n][3] = '+';\n               course[n][4] = '+';\n               found = 1;\n           }\n        \n    }\n    if(found == 1)\n    {\n        printf(\"YES\\n\");\n        for(i = 0;i<n;i++)\n        {\n            printf(\"%s\\n\",course[n]);\n        }\n    }\n    else\n    {\n        printf(\"NO\\n\");\n        return 0;\n    }\n    \n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    int i;\n    scanf(\"%d\",&n);\n    char course[n][6];\n    int found = 0;\n    \n    for(i = 0;i<n;i++)\n    {\n        scanf(\"%s\",&course[i]);\n        \n        if(course[i][0]=='O'&&course[i][1]=='O'&&found == 0)\n           {\n               course[i][0] = '+';\n               course[i][1] = '+';\n               found = 1;\n           }\n          else if(course[i][3]=='O'&&course[i][4]=='O'&&found == 0)\n           {\n               course[i][3] = '+';\n               course[i][4] = '+';\n               found = 1;\n           }\n        \n    }\n    if(found == 1)\n    {\n        printf(\"YES\\n\");\n        for(i = 0;i<n;i++)\n        {\n            printf(\"%s\\n\",course[i]);\n        }\n    }\n    else\n    {\n        printf(\"NO\\n\");\n        return 0;\n    }\n    \n    return 0;\n}\n\n\n\n"}
{"similarity_score": 0.9746543778801844, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "4a5e5c7b8ba0560a0c3040ad319b6492", "bug_code_uid": "5cf06dabbac0436cfca2c3263f064b37", "src_uid": "93fb13c40ab03700ef9a827796bd3d9d", "apr_id": "a5fa796cba6c26636040fd227f897deb", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n  long long t,len,a,b,i,flag,count;\r\n  char st1[200000];\r\n  scanf(\"%lld\",&t);\r\n  while(t--)\r\n  {\r\n    flag=0;\r\n    scanf(\"%lld %lld %lld\",&len,&a,&b);\r\n    scanf(\"%s\",st1);\r\n    if(b>=0)\r\n    {\r\n      printf(\"%lld\\n\",len*(a+b));\r\n    }\r\n    else{\r\n      if(st1[0]=='1')\r\n      {\r\n        count=0;\r\n        for(i=0;i<len;i++)\r\n        {\r\n          if(st1[i]=='0' && !flag)\r\n          {\r\n            count++;flag=1;\r\n          }\r\n          else{\r\n            flag=0;\r\n          }\r\n        }\r\n      }\r\n      else{\r\n        count=0;\r\n        for(i=0;i<len;i++)\r\n        {\r\n          if(st1[i]=='1' && !flag)\r\n          {\r\n            count++;flag=1;\r\n          }\r\n          else{\r\n            flag=0;\r\n          }\r\n        }\r\n      }\r\n      printf(\"%lld\\n\",(count+1)*b+len*(a));\r\n    }\r\n  }\r\n  return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n  long long t,len,a,b,i,flag,count;\r\n  char st1[200000];\r\n  scanf(\"%lld\",&t);\r\n  while(t--)\r\n  {\r\n    flag=0;\r\n    scanf(\"%lld %lld %lld\",&len,&a,&b);\r\n    scanf(\"%s\",st1);\r\n    if(b>=0)\r\n    {\r\n      printf(\"%lld\\n\",len*(a+b));\r\n    }\r\n    else{\r\n      if(st1[0]=='1')\r\n      {\r\n        count=0;\r\n        for(i=1;i<len;i++)\r\n        {\r\n          if(st1[i]=='0' && !flag)\r\n          {\r\n            count++;flag=1;\r\n          }\r\n          if(st1[i]=='1'){\r\n            flag=0;\r\n          }\r\n        }\r\n      }\r\n      else{\r\n        count=0;\r\n        for(i=1;i<len;i++)\r\n        {\r\n          if(st1[i]=='1' && !flag)\r\n          {\r\n            count++;flag=1;\r\n          }\r\n          if(st1[i]=='0'){\r\n            flag=0;\r\n          }\r\n        }\r\n      }\r\n      printf(\"%lld\\n\",((count+1)*b+len*(a)));\r\n    }\r\n  }\r\n  return 0;\r\n}"}
{"similarity_score": 0.9130938586326767, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "a38cd4f3d497bc08b06aa9cada5f5ee8", "bug_code_uid": "f3c2fc798a4a63d251b5b1d00cf27fd8", "src_uid": "6d7364048428c70e0e9b76ab1eb8cc34", "apr_id": "2ef178aa033d5c50146f666030f80cf2", "difficulty": 1200, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include \"stdio.h\"\n#include \"string.h\"\nint main()\n{\n\tint n,m,i,j,c,b,happy=0;\n\tscanf(\"%d%d\",&n,&m);\n\tint a[n],count[n];\n\tmemset(count,0,sizeof(count));\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d%d\",&b,&c);\n\t\tfor(j=b-1;j<c;j++)\n\t\t\tcount[j]++;\n\t}\n\t// for(i=0;i<n;i++)\n\t// \tprintf(\"%d\\n\",count[i]);\n\tfor(i=0;i<n;i++)\n\t\thappy+=(count[i]-1)*a[i];\n\tprintf(\"%d\\n\",happy);\n\treturn 0;\n}", "fixed": "#include \"stdio.h\"\n#include \"string.h\"\nint main()\n{\n\tint n,m,i,j,c,b,happy=0,sum;\n\tscanf(\"%d%d\",&n,&m);\n\tint a[n],count[n];\n\tmemset(count,0,sizeof(count));\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<m;i++)\n\t{\n\t\tsum=0;\n\t\tscanf(\"%d%d\",&b,&c);\n\t\tfor(j=b-1;j<c;j++)\n\t\t{\n\t\t\tsum+=a[j];\n\t\t}\n\t\tif(sum>0)\n\t\t\thappy+=sum;\n\t}\n\t// for(i=0;i<n;i++)\n\t// \tprintf(\"%d\\n\",count[i]);\n\t// for(i=0;i<n;i++)\n\t// \thappy+=(count[i])*a[i];\n\tprintf(\"%d\\n\",happy);\n\treturn 0;\n}"}
{"similarity_score": 0.998, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "87a5195cc0d9c64bd7e4081f915a0086", "bug_code_uid": "f39d8c350cceba0f8179ae020096d894", "src_uid": "fbde86a29f416b3d83bcc63fb3776776", "apr_id": "52e15b61cd275e380e9215b04d5b1550", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n    {\n        int i,n,a=1;\n        char ch;\n\n        scanf(\"%d\",&n);\n\n        for(i=1;i<=n;i++)\n        {\n            if(i==1)\n                printf(\"a\");\n            else if(i==2)\n                printf(\"a\");\n            else if(i==3)\n                printf(\"b\");\n            else if(i==4)\n                printf(\"c\");\n\n            if(i==4)\n            {\n                i=0;\n                n-=4;\n            }\n        }\n        printf(\"\\n\");\n\n        return 0;\n    }\n", "fixed": "#include<stdio.h>\nint main()\n    {\n        int i,n,a=1;\n        char ch;\n\n        scanf(\"%d\",&n);\n\n        for(i=1;i<=n;i++)\n        {\n            if(i==1)\n                printf(\"a\");\n            else if(i==2)\n                printf(\"a\");\n            else if(i==3)\n                printf(\"b\");\n            else if(i==4)\n                printf(\"b\");\n\n            if(i==4)\n            {\n                i=0;\n                n-=4;\n            }\n        }\n        printf(\"\\n\");\n\n        return 0;\n    }\n"}
{"similarity_score": 0.9754871150219987, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "f1917ba7d7d732a98cff1822d2ecab50", "bug_code_uid": "5a3c9b92a0c1504a62c9d629cb6c7963", "src_uid": "f577695d39a11e8507681f307677c883", "apr_id": "d270cd8d84eef408b20909ea522947ec", "difficulty": 800, "tags": ["brute force", "constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nvoid sort(long long *b,long long l,long long h)\r\n{\r\n\tif(l>=h)\treturn ;\r\n\tlong long i=l,j=h,k=b[l];\r\n\twhile(i<j)\r\n\t{\r\n\t\twhile(i<j&&b[j]>=k)\r\n\t\t{\r\n\t\t\tj--;\r\n\t\t}\r\n\t\tif(i<j)\r\n\t\tb[i]=b[j],i++;\r\n\t\twhile(i<j&&b[i]<k)\r\n\t\t{\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tif(i<j)\r\n\t\tb[j]=b[i],j--;\r\n\t}\r\n\tb[i]=k;\r\n\tsort(b,l,i-1);\r\n\tsort(b,i+1,h);\r\n\t\r\n\t\r\n}\r\n\r\nint main()\r\n{\r\n\tlong long t,i,j,s1=0,s2=0;\r\n\tscanf(\"%lld\",&t);\r\n\tlong long n,l,r,k;\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tscanf(\"%lld %lld %lld %lld\",&n,&l,&r,&k);\r\n\t\tlong long b[n];\r\n\t\tfor(j=0;j<n;j++)\tscanf(\"%lld\",&b[j]);\r\n\t\tsort(b,0,n);\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tif(b[j]>=l)\tbreak;\r\n\t\t} \r\n\t\tif(j==n) goto next;\r\n\t\ts2+=b[j];\r\n\t\twhile(b[j]<=r&&s2<=k)\r\n\t\t{\r\n\t\t\ts1++,s2+=b[++j];\r\n\t\t}\t\r\nnext:\t\tprintf(\"%lld\\n\",s1);\r\n\t\ts1=0,s2=0;\r\n\t\t\r\n\t}\r\n\t\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nvoid sort(long long *b,long long l,long long h)\r\n{\r\n\tif(l>=h)\treturn ;\r\n\tlong long i=l,j=h,k=b[l];\r\n\twhile(i<j)\r\n\t{\r\n\t\twhile(i<j&&b[j]>=k)\r\n\t\t{\r\n\t\t\tj--;\r\n\t\t}\r\n\t\tif(i<j)\r\n\t\tb[i]=b[j],i++;\r\n\t\twhile(i<j&&b[i]<k)\r\n\t\t{\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tif(i<j)\r\n\t\tb[j]=b[i],j--;\r\n\t}\r\n\tb[i]=k;\r\n\tsort(b,l,i-1);\r\n\tsort(b,i+1,h);\r\n\t\r\n\t\r\n}\r\n\r\nint main()\r\n{\r\n\tlong long t,i,j,s1=0,s2=0;\r\n\tscanf(\"%lld\",&t);\r\n\tlong long n,l,r,k;\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tscanf(\"%lld %lld %lld %lld\",&n,&l,&r,&k);\r\n\t\tlong long b[n];\r\n\t\tfor(j=0;j<n;j++)\tscanf(\"%lld\",&b[j]);\r\n\t\tsort(b,0,n-1);\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tif(b[j]>=l)\tbreak;\r\n\t\t} \r\n\t\tif(j==n) goto next;\r\n\t\ts2+=b[j];\r\n\t\twhile(b[j]<=r&&s2<=k&&j<n)\r\n\t\t{\r\n\t\t\ts1++;\r\n\t\t\tj++;\r\n\t\t\tif(j<n)\r\n\t\t\ts2+=b[j];\r\n\t\t}\t\r\nnext:\t\tprintf(\"%lld\\n\",s1);\r\n\t\ts1=0,s2=0;\r\n\t\t\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9935691318327974, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2b1fbfc02f44d8ca0b332db65f4a6492", "bug_code_uid": "f72cb3723e5c3b02828f9d0985c62348", "src_uid": "8b50a0eb2e1c425455b132683d3e6047", "apr_id": "5c2d9ee8a0553411d728da71020feabc", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t;\n    scanf (\"%d\",&t);\n    long long int a[2][1001];\n    for (int i = 0; i < t; i++)\n    {\n        scanf (\"%lld %lld\",&a[0][i],&a[1][i]);\n        \n    }\n    for (int i = 0; i < t; i++)\n    {\n        if (a[0][i]<=2)\n        {\n            printf (\"%d\\n\",1);\n        }\n        else\n        {\n            if ((a[0][i]-2)%2==0)\n            {\n                printf (\"%d\\n\",(a[0][i]-2)/a[1][i]+1);\n            }\n            else\n            {\n                printf (\"%d\\n\",(a[0][i]-2)/a[1][i]+2);\n            }\n            \n        }\n        \n        \n    }\n    return 0;\n    \n    \n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int t;\n    scanf (\"%d\",&t);\n    long long int a[2][1001];\n    for (int i = 0; i < t; i++)\n    {\n        scanf (\"%lld %lld\",&a[0][i],&a[1][i]);\n        \n    }\n    for (int i = 0; i < t; i++)\n    {\n        if (a[0][i]<=2)\n        {\n            printf (\"%d\\n\",1);\n        }\n        else\n        {\n            if ((a[0][i]-2)%a[1][i]==0)\n            {\n                printf (\"%d\\n\",(a[0][i]-2)/a[1][i]+1);\n            }\n            else\n            {\n                printf (\"%d\\n\",(a[0][i]-2)/a[1][i]+2);\n            }\n            \n        }\n        \n        \n    }\n    return 0;\n    \n    \n}"}
{"similarity_score": 0.8287401574803149, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "f0e53ef2b4cd8bbea06ed406aa1510e9", "bug_code_uid": "c7c98edec5e01bb735d2de76199a7fa3", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "bc99baf9f4476a72745324771232d3ac", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int a[10000];\n     int n,i,count=0,back=0,min;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n\n    }\n    min=a[0];\n    for(i=1;i<n;i++)\n{\n    if(a[i]<min)\n    {\n        min=a[i];\n        count++;\n    }\n    else if(a[i]==min)\n    {\n        back++;\n    }\n}\n     if(back==0)\n     {\n         printf(\"%d\",count);\n     }\n     else if(back>0)\n     {\n         printf(\"still rozdil\");\n     }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n     int a[100005];\n     int n,i,count=1,back=0,min,m;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n\n    }\n    min=a[0];\n    for(i=1;i<n;i++)\n{\n    if(a[i]<min)\n    {\n        min=a[i];\n        count=i+1;\n    }\n    else if(a[i]==min)\n    {\n        back++;\n        m=a[i];\n    }\n}\n     if(back==0)\n     {\n         printf(\"%d\",count);\n     }\n     else if(back>0 && min==m)\n     {\n         printf(\"Still Rozdil\");\n     }\n     else if(back>0 && min!=m)\n     {\n         printf(\"%d\",count);\n     }\n     return 0;\n}\n"}
{"similarity_score": 0.854788877445932, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "7631a03d89d1bf55ac208bdabc1c0240", "bug_code_uid": "8fa3e5508ef392febccc72d2f2d74b44", "src_uid": "3bbe48918a7bf3faf01c74cb7296f6e0", "apr_id": "eab1e7cf5e5fa76892f1e8f38d7a7bb8", "difficulty": 800, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main()\n{\n    int a,b,c[100],d[100],i;\n    double res=0,smallest=0,result=0,p,q;\n    scanf(\"%d%d\",&a,&b);\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d%d\",&c[i],&d[i]);\n       \n    }\n    smallest = (double)c[0]/d[0];\n    for(i=1;i<a;i++)\n    {\n        if((double)c[i]/d[i]<smallest)\n        {\n            smallest = (double)c[i]/d[i];\n        }\n        \n    }\n    result=smallest*b;\n    printf(\"%0.8f\",result);\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int a,b,i;\n    double res=0,smallest=0,result=0,p,q;\n    scanf(\"%d%d\",&a,&b);\n    int* c = (int *)malloc(a*sizeof(int));\n    int* d = (int *)malloc(a*sizeof(int));\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d%d\",&c[i],&d[i]);\n       \n    }\n\n    smallest = (double)c[0]/d[0];\n    for(i=1;i<a;i++)\n    {\n        if((double)c[i]/d[i]<smallest)\n        {\n            smallest = (double)c[i]/d[i];\n        }\n        \n    }\n    result=smallest*b;\n    printf(\"%0.8f\",result);\n    return 0;\n}"}
{"similarity_score": 0.9956331877729258, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c3324cf1a93dbe7e76e3f30c47371814", "bug_code_uid": "8cc5e4a9530accd49c5979e2c93c4218", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "4437e35b53f45a670ac0e5b9662a0c87", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\t\tlong long int n,m,a[100],i,d=0;\n\t\tscanf(\"%lld %lld\",&n,&m);\n\t\tfor(i=0;i<m;i++)\n\t\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t\t}\n\t\td=a[0]-1;\n\t\tfor(i=0;i<m-1;i++)\n\t\t{\n\t\tif(a[i]>a[i+1])\n\t\t{\n\t   d=d+n-a[i]+a[i+1];\n\t\t}\n\t   \n\t    else if(a[i]<a[i+1])\n\t    {\n\t    d=d+a[i+1]-a[i];\n\t    }\n\t   \n\t    \t}\n\t\t\n\t\tprintf(\"%lld\\n\",d);\n\t\t\n\t\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\t\tlong long int n,m,a[100000],i,d=0;\n\t\tscanf(\"%lld %lld\",&n,&m);\n\t\tfor(i=0;i<m;i++)\n\t\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t\t}\n\t\td=a[0]-1;\n\t\tfor(i=0;i<m-1;i++)\n\t\t{\n\t\tif(a[i]>a[i+1])\n\t\t{\n\t   d=d+n-a[i]+a[i+1];\n\t\t}\n\t   \n\t    else if(a[i]<a[i+1])\n\t    {\n\t    d=d+a[i+1]-a[i];\n\t    }\n\t   \n\t    \t}\n\t\t\n\t\tprintf(\"%lld\\n\",d);\n\t\t\n\t\n}\n"}
{"similarity_score": 0.9467005076142132, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "f0f5bd5ecfb0e604436f33ff7b74da0c", "bug_code_uid": "4e508a7f8c60bc6ef2758886332094f8", "src_uid": "16c016c0735be1815c7b94c5c50516f1", "apr_id": "9834ad4f7b6638e449acd59f414fbd63", "difficulty": 1700, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define mod 1000000007\nint main()\n{\n\tint n,k,a,b,arr[100005],i;\n\tscanf(\"%d %d\",&n,&k);\n\tarr[0]=0;\n\tfor(i=1;i<=100000;i++)\n\t\tif(i==k)\n\t\t\tarr[i]=2;\n\t\telse if(i<k)\n\t\t\tarr[i]=1;\n\t\telse\n\t\t\tarr[i]=(arr[i-k]+arr[i-1])%mod;\n\tfor(i=1;i<=100000;i++)\n\t\tarr[i]=(arr[i-1]+arr[i])%mod;\n\twhile(n--)\n\t{\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tprintf(\"%d\\n\",arr[b]-arr[a-1]);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define mod 1000000007\nint main()\n{\n\tlong long int n,k,a,b,arr[100005],i;\n\tscanf(\"%lld %lld\",&n,&k);\n\tarr[0]=0;\n\tfor(i=1;i<=100000;i++)\n\t\tif(i==k)\n\t\t\tarr[i]=2;\n\t\telse if(i<k)\n\t\t\tarr[i]=1;\n\t\telse\n\t\t\tarr[i]=(arr[i-k]+arr[i-1])%mod;\n\tfor(i=1;i<=100000;i++)\n\t\tarr[i]=(arr[i-1]+arr[i])%mod;\n\twhile(n--)\n\t{\n\t\tscanf(\"%lld %lld\",&a,&b);\n\t\tprintf(\"%lld\\n\",(arr[b]-arr[a-1]+mod)%mod);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9952380952380953, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b9fd99238e99745bb648cb29af29aed3", "bug_code_uid": "027dbde9f8454ac19af01db3d4463054", "src_uid": "df94080c5b0b046af2397cafc02b5bdc", "apr_id": "49fd7a315f8b3f661e9303dd389f93c4", "difficulty": 1000, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t,n,a[100],i=0,k=0;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tif(a[i]==1)\n\t\tk++;\n\t}\n\t\tif(k==0)\n\t\tprintf(\"1\");\n\t\telse\n\t\tprintf(\"-1\");\n\t\n\t}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,n,a[10000],i=0,k=0;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tif(a[i]==1)\n\t\tk++;\n\t}\n\t\tif(k==0)\n\t\tprintf(\"1\");\n\t\telse\n\t\tprintf(\"-1\");\n\t\n\t}"}
{"similarity_score": 0.23737373737373738, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "6e978f13e2eb0c6e2663499ab83800ee", "bug_code_uid": "639d76a928afb561253e1cd7fa73ade9", "src_uid": "edf394051c6b35f593abd4c34b091eae", "apr_id": "9290b96f3854bc52ed66c59fb85ed905", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n//to check which payment is less\nint check_payment(int x,int y,int a,int b){\n    int sum1=0,sum2=0,payment_1=0,payment_2=0;\n    int d;\n    while(y--){\n        sum1++;\n        x--;\n    }\n    while(x--) sum2++;\n    payment_1=b*(sum1)+a*(sum2);\n    while(y--) sum1++;\n    while(x--) sum1++;\n    payment_2=a*sum1;\n    d=min(payment_1,payment_2);\n    return d;\n}\nint main(){\n    int t,x,y,a,b;\n    int payment_1,payment_2,total_payment,sum1,sum2;\n    int difference;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d %d\\n\",&x,&y);\n        scanf(\"%d %d\\n\",&a,&b);\n        if(x==0&&y==0) total_payment=0;\n        else if(x==0||y==0){\n            difference=abs(x-y);\n            total_payment=a*(difference);\n        }\n        else if(x>y) total_payment=check_payment(x,y,a,b);\n        else if(x<y) total_payment=check_payment(y,x,a,b);\n        printf(\"%d\\n\",total_payment);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int  a,b,x,y,t;\n    scanf(\"%d\\n\",&t);\n    while(t--){\n        long long unsigned lesser_no,greater_no;\n        scanf(\"%d %d\\n\",&x,&y);\n        scanf(\"%d %d\\n\",&a,&b);\n        long long unsigned money1,money2,money;\n        if(x==0 && y==0) money=0;\n        if(x>=y){\n            lesser_no=y;\n            greater_no=x;\n        }\n        if(x<y){\n            lesser_no=x;\n            greater_no=y;\n        }\n        money1=(lesser_no+greater_no)*a;\n        money2=(lesser_no)*b+(greater_no-lesser_no)*a;\n        if(money1<money2) money=money1;\n        else money=money2;\n        printf(\"%llu\\n\",money);\n    }\n    return 0;\n}"}
{"similarity_score": 0.7268170426065163, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "82dfe983cae4f70dc6eab12e44c81374", "bug_code_uid": "139a86f9a20cbe7c0d69cf3a8a2308b4", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "b46bf814a7c65be99fce671566ab22ff", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nint main()\n{\n\tint a,b;\n\tint k,m,i,j;\n\tscanf(\"%d %d\",&a,&b);\n\tscanf(\"%d %d\",&k,&m);\n\tint num1[a],num2[b];\n\tfor(i=0;i<a;i++)\n\t{\n\t\tscanf(\"%d\",&num1[i]);\n\t\t\n\t}\n\tfor(i=0;i<b;i++)\n\t{\n\t\tscanf(\"%d\",&num2[i]);\n\t\n\t}\n\tfor(i=0;i<k;i++)\n\t{\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tif(num1[i]>num2[j])\n\t\t\t{\n\t\t\t\tprintf(\"NO\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"YES\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nint main()\n{\n\tint a,b;\n\tint k,m,i,j;\n\tscanf(\"%d %d\",&a,&b);\n\tscanf(\"%d %d\",&k,&m);\n\tint num1[a],num2[b];\n\tfor(i=0;i<a;i++)\n\t{\n\t\tscanf(\"%d\",&num1[i]);\n\n\t}\n\tfor(i=0;i<b;i++)\n\t{\n\t\tscanf(\"%d\",&num2[i]);\n\n\t}\n\tif(num1[k-1]<num2[b-m])\n    {\n        printf(\"YES\");\n    }\n        else\n        {\n            printf(\"NO\");\n        }\n\treturn 0;\n}"}
{"similarity_score": 0.95260663507109, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f43699366b316f3f3e5c75646c95827f", "bug_code_uid": "d589c36c6728d21435482836ef6939bf", "src_uid": "23ef311011b381d0ca2e84bc861f0a31", "apr_id": "b34388093fe750003855c47399bc440b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main() {\r\n  int t;\r\n  scanf(\"%d\", &t);\r\n  while (t--) {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    int t[200] = {}, temp;\r\n    for (int i = 0; i < n; i++) {\r\n      scanf(\"%d\", &temp);\r\n      if (t[abs(temp)] < 2) t[abs(temp)]++;\r\n    }\r\n    int ans = 0;\r\n    for (int i = 0; i < 200; i++)\r\n      ans += t[i];\r\n    printf(\"%d\\n\", ans);\r\n  }\r\n\r\n  return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main() {\r\n  int t;\r\n  scanf(\"%d\", &t);\r\n  while (t--) {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    int t[200] = {}, temp;\r\n    for (int i = 0; i < n; i++) {\r\n      scanf(\"%d\", &temp);\r\n      if (t[abs(temp)] < 2) t[abs(temp)]++;\r\n    }\r\n    int ans = 0;\r\n    for (int i = 0; i < 200; i++)\r\n      if (i == 0 && t[i]) ans++; \r\n      else ans += t[i];\r\n    printf(\"%d\\n\", ans);\r\n  }\r\n\r\n  return 0;\r\n}\r\n"}
{"similarity_score": 0.9984101748807631, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "82a669b77448f484414c9a95965c58a3", "bug_code_uid": "096f0314a396ddcb7a8b33229c17184b", "src_uid": "7eff98fbcf4e4a3284e2d2f98351fe4a", "apr_id": "8935887f02d35ae2fde75e19a13fd007", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() \n{\n\tunsigned n, mem;\n\tscanf(\"%u\\n\", &n);\n\tchar s[7];\n\tchar names[6][7] = {\"Time\", \"Mind\", \"Soul\", \"Power\", \"Reality\", \"Space\"};\n\tunsigned score[6] = {0, 0, 0, 0, 0, 0};\n\n\tfor (unsigned i = 0; i < n; i++) \n\t{\n\t\tscanf(\"%s\", s);\n\t\tswitch (s[0]) \n\t\t{\n\t\t\tcase 'p' : score[3] = 1; break;\n\t\t\tcase 'g' : score[0] = 1; break;\n\t\t\tcase 'b' : score[5] = 1; break;\n\t\t\tcase 'o' : score[2] = 1; break;\n\t\t\tcase 'r' : score[4] = 1; break;\n\t\t\tcase 'y' : score[1] = 1; break;\t\t\n\t\t}\n\t}\n\t\n\tprintf(\"%u\\n\", (6 - n));\n\tfor (unsigned i = 0; i < 6; i++) \n\t{\n\t\tif (score[i] == 0)\n\t\t\tprintf(\"%s\\n\", names[i]);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() \n{\n\tunsigned n, mem;\n\tscanf(\"%u\\n\", &n);\n\tchar s[7];\n\tchar names[6][8] = {\"Time\", \"Mind\", \"Soul\", \"Power\", \"Reality\", \"Space\"};\n\tunsigned score[6] = {0, 0, 0, 0, 0, 0};\n\n\tfor (unsigned i = 0; i < n; i++) \n\t{\n\t\tscanf(\"%s\", s);\n\t\tswitch (s[0]) \n\t\t{\n\t\t\tcase 'p' : score[3] = 1; break;\n\t\t\tcase 'g' : score[0] = 1; break;\n\t\t\tcase 'b' : score[5] = 1; break;\n\t\t\tcase 'o' : score[2] = 1; break;\n\t\t\tcase 'r' : score[4] = 1; break;\n\t\t\tcase 'y' : score[1] = 1; break;\t\t\n\t\t}\n\t}\n\t\n\tprintf(\"%u\\n\", (6 - n));\n\tfor (unsigned i = 0; i < 6; i++) \n\t{\n\t\tif (score[i] == 0)\n\t\t\tprintf(\"%s\\n\", names[i]);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.7732919254658385, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "db5b6d34dc7eca05300e1a66582436d4", "bug_code_uid": "6be4d4d89808f6b02de3ac7cc6705077", "src_uid": "c457b77b16d94c6c4c95b7403a1dd0c7", "apr_id": "f0baafd2db7e3ef53897d56ed117bdad", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main()\n{\n    int q, n, s, i, j;\n    scanf(\"%d\",&q);\n    for(i=0; i<q; i++)\n    {\n        scanf(\"%d\",&n);\n        int A[n];\n        s=0;\n        for(j=0; j<n; j++)\n           s += scanf(\"%d\",&A[j]);\n        printf(\"%d\\n\",int(s/n));\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int q, n, s, i, j;\n    scanf(\"%d\",&q);\n    for(i=0; i<q; i++)\n    {\n        scanf(\"%d\",&n);\n        int A[n];\n        s=0;\n        for(j=0; j<n; j++)\n            scanf(\"%d\",&A[j]);\n        for(j=0; j<n; j++)\n           s += A[j];\n        if(s%n==0)\n           printf(\"%d\\n\",s/n);\n        else\n           printf(\"%d\\n\",s/n+1);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.803475935828877, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "5d56ef176502d301761daba93bf7f37a", "bug_code_uid": "245cb850583a607125d78534173458da", "src_uid": "8bbec86e427e26158393bbfbf1a067fe", "apr_id": "7753231b44cc2bdae6d8015757024a1d", "difficulty": 1100, "tags": ["binary search", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t,a,b;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        scanf(\"%lld%lld\",&a,&b);\n        if(a==0 || b==0)\n            printf(\"0\\n\");\n        else\n        {\n            if(a>=b)\n            {\n                if((a+b)/3>b)\n                    printf(\"%lld\\n\",b);\n                else\n                    printf(\"%lld\\n\",(a+b)/3);\n            }\n            else\n            {\n                if((a+b)/3>a)\n                    printf(\"%lld\\n\",b);\n                else\n                    printf(\"%lld\\n\",(a+b)/3);\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int t,a,b;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        scanf(\"%lld%lld\",&a,&b);\n        if(a==0 || b==0)\n            printf(\"0\\n\");\n        else\n        {\n            if(a>=b)\n            {\n                if((a+b)/3>b)\n                {\n                    if(a/2<b)\n                        printf(\"%lld\\n\",a/2);\n                    else\n                        printf(\"%lld\\n\",b);\n                }\n                else\n                    printf(\"%lld\\n\",(a+b)/3);\n            }\n            else\n            {\n                if((a+b)/3>a)\n                {\n                    if(b/2<a)\n                        printf(\"%lld\\n\",b/2);\n                    else\n                        printf(\"%lld\\n\",a);\n                }\n                else\n                    printf(\"%lld\\n\",(a+b)/3);\n            }\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8176100628930818, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "b955b881f5bd2dd33443e65126af4b02", "bug_code_uid": "29fe4d5024758d65222f42e42769fdc5", "src_uid": "39f5e934bf293053246bd3faa8061c3b", "apr_id": "f549c0e123a581bfa4e4475503e053c0", "difficulty": 800, "tags": ["implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,k;\n    scanf(\"%d %d\",&n,&k);\n    char s[n];\n    for(int i=0;i<n;i++)\n    {\n        s[i]=97+(i%k);\n    }\n    printf(\"%s\",s);\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,k;\n    scanf(\"%d %d\",&n,&k);\n    for(int i=0;i<n;i++)\n    {\n        printf(\"%c\",'a'+i%k);\n        \n    }\n\n}"}
{"similarity_score": 0.7559808612440191, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "e1d2d0c17c4736cc842e64e13e0f7626", "bug_code_uid": "8b258ecaf0c78616893fe19e72aca249", "src_uid": "0ac2a0954fe43d66eac32072c8ea5070", "apr_id": "722ee9932b0ab641516c327d3a9dabbe", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\n\n\n\n\nvoid main() {\n\tint n,j,i,p,k;\n\tscanf(\"%d\",&n);\n\tp=0; k =1;\n\tfor(i=1;i<=n; i++)\n\t{\n\t\tfor(j=0;j<n/2;j++) { printf(\"%d %d \",k+j,n*n-p); p++; }\n\t\tk+= n/2;\n\t\tprintf(\"\\n\");\n\t}\n}\n", "fixed": "#include <stdio.h>\nmain() {\n    int n,j,i,p,k;\n    scanf(\"%d\",&n);\n    p=0; k =1;\n    for(i=1;i<=n; i++)\n    {\n        for(j=0;j<n/2;j++) { printf(\"%d %d \",k+j,n*n-p); p++; }\n        k+= n/2;\n        printf(\"\\n\");\n    }\n}"}
{"similarity_score": 0.972193614830072, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "39f187bfa6e1192a04cb6d317f1934ff", "bug_code_uid": "214a6a1f7c931c69d1bdf2bac43d6fbd", "src_uid": "48f3ff32a11770f3b168d6e15c0df813", "apr_id": "4b9494743a072a5472c0f820c0e118a8", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint compare(const void * a, const void * b){return *(int *)a-*(int *)b;}\nint main()\n{\n\tint i,n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tint add=0;\n\tint a[1000000];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\twhile(m--)\n\t{\n\t\tint v;\n\t\tscanf(\"%d\",&v);\n\t\tif(v==1)\n\t\t{\n\t\t\tscanf(\"%d\",&v);\n\t\t\tscanf(\"%d\",&i);\n\t\t\ta[v-1]=i;\n\t\t}\n\t\telse if(v==2)\n\t\t{\n\t\t\tscanf(\"%d\",&v);\n\t\t\tadd+=v;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d\",&v);\n\t\t\tprintf(\"%d\\n\",a[v-1]+add);\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint compare(const void * a, const void * b){return *(int *)a-*(int *)b;}\nint main()\n{\n\tint i,n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tint add=0;\n\tint a[1000000];\n\t//int ad[1000000]={0}\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\twhile(m--)\n\t{\n\t\tint v;\n\t\tscanf(\"%d\",&v);\n\t\tif(v==1)\n\t\t{\n\t\t\tscanf(\"%d\",&v);\n\t\t\tscanf(\"%d\",&i);\n\t\t\ta[v-1]=i-add;\n\t\t}\n\t\telse if(v==2)\n\t\t{\n\t\t\tscanf(\"%d\",&v);\n\t\t\tadd+=v;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d\",&v);\n\t\t\tprintf(\"%d\\n\",a[v-1]+add);\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9964982491245623, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d0d8677590ad76501a81b8f0df3999cb", "bug_code_uid": "caeda74ae5f9612f4b27af986471d8ec", "src_uid": "a7e75ff150d300b2a8494dca076a3075", "apr_id": "bc5f4097645ff53c2453e62133e77b5d", "difficulty": 1400, "tags": ["dsu", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <limits.h>\n#include <stdbool.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define N 555555\nint n, m, k, x, y, parent[N], size[N], rank[N];\nint find(int val){\n    return parent[val]==val?val:(parent[val]=find(parent[val]));\n}\nvoid merge(int a, int b){\n    int root_a=find(a), root_b=find(b);\n    if (root_a!=root_b){\n        if (rank[root_a]>rank[root_b])\n            parent[root_b]=root_a,\n            size[root_a]+=size[root_b],\n            rank[root_a]++;\n        else\n            parent[root_a]=root_b,\n            size[root_b]+=size[root_a],\n            rank[root_b]++;\n    }\n}\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    for (int i=0; i<=n; i++)\n        parent[i]=i, size[i]=rank[i]=1;\n    while (m--){\n        scanf(\"%d\", &k);\n        if (k==0)\n            continue;\n        scanf(\"%d\", &x);\n        for (int i=1; i<k; i++){\n            scanf(\"%d\", &y);\n            merge(x, y);\n        }\n    }\n    for (int i=1; i<=n; i++)\n        printf(\"%d \", size[parent[i]]);\n}\n", "fixed": "#include <limits.h>\n#include <stdbool.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define N 555555\nint n, m, k, x, y, parent[N], size[N], rank[N];\nint find(int val){\n    return parent[val]==val?val:(parent[val]=find(parent[val]));\n}\nvoid merge(int a, int b){\n    int root_a=find(a), root_b=find(b);\n    if (root_a!=root_b){\n        if (rank[root_a]>rank[root_b])\n            parent[root_b]=root_a,\n            size[root_a]+=size[root_b],\n            rank[root_a]++;\n        else\n            parent[root_a]=root_b,\n            size[root_b]+=size[root_a],\n            rank[root_b]++;\n    }\n}\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    for (int i=0; i<=n; i++)\n        parent[i]=i, size[i]=rank[i]=1;\n    while (m--){\n        scanf(\"%d\", &k);\n        if (k==0)\n            continue;\n        scanf(\"%d\", &x);\n        for (int i=1; i<k; i++){\n            scanf(\"%d\", &y);\n            merge(x, y);\n        }\n    }\n    for (int i=1; i<=n; i++)\n        printf(\"%d \", size[find(parent[i])]);\n}"}
{"similarity_score": 0.523517382413088, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "0feb14c1e7c35726ff72c9f6d884c4a1", "bug_code_uid": "d0c9bc390e09dea19c0522b124ab4f32", "src_uid": "8e4194b356500cdaacca2b1d49c2affb", "apr_id": "7b2887f26c7bed90bdb4ebe897810fa4", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n\tlong long T,res,count;\r\n\tscanf(\"%lld\",&T);\r\n\twhile(T--){\r\n\t\tcount=0;\r\n\t\tlong long n;\r\n\t\tscanf(\"%lld\",&n);\r\n\t\tfor(long long i=9;i<=n;i++){\r\n\t\tif((i+1)%10==0){\r\n\t\t\tcount++;\r\n\t\t}\t\t\r\n\t}\r\n\t\tprintf(\"%lld\\n\",count);\t\t\r\n\t}\t\r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n\tlong long T;\r\n\tscanf(\"%lld\",&T);\r\n\twhile(T--){\r\n\t\tlong long n,res,rem;\r\n\t\tscanf(\"%lld\",&n);\r\n\t\trem=n%10;\r\n\t\tif(rem==9){\r\n\t\t\tres=n/10+1;\r\n\t\t}\t\t\r\n\telse{\r\nres=n/10;\r\n\t\t\t\t\r\n\t}\r\n\tprintf(\"%lld\\n\",res);\r\n\t}\t\r\n}"}
{"similarity_score": 0.9750623441396509, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2b9e686c87d9f21fc2e99a30125a7b87", "bug_code_uid": "2179313e0cc3cd1433e08295de1b87eb", "src_uid": "38fe0e19974a7bc60153793b9060369a", "apr_id": "5619cc0881e6a20dc67c77728a59b076", "difficulty": 1500, "tags": ["two pointers", "binary search", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define max_s(a,b) a > b ? a : b\n\ntypedef struct friend {\n\tint cash;\n\tint friendliness;\n} friend;\n\nint compare(const void *a, const void *b) {\n\treturn ((friend*)a)->cash - ((friend*)b)->cash;\n}\n\nint main() {\n\tint n, d;\n\tint max = 0;\n\tint sum = 0;\n\tint j = 0;\n\tfriend friends[100000];\n\t\n\tscanf(\"%d%d\", &n, &d);\n\t\n\tfor (int i = 0; i < n; i++)\n\t\tscanf(\"%d%d\", &friends[i].cash, &friends[i].friendliness);\n\t\n\tqsort(friends, n, sizeof(friend), compare);\n\t\n\tfor (int i = 0; i < n; i++) {\n\t\twhile ((friends[j].cash - friends[i].cash) < d && j < n) {\n\t\t\tsum += friends[j].friendliness;\n\t\t\tj++;\n\t\t}\n\t\t\n\t\tmax = max_s(max, sum);\n\t\t\n\t\tif ((friends[j].cash - friends[i].cash) >= d)\n\t\t\tsum -= friends[i].friendliness;\n\t}\n\t\n\tprintf(\"%d\", max);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define max_s(a,b) a > b ? a : b\n\ntypedef struct friend {\n\tint cash;\n\tint friendliness;\n} friend;\n\nint compare(const void *a, const void *b) {\n\treturn ((friend*)a)->cash - ((friend*)b)->cash;\n}\n\nint main() {\n\tint n, d;\n\tunsigned long long int max = 0;\n\tunsigned long long int sum = 0;\n\tint j = 0;\n\tfriend friends[100000];\n\t\n\tscanf(\"%d%d\", &n, &d);\n\t\n\tfor (int i = 0; i < n; i++)\n\t\tscanf(\"%d%d\", &friends[i].cash, &friends[i].friendliness);\n\t\n\tqsort(friends, n, sizeof(friend), compare);\n\t\n\tfor (int i = 0; i < n; i++) {\n\t\twhile ((friends[j].cash - friends[i].cash) < d && j < n) {\n\t\t\tsum += friends[j].friendliness;\n\t\t\tj++;\n\t\t}\n\t\t\n\t\tmax = max_s(max, sum);\n\t\t\n\t\tif ((friends[j].cash - friends[i].cash) >= d)\n\t\t\tsum -= friends[i].friendliness;\n\t}\n\t\n\tprintf(\"%lld\", max);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8856624319419237, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "7e19ddf60f27e220b5dcf05f156e204b", "bug_code_uid": "72279dabe8aa61914fdd7046b58f8e58", "src_uid": "4553b327d7b9f090641590d6492c2c41", "apr_id": "4eef38e5564502c8ee5b4cbd873b3a15", "difficulty": 800, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,X=1,count=1,i;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<n-1;i+=1)\n\t\t{\n\t\t\tif(a[i+1]>a[i])\n\t\t\t{count++;\n\t\t\t        X=count;}\n\t\t\telse\n\t\t\t\tcount=1;\n\t\t}\n\tprintf(\"%d\",X);\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int n,X=1,count=1,i;\n\tscanf(\"%lld\",&n);\n\tlong long int a[n];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%lld\",&a[i]);\n\tfor(i=0;i<n-1;i+=1)\n\t\t{\n\t\t\tif(a[i+1]>a[i])\n\t\t\t{count++;\n\t\t\t       }\n\t\t\telse\n\t\t\t\tcount=1;\n\t\t\tif(X<count)\n\t\t\t\tX=count;\n\t\t}\n\tprintf(\"%lld\",X);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9161554192229039, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "377b2b6402c5665e03417e8799958ff4", "bug_code_uid": "986696eecb430a112c8d92d840e0afd8", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "96d14ad919dca2b1d7393fb75bbad110", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,a,t,m;\n\tfloat n;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t    n=360/(180-a);\n\t    m=int(n);\n\t    if(n>2 && n-m==0)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\t\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tfloat i,a,t,m,n;\n\tscanf(\"%f\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tscanf(\"%f\",&a);\n\t    n=360/(180-a);\n\t    m=(int)n;\n\t    if(n>2 && n-m==0)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.49878934624697335, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "ef34759eba155301ee13de686cfb7dd7", "bug_code_uid": "b645612bdb5be348dd20eacd9df38656", "src_uid": "5ebb0ee239d68ea33d9dac2d0bdd5f4e", "apr_id": "105fa462eeb27a1820d4b8e95c5512b3", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "bitmasks", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include<limits.h>\nint arr[200000];\nint differ(int a,int b){\nint cnt=0;\nwhile(a>0 && b>0){\nif(a%2!=b%2)\ncnt++;\na/=2;\nb/=2;\n}\nif(a!=0){\nwhile(a){\na/=2;\ncnt++;\n}\n}\nelse{\nwhile(b){\nb/=2;\ncnt++;\n}\n}\nreturn cnt;\n}\nint main(){\nint a,b,c,d,e;\nscanf(\"%d%d%d\",&a,&b,&c);\nint i;\nfor(i=0;i<b+1;i++){\n        scanf(\"%d\",arr+i);\n}\nint cnt=0;\nfor(i=0;i<b;i++){\n if(differ(arr[b],arr[i])<=c)\n    cnt++;\n}\nprintf(\"%d\",cnt);\n}\n\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include<limits.h>\nint arr[200000];\nint differ(int a,int b){\nint cnt=0;\nwhile(a>0 || b>0){\nif(a%2!=b%2)\ncnt++;\na/=2;\nb/=2;\n}\nreturn cnt;\n}\nint main(){\nint a,b,c,d,e;\nscanf(\"%d%d%d\",&a,&b,&c);\nint i;\nfor(i=0;i<b+1;i++){\n        scanf(\"%d\",arr+i);\n}\nint cnt=0;\nfor(i=0;i<b;i++){\n if(differ(arr[b],arr[i])<=c)\n    cnt++;\n}\nprintf(\"%d\",cnt);\n}\n\n"}
{"similarity_score": 0.5383458646616541, "equal_cnt": 25, "replace_cnt": 16, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 25, "lang": "GNU C11", "fix_code_uid": "b93c4b9fce166fecd0edc1a842b3b4fe", "bug_code_uid": "36af6e5bbe42a4f8222306c7ad49a7dd", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "1f2967f8e1194c3f26779ecfe6573eda", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint t;\nscanf(\"%d\\n\",&t);\nint i;\nint a,n;\nfor(i=1;i<=t;i++){\n\tscanf(\"%lf\\n\",&a);\nfor(n=3;n<=360;n++){\n\tif((n-2)*180/n==a){\n\tprintf(\"YES\\n\");\n\tbreak;\n\t}\n}\n}\n\tif((n-2)*180/n!=a){\n\t\tprintf(\"NO\\n\");\n                break;\n\t\t}\n  return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i;\n    double a,m;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%lf\",&a);\n        for(m=3;m<=360;m++)\n        {\n            if((m-2)*180/m==a)\n            {\n                printf(\"YES\\n\");\n                break;\n            }\n        }\n        if((m-2)*180/m!=a)\n        {\n            printf(\"NO\\n\");\n        }\n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.9899736147757255, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "83521d01cfc7c7d8f4c6f972b840edb0", "bug_code_uid": "51c9349688d6f0cbe85aec37e7d36a83", "src_uid": "d740f4ee1b18eeb74dfb253125c52762", "apr_id": "143e02b87f24a61a107fdee231c811db", "difficulty": 1300, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid quicksort(int number[10000],int first,int last){\n   int i, j, pivot, temp;\n\n   if(first<last){\n      pivot=first;\n      i=first;\n      j=last;\n\n      while(i<j){\n         while(number[i]<=number[pivot]&&i<last)\n            i++;\n         while(number[j]>number[pivot])\n            j--;\n         if(i<j){\n            temp=number[i];\n            number[i]=number[j];\n            number[j]=temp;\n         }\n      }\n\n      temp=number[pivot];\n      number[pivot]=number[j];\n      number[j]=temp;\n      quicksort(number,first,j-1);\n      quicksort(number,j+1,last);\n   }\n}\n\nvoid main()\n{\n    int n, i, temp;\n    int kq = 0;\n    scanf(\"%d\",&n);\n    int *A = (int *)malloc(2*n*sizeof(int));\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&A[i]);\n\t\tkq+=A[i];    \n    }\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&A[i+n]);\n    }\n    quicksort(A,0,2*n-1);\n\tfor(i=1;i<2*n;i+=2){\n        kq-=A[i];\n    }\n\t}\n\tprintf(\"%d\",kq);\n    exit(0);\n}", "fixed": "#include <stdio.h>\n\nvoid quicksort(int number[10000],int first,int last){\n   int i, j, pivot, temp;\n\n   if(first<last){\n      pivot=first;\n      i=first;\n      j=last;\n\n      while(i<j){\n         while(number[i]<=number[pivot]&&i<last)\n            i++;\n         while(number[j]>number[pivot])\n            j--;\n         if(i<j){\n            temp=number[i];\n            number[i]=number[j];\n            number[j]=temp;\n         }\n      }\n\n      temp=number[pivot];\n      number[pivot]=number[j];\n      number[j]=temp;\n      quicksort(number,first,j-1);\n      quicksort(number,j+1,last);\n   }\n}\n\nvoid main()\n{\n    int n, i, temp;\n    long long int kq = 0;\n    scanf(\"%d\",&n);\n    int *A = (int *)malloc(2*n*sizeof(int));\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&A[i]);\n\t\tkq+=A[i];   \n    }\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&A[i+n]);\n    }\n    quicksort(A,0,2*n-1);\n\tfor(i=0;i<2*n;i+=2){\n        kq-=A[i];\n    }\n\tprintf(\"%I64d\",kq);\n    exit(0);\n}"}
{"similarity_score": 0.3463258785942492, "equal_cnt": 56, "replace_cnt": 47, "delete_cnt": 6, "insert_cnt": 2, "fix_ops_cnt": 55, "lang": "GNU C", "fix_code_uid": "16c913436439be70b363a7e408e7e055", "bug_code_uid": "b042d17cd309211e6123fb4feba3ae03", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "ff4b2a064fd987f83afc49a0381d77a2", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\n\nint main ()\n{\n\tlong i, n, t25, t50, a[100000];\n\t\n\tscanf(\"%d\",&n);\n\tfor(i = 0; i < n; i++)\n\tscanf(\"%d\",&a[i]);\n\t\n\tt25 = 0;\n\tt50 = 0;\n\t\n\tif(a[0]!=25)\n\t\tprintf(\"No\");\n\telse\n\t\tif(a[0] == 25)\n\t\t\t{\n\t\t\t\tfor(i = 1; i < n; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(a[i] == 25)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tt25 = t25 + 1;\n\t\t\t\t\t\t\t\tt50 = t50;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\tif(a[i] == 50)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tt25 = t25 - 1;\n\t\t\t\t\t\t\t\tt50 = t50 + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\tif(a[i] == 100)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif((t25 >= 3) && (t50 == 0))\n\t\t\t\t\t\t\t\t\tt25 = t25 - 3;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\tt25 = t25 - 1;\n\t\t\t\t\t\t\t\t\t\tt50 = t50 - 1;\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\tif((t25 < 0) || (t50) < 0)\n\t\t\t\t\tprintf(\"NO\");\n\t\t\t\telse\n\t\t\t\t\tprintf(\"YES\");\n\t\t\t}\n\t\n\t\n\t\n\treturn 0;\t\n}", "fixed": "#include<stdio.h>\n \nint main ()\n{\n    long i,n,t25,t50;\n    long a[100000];\n \n    scanf(\"%ld\",&n);\n    for(i=0;i<=n-1;i++)\n    scanf(\"%ld\",&a[i]);\n \n    t25=1;\n    t50=0;\n   \n    if(a[0]!=25)\n    {\n        printf(\"NO\");  \n    }\n\n    else\n    if(a[0]==25)\n    {\n        for(i=1;i<=n;i++)\n        {\n        if(a[i]==25)\n        {\n            t25=t25+1;\n            t50=t50;\n        } \n\n        else\n        if(a[i]==50)\n        {\n            t25=t25-1;\n            t50=t50+1;\n        }\n\n        else\n        if(a[i]==100)\n        {\n            if((t25>=3)&&(t50==0))\n            t25=t25-3;\n           \n            else\n            {\n                t25=t25-1;\n                t50=t50-1;\n            }\n        }\n        }\n       \n        if((t25<0)||(t50<0))\n        printf(\"NO\");\n        else\n        printf(\"YES\");\n    }\n \n    return 0;\n}"}
{"similarity_score": 0.5048923679060665, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "b1eea966eb316a70d5ba7f65113cf8fc", "bug_code_uid": "165542a4a388acab28b27856d59c38fe", "src_uid": "7ed9265b56ef6244f95a7a663f7860dd", "apr_id": "b5eac285f9e6420c5d06ab8a8217e4b0", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n, p1, p2, p3, t1, t2, i;\n\tlong long tol = 0;\n\tscanf(\"%d%d%d%d%d%d\", &n, &p1, &p2, &p3, &t1, &t2);\n\tint bpt, bit, tmpt1, tmpt2;\n\tscanf(\"%d%d\", &tmpt1, &tmpt2);\n\tbpt = tmpt2 - tmpt1;\n\ttol += bpt*p1;\n\tfor(i=1; i < n; ++i){\n\t\tscanf(\"%d\", &tmpt1);\n\t\tbit = tmpt1 - tmpt2;\n\t\tif(bit < t1){\n\t\t\ttol += bit*p1;\n\t\t}else if(bit < t2){\n\t\t\ttol += t1*p1 + (bit - t1)*p2;\n\t\t}else{\n\t\t\ttol += p1*t1 + p2*t2 + (bit - t1 - t2)*p3;\n\t\t}\n\t\t\n\t\tscanf(\"%d\", &tmpt2);\n\t\tbpt = tmpt2 - tmpt1;\n\t\ttol += bpt*p1;\n\t}\n\tprintf(\"%d\", tol);\n} ", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n, p1, p2, p3, t1, t2, l, r, pr, tol = 0, temp = 0;\n\tscanf(\"%d %d %d %d %d %d\", &n, &p1, &p2, &p3, &t1, &t2);\n\tscanf(\"%d %d\", &l, &r);\n\tpr = r;\n\ttol += (r-l)*p1;\n\t\n\twhile(--n){\n\t\tscanf(\"%d %d\", &l, &r);\n\t\ttemp = l - pr;\n\t\tpr = r;\n\t\ttol += (r-l)*p1;\n\t\tif(temp <= t1){\n\t\t\ttol += temp*p1;\n\t\t}else if(temp <= (t1+t2)){\n\t\t\ttol += t1*p1 + (temp-t1)*p2;\n\t\t}else{\n\t\t\ttol += t1*p1 + t2*p2 + (temp-t1-t2)*p3;\n\t\t}\n\t}\n\tprintf(\"%d\", tol);\n\treturn 0;\n } "}
{"similarity_score": 0.9753457606734817, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "1eafff34878a33759245ceb9771640a1", "bug_code_uid": "06df178ca17ef708b1617a101915a184", "src_uid": "102667eaa3aee012fef70f4192464674", "apr_id": "6bfcdec00da6903d7257dd48ce0d2399", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    int output=0;\n    double broj=0;\n    int max = 0;\n    int counter=0;\n    int r=0;\n    int i,j;\n    int _prv,_dr;\n    int niz[50];\n    double a[50],b[50];\n\n    scanf(\"%d\",&_prv);\n    for (i=0;i<_prv;i++){\n        scanf(\"%lf\",&a[i]);\n        }\n\n\n    scanf(\"%d\",&_dr);\n    for (j=0;j<_dr;j++){\n        scanf(\"%lf\",&b[j]);\n    }\n\n    for(i=0;i<_prv;i++){\n        for(j=0;j<_dr;j++){\n            broj = b[j]/a[i];\n            r= (int)broj;\n            if (broj==r) {\n                niz[counter]=r;\n                counter++;\n            }\n        }\n\n    }\n\n\n\n    for(i=0;i<=counter;i++){\n        if(niz[i]>max) {max = niz[i];\n        }\n    }\n\n    for(i=0; i<=counter;i++){\n        if(niz[i]==max) {\n\n            output++;\n        }\n    }\n   printf(\"%d\",output);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    int output=0;\n    double broj=0;\n    int max = 0;\n    int counter=0;\n    int r=0;\n    int i,j;\n    int _prv,_dr;\n    int niz[300];\n    double a[55],b[55];\n\n    scanf(\"%d\",&_prv);\n    for (i=0;i<_prv;i++){\n        scanf(\"%lf\",&a[i]);\n        }\n\n\n    scanf(\"%d\",&_dr);\n    for (j=0;j<_dr;j++){\n        scanf(\"%lf\",&b[j]);\n    }\n\n    for(i=0;i<_prv;i++){\n        for(j=0;j<_dr;j++){\n            broj = b[j]/a[i];\n            r= (int)broj;\n            if (broj==r) {\n                niz[counter]=r;\n                counter++;\n            }\n        }\n\n    }\n\n\n\n    for(i=0;i<counter;i++){\n        if(niz[i]>max) {max = niz[i];\n        }\n    }\n\n    for(i=0; i<counter;i++){\n        if(niz[i]==max) {\n\n            output++;\n        }\n    }\n   printf(\"%d\",output);\n    return 0;\n}\n"}
{"similarity_score": 0.334855403348554, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "01b21086d4c1dad00251c009bb56f29b", "bug_code_uid": "271a9d8ac0a697943e7da3dd12ab6a81", "src_uid": "6b4242ae9a52d36548dda79d93fe0aef", "apr_id": "a0b21c3f23be1bce6c54ae7ad82d0cb9", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint num = 0;\n\tscanf(\"%d\", &num);\n\tchar str[100] = {'0'};\n\tscanf(\"%s\", str);\n\n\tint i = 0, times = 0, k = 0,flag = 0;\n\ttimes = num;\n\tchar compare = '0';\n\t//compare = str[0];\n\tfor(k = 0; k < times; k++){\n\tcompare = str[k];\n\tfor(i = k; i < num && i > -1; ){\n\tif(str[i] != compare){\n\tbreak;\n\t}\n\tif(str[i] == '<'){\n\t\ti--;\n\t}\n\telse{\n\t\ti++;\n\t}\n\t}\n\tif(i == num || i == -1){\n\tflag = 1;\n\tprintf(\"%d\\n\", k + 1);\n\treturn 0;\n\t}\n\t}\n\n\tif(flag == 0){\n\tprintf(\"0\\n\");\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(){\n\tint count1 = 0,count2 = 0;\n\tint num = 0;\n\tchar str[210000] = {'0'};\n\tscanf(\"%d\", &num);\n\t\n\tscanf(\"%s\", str);\n\n\tint i = 0, times = 0, k = 0,flag = 0, count = 0;\n\t//num = strlen(str);\n\ttimes = num;\n\tchar compare1 = '0';\n\tcompare1 = '>';\n\tchar compare2 = '0';\n\tcompare2 = '<';\n\n\t\n\tfor(i = 0; i < num; ){\n\tif(str[i] != compare1){\n\t\ti = i + 1;\n\t\tcount1 = 0;\n\t\tcontinue;\n\t}\n\t//if(str[i] == '<'){\n\t//\ti--;\n\n\t//}\n\telse{\n\t\ti++;\n\t}\n\tcount1++;\n\t}\n\t\n\n\tfor(i = num; i > -1; ){\n\tif(str[i] != compare2){\n\t\ti = i - 1;\n\t\tcount2 = 0;\n\t\tcontinue;\n\t}\n\t//if(str[i] == '<'){\n\t//\ti--;\n\n\t//}\n\telse{\n\t\ti--;\n\t}\n\tcount2++;\n\t}\n\n\tcount = count1 + count2;\n\t\n\t//if(i == num || i == -1){\n\t//flag = 1;\n\t//count++;\n\t//}\n\t\n\t\n\n\t//if(flag == 0){\n\t//printf(\"0\\n\");\n\t//}\n\t//else{\n\t\tprintf(\"%d\\n\", count);\n\t//}\n\treturn 0;\n}"}
{"similarity_score": 0.9119373776908023, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "3b2520828b63d42c705d579ddff798b1", "bug_code_uid": "e212292a28222f71a1b1844d54eedbe5", "src_uid": "befd3b1b4afe19ff619c0b34ed1a4966", "apr_id": "baf06c3f9e628ba93512b165dfdc0e03", "difficulty": 1200, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(int argc, char const *argv[]){\n\t\n\tint i,n,k,j = 0;\n\n\tscanf(\"%d %d\", &n,&k);\n\n\tint a[n];\n\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\n\ti = 0;\n\twhile(j < k){\n\t\tif(a[i] < 0 && a[i+1] <= 0){\n\t\t\ta[i] *= -1;\n\t\t\tj++;\n\t\t\ti++;\n\t\t} else if(a[i] < 0 && a[i+1] > 0){\n\t\t\ta[i] *= -1;\n\t\t\tj++;\t\t\t\n\t\t} else if(a[i] >= 0){\n\t\t\ta[i] *= -1;\n\t\t\tj++;\n\t\t} \n\t}\n\n\tint sum = 0;\n\tfor(i = 0; i < n; i++){\n\t\tsum += a[i];\n\t}\n\tprintf(\"%d\",sum );\n\n\treturn 0;\n\n}\n\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(int argc, char const *argv[]){\n\t\n\tint i,n,k,j = 0;\n\n\tscanf(\"%d %d\", &n,&k);\n\n\tint a[n];\n\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\n\ti = 0;\n\twhile(j < k){\n\t\tif(a[i] < 0 && a[i+1] <= 0){\n\t\t\ta[i] *= -1;\n\t\t\tj++;\n\t\t\ti++;\n\t\t} else if(a[i] < 0 && a[i+1] > 0 && abs(a[i]) < abs(a[i+1])){\n\t\t\ta[i] *= -1;\n\t\t\tj++;\t\t\t\n\t\t} else if(a[i] >= 0){\n\t\t\ta[i] *= -1;\n\t\t\tj++;\n\t\t} else {\n\t\t\ta[i] *= -1;\n\t\t\tj++;\n\t\t\ti++;\t\t\n\t\t}\n\t}\n\n\tint sum = 0;\n\tfor(i = 0; i < n; i++){\n\t\tsum += a[i];\n\t}\n\tprintf(\"%d\",sum );\n\n\treturn 0;\n\n}\n\n\n"}
{"similarity_score": 0.8818770226537217, "equal_cnt": 15, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "a47257e1aef611fc37e474a7ff504f0c", "bug_code_uid": "c091fe6118722dff9db6e2b89aea622b", "src_uid": "6fbf41dc32d1c28351d78a9ec5fc0026", "apr_id": "585ee66d0c05ee4cde0e2dd154f38c3b", "difficulty": 900, "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\tvoid prob();\r\n\tint t;\r\n\tscanf(\"%s\",&t);\r\n\tfor (int i = 0 ;i<t;i++)\r\n\t\tprob();\r\n}\r\n\r\nint palin(char a[]){\r\n\tint i;\r\n\tfor (i = 0 ;i<strlen(a);i++)\r\n\t{\r\n\t\tif (a[i]!=a[strlen-1-i])\r\n\t\t\treturn 0;  // a is not palindrome\r\n\t}\r\n\treturn 1; // a is palindrome\r\n}\r\n\r\nvoid prob(){\r\n\tint n,k;\r\n\tint is_palin;\r\n\tchar a[100];\r\n\tscanf(\"%d%d\",&n,&k);getchar();\r\n\tscafn(\"%s\",a);\r\n\tis_palin = palin(a);\r\n\tif (2*k+1 == 1)\r\n\t\tprintf(\"YES\\n\");\r\n\telse if (n>=2*k+1 && is_palin)\r\n\t\tprintf(\"YES\\n\");\r\n\telse printf(\"NO\\n\");\r\n}\r\n// must be palindrome\r\n// at least n >= 2k+1", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n \r\nint main()\r\n{\r\n\tvoid prob();\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tfor (int i = 0 ;i<t;i++)\r\n\t\tprob();\r\n}\r\n \r\nint palin(char a[]){\r\n\tint i;\r\n\tfor (i = 0 ;i<strlen(a);i++)\r\n\t{\r\n\t\tif (a[i]!=a[strlen(a)-1-i])\r\n\t\t\treturn i;  // a is not palindrome\r\n\t}\r\n\treturn i; // a is palindrome\r\n}\r\n \r\nvoid prob(){\r\n\tint n,k;\r\n\tint is_palin;\r\n\tchar a[1000];\r\n\tscanf(\"%d%d\",&n,&k);getchar();\r\n\tscanf(\"%s\",a);\r\n\tif (2*k+1 == 1)\r\n\t\tprintf(\"YES\\n\");\r\n\telse if (n == 2*k + 1 && palin(a)>=k)\r\n\t\tprintf(\"YES\\n\");\r\n\telse if (n>=2*k+1 && palin(a)>=k)\r\n\t\tprintf(\"YES\\n\");\r\n\telse printf(\"NO\\n\");\r\n}\r\n// must be palindrome\r\n// at least n >= 2k+1"}
{"similarity_score": 0.9706840390879479, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "5e3643d3acccccb9633261c06fef5db3", "bug_code_uid": "c611fc2fe47c64c964b2973fc496808a", "src_uid": "b533572dd6d5fe7350589c7f4d5e1c8c", "apr_id": "90a1a7105fa928689ce33f9d98682bcf", "difficulty": 1400, "tags": ["number theory", "games", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "int i;f(n){for(i=3;i*i<=n&&n%i;i++);return i*i<=n;}main(n){for(scanf(\"%*d\");\n~scanf(\"d\",&n);)puts(n==2||(n&-n<n)&(n|f(n))?\"Ashishgup\":\"FastestFinger\");} ", "fixed": "int i;f(n){for(i=3;i*i<=n&&n%i;i++);return i*i<=n;}main(n){for(scanf(\"%*d\");\n~scanf(\"%d\",&n);)puts(n==2||(n&-n)<n&&n&1|f(n)?\"Ashishgup\":\"FastestFinger\");}"}
{"similarity_score": 0.9425981873111783, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b82ea40660607665d7aef91a8538d100", "bug_code_uid": "da8208a9fd8ea3f3e518f8cd566263fd", "src_uid": "78f25e2bc4ff22dbac94f72af68a745f", "apr_id": "63f75193004a8ce0d23cf0eb55e958bb", "difficulty": 900, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint j,h,n,sum=0,m;\n\t\tfloat x;\n\t\tscanf(\"%d %d %d\",&h,&n,&m);\n\t\tfor(j=1;j<=n;j++)\n\t\th=floor(h/2)+10;\n\t\tfor(j=1;j<=m;j++)\n\t\th=h-10;\n\t\tif(h<=0)\n\t\tprintf(\"yes\\n\");\n\t\telse\n\t\tprintf(\"no\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint j,h,n,sum=0,m;\n\t\tfloat x;\n\t\tscanf(\"%d %d %d\",&h,&n,&m);\n\t\tif(h>=20){\n\t\tfor(j=1;j<=n;j++)\n\t\th=floor(h/2)+10;\n\t\t\n\t\t}\n\t\tif(h>0)\n\t\t{\n\t\tfor(j=1;j<=m;j++)\n\t\th=h-10;\n\t\t}\n\t\tif(h<=0)\n\t\tprintf(\"yes\\n\");\n\t\telse\n\t\tprintf(\"no\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9882352941176471, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "38fd913ceb309f0221b3a8d80e75fc0e", "bug_code_uid": "9673f810d66d79f8dc8d796c3d7c8ef1", "src_uid": "d7381f73ee29c9b89671f21cafee12e7", "apr_id": "159230788fdb36694337916ece8513ee", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid main()\n\n{\n    int n,d,i,j,s=0;\n    scanf(\"%d %d\",&n,&d);\n\n\n    int arr[n];\n\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&arr[i]);\n\n\n    for(i=0;i<n-1;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(arr[i]-arr[j]<=d && arr[i]-arr[j]>=-d)\n                s=s+2;\n\n        }\n    }\n\n    printf(\"%d\\n\",s);\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n\n{\n    int n,d,i,j,s=0;\n    scanf(\"%d %d\",&n,&d);\n\n\n    int arr[n];\n\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&arr[i]);\n\n\n    for(i=0;i<n-1;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(arr[i]-arr[j]<=d && arr[i]-arr[j]>=-d)\n                s=s+2;\n\n        }\n    }\n\n    printf(\"%d\\n\",s);\n\n\n\n\n}"}
{"similarity_score": 0.9972067039106145, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e68f67b33b9d8c877e9887fbc7ce230a", "bug_code_uid": "1cdfbf56481e9793aa877307ea299856", "src_uid": "1eaff8e0ec4614753699128af74b2471", "apr_id": "5e416b4e06e45cc6a48b06107790cae2", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int k;\n    scanf(\"%d\",&k);\n    int i;\n    for(i=0;i<k;i++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int j,a[n];\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%d\",&a[j]);\n        }\n        for(j=n-1;j>-1;j--)\n        {\n            printf(\"%d\",a[j]);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int k;\n    scanf(\"%d\",&k);\n    int i;\n    for(i=0;i<k;i++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int j,a[n];\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%d\",&a[j]);\n        }\n        for(j=n-1;j>-1;j--)\n        {\n            printf(\"%d \",a[j]);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9946332737030411, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c39d300cadd606b09988e0cf3b1d3574", "bug_code_uid": "263fe3cb30f4151c7b91ed07a6f18b66", "src_uid": "eb3155f0e6ba088308fa942f3572f582", "apr_id": "c4be2fe9b2c20168f6d1bf9709b5c439", "difficulty": 1300, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nmain()\n{\n\tlong int n,i;\n\tlong int keep[6]={0};\n\tlong int a[1000040];\n\tscanf(\"%ld\",&n);\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%ld\",&a[i]);\n\t\tif(a[i]==4)\n\t\t  keep[0]++;\n\t\tif(a[i]==8)\n\t\t{\n\t\t\tif(keep[0]>=keep[1]+1)\n\t\t\t  keep[1]++;\n\t\t}\n\t\tif(a[i]==15)\n\t\t  {\n\t\t  \tif(keep[1]>=keep[2]+1)\n\t\t  \t   keep[2]++;\n\t\t  }\n\t\tif(a[i]==16)\n\t\t{\n\t\t\tif(keep[2]>=keep[3])\n\t\t\t  keep[3]++;\n\t\t}\n\t\tif(a[i]==23)\n\t\t{\n\t\t\tif(keep[3]>=keep[4])\n\t\t\t  keep[4]++;\n\t\t}\n\t\tif(a[i]==42)\n\t\t{\n\t\t\tif(keep[4]>=keep[5])\n\t\t\t  keep[5]++;\n\t\t}\n\t}\nprintf(\"%ld\",n-(keep[5]*6));\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nmain()\n{\n\tlong int n,i;\n\tlong int keep[6]={0};\n\tlong int a[1000040];\n\tscanf(\"%ld\",&n);\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%ld\",&a[i]);\n\t\tif(a[i]==4)\n\t\t  keep[0]++;\n\t\tif(a[i]==8)\n\t\t{\n\t\t\tif(keep[0]>=keep[1]+1)\n\t\t\t  keep[1]++;\n\t\t}\n\t\tif(a[i]==15)\n\t\t  {\n\t\t  \tif(keep[1]>=keep[2]+1)\n\t\t  \t   keep[2]++;\n\t\t  }\n\t\tif(a[i]==16)\n\t\t{\n\t\t\tif(keep[2]>=keep[3]+1)\n\t\t\t  keep[3]++;\n\t\t}\n\t\tif(a[i]==23)\n\t\t{\n\t\t\tif(keep[3]>=keep[4]+1)\n\t\t\t  keep[4]++;\n\t\t}\n\t\tif(a[i]==42)\n\t\t{\n\t\t\tif(keep[4]>=keep[5]+1)\n\t\t\t  keep[5]++;\n\t\t}\n\t}\nprintf(\"%ld\",n-(keep[5]*6));\n}"}
{"similarity_score": 0.30384167636786963, "equal_cnt": 23, "replace_cnt": 16, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "721d6d2ddd10e6e81c176790bb500cd6", "bug_code_uid": "65ccbf292c87a3c52f94ba15d629f93b", "src_uid": "a1951e7d11b504273765fc9fb2f18a5e", "apr_id": "e2e416a6ddfa297d885e2362789b70cb", "difficulty": 1100, "tags": ["sortings", "binary search", "implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define MIN(a,b) (((a)<(b)) ? (a): (b))\n#define MAX(a,b) (((a)>(b)) ? (a): (b))\n\nint main(void){\n\tint t, n, k, i, j;\n\tint **skill, len_skill, aux, max;\n\t\n\tscanf(\"%d\", &t);\n\t\n\tfor(k=0; k<t; k++){\n\t\tscanf(\"%d\", &n);\n\t\t\n\t\tlen_skill = 0;\n\t\tskill = (int**)malloc(len_skill*sizeof(int*));\n\t\t\n\t\tfor(i=0; i<n; i++){\n\t\t\tscanf(\"%d\", &aux);\n\t\t\tfor(j=0; j<len_skill; j++)\n\t\t\t\tif(skill[j][0] == aux){\n\t\t\t\t\tskill[j][1]++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\n\t\t\tif(j == len_skill){\n\t\t\t\tlen_skill++;\n\t\t\t\tskill = (int**)realloc(skill,len_skill*sizeof(int*));\n\t\t\t\tskill[j] = (int*)malloc(2*sizeof(int));\n\t\t\t\t\n\t\t\t\tskill[j][0] = aux;\n\t\t\t\tskill[j][1] = 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tmax = 1;\n\t\tfor(i=0; i<len_skill; i++)\n\t\t\tif(skill[i][1] > max)\n\t\t\t\tmax = skill[i][1];\n\t\t\n\t\tprintf(\"%d\\n\", MAX(MIN(len_skill-1, max), MIN(len_skill, max-1)));\n\t\t\n\t\tfor(i=0; i<len_skill; i++)\n\t\t\tfree(skill[i]);\n\t\tfree(skill);\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define MIN(a,b) (((a)<(b)) ? (a): (b))\n#define MAX(a,b) (((a)>(b)) ? (a): (b))\n\nint cmpfun(const void *a, const void *b){\n\treturn (*(int*)a - *(int*)b);\n}\n\nint main(void){\n\tint t, n, k, i;\n\tint *s, count, max, num_ds;\n\t\n\tscanf(\"%d\", &t);\n\t\n\tfor(k=0; k<t; k++){\n\t\tscanf(\"%d\", &n);\n\t\t\n\t\tif(n>0){\n\t\t\ts = (int*)malloc(n*sizeof(int));\n\t\t\t\n\t\t\tfor(i=0; i<n; i++)\n\t\t\t\tscanf(\"%d\", &s[i]);\n\t\t\t\n\t\t\tqsort(s, n, sizeof(int), cmpfun);\n\t\t\t\n\t\t\tmax = 1;\n\t\t\tnum_ds = 0;\n\t\t\tfor(i=0; i<n; i++){\n\t\t\t\tnum_ds++;\n\t\t\t\t\n\t\t\t\tcount = 1;\n\t\t\t\twhile(i<n-1 && s[i+1] == s[i]){\n\t\t\t\t\ti++;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(count > max)\n\t\t\t\t\tmax = count;\n\t\t\t}\n\t\t\t\n\t\t\tfree(s);\n\t\t\t\n\t\t\tprintf(\"%d\\n\", MAX(MIN(num_ds-1, max), MIN(num_ds, max-1)));\n\t\t}else{\n\t\t\tprintf(\"%d\\n\", 0);\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9788732394366197, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c90aef710e78fb4c95379d453743ef52", "bug_code_uid": "5cefa7fb0f4c5d5f68a808d9243c35d8", "src_uid": "67af292ff23880ad9fd4349729e36158", "apr_id": "6e0edca0b9898b6e45f75ce4e85cc951", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a,c=0,d=0,e=0,f=0,g=0;\n\tscanf(\"%d\",&a);\n\tint b[a];\n\tfor(int i=0;i<a;i++)\n\t{\n\tscanf(\"%d\",&b[i]);\n\t}\n\tc=b[0];\n\tfor(int i=0;i<a;i++)\n\t{\n\t\tif(b[i]<c)\n\t\t\tc=b[i];\n\t}\n\tfor(int i=0;i<a;i++)\n\t{\n\t\tif(d==2 && b[i]==c)\n\t\t{\n\t\t\tf=i;\n\t\t\tif(f-e<g)\n\t\t\t\tg=f-e;\n\t\t\te=i;\n\t\t}\n\t\tif(d==1 && b[i] ==c)\n\t\t{\n\t\t\tf=i;\n\t\t\tg=f-e;\n\t\t\te=i\n\t\t\td=2;\n\t\t}\n\t\tif(d==0&&b[i]==c)\n\t\t{\n\t\t\te=i;\n\t\t\td=1;\n\t\t}\n\t}\n\tprintf(\"%d\",g)\n\t\t\n\n\t\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a,c=0,d=0,e=0,f=0,g=0;\n\tscanf(\"%d\",&a);\n\tint b[a];\n\tfor(int i=0;i<a;i++)\n\t{\n\tscanf(\"%d\",&b[i]);\n\t}\n\tc=b[0];\n\tfor(int i=0;i<a;i++)\n\t{\n\t\tif(b[i]<c)\n\t\t\tc=b[i];\n\t}\n\tfor(int i=0;i<a;i++)\n\t{\n\t\tif(d==2 && b[i]==c)\n\t\t{\n\t\t\tf=i;\n\t\t\tif(f-e<g)\n\t\t\t\tg=f-e;\n\t\t\te=i;\n\t\t}\n\t\tif(d==1 && b[i] ==c)\n\t\t{\n\t\t\tf=i;\n\t\t\tg=f-e;\n\t\t\te=i;\n\t\t\td=2;\n\t\t}\n\t\tif(d==0&&b[i]==c)\n\t\t{\n\t\t\te=i;\n\t\t\td=1;\n\t\t}\n\t}\n\tprintf(\"%d\",g);\n\t\t\n\n\t\n}"}
{"similarity_score": 0.9962894248608535, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9ad42de40a70724c0620b5502e0aa2ee", "bug_code_uid": "ee0972d66072c54b4f1cccac0e3862f6", "src_uid": "6324ca46b6f072f8952d2619cb4f73e6", "apr_id": "3a0b282db121b3bbb6cc6bac4988a5fc", "difficulty": 1000, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid    ft_solve_case(int cards_nbr, int jokers_nbr, int players)\n{\n    if (cards_nbr / players > jokers_nbr)\n        printf(\"%d\", jokers_nbr);\n    else \n        printf(\"%d\", (cards_nbr - jokers_nbr) / (players - 1));\n}\n\nint main()\n{\n    int lines, cards_nbr, jokers_nbrs, players, i = 0;\n    scanf(\"%d\", &lines);\n    while (i < lines)\n    {\n        scanf(\"%d %d %d\", &cards_nbr, &jokers_nbrs, &players);\n        ft_solve_case(cards_nbr, jokers_nbrs, players);\n        i++;\n    }\n    return (0);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid    ft_solve_case(int cards_nbr, int jokers_nbr, int players)\n{\n    if (cards_nbr / players > jokers_nbr)\n        printf(\"%d\\n\", jokers_nbr);\n    else \n        printf(\"%d\\n\", (cards_nbr - jokers_nbr) / (players - 1));\n}\n\nint main()\n{\n    int lines, cards_nbr, jokers_nbrs, players, i = 0;\n    scanf(\"%d\", &lines);\n    while (i < lines)\n    {\n        scanf(\"%d %d %d\", &cards_nbr, &jokers_nbrs, &players);\n        ft_solve_case(cards_nbr, jokers_nbrs, players);\n        i++;\n    }\n    return (0);\n}"}
{"similarity_score": 0.7649350649350649, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "10c0be47611a6b8ea0e2a23bedea43fe", "bug_code_uid": "144c72d099f38bbd116d7f34cb58c964", "src_uid": "2895624e708159bc2a6f3e91140a6c45", "apr_id": "c2b757d7c768856f6dbec1444a4576d0", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint compare(const void *num1, const void *num2){\n    int n1 = *(int *)num1;\n    int n2 = *(int *)num2;\n\n    return (n1 > n2) - (n2 > n1);\n}\nint sum_of_arr(int *arr, int from, int to){\n    int sum = 0;\n    for(int i = from; i < to; i++)\n        sum += arr[i];\n\n   return sum;\n}\n\nint main(){\n    int n, k;\n    int *a, *diffs;\n    int first, last;\n\n    scanf(\"%d %d\", &n ,&k);\n    a = malloc(sizeof(int) * n);\n    diffs = calloc(k, sizeof(int));\n\n    scanf(\"%d\", a);\n  \n    for(int i = 1; i < n; i++){\n        scanf(\"%d\", a + i);\n        diffs[0] = (a[i] - a[i - 1]);\n        qsort(diffs, k, sizeof(int), compare);\n    }\n\n    printf(\"%d\", a[n - 1] - a[0] - sum_of_arr(diffs, 1, k));\n\n    free(diffs);\n    free(a);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint compare(const void *num1, const void *num2){\n    int n1 = *(int *)num1;\n    int n2 = *(int *)num2;\n\n    return (n1 > n2) - (n2 > n1);\n}\n\nint sum_of_arr(int *arr, int from, int to){\n    int sum = 0;\n\n    for(int i = from; i < to; i++)\n        sum += arr[i];\n\n    return sum;\n}\n\nint main(){\n    int n, k;\n    int *a, *diffs;\n    int first, last;\n\n    scanf(\"%d %d\", &n ,&k);\n    a = malloc(sizeof(int) * n);\n    diffs = calloc(n, sizeof(int));\n\n    scanf(\"%d\", a);\n  \n    for(int i = 1; i < n; i++){\n        scanf(\"%d\", a + i);\n        diffs[i] = (a[i] - a[i - 1]);\n    }\n\n    qsort(diffs, n, sizeof(int), compare);\n\n    printf(\"%d\", a[n - 1] - a[0] - sum_of_arr(diffs, n - k + 1, n));\n\n    free(diffs);\n    free(a);\n\n    return 0;\n}\n"}
{"similarity_score": 0.11672278338945005, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "e9de964468e2e545d47dc3a51ec4fb48", "bug_code_uid": "47443ad0f1714e714ef583763c30d053", "src_uid": "4a58039c5171597ecf78837e9db1d71d", "apr_id": "4f4a53de0ffcfb6e7c3fb8a1dccfc9aa", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(int argc, char *argv[])\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tchar s[101];\n\t\tscanf(\"%s\",s);\n\t\tchar min=s[0];\n\t\tint flag=0;\n\t\tfor(int i=0;i<strlen(s);i++)\n\t\t{\n\t\t\tif(s[i]<min)\n\t\t\t{\n\t\t\t\tmin=s[i];\n\t\t\t\tflag=i;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%c \",min);\n\t\tfor(int i=flag;s[i]<strlen(s)-1;i++)\n\t\t{\n\t\t\ts[i]=s[i+1];\n\t\t}\n\t\tprintf(\"%s\\n\",s);\n\t}\n\treturn 0;\n}\n   \t      \t\t\t  \t\t   \t    \t\t\t\t\t\t", "fixed": "#include<stdio.h>\n\nchar Fmin(char l[])\n{\n    int i=0,j=0;\n    char a;\n    while(l[j]!='\\0')\n    {\n        if(l[i]>l[j])\n        {\n            i=j;\n        }\n        j++;\n    }\n    a=l[i];\n    for(;i<j;i++)\n    {\n        l[i]=l[i+1];\n    }\n    return a;\n}\n\nint main()\n{\n    int n,i;\n    char s[100],a;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",s);\n        a=Fmin(s);\n        printf(\"%c %s\\n\",a,s);\n    }\n    return 0;\n}\n\n  \t\t\t\t \t \t \t\t \t \t\t\t\t\t \t\t \t  \t\t"}
{"similarity_score": 0.9991416309012876, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cdd34877a22ee8efd7ae5a392dbefed6", "bug_code_uid": "95bffce01b1e4546a1fdd96724886ac8", "src_uid": "1f4c057dff45f229b4dca49cd4e0438d", "apr_id": "bcbe99cbfe782039abe623b7e53deba9", "difficulty": 1000, "tags": ["constructive algorithms", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\tint main(){\n\tlong long int d;\n\tscanf(\"%I64d\",&d);\n\tlong long int *ar,sum1=0,sum2=0;\n\tar=(long long int*)malloc (2*d*sizeof(long long int ));\n\tfor(int i=0; i<2*d; i++){\n\tscanf(\"%I64d\",&ar[i]);\n\t}\n\tfor(int i=0; i<2*d-1; i++){\n\tfor(int j=0; j<2*d-1-i; j++){\n\tlong long int temp;\n\tif(ar[j]>ar[j+1]){\n\ttemp=ar[j];\n\tar[j]=ar[j+1];\n\tar[j+1]=temp;}\n\t}\n\t}\n\n\tfor(int i=0; i<d; i++)\n\t{sum1=sum1+ar[i];\n\t}\n\tfor(int i=d; i<2*d; i++)\n\t{sum2=sum2+ar[i];\n\t}\n\tif(sum1==sum2){\n\tprintf(\"%d\",-1);}\n\telse\n\t{for(int i=0; i<2*d; i++){\n\tprintf(\"%I64d\",ar[i]);\n\t}\n\t}}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\tint main(){\n\tlong long int d;\n\tscanf(\"%I64d\",&d);\n\tlong long int *ar,sum1=0,sum2=0;\n\tar=(long long int*)malloc (2*d*sizeof(long long int ));\n\tfor(int i=0; i<2*d; i++){\n\tscanf(\"%I64d\",&ar[i]);\n\t}\n\tfor(int i=0; i<2*d-1; i++){\n\tfor(int j=0; j<2*d-1-i; j++){\n\tlong long int temp;\n\tif(ar[j]>ar[j+1]){\n\ttemp=ar[j];\n\tar[j]=ar[j+1];\n\tar[j+1]=temp;}\n\t}\n\t}\n\n\tfor(int i=0; i<d; i++)\n\t{sum1=sum1+ar[i];\n\t}\n\tfor(int i=d; i<2*d; i++)\n\t{sum2=sum2+ar[i];\n\t}\n\tif(sum1==sum2){\n\tprintf(\"%d\",-1);}\n\telse\n\t{for(int i=0; i<2*d; i++){\n\tprintf(\"%I64d \",ar[i]);\n\t}\n\t}}"}
{"similarity_score": 0.9941520467836257, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a63f4bbe5a15278c0a1299df53601a1c", "bug_code_uid": "c427c69ee34701334a8675e51e1e7592", "src_uid": "df94080c5b0b046af2397cafc02b5bdc", "apr_id": "078a74f9f4b3eb800e327ca108b0550e", "difficulty": 1000, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n, h;\n\nint main () {\n\tscanf(\"%d\",&n);\n\twhile(--n){\n\t\tscanf(\"%d\",&h);\n\t\tif(h == 1){\n\t\t\tprintf(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"1\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint n, h;\n\nint main () {\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tscanf(\"%d\",&h);\n\t\tif(h == 1){\n\t\t\tprintf(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"1\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9940915805022157, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a4d4c367312d942c8153ed642bf5a0e9", "bug_code_uid": "27a523092b1e172a58585e12541687b3", "src_uid": "a7e98ed8ee1b0a4fd03dfcd222b68c6f", "apr_id": "0465e02b70e6bb02d380726476d2f824", "difficulty": 800, "tags": ["two pointers", "implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint max\n\nint main(void)\n{\n\tint cards_number;\n\tscanf(\"%d\", &cards_number);\n\t\n\tint* cards = (int*)malloc(cards_number * sizeof(int));\n\tfor (int i = 0; i < cards_number; i++)\n\t\tscanf(\"%d\", cards + i);\n\tint sergey_value = 0;\n\tint dmitriy_value = 0;\n\tint begin = 0;\n\tint end = cards_number - 1;\n\tint max_value;\n\tfor (int card = 0; card < cards_number; card++)\n\t{\n\t\tif (cards[begin] > cards[end])\n\t\t{\n\t\t\tmax_value = cards[begin];\n\t\t\tbegin++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmax_value = cards[end];\n\t\t\tend--;\n\t\t}\n\t\tif (card % 2)\n\t\t\tdmitriy_value += max_value;\n\t\telse\n\t\t\tsergey_value += max_value;\n\t}\n\tprintf(\"%d %d\", sergey_value, dmitriy_value);\n\tfree(cards);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main(void)\n{\n\tint cards_number;\n\tscanf(\"%d\", &cards_number);\n\t\n\tint* cards = (int*)malloc(cards_number * sizeof(int));\n\tfor (int i = 0; i < cards_number; i++)\n\t\tscanf(\"%d\", cards + i);\n\tint sergey_value = 0;\n\tint dmitriy_value = 0;\n\tint begin = 0;\n\tint end = cards_number - 1;\n\tint max_value;\n\tfor (int card = 0; card < cards_number; card++)\n\t{\n\t\tif (cards[begin] > cards[end])\n\t\t{\n\t\t\tmax_value = cards[begin];\n\t\t\tbegin++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmax_value = cards[end];\n\t\t\tend--;\n\t\t}\n\t\tif (card % 2)\n\t\t\tdmitriy_value += max_value;\n\t\telse\n\t\t\tsergey_value += max_value;\n\t}\n\tprintf(\"%d %d\", sergey_value, dmitriy_value);\n\tfree(cards);\n}"}
{"similarity_score": 0.9698630136986301, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "09c3d1deab543d9a2103f3d6ca8bbe60", "bug_code_uid": "9680344fafbcaf5b9cdd96409234b1b8", "src_uid": "ac77e2e6c86b5528b401debe9f68fc8e", "apr_id": "937b57472caace5cebf5d05dfd98b792", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t;\n    scanf(\"%d\\n\",&t);\n    while(t--)\n    {\n        char b[101],c[101];\n        gets(b);\n        int l,i;\n        l=strlen(b);\n        c[0]=b[0];\n        printf(\"%c\",c[0]);\n        for(i=1;i<l;i+=2)\n        {\n            c[i]=b[i];\n            printf(\"%c\",c[i]);\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t;\n    scanf(\"%d\\n\",&t);\n    while(t--)\n    {\n        char b[101],c[101];\n        gets(b);\n        int l,i;\n        l=strlen(b);\n        c[0]=b[0];\n        printf(\"%c\",c[0]);\n        for(i=1;i<l;i+=2)\n        {\n            c[i]=b[i];\n            printf(\"%c\",c[i]);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.37037037037037035, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "acbe38335cb8782e40bc8ede1e93a4fb", "bug_code_uid": "4b01dcb874aa5b79357f581434b8b132", "src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "apr_id": "04b47146e9c5068b423623b9ea8bc6f2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint main() {\n\tint n;\n\tscanf(\"%d\",&n);\n\tint arr[n];\n\tfor(int i=0;i<n;i++){\n\t  scanf(\"%d\",&arr[i]);  \n\t}\n\tint min=1000;\n\tfor(int i=0;i<n-1;i++){\n\t  for(int j=1+i;j<n;j++){\n\t      min=fmin(min,abs(arr[i]-arr[j]));\n\t  }  \n\t}\n\tint index1,index2;\n\tfor(int i=0;i<n-1;i++){\n\t  for(int j=1;j<n;j++){\n\t      if(abs(arr[i]-arr[j])==min){\n\t          index1=i;\n\t          index2=j;\n\t          i=n;\n\t          j=n;\n\t      }\n\t  }  \n\t}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint main() {\n\tint n;\n\tscanf(\"%d\",&n);\n\tint arr[n];\n\tfor(int i=0;i<n;i++){\n\t  scanf(\"%d\",&arr[i]);  \n\t}\n\tint min=100000;\n\tfor(int i=1;i<n-1;i++){\n\t  min=fmin(fmin(min,abs(arr[i]-arr[i-1])),abs(arr[i]-arr[i+1]));\n\t}\n    min=fmin(min,abs(arr[0]-arr[n-1]));\n    int cnt=0;\n   \n\tfor(int i=1;i<n-1;i++){\n\t    if(abs(arr[i]-arr[i-1])==min){\n\t        printf(\"%d %d\",i,i+1);\n\t        cnt++;\n\t        break;\n\t    }\n\t    if(abs(arr[i]-arr[i+1])==min){\n\t        printf(\"%d %d\",i+1,i+2);\n\t        cnt++;\n\t        break;\n\t    }\n\t    \n\t}\n\tif(cnt==0){\n\t    if(abs(arr[0]-arr[n-1])==min){\n        printf(\"%d %d\",1,n);\n        }\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.8782383419689119, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "181c6b68b082c0bb84affa09d3309b04", "bug_code_uid": "56a76f44b3de920a496225f09ebd3478", "src_uid": "ddc9201725e30297a5fc83f4eed75fc9", "apr_id": "6668f68e37dafdf06d926d87ab3ae8df", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void){\nchar c[100005];\nint i,sum,count;\ni=0;\nsum=0;\ncount=0;\nwhile(1){\nscanf(\"%c\",&c[i]);\nif(c[i]=='\\n')break;\nsum+=c[i]-'0';\ni++;\n}\n//printf(\"%d\\n\",sum);\nif(sum==0){printf(\"0\");return 0;}\n\ncount++;\nwhile(sum>=10){\nint temp=0;\nwhile(sum>0){\ntemp+=sum%10;\nsum/=10;\n}\nsum=temp;\ncount++;\n}\nprintf(\"%d\",count);\nreturn 0; \n}\n\t\t   \t \t\t \t\t  \t  \t \t  \t       \t", "fixed": "#include<stdio.h>\nint main(void){\nchar c[100005];\nint i,sum,count;\ni=0;\nsum=0;\ncount=0;\nwhile(1){\nscanf(\"%c\",&c[i]);\nif(c[i]=='\\n')break;\nsum+=c[i]-'0';\ni++;\n}\n//printf(\"%d\\n\",sum);\nif(sum==0){printf(\"0\");return 0;}\ncount++;\nif(i==1)count--;\nwhile(sum>=10){\nint temp=0;\nwhile(sum>0){\ntemp+=sum%10;\nsum/=10;\n}\nsum=temp;\ncount++;\n}\nprintf(\"%d\",count);\nreturn 0; \n}\n \t \t\t\t \t\t  \t  \t\t \t \t     \t \t  \t"}
{"similarity_score": 0.6452353616532721, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "7e6d69f828f8768ed8fd5cbb9aeab0c1", "bug_code_uid": "adb63f0f4d92753bf13c83f5ae46ea6e", "src_uid": "1c597da89880e87ffe791dd6b9fb2ac7", "apr_id": "75bcb1ffec3ad9e5e32a54fb8db089c3", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\n int main()\r\n {\r\nint t;\r\nint n,i;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{  int cnt=0;\r\n\r\n  scanf(\"%d\",&n);\r\n  int a[n];\r\n  for(i=0;i<n;i++)\r\n  {\r\n      scanf(\"%d\",&a[i]);\r\n  }\r\nfor(int j=0;j<500;j++)\r\n{\r\n   for(i=(n-1);i>=1;i--)\r\n  {\r\n      if((a[i]>=a[i-1])&&(a[i]-a[i-1]>=0))\r\n        {\r\n         a[i]=a[i]-a[i-1];\r\n        }\r\n  }\r\n}\r\nfor(i=1;i<n;i++)\r\n{\r\n    if(a[i]!=0)\r\n    {\r\n        cnt++;\r\n    }\r\n}\r\nif(cnt==0)\r\n{\r\n    printf(\"YES\\n\");\r\n}\r\nelse\r\n{\r\n    printf(\"NO\\n\");\r\n}\r\n}\r\n return 0;}\r\n", "fixed": "#include<stdio.h>\r\n\r\n int main()\r\n {\r\nint t;\r\nint n,i;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{  int cnt=0;\r\n\r\n  scanf(\"%d\",&n);\r\n  int a[n];\r\n  for(i=0;i<n;i++)\r\n  {\r\n      scanf(\"%d\",&a[i]);\r\n  }\r\n  for(i=0;i<n;i++)\r\n  {\r\n      if(a[i]%a[0]!=0)\r\n      {\r\n          cnt++;\r\n      }\r\n  }\r\n  if(cnt==0)\r\n    printf(\"YES\\n\");\r\n  else\r\n    printf(\"NO\\n\");\r\n}\r\n return 0;}\r\n"}
{"similarity_score": 0.11331444759206799, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "e1b3bd708bdcf886bd4eed4d3f14c0e1", "bug_code_uid": "1a55d98e44033f5aa2aafc8a20ab0e23", "src_uid": "b18bbefd2a948da9dec1d6f27f219ed1", "apr_id": "4fc7a221b6236b770e8184d4355a2909", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint find(int a[10000],int n)\n{\n    int key,i,j;\n    for(i=0;i<n;++i)\n    {\n        key=i;\n    if(a[key]==0)\n        return i+1;\n    else\n        for(j=0;j<n;j++)\n        {\n            if(a[j]!=0)\n        a[j]=a[j]-1;\n        }\n        }\n   if(i==n)\n    find(a,n);\n\n}\nint main()\n{\n   int a[10000],i,n,j;\n   scanf(\"%d\",&n);\n   for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n   j=find(a,n);\n   printf(\"%d\",j);\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,i,a[100000],k=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;;i++)\n    {\n        if(i==n)\n            i=0;\n        if((a[i]-k)<=0)\n            break;\n        k++;\n    }\n    printf(\"%d\\n\",i+1);\n    return 0;\n}"}
{"similarity_score": 0.9870967741935484, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e4cb91ade67b8b5bf8265c29d2a28425", "bug_code_uid": "ccab501307497982f01d976b5b406863", "src_uid": "6bb2793e275426eb076972fab69d0eba", "apr_id": "f94aac4557d07f755330f662abca9077", "difficulty": 1500, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint i,j,k=0,w,s,t,f;\n\tchar str[100001];\n\tchar ch[100001];\n\tscanf(\"%s\",str);\n\tw=strlen(str);\n\tfor (i=0;i<w-1;i++){\n\t\tf=0;\n\t\tfor (j=i+1;j<w;j++){\n\t\t\tif (str[i]==str[j]){\n\t\t\t\tf=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (f==0){\n\t\t\tch[k]=str[i];\n\t\t\tk++;\n\t\t}\n\t}\n\tch[k]=str[w-1];\n\tk++;\n\ts=0;\n\tfor (i=0;i<k;i++){\n\t\tt=0;\n\t\tfor (j=0;j<w;j++){\n\t\t\tif (ch[i]==str[j]){\n\t\t\t\tt=t+1;\n\t\t\t}\n\t\t}\n\t\ts=s+t*t;\n\t}\n\tprintf(\"%d\",s);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tlong long int i,j,k=0,w,s,t,f;\n\tchar str[100001];\n\tchar ch[100001];\n\tscanf(\"%s\",str);\n\tw=strlen(str);\n\tfor (i=0;i<w-1;i++){\n\t\tf=0;\n\t\tfor (j=i+1;j<w;j++){\n\t\t\tif (str[i]==str[j]){\n\t\t\t\tf=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (f==0){\n\t\t\tch[k]=str[i];\n\t\t\tk++;\n\t\t}\n\t}\n\tch[k]=str[w-1];\n\tk++;\n\ts=0;\n\tfor (i=0;i<k;i++){\n\t\tt=0;\n\t\tfor (j=0;j<w;j++){\n\t\t\tif (ch[i]==str[j]){\n\t\t\t\tt=t+1;\n\t\t\t}\n\t\t}\n\t\ts=s+t*t;\n\t}\n\tprintf(\"%lld\",s);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8341810783316378, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "36ebd6fded5850253cf87da4df784f5c", "bug_code_uid": "1e5773d381cb427fe2811fa6eb0bdb8e", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "b430699e6b94b13abec5e11e7aaf67ec", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(int argc, char ** argv)\n{\n\n\tint nZeros = 0, nFives = 0, n, i = 0;\n\tscanf(\"%i\", &n);\n\t\n\tfor (; i < n; ++i)\n\t{\n\t\n\t\tint a;\n\t\tscanf(\"%i\", &a);\n\t\tif (a)\n\t\t{\n\t\t\t++nFives;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t++nZeros;\n\t\t}\n\t\t\n\t}\n\t\n\tfor (i = 0; i < nFives / 9; ++i)\n\t{\n\t\tprintf(\"555555555\");\n\t}\n\t\n\tif (nFives >= 9)\n\t{\n\t\n\t\tfor (i = 0; i < nZeros; ++i)\n\t\t{\n\t\t\tprintf(\"0\");\n\t\t}\n\t\t\n\t}\n\telse if (nZeros)\n\t{\n\t\tprintf(\"0\");\n\t}\n\telse\n\t{\n\t\tprintf(\"-1\");\n\t}\n\t\n\tprintf(\"\\n\");\n\t\n\treturn 0;\n\t\n}", "fixed": "#include <stdio.h>\n\nint main(int argc, char ** argv)\n{\n\n\tint nZeros = 0, nFives = 0, n, i = 0;\n\tscanf(\"%i\", &n);\n\t\n\tfor (; i < n; ++i)\n\t{\n\t\n\t\tint a;\n\t\tscanf(\"%i\", &a);\n\t\tif (a)\n\t\t{\n\t\t\t++nFives;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t++nZeros;\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tif ((nFives >= 9) && nZeros)\n\t{\n\t\n\t\tfor (i = 0; i < nFives / 9; ++i)\n\t\t{\n\t\t\tprintf(\"555555555\");\n\t\t}\n\n\t\tfor (i = 0; i < nZeros; ++i)\n\t\t{\n\t\t\tprintf(\"0\");\n\t\t}\n\t\t\n\t}\n\telse if (nZeros)\n\t{\n\t\tprintf(\"0\");\n\t}\n\telse\n\t{\n\t\tprintf(\"-1\");\n\t}\n\t\n\tprintf(\"\\n\");\n\t\n\treturn 0;\n\t\n}"}
{"similarity_score": 0.9759572573463936, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c4fceefbbb9540b5492dee38d0a1bd6a", "bug_code_uid": "4378617bc33e9cc6164f5b2ff2d2138d", "src_uid": "d41aebacfd5d16046db7c5d339478115", "apr_id": "505765f9ffadb71970f57305967b0d4b", "difficulty": 1600, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint choose(int n, int k) {\n\treturn k == 0 ? 1 : choose(n - 1, k - 1) * n / k;\n}\n\nint main() {\n\tint n, cnt3, cnt5;\n\n\tscanf(\"%d\", &n);\n\tcnt3 = choose(n, 1) * 1;\n\tcnt3 += n < 2 ? 0 : choose(n, 2) * choose(2, 1);\n\tcnt3 += n < 3 ? 0 : choose(n, 3);\n\tcnt5 = choose(n, 1) * 1;\n\tcnt5 += n < 2 ? 0 : choose(n, 2) * (choose(2, 1) + choose(2, 1));\n\tcnt5 += n < 3 ? 0 : choose(n, 3) * (choose(3, 1) + choose(3, 2));\n\tcnt5 += n < 4 ? 0 : choose(n, 4) * choose(4, 1);\n\tcnt5 += n < 5 ? 0 : choose(n, 5);\n\tprintf(\"%d\\n\", cnt3 * cnt5);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nlong long choose(int n, int k) {\n\treturn k == 0 ? 1 : choose(n - 1, k - 1) * n / k;\n}\n\nint main() {\n\tint n;\n\tlong long cnt3, cnt5;\n\n\tscanf(\"%d\", &n);\n\tcnt3 = choose(n, 1) * 1;\n\tcnt3 += n < 2 ? 0 : choose(n, 2) * choose(2, 1);\n\tcnt3 += n < 3 ? 0 : choose(n, 3);\n\tcnt5 = choose(n, 1) * 1;\n\tcnt5 += n < 2 ? 0 : choose(n, 2) * (choose(2, 1) + choose(2, 1));\n\tcnt5 += n < 3 ? 0 : choose(n, 3) * (choose(3, 1) + choose(3, 2));\n\tcnt5 += n < 4 ? 0 : choose(n, 4) * choose(4, 1);\n\tcnt5 += n < 5 ? 0 : choose(n, 5);\n\tprintf(\"%lld\\n\", cnt3 * cnt5);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7795389048991355, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "6a6ae82a114b9a25f61f0fff04066100", "bug_code_uid": "91b9a154ba75cbd77b443ef817143389", "src_uid": "db9cec57d8ed5e914818ce9b439eb0f9", "apr_id": "92916ac801efa224ce7e4976e6bc67c1", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAX 200001\n\nint main()\n{\n    int T; scanf(\"%d\\n\", &T);\n\n    char *str = (char *) malloc(MAX * sizeof(char));\n    for (int t = 0; t < T; t++){\n        gets(str);\n        int len = strlen(str);\n\n        int ans = 0;\n        \n        int rflag = 0, sflag = 0;\n        for (int i = 0; i < len; i++){  \n            if (str[i] == '(' && rflag == 0) rflag = 1;\n            else if (str[i] == ')' && rflag == 1) {ans++; rflag = 0; }\n            else if (str[i] == '[' && sflag == 0) sflag = 1;\n            else if (str[i] == ']' && sflag == 1) {ans++; sflag = 0; }  \n        }\n        \n        printf(\"%d\\n\",ans);\n    }\n\n    free(str);\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAX 200001\n\nint main()\n{\n    int T; scanf(\"%d\\n\", &T);\n\n    char *str = (char *)malloc(MAX * sizeof(char));\n    for (int t = 0; t < T; t++){\n        gets(str);\n        int len = strlen(str);\n\n        int ans = 0;\n        \n        int rflag = 0, sflag = 0;\n        for (int i = 0; i < len; i++){  \n            if      (str[i] == '(') rflag++;\n            else if (str[i] == ')' && rflag > 0) {ans++; rflag--;}\n            else if (str[i] == '[') sflag++;\n            else if (str[i] == ']' && sflag > 0) {ans++; sflag--;}  \n        }\n        \n        printf(\"%d\\n\",ans);\n    }\n\n    free(str);\n\n    return 0;\n}"}
{"similarity_score": 0.4294573643410853, "equal_cnt": 24, "replace_cnt": 12, "delete_cnt": 6, "insert_cnt": 6, "fix_ops_cnt": 24, "lang": "GNU C", "fix_code_uid": "7548c68fb9cc468da2a9df6733d09e95", "bug_code_uid": "8906c611f5470c251bedbe100d8910ad", "src_uid": "54c748dd983b6a0ea1af1153d08f1c01", "apr_id": "26743679d62f71aaa745c5dc9f666161", "difficulty": 1100, "tags": [], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    char a[3001];\n    int i,j,k,posr,posl,r=0,count=0,dot=0;\n    scanf(\"%s\",a);\n    for(i=0;i<n;i++)\n    {\n        if(a[i]=='.' && r==0 )\n        {\n            dot++;\n\n        }\n        else if(a[i]=='R')\n        {\n            if(dot>0)\n                count=count+dot;\n            posr=i;\n            r=1;\n            dot=0;\n        }\n        else if(a[i]=='L')\n        {\n            if(!(i-posr)%2)\n                dot++;\n            r=0;\n        }\n    }\n    count=count+dot;\n    printf(\"%d\\n\",count);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int list,count=0,i,j,flagl=0,flagr=0,posr,dot=0;\n  scanf(\"%d\",&list);\n  char arr[list];\n  scanf(\"%s\",&arr);\n  if(list==1 && arr[0]=='.')\n    count++;\n  else\n  {\n    for(i=0;i<list;i++)\n    {\n      if(arr[i]=='.')\n      {\n        dot++;\n        if(i==list-1 && flagr==0)\n          count+=dot;\n      }\n      else if(arr[i]=='R')\n      {\n        if(dot>0)\n        {\n          count+=dot; \n          dot=0;\n        }  \n        flagl=0;\n        flagr=1;\n        posr=i;\n      }\n      else\n      {\n        flagl=1;\n        dot=0;\n        if(flagr==1)\n        {\n          if((i-posr)%2==0)\n            count++;\n          flagr=0;\n        }\n      }\n    }  \n   }\n  printf(\"%d\",count);\n  return 0;\n}"}
{"similarity_score": 0.4876237623762376, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "d1309d3366ea58ec28f743fc114793c0", "bug_code_uid": "85ee9b267be8f979f1a742ffca5c3ab7", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "9ef33d7687f1580ab5362c2a1a17c3ca", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[150],b[150],c[150],n,i,sum=0,d[150];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d %d\",&a[i],&b[i],&c[i]);\n        d[i]=a[i]+b[i]+c[i];\n        \n    }\n    for(i=0;i<n;i++)\n    {\n        if(d[i]!=0)\n        {\n        printf(\"NO\");\n        break;\n        }\n    }\n    else\n    {\n        printf(\"YES\");\n    }\n    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,a[100][10],b[100][10],c[100][10],s1=0,s2=0,s3=0,n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n       \n        \n            scanf(\"%d%d%d\",&a[i][0],&b[i][1],&c[i][2]);\n            s1+=a[i][0];\n            s2+=b[i][1];\n            s3+=c[i][2];\n        \n    }\n    if(s1==0 && s2==0 && s3==0)\n    {\n        printf(\"YES\");\n        \n    }\n    else\n    {\n        printf(\"NO\");\n    }\n    \n    \n}"}
{"similarity_score": 0.21143473570658036, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "def02c778976350e88373de277d31db7", "bug_code_uid": "88cfdd36df3d8702e10c437398bfea75", "src_uid": "681ee82880ddd0de907aac2ccad8fc04", "apr_id": "33ed28c15570d036a987de3261baf092", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdlib.h>\r\nint main()\r\n{\r\n      int n;\r\n      scanf(\"%d\",&n);\r\n      while(n--)\r\n      {\r\n            int s,r,d,max=0;\r\n            scanf(\"%d%d%d\",&s,&r,&d);\r\n            for(int i=s;i<=r;i++)\r\n            {\r\n                  int m=i/d+i%d; \r\n                  if(max<=m) \r\n                  {\r\n                        max=m;\r\n                  }\r\n            }\r\n            printf(\"%d\\n\",max);\r\n            \r\n      }\r\n      \r\n      \r\n      \r\n      \r\n      return 0;", "fixed": "int max(int a,int b)\r\n{\r\n      if(a>=b)\r\n      return a;\r\n      else\r\n      return b;\r\n      \r\n}\r\n#include<stdio.h>\r\nint main()\r\n{ \r\n      int t;\r\n      scanf(\"%d\",&t);\r\n      while(t--)\r\n      {\r\n      int a,b,c;\r\n      scanf(\"%d%d%d\",&a,&b,&c);\r\n      if(a/c==b/c)\r\n      {\r\n            printf(\"%d\\n\",b/c+b%c);\r\n      }\r\n      else \r\n      {\r\n            printf(\"%d\\n\",max((b/c)+b%c,b/c-1+c-1));\r\n      }\r\n      \r\n      \r\n      }\r\n      return 0;\r\n}"}
{"similarity_score": 0.5287769784172662, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "68918888a0db316520566a70edc3c557", "bug_code_uid": "c5e44491c7c83fb7ff3ec4197ebb5f2f", "src_uid": "277948a70c75840445e1826f2b23a897", "apr_id": "ca32782788700cb21ff5f48dbadec27a", "difficulty": 1600, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n/*\n * 1.\u8fd9\u4e2a\u7a0b\u5e8f\u505a\u5230\u7684\u4e8b\u60c5\n * 2.\u8fd9\u4e2a\u7a0b\u5e8f\u9047\u5230\u7684\u56f0\u96be\n * 3.\u63a5\u4e0b\u6765\u8981\u505a\u7684\u4e8b\u60c5\n */\n#include<stdio.h>\n#define N 100000\nint main() {\n    int n;\n    scanf(\"%d\",&n);\n    int p[N];\n    int i,j;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&p[i]);\n    }\n    int result=n;\n    for(j=1;j<=n;j++){\n        int start=j;\n        int max=0;\n        for(i=0;i<n;i++){\n            if(p[i]==start){\n                max=start;\n                start++;\n            }\n        }\n        if(n-max+j-1<result){\n            result=n-max+j-1;\n        }\n    }\n    printf(\"%d\\n\",result);\n    return 0;\n}\n", "fixed": "\n/*\n * 1.\u8fd9\u4e2a\u7a0b\u5e8f\u505a\u5230\u7684\u4e8b\u60c5\n * \u8fd9\u91cc\u5e94\u8be5\u5bfb\u627e\u6700\u957f\u7684\u8fde\u7eed\u81ea\u7136\u6570\u5b50\u6570\u7ec4\u4e2a\u6570\uff01\n * 2.\u8fd9\u4e2a\u7a0b\u5e8f\u9047\u5230\u7684\u56f0\u96be\n * 3.\u63a5\u4e0b\u6765\u8981\u505a\u7684\u4e8b\u60c5\n */\n#include<stdio.h>\n#define N 100000\nint main() {\n    int n;\n    scanf(\"%d\",&n);\n    int p[N];\n    int i;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&p[i]);\n    }\n    int seen[N];\n    for(i=0;i<=n;i++){\n        seen[i]=0;\n    }\n\n    for(i=0;i<n;i++){\n        if(!seen[p[i]-1]){\n            seen[p[i]]=1;\n        }else{\n            seen[p[i]]=seen[p[i]-1]+1;\n        }\n    }\n    int max=0;\n    for(i=0;i<=n;i++){\n        if(seen[i]>max)max=seen[i];\n    }\n    printf(\"%d\\n\",n-max);\n    return 0;\n}\n"}
{"similarity_score": 0.9384288747346072, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "876b3ff8e6b99ccec8dc718917a5611a", "bug_code_uid": "c7a5b01ec06c9f61ab9243e8518f37da", "src_uid": "88d56c1e3a7ffa94354ce0c70d8e958f", "apr_id": "699510ddc49e5f740744aebccc3c8ef7", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,j,n,k,l;\n\tscanf(\"%d\",&n);\n\tchar a[n+1];\n\tscanf(\"%s\",a);\n\tif(a[3]>'5')\n\t{\n\t\ta[3]='3';\n\t}\n\tif(n==12)\n\t{\n\t\tif(a[0]>'1'&&a[1]!='0')\n\t\t{\n\t\t\ta[0]='0';\n\t\t}\n\t\tif(a[0]>'1'&&a[1]=='0')\n\t\t{\n\t\t\ta[0]='1';\n\t\t}\n\t\tif(a[0]=='1')\n\t\t{\n\t\t\tif(a[1]>'2')\n\t\t\t{\n\t\t\t\ta[1]='0';\n\t\t\t}\n\t\t}\n\t}\n\telse if(n==24)\n\t{\n\t\tif(a[0]>'2')\n\t\t{\n\t\t\ta[0]='0';\n\t\t}\n\t\telse if(a[0]=='2')\n\t\t{\n\t\t\tif(a[1]>'3')\n\t\t\t{\n\t\t\t\ta[1]='0';\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%s\",a);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,j,n,k,l;\n\tscanf(\"%d\",&n);\n\tchar a[n+1];\n\tscanf(\"%s\",a);\n\tif(a[3]>'5')\n\t{\n\t\ta[3]='3';\n\t}\n\tif(n==12)\n\t{\n\t\tif((a[0]>'1'||a[0]=='0')&&a[1]!='0')\n\t\t{\n\t\t\ta[0]='0';\n\t\t}\n\t\tif((a[0]>'1'||a[0]=='0')&&a[1]=='0')\n\t\t{\n\t\t\ta[0]='1';\n\t\t}\n\t\tif(a[0]=='1')\n\t\t{\n\t\t\tif(a[1]>'2')\n\t\t\t{\n\t\t\t\ta[1]='0';\n\t\t\t}\n\t\t}\n\t}\n\telse if(n==24)\n\t{\n\t\tif(a[0]>'2')\n\t\t{\n\t\t\ta[0]='0';\n\t\t}\n\t\telse if(a[0]=='2')\n\t\t{\n\t\t\tif(a[1]>'3')\n\t\t\t{\n\t\t\t\ta[1]='0';\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%s\",a);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8283464566929134, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1c694a0d2c0c526e263ae7d6fb8d44d3", "bug_code_uid": "796edf95d39e33525ebee5998eda281d", "src_uid": "13611e428c24b94023811063bbbfa077", "apr_id": "31ba823e4cc56ba53a4f624a86c6258f", "difficulty": 800, "tags": ["games", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n[10],m[10],i;\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        scanf(\"%d %d\",&n[i],&m[i]);\r\n    }\r\n       for(i=1;i<=t;i++)\r\n       {\r\n        if(n[i]==m[i])\r\n        {\r\n            printf(\"Tonya\\n\");\r\n        }\r\n        else\r\n            printf(\"Burenka\\n\");\r\n    }\r\n  return 0;\r\n}\r\n\r\n\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,m,i;\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        scanf(\"%d %d\",&n,&m);\r\n\r\n\r\n  if((n+m)%2==0)\r\n        {\r\n            printf(\"Tonya\\n\");\r\n        }\r\n        else\r\n            printf(\"Burenka\\n\");\r\n    }\r\n  return 0;\r\n\r\n}\r\n\r\n\r\n\r\n"}
{"similarity_score": 0.45751633986928103, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "73f63637d4a4ae86b90b32a32aa75352", "bug_code_uid": "8dc80c2b0946aca148f97c27e7d19f5f", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "9ac4e89209b1860043a6d0788adec87c", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    long long n,m,i,j=0,count=0,flag=0;\n    scanf(\"%I64d %I64d\",&n,&m);\n    long long a[m];\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    i=1;\n    while(flag==0)\n    {\n        while(i<=n&&flag==0)\n        {\n            if(i==a[j])\n            {\n\n                j++;\n                if(j==m) flag=1;\n                continue;\n            }\n            i++;\n            if(i<n) count++;\n\n\n\n        }\n        i=n;\n        while(i>=1&&flag==0)\n        {\n            if(i==a[j])\n            {\n                j++;\n                if(j==m) flag=1;\n                continue;\n            }\n            i--;\n            if(i>1) count++;\n\n        }\n        i=1;\n    }\n    printf(\"%I64d\",count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    long long n,m,i,j=0,count=0,flag=0;\n    scanf(\"%I64d %I64d\",&n,&m);\n    long long a[m];\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    count=a[0]-1;\n    for(j=0;j<m-1;j++)\n    {\n            if(a[j]>a[j+1])\n            {\n                count=count+n-a[j]+a[j+1];\n            }\n            else\n            {\n                count=count+a[j+1]-a[j];\n            }\n\n    }\n    printf(\"%I64d\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.9751824817518249, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "9ab6440050863208ea1343f404dfd4d9", "bug_code_uid": "0e5adcc94539126b3c0ccffdc027307a", "src_uid": "0ea79b2a7ddf3d4da9c7a348e61933a7", "apr_id": "66f14b8a8ff761aa07bbc662460242db", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n\tint n,m,y,min,a[200],b,x;\n\tscanf(\"%d\",&n);\n\tfor(m=0;m<n;m++)\n\t{\n\t\tscanf(\"%d\",&a[m]);\n\t}\n\tfor(x=0,min=a[0]*15;x<a[0];x++)\n\t\t{\n\t\t\tscanf(\"%d\",&b);\n\t\t\tmin=min+b*5;\n\t\t}\n\tfor(m=1;m<n;m++)\n\t{\n\t\tfor(x=0,y=a[m]*15;x<a[m];x++)\n\t\t{\n\t\t\tscanf(\"%d\",&b);\n\t\t\ty=y+b*5;\n\t\t}\n\t\tif(y<=min)\n\t\t\tmin=y;\n\t}\n\tprintf(\"%d\\n\",min);\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\n\tint n,m,y,min,a[200],b,x;\n\tscanf(\"%d\",&n);\n\tfor(m=0;m<n;m++)\n\t\tscanf(\"%d\",&a[m]);\n\tfor(x=0,min=a[0]*15;x<a[0];x++)\n\t\t{\n\t\t\tscanf(\"%d\",&b);\n\t\t\tmin=min+b*5;\n\t\t}\n\tfor(m=1;m<n;m++)\n\t{\n\t\tfor(x=0,y=a[m]*15;x<a[m];x++)\n\t\t{\n\t\t\tscanf(\"%d\",&b);\n\t\t\ty=y+b*5;\n\t\t}\n\t\tif(y<=min)\n\t\t\tmin=y;\n\t}\n\tprintf(\"%d\\n\",min);\n\treturn 0;\n}"}
{"similarity_score": 0.0664869721473495, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "bb4e5c09e77e70adefbb7a218286d39b", "bug_code_uid": "aba43a35ba36f3086e34e34e7a9432d1", "src_uid": "a063705bd0ce1e17ccaafbbfc2663d93", "apr_id": "24b9140f10d9d5207e04d8322f5cf106", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#define ll long long int\r\nint maxi(int a,int b)\r\n{\r\n    if(a>b){return a;}else {return b;}\r\n}\r\nint mini(int a,int b)\r\n{\r\n    if(a<b){return a;}else {return b;}\r\n}\r\nint sravanth()\r\n{\r\n   int i,n,c1=0,c2=0;\r\n   scanf(\"%d\", &n);\r\n   int a[n];\r\n   for(i=0;i<n;i++)\r\n   {\r\n       scanf(\"%d \", &a[i]);\r\n   }\r\n   for(i=0;i<n;i++)\r\n   {\r\n       if(a[i]==1)\r\n       {\r\n           c1++;\r\n       }\r\n       else if(a[i]==2)\r\n       {\r\n           c2++;\r\n       }\r\n       else\r\n       {\r\n        if(c1>=c2)\r\n        c1++;\r\n\r\n        else\r\n        c2++;\r\n       }\r\n   }\r\n   printf(\"%d\\n\", c1);\r\n}\r\nint main()\r\n{\r\n   ll t;\r\n   scanf(\"%lld\", &t);\r\n   while(t--)\r\n   {\r\n       sravanth();\r\n   }\r\n   return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main() \r\n{\r\n\t\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) \r\n    {\r\n\t\tint n;\r\n        scanf(\"%d\", &n);\r\n\t\tint count = 0;\r\n\t\tfor (int i = 0; i < n; i++) \r\n        {\r\n\t\t\tint s;\r\n\t\t    scanf(\"%d\", &s);\r\n\t\t\t\r\n\t\t\tif (s == 1 || s == 3) \r\n            {\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}\r\n        printf(\"%d\\n\", count);\r\n\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.7163461538461539, "equal_cnt": 14, "replace_cnt": 4, "delete_cnt": 5, "insert_cnt": 5, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "a5c8d80f217bac401c211d0b101dc41b", "bug_code_uid": "ab4068bd3d219ae90f30f2717e0fc366", "src_uid": "d7dc61a8f3b0091320b96cedd1f4f0a7", "apr_id": "96c7556fa2cddd4ac1e7ca4f76f9b4b1", "difficulty": 1000, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main( void ){\n\n   int n, x, d, i, j, encontrado = 0, escupe;\n   \n   scanf( \"%d\", &n );\n   \n   int coord[ n ][ 1 ];\n   for( i = 0; i < n ; i++ ){\n      scanf( \"%d %d\", &coord[ i ][ 0 ], &coord[ i ][ 1 ] );\n   }\n   for( i = 0; i < n; i++ ){\n      escupe = coord[ i ][ 0 ] + coord[ i ][ 1 ];\n      for( j = 0; j < n; j++ ){\n         if( coord[ j ][ 0 ] == escupe && coord[ j ][ 1 ] + coord[ j ][ 0 ] == coord[ i ][ 0 ] ){\n            encontrado = 1;\n            puts( \"YES\" );\n            break;\n         }\n      }\n      if( encontrado == 1 ){\n         break;\n      }\n   }\n   if( encontrado == 0 ){\n      puts( \"NO\" );\n   }\n}\n", "fixed": "#include <stdio.h>\n\nint main( void ){\n\n   int n, i, j, encontrado = 0, escupe = 0;\n   \n   scanf( \"%d\", &n );\n   \n   int coord[ n ][ 2 ];\n   for( i = 0; i < n ; i++ ){\n      scanf( \"%d %d\", &coord[ i ][ 0 ], &coord[ i ][ 1 ] );\n      \n      escupe = coord[ i ][ 0 ] + coord[ i ][ 1 ];\n      if( i != 0 ){\n      for( j = 0; j < i; j++ ){\n         if( coord[ j ][ 0 ] == escupe && coord[ j ][ 0 ] + coord[ j ][ 1 ] == coord[ i ][ 0 ] ){\n            encontrado = 1;\n            break;\n         }\n      }\n      }\n   }\n   if( encontrado == 0 ){\n      printf( \"NO\" );\n   }else{\n      printf( \"YES\" );\n   }\n}\n"}
{"similarity_score": 0.9965034965034965, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2811ffdef2852b9e8bc00c30cae41b4f", "bug_code_uid": "aba436f470230e4e70fea35c5659377e", "src_uid": "905cc16ecbbb3305416f9aa6e4412642", "apr_id": "8782fed4d2625b73cbdd03557c22d1a3", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<n;i++)\n    {\n        int n,m;\n        scanf(\"%d %d\",&n,&m);\n        if(2<n-1)\n        {\n            printf(\"%d\\n\",2*m);\n        }\n        else\n        {\n            printf(\"%d\\n\",(n-1)*m);\n        }\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n        int n,m;\n        scanf(\"%d %d\",&n,&m);\n        if(2<n-1)\n        {\n            printf(\"%d\\n\",2*m);\n        }\n        else\n        {\n            printf(\"%d\\n\",(n-1)*m);\n        }\n    }\n}"}
{"similarity_score": 0.14114832535885166, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "395ed3c0f488e5566a9a76b26fe177ed", "bug_code_uid": "9030f9e4c2a414345e69ffd4a26eca32", "src_uid": "48f3ff32a11770f3b168d6e15c0df813", "apr_id": "19bfd971048703d5360744ed464e9a6e", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid f1(int a[],int v,int x)\n{\n\ta[v-1]=x;\n}\nvoid f2(int a[],int n,int y)\n{\n\tint i;\n\tfor(i=0;i<n;i++)\n\t\ta[i]=a[i]+y;\n}\nint main()\n{\n\tint n,m,a[100004],i,f,q,y,v,x;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&f);\n\t\tif(f==3)\n\t\t{\n\t\t\tscanf(\"%d\",&q);\n\t\t\tprintf(\"%d\\n\",a[q-1]);\n\t\t}\n\t\tif(f==2)\n\t\t{\n\t\t\tscanf(\"%d\",&y);\n\t\t\tf2(a,n,y);\n\t\t}\n\t\tif(f==1)\n\t\t{\n\t\t\tscanf(\"%d %d\",&v,&x);\n\t\t\tf1(a,v,x);\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,i,n,m,a[100004],q,y,v,x;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tint c=0;\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\tif(t==3)\n\t\t{\n\t\t\tscanf(\"%d\",&q);\n\t\t\tprintf(\"%d\\n\",a[q-1]+c);\n\t\t}\n\t\tif(t==2)\n\t\t{\n\t\t\tscanf(\"%d\",&y);\n\t\t\tc=c+y;\n\t\t}\n\t\tif(t==1)\n\t\t{\n\t\t\tscanf(\"%d %d\",&v,&x);\n\t\t\ta[v-1]=x-c;\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.7403156384505022, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "54fe4dcdf489ff9506b29d42f8e8c9ac", "bug_code_uid": "b230beaf451d11ac6d957f12ddd45268", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "c70dc0b22c2fe5e6a18fa422523142e5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{int n,i,d,s=0;\nscanf(\"%d\",&n);\nint x[n];\nint y[n];\n   for (i=0;i<n;i++)\n    scanf(\"%d\",&x[i]);\n    for (i=0;i<n;i++)\n    scanf(\"%d\",&y[i]);\n    for(i=0;i<n;i++)\n    {if(x[i]>y[i])\n    d=x[i]-y[i];\n    else\n        d=y[i]-x[i];\n    if(d>5)\n        d=10-d;\n\n\n    s=s+d;\n\n\n\n\n    }\n    printf(\"%d\",s);\n\n\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{int n,i,d,s=0,x1,y2;\nscanf(\"%d\",&n);\nchar x[n];\nchar y[n];\nscanf(\"%s\",x);\nscanf(\"%s\",y);\n    for(i=0;i<n;i++)\n    {\n\n\n\n        if(x[i]>y[i])\n    d=x[i]-y[i];\n    else\n        d=y[i]-x[i];\n    if(d>5)\n        d=10-d;\n\n\n    s=s+d;\n\n\n\n\n    }\n    printf(\"%d\",s);\n\n\n\n    return 0;\n}"}
{"similarity_score": 0.20333333333333334, "equal_cnt": 22, "replace_cnt": 12, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "bd1d0a9e6bf9f7099f720be395b10102", "bug_code_uid": "c7f4a5e00b9bc9d4b322b8defa2d7d5f", "src_uid": "69838d9f9214c65b84a21d4eb546ea4b", "apr_id": "024015b7b913123ef41d7ff59ddc3c6a", "difficulty": 800, "tags": ["brute force", "data structures", "greedy", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nusing namespace std;\r\nint cmpfunc (const void * a, const void * b) {\r\n   return ( *(int*)a - *(int*)b );\r\n}\r\nint main() {\r\n    int T;\r\n    cin >> T;\r\n    while (T--) {\r\n        int n,count=-1;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for (int i = 0; i < n; ++i) scanf(\"%d\",&a[i]);\r\n        qsort(a[0],n,sizeof(int),cmpfunc);\r\n        int b[n];\r\n        for (int i = 0; i < n; i++) {\r\n            if (i == 0 || a[i] != a[i - 1]) {\r\n                b[i]=a[i];\r\n                count++;\r\n            }\r\n        }\r\n        for (int i = 0; i < n; i++) {\r\n            if (i > 0 && a[i] == a[i - 1]) {\r\n                b[count+1]=a[i];\r\n            }\r\n        }\r\n        for (int i=0 ; i<n ; i++) printf(\"%d\",b[i]);\r\n        printf(\"\\n\");\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint cmpfunc(const void *a, const void *b)\r\n{\r\n    int temp1 = *(int *)a;\r\n    int temp2 = *(int *)b;\r\n    return (temp1 - temp2);\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int n, count = -1,count2=1,count3=0;\r\n        scanf(\"%d\", &n);\r\n        int a[n];\r\n        for (int i = 0; i < n; i++)\r\n            scanf(\"%d\", &a[i]);\r\n        qsort(a, n, sizeof(int), cmpfunc);\r\n        int b[n];\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (i == 0 || a[i] != a[i - 1])\r\n            {\r\n                b[count3] = a[i];\r\n                count++;\r\n                count3++;\r\n            }\r\n        }\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (i > 0 && a[i] == a[i - 1])\r\n            {\r\n                b[count + count2] = a[i];\r\n                count2++;\r\n            }\r\n            else continue;\r\n        }\r\n        for (int i = 0; i < n; i++)\r\n            printf(\"%d \", b[i]);\r\n        printf(\"\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.8507670850767085, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "aef664dd55858073ceda18bd3115f01f", "bug_code_uid": "9858a505422f974069b5128c38d18d96", "src_uid": "71335a9489f0985f4e16435b14d6a34a", "apr_id": "65ac438d0be5d27cc306f87ef969e0ff", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main(int argc, char *argv[]) {\r\n\t\r\n\tint t;\r\n\tlong long k;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%lld\",&k);\r\n\t\tif(k%3==0){\r\n\t\t\tint y=k/3;\r\n\t\t\tprintf(\"%d %d\\n\",y,y);\r\n\t\t}else{\r\n\t\t\tint m=k%3;\r\n\t\t\tint p=(k-m)/3+m;\r\n\t\t\tint q=(k-m)/3;\r\n\t\t\tprintf(\"%d %d\\n\",p,q);\r\n\t\t}\r\n\t}\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main(int argc, char *argv[]) {\r\n\t\r\n\tint t;\r\n\tlong long k;\r\n\tint p,q;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%lld\",&k);\r\n\t\tif(k%3==0){\r\n\t\t\tint y=k/3;\r\n\t\t\tprintf(\"%d %d\\n\",y,y);\r\n\t\t}else{\r\n\t\t\tint m=k%3;\r\n\t\t\tif(m%2==0){\r\n\t\t\t\tp=(k-m)/3;\r\n\t\t\t\tq=(k-m)/3+m/2;\r\n\t\t\t}else{\r\n\t\t\t\t p=(k-m)/3+m;\r\n\t\t\t\t q=(k-m)/3;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tprintf(\"%d %d\\n\",p,q);\r\n\t\t}\r\n\t}\r\n}"}
{"similarity_score": 0.9880191693290735, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "de103e06dc25502648ea6cec28b78a7e", "bug_code_uid": "180f07cbda949ef115527cb8ddc96e0b", "src_uid": "73e8984cceded15027c4ab89c5624a92", "apr_id": "4a9db965018ac816520683de400e96fd", "difficulty": 1600, "tags": ["dp", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nstruct Datos{\n\tlong unsigned int  l;\n\tlong unsigned int  r;\n};\n\ntypedef struct Datos datos;\nvoid QuickSort(datos v[],int j, int n);\nint cargar(datos v[],long unsigned int n);\n\nint main(){\n\tlong unsigned int n,i;\n\tint total;\n\tdo{\n\t\tscanf(\"%lu\",&n);\n\t}while(n<1 && n>500000);\n\n\tdatos v[n];\n\n\tfor(i=0; i<n; i++){\n\t\tdo{\n\t\t\tscanf(\"%lu\", &v[i].l);\n\t\t\tscanf(\"%lu\",&v[i].r);\n\t\t}while(v[i].l<1 && v[i].r>10000000000 && v[i].l > v[i].r  );\n\t}\n\n\n\ttotal = cargar(v,n);\n\n\tprintf(\"%d\",total);\t\n\n\treturn 0;\n}\n\n\nint cargar(datos v[], long unsigned int n){\n\tint c=1,b=0,p;\n\tlong unsigned int j,i,k;\n\tdatos aux;\nif(n>0){\n\n\t QuickSort( v, 0,  n);\n\tj=0;\n\tk=0;\n\n\tfor(i=1 ; i <n ;  i++ ){\n\t\tif(v[j].r < v[i].l ){\n\t\t\tc++;\n\t\t\tj=i;\n\t\t}\n\t\tif( v[k].l > v[i].r  ){\n\t\t\tc++;\n\t\t\tk=i;\n\t\t}\n\t}\n\n\n}else{\n\tc=0;\n}\n\treturn c;\n}\n\nvoid QuickSort(datos v[],int j, int n){\nint i,paso;\ni=n;\ndatos aux;\n\tfor(i=n/2; i !=0; i/=2){\n\t\tpaso=1;\n\t\twhile(paso !=0 ){\n\t\t\tpaso=0;\n\t\t\tfor(j=i; j<n ; j++){\n\t\t\t\tif( v[j-i].l >= v[j].l ){\n\n\t\t\t\t\tif( v[j-i].l == v[j].l ){\t\n\t\t\t\t\t\tif( v[j-i].r > v[j].r ){\n\t\t\t\t\t\t\taux= v[j-i];\n\t\t\t\t\t\t\tv[j-i]=v[j];\n\t\t\t\t\t\t\tv[j]=aux;\n\t\t\t\t\t\t\tpaso=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\taux= v[j-i];\n\t\t\t\t\t\tv[j-i]=v[j];\n\t\t\t\t\t\tv[j]=aux;\n\t\t\t\t\t\tpaso=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n}\n", "fixed": "#include<stdio.h>\n\nstruct Datos{\n\tlong unsigned int  l;\n\tlong unsigned int  r;\n};\n\ntypedef struct Datos datos;\nvoid QuickSort(datos v[],int j, int n);\nint cargar(datos v[],long unsigned int n);\n\nint main(){\n\tlong unsigned int n,i;\n\tint total;\n\tdo{\n\t\tscanf(\"%lu\",&n);\n\t}while(n<1 && n>500000);\n\n\tdatos v[n];\n\n\tfor(i=0; i<n; i++){\n\t\tdo{\n\t\t\tscanf(\"%lu\", &v[i].l);\n\t\t\tscanf(\"%lu\",&v[i].r);\n\t\t}while(v[i].l<1 && v[i].r>10000000000 && v[i].l > v[i].r  );\n\t}\n\n\n\ttotal = cargar(v,n);\n\n\tprintf(\"%d\",total);\t\n\n\treturn 0;\n}\n\n\nint cargar(datos v[], long unsigned int n){\n\tint c=1,b=0,p;\n\tlong unsigned int j,i,k;\n\tdatos aux;\nif(n>0){\n\n\t QuickSort( v, 0,  n);\n\tj=0;\n\tk=0;\n\n\tfor(i=1 ; i <n ;  i++ ){\n\t\tif(v[j].r < v[i].l ){\n\t\t\tc++;\n\t\t\tj=i;\n\t\t}\n\t\tif( v[k].l > v[i].r  ){\n\t\t\tc++;\n\t\t\tk=i;\n\t\t}\n\t}\n\n\n}else{\n\tc=0;\n}\n\treturn c;\n}\n\nvoid QuickSort(datos v[],int j, int n){\nint i,paso;\ni=n;\ndatos aux;\n\tfor(i=n/2; i !=0; i/=2){\n\t\tpaso=1;\n\t\twhile(paso !=0 ){\n\t\t\tpaso=0;\n\t\t\tfor(j=i; j<n ; j++){\n\t\t\t\tif( v[j-i].r >= v[j].r ){\n\n\t\t\t\t\tif( v[j-i].r == v[j].r ){\t\n\t\t\t\t\t\tif( v[j-i].l > v[j].l ){\n\t\t\t\t\t\t\taux= v[j-i];\n\t\t\t\t\t\t\tv[j-i]=v[j];\n\t\t\t\t\t\t\tv[j]=aux;\n\t\t\t\t\t\t\tpaso=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\taux= v[j-i];\n\t\t\t\t\t\tv[j-i]=v[j];\n\t\t\t\t\t\tv[j]=aux;\n\t\t\t\t\t\tpaso=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n}\n"}
{"similarity_score": 0.9970731707317073, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0f029efc262f7e625bd437d324428c18", "bug_code_uid": "e4f79e1d95b4314d4156d89fc4ec7c5d", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "fcfd9477492e0fa9504105461a834743", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long cnt[1000];\nint main()\n{\n    long long n,m;\n    scanf(\"%I64d %I64d\",&n,&m);\n    long long myarray[n];\n    long long i=0,sum=0;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&myarray[i]);\n    }\n    for(i=n-1; i>=0; i--)\n    {\n        if(cnt[myarray[i]]==0)\n        {\n            sum++;\n        }\n        cnt[myarray[i]]=1;\n        myarray[i]=sum;\n    }\n    long long x;\n    while(m--)\n    {\n        scanf(\"%I64d\",&x);\n        printf(\"%I64d\\n\",myarray[x-1]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nlong long cnt[1000000];\nint main()\n{\n    long long n,m;\n    scanf(\"%I64d %I64d\",&n,&m);\n    long long myarray[n];\n    long long i=0,sum=0;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&myarray[i]);\n    }\n    for(i=n-1; i>=0; i--)\n    {\n        if(cnt[myarray[i]]==0)\n        {\n            sum++;\n        }\n        cnt[myarray[i]]=1;\n        myarray[i]=sum;\n    }\n    long long x;\n    while(m--)\n    {\n        scanf(\"%I64d\",&x);\n        printf(\"%I64d\\n\",myarray[x-1]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.936046511627907, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "e7070a8f1459b380902f7f886b60369a", "bug_code_uid": "797cb815494483a6cafc60aafb2afeb8", "src_uid": "260666df22ee510fcce3ebdfbb8b71a2", "apr_id": "a62d78c4cfdd229d60dd9a7c5b85f729", "difficulty": 1000, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main(){\n\tint n, i;\n\tdouble res = 0;\n\tscanf(\"%d\", &n);\n\tfor(i = 1; i <= n; i++){\n\t\tres += 1.0 / i;\n\t}\n\tprintf(\"%lf\", res);\n\t\t\n\treturn 0;\n\t\n}", "fixed": "#include <stdio.h>\n\nint main(){\n\tint n, i;\n\tdouble res = 0;\n\tscanf(\"%d\", &n);\n\tfor(i = 1; i <= n; i++){\n\t\tres += 1.0 / i;\n\t}\n\tprintf(\"%f\", res);\t\t\n\treturn 0;\n\t\n}"}
{"similarity_score": 0.563984674329502, "equal_cnt": 20, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 11, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "989e5a9f2072957d557c8564aed32404", "bug_code_uid": "c88ed70a41d0857261cc385f6e81cd62", "src_uid": "447c17cba953d6e2da50c242ac431ab4", "apr_id": "10d131d2ef9e93b38311e0efa819efc0", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int i,t,a,b,r,x,m,s,fs,ts;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n        scanf(\"%d %d\",&m,&s);\r\n        fs = 0;\r\n        while(m--){\r\n            scanf(\"%d\",&x);\r\n            fs = fs + x;\r\n        }\r\n        ts = fs + s;\r\n        r = 8*ts + 1;\r\n        a = floor(sqrt(r));\r\n        b = a*a;\r\n        if(r == b){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int i,t,r,sq,d,num,max,m,s,found_s,total_s,req_s,alt_s;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n        scanf(\"%d %d\",&m,&s);\r\n        found_s = 0;\r\n        max = 0;\r\n        while(m--){\r\n            scanf(\"%d\",&num);\r\n            if(num > max){\r\n                max = num;\r\n            }\r\n            found_s = found_s + num;\r\n        }\r\n        alt_s = (max*(max + 1)) / 2;\r\n        req_s = alt_s - found_s;\r\n        total_s = found_s + s;\r\n        d = 8*total_s + 1;\r\n        r = floor(sqrt(d));\r\n        sq = r*r;\r\n        if(s >= req_s){\r\n            if(d == sq){\r\n                printf(\"YES\\n\");\r\n            }\r\n            else{\r\n                printf(\"NO\\n\");\r\n            }\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.9989023051591658, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "730f1f3cf6f5bc78eadb5cedfd12c84a", "bug_code_uid": "a4d531fa5e9979a009e6573e9b1ea06e", "src_uid": "474f29da694929a64eaed6eb8e4349c3", "apr_id": "9dfc59f021b3def20097a0d76e958291", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint min(int a,int b)\n{\n    if(a>b) return b;\n    return a;\n}\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int step1,n,x,y,d,stepn;\n        scanf(\"%d%d%d%d\",&n,&x,&y,&d);\n        if((y-x)%d==0&&y-x>=0) printf(\"%d\\n\",(y-x)/d);\n        else if((x-y)%d==0&&x-y>=0) printf(\"%d\\n\",(x-y)/d);\n        else if((x-y)%d)\n        {\n            if((x-1)%d) step1=(x-1)/d+1;\n            else step1=(x-1)/d;\n            if((y-1)%d);\n            else step1=step1+(y-1)/d;//\u4ece1\u8d70\n            if((n-x)%d) stepn=(n-x)/d+1;\n            else stepn=(n-x)/d;\n            if((n-y)%d);\n            else stepn=stepn+(n-y)/d;//\u4ecen\u8d70\n            if((y-1)%d==0&&(n-x)%d==0) printf(\"%d\\n\",min(step1,stepn));\n            else if((n-y)%d&&(y-1)%d==0) printf(\"%d\\n\",step1);\n            else if((y-1)%d&&(n-y)%d==0) printf(\"%d\\n\",stepn);\n            else printf(\"-1\\n\");\n        }\n    }\n     return 0;\n}", "fixed": "#include<stdio.h>\nint min(int a,int b)\n{\n    if(a>b) return b;\n    return a;\n}\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int step1,n,x,y,d,stepn;\n        scanf(\"%d%d%d%d\",&n,&x,&y,&d);\n        if((y-x)%d==0&&y-x>=0) printf(\"%d\\n\",(y-x)/d);\n        else if((x-y)%d==0&&x-y>=0) printf(\"%d\\n\",(x-y)/d);\n        else if((x-y)%d)\n        {\n            if((x-1)%d) step1=(x-1)/d+1;\n            else step1=(x-1)/d;\n            if((y-1)%d);\n            else step1=step1+(y-1)/d;//\u4ece1\u8d70\n            if((n-x)%d) stepn=(n-x)/d+1;\n            else stepn=(n-x)/d;\n            if((n-y)%d);\n            else stepn=stepn+(n-y)/d;//\u4ecen\u8d70\n            if((y-1)%d==0&&(n-y)%d==0) printf(\"%d\\n\",min(step1,stepn));\n            else if((n-y)%d&&(y-1)%d==0) printf(\"%d\\n\",step1);\n            else if((y-1)%d&&(n-y)%d==0) printf(\"%d\\n\",stepn);\n            else printf(\"-1\\n\");\n        }\n    }\n     return 0;\n}"}
{"similarity_score": 0.9988399071925754, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2b1d375e09610f341a28d269c02ef1a7", "bug_code_uid": "4b77865724917b1a77c26477ea7bbf3e", "src_uid": "b4341e1b0ec0b7341fdbe6edfe81a0d4", "apr_id": "139614afa0d2cdc447a2d8961e914e5a", "difficulty": 1400, "tags": ["implementation", "sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    freopen(\"input.in\",\"r\",stdin);\n    int v[10]={0},max_rating;\n    int skill_nr,points,i,rating=0,number,possible_skills;\n    scanf(\"%d %d\",&skill_nr,&points);\n    max_rating=skill_nr*10;\n    for(i=0; i<skill_nr; i++)\n    {\n        scanf(\"%d\",&number);\n        if(number<100)\n            v[number%10]++;\n\n        rating=rating+number/10;\n    }\n    for(i=9; i>=0 && points>0; i--)\n    {\n        possible_skills=points/(10-i);\n        if(possible_skills>=v[i])\n        {\n            rating=rating+v[i];\n            points=points-(v[i]*(10-i));\n        }\n        else\n        {\n            rating=rating+possible_skills;\n            points=points-(possible_skills*(10-i));\n        }\n    }\n\n    while(rating<max_rating && points>=10)\n    {\n        rating++;\n        points=points-10;\n    }\n    printf(\"%d\",rating);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    //freopen(\"input.in\",\"r\",stdin);\n    int v[10]={0},max_rating;\n    int skill_nr,points,i,rating=0,number,possible_skills;\n    scanf(\"%d %d\",&skill_nr,&points);\n    max_rating=skill_nr*10;\n    for(i=0; i<skill_nr; i++)\n    {\n        scanf(\"%d\",&number);\n        if(number<100)\n            v[number%10]++;\n\n        rating=rating+number/10;\n    }\n    for(i=9; i>=0 && points>0; i--)\n    {\n        possible_skills=points/(10-i);\n        if(possible_skills>=v[i])\n        {\n            rating=rating+v[i];\n            points=points-(v[i]*(10-i));\n        }\n        else\n        {\n            rating=rating+possible_skills;\n            points=points-(possible_skills*(10-i));\n        }\n    }\n\n    while(rating<max_rating && points>=10)\n    {\n        rating++;\n        points=points-10;\n    }\n    printf(\"%d\",rating);\n    return 0;\n}\n"}
{"similarity_score": 0.8318804483188045, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "86e294740f905e761c85c5378e47aaf9", "bug_code_uid": "997347c107a4a54e18f4bc9b54d58451", "src_uid": "98de093d78f74273e0ac5c7886fb7a41", "apr_id": "9c56e2411511fde8c8394c25c12fc001", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\nlong long k,a,b,c;\nscanf(\"%lld %lld %lld\",&k,&a,&b);\nif((a<0)&&(b>=0))\n    c=(b/k)+(-a/k)+1;\nif((a>=0)&&(b>=0)){\n    c=(b-a)/k;\n    if((a%k==0)||(b%k==0))\n        c++;}\nif((a<0)&&(b<0)){\n    c=(-a+b)/k;\n    if((-a%k==0)||(-b%k==0))\n        c++;}\nif (b==a){\n    if (a%k==0)\n        c=1;\n    else\n        c=0;\n}\nprintf(\"%lld\",c);\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main(){\nlong long k,a,b,c;\nscanf(\"%lld %lld %lld\",&k,&a,&b);\nif((a<0)&&(b>=0))\n    c=(b/k)+(-a/k)+1;\nif((a>=0)&&(b>=0)){\n    if((a%k==0)||(b%k==0))\n        c=((b-a)/k)+1;\n    else\n        c=(b-a+1)/k;\n    }\nif((a<0)&&(b<0)){\n    if((-a%k==0)||(-b%k==0))\n        c=((-a+b)/k)+1;\n    else\n        c=(-a+b+1)/k;\n    }\nif (b==a){\n    if (a%k==0)\n        c=1;\n    else\n        c=0;\n}\nprintf(\"%lld\",c);\nreturn 0;\n}\n"}
{"similarity_score": 0.9271523178807947, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "43bb17255e4633f1445b6221bbb28d68", "bug_code_uid": "9a8645ee29f31dbab67aa3e539b3fd4b", "src_uid": "daabf732540e0f66d009dc211c2d7b0b", "apr_id": "6fe369229a093100620be82443d67220", "difficulty": 1500, "tags": ["number theory", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int b[100090];\nint main()\n{\n    long long n,x,i,m,max=0;\n    long long count=0;\n    scanf(\"%I64d %I64d\",&n,&x);\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&m);\n        b[m]++;\n        if(m>max) max=m;\n    }\n\n\n\n    for(i=1; i<=max; i++)\n    {\n        if(b[i])\n        {\n\n            int t=i^x;\n\n\n            if(t<=max)\n            {\n\n                if(t==i && b[t]==1) continue;\n                count+= b[i]*b[t];\n                b[i]=0;\n                b[t]=0;\n            }\n\n\n        }\n\n    }\n\n    printf(\"%I64d\\n\",count);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int b[100090];\nint main()\n{\n    long long n,x,i,m,max=0;\n    long long count=0;\n    scanf(\"%I64d %I64d\",&n,&x);\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&m);\n        b[m]++;\n        if(m>max) max=m;\n    }\n\n\n\n    for(i=1; i<=max; i++)\n    {\n        if(b[i])\n        {\n\n            int t=i^x;\n\n\n            if(t<=max)\n            {\n\n                if(t==i)\n                    count+= (b[i]* (b[i]-1))/2;\n\n\n                else\n                count+= b[i]*b[t];\n                b[i]=0;\n                b[t]=0;\n            }\n\n\n        }\n\n    }\n\n    printf(\"%I64d\\n\",count);\n\n    return 0;\n}\n"}
{"similarity_score": 0.6156583629893239, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e1d90e53b24e117e98cfc0fb60455edf", "bug_code_uid": "25b57f378db107bf5273e61acd126eac", "src_uid": "2589e832f22089fac9ccd3456c0abcec", "apr_id": "df2b355f84d4f1b6ec4bfb5512c0283f", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int t;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tint x,y,n;\n\tscanf(\"%d\",&x);\n\tscanf(\"%d\",&y);\n\tscanf(\"%d\",&n);\n\tint k=n;\n\twhile(1)\n\t{int m=k%x;\n\t\tif(m==y)\n\t\t{\n\t\t\tprintf(\"%d\\n\",k);\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tk-=1;\n\t\t}\n\t\t\n\t}\n\t}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int t;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tint x,y,n;\n\tscanf(\"%d\",&x);\n\tscanf(\"%d\",&y);\n\tscanf(\"%d\",&n);\n\tint k=n-(n%x);\n\tint r=n%x;\n\tif(r<y)\n\t{\n\t\tprintf(\"%d\\n\",k-(x-y));\n\t}\n\telse if(r>y)\n\t{\n\t\tprintf(\"%d\\n\",n-(r-y));\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\",n);\n\t}\n\t}\n}"}
{"similarity_score": 0.8985282726568552, "equal_cnt": 17, "replace_cnt": 2, "delete_cnt": 12, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "7d90f0dbdff2e5da47aa132c134cbd31", "bug_code_uid": "70d26e5b733dd0f1513408217597ef5f", "src_uid": "18b3d8f57ecc2b392c7b1708f75a477e", "apr_id": "58e01e1c3463c166c00ee989d30c16bb", "difficulty": 1200, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint arr[100000];\nint main()\n{\n    int n,k,i,a,flag=1;\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<n;i++)\n        arr[i]=1;\n    arr[k-1]=k;\n    for(i=k-2;i>=0;i--)\n        arr[i]=arr[i+1]-1;\n        a=1;\n    printf(\"1 \");\n    for(i=n-2;i>=0;i--)\n    {\n        if(arr[i]==1)\n            printf(\"%d \",++a);\n        else if(arr[i]!=1)\n        {\n            if(flag==1)\n            {\n                printf(\"%d \",a+arr[i]);\n                flag=0;\n                a=a+arr[i];\n            }\n            else\n            {\n                printf(\"%d \",a-arr[i]);\n                a=a-arr[i];\n                flag=1;\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint arr[100000];\nint main()\n{\n    int n,k,i,a,flag=1,f=1;\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<n;i++)\n        arr[i]=1;\n    arr[k-1]=k;\n    for(i=k-2;i>=0;i--)\n        arr[i]=arr[i+1]-1;\n    a=1;\n    printf(\"1 \");\n    for(i=n-2;i>=0;i--)\n    {\n        if((arr[i]==1)&&(f==1))\n            printf(\"%d \",++a);\n        else\n        {\n            f=0;\n    if(flag==1)\n        {\n            printf(\"%d \",a+arr[i]);\n            flag=0;\n            a=a+arr[i];\n        }\n        else\n        {\n            printf(\"%d \",a-arr[i]);\n            a=a-arr[i];\n            flag=1;\n        }\n    }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6605504587155964, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "aa2e40aa6c547f8c18a29ee35c4364a8", "bug_code_uid": "702903cfc407dfca617f6feec4afe2fa", "src_uid": "e702594a8e993e135ea8ca78eb3ecd66", "apr_id": "6a3cb0cbe3c32dd9ab361d6030a096a1", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint n,a,b,mx,mn=2147483647,ind=-1,i;\nint main()\n{\n    scanf(\"%d\",&n);\n    \n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        if(a<=mn && b>=mx)\n        {\n            mn=a;   mx=b;\n            ind=i+1;\n        }\n    }\n    printf(\"%d\\n\",ind);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint n,a[100005],b[100005],mx,mn=2147483647,ind=-1,i;\nint main()\n{\n    scanf(\"%d\",&n);\n    \n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a[i],&b[i]);\n        if(a[i]<=mn)mn=a[i];\n        if(b[i]>=mx)mx=b[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==mn && b[i]==mx)    {ind=i+1;break;}\n    }\n    printf(\"%d\\n\",ind);\n    return 0;\n}\n"}
{"similarity_score": 0.49447748513169076, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "e9ec64585b267dee43a36afc30b144c1", "bug_code_uid": "f87b357ffdae9bc4ed2062efd2f403ea", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "fed39b77acb1e4e316693090f2fe44a0", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n  int main() {\n  int i, l, c=0;\n  char num[100002], c1[100002], c2[100002] = {0}, t;\n  scanf(\"%s\", num);\n  l = strlen(num);\n  for(i = 0 ; num[i] != '\\0' ; i++)\n     if((num[i] - 48) % 2 == 0) {\n        strcpy(c1, num);\n        t = c1[l-1];\n        c1[l-1] = c1[i];\n        c1[i] = t;\n        if(strcmp(c1, c2) > 0)\n           strcpy(c2, c1);   \n     }\n     else \n        c++;\n  if(c == l)\n     printf(\"-1\");\n  else   \n     puts(c2);\n  return 0;\n  } \n", "fixed": "#include<stdio.h>\n#include<string.h>\n  void swap(char *x,char *y) {\n  char temp = *x;\n         *x = *y;\n         *y = temp; \n  }\n  int main() {\n  int i, c=0, l, lo = 0;\n  char num[1000000], c2[1000000], x;\n  scanf(\"%s\", num);\n  l = strlen(num);\n  for(i = 0 ; num[i] != '\\0' ; i++)\n     if((num[i] - 48) % 2 == 0 && num[i] < num[l-1]) {\n        swap(&num[l-1], &num[i]); \n        strcpy(c2, num);\n        break;   \n     }\n     else if((num[i] - 48) % 2 == 0) {\n        x = num[i];\n        lo = i;  \n     }\n     else \n        c++;\n  if(i == l) {\n     swap(&num[lo], &num[l-1]);\n     strcpy(c2, num);  \n  }\n           \n  if(c == l)\n     printf(\"-1\");\n  else   \n     puts(c2);\n  return 0;\n  } \n"}
{"similarity_score": 0.8473479948253557, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "f0f0fe79017e1b80aedac0826235decb", "bug_code_uid": "565e1a59a851fe8a2cfc0d9871af98d9", "src_uid": "9e71b4117a24b906dbc16e6a6d110f50", "apr_id": "0e454562836a38089d0995cff2c6a305", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long int k[100000];\n    long long int a, b, c, i = 0, n ;\n    long long int  s= 0;\n    scanf(\"%I64d%I64d\", &n, &a);\n    long int t = n;\n    while(n--)\n    {\n        scanf(\"%I64d\", &k[i]);\n        if(i==0)\n        {\n            b = k[i];\n            c = k[i];\n        }\n        if(i>0)\n        {\n            if(k[i] > b) b = k[i];\n            if(k[i] < c) c = k[i];\n        }\n        i++;\n    }\n    //printf(\"\\nmax : %ld, min : %ld\\n\", b, c);\n    //printf(\"%ld\\n\", k[2]);\n    \n    \n        for(i = 0; i <t; i++){\n            if((k[i] - c)%a==0){\n                printf(\"-1\\n\");\n                exit(1);\n            }\n            s += (k[i] - c);\n            \n        }\n        printf(\"%I64d\\n\", s/a);\n    \n\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long int k[100000];\n    long long int a, b, c, i = 0, n ;\n    long long int  s= 0;\n    scanf(\"%I64d%I64d\", &n, &a);\n    long int t = n;\n    while(n--)\n    {\n        scanf(\"%I64d\", &k[i]);\n        if(i==0)\n        {\n            b = k[i];\n            c = k[i];\n        }\n        if(i>0)\n        {\n            if(k[i] > b) b = k[i];\n            if(k[i] < c) c = k[i];\n        }\n        i++;\n    }\n    //printf(\"\\nmax : %ld, min : %ld\\n\", b, c);\n    //printf(\"%ld\\n\", k[2]);\n\n    int count  = 0;\n        for(i = 0; i <t; i++){\n            if((k[i] - c)%a!=0 && count == 0){\n                printf(\"-1\\n\");\n                count = 1;\n                break;\n            }\n            s += (k[i] - c);\n\n        }\n        if(count!=1)printf(\"%I64d\\n\", s/a);\n\n\n}\n"}
{"similarity_score": 0.8294010889292196, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "4d9caf61a5174858627a2c2d6211d196", "bug_code_uid": "4cd087d29b554928f77dbd814c4abb57", "src_uid": "351ffff1dfe1bc1762f062f612463759", "apr_id": "ea365110cddc8d344981d8252bcebf18", "difficulty": 900, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main() {\n\tint n,len;\n\tscanf(\"%d\",&n);\n\tgetchar();\n\tchar a[1000];\n\tchar ch;\n\tint cnt_ab=0,cnt_ba=0;\n\tfor(int i=0; i<n; i++) {\n\t\tgets(a);\n\t\tlen=strlen(a);\n\t\t//printf(\"%d\\n\",len);\n\t\tfor(int j=0; j<len-1; j++) {\n\t\t\tif(a[j]=='a'&&a[j+1]=='b')\n\t\t\t\tcnt_ab++;\n\t\t\tif(a[j]=='b'&&a[j+1]=='a')\n\t\t\t\tcnt_ba++;\n\t\t}\n\t\tif(cnt_ab==cnt_ba)\n\t\t\tprintf(\"%s\\n\",a);\n\t\tif(cnt_ab!=cnt_ba)\n\t\t{\n\t\t\tif(a[0]=='a')\n\t\t\t{\n\t\t\t\ta[0]='b';\n\t\t\t}\n\t\t\tif(a[0]=='b')\n\t\t\t{\n\t\t\t\ta[0]='a';\n\t\t\t}\n\t\t\tprintf(\"%s\\n\",a);\n\t\t}\n\t\t\n\t}\n\n}\n\t\t  \t \t\t\t\t           \t \t\t\t  \t \t", "fixed": "#include<stdio.h>\n#include<string.h>\nint main() {\n\tint n,len;\n\tscanf(\"%d\",&n);\n\tgetchar();\n\tchar a[1000];\n\tchar ch;\n\n\tfor(int i=0; i<n; i++) {\n\t\tgets(a);\n\t\tint cnt_ab=0,cnt_ba=0;\n\t\tlen=strlen(a);\n\t\t//printf(\"%d\\n\",len);\n\t\tfor(int j=0; j<len-1; j++) {\n\t\t\tif(a[j]=='a'&&a[j+1]=='b')\n\t\t\t\tcnt_ab++;\n\t\t\tif(a[j]=='b'&&a[j+1]=='a')\n\t\t\t\tcnt_ba++;\n\t\t}\n\t\tif(cnt_ab==cnt_ba)\n\t\t\tprintf(\"%s\\n\",a);\n\t\tif(cnt_ab!=cnt_ba) {\n\t\t\tif(a[0]=='a') {\n\t\t\t\ta[0]='b';\n\t\t\t} else if(a[0]=='b') {\n\t\t\t\ta[0]='a';\n\t\t\t}\n\t\t\tprintf(\"%s\\n\",a);\n\t\t}\n\n\t}\n\n}\n \t \t\t\t   \t  \t       \t\t      \t"}
{"similarity_score": 0.7696709585121603, "equal_cnt": 14, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 10, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "6cb37877163e439b5ae603f36da0fde0", "bug_code_uid": "eeba9e1d728a59b02425983b731e3046", "src_uid": "513234db1bab98c2c2ed6c7030c1ac72", "apr_id": "89a81d6dfdc67b9d7ce72046bbdffe61", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n\nint main()\n{\n\tint mas[8] = {0, 0, 0, 0, 0, 0, 0, 0};\n\tlong n, i;\n\tint p;\n\tscanf(\"%ld\", &n);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &p);\n\t\tmas[p]++;\n\t}\n\twhile(mas[1] && mas[2] && mas[4]) {\n\t\tprintf(\"1 2 4\\n\");\n\t\tmas[1]--;\n\t\tmas[2]--;\n\t\tmas[4]--;\n\t}\n\twhile(mas[1] && mas[3] && mas[6]) {\n\t\tprintf(\"1 3 6\\n\");\n\t\tmas[1]--;\n\t\tmas[3]--;\n\t\tmas[6]--;\n\t}\n\twhile(mas[1] && mas[2] && mas[6]) {\n\t\tprintf(\"1 2 6\\n\");\n\t\tmas[1]--;\n\t\tmas[2]--;\n\t\tmas[6]--;\n\t}\n\tfor (i = 0; i < 9; i++) {\n\t\tif (mas[i] != 0)\n\t\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n\nint main()\n{\n\tint mas[8] = {0, 0, 0, 0, 0, 0, 0, 0};\n\tlong n, i;\n\tint p, check124 = 0, check136 = 0, check126 = 0;\n\tscanf(\"%ld\", &n);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &p);\n\t\tmas[p]++;\n\t}\n\twhile(mas[1] && mas[2] && mas[4]) {\n\t\t//printf(\"1 2 4\\n\");\n\t\tcheck124++;\n\t\tmas[1]--;\n\t\tmas[2]--;\n\t\tmas[4]--;\n\t}\n\twhile(mas[1] && mas[3] && mas[6]) {\n\t\t//printf(\"1 3 6\\n\");\n\t\tcheck136++;\n\t\tmas[1]--;\n\t\tmas[3]--;\n\t\tmas[6]--;\n\t}\n\twhile(mas[1] && mas[2] && mas[6]) {\n\t\t//printf(\"1 2 6\\n\");\n\t\tcheck126++;\n\t\tmas[1]--;\n\t\tmas[2]--;\n\t\tmas[6]--;\n\t}\n\tfor (i = 0; i < 8; i++) {\n\t\tif (mas[i] != 0) {\n\t\t\tprintf(\"-1\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\twhile (check126--)\n\t\tprintf(\"1 2 6\\n\");\n\twhile (check136--)\n\t\tprintf(\"1 3 6\\n\");\n\twhile (check124--)\n\t\tprintf(\"1 2 4\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.9970958373668926, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "6f7c5fc3d2d949dda700cae28e02f2b7", "bug_code_uid": "1854e7504e9502cbca8c9ba0e735ec7d", "src_uid": "34aa41871ee50f06e8acbd5eee94b493", "apr_id": "cf30f8d624d13780d5061c4f9d14bee2", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdint.h>\n\nint main()\n{\n\tint32_t t;\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t{\n\t\tint32_t r, g, b, max = 0;\n\t\tscanf(\"%d%d%d\", &r, &g, &b);\n\t\tif(r > max)\n\t\t\tmax = r;\n\t\tif(g > max)\n\t\t\tmax = g;\n\t\tif(b > max)\n\t\t\tmax = b;\n\t\tif(max == r)\n\t\t{\n\t\t\tif(g + b > r - 1)\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"No\\n\");\n\t\t}\n\t\telse if(max == g)\n\t\t{\n\t\t\tif(b + r > g - 1)\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"No\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(r + g > b - 1)\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"No\\n\");\n\t\t}\n\t}\n}", "fixed": "#include <stdio.h>\n#include <stdint.h>\n\nint main()\n{\n\tint32_t t;\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t{\n\t\tint32_t r, g, b, max = 0;\n\t\tscanf(\"%d%d%d\", &r, &g, &b);\n\t\tif(r > max)\n\t\t\tmax = r;\n\t\tif(g > max)\n\t\t\tmax = g;\n\t\tif(b > max)\n\t\t\tmax = b;\n\t\tif(max == r)\n\t\t{\n\t\t\tif(g + b >= r - 1)\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"No\\n\");\n\t\t}\n\t\telse if(max == g)\n\t\t{\n\t\t\tif(b + r >= g - 1)\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"No\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(r + g >= b - 1)\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"No\\n\");\n\t\t}\n\t}\n}"}
{"similarity_score": 0.9711846318036286, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "52f2044699682943656907f357b0549d", "bug_code_uid": "67dac9c2a9d8ef264012a5a5ec038950", "src_uid": "94df40fbf9d7e8f91d5e7fde783bb389", "apr_id": "be76c9164777ea01ef751ab59b8c63cc", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "# include <stdio.h>\r\nint main ()\r\n{\r\n\tint t,n,i,j,st,sm,s;\r\n\tchar a[100001];\r\n\tscanf(\"%d\",&t);\r\n\twhile (t--)\r\n\t{\r\n\t\tst=0;\r\n\t\tsm=0;\r\n\t\ts=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tgetchar();\r\n\t\tgets(a);\r\n\t\tfor (i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tif(a[i]=='T')\r\n\t\t\t{\r\n\t\t\t\tst++;\r\n\t\t\t\tif (s>0)\r\n\t\t\t\ts--;\r\n\t\t\t}\r\n\t\t\telse if (a[i]=='M')\r\n\t\t\t{\r\n\t\t\t\tsm++;\r\n\t\t\t\ts++;\r\n\t\t\t}\t\r\n\t\t}\r\n\t\tif (a[0]=='M')\r\n\t\ts=-1;\r\n\t\tif (st!=sm*2||s!=0)\r\n\t\tprintf(\"NO\\n\");\r\n\t\telse\r\n\t\tprintf(\"YES\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "# include <stdio.h>\r\nint main ()\r\n{\r\n\tint t,n,i,j,st,sm,s;\r\n\tchar a[100001];\r\n\tscanf(\"%d\",&t);\r\n\twhile (t--)\r\n\t{\r\n\t\tst=0;\r\n\t\tsm=0;\r\n\t\ts=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tgetchar();\r\n\t\tgets(a);\r\n\t\tfor (i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tif(a[i]=='T')\r\n\t\t\t{\r\n\t\t\t\tst++;\r\n\t\t\t\tif (s>0)\r\n\t\t\t\ts--;\r\n\t\t\t}\r\n\t\t\telse if (a[i]=='M')\r\n\t\t\t{\r\n\t\t\t\tsm++;\r\n\t\t\t\ts++;\r\n\t\t\t}\t\r\n\t\t\tif (sm>st)\r\n\t\t\tbreak; \r\n\t\t}\r\n\t\tif (a[0]=='M')\r\n\t\ts=-1;\r\n\t\tif (st!=sm*2||s!=0)\r\n\t\tprintf(\"NO\\n\");\r\n\t\telse\r\n\t\tprintf(\"YES\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.7754237288135594, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "7c324057bcf3fcd2d2eb7783593658bb", "bug_code_uid": "e3fdef0880894f1deca903f9006c1203", "src_uid": "4d5457d9f053556c78c102f5c32f7542", "apr_id": "f117c1ddc39a239179abb085fe978a87", "difficulty": 800, "tags": ["binary search", "greedy", "math", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int i;\r\n    for(i=0;i<t;i++)\r\n    {\r\n        int n;\r\n        long long int H;\r\n        scanf(\"%d %lld\", &n, &H);\r\n        int arr[n];\r\n        int j;\r\n        for(j=0;j<n;j++)\r\n            scanf(\"%d\", &arr[j]);\r\n        int k;\r\n        for(j=0;j<n;j++)\r\n        {\r\n            for(k=j+1;k<n;k++)\r\n            {\r\n                if(arr[j]<arr[k])\r\n                {\r\n                    int a;\r\n                    a=arr[j];\r\n                    arr[j]=arr[k];\r\n                    arr[k]=a;\r\n                }\r\n            }\r\n        }\r\n        long long int answer=0;\r\n        while(answer>=0)\r\n        {\r\n            H=H-arr[0];\r\n            answer++;\r\n            if(H>0)\r\n            {\r\n                H=H-arr[1];\r\n                answer++;\r\n            }\r\n            if(H>0)\r\n                continue;\r\n            else\r\n                break;\r\n        }\r\n        printf(\"%lld\\n\", answer);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int i;\r\n    for(i=0;i<t;i++)\r\n    {\r\n        int n;\r\n        long long int H;\r\n        scanf(\"%d %lld\", &n, &H);\r\n        int arr[n];\r\n        int j;\r\n        for(j=0;j<n;j++)\r\n            scanf(\"%d\", &arr[j]);\r\n        int k;\r\n        for(j=0;j<n;j++)\r\n        {\r\n            for(k=j+1;k<n;k++)\r\n            {\r\n                if(arr[j]<arr[k])\r\n                {\r\n                    int a;\r\n                    a=arr[j];\r\n                    arr[j]=arr[k];\r\n                    arr[k]=a;\r\n                }\r\n            }\r\n        }\r\n        long long int answer;\r\n        answer=H/(arr[0]+arr[1]);\r\n        answer=answer*2;\r\n        if(H%(arr[0]+arr[1])>arr[0])\r\n            answer=answer+2;\r\n        else if(H%(arr[0]+arr[1])>0)\r\n            answer=answer+1;\r\n        printf(\"%lld\\n\", answer);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.7951807228915663, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "09d8c7fa8f654da8839e7e33a42ff608", "bug_code_uid": "d221278d0732f40ad514fe19e85c73bb", "src_uid": "cf7bf89a6038586b69d3b8021cee0b27", "apr_id": "19aed09a8ce06a0782baa2b6495dab4e", "difficulty": 800, "tags": ["implementation", "geometry"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nusing namespace std;\n\nint main (int argc, char * argv[]) {\n    int i , n , x , y , kl = 0, kr = 0;\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++) {\n        scanf(\"%d%d\", &x , &y);\n        if(y < 0)\n            kl++;\n        else\n            if(y > 0)\n                kr++;\n    }\n    if(kl <= 1 || kr <= 1)\n        printf(\"Yes\");\n    else\n        printf(\"No\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main () {\n    int i , n , x , y , kl = 0, kr = 0;\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++) {\n        scanf(\"%d%d\", &x , &y);\n        if(x < 0)\n            kl++;\n        else\n            if(x > 0)\n                kr++;\n    }\n    if(kl <= 1 || kr <= 1)\n        printf(\"Yes\");\n    else\n        printf(\"No\");\n    return 0;\n}"}
{"similarity_score": 0.9985272459499264, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8d7229bdb8e2948878ce34c5e48fdb09", "bug_code_uid": "237dd428f4710b11ba39bd025a0b8511", "src_uid": "c569b47cf80dfa98a7105e246c3c1e01", "apr_id": "5fcf482e7da2f13f58135c6532e8540d", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        char a[52],ch;\r\n        int b[50]={0};\r\n        scanf(\"%s %c\",a,&ch);\r\n        int i,j,flag=0;\r\n        int len=strlen(a);\r\n        for(i=0,j=0;i<len;i++)\r\n        {\r\n            if(a[i]==ch)\r\n            {\r\n                b[j]=i;\r\n                j++;\r\n            }\r\n        }\r\n        for(i=0;i<j;i++)\r\n        {\r\n            if(b[i]%2==0&&b[i]!=0)\r\n            {\r\n                flag=1;\r\n                printf(\"YES\\n\");\r\n                break;\r\n            }\r\n        }\r\n        if(flag==0)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        char a[52],ch;\r\n        int b[50]={0};\r\n        scanf(\"%s %c\",a,&ch);\r\n        int i,j,flag=0;\r\n        int len=strlen(a);\r\n        for(i=0,j=0;i<len;i++)\r\n        {\r\n            if(a[i]==ch)\r\n            {\r\n                b[j]=i+2;\r\n                j++;\r\n            }\r\n        }\r\n        for(i=0;i<j;i++)\r\n        {\r\n            if(b[i]%2==0&&b[i]!=0)\r\n            {\r\n                flag=1;\r\n                printf(\"YES\\n\");\r\n                break;\r\n            }\r\n        }\r\n        if(flag==0)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9983050847457627, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "bb5d0b33d964846e67f0bb72227488ea", "bug_code_uid": "c921acbb3b9780009ea3fc8cf916f95f", "src_uid": "113ae625e67c8ea5ab07be44c3b58a8f", "apr_id": "0b837ab2a9b2add9526d4af8f841200a", "difficulty": 1500, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n\n#define int long long\n\nint main()\n{\n  int n1,n2,flag1=0,flag2=0,i;\n  char s1[1000001],s2[1000001];\n  scanf(\"%s\",s1);\n  scanf(\"%s\",s2);\n  n1=strlen(s1);\n  n2=strlen(s2);\n  if(n1!=n2)\n  printf(\"NO\\n\");\n  else if(strcmp(s1,s2)==0)\n  printf(\"YES\\n\");\n  else \n  {\n      for(i=0;i<n1;i++)\n      if(s1[i]!='0')\n      {\n          flag1=1;\n          break;\n      }\n       for(i=0;i<n1;i++)\n      if(s2[i]!='0')\n      {\n          flag2=1;\n          break;\n      }\n  \n  if(flag1==0||flag2==0)\n  printf(\"N0\\n\");\n  else\n  printf(\"YES\\n\");\n  }\n  return 0;\n}\n  \n  ", "fixed": "#include <stdio.h>\n#include <string.h>\n\n\n#define int long long\n\nint main()\n{\n  int n1,n2,flag1=0,flag2=0,i;\n  char s1[1000001],s2[1000001];\n  scanf(\"%s\",s1);\n  scanf(\"%s\",s2);\n  n1=strlen(s1);\n  n2=strlen(s2);\n  if(n1!=n2)\n  printf(\"NO\\n\");\n  else if(strcmp(s1,s2)==0)\n  printf(\"YES\\n\");\n  else \n  {\n      for(i=0;i<n1;i++)\n      if(s1[i]!='0')\n      {\n          flag1=1;\n          break;\n      }\n       for(i=0;i<n1;i++)\n      if(s2[i]!='0')\n      {\n          flag2=1;\n          break;\n      }\n  \n  if(flag1==0||flag2==0)\n  printf(\"NO\\n\");\n  else\n  printf(\"YES\\n\");\n  }\n  return 0;\n}\n  \n  "}
{"similarity_score": 0.9934924078091106, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6cc6e608ff9b0eaa3d2a1a9d25a08d9e", "bug_code_uid": "f63e89f1c1cd76dd117370cb9a74ca64", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "20520479530248810eb084d101b0a3fa", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int i,n,sum=0,a=0,b=0;\n    int s1[200000];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&s1[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n\n\n        if(s1[i]>0)\n        {\n            a=a+1;\n        }\n        else if(s1[i]<0 && a==0)\n        {\n            b=b+1;\n        }\n        else if(s1[i]<0 && a>0)\n        {\n            a=a+s1[i];\n\n        }\n        else\n            b=b+1;\n\n    }\n    printf(\"%d\",b);\n\n}\n\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int i,n,sum=0,a=0,b=0;\n    int s1[200000];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&s1[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n\n\n        if(s1[i]>0)\n        {\n            a=a+s1[i];\n        }\n        else if(s1[i]<0 && a==0)\n        {\n            b=b+1;\n        }\n        else if(s1[i]<0 && a>0)\n        {\n            a=a+s1[i];\n\n        }\n        else\n            b=b+1;\n\n    }\n    printf(\"%d\",b);\n\n}\n\n"}
{"similarity_score": 0.9343339587242027, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2b4e74373cb34353dde23b0e44859d83", "bug_code_uid": "1fb7318fcb8f25883aa441393998fe74", "src_uid": "b37bbf1fe9ac5144cfa230633ccbdd79", "apr_id": "c58a42827cff5ee4b4230935862feaf4", "difficulty": 800, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n    int t,n,i;\n    scanf(\"%d\",&t);\n    while(t)\n    {\n        scanf(\"%d\",&n);\n        char s[2*n-1];\n        scanf(\"%s\",s);\n        for(i=0;i<n;i++)\n        printf(\"%c\",s[i]);\n        printf(\"\\n\");\n        t--;\n    }\n}\n", "fixed": "#include <stdio.h>\nint main() {\n    int t,n,i;\n    scanf(\"%d\",&t);\n    while(t)\n    {\n        scanf(\"%d\",&n);\n        char s[2*n-1];\n        //int a[2*n-1];\n        scanf(\"%s\",s);\n        for(i=0;i<(2*n-1);i+=2)\n        printf(\"%c\",s[i]);\n        printf(\"\\n\");\n        t--;\n    }\n}\n"}
{"similarity_score": 0.9013035381750466, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a8331f42476a35c401065d1b85ae702e", "bug_code_uid": "699d7fac67767a52c81dd65660c838a0", "src_uid": "e5fac4a1f3a724234990fe758debc33f", "apr_id": "7b7789dfbc6ca12111f5339c1fac116a", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint t;\tscanf(\"%d\",&t);\n\twhile(t>0)\n\t{\tint a,n,x,l=0,m,s,d,d11;\t\n\t\tscanf(\"%d %d\",&n,&x);\tint c1[500],c2[500];\n\t\t\tfor(int b=0;b<450;b++) c2[b]=0;\n\t\t\tfor(int b=0;b<n;b++)\n\t\t\t\tscanf(\"%d\",&c1[b]);\n\t\tfor(int b=0;b<n;b++)\n\t{\t\ts=c1[b];c2[s]=s;\t}\n//\tfor(int b=1;b<101;b++) printf(\"=%d\\n\",c2[b]);\n\t\tfor(int d=1;d<450;d++)\n\t{ \tif(c2[d]==0) {l++;}\n\t\tif(x==l) {d11=d;goto k;}\t\t}\nk:\t\t\n\t//printf(\"d11=%d c2[d11+1]=%d\\n\",d11,c2[d11+1]);\n\t\tif(c2[d11+1]==0) printf(\"%d\\n\",d11);\n\t\telse printf(\"%d\\n\",d11+1);\n\t\tt--;\n\t}\n\t\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n\tint t;\tscanf(\"%d\",&t);\n\twhile(t>0)\n\t{\tint a,n,x,l=0,m,s,d,d11;\t\n\t\tscanf(\"%d %d\",&n,&x);\tint c1[500],c2[500];\n\t\t\tfor(int b=0;b<450;b++) c2[b]=0;\n\t\t\tfor(int b=0;b<n;b++)\n\t\t\t\tscanf(\"%d\",&c1[b]);\n\t\tfor(int b=0;b<n;b++)\n\t{\t\ts=c1[b];c2[s]=s;\t}\n//\tfor(int b=1;b<101;b++) printf(\"=%d\\n\",c2[b]);\n\t\tfor(int d=1;d<450;d++)\n\t{ \tif(c2[d]==0) {l++;}\n\t\tif(x==l) {d11=d;goto k;}\t\t}\nk:\t\t\n\t//printf(\"d11=%d c2[d11+1]=%d\\n\",d11,c2[d11+1]);\n\tfor(int u=d11+1;u<450;u++)\n\tif(c2[u]==0) {d11=u-1;break;}\n\tprintf(\"%d\\n\",d11);\n\t\tt--;\n\t}\n\t\n}\n"}
{"similarity_score": 0.5011021307861866, "equal_cnt": 24, "replace_cnt": 14, "delete_cnt": 6, "insert_cnt": 4, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "3d9aeaa3f3803cdf160a6b1929a3db97", "bug_code_uid": "6723f01ac2f812f629d6de6dd2efdd43", "src_uid": "dd55e29ac9756325530ad2f4479d9f6d", "apr_id": "10a2bc595c0c2c5896acf02da3cc4cf1", "difficulty": 900, "tags": ["data structures", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,i,j,k,f=0,x,y,z;\n        scanf(\"%d\",&n);\n        int a[n];\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n        for(i=0; i<n; i++)\n        {\n            for(j=i+1; j<n; j++)\n            {\n                for(k=j+1; k<n; k++)\n                {\n                    if(a[i]<a[j]&&a[j]>a[k])\n                    {\n                        f=1;\n                        x=i+1;\n                        y=j+1;\n                        z=k+1;\n                    }\n                }\n            }\n        }\n        if(f==1)\n        {\n            printf(\"YES\\n\");\n            printf(\"%d %d %d\",x,y,z);\n            printf(\"\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    read:\n    while(t--)\n    {\n        int n,i;\n        scanf(\"%d\",&n);\n        int a[n+1];\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n        for(i=1;i<n-1;i++)\n        {\n            if(a[i-1]<a[i]&&a[i]>a[i+1])\n            {\n                printf(\"YES\\n\");\n                printf(\"%d %d %d\",i,i+1,i+2);\n                printf(\"\\n\");\n                goto read;\n            }\n        }\n        printf(\"NO\\n\");\n    }\n}\n\n"}
{"similarity_score": 0.9916743755781684, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "6a32ea6f48c1055e7cbc5ea4367a69de", "bug_code_uid": "f0088bfffa06ac952fd37069c2b68e46", "src_uid": "39d8677b310bee8747c5112af95f0e33", "apr_id": "14c3dbf9bb5dd07597dcc7366c4c1b49", "difficulty": 1500, "tags": ["binary search", "number theory", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\ntypedef long long int ll;\nint main()\n{\n    ll t,l,r,m,x,y;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        scanf(\"%lld %lld %lld\",&l,&r,&m);\n        for(ll i=l;i<=r;i++)\n        {\n            x=m%i;\n            y=m/i;\n            if((x<=(r-l))&(y!=0))\n            {\n                printf(\"%lld %lld %lld\\n\",i,r,r-x);\n                break;\n            }\n            else if(((i-x)<=(r-l))&(y==0))\n            {\n                printf(\"%lld %lld %lld\\n\",i,l,l+(i-x));\n                break;\n            }\n        }\n    }\n}\n", "fixed": "#include <stdio.h>\ntypedef long long int ll;\nint main()\n{\n    ll t,l,r,m,x,y;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        scanf(\"%lld %lld %lld\",&l,&r,&m);\n        for(ll i=l;i<=r;i++)\n        {\n            x=m%i;\n            y=m/i;\n            if((x<=(r-l))&(y!=0))\n            {\n                printf(\"%lld %lld %lld\\n\",i,r,r-x);\n                break;\n            }\n            else if((i-x)<=(r-l))\n            {\n                printf(\"%lld %lld %lld\\n\",i,l,l+(i-x));\n                break;\n            }\n        }\n    }\n}\n"}
{"similarity_score": 0.8221649484536082, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "281978eaa8b0d638be42cb0e20e4359b", "bug_code_uid": "93484283ffb7fc72f68768477e56ecd9", "src_uid": "45cf60f551bd5cbb1f3df6ac3004b53c", "apr_id": "e963431f4acf6e43863fb86260e419cf", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint h1=0;\n\t\tint h2=0;\n\t\tint h3=0;\n\t\tif(n%3==0){\n\t\t\t//x-1,x,x-2\n\t\t\th1=n/3+1;\n\t\t\th2=h1-1;\n\t\t\th3=h1-2;\n\t\t}else if(n%3==1){\n\t\t\t//x-1,x+1,x-2\n\t\t\th1=n/3+1+1;\n\t\t\th2=h1-2;\n\t\t\th3=h1-3;\n\t\t}else{\n\t\t\t//x,x+1,x-2\n\t\t\th1=n/3+1+1;\n\t\t\th2=h1-1;\n\t\t\th3=h1-2;\n\t\t}\n\t\tprintf(\"%d %d %d\\n\",h2,h1,h3);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint h1=0;\n\t\tint h2=0;\n\t\tint h3=0;\n\t\tif(n%3==0){\n\t\t\t//x-1,x,x-2\n\t\t\th1=n/3+1;\n\t\t\th2=n/3;\n\t\t\th3=n/3-1;\n\t\t}else if(n%3==1){\n\t\t\t//x-1,x+1,x-2\n\t\t\th1=n/3+2;\n\t\t\th2=n/3;\n\t\t\th3=n/3-1;\n\t\t}else{\n\t\t\t//x,x+1,x-2\n\t\t\th1=n/3+2;\n\t\t\th2=n/3+1;\n\t\t\th3=n/3-1;\n\t\t}\n\t\tprintf(\"%d %d %d\\n\",h2,h1,h3);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.885685884691849, "equal_cnt": 26, "replace_cnt": 14, "delete_cnt": 11, "insert_cnt": 1, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "2d67941d196b0b4e4a19aea909f936e7", "bug_code_uid": "aecb9d92bd28a1c51a9fbfc25b98766f", "src_uid": "d3aa0632053634e0602b995cfb476d83", "apr_id": "a00ec124c5952473f73fe7da7c05baf7", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <time.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int ec0 = 0; ec0 < t; ec0++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int aa[n];\n\n        int k = 1;\n        int i = 0;\n        while(i < n)\n        {\n            if(aa[i] == 0)\n            {\n                if(i > 0)\n                {\n                    if(aa[i-1] == 0)\n                    {\n                        k = -1;\n                        break;\n                    }\n                }\n            }\n            if(aa[i] == 1)\n            {\n                if(i == 0)\n                {\n                    k++;\n                }\n                else if(aa[i-1] == 0)\n                {\n                    k++;\n                }\n                else\n                {\n                    k += 5;\n                }\n            }\n            i++;\n        }\n        printf(\"%d\\n\",k);\n    }\n    return 0;\n}\n\n   \t \t\t \t\t\t\t \t\t\t \t\t\t\t\t\t\t\t\t\t \t\t", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int a[n];\n        for(int j=0;j<n;j++)\n        {\n            scanf(\"%d\",&a[j]);\n        }\n        int k=1;\n        int i=0;\n        while(i<n)\n        {\n            if(a[i]==0)\n            {\n                if(i>0)\n                {\n                    if(a[i-1]==0)\n                    {\n                        k=-1;\n                        break;\n                    }\n                }\n            }\n            if(a[i]==1)\n            {\n                if(i==0)\n                {\n                    k++;\n                }\n                else if(a[i-1]==0)\n                {\n                    k++;\n                }\n                else\n                {\n                    k+=5;\n                }\n            }\n            i++;\n        }\n        printf(\"%d\\n\",k);\n    }\n    return 0;\n}\n\n\t  \t\t\t \t\t\t\t\t\t      \t\t\t \t\t \t\t \t"}
{"similarity_score": 0.963963963963964, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fb6eb7c41f5832aaf0dcf0dd28bd1e83", "bug_code_uid": "f8f7703cc63e3ba49de38bb5c59cb00f", "src_uid": "f288d7dc8cfcf3c414232a1b1fcdff3e", "apr_id": "c53202c23726d59e4b1122a06fd885c7", "difficulty": 1000, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n    char a[100001],b[100001];\n    scanf(\"%s\",a);\n    scanf(\"%s\",b);\n    int r=strcmp(a,b);\n    if(r==0)\n        printf(\"-1\");\n    else{\n        if(strlen(a)>strlen(b))\n            printf(\"%ld\",strlen(a));\n        else if(strlen(a)<strlen(b))\n            printf(\"%ld\",strlen(b));\n        \n    }\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n    char a[100001],b[100001];\n    scanf(\"%s\",a);\n    scanf(\"%s\",b);\n    int r=strcmp(a,b);\n    if(r==0)\n        printf(\"-1\");\n    else{\n        if(strlen(a)>strlen(b))\n            printf(\"%ld\",strlen(a));\n        else \n            printf(\"%ld\",strlen(b));\n        \n    }\n}\n"}
{"similarity_score": 0.4180602006688963, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "0e085bcb34123e4cc307057637be8c73", "bug_code_uid": "9068934c0b202097b87a1d3a5305e56e", "src_uid": "2589e832f22089fac9ccd3456c0abcec", "apr_id": "feff31f45ca3ab6b9abe4fc057a899f1", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\n    int x,y,n;\n    int t,i;\n    scanf (\"%d\",&t);\n    while (t--)\n    {\n        scanf (\"%d %d %d\",&x,&y,&n);\n        if (x>n){printf(\"0\\n\");}\n        else\n        {\n        for (i=n;i>x;--i)\n        {\n            if (i % x == y){printf (\"%d\\n\",i);break;}\n        }}\n    }\nreturn 0;}", "fixed": "#include <stdio.h>\n#define ll long long int \nint main ()\n{\n    ll x,y,n;\n    int t;\n    scanf (\"%d\",&t);\n    while (t--)\n    {\n        scanf (\"%lld %lld %lld\",&x,&y,&n);\n      \n       if (n%x<y)n-=y;\n       ll p = n/x;\n       ll a = p*x+y;\n       printf (\"%lld\\n\",a);\n    }\nreturn 0;}"}
{"similarity_score": 0.7015915119363395, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "755dda97c9f28a6a0566878b9280627e", "bug_code_uid": "9d6fc8bebbc72eccdb82b7366c8e1523", "src_uid": "c8fddee2f1c7d325437a7d0b82758b03", "apr_id": "d5898c5da8465140f4c5acec6df6c7ff", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n    int main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int arr[t];\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%d\",&arr[i]);\r\n    }\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        if(arr[i]>=20){\r\n            printf(\"NO\\n\");\r\n        }\r\n        else{\r\n            printf(\"YES\\n\");\r\n            for (int j = 0; j < arr[i]; j++)\r\n            {\r\n                if(j<=arr[i]-2){\r\n                    printf(\"%d \",j+1);\r\n                }\r\n                else{\r\n                    printf(\"%d \\n\",3*j+1);\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint power(int n){\r\n    if(n==0){\r\n        return 1;\r\n    }\r\n    else{\r\n        return 3*power(n-1);\r\n    }\r\n}\r\n    int main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int arr[t];\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%d\",&arr[i]);\r\n    }\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        if(arr[i]>=20){\r\n            printf(\"NO\\n\");\r\n        }\r\n        else{\r\n            printf(\"YES\\n\");\r\n            for (int j = 0; j < arr[i]; j++)\r\n            {\r\n                if (j==0)\r\n                {\r\n                    printf(\"%d \",1);\r\n                }\r\n                else\r\n                {\r\n                    printf(\"%d \",power(j));\r\n                }\r\n                \r\n                \r\n                if(j==arr[i]-1){\r\n                    printf(\"\\n\");\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.9918552036199095, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0881fff72f212c76bf2f4e30d1890551", "bug_code_uid": "de2dc8b91f862f675fd65f450a86d49f", "src_uid": "8e36566b5e0c74730ea118e23b030778", "apr_id": "e36c3fed146a4f264c1a6ee9e8eeb8d0", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,sum2,min,d,f,c,r,o,sum1,sum=0,y,a,b,count1=0,a2[1000000]={0},b2,k;\nscanf(\"%lld%lld\",&n,&k);\nmin=1000000000;\na=1;\nb=0;\nfor(i=0;i<k;i++){\n    scanf(\"%lld\",&a2[i]);\n     if(min>n%a2[i]){\n         min=n%a2[i];\n         a=i+1;\n         b=n/a2[i];\n     }\n}\nprintf(\"%lld %lld\",a,b);\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,sum2,min,d,f,c,r,o,sum1,sum=0,y,a,b,count1=0,a2[1000000]={0},b2,k;\nscanf(\"%lld%lld\",&n,&k);\nmin=1000000000000000000;\na=1;\nb=0;\nfor(i=0;i<k;i++){\n    scanf(\"%lld\",&a2[i]);\n     if(min>n%a2[i]){\n         min=n%a2[i];\n         a=i+1;\n         b=n/a2[i];\n     }\n}\nprintf(\"%lld %lld\",a,b);\nreturn 0;\n}\n"}
{"similarity_score": 0.9245283018867925, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "f767b092cb3cadab39b532a224ddae64", "bug_code_uid": "fe6bece5d66989c470d8c9868c097982", "src_uid": "28c555fefd5c36697a5082c61d8a82b3", "apr_id": "5c59df30700019117fb129349e6599cf", "difficulty": 900, "tags": ["implementation", "sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void *a, const void *b)\n{\n    return *(int *)a - *(int *)b;\n}\n\nunsigned long long a[300001];\nint main()\n{\n    int n;\n    unsigned long long sum = 0;\n\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; i++) scanf(\"%llu\", &a[i]);\n    qsort(a,n,sizeof(int),cmp);\n    for(int i = 0; i < n >> 1; i++)\n        sum += (a[i] + a[n - i - 1])*(a[i] + a[n - i - 1]), printf(\"sum = %d\\n\", sum);\n    printf(\"%llu\\n\", sum);\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void *a, const void *b)\n{\n    return *(int *)a - *(int *)b;\n}\n\nunsigned long long int a[300001];\nint main()\n{\n    int n;\n    unsigned long long int sum = 0;\n\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; i++) scanf(\"%llu\", &a[i]);\n    qsort(a,n,sizeof(unsigned long long int),cmp);\n    for(int i = 0; i < n >> 1; i++) \n        sum += (a[i] + a[n - i - 1])*(a[i] + a[n - i - 1]);\n\n    printf(\"%llu\\n\", sum);\n\n    return 0;\n}"}
{"similarity_score": 0.998062015503876, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b06829804cc2085f53061a23335ece5c", "bug_code_uid": "2de432379a53ded67f6067f5e5d4f854", "src_uid": "43bb8fec6b0636d88ce30f23b61be39f", "apr_id": "748f25eb7def6fde961c68147216fdab", "difficulty": 1100, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    char a[105];\n    scanf(\"%s\",a);\n    int k,n,i,x,j,y;\n    scanf(\"%d\",&k);\n    n=strlen(a);x=n%k;y=n/k;\n    if(x!=0)\n    {\n        printf(\"NO\");return 0;\n    }\n    j=0;\n    while(k!=0)\n    {\n        for(i=j;i<j+(y/2);i++)\n        {\n            if(a[i]!=a[j+(y)-1-i+j])\n            {\n                printf(\"NO\");\n                return 0;\n            }\n        }\n        k--;\n        j=j+y;\n    }\n    printf(\"YES\");\n\n\n\n\n\n\n\n\n\n   return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    char a[1005];\n    scanf(\"%s\",a);\n    int k,n,i,x,j,y;\n    scanf(\"%d\",&k);\n    n=strlen(a);x=n%k;y=n/k;\n    if(x!=0)\n    {\n        printf(\"NO\");return 0;\n    }\n    j=0;\n    while(k!=0)\n    {\n        for(i=j;i<j+(y/2);i++)\n        {\n            if(a[i]!=a[j+(y)-1-i+j])\n            {\n                printf(\"NO\");\n                return 0;\n            }\n        }\n        k--;\n        j=j+y;\n    }\n    printf(\"YES\");\n\n\n\n\n\n\n\n\n\n   return 0;\n\n}"}
{"similarity_score": 0.9250604351329573, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "8c1cb8e4b9245a2ffd1b5508a2a2155d", "bug_code_uid": "32cb1a023f26cc5e23d0668ff6a59652", "src_uid": "80cf3ea119fd398e8f003d22a76895a7", "apr_id": "df01187835d83451d2df5afd42171a79", "difficulty": 1400, "tags": ["dp", "two pointers", "binary search", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<limits.h>\n#define min(a, b) (a < b ? a : b)\n#define TRUE 1\n#define FALSE 0\n\nint freq[5010];\n\nint main(void) {\n    freopen(\"input.txt\",\"r\", stdin);\n    freopen(\"output.txt\",\"w\", stdout);\n    int n, i, res, t;\n    char buff[12];\n    scanf(\"%d\", &n);\n    scanf(\"%s\", buff);\n    for(i = 0; i < n; i++) {\n        scanf(\"%d\", &t);\n        freq[t]++;\n    }\n    for(i = 1; i < 5002; i++) {\n        freq[i] += freq[i-1];\n    }\n    res = INT_MAX - 10;\n    for(i = 1; i <= 2501; i++) {\n        t = freq[2*i] - freq[i-1];\n        res = min(res, n-t);\n    }\n    printf(\"%d\\n\", res);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<limits.h>\n#define min(a, b) (a < b ? a : b)\n#define TRUE 1\n#define FALSE 0\n\nint freq[5010];\n\nint main(void) {\n    freopen(\"input.txt\",\"r\", stdin);\n    freopen(\"output.txt\",\"w\", stdout);\n    int n, i, res, t;\n    char buff[12];\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++) {\n        scanf(\"%d\", &t);\n        freq[t]++;\n    }\n    for(i = 1; i < 5001; i++) {\n        freq[i] += freq[i-1];\n    }\n    res = INT_MAX - 10;\n    for(i = 1; i <= 2500; i++) {\n        t = freq[2*i] - freq[i-1];\n        res = min(res, n-t);\n    }\n    printf(\"%d\\n\", res);\n    return 0;\n}\n"}
{"similarity_score": 0.5314685314685315, "equal_cnt": 18, "replace_cnt": 6, "delete_cnt": 5, "insert_cnt": 6, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "53d2eabbea400045bb4698a1d032e3a7", "bug_code_uid": "5c8fc8dee6f9c9689322c64623732c55", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "09f98a3f7b5c8d0dacd287e505ac8721", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,m,i,j;\nint t=0;\nint root[100];\nscanf(\"%d %d\",&n,&m);\nfor(i=1;i<=n;i++)\n{\nscanf(\"%d\",a[i]);\n}\nfor(i=1;i<=n;i++)\n{\nt=i+a[i];\nif(t==m)\n{ printf(\"YES\");\n}\nelse\ni=t;\n}\nprintf(\"NO\");\nreturn 0;\n}", "fixed": "#include <stdio.h>\nint main () {\nint i,j,n,t,a[30001];int total=1;\nscanf(\"%d%d\",&n,&t);\nfor(i=0;i<n-1;i++)\nscanf(\"%d\",&a[i]);\nwhile(total<t)\n{\ntotal+=a[total-1];\n}\nprintf(total==t?\"YES\":\"NO\");\n return 0;}"}
{"similarity_score": 0.8970588235294118, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "310a99e9116e4674a77e8d652f4fa93e", "bug_code_uid": "197d84c0b0c090b48a643859292300c2", "src_uid": "128372d890f632494e59e81287abd85a", "apr_id": "e90703465247be23f038d89edcea3237", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\nint t,n,m,q;\nscanf(\"%d\",&t);\nwhile(t--)\n{\n   scanf(\"%d\",&n);\n   if(n%7==0)\n\t   printf(\"%d\\n\",n);\n   else\n   {\n   m=n%7;\n   q=n%10;\n   if(q>=m)\n   n=n-m;\n   else\n\t   n=n-m+7;\n   printf(\"%d\",n);\n   }\n}\nreturn 0;\n}\n\n \t\t \t\t\t \t \t\t\t\t\t\t\t\t \t\t \t", "fixed": "#include <stdio.h>\nint main()\n{\nint t,n,m,q;\nscanf(\"%d\",&t);\nwhile(t--)\n{\n   scanf(\"%d\",&n);\n   if(n%7==0)\n\t   printf(\"%d\\n\",n);\n   else\n   {\n   m=n%7;\n   q=n%10;\n   if(q>=m)\n   n=n-m;\n   else\n\t   n=n-m+7;\n   printf(\"%d\\n\",n);\n   }\n}\nreturn 0;\n}\n \t  \t\t \t  \t\t\t\t\t   \t\t   \t \t\t  \t"}
{"similarity_score": 0.4084656084656085, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "be8334a1d5b687d119ddd0281df239fb", "bug_code_uid": "3c593ccf977cf119c0926ecdeb3cfc66", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "bdc3b251231ee5e49db86c83639a515e", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n,i,index = 0,max = 0,a[200000];\n\n\tscanf(\"%d\",&n);\n\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\n\tmax = a[0];\n\n\tfor(i = 1; i < n; i++)\n\t{\n\t\tif(a[i] > max)\n\t\t{\n\t\t\tmax = a[i];\n\n\t\t\tindex = i;\n\t\t}\n\t}\n\n\tfor(i = 0; i < index; i++)\n\t{\n\t\tprintf(\"%d \",a[index] - a[i] + 1);\n\t}\n\n\tfor(i = index; i < n - 1; i++)\n\t{\n\t\tprintf(\"%d \",a[index] - a[i]);\n\t}\n\n\tif(index == n - 1)\n\t{\n\t\tprintf(\"%d\\n\",a[index] - a[n - 1]);\n\t}\n\n\telse\n\t{\n\t\tprintf(\"%d\\n\",a[index] - a[n - 1] - 1);\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n,i,index = 0,max = 0,a[200000],ans[200000];\n\n\tscanf(\"%d\",&n);\n\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\n\tmax = a[n - 1];\n\n\tans[n - 1] = 0;\n\n\tfor(i = n - 2; i >= 0; i--)\n\t{\n\t\tif(a[i] > max)\n\t\t{\n\t\t\tmax = a[i];\n\n\t\t\tans[i] = 0;\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\tans[i] = max - a[i] + 1;\n\t\t}\n\t}\n\n\tfor(i = 0; i < n - 1; i++)\n\t{\n\t\tprintf(\"%d \",ans[i]);\n\t}\n\n\tprintf(\"%d\\n\",ans[n - 1]);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.378125, "equal_cnt": 32, "replace_cnt": 20, "delete_cnt": 2, "insert_cnt": 10, "fix_ops_cnt": 32, "lang": "GNU C11", "fix_code_uid": "c8b0aa1895bf0fb815a78f6e4e649c12", "bug_code_uid": "1d0b514a52d476537a053c945d60a646", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "86248300ad725f528a9a6e1a942de038", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n  int t;\n  scanf(\"%d\",&t);\n\n  for(int i=0; i<t; i++){\n    int n;\n    scanf(\"%d\",&n);\n\n   int ar[n];\n  for(int i=0; i<n; i++){\n    scanf(\"%d\",&ar[i]);\n  }\n\n    int count[20] = {0};\n    for(int i=0; i<n; i++){\n      int value = ar[i];\n      count[value]++;\n    }\n    int c=0;\n    for(int val=0; val<10; val++){\n        if(count[val]>=3){\n            printf(\"%d\\n\",val);\n            c=1;\n            break;\n        }\n\n    }\n     if(c==0){\n    printf(\"-1\\n\");\n  }\n  }\n\n}\n\t\t \t\t\t\t\t  \t \t\t \t \t \t \t   \t\t \t \t", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n    int test;\n    scanf(\"%d\", &test);\n    for(int i=0;i<test;i++){\n        int len;\n        scanf(\"%d\", &len);\n        int arr[len];\n        int counter[len+1];\n        memset(counter, 0, sizeof(counter));\n        for(int i=0;i<len;i++){\n            int value;\n            scanf(\"%d\", &value);\n            counter[value]++;\n        };\n        int result = -1;\n        for(int i=0;i<=len;i++){\n                if(counter[i]>=3){\n                    result = 0;\n                    printf(\"%d\\n\", i);\n                    break;\n                }else{\n                    result = -1;\n                }\n        }\n        if(result == -1)printf(\"%d\\n\", result);\n    }\n\n}\n\n\n\n\t\t   \t\t\t\t\t   \t\t \t\t \t \t\t\t\t\t\t   \t"}
{"similarity_score": 0.3123425692695214, "equal_cnt": 19, "replace_cnt": 6, "delete_cnt": 5, "insert_cnt": 8, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "ee6ab41e97f56f196f6e8ba065a9dc7e", "bug_code_uid": "5b7e72c5a17f49e43dd99a69abea8dc1", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "3aa9171b416ea5ee8988d725d457f443", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdbool.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n\n\n\n    while(t--)\n    {\n\n        int n;\n        scanf(\"%d\",&n);\n        int count[200001]= {0};\n\n        int arr[n];\n        for(int i=0; i<n; i++)\n        {\n            scanf(\"%d\",&arr[i]);\n            count[arr[i]]++;\n        }\n        bool value = false;\n        for(int i=0; i<200001; i++)\n        {\n\n            if(count[i] >= 3)\n            {\n                printf(\"%d\\n\",i);\n                value = true;\n                break;\n\n            }\n\n        }\n        if (value==false)\n        {\n            printf(\"-1\\n\");\n        }\n\n    }\n\n\n    return 0;\n}\n\n\n  \t\t\t \t\t \t  \t   \t\t\t\t \t\t  \t\t \t\t\t", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--) {\n        int n;\n        scanf(\"%d\", &n);\n        int arr[n], a[n], result = -1;\n        memset(a, 0, n*sizeof(int));\n        for(int i = 0; i < n; i++) {\n            scanf(\"%d\", &arr[i]);\n            a[arr[i] - 1]++;\n        }\n        for(int i = 0; i < n; i++) {\n            if(a[i] >= 3) {\n                result = i + 1;\n            }\n        }\n        printf(\"%d\\n\", result);\n    }\n    return 0;\n}\n\n \t \t\t  \t \t \t \t\t\t\t \t\t  \t\t \t\t \t\t"}
{"similarity_score": 0.9985486211901307, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6fd4105e98a523bcf128242b72974f91", "bug_code_uid": "ed6e97f5b39e02d43b00e94a3ed8c376", "src_uid": "eea7860e6bbbe5f399b9123ebd663e3e", "apr_id": "3a41bac1d0ae08585405818af57b4061", "difficulty": 1400, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main( )\n{\n\tint n,a[100005]={0},i,j,k,b[100005]={0},max=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]%2==0)\n\t\t{\n\t\t\tb[2]++;\n\t\t\twhile(a[i]%2==0)\n\t\t\t{\n\t\t\t\ta[i]=a[i]/2;\n\t\t\t\t//\t\t\t\tprintf(\"a[i] is %d\\n\",a[i]);\n\t\t\t}\n\t\t}\n\t\tfor(j=3;j<=sqrt(a[i]);j+=2)\n\t\t{\n\t\t\tif(a[i]%j==0)\n\t\t\t{\n\t\t\t\tb[j]++;\n\t\t\t}\n\t\t\twhile(a[i]%j==0)\n\t\t\t{\n\t\t\t\ta[i]=a[i]/j;\n\t\t\t\t//\t\t\t\tprintf(\"a[i] is %d\\n\",a[i]);\n\t\t\t}\n\t\t}\n\t\tif(a[i]>2)\n\t\t{\n\t\t\tb[a[i]]++;\n\t\t}\n\t}\n\tfor(j=1;j<100005;j++)\n\t{\n\t\tif(b[j]>=max)\n\t\t{\n\t\t\tmax=b[j];\n\t\t\t//\t\t\tprintf(\"max is %d\\n\",max);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",max);\n//\tprintf(\"b[7] is %d\\n\",b[7]);\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main( )\n{\n\tint n,a[100005]={0},i,j,k,b[100005]={0},max=1;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]%2==0)\n\t\t{\n\t\t\tb[2]++;\n\t\t\twhile(a[i]%2==0)\n\t\t\t{\n\t\t\t\ta[i]=a[i]/2;\n\t\t\t\t//\t\t\t\tprintf(\"a[i] is %d\\n\",a[i]);\n\t\t\t}\n\t\t}\n\t\tfor(j=3;j<=sqrt(a[i]);j+=2)\n\t\t{\n\t\t\tif(a[i]%j==0)\n\t\t\t{\n\t\t\t\tb[j]++;\n\t\t\t}\n\t\t\twhile(a[i]%j==0)\n\t\t\t{\n\t\t\t\ta[i]=a[i]/j;\n\t\t\t\t//\t\t\t\tprintf(\"a[i] is %d\\n\",a[i]);\n\t\t\t}\n\t\t}\n\t\tif(a[i]>2)\n\t\t{\n\t\t\tb[a[i]]++;\n\t\t}\n\t}\n\tfor(j=1;j<100005;j++)\n\t{\n\t\tif(b[j]>=max)\n\t\t{\n\t\t\tmax=b[j];\n\t\t\t//\t\t\tprintf(\"max is %d\\n\",max);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",max);\n//\tprintf(\"b[7] is %d\\n\",b[7]);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9957924263674615, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3810f07da07ea8c3b9b86dcbb53f3791", "bug_code_uid": "315ca8136ccd4d9b282bafa0034fb0d8", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "8d874860323a2919e8a469c877106c52", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\n    long long n,f=0,z=0;\n    int k;\n    scanf(\"%I64d\",&n);\n    while(n--)\n    {\n        scanf(\"%d\",&k);\n        if(k) f++;\n        else z++;\n    }\n    n=f/9;\n    if(n)\n    {\n        while(n--) printf(\"555555555\");\n        while(z--) printf(\"0\");\n    }\n    else if(z) printf(\"0\");\n    else printf(\"-1\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(void)\n{\n    long long n,f=0,z=0;\n    int k;\n    scanf(\"%I64d\",&n);\n    while(n--)\n    {\n        scanf(\"%d\",&k);\n        if(k) f++;\n        else z++;\n    }\n    n=f/9;\n    if(n&&z)\n    {\n        while(n--) printf(\"555555555\");\n        while(z--) printf(\"0\");\n    }\n    else if(z) printf(\"0\");\n    else printf(\"-1\");\n    return 0;\n}\n"}
{"similarity_score": 0.9929411764705882, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "497e6cae75467a1b502e3a50bf55c7b6", "bug_code_uid": "ac158f6e821bb4345bc90c2233c2555e", "src_uid": "7f934f96cbe3990945e5ebcf5c208043", "apr_id": "4dfcabacfbebfc3572be90ade72b5b65", "difficulty": 800, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n\tshort n;\n\tscanf(\"%hi\\n\", &n);\n\t\n\tchar name[n][100];\n\t\n\tfor (short i = 0; i < n; ++i) {\n\t\tscanf(\"%s\", name[i]);\n\t}\n\t\n\tshort found = 0;\n\tfor (short i = 0; i < n; ++i) {\n\t\tfound = 0;\n\t\tfor (short j = 0; j < i; ++j) {\n\t\t\tif (strcmp(name[i], name[j]) == 0) {\n\t\t\t\tputs(\"YES\");\n\t\t\t\tfound = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!found)\n\t\t\tputs(\"NO\");\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n\tshort n;\n\tscanf(\"%hi\\n\", &n);\n\t\n\tchar name[n][101];\n\t\n\tfor (short i = 0; i < n; ++i) {\n\t\tscanf(\"%s\", name[i]);\n\t}\n\t\n\tshort found;\n\tfor (short i = 0; i < n; ++i) {\n\t\tfound = 0;\n\t\tfor (short j = 0; j < i; ++j) {\n\t\t\tif (strcmp(name[i], name[j]) == 0) {\n\t\t\t\tputs(\"YES\");\n\t\t\t\tfound = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!found)\n\t\t\tputs(\"NO\");\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9940546967895363, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c0377c2bdc5623ae6046b136b7fb9938", "bug_code_uid": "3acc9e5cca9546419f19b485232cd941", "src_uid": "075988685fa3f9b20bd215037c504a4f", "apr_id": "4492b91c6f58bd73dbb930fec84eb675", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\n    int n, x, y, z, i, c=0, d=0;\n    char s[200001];\n    scanf(\"%d %d %d\", &n, &x, &y);\n    scanf(\"%s\", &s);\n\n    for(i=n-1; i>=0 ; i--) {\n\n        if(d==y) {\n            if(s[i]=='0')\n               c++;\n        }\n        else {\n            if(s[i]=='1') {\n                c++;\n            }\n        }\n        if(d==x) break;\n        d++;\n    }\n    printf(\"%d\", c);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(void)\n{\n    int n, x, y, z, i, c=0, d=0;\n    char s[200001];\n    scanf(\"%d %d %d\", &n, &x, &y);\n    scanf(\"%s\", &s);\n\n    for(i=n-1; i>=n-x; i--) {\n\n        if(d==y) {\n            if(s[i]=='0')\n               c++;\n        }\n        else {\n            if(s[i]=='1') {\n                c++;\n            }\n        }\n        if(d==x) break;\n        d++;\n    }\n    printf(\"%d\", c);\n\n    return 0;\n}\n"}
{"similarity_score": 0.6881720430107527, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "e870159c4819ca50d8b2217fdf3250fe", "bug_code_uid": "b1db82304ff32d6ab035ccb85d3b3cef", "src_uid": "4c59b4d43b59c8659bf274f3e29d01fe", "apr_id": "df97f90b18455500b2674ab596adf2a7", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef long long int lli;\n#define max(a,b) (((a)>(b))?(a):(b))\nint main() {\n  int n,odd=0,even=0;\n  scanf(\"%d\", &n);\n  int arr[n];\n  \n  for(int i=0;i<n;i++){\n      scanf(\"%d\", &arr[i]);\n  }\n  \n  for(int i=0;i<n;i++){\n      if(arr[i]%2==0)\n        even++;\n      else\n        odd++;\n  }\n  \n  if(odd%2==0){\n      printf(\"%d\", max(odd,even));\n  }\n  \n  else\n    printf(\"%d\", odd);\n}\n\n", "fixed": "#include<stdio.h>\ntypedef long long int lli;\n#define max(a,b) (((a)>(b))?(a):(b))\nint main() {\n  int n,sum=0,ans=0;\n  scanf(\"%d\", &n);\n  int arr[n];\n  \n  for(int i=0;i<n;i++){\n      scanf(\"%d\", &arr[i]);\n      sum = sum+arr[i];\n  }\n  \n  for(int i=0;i<n;i++){\n      if((sum - arr[i])%2==0){\n          ans++;\n      }\n  }\n\n  printf(\"%d\", ans);\n\n\n}\n\n"}
{"similarity_score": 0.9673704414587332, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "25f67331eb9f5522e921a13d67b4ac33", "bug_code_uid": "e6cd5ae8481776cf281c29caa169b200", "src_uid": "f82058f6ba3ce0da15a5ce059674af35", "apr_id": "435100c6943e1e3d6500d5d80e2e7496", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   int i , k , n;\n   scanf(\"%d\",&n);\n   for(i=0 ; i<n ; i++)\n   {\n       int m;\n       k=1;\n       scanf(\"%d\",&m);\n       while(m--)\n       {\n           printf(\"%d \",2*k);\n           k+=3;\n       }\n       printf(\"\\n\");\n   }\n   return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n   int i , k , n;\n   scanf(\"%d\",&n);\n   for(i=0 ; i<n ; i++)\n   {\n       int m;\n       k=1;\n       scanf(\"%d\",&m);\n       while(m--)\n       {\n           printf(\"%d \",2*k);\n       }\n       printf(\"\\n\");\n   }\n   return 0;\n}"}
{"similarity_score": 0.9894366197183099, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "3fcde2defc235a5c485a8dccff1931bf", "bug_code_uid": "e6dd54cc997de3aa6f780fc1dbcc0897", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "9cbf99c709a600fd0d095f10e4226159", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tint na,nb, k, m, i;\n\tscanf(\"%d %d\",&na,&nb);\n\tscanf(\"%d %d\",&k,&m);\n\tint A[na], B[nb];\n\tfor(i=0; i<na; i++) scanf(\"%d\",&A[i]);\n\tfor(i=0; i<na; i++) scanf(\"%d\",&B[i]);\n\tif(A[k-1]<B[nb-m]) printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tint na, nb, k, m, i, j;\n\tscanf(\"%d %d\",&na,&nb);\n\tscanf(\"%d %d\",&k,&m);\n\tint A[na], B[nb];\n\tfor(i=0; i<na; i++) scanf(\"%d\",&A[i]);\n\tfor(i=0; i<nb; i++) scanf(\"%d\",&B[i]);\n\tif(A[k-1]<B[nb-m]) printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n}\n"}
{"similarity_score": 0.9348171701112877, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7999c7c44314d41fd345e0b2c393f1e1", "bug_code_uid": "750f36f0ee5ad1b674291cd64045061d", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "412068f5d625149489620710c56aa841", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    char *s;\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%s\", s);\n        if(strlen(s)<10)\n            puts(s);\n        if(strlen(s)>=10)\n            printf(\"%c%d%c\\n\", *s,strlen(s)-2,*(s+strlen(s)-1));\n    }\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    char *s;\n    s=malloc(200);\n    s=malloc(200);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%s\", s);\n        if(strlen(s)<=10)\n            puts(s);\n        if(strlen(s)>10)\n            printf(\"%c%d%c\\n\", *s,strlen(s)-2,*(s+strlen(s)-1));\n    }\n}\n"}
{"similarity_score": 0.14240170031880978, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "b11182bda09f43fe8bbdc261d6771d55", "bug_code_uid": "b0a923115ec64c198fdb1c026e88284c", "src_uid": "905cc16ecbbb3305416f9aa6e4412642", "apr_id": "a6ecbe80c5b91e46f769c5dd0f40e380", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <ctype.h>\n#include <math.h>\n\nvoid sol()\n{\n    int m, n;\n    scanf(\"%d%d\", &m, &n);\n    if(m == 1)\n    {\n        printf(\"0\\n\");\n        break;\n    }\n    if(m == 2)\n    {\n        printf(\"%d\\n\", n);\n        break;\n    }\n    if(m%2 == 1 && m != 1)\n    {\n        printf(\"%d\\n\", n*2);\n    }\n    if(m%2 == 0 && m < n)\n    {\n        printf(\"%d\\n\", n);\n    }\n    if(m == n && m % 2 == 0)\n    {\n        printf(\"%d\\n\", n*2);\n    }\n}\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        sol();\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int n, k;\n        scanf(\"%d%d\", &n, &k);\n        if(n == 1)\n        {\n            printf(\"0\\n\");\n            continue;\n        }\n        if(n == 2)\n        {\n            printf(\"%d\\n\", k);\n        }\n        else\n        {\n            printf(\"%d\\n\", k*2);\n        }\n    }\n}\n"}
{"similarity_score": 0.9893172317696238, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "9530fef899a0c5a873474268cb85dcc9", "bug_code_uid": "6d1274d8bcef2d9f203a569871ce13b2", "src_uid": "53ae714f04fd29721b8bbf77576b7ccf", "apr_id": "2dba7310ff2d542a8e0e399857f0a0cb", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n#include <time.h>\n\n#define lli long long int\n#define MAX INT_MAX\n#define PI acos(-1)\n#define FOR(ii,aa,bb) for(ii=aa;ii<=bb;ii++)\n#define ROF(ii,aa,bb) for(ii=aa;ii>bb;ii--)\n#define buyuk(a,b) (a<b)? b:a\n#define min(a,b) (a<b)? a:b\n#define ort(a,b) (a+b)/2\n#define carp(a,b) (a)*(b)\n/*\n   void sort(int bas,int ort,int son){\n   int yer=bas,x=bas,y=ort+1,t,i;\n   while(x <= ort && y <= son){\n   if(a[x] < a[y]) temp[yer++]=a[x++];\n   else temp[yer++]=a[y++];}\n   while(x <= ort) temp[yer++]=a[x++];\n   while(y <= son) temp[yer++]=a[y++];\n   for(i=bas;i<=son;i++) a[i]=temp[i];}   \n   void merge(int bas,int son){\n   if(son <= bas)return;\n   int ort=(bas+son)/2;\n   merge(bas,ort);\n   merge(ort+1,son);\n   sort(bas,ort,son);}\n   */\nint h[3005],a[3005];\nint main () \n{\n\tint x,i,j,top=0,max=0;\n\tscanf(\"%d\",&x);\n\tfor(i=0;i<x;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\th[a]++;\n\t}\n\tfor(i=1;i<=x*2;i++)\n\t\tif(h[i]>1)\n\t\t{\n\t\t\th[i+1] += h[i] - 1;\n\t\t\ttop+= h[i] - 1;\n\t\t\th[i] = 1;\n\t\t}\n\t\t\t\t\n\t\t    \n\t    \n\t\t\tprintf(\"%d\",top);\t\t\t\t\n}\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n#include <time.h>\n\n#define lli long long int\n#define MAX INT_MAX\n#define PI acos(-1)\n#define FOR(ii,aa,bb) for(ii=aa;ii<=bb;ii++)\n#define ROF(ii,aa,bb) for(ii=aa;ii>bb;ii--)\n#define buyuk(a,b) (a<b)? b:a\n#define min(a,b) (a<b)? a:b\n#define ort(a,b) (a+b)/2\n#define carp(a,b) (a)*(b)\n/*\n   void sort(int bas,int ort,int son){\n   int yer=bas,x=bas,y=ort+1,t,i;\n   while(x <= ort && y <= son){\n   if(a[x] < a[y]) temp[yer++]=a[x++];\n   else temp[yer++]=a[y++];}\n   while(x <= ort) temp[yer++]=a[x++];\n   while(y <= son) temp[yer++]=a[y++];\n   for(i=bas;i<=son;i++) a[i]=temp[i];}   \n   void merge(int bas,int son){\n   if(son <= bas)return;\n   int ort=(bas+son)/2;\n   merge(bas,ort);\n   merge(ort+1,son);\n   sort(bas,ort,son);}\n   */\nint h[6010];\nint main () \n{\n\tint a,x,i,j,top=0,max=0;\n\tscanf(\"%d\",&x);\n\tfor(i=1;i<=x;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\th[a]++;\n\t}\n\tfor(i=1;i<=x*2;i++)\n\t\tif(h[i]>1)\n\t\t{\n\t\t\th[i+1] += h[i] - 1;\n\t\t\ttop+= h[i] - 1;\n\t\t\th[i] = 1;\n\t\t}\n\t\t\t\t\n\t\t    \n\t    \n\t\t\tprintf(\"%d\",top);\t\t\t\t\n}\n\n"}
{"similarity_score": 0.8609388839681134, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "39178e44351e859e76e1701f94907568", "bug_code_uid": "7dc0491dc2e7b37e295cfb4158edaab8", "src_uid": "53a3313f5d6ce19413d72473717054fc", "apr_id": "ab7f1f3910764d74e06fcba5e33aeb8c", "difficulty": 900, "tags": ["implementation", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nvoid NotAnotherTetris(int n, int a[])\n{\n\tint i, j;\n\tif(a[0]%2==0)\n\t\tfor(i=1; i<n; i++)\n\t\t{\n\t\t\tif(a[i]%2!=0)\n\t\t\t{\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\telse\n\t\tfor(i=1; i<n; i++)\n\t\t{\n\t\t\tif(a[i]%2==0)\n\t\t\t{\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\tprintf(\"YES\\n\");\n\treturn;\n}\n\nvoid main()\n{\n\tint T, i;\n\tint n, a[100];\n\tfreopen(\"C:/SSDFiles/GitStuff/codeforces/1324 (627 - Div 3)/input.txt\", \"r\", stdin);\n\tscanf(\"%d\", &T);\n\tfor(; T>0; T--)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tif(n==1){printf(\"YES\\n\");return;}\n\t\tfor(i=0; i<n; i++)\n\t\t\tscanf(\"%d\", &a[i]);\n\t\tNotAnotherTetris(n, a);\n\t}\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n\nvoid NotAnotherTetris(int n, int a[])\n{\n\tif(n==1){printf(\"YES\\n\");return;}\n\tint i, j;\n\tif(a[0]%2==0)\n\t\tfor(i=1; i<n; i++)\n\t\t{\n\t\t\tif(a[i]%2!=0)\n\t\t\t{\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\telse\n\t\tfor(i=1; i<n; i++)\n\t\t{\n\t\t\tif(a[i]%2==0)\n\t\t\t{\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\tprintf(\"YES\\n\");\n\treturn;\n}\n\nvoid main()\n{\n\tint T, i;\n\tint n, a[100];\n\tscanf(\"%d\", &T);\n\tfor(; T>0; T--)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tfor(i=0; i<n; i++)\n\t\t\tscanf(\"%d\", &a[i]);\n\t\tNotAnotherTetris(n, a);\n\t}\n}"}
{"similarity_score": 0.3055091819699499, "equal_cnt": 21, "replace_cnt": 15, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "655b79a6bb72f01ba686708afd45eb61", "bug_code_uid": "8dfd17470fd1a7dc47b47b8aab6ad5e6", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "ffb395eb1fc62a248f5b3ca389bee566", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    long long n,i,sum1=0,sum2=0,b[20001],max,min;\n\n    scanf(\"%d\", &n);\n    scanf(\"%I64d\", &b[0]);\n    max = b[0];\n    min = b[0];\n\n    for(i=1;i<n;i++){\n        scanf(\"%I64d\", &b[i]);\n        if(b[i] > max)\n            max = b[i];\n        if(b[i] < min)\n            min = b[i];\n    }\n\n    printf(\"%I64d \",max-min);\n    if(max == min){\n        printf(\"%I64d\\n\", n*(n-1)/2);\n        return 0;\n    }\n    for(i=0;i<n;i++){\n        if(b[i] == max)\n            sum1 ++;\n        if(b[i] == min)\n            sum2 ++;\n    }\n\n    printf(\"%I64d\", sum1*sum2);\n    //system(\"pause\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long a[200001],min, max,b,c,n,i;\n    scanf(\"%I64d\",&n);\n    scanf(\"%I64d\",&a[0]);\n    min=a[0];\n    max=a[0];\n    for(i=1;i<n;++i)\n    {\n        scanf(\"%I64d\",&a[i]);\n        if(a[i]>max)\n            max=a[i];\n        if(a[i]<min)\n            min=a[i];\n\n    }\n    printf(\"%I64d \",max-min);\n\n   b=0;\n   c=0;\n    for(i=0;i<n;++i)\n    {\n        if(a[i]==min)\n        {\n         b++;\n        }\n        if(a[i]==max)\n            c++;\n    }\n    if(min==max)\n        printf(\"%I64d\",n*(n-1)/2);\n    else\n        printf(\"%I64d\",b*c);\n    return 0;\n}"}
{"similarity_score": 0.9467455621301775, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1bcf5eb7650bb6b44d7a02b54d5b8502", "bug_code_uid": "addc3f2d30b37f73be23dc20f0939fa0", "src_uid": "204ba74195a384c59fb1357bdd71e16c", "apr_id": "a3d6f880935bfb1cfd624d9d731b6d86", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,sum = 0;\n    scanf(\"%d\",&j);\n    for(i=j;i>=1;--i)\n    {\n        if(j==1)\n        {\n            printf(\"-1\\n\");\n        }else\n        {\n            printf(\"%d\\n\",i);\n        }\n\n    }\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,sum = 0;\n    scanf(\"%d\",&j);\n    for(i=j;i>=1;--i)\n    {\n        if(j%2!=0)\n        {\n            printf(\"-1\\n\");\n            break;\n        }else\n        {\n            printf(\"%d\\n\",i);\n        }\n\n    }\n    return 0;\n\n}\n"}
{"similarity_score": 0.9981412639405205, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a6fa259425c9ed65c701f51b6b3fe271", "bug_code_uid": "65de33bef5f32c656b7776698d75c067", "src_uid": "3ae468c425c7b156983414372fd35ab8", "apr_id": "491bb959a84823c286a8507ef8aef01a", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,t=0,count=0;\n        scanf(\"%d\",&n);\n        while(n>1)\n        {\n            if(n%6==0)\n            {\n                n/=6;\n                t=0;\n            }\n            else if(t==0)\n            {\n                n*=2;\n                t=1;\n            }\n            else\n            {\n                printf(\"-1\");\n                break;\n            }\n            count++;\n        }\n        if(n==1)\n        printf(\"%d\\n\",count);\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,t=0,count=0;\n        scanf(\"%d\",&n);\n        while(n>1)\n        {\n            if(n%6==0)\n            {\n                n/=6;\n                t=0;\n            }\n            else if(t==0)\n            {\n                n*=2;\n                t=1;\n            }\n            else\n            {\n                printf(\"-1\\n\");\n                break;\n            }\n            count++;\n        }\n        if(n==1)\n        printf(\"%d\\n\",count);\n    }\n}"}
{"similarity_score": 0.27496382054992763, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "93ec47e64005935d139c4a850811797a", "bug_code_uid": "e5ebbe9178bf9cca33efb248936cab30", "src_uid": "fbde1e2ee02055592ff72fb04366812b", "apr_id": "6dc59836038f75b5e40cfa1b55e5da36", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    long long int n;\n    scanf(\"%lld\",&n);\n    int k;\n    scanf(\"%d\",k);\n    int ar[n];\n    for(int i=0;i<n;i++){\n        scanf(\"%d\",&ar[i]);\n    }\n    int a=0,c=0,p;\n    for(int i=0;i<n;i++){\n        p=k+ar[i];\n        if(p<=5){\n            c++;\n        }\n    }\n    printf(\"%d\",c);\n}", "fixed": "#include<stdio.h>\nint main(){\n    long long int n,k;\n    scanf(\"%lld%lld\",&n,&k);\n    int ar[n];\n    for(int i=0;i<n;i++){\n        scanf(\"%d\",&ar[i]);\n    }\n    int a=0,c=0,p;\n    for(int i=0;i<n;i++){\n        ar[i]=ar[i]+k;\n        if(ar[i]<=5){\n            c++;\n        }\n        if(c==3){\n            a++;\n            c=0;\n        }\n    }\n    printf(\"%d\",a);\n    return 0;\n}"}
{"similarity_score": 0.9319727891156463, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3bc8d84c52232cd1862d8fda886c92d4", "bug_code_uid": "9ff8bad3dc3ecf5cbd9fb660cf1840c7", "src_uid": "2326470337301e0f4b0d1b1a6195e398", "apr_id": "f3f77ffdea442bdd95394d14a186ebba", "difficulty": 1500, "tags": ["two pointers", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint c[15000];\nvoid solve() {\n\n    int n;\n    scanf(\"%d\", &n);\n    int a[n];\n    int ans=0;\n    for(int i=0; i<n; i++) {\n        scanf(\"%d\", &a[i]);\n        c[a[i]]++;\n    }\n    for(int i=0; i<n-1; i++) {\n        int sum=a[i];\n        for(int j=i+1; j<n; j++) {\n            sum+=a[j];\n            if(sum>n)\n                break;\n            ans+=c[sum];\n            c[sum]=0;\n        }\n    }\n    printf(\"%d\\n\", ans);\n}\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    while(t--) {\n        solve();\n\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nvoid solve() {\n\n    int n;\n    scanf(\"%d\", &n);\n    int a[n];\n    int c[n + 1];\n    memset(c, 0, 4 * n + 4);\n    int ans=0;\n    for(int i=0; i<n; i++) {\n        scanf(\"%d\", &a[i]);\n        c[a[i]]++;\n    }\n    for(int i=0; i<n-1; i++) {\n        int sum=a[i];\n        for(int j=i+1; j<n; j++) {\n            sum+=a[j];\n            if(sum>n)\n                break;\n            ans+=c[sum];\n            c[sum]=0;\n        }\n    }\n    printf(\"%d\\n\", ans);\n}\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    while(t--) {\n        solve();\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8870967741935484, "equal_cnt": 12, "replace_cnt": 4, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "965e1d443494c916fda47103796bd046", "bug_code_uid": "26a54d6b613e8630df814179b8762554", "src_uid": "3b7cafc280a9b0dba567863c80b978b0", "apr_id": "2cd8de084be108b4d347ee253a441798", "difficulty": 1300, "tags": ["combinatorics", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nLong long int pow1(int a,int b){\n   long llong int f=1;\nfor(int u=0;u<b;u++){\n    f*=a;\n}\nreturn f;\n}\n \nint main()\n{\nint n,m,i,j,l,k,f,g;\nlong long int S;\nscanf(\"%d %d\",&n,&m);\nint tab[n][m];\nS=n*m;\nfor(i=0;i<n;i++){\n        k=0;\n        l=0;\n    for(j=0;j<m;j++){\n        scanf(\"%d\",&tab[i][j]);\n        if(tab[i][j]==1)\n            k+=1;\n        else\n            l+=1;\n    }\n    if(k>=1){\n        S+=pow1(2,k)-k-1;}\n    if(l>=1){\n        S+=pow1(2,l)-l-1;}\n}\nfor(j=0;j<m;j++){\n        k=0;\n        l=0;\n    for(i=0;i<n;i++){\n        if(tab[i][j]==1)\n            k+=1;\n        else\n            l+=1;\n    }\n    if(k>=1){\n        S+=pow1(2,k)-k-1;}\n    if(l>=1){\n        g=(l-1)*l;\n        S+=pow1(2,l)-l-1;}\n}\nprintf(\"%lld\",S);\n \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\nint n,m,i,j,l,k,f,g;\nunsigned long long int S;\nscanf(\"%d %d\",&n,&m);\nint tab[n][m];\nS=n*m;\nfor(i=0;i<n;i++){\n        k=0;\n        l=0;\n    for(j=0;j<m;j++){\n        scanf(\"%d\",&tab[i][j]);\n        if(tab[i][j]==1)\n            k+=1;\n        else\n            l+=1;\n    }\n    if(k>=1){\n        S+=pow(2,k)-k-1;}\n    if(l>=1){\n        S+=pow(2,l)-l-1;}\n}\nfor(j=0;j<m;j++){\n        k=0;\n        l=0;\n    for(i=0;i<n;i++){\n        if(tab[i][j]==1)\n            k+=1;\n        else\n            l+=1;\n    }\n    if(k>=1){\n        S+=pow(2,k)-k-1;}\n    if(l>=1){\n        g=(l-1)*l;\n        S+=pow(2,l)-l-1;}\n}\nprintf(\"%llu\",S);\n \n    return 0;\n}"}
{"similarity_score": 0.6153846153846154, "equal_cnt": 22, "replace_cnt": 15, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "777d86194d29707e162fb0819e44cd1c", "bug_code_uid": "36e7f2ebd9981503db5189e7043f4713", "src_uid": "930be5ec102fbe062062aa23eac75187", "apr_id": "4402232acbc3cbdc52b4ac36929f3269", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nvoid sort(int *x,int n) {\n    int tmp,*a,*b;\n    \n    for(int i=0;i<n;i++) {\n        for(int j=i;j<n;j++) {\n            a = x+4*i;\n            b = x+4*j;\n            if (*a > *b) {\n                 tmp = *a;\n                 *a = *b;\n                 *b = tmp;\n            }\n        }\n    }\n}\n\nint main() {\n    int *ptr,n,flag=0;\n    \n    scanf(\"%d\",&n);\n\n    ptr = (int*)malloc(100*sizeof(int));\n    \n    for(int i=0;i<n;i++) {\n        scanf(\"%d\",ptr+4*i);\n    } \n    \n    sort(ptr,n);\n    \n    for(int i=0;i<n;i++) {\n        if(*(ptr+4*i) != *(ptr)) {\n            printf(\"%d\",*(ptr + 4*i));\n            flag = 0;\n            break;\n        }\n        else {\n           flag = 1;   \n        }\n    }\n\n    free(ptr);\n    \n    if (flag == 1) {\n        printf(\"NO\\n\");\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nvoid sort(int A[],int n) {\n    int tmp;\n    \n    for (int i=0;i<n;i++) {\n        for (int j=i;j<n;j++) {\n            if (A[i] > A[j]) {\n                 tmp = A[i];\n                 A[i] = A[j];\n                 A[j]  = tmp;\n            }\n        }\n    }\n}\n\nint main() {\n    int A[101],n,flag=0;\n    scanf(\"%d\",&n);\n\n    for(int i=0;i<n;++i) {\n        scanf(\"%d\",&A[i]);\n    }\n\n    sort(A,n);\n\n    for(int i=0;i<n;++i) {\n        if(A[i] != A[0]) {\n            flag = 0;\n            printf(\"%d\",A[i]);\n            break;\n        }\n        else {\n            flag = 1;\n        }\n    }\n\n    if(flag == 1) {\n        printf(\"NO\\n\");\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9087301587301587, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "12cc72c86691b152425f842401496e4e", "bug_code_uid": "59a1bd4c63caa1fa9a322844de8f857d", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "2baa0f80a5442846b1882d1b63ed55f9", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long int n, k, i, j;\n    scanf(\"%I64d %I64d\", &n, &k);\n    long long int arr[n], min = -1, result = 1;\n    for (i = 0; i < n; i++) scanf(\"%I64d\", &arr[i]);\n    for (i = 0; i < n-k+1; i++){\n        long long int x = 0;\n        for (j = 0; j < k; j++){\n            x += arr[i+j];\n        }\n        if (min == -1) min = x;\n        else if (min > x) {min = x; result = i+1;}\n    }\n    printf(\"%I64d\\n\", result);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long int n, k, i, j;\n    scanf(\"%I64d %I64d\", &n, &k);\n    long long int arr[n], min = -1, result = 1, x = 0;\n    for (i = 0; i < n; i++) scanf(\"%I64d\", &arr[i]);\n    for (i = 0; i < n-k+1; i++){\n        if (i == 0) for (j = 0; j < k; j++) x += arr[i+j];\n        else {\n            x -= arr[i-1]; x += arr[i+k-1];\n        }\n        if (min == -1) min = x;\n        else if (min > x) {min = x; result = i+1;}\n    }\n    printf(\"%I64d\\n\", result);\n    return 0;\n}\n"}
{"similarity_score": 0.9951219512195122, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "63c2fc5a7700d0dbb3dd307077f746ca", "bug_code_uid": "5becbd39c32ab83fa97f8c254a74ef63", "src_uid": "430486b13b2f3be12cf47fac105056ae", "apr_id": "4a5722a1ff10da4ed70cfc477b60960b", "difficulty": 1700, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define max(a, b) (a > b ? a : b)\n\nchar s[2005], u[2005], ss[6005];\n\nint main() {\n  int ac, sum, lens, lenu, i, j;\n\n  gets(s);\n  gets(u);\n  lens = strlen(s);\n  lenu = strlen(u);\n  memset(ss, '.', sizeof ss);\n  ss[6004] = '\\0';\n\n  sum = ac = 0;\n  memcpy(ss+2001, s, lens);\n\n  for (i = lenu; i <= 6004 - lenu; i++) {\n    sum = 0;\n    for (j = 0; j < lenu; j++)\n      if (u[j] == ss[i+j])\n        sum++;\n    ac = max(ac, sum);\n  }\n\n  printf(\"%d\\n\", lenu - ac);\n\n  return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\n#define max(a, b) (a > b ? a : b)\n\nchar s[2005], u[2005], ss[6005];\n\nint main() {\n  int ac, sum, lens, lenu, i, j;\n\n  gets(s);\n  gets(u);\n  lens = strlen(s);\n  lenu = strlen(u);\n  memset(ss, '.', sizeof ss);\n  ss[6004] = '\\0';\n\n  sum = ac = 0;\n  memcpy(ss+2001, s, lens);\n\n  for (i = 0; i <= 6004 - lenu; i++) {\n    sum = 0;\n    for (j = 0; j < lenu; j++)\n      if (u[j] == ss[i+j])\n        sum++;\n    ac = max(ac, sum);\n  }\n\n  printf(\"%d\\n\", lenu - ac);\n\n  return 0;\n}\n\n"}
{"similarity_score": 0.9840425531914894, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "0c6ba8a702a0cfa1c38864a6aee0201b", "bug_code_uid": "63041101b59e857a1a6b332b65238d11", "src_uid": "f5acd95067656fa7667210af2c9bec81", "apr_id": "fa4f9b69f75d67c79a223ec7faa8aa91", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<stdlib.h>\n#define N 100001\nint a[N],b[N];\nint cmf(const void*a,const void*b)\n{\n     return (*(int*)a-*(int*)b);\n}\nint main()\n{\n     long long sum=0,i,j,sq,c,n,k;\n     scanf(\"%I64d\",&n);\n     for(i=0;i<n;i++)\n     {\n          scanf(\"%I64d\",&k);\n          a[i]=k;\n          b[i]=k;\n     }\n     qsort(a,n,sizeof(int),cmf);\n     qsort(b,n,sizeof(int),cmf);\n     j=n-1;\n     for(i=0;i<n;i++)\n     {\n          sum+=((a[i]*b[j])%10007);\n          j--;\n     }\n     printf(\"%I64d\",sum);\n     return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<stdlib.h>\n#define N 100001\nint a[N],b[N];\nint cmf(const void*a,const void*b)\n{\n     return (*(int*)a-*(int*)b);\n}\nint main()\n{\n     long long sum=0,i,j,sq,c,n,k;\n     scanf(\"%I64d\",&n);\n     for(i=0;i<n;i++)\n     {\n          scanf(\"%I64d\",&k);\n          a[i]=k;\n          b[i]=k;\n     }\n     qsort(a,n,sizeof(int),cmf);\n     qsort(b,n,sizeof(int),cmf);\n     j=n-1;\n     for(i=0;i<n;i++)\n     {\n          sum+=((a[i]%10007)*(b[j]%10007));\n          j--;\n     }\n     printf(\"%I64d\",sum%10007);\n     return 0;\n}"}
{"similarity_score": 0.37163814180929094, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "9d7be1e9f59417e0d31e52fe3f1ec91d", "bug_code_uid": "4d8dfbb99ee1034925ccb8eaf866e567", "src_uid": "e1abc81cea4395ba675cf6ca93261ae8", "apr_id": "4f07dff2183f36392b45b808dfe4e299", "difficulty": 1100, "tags": ["dp", "implementation", "*special", "data structures"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nstruct size\n{\n\tint w;\n\tint h;\n};\n\nint main()\n{\n\tint n,i,j,w,h;\n\tscanf(\"%d\",&n);\n\tstruct size s[n+1];\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d %d\",&s[i].w,&s[i].h);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tw=0;h=1;\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\tif(j!=i)\n\t\t\t{\n\t\t\t\tw+=s[j].w;\n\t\t\t\tif(s[j].h > h)\n\t\t\t\t\th=s[j].h;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\",w*h);\n\t\tif(i==n)\n\t\t\tprintf(\"\\n\");\n\t\telse\n\t\t\tprintf(\" \");\n\t}\nreturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n,i,j,x[200000],y[200000],w=0;\n\tint max1=0,max2=0;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d %d\",&x[i],&y[i]);\n\t\tw+=x[i];\n\t\tif(y[i] >= max2)\n\t\t{\n\t\t\tif(y[i] >= max1)\n\t\t\t{\n\t\t\t\tmax2=max1;\n\t\t\t\tmax1=y[i];\n\t\t\t}\n\t\t\telse\n\t\t\t\tmax2=y[i];\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(y[i]==max1)\n\t\t\tprintf(\"%d \",(w-x[i])*max2);\n\t\telse\n\t\t\tprintf(\"%d \",(w-x[i])*max1);\n\t}\n\t\t\tprintf(\"\\n\");\nreturn 0;\n}\n\n\n"}
{"similarity_score": 0.7110766847405112, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "6df002ac856603e82e6298f65126bb3c", "bug_code_uid": "a23a8a9115ae17f95c1c87e984c53996", "src_uid": "d9e9c53b391eb44f469cc92fdcf3ea0a", "apr_id": "9a206ab426e95ff7f63f273937f7a87d", "difficulty": 1000, "tags": ["constructive algorithms", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nchar arr[250000];\nint cnt[30];\nint k=0;\nint main(){\nint a;\nscanf(\"%d\",&a);\ngetchar();\ngets(arr);\nchar *q=arr;\nwhile(*q){\ncnt[*q-'a']++;\nq++;\n}\nint cnter=0; int i; int flag=1;\nfor(i='a'-'a';i<='z'-'a';i++){\n if(cnt[i]==0){\n flag=0;\n }\n}\nif(flag){\nfor(i='a'-'a';i<='z'-'a';i++){\n if(cnt[i]>1){\n         printf(\"-1\");\n        return 0;\n }\n}\n}\n\nfor(i='a'-'a';i<='z'-'a';i++){\n if(cnt[i]>1){\n  cnter=cnter+(cnt[i]-1);\n }\n}\nprintf(\"%d\",cnter);\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nchar arr[250000];\nint cnt[30];\nint k=0;\nint check(char a){\n char *q=arr;\n while(*q){\n  if(*q != a)\n  return 0;\n q++;\n }\n  return 1;\n}\nint main(){\nint a;\nscanf(\"%d\",&a);\ngetchar();\ngets(arr);\nchar *q=arr;\nwhile(*q){\ncnt[*q-'a']++;\nq++;\n}\nint cnter=0; int i; int flag=1;\nfor(i='a'-'a';i<='z'-'a';i++){\n if(cnt[i]==0){\n flag=0;\n }\n}\nif(flag){\nfor(i='a'-'a';i<='z'-'a';i++){\n if(cnt[i]>1){\n         printf(\"-1\");\n        return 0;\n }\n}\n}\nfor(i='a'-'a';i<='z'-'a';i++){\n if(cnt[i]>26){\n         printf(\"-1\");\n        return 0;\n }\n}\nfor(i='a'-'a';i<='z'-'a';i++){\n if(cnt[i]>=26 && check(i+'a')==0){\n         printf(\"-1\");\n        return 0;\n }\n}\nif(strlen(arr)>26){\n    printf(\"-1\");\n    return 0;\n}\nfor(i='a'-'a';i<='z'-'a';i++){\n if(cnt[i]>1){\n  cnter=cnter+(cnt[i]-1);\n }\n}\nprintf(\"%d\",cnter);\n\n\n}"}
{"similarity_score": 0.16104461371055495, "equal_cnt": 18, "replace_cnt": 17, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "f30f41f99e2a04355b5e0656aa72b125", "bug_code_uid": "34c99449a36db980f449204010599a00", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "72e48f77e1677f047b388dec21011e5d", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<string.h>\nint fib (int n )\n{\n if (n==1)\n  return 1;\n  if(n==2)\n    return 1;\nelse {\nreturn fib(&n-1)+fib(&n-2);}\n}\nvoid main ()\n{\nint n,i,j,c;\nchar s[100];\nscanf(\"%d\",&n);\n\nfor(i=1;i<=n;i++)\n{\n    for(j=1;j<=n;j++){\nc=fib(&j);\nif (c==i){\ns+=\"O\";\nbreak;\n}\n    }\nif (strlen(s)==(i-1))\ns+=\"o\";\n}\n\n\nprintf(\"%s\",s);\n}\n", "fixed": "int main()\n{\n    int f1,f2,f3,n,i;\n    scanf(\"%d\",&n);\n    f1=1;\n    f2=1;\n    int fibo[1000];\n    fibo[0]=f1;\n    fibo[1]=f2;\n    for(i=2;i<1000;i++)\n    {\n        f3=f1+f2;\n        f1=f2;\n        f2=f3;\n        fibo[i]=f2;\n    }\n    int j;\n    char ch[n+1];\n    int test;\n\n    for(i=0;i<n;i++)\n    {\n        j=0;\n        test=0;\n        while((!test) && (j<1000))\n        {\n            if((i+1)==fibo[j])\n                test=1;\n            j++;\n        }\n        if(test)\n            ch[i]='O';\n        else\n            ch[i]='o';\n    }\n    ch[n]= '\\0';\n    printf(\"%s\",ch);\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9932157394843962, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8746c7e428a94f8393452400bb566c37", "bug_code_uid": "17692d72fb4060cfac8f4ac80c1db205", "src_uid": "d5fc2bc618dd9d453a5e7ae30ccb73f3", "apr_id": "eba2cd3c67afd0f631764723ae4f3166", "difficulty": 800, "tags": ["brute force", "dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint Min(int a, int b);\r\nint Max(int a, int b);\r\nint main(){\r\n\tint a[200] = {0} ;\r\n\tint i, j, n, t, mini, maxi, ans, k;\r\n\tscanf(\"%d\", &n); \r\n\tfor (i = 1; i <= n; i++){\r\n\t\tscanf(\"%d\", &t);\r\n\t\tmini = 0;\r\n\t\tmaxi = 0;\r\n\t\tfor (j = 0; j <= t-1; j++){\r\n\t\t\t{\r\n\t\t\t  scanf(\"%d\",&a[j]);\r\n\t\t\t  if (a[mini] > a[j]) mini = j;\r\n\t\t\t  if (a[maxi] < a[j]) maxi = j;\r\n\t\t\t}\r\n\t\tif (maxi < mini){\r\n\t\t\tk = maxi;\r\n\t\t\tmaxi = mini;\r\n\t\t\tmini = k;\r\n\t\t} \r\n\t\tans = Min(mini + 1, t - maxi) + Min(Max(mini + 1, t - maxi), abs(maxi - mini));\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", ans);\r\n\t}\r\n\treturn 0;\r\n} \r\nint Min(int a, int b){\r\n\tif (a < b) return (a);\r\n\telse return(b);\r\n}\r\nint Max(int a, int b){\r\n\tif (a > b) return (a);\r\n\telse return(b);\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint Min(int a, int b);\r\nint Max(int a, int b);\r\nint main(){\r\n\tint a[200] = {0} ;\r\n\tint i, j, n, t, mini, maxi, ans, k;\r\n\tscanf(\"%d\", &n); \r\n\tfor (i = 1; i <= n; i++){\r\n\t\tscanf(\"%d\", &t);\r\n\t\tmini = 0;\r\n\t\tmaxi = 0;\r\n\t\tfor (j = 0; j <= t-1; j++){\r\n\t\t\t{\r\n\t\t\t  scanf(\"%d\",&a[j]);\r\n\t\t\t  if (a[mini] > a[j]) mini = j;\r\n\t\t\t  if (a[maxi] < a[j]) maxi = j;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (maxi < mini){\r\n\t\t\tk = maxi;\r\n\t\t\tmaxi = mini;\r\n\t\t\tmini = k;\r\n\t\t} \r\n\t\tans = Min(mini + 1, t - maxi) + Min(Max(mini + 1, t - maxi), abs(maxi - mini));\r\n\t\tprintf(\"%d\\n\", ans);\r\n\t}\r\n\treturn 0;\r\n} \r\nint Min(int a, int b){\r\n\tif (a < b) return (a);\r\n\telse return(b);\r\n}\r\nint Max(int a, int b){\r\n\tif (a > b) return (a);\r\n\telse return(b);\r\n}\r\n"}
{"similarity_score": 0.9042654028436019, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "7f46c2fa2ec87d529af9c965a410329d", "bug_code_uid": "ed7d80de120340c96be0c39ffc931bdf", "src_uid": "a98f67141b341152fcf20d803cbd5409", "apr_id": "36f9282d275443cb901f2e7d767c7d03", "difficulty": 1500, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\n#include<stdio.h>\nint T, N;\nint arr[200001];\nint main(void) {\n\tscanf(\"%d\", &T);\n\twhile (T--) {\n\t\tscanf(\"%d\", &N);\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tscanf(\"%d\", &arr[i + 1]);\n\t\t}\n\t\tint idx = 1;\n\t\tint ans = 0;\n\t\tint k = 0;\n\t\twhile (1) {\n\t\t\tif (idx == N+1) break;\n\t\t\tif (arr[idx] != idx) {\n\t\t\t\twhile (arr[idx] != idx) { idx++; if (idx == N+1) { k = 1;  break; } }\n\t\t\t\tans++;\n\t\t\t\tif (k == 1) break;\n\t\t\t}\n\t\t\tidx++;\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n}", "fixed": "#define _CRT_SECURE_NO_WARNINGS\n#define MIN(a, b) (((a) < (b)) ? (a) : (b))\n#include<stdio.h>\nint T, N;\nint arr[200005];\nint main(void) {\n\tscanf(\"%d\", &T);\n\twhile (T--) {\n\t\tscanf(\"%d\", &N);\n\t\tfor (int i = 1; i <= N; i++) {\n\t\t\tscanf(\"%d\", &arr[i]);\n\t\t}\n\t\tint idx = 1;\n\t\tint ans = 0;\n\t\tint k = 0;\n\t\twhile (1) {\n\t\t\tif (idx == N + 1) break;\n\t\t\tif (arr[idx] != idx) {\n\t\t\t\twhile (arr[idx] != idx) { idx++; if (idx == N + 1) { k = 1;  break; } }\n\t\t\t\tans++;\n\t\t\t\tif (k == 1) break;\n\t\t\t}\n\t\t\tidx++;\n\t\t}\n\t\tif (ans >= 2) printf(\"2\\n\");\n\t\telse { printf(\"%d\\n\", ans); }\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.983751846381093, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "223afc84a599c89f256c1e6e8896e958", "bug_code_uid": "dee7bd9e74b878f9b66e8edd667413eb", "src_uid": "cb645c794ee3916b180fc3d789cb7c27", "apr_id": "5c67f7d79671f146be341aeb1cf478f4", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\n#include<string.h>\r\n\r\nvoid function(long long int sum, int p, int ara[],char s[])\r\n\r\n{\r\n    int i;\r\n\r\n\r\n    for(i = 25; i >= 0; i--){\r\n\r\n            while(ara[i] > 0 && sum > p){\r\n\r\n                sum = sum -i-1;\r\n\r\n                ara[i]--;\r\n            }\r\n        }\r\n\r\n        for(i= 0; s[i] != '\\0'; i++){\r\n\r\n            if(ara[s[i]-96-1] > 0){\r\n\r\n                printf(\"%c\", s[i]);\r\n\r\n\r\n\r\n\r\n            }\r\n        }\r\n\r\n        printf(\"\\n\");\r\n\r\n\r\n}\r\n\r\nint main(){\r\n\r\n    int t;\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--){\r\n\r\n    int p, i;\r\n\r\n    long long int sum = 0;\r\n\r\n    char s[200000];\r\n\r\n\r\n\r\n    scanf(\"%s\", s);\r\n\r\n    scanf(\"%d\",&p);\r\n\r\n    int ara[26];\r\n\r\n    for(i = 0; i < 26; i++)\r\n\r\n        ara[i] = 0;\r\n\r\n    for(i = 0; s[i] != '\\0'; i++){\r\n\r\n        ara[s[i]- 96-1]++;\r\n\r\n        sum += (s[i] - 96);\r\n\r\n    }\r\n\r\n\r\n\r\n    if(sum <= p)\r\n\r\n        printf(\"%s\\n\", s);\r\n\r\n    else{\r\n\r\n        function(sum, p , ara, s);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\n#include<string.h>\r\n\r\nvoid function(long long int sum, int p, int ara[],char s[])\r\n\r\n{\r\n    int i;\r\n\r\n\r\n    for(i = 25; i >= 0; i--){\r\n\r\n            while(ara[i] > 0 && sum > p){\r\n\r\n                sum = sum -i-1;\r\n\r\n                ara[i]--;\r\n            }\r\n        }\r\n\r\n        for(i= 0; s[i] != '\\0'; i++){\r\n\r\n            if(ara[s[i]-96-1] > 0){\r\n\r\n                printf(\"%c\", s[i]);\r\n\r\n\r\n                ara[s[i]-96-1]--;\r\n\r\n            }\r\n        }\r\n\r\n        printf(\"\\n\");\r\n\r\n\r\n}\r\n\r\nint main(){\r\n\r\n    int t;\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--){\r\n\r\n    int p, i;\r\n\r\n    long long int sum = 0;\r\n\r\n    char s[200000];\r\n\r\n\r\n\r\n    scanf(\"%s\", s);\r\n\r\n    scanf(\"%d\",&p);\r\n\r\n    int ara[26];\r\n\r\n    for(i = 0; i < 26; i++)\r\n\r\n        ara[i] = 0;\r\n\r\n    for(i = 0; s[i] != '\\0'; i++){\r\n\r\n        ara[s[i]- 96-1]++;\r\n\r\n        sum += (s[i] - 96);\r\n\r\n    }\r\n\r\n\r\n\r\n    if(sum <= p)\r\n\r\n        printf(\"%s\\n\", s);\r\n\r\n    else{\r\n\r\n        function(sum, p , ara, s);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.6321292775665399, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "ea9e04e29b6c00ffdefa0a580e480949", "bug_code_uid": "97104f8ccc0eebe2e64803448a68f10e", "src_uid": "c4929ec631caae439ccb9bc6882ed816", "apr_id": "79e56795a2e1e1f86bb60abd29595718", "difficulty": 1600, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\nint s[1001]; \r\nlong a[1000], b[1000];double c[1000];\r\nint main() {\r\n\tint t; scanf(\"%d\", &t); getchar();\r\n\ts[1] = 0;\r\n\tfor (int i = 2; i <= 1000; i++) {\r\n\t\tunsigned int min = 65535;\r\n\t\tfor (int j = 1; j < i; j++)\r\n\t\t\tfor (int k = 1; k <= j; k++)\r\n\t\t\t\tif (i - j == j / k && s[j] <= min) {\r\n\t\t\t\t\tmin = s[j]; break;\r\n\t\t\t\t}\r\n\t\ts[i] = min+1;\r\n\t}\r\n\tfor (int qwq = 0; qwq < t;qwq++) {\r\n\t\tlong n, k,t;\r\n\t\tscanf(\"%ld %ld\", &n, &k); getchar();\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tscanf(\"%ld\", &t); a[i] = s[t];\r\n\t\t}\r\n\t\tgetchar();\r\n\t\tfor (int i = 0; i < n; i++) { \r\n\t\t\tscanf(\"%ld\", &b[i]);\r\n\t\t\tif(a[i]!=0)c[i] = 1.0*b[i] / a[i];\r\n\t\t\telse c[i] = -1;\r\n\t\t}getchar();\r\n\t\tlong sum = 0;\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tdouble max = 0; int t = 0;\r\n\t\t\tfor(int j=0;j<n;j++)\r\n\t\t\t\tif (c[j] > max) { max = c[j]; t = j; }\r\n\t\t\tif (max!=0&&a[t] <= k) {\r\n\t\t\t\tk -= a[t]; sum += b[t];\r\n\t\t\t\t//printf(\"%d %d %f\\n\", a[t], b[t],c[t]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tc[t] = 0;\r\n\t\t}\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t\tif (a[i] == 0)sum += b[i];\r\n\t\tprintf(\"%ld\\n\", sum);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\nint s[1001]; \r\nlong a[1000], b[1000];\r\n#define MAX(a,b) a>b?a:b\r\nint main() {\r\n\tint t; scanf(\"%d\", &t); getchar();\r\n\ts[1] = 0;\r\n\tfor (int i = 2; i <= 1000; i++) {\r\n\t\tunsigned int min = 65535;\r\n\t\tfor (int j = 1; j < i; j++)\r\n\t\t\tfor (int k = 1; k <= j; k++)\r\n\t\t\t\tif (i - j == j / k && s[j] <= min) {\r\n\t\t\t\t\tmin = s[j]; break;\r\n\t\t\t\t}\r\n\t\ts[i] = min+1;\r\n\t}\r\n\tlong *dp = (long *)malloc((1000000 + 1) * sizeof(long));\r\n\tfor (int qwq = 0; qwq < t;qwq++) {\r\n\t\tlong n, k,t;\r\n\t\tscanf(\"%ld %ld\", &n, &k); getchar();\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tscanf(\"%ld\", &t); a[i] = s[t];\r\n\t\t}\r\n\t\tgetchar();\r\n\t\tfor (int i = 0; i < n; i++)scanf(\"%ld\", &b[i]);\r\n\t\tgetchar();\r\n\t\t\r\n\t\tmemset(dp, 0, (k + 1) * sizeof(long));\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t\tfor (long j = k; j >= 0; j--) {\r\n\t\t\t\tif (j < a[i])continue;\r\n\t\t\t\telse dp[j] = MAX(dp[j], dp[j - a[i]]+b[i]);\r\n\t\t\t}\r\n\t\tprintf(\"%ld\\n\", dp[k]);\r\n\t}\r\n\tfree(dp);\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.7964774951076321, "equal_cnt": 25, "replace_cnt": 24, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 25, "lang": "GNU C", "fix_code_uid": "43659ac1eb5dce12170e58a116bc35e0", "bug_code_uid": "bc12e49ae7f20b6fcd594507fbf61a67", "src_uid": "a33991c9d7fdb4a4e00c0d0e6902bee1", "apr_id": "c8e72710a9f886dc94e6a8450936d242", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n int main(){\n \tint n,arr[110],i,j;\n \tint xor[110],big;\n \tint max[110];\n \t\n \tscanf(\"%d\",&n);\n \tfor(i=1;i<=n;i++){\n \t\tscanf(\"%d\",&arr[i]);\n \t}\n \txor[0]=0;\n \tfor(i=1;i<=n;i++){\n \t\txor[i] = xor[i-1]^arr[i];\n \t}\n \tfor(i=1;i<=n;i++){\n \t\tmax[i]=xor[i];\n \t\tfor(j=1;j<i;j++){\n \t\t\tif(max[i]<(xor[i]^xor[j]))\n \t\t\t\tmax[i] = xor[i]^xor[j];\n \t\t}\n \t}\n \tbig = max[1];\n \tfor(i=2;i<=n;i++){\n\t\tif(big<max[i])\n\t\t\tbig=max[i];\n\t}\n \tprintf(\"%d\\n\",big);\n return 0;\t\n }\n", "fixed": "#include <stdio.h>\n\n int main(){\n    int n,arr[110],i,j;\n    int xor[110],big;\n    int max[110];\n    \n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&arr[i]);\n    }\n    xor[0]=0;\n    for(i=1;i<=n;i++){\n        xor[i] = xor[i-1]^arr[i];\n    }\n    for(i=1;i<=n;i++){\n        max[i]=xor[i];\n        for(j=1;j<i;j++){\n            if(max[i]<(xor[i]^xor[j]))\n                max[i] = xor[i]^xor[j];\n        }\n    }\n    big = max[1];\n    for(i=2;i<=n;i++){\n        if(big<max[i])\n            big=max[i];\n    }\n    printf(\"%d\\n\",big);\n return 0;  \n }"}
{"similarity_score": 0.7326086956521739, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "c5972f36653454134add32abc31f63d8", "bug_code_uid": "e8e86e8fd738fc6d0f00f5affada52c8", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "8c31668aa6cd670c4fc854191902d240", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int i,n;\n    scanf(\"%d\",&n);\n    int a[n];\n    int max=0,c=1;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n-1;i++){\n        if(a[i]>a[i+1]){\n            if(c>max){\n            max=c;\n             c=1;\n                \n            }else{\n                c++;\n            }\n        }\n    \n    }\n    if(c>max){\n        max=c;\n        printf(\"%d\",max);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,max,c,i;\n    scanf(\"%d\",&n);\n    int a[n];\n    max = 0,c=1;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n        for(i=0;i<n-1;i++){\n            if(a[i]>a[i+1]){\n                if(c>max){\n                    max=c;\n                }\n                    c=1;\n                }else{\n            \n        \n        c++;\n                }\n            }\n        if(c>max)\n            max=c;\n        \n        printf(\"%d\",max);\n    \n    return 0;\n}"}
{"similarity_score": 0.4021005251312828, "equal_cnt": 16, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "8e3c40accb405bed13348da90744aab1", "bug_code_uid": "241a287c1cecd77a89ae331113bf8936", "src_uid": "88390110e4955c521867864a6f3042a0", "apr_id": "8f3ec5e51d19e30990146b362fa25673", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,i,j,k,a,b,sum=0,temp,l,c;\n    scanf(\"%lld\",&n);\n    int ara[n],array[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&ara[i]);\n        sum=sum+ara[i];\n    }\n    for(j=0;j<n;j++)\n    {\n        scanf(\"%lld\",&array[j]);\n    }\n    for(k=0;k<n-1;k++)\n    {\n        for(l=k+1;l<n;l++)\n            if(array[k]<array[l])\n            {\n                temp=array[k];\n                array[k]=array[l];\n                array[l]=temp;\n            }\n    }\n    c=array[0]+array[1];\n    if(sum<=c)\n    {\n        printf(\"YES\");\n    }\n    else\n    {\n        printf(\"NO\");\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,i,j,k,a,b,c,sum=0,l,count=0;\n    scanf(\"%I64d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%I64d\",&a);\n        sum=sum+a;\n    }\n    int ara[n];\n    for(j=0;j<n;j++)\n    {\n        scanf(\"%I64d\",&ara[j]);\n    }\n    l=ara[0];\n    for(k=0;k<n;k++)\n    {\n        if(l<ara[k])\n            l=ara[k];\n    }\n    b=sum-l;\n    if(b<=0)\n    {\n        printf(\"YES\");\n    }\n    else if(b>0)\n    {\n        for(c=0;c<n;c++)\n        {\n            if(b<=ara[c])\n           {\n               count++;\n           }\n        }\n        if((count-1)>=1)\n        {\n            printf(\"YES\");\n        }\n        else\n        {\n            printf(\"NO\");\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.8921568627450981, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "5fe6ccc2a4e3e2c88b677eb2bc03c005", "bug_code_uid": "e5ce86da6e537bd4b25d318341a59f46", "src_uid": "3a93a6f78b41cbb43c616f20beee288d", "apr_id": "358515535012385627a2c3d8569e67ef", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    unsigned int n, k, Cnt = 0, i;\n    scanf(\"%u%u\", &n, &k );\n    int x, y;\n    for( i = 0; i < n; i++ ){\n        scanf(\"%d%d\", &x, &y );\n        Cnt += 1 + y - x;\n    }\n    if( Cnt > k)\n        Cnt = Cnt % k;\n     Cnt = k - Cnt;\n     printf(\"%u\", Cnt);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n, k, i;\n    scanf(\"%d%d\", &n, &k );\n    int x, y, Cnt = 0;\n    for( i = 0; i < n; i++ ){\n        scanf(\"%d%d\", &x, &y );\n        Cnt += 1 + (y - x);\n    }\n    if( Cnt > k)\n        Cnt = Cnt % k;\n     if(Cnt)\n     Cnt = k - Cnt;\n     printf(\"%d\", Cnt);\n    return 0;\n}\n"}
{"similarity_score": 0.9182209469153515, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "8bdbd3894511a3cdbdfd4bfe657b5ae1", "bug_code_uid": "2bbbfaf7f63d6c7a0ad71fa6026703c5", "src_uid": "e32f0615541d97a025bc99c3cbf5380e", "apr_id": "d1ca6e9965db3bb99099e0336448401a", "difficulty": 1300, "tags": ["combinatorics", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,k,k1,i,j,x;\n        scanf(\"%d%d\",&n,&k);\n        k1=((n)*(n-1))/2;\n        k1=k1-k+1;\n        int c=0;\n        for(i=1;i<=n-1;i++)\n        {\n            for(j=i+1;j<=n;j++)\n            {\n                c++;\n                if(c==k1)\n                break;\n            }\n            if(c==k1)\n            break;\n        }\n       // printf(\"i %d j %d\\n\",i,j);\n        for(x=1;x<=n;x++)\n        {\n            if(x==i||x==j)\n            printf(\"b\");\n            else\n            printf(\"a\");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int n,k,k1,i,j,x;\n        scanf(\"%lld%lld\",&n,&k);\n        k1=((n)*(n-1))/2;\n        k1=k1-k+1;\n        long long int c=0;\n        for(i=1;i<=n-1;i++)\n        {\n        \tif(c+(n-i)<k1)\n        \t{\n        \t\tc+=n-i;\n        \t\tcontinue;\n\t\t\t}\n            for(j=i+1;j<=n;j++)\n            {\n                c++;\n                if(c==k1)\n                break;\n            }\n            if(c==k1)\n            break;\n        }\n       // printf(\"i %d j %d\\n\",i,j);\n        for(x=1;x<=n;x++)\n        {\n            if(x==i||x==j)\n            printf(\"b\");\n            else\n            printf(\"a\");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9954337899543378, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4111753cbfb5b4fdcd4420d2c6b11d39", "bug_code_uid": "4b431d91f93bc16febfc4a1ca3f6af86", "src_uid": "42840fc873369e0d0d6a4ad24a43f5a6", "apr_id": "357a701854de651f0deef936cbffdbd5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main()\r\n{\r\nint a,b,c,d=0,i=1,j=2,k,n,m;\r\nscanf(\"%d\",&m);\r\nwhile(m!=0)\r\n{\r\nscanf(\"%d\",&n);\r\nfloat ar[(n*2)+1];\r\nar[0]=0;\r\nfor(i=1;i<=n*2;i++)\r\n{\r\nscanf(\"%f\",&ar[i]);\r\n}\r\nint ar1[n];\r\nfor(k=0;k<n;k++){\r\n    scanf(\"%d\",&ar1[k]);  \r\n}\r\n  k=0; \r\n  i=1;\r\n  j=2;\r\n  while(j<=n*2) \r\n  {\r\n      a=ar[i]-ar[i-1]; \r\n    \r\n      if(j==n*2)\r\n          b=0;\r\n      else\r\n          b=ceil((ar[j]-ar[i])/2);\r\n          c=ar1[k];  \r\n      k++;\r\n      d=d+a+b+c;  \r\n     if(ar[j]!=n*2 && d<ar[j])\r\n      {\r\n         d=ar[j];\r\n      }\r\n      j=j+2;\r\n      i=i+2;\r\n   } \r\n    printf(\"%d\",d);\r\n    printf(\"\\n\");\r\n    d=0;\r\n\r\nm--;\r\n}\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main()\r\n{\r\nint a,b,c,d=0,i=1,j=2,k,n,m;\r\nscanf(\"%d\",&m);\r\nwhile(m!=0)\r\n{\r\nscanf(\"%d\",&n);\r\nfloat ar[(n*2)+1];\r\nar[0]=0;\r\nfor(i=1;i<=n*2;i++)\r\n{\r\nscanf(\"%f\",&ar[i]);\r\n}\r\nint ar1[n];\r\nfor(k=0;k<n;k++){\r\n    scanf(\"%d\",&ar1[k]);  \r\n}\r\n  k=0; \r\n  i=1;\r\n  j=2;\r\n  while(j<=n*2) \r\n  {\r\n      a=ar[i]-ar[i-1]; \r\n    \r\n      if(j==n*2)\r\n          b=0;\r\n      else\r\n          b=ceil((ar[j]-ar[i])/2);\r\n          c=ar1[k];  \r\n      k++;\r\n      d=d+a+b+c;  \r\n     if(j!=n*2 && d<ar[j])\r\n      {\r\n         d=ar[j];\r\n      }\r\n      j=j+2;\r\n      i=i+2;\r\n   } \r\n    printf(\"%d\",d);\r\n    printf(\"\\n\");\r\n    d=0;\r\n\r\nm--;\r\n}\r\n}\r\n"}
{"similarity_score": 0.9991416309012876, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a84e776f319b8c70dce719fbe3c25e89", "bug_code_uid": "1145fa441a60614110917a5e34a29f3f", "src_uid": "6bb26991c9ea70e51a6bda5653de8131", "apr_id": "94e1233d4ec464f88775e7afe83be5d2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <ctype.h> \nint main(int argc, char const *argv[])\n{\n    int n,k,num,c=0,tc=0;\n    scanf(\"%d%d\",&n,&k);\n    for (int i = 0; i < n; ++i)\n    {\n        c=0;\n        scanf(\"%d\",&num);\n        while(num>0)\n        {\n            if (num%10==4||num%10==7)\n            {\n                //printf(\"remainder=%d\\n\",num%10);\n                c++;\n                /* code */\n            }\n            num/=10;\n        }\n        if (c<k)\n        {\n            tc++;\n            /* code */\n        }\n    }\n    printf(\"%d\\n\",tc);\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <ctype.h> \nint main(int argc, char const *argv[])\n{\n    int n,k,num,c=0,tc=0;\n    scanf(\"%d%d\",&n,&k);\n    for (int i = 0; i < n; ++i)\n    {\n        c=0;\n        scanf(\"%d\",&num);\n        while(num>0)\n        {\n            if (num%10==4||num%10==7)\n            {\n                //printf(\"remainder=%d\\n\",num%10);\n                c++;\n                /* code */\n            }\n            num/=10;\n        }\n        if (c<=k)\n        {\n            tc++;\n            /* code */\n        }\n    }\n    printf(\"%d\\n\",tc);\n    \n    return 0;\n}"}
{"similarity_score": 0.9938118811881188, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "15a8820a5c302b145b10f6d56eae4525", "bug_code_uid": "867bdad6adec73cc2c72fc4cfb9d1bc7", "src_uid": "87b8dccfc0e5a63cd209c37cf8aebef0", "apr_id": "7eea7de3ed5e10681481aa1e9017e0ee", "difficulty": 1500, "tags": ["dp", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define max(a,b) ((a)>(b)?(a):(b))\n\nint main() {\n\tint n, *a, **inc, f, l = 0, m = 0, i;\n\tscanf(\"%d\", &n);\n\ta = malloc(n*sizeof(int));\n\tinc = malloc((n + 1)/2*sizeof(int*));\n\tfor(i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\tif(!i)\n\t\t\tf = i;\n\t\telse if(a[i] <= a[i - 1]) {\n\t\t\tinc[l] = malloc(2*sizeof(int));\n\t\t\tinc[l][0] = f;\n\t\t\tinc[l++][1] = i - 1;\n\t\t\tm = max(m, i - f);\n\t\t\tf = i;\n\t\t}\n\t}\n\tinc[l] = malloc(2*sizeof(int));\n\tinc[l][0] = f;\n\tinc[l++][1] = i - 1;\n\tm = max(m, i - f);\n\t\n\tfor(i = 0; i < l - 1; i++) {\n\t\tif(inc[i][0] != inc[i][1] && a[inc[i][1] - 1] < a[inc[i + 1][0]])\n\t\t\tm = max(m, inc[i + 1][1] - inc[i][0]);\n\t\tif(inc[i + 1][0] != inc[i + 1][1] && a[inc[i][1]] < a[inc[i + 1][0] + 1])\n\t\t\tm = max(m, inc[i + 1][1] - inc[i][0]);\n\t}\n\t\n\tprintf(\"%d\", m);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define max(a,b) ((a)>(b)?(a):(b))\n\nint main() {\n\tint n, *a, **inc, f, l = 0, m = 0, i;\n\tscanf(\"%d\", &n);\n\ta = malloc(n*sizeof(int));\n\tinc = malloc(n*sizeof(int*));\n\tfor(i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\tif(!i)\n\t\t\tf = i;\n\t\telse if(a[i] <= a[i - 1]) {\n\t\t\tinc[l] = malloc(2*sizeof(int));\n\t\t\tinc[l][0] = f;\n\t\t\tinc[l++][1] = i - 1;\n\t\t\tm = max(m, i - f);\n\t\t\tf = i;\n\t\t}\n\t}\n\tinc[l] = malloc(2*sizeof(int));\n\tinc[l][0] = f;\n\tinc[l++][1] = i - 1;\n\tm = max(m, i - f);\n\t\n\tfor(i = 0; i < l - 1; i++) {\n\t\tif(inc[i][0] != inc[i][1] && a[inc[i][1] - 1] < a[inc[i + 1][0]])\n\t\t\tm = max(m, inc[i + 1][1] - inc[i][0]);\n\t\tif(inc[i + 1][0] != inc[i + 1][1] && a[inc[i][1]] < a[inc[i + 1][0] + 1])\n\t\t\tm = max(m, inc[i + 1][1] - inc[i][0]);\n\t}\n\t\n\tprintf(\"%d\", m);\n\treturn 0;\n}\n"}
{"similarity_score": 0.996969696969697, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d544092f0b0a6ddeb4e048b4c3b1aea3", "bug_code_uid": "345463cdafad38b47fc98be3ff2c8df6", "src_uid": "dc548fe1d8683b4b0ee4e0fa67638185", "apr_id": "f68fa3df7dc58c2f2772aa8a0c1adb5a", "difficulty": 1200, "tags": ["constructive algorithms", "number theory", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int n,k,i,j,s[1000];\n    scanf(\"%d%d\",&n,&k);\n    if(n==k){\n        printf(\"-1\");\n        return 0;\n    }\n\n    for(i=n-k+1;i<=n;i++)\n        s[i]=i;\n    s[n-k]=1;\n    for(i=1;i<n-k;i++)\n        s[i]=i+1;\n    for(i=1;i<=n;i++)\n        printf(\"%d \",s[i]);\n\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int n,k,i,j,s[100050];\n    scanf(\"%d%d\",&n,&k);\n    if(n==k){\n        printf(\"-1\");\n        return 0;\n    }\n\n    for(i=n-k+1;i<=n;i++)\n        s[i]=i;\n    s[n-k]=1;\n    for(i=1;i<n-k;i++)\n        s[i]=i+1;\n    for(i=1;i<=n;i++)\n        printf(\"%d \",s[i]);\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.997229916897507, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1163684d25d97cf4433460c558e8bc18", "bug_code_uid": "906c4b11eed285a8716b090dfe9cd7b1", "src_uid": "26f1b8c3cb83603c904e1508df4067f4", "apr_id": "041def5b08d2b1b065877761d22fd381", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main(int argc, char **argv)\n{\n\tchar c;\n\tchar *ptr = malloc(sizeof(char) * 100000);\n\tint i = 0;\n\twhile((c = getchar())!='\\n'){\n\t\t*(ptr+i) = c;\n\t\tif( i && *(ptr+i) == *(ptr+i-1)){\n\t\t\t\t*(ptr+i) = '\\0';\n\t\t\t\t*(ptr+i-1) = '\\0';\n\t\t\t\ti = i - 1;\n\t\t\t\n\t\t}else{\n\t\t\t\ti++;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t*(ptr+i) = '\\0';\n\tputs(ptr);\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main(int argc, char **argv)\n{\n\tchar c;\n\tchar *ptr = malloc(sizeof(char) * 10000000);\n\tint i = 0;\n\twhile((c = getchar())!='\\n'){\n\t\t*(ptr+i) = c;\n\t\tif( i && *(ptr+i) == *(ptr+i-1)){\n\t\t\t\t*(ptr+i) = '\\0';\n\t\t\t\t*(ptr+i-1) = '\\0';\n\t\t\t\ti = i - 1;\n\t\t\t\n\t\t}else{\n\t\t\t\ti++;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t*(ptr+i) = '\\0';\n\tputs(ptr);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9978925184404637, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "8b3e44e791a918dc9a3ae9115825feb3", "bug_code_uid": "5f63aadd5cc9e1399f17d584dd464519", "src_uid": "b5bcb6d78daacd56362fd76e35b903ac", "apr_id": "bbdf936bd41fb51eca74e3dc3c988b9b", "difficulty": 1100, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    long long int i,j,a,b,c,k,len,count=0;\n    char st1[100000];\n    char st2[100000];\n    char st3[100000];\n    char st4[100000];\n    gets(st1);\n    len=strlen(st1);\n    for(i=0,j=0;i<len;i++)\n    {\n        if(st1[i]!='a')\n        {\n            st2[j]=st1[i];\n            j++;\n        }\n    }\n    for(i=len-1;i>=0;i--)\n    {\n        if(st1[i]!='a') count++;\n        else break;\n    }\n    a=(j+1)/2;\n    if((strlen(st2)%2)!=0)\n    {\n        printf(\":(\");\n        return 0;\n    }\n\n    if(count<a)\n    {\n        printf(\":(\");\n\n    }\n    else if(count>=a)\n    {\n        for(i=0;i<a;i++)\n        {\n            st3[i]=st2[i];\n        }\n\n        strcpy(st4+0,st2+(strlen(st2))/2);\n        if(strcmp(st3,st4)==0)\n        {\n\n            strcpy(st1+0,strrev(st1)+strlen(st3));\n\n            printf(\"%s\",strrev(st1));\n        }\n        else\n        {\n            printf(\":(\");\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    long long int i,j,a,b,c,k,len,count=0;\n    char st1[1000000];\n    char st2[1000000];\n    char st3[1000000];\n    char st4[1000000];\n    gets(st1);\n    len=strlen(st1);\n    for(i=0,j=0;i<len;i++)\n    {\n        if(st1[i]!='a')\n        {\n            st2[j]=st1[i];\n            j++;\n        }\n    }\n    for(i=len-1;i>=0;i--)\n    {\n        if(st1[i]!='a') count++;\n        else break;\n    }\n    a=(j+1)/2;\n    if((strlen(st2)%2)!=0)\n    {\n        printf(\":(\");\n        return 0;\n    }\n\n    if(count<a)\n    {\n        printf(\":(\");\n\n    }\n    else if(count>=a)\n    {\n        for(i=0;i<a;i++)\n        {\n            st3[i]=st2[i];\n        }\n\n        strcpy(st4+0,st2+(strlen(st2))/2);\n        if(strcmp(st3,st4)==0)\n        {\n\n            strcpy(st1+0,strrev(st1)+strlen(st3));\n\n            printf(\"%s\",strrev(st1));\n        }\n        else\n        {\n            printf(\":(\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.985244040862656, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "60bab4cf804799130baf947112a8b4ea", "bug_code_uid": "a8bbb1d481d2a07e15465c7ff92f238a", "src_uid": "90e448ed43ba9a0533ac7dc24f92a7f8", "apr_id": "a6a839f9cb00a8560dabaca5d1da8619", "difficulty": 1100, "tags": ["binary search", "data structures", "greedy", "two pointers"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <cstdio>\r\n#define LL long long\r\n\r\nLL x[200100],pre[200100];\r\n\r\nvoid solve(){\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tscanf(\"%lld\",&x[i]);\r\n\t}\r\n\tLL sum1=0,sum2=0;\r\n\tint j=n+1,ans=0;\r\n\tfor(int i=1;i<=n && i<j;i++){\r\n\t\tsum1 += x[i];\r\n\t\twhile(sum1>sum2 && i<j-1) sum2+=x[--j];\r\n\t\tif(sum1==sum2) ans = i+(n-j+1);\r\n\t}\r\n\tprintf(\"%d\\n\",ans);\r\n}\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--) solve(); \r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#define LL long long\r\n\r\nLL x[200100],pre[200100];\r\n\r\nvoid solve(){\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tscanf(\"%lld\",&x[i]);\r\n\t}\r\n\tLL sum1=0,sum2=0;\r\n\tint j=n+1,ans=0;\r\n\tfor(int i=1;i<=n && i<j;i++){\r\n\t\tsum1 += x[i];\r\n\t\twhile(sum1>sum2 && i<j-1) sum2+=x[--j];\r\n\t\tif(sum1==sum2) ans = i+(n-j+1);\r\n\t}\r\n\tprintf(\"%d\\n\",ans);\r\n}\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--) solve(); \r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9603112840466926, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "bb4a43b57dad552dcc58278537ac987f", "bug_code_uid": "24b61742e58b41eb638e147010ed53ab", "src_uid": "eea7860e6bbbe5f399b9123ebd663e3e", "apr_id": "563d8e29292526832e19d85229849d88", "difficulty": 1400, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n    int j,n,a[100010],y,x,b[100010]={0},i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        x=sqrt(a[i]);\n        if(sqrt(a[i])-x==0)\n            y=x;\n        else \n            y=x+1;\n        for(j=2;j<y;j++)\n            if(a[i]%j==0)\n            {\n                b[j]++;\n                b[a[i]/j]++;\n            }\n        if(a[i]%x==0 && y==x)\n            b[x]++;\n        b[a[i]]++;\n    }\n    for(i=2;i<=100000;i++)\n    {\n        if(b[i]>b[2])\n            b[2]=b[i];\n    }\n    printf(\"%d\\n\",b[2]);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n    int j,n,a[100010],y,x,b[100010]={0},i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        x=sqrt(a[i]);\n        if(sqrt(a[i])-x==0)\n            y=x;\n        else \n            y=x+1;\n        for(j=2;j<y;j++)\n            if(a[i]%j==0)\n            {\n                b[j]++;\n                b[a[i]/j]++;\n            }\n        if(a[i]%x==0 && y==x)\n            b[x]++;\n        b[a[i]]++;\n    }\n    for(i=2;i<=100000;i++)\n    {\n        if(b[i]>b[2])\n            b[2]=b[i];\n    }\n    if(b[2]>0)\n        printf(\"%d\\n\",b[2]);\n    else\n        printf(\"1\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.4409044193216855, "equal_cnt": 15, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "5b95d5762dd0ec52f39e71ee1c770332", "bug_code_uid": "bc224daa64b0228611897b22988c1a9a", "src_uid": "b1fd037d5ac6023ef3250fc487656db5", "apr_id": "ce6850fb31327e28dcb79aee63718a81", "difficulty": 1500, "tags": ["binary search", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>\n#include <math.h>\n#define MOD 1000000007\n#define ll long long\n\nlong long cmpfunc(const void *a, const void *b){\n    return *(ll*)a - *(ll*)b;\n}\n\nint max(int a,int b){\n    return (a>b)?a:b;\n}\n\nint main(void){\n    int n,s,i,k;\n    scanf(\"%d %d\",&n,&s);\n    int a[n+1];\n    for(i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    for(k=n;k>0;k--){\n        ll b[n];\n        for(i=0;i<n;i++) b[i]=(ll)a[i+1]+k*(i+1);\n        qsort(b,n,sizeof(long long int),cmpfunc);\n        int ans=0;\n        for(i=0;i<k;i++) ans+=b[i];\n        if(ans>s) continue;\n        else{\n            printf(\"%d %d\\n\",k,ans);\n            return 0;\n        }\n    }\n    if(k==0) printf(\"0 0\\n\");\n    return 0;\n}\n\n\n\n\n\n\n/*\nint main(void){\n    int n,m,i,j;\n    scanf(\"%d %d\",&n,&m);\n    char a[n][m+2];\n    for(i=0;i<n;i++) {\n        scanf(\"%s\",a[n-1-i]);\n    }\n    int ans=n-1;\n\n    return 0;\n}\n*/\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>\n#include <math.h>\n#define MOD 1000000007\n#define ll long long\n\nlong long cmpfunc(const void *a, const void *b){\n    return (ll)(*(ll*)a - *(ll*)b);\n}\n\nint max(int a,int b){\n    return (a>b)?a:b;\n}\n\nint main(void){\n    int n,s,i;\n    int max=0,mins=MOD;\n    scanf(\"%d %d\",&n,&s);\n    ll a[n+1];\n    for(i=1;i<=n;i++) {\n        scanf(\"%lld\",&a[i]);\n    }\n    int left=1, right=n;\n    while(left<=right){\n        int k=(left+right)/2;\n        ll b[n];\n        for(i=0;i<n;i++) b[i]=(ll)a[i+1]+(ll)k*(i+1);\n        qsort(b,n,sizeof(ll),cmpfunc);\n        ll ans=0;\n        for(i=0;i<k;i++) {\n            ans+=b[i];\n            if(ans>s) break;\n        }\n        if(ans<=s){\n            if(max<k){\n                max=k;\n                mins=ans;\n            }\n            else if(max==k && mins>ans) mins=ans;\n            left=k+1;\n        }\n        else right=k-1;\n    }\n    if(mins==MOD) mins=0;\n    printf(\"%d %d\\n\",max,mins);\n    return 0;\n}\n"}
{"similarity_score": 0.7296137339055794, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "3b9d544d0e9c96aa8e2ad3f1b7a197f0", "bug_code_uid": "e9284640c09bccadfa437a990b5cbd57", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "1730d09edadf1ffead7e938a5b3467ca", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\nlong long int i,j,n,x,y,k,chk=0;\nscanf(\"%I64d %I64d %I64d\",&y,&k,&n);\nfor(i=1;i<=n-y;i++)\n{\n if((i+y)/k>100000)\n  break;\n if((i+y)%k==0)\n {\n  printf(\"%I64d \",i);\n  chk=1;\n }\n}\nif(chk==0)\n printf(\"-1\");\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\nlong long int i,j,n,x,y,k,chk=0;\nscanf(\"%I64d %I64d %I64d\",&y,&k,&n);\nfor(i=k;i<=n;i+=k)\n{\n if((i>y)&&(y<n))\n {\n  printf(\"%I64d \",i-y);\n  chk=1;\n }\n}\nif(chk==0)\n printf(\"-1\");\nreturn 0;\n}\n"}
{"similarity_score": 0.3612512613521695, "equal_cnt": 17, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "da170f4ad709c0d7e4737c7743570bd3", "bug_code_uid": "fba1482cac588130e561a7f53b4efc40", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "fe7b3d1ab68314bb72bccb36d2405045", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(void)\n{\n    int n,c,i,j;\n    long long a[10000],cnt,d;\n    scanf(\"%d\",&n); \n    for(i = 0 ; i < n ; i ++)\n        scanf(\"%lld\",&a[i]);\n    for(i = 0 ; i < n ; i ++)\n    {\n        cnt = 2;\n        d = sqrt(a[i] * 1.0);\n        if(d * d == a[i])\n        {\n            if(a[i] % 2 == 0)\n                printf(\"NO\\n\");\n            else\n                printf(\"YES\\n\");\n        }\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n#define SIZE 1000001\nint arr[1000001];\nint main(void)\n{\n    long long i,j,n,num;\n    arr[2]=1;\n    for(i=3;i<SIZE;i+=2)\n    arr[i]=1;\n    for(i=3;i*i<SIZE;i+=2)\n    {\n        if(arr[i])\n        {\n            for(j=3*i;j<SIZE;j+=2*i)\n\t\t\t\tarr[j]=0;\n        }\n    }\n    scanf(\"%lld\",&n);\n    while(n--)\n    {\n        scanf(\"%lld\",&num);\n        j=(long long)sqrt(num * 1.0);\n        if(arr[j]&&j*j==num)\n\t\t\tprintf(\"YES\\n\");\n        else\n\t\t\tprintf(\"NO\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9960474308300395, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f381dca64119d23b3c140b5e62fcf6b3", "bug_code_uid": "a9e89be5a7f217d17a0faad1b2e34898", "src_uid": "2f659be28674a81f58f5c587b6a0f465", "apr_id": "1b9a672d1d55e2cab3b8be5fd832e14f", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\n  int n, k, i, aux;\n  char aorb;\n  scanf(\"%d %d\", &n, &k);\n\n  if(n >= k && k > 1){\n    char str[n+1];\n    str[n] = 0;\n    aux = 0;\n    aorb = 0x61;\n    for(i = 0; i < n+2-k; i++){\n      str[i] = aorb;\n      if(aorb == 0x61)\n    aorb = 0x62;\n      else\n    aorb = 0x61;\n    }\n    aorb = 0x63;\n    for(i = n+2-k; i < n; i++){\n      str[i] = aorb+aux;\n      aux++;\n    }\n    printf(\"%s\\n\", str);\n  }\n  else if(n == 1 && k == 1)\n    pritnf(\"a\\n\");\n  else\n    printf(\"-1\\n\");\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n\n  int n, k, i, aux;\n  char aorb;\n  scanf(\"%d %d\", &n, &k);\n\n  if(n >= k && k > 1){\n    char str[n+1];\n    str[n] = 0;\n    aux = 0;\n    aorb = 0x61;\n    for(i = 0; i < n+2-k; i++){\n      str[i] = aorb;\n      if(aorb == 0x61)\n    aorb = 0x62;\n      else\n    aorb = 0x61;\n    }\n    aorb = 0x63;\n    for(i = n+2-k; i < n; i++){\n      str[i] = aorb+aux;\n      aux++;\n    }\n    printf(\"%s\\n\", str);\n  }\n  else if(n == 1 && k == 1)\n    printf(\"a\\n\");\n  else\n    printf(\"-1\\n\");\n}\n"}
{"similarity_score": 0.9820224719101124, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "765d87cf738079ce28eeeb5d98aadd48", "bug_code_uid": "7e216c082e33557102f3d74d9a88b417", "src_uid": "21c0e12347d8be7dd19cb9f43a31be85", "apr_id": "1fc2d77b7fd503737adbc5ca37e7ba95", "difficulty": 1700, "tags": ["hashing", "divide and conquer", "sortings", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint Equivalent(const char * a,const char * b,const unsigned int L) {\n\nif (strncmp(a,b,L)==0)return 1;\nif(L%2==1)return 0;\n    return ((Equivalent(a,b,L/2)&&Equivalent(a+L/2,b+L/2,L/2))||(Equivalent(a,b+L/2,L/2)&&Equivalent(a+L/2,b,L/2)));\n}\n\nint main() {\n    char a[200005], b[200005];\n    scanf(\"%s\",a);\n    scanf(\"%s\",b);\n\n    if (Equivalent(a, b, strlen(a)) == 1) printf(\"YES\");\n    else printf(\"NO\");\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint Equivalent(const char * a,const char * b,const unsigned int L) {\n\nif (strncmp(a,b,L)==0)return 1;\nif(L%2==1)return 0;\n    return ((Equivalent(a,b+L/2,L/2)&&Equivalent(a+L/2,b,L/2))||(Equivalent(a,b,L/2)&&Equivalent(a+L/2,b+L/2,L/2)));\n}\n\nint main() {\n    char a[200005], b[200005];\n    scanf(\"%s\",a);\n    scanf(\"%s\",b);\n\n    if (Equivalent(a, b, strlen(a)) == 1) printf(\"YES\");\n    else printf(\"NO\");\n}"}
{"similarity_score": 0.41455696202531644, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "183cdbf74fc6eaca2ff76903c3eb7b1c", "bug_code_uid": "ba5904bae5c12b079cbcc08a786efb0a", "src_uid": "6e0dafeaf85e92f959c388c72e158f68", "apr_id": "b34479934609ffd59e915b07bcae17a5", "difficulty": 1000, "tags": ["constructive algorithms", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint i,j,a,b,n,k;\n\tscanf(\"%d %d %d\",&n,&a,&b);\n\tif(a*b<n)\n\t{\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tk=1;\n\tfor(i=0;i<a;i++)\n\t{\n\t\tfor(j=0;j<b;j++)\n\t\t{\n\t\t\tif(k<=n)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",k);\n\t\t\t\tk++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"0 \");\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint i,j,a,b,n,k,flag;\n\tscanf(\"%d %d %d\",&n,&a,&b);\n\tint c[a][b];\n\tif(a*b<n)\n\t{\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tk=1;\n\tflag=0;\n\tif(b%2!=0)\n\t{\t\n\t\tfor(i=0;i<a;i++)\n\t\t{\n\t\t\tfor(j=0;j<b;j++)\n\t\t\t{\n\t\t\t\tif(k<=n)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d \",k);\n\t\t\t\t\t//c[i][j]=k;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\"0 \");\n\t\t\t\t\t//c[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<a;i++)\n\t\t{\n\t\t\tif(flag==0)\n\t\t\t{\n\t\t\t\tfor(j=0;j<b;j++)\n\t\t\t\t{\n\t\t\t\t\tif(k<=n)\n\t\t\t\t\t{\n\t\t\t\t\t\t//printf(\"%d \",k);\n\t\t\t\t\t\tc[i][j]=k;\n\t\t\t\t\t\tk++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t//printf(\"0 \");\n\t\t\t\t\t\tc[i][j]=0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tflag=1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(j=b-1;j>=0;j--)\n\t\t\t\t{\n\t\t\t\t\tif(k<=n)\n\t\t\t\t\t{\n\t\t\t\t\t\t//printf(\"%d \",k);\n\t\t\t\t\t\tc[i][j]=k;\n\t\t\t\t\t\tk++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t//printf(\"0 \");\n\t\t\t\t\t\tc[i][j]=0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tflag=0;\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<a;i++)\n\t\t{\n\t\t\tfor(j=0;j<b;j++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",c[i][j]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9987966305655837, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ef933de1ae9e62f3ab7b18e6ac8efd85", "bug_code_uid": "a0bf2fcc2541aaa23828c2bdc9784521", "src_uid": "14fccd50d5dfb557dd53f2896ed844c3", "apr_id": "32c115598abcda2807fa8f0f89599ae0", "difficulty": 800, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main ()\n{\n    int tc,a,b,c,avg;\n\n    scanf(\"%d\",&tc);\n\n    while(tc--)\n    {\n\n        scanf(\"%d %d %d\",&a,&b,&c);\n        avg=0;\n        while(b>0 && c>1)\n        {\n            b-=1;\n            c-=2;\n            avg+=3;\n        }\n        while(a>0 && b>1)\n        {\n            a-=1;\n            b-=2;\n            avg+=3;\n        }\n\n        printf(\"%d\\n\",avg);\n\n\n    }\n    \n    retutrn 0;\n}\n", "fixed": "#include<stdio.h>\n\n\nint main ()\n{\n    int tc,a,b,c,avg;\n\n    scanf(\"%d\",&tc);\n\n    while(tc--)\n    {\n\n        scanf(\"%d %d %d\",&a,&b,&c);\n        avg=0;\n        while(b>0 && c>1)\n        {\n            b-=1;\n            c-=2;\n            avg+=3;\n        }\n        while(a>0 && b>1)\n        {\n            a-=1;\n            b-=2;\n            avg+=3;\n        }\n\n        printf(\"%d\\n\",avg);\n\n\n    }\n    \n    return 0;\n}\n"}
{"similarity_score": 0.5089179548156956, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "70938ef8bdafd1d6effd5a238b18cd7f", "bug_code_uid": "1ab69e03cc4d7e2e749370003cfa0110", "src_uid": "259e39c9e63e43678e596c0d8c66937c", "apr_id": "0050b227bd9a942f1f5ccafc0d46806a", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,P,a,b;\r\n    int i,j,count,count1;\r\n    scanf(\"%d\",&t);\r\n    while(t!=0)\r\n    {\r\n\r\n        scanf(\"%d\",&P);\r\n\r\n        for(i=2; i<=P; i++)\r\n        {\r\n\r\n            for(j=i+1; j<P; j++)\r\n            {\r\n                count=P%j;\r\n                count1=P%i;\r\n                if(count==count1&&i!=j)\r\n                {\r\n                    printf(\"%d %d\\n\",i,j);\r\n                    count=-11;\r\n                    break;\r\n\r\n                }\r\n            }\r\n            if(count==-11)\r\n                break;\r\n\r\n\r\n        }\r\n\r\n        t--;\r\n\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,P,a,b;\r\n    int i,j,count,count1;\r\n    scanf(\"%d\",&t);\r\n    while(t!=0)\r\n    {\r\n\r\n        scanf(\"%d\",&P);\r\n        a=2;\r\n        b=P-1;\r\n        printf(\"%d %d \\n\",a,b) ;\r\n\r\n\r\n        t--;\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9872881355932204, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "9b92659a2ba6d4c8eeb21d78a4d610f7", "bug_code_uid": "43a94278f538805dd42641f7064c34f8", "src_uid": "ca6b162f945d4216055bf92d7263dbd5", "apr_id": "eedc4696b0a61750e47a8541a3c96dc4", "difficulty": 800, "tags": ["math", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tint i=0,j=0;\r\n\tint a[100]={0},b[100]={0},c[100]={0};\r\n\tchar s[100];\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tscanf(\"%s\",&s);\r\n\t\tfor(j = 0;j <lenght(s);j++)\r\n\t\t{\r\n\t\t\tif(s[j] == 'A')\r\n                a[i]++;\r\n\t\t\tif(s[j] == 'B')\r\n\t\t\t    b[i]++;\r\n\t\t\tif(s[j] == 'C')\r\n\t\t\t    c[i]++;\r\n\t\t}\r\n\t}\r\n\tfor(i =0;i<n;i++)\r\n\t{\r\n\t if(a[i]+c[i]==b[i])\r\n\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\tprintf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n }\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tint i=0,j=0;\r\n\tint a[10000]={0},b[10000]={0},c[10000]={0};\r\n\tchar s[100];\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tscanf(\"%s\",&s);\r\n\t\tfor(j = 0;j <strlen(s);j++)\r\n\t\t{\r\n\t\t\tif(s[j] == 'A')\r\n                a[i]++;\r\n\t\t\tif(s[j] == 'B')\r\n\t\t\t    b[i]++;\r\n\t\t\tif(s[j] == 'C')\r\n\t\t\t    c[i]++;\r\n\t\t}\r\n\t}\r\n\tfor(i =0;i<n;i++)\r\n\t{\r\n\t if(a[i]+c[i]==b[i])\r\n\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\tprintf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n }\r\n"}
{"similarity_score": 0.8571428571428571, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "7c26755ebe0613a7f4547eef2088ded2", "bug_code_uid": "085aa0dbb1fc3296c4d87be067ca3ee1", "src_uid": "d45f775613e701bbdaa4e457e6e189e2", "apr_id": "7152d7b9c517c0010760bef84e4dd020", "difficulty": 1000, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    char s[n];\n    scanf(\"%s\",&s);\n\n    for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(s[i]>s[j])\n            {\n                printf(\"YES\\n\");\n                printf(\"%d %d\",i+1,j+1);\n                return 0;\n            }\n        }\n    }\n    printf(\"NO\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int n,i,j,temp;\n    scanf(\"%d\",&n);\n    char s[n];\n    scanf(\"%s\",&s);\n\n    for(i=0;i<n;i++)\n    {\n        if(s[i]>s[i+1]&&i+1<n)\n        {\n            printf(\"YES\\n\");\n            printf(\"%d %d\",i+1,i+2);\n            return 0;\n        }\n    }\n    printf(\"NO\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.8880813953488372, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "b312de84da61b8974a62f2b41027839e", "bug_code_uid": "8987bbc8b8188cd0ca94ef101dfe69dc", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "ae828cfc2ebad8a0da5308ebea2df9f7", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nlong long a[500005],b[5];\nlong long sum[500005];\n\nint main(){\n\tlong long n,i,d;\n\tscanf(\"%lld\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&a[i]);\n\t\tsum[i]=sum[i-1]+a[i];\n\t}\n\td=sum[n]/3;\n\tif(sum[n]%3!=0||n<3){\n\tprintf(\"0\");\n}\n\telse{\t\n\t\tif(sum[n]==0){\n\t\t\tlong long  count=0;\n\t\t\tfor(i=1;i<=n;i++){\n\t\t\t\tif(sum[i]==0)\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif(count<3)\n\t\t\tprintf(\"0\");\n\t\t\tif(count==3)\n\t\t\tprintf(\"1\");\n\t\t\tif(count>3)\n\t\t\tprintf(\"%lld\",(count-2)*(count-1)/2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlong long way=0;\n\t\tfor(i=1;i<=n;i++){\n\t\t\tif(sum[i]%d==0&&sum[i]!=0){\n\t\t\t\tb[sum[i]/d]++;\n\t\t\t\tif(b[2]>0&&b[1]==0)\n\t\t\t\tb[2]=0;\n\n\t\t\t}\n\t\t}\n\t\tfor(i=1;i<=2;i++){\n\t\t\tway=b[1]*b[2];\n\t\t}\n\t\tprintf(\"%lld\",way);}\n\t}\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nlong long a[500005];\nlong long sum[500005];\n\nint main(){\n\tlong long n,i,d;\n\tscanf(\"%lld\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&a[i]);\n\t\tsum[i]=sum[i-1]+a[i];\n\t}\n\td=sum[n]/3;\n\tif(sum[n]%3!=0||n<3){\n\tprintf(\"0\");\n}\n\telse{\t\n\t\tif(sum[n]==0){\n\t\t\tlong long  count=0;\n\t\t\tfor(i=1;i<=n;i++){\n\t\t\t\tif(sum[i]==0)\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif(count<3)\n\t\t\tprintf(\"0\");\n\t\t\tif(count==3)\n\t\t\tprintf(\"1\");\n\t\t\tif(count>3)\n\t\t\tprintf(\"%lld\",(count-2)*(count-1)/2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlong long way=0,k=0;\n\t\tfor(i=1;i<=n;i++){\n\t\t\tif(sum[i]%d==0&&sum[i]!=0){\n\t\t\t\tif(sum[i]/d==2)\n\t\t\t\tway+=k;\n\t\t\t\tif(sum[i]/d==1)\n\t\t\t\tk++;\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\",way);}\n\t}\n}"}
{"similarity_score": 0.5264423076923077, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "de818de0ea3ccad832439d2ead8383f3", "bug_code_uid": "1a7f8d9ed396883066b7257f1148451e", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "66cd942c7f08f99e6ee724f28951035f", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void){\n    int count =0,i,n;\n    scanf(\"%d\",&n);\n    int a[3],result=0;\n    for(i=0;i<n;i++){\n        result =0;\n        scanf(\"%d %d %d\",a[0],a[1],a[2]);\n        for(i=0;i<3;i++){\n            if(a[i] == 1){\n                result++;\n            }\n        }\n        if(result > 1){\n            count++;\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(void){\n    int i,j,n;\n    scanf(\"%d\",&n);\n    int a[n][3],count =0,result=0;\n    for(j=0;j<n;j++){\n        for(i=0;i<3;i++){\n            scanf(\"%d\",&a[j][i]);\n        }\n    }\n    for(j=0;j<n;j++){\n        result =0;\n        for(i=0;i<3;i++){\n            if(a[j][i] != 0){\n                result++;\n            }\n        }\n        if(result>1){\n            count++;\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}"}
{"similarity_score": 0.9962962962962963, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4c8961da2f4ff917e86ef4deb2b81382", "bug_code_uid": "8675c03db58fd8baed431a92e37701d9", "src_uid": "178876bfe161ba9ccfd80c9310f75cbc", "apr_id": "1c22a97655b46e3a525cb44345ee0e58", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n int main()\n{\n    int t,i,x;\n    scanf(\"%d\",&t);\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&x);\n        if(x==2)\n            printf(\"2\\n\");\n        else if(x%2==0)\n            printf(\"0\\n\");\n        else\n            printf(\"1\\n\");\n }\n \n    return 0;\n}", "fixed": "#include <stdio.h>\n int main()\n{\n    int t,i,x;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++){\n        scanf(\"%d\",&x);\n        if(x==2)\n            printf(\"2\\n\");\n        else if(x%2==0)\n            printf(\"0\\n\");\n        else\n            printf(\"1\\n\");\n }\n \n    return 0;\n}"}
{"similarity_score": 0.9358752166377816, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "97f0ea8fbed7ac23b86e9eefe4bd5e98", "bug_code_uid": "dcdd5af753ba82b6ab3f2587b72eab7f", "src_uid": "2ce2d0c4ac5e630bafad2127a1b589dd", "apr_id": "a5ce5d4bfddac7d012ce5bca5f3fcfa1", "difficulty": 1400, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar a[1000000];\n\tint i,j,n,ans=0,count=0;\n\tscanf(\"%s\",a);\n\tn=strlen(a);\n\tfor (i=0; i<n; i++)\n\t{\n\t\tif (a[i]=='(')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (count>0)\n\t\t\t\tans++;\n\t\t}\n\t}\n\tprintf(\"%d\",ans*2);\n\treturn 0;\n}\n\n\n\t\t\t\t\t\n\n\n\n\t\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar a[1000000];\n\tint i,j,n,ans=0,count=0;\n\tscanf(\"%s\",a);\n\tn=strlen(a);\n\tfor (i=0; i<n; i++)\n\t{\n\t\tif (a[i]=='(')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (count>0)\n\t\t\t{\n\t\t\t\tcount--;\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",ans*2);\n\treturn 0;\n}\n\n\n\t\t\t\t\t\n\n\n\n\t\n"}
{"similarity_score": 0.9184, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "80557c14becc34b119ac9196aea8e8b6", "bug_code_uid": "7dc0947f2a322d4f9db4cbc9bc23ad1e", "src_uid": "14fccd50d5dfb557dd53f2896ed844c3", "apr_id": "3435b38193266845cde54e91e59b1716", "difficulty": 800, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\n\tint a,b,c,x,y,i,t;\n\tscanf (\"%d\",&t);\n\tfor (i=0;i<t;i++){\n\t\tscanf (\"%d %d %d\",&a,&b,&c);\n\t\tif (b==0){\n\t\t\tprintf (\"0\\n\");\n\t\t\tbreak;\n\t\t}\n\t\tx=c/2;\n\t\tif (x>b){\n\t\t\tprintf(\"%d\\n\",3*b);\n\t\t\tbreak;\n\t\t}\n\t\tb=b-x;\n\t\ty=b/2;\n\t\tif (y>a)\n\t\t    y=a;\n\t\tprintf (\"%d\\n\",3*(x+y));\n\t}\n\treturn 0;\n}\n\t\t\t", "fixed": "#include <stdio.h>\nint main ()\n{\n\tint a,b,c,x,y,i,t;\n\tscanf (\"%d\",&t);\n\tfor (i=0;i<t;i++){\n\t\tscanf (\"%d %d %d\",&a,&b,&c);\n\t\tif (b==0){\n\t\t\tprintf (\"0\\n\");\n\t\t}\n\t\telse{\n\t\tx=c/2;\n\t\tif (x>b){\n\t\t\tprintf(\"%d\\n\",3*b);\n\t\t}\n\t\telse{\n\t\tb=b-x;\n\t\ty=b/2;\n\t\tif (y>a)\n\t\t    y=a;\n\t\tprintf (\"%d\\n\",3*(x+y));\n\t}\n\t}\n\t}\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.9290444654683065, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "74e760c6871aff456b88ceee68f40108", "bug_code_uid": "13c8efa3c8d5e3b92d2c313b30c80ea4", "src_uid": "07597a8d08b59d4f8f82369bb5d74a49", "apr_id": "4b1dcfcbd24c5f094ec34a69ab481d2c", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main() {\r\n    int t_sets;\r\n    scanf(\"%d\", &t_sets);\r\n\r\n    for (int set_number = 1; set_number <= t_sets; set_number++) {\r\n        long long a, b, c;\r\n        scanf(\"%lld %lld %lld\", &a, &b, &c);\r\n\r\n        long long all = 2 * abs(a - b);\r\n        long long d;\r\n        if (c > all || b > all || a > all) {\r\n            d = -1;\r\n        } else {\r\n            d = all / 2 + c;\r\n        }\r\n\r\n        printf(\"%lld\\n\", d);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main() {\r\n    int t_sets;\r\n    scanf(\"%d\", &t_sets);\r\n\r\n    for (int set_number = 1; set_number <= t_sets; set_number++) {\r\n        long long a, b, c;\r\n        scanf(\"%lld %lld %lld\", &a, &b, &c);\r\n\r\n        long long all = 2 * abs(a - b);\r\n        long long d;\r\n        if (c > all || b > all || a > all) {\r\n            d = -1;\r\n        } else {\r\n            d = all / 2 + c;\r\n            if (d > all) {\r\n                d = d - all;\r\n            }\r\n        }\r\n\r\n        printf(\"%lld\\n\", d);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.872852233676976, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "30a5555c96f17bb86b6c9b4a4dd8bd22", "bug_code_uid": "f971f6214ef961d5dd6c084c440313b0", "src_uid": "41bdb08253cf5706573f5d469ab0a7b3", "apr_id": "9d5ae3360243ce01a3bcb320e177bf0c", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint n,m,s[100][100],i,j,u,ans;\n\nint b(int x, int y) {\n\tint i;\n\tfor (i=0; i<n; ++i) if (s[i][y]>s[x][y]) return 0;\n\telse return 1;\n}\n\nint main(void) {\n\tscanf(\"%d %d\\n\", &n, &m);\n\tfor (i=0; i<n; ++i) {\n\t\tfor (j=0; j<m; ++j) s[i][j]=getchar();\n\t\tgetchar();\n\t}\n\tfor (i=0; i<n; ++i) {\n\t\tu=0;\n\t\tfor (j=0; j<m; ++j) {\n\t\t\tif (b(i,j)) u=1;\n\t\t}\n\t\tif (u) ++ans;\n\t}\n\tprintf(\"%d\\n\", ans);\n\texit(EXIT_SUCCESS);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint n,m,g[100][100],i,j,ans,u;\n\nint b(int p, int q) {\n\tint i;\n\tfor (i=0; i<n; ++i) if (g[i][q]>g[p][q]) return 0;\n\treturn 1;\n}\n\nint main(void) {\n\tscanf(\"%d %d\\n\", &n, &m);\n\tfor (i=0; i<n; ++i) {\n\t\tfor (j=0; j<m; ++j) g[i][j]=getchar();\n\t\tgetchar();\n\t}\n\tfor (i=0; i<n; ++i) {\n\t\tu=0;\n\t\tfor (j=0; j<m; ++j) if (b(i,j)) {\n\t\t\tu=1;\n\t\t}\n\t\tif (u) ++ans;\n\t}\n\tprintf(\"%d\\n\", ans);\n\texit(EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.7596899224806202, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "24d2e1c842b10ed568c0ce2b593d9d94", "bug_code_uid": "02593ee94a4517c92ff0d111d2a70141", "src_uid": "130fd7f40d879e25b0bff886046bf699", "apr_id": "f4151a69cb8380ef817d9f635218328f", "difficulty": 900, "tags": ["sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\n\nint main(){\n\nlong int n,k,h,q,i,j,u;\n scanf(\"%ld\",&q);\n for(u=0;u<q;u++)\n {\nlong int count=0,a[100010]={0};\nscanf(\"%ld\",&n);\nfor(i=0;i<n;i++)\n{\nscanf(\"%ld\",&a[i]);\n}\nfor(i=0;i<n;i++)\n{\n  for(j=i+1;j<n;j++)\n  {\n  if(a[i]<a[j])\n   {\n    h=a[i];\n    a[i]=a[j];\n    a[j]=h;\n   }\n  }\n}\n for(i=2;i<n;i++)\n {\n\n  if((a[i]>=1))\n  { count+=1;\n  if(count>=a[1]-1)\n  {goto end;\n  }\n  }\n  }\n  end:\n  printf(\"%ld\\n\",count);\n\n\n }\n\n\n\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#include<conio.h>\n\nint main(){\n\nlong int n,k,h,q,i,j,u;\n scanf(\"%ld\",&q);\n for(u=0;u<q;u++)\n {\nlong int count=0,a[100010]={0},b=0,c=0;\nscanf(\"%ld\",&n);\nfor(i=0;i<n;i++)\n{\nscanf(\"%ld\",&a[i]);\nif(a[i]>b)\n{\n  if(i>0&&b>c)\n  {\n    c=b;\n  }\n  b=a[i];\n}\n\nelse if(a[i]>c)\n{\n  c=a[i];\n}\nif(a[i]>0)\n{\n  count+=1;\n}\n}\nif(count-2>=c)\n{\n  printf(\"%ld\\n\",c-1);\n}\nelse\n{\n  printf(\"%ld\\n\",count-2);\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n/*}\nfor(i=0;i<n;i++)\n{\n  for(j=i+1;j<n;j++)\n  {\n  if(a[i]<a[j])\n   {\n    h=a[i];\n    a[i]=a[j];\n    a[j]=h;\n   }\n  }\n}\n for(i=2;i<n;i++)\n {\n\n  if((a[i]>=1))\n  {\n  if(count>=a[1]-1)\n  {goto end;\n  }\n  count+=1;\n  }\n  }\n  end:\n  printf(\"%ld\\n\",count);\n\n\n }       */\n\n\n\nreturn 0;\n}"}
{"similarity_score": 0.7428571428571429, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "d438bc33a1fb7fab845e4ee91a9adca2", "bug_code_uid": "f8693f17fd892812dc3e9de320406cf3", "src_uid": "18b3d8f57ecc2b392c7b1708f75a477e", "apr_id": "e57fad141b12f5151c9cc9e3bc38568b", "difficulty": 1200, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,k,i,count=0,ans;\n\tscanf(\"%d %d\",&n,&k);\n\tint kk=k;\n\tif(k==1)\n\t{\n\t\tfor(i=1;i<=n;i++)printf(\"%d \",i);\n\t\treturn 0;\n\t}\n\tfor(i=1;count<n;i++)\n\t{\n\t\tprintf(\"%d \",i);\n\t\tcount++;\n\t\tif(count<=kk)\n\t\t{\n\t\t\tprintf(\"%d \",k+1);\n\t\t\tcount++;\n\t\t\tk--;\n\t\t}\n\t\telse if(count=kk+1)\n\t\t{\n\t\t\tfor(i=kk+2;i<=n;i++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",i);\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,k,i,count=0,ans;\n\tscanf(\"%d %d\",&n,&k);\n\tint kk=k;\n\tif(k==1)\n\t{\n\t\tfor(i=1;i<=n;i++)printf(\"%d \",i);\n\t\treturn 0;\n\t}\n\tfor(i=1;count<n;i++)\n\t{\n\t\tprintf(\"%d \",i);\n\t\tcount++;\n\t\tif(count<=kk)\n\t\t{\n\t\t\tprintf(\"%d \",k+1);\n\t\t\tcount++;\n\t\t\tk--;\n\t\t}\n\t\tif(count==kk+1)\n\t\t{\n\t\t\tfor(i=kk+2;i<=n;i++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",i);\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.6506666666666666, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "2238274d446ae28282561b741c1521d9", "bug_code_uid": "b2abd84c46351f8bb69a328f4d918d2b", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "788eb5c703129396d6ffe18c62038a4d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,t,sum=0,k,l;\n    scanf(\"%d\",&n);\n    int array[n][2];\n    for(i=0;i<n;i++)\n    {\n        for(l=0;l<2;l++)\n            scanf(\"%d\",&array[i][l]);\n    }\n    t=array[0][1];\n    k=t;\n    for(i=0;i<n-1;i++)\n    {\n        j=t-array[i+1][0];\n        sum=j+array[i+1][1];\n        if(t<sum)\n            k=sum;\n        t=sum;\n    }\n    printf(\"%d\\n\",k);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,t,sum=0,k,l;\n    scanf(\"%d\",&n);\n    int array[n][2];\n    for(i=0;i<n;i++)\n    {\n        for(l=0;l<2;l++)\n            scanf(\"%d\",&array[i][l]);\n    }\n    t=array[0][0];\n    for(i=0;i<n;i++)\n    {\n        k=array[i][1]-array[i][0]+t;\n        t=k;\n        if(k>sum)\n            sum=k;\n    }\n    printf(\"%d\\n\",sum);\n}\n"}
{"similarity_score": 0.9954954954954955, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7338fe07adca98cff8453c8d9e707414", "bug_code_uid": "a398931f42196511bf24a3fd626a695d", "src_uid": "c611808e636d9307e6df9ee0e706310b", "apr_id": "1d905df474169fdf3e2a98f88e09c1b1", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, x=0, i, j,m,g, p;\n    int h[100], v[100], arr[100];\n    scanf(\"%d\", &n);\n    for(i=1; i<=n; i++){\n        h[i]=0;\n        v[i]=0;\n    }\n    p=n*n;\n    for(i=1; i<=p; i++){\n            scanf(\"%d %d\",&m, &g );\n        if(h[m]==0&&v[g]==0){\n            arr[x]=i;\n        x++;\n        h[i]=1;\n        v[i]=1;\n        }\n    }\n    for(i=0; i<x; i++)printf(\"%d \", arr[i]);\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, x=0, i, j,m,g, p;\n    int h[100], v[100], arr[100];\n    scanf(\"%d\", &n);\n    for(i=1; i<=n; i++){\n        h[i]=0;\n        v[i]=0;\n    }\n    p=n*n;\n    for(i=1; i<=p; i++){\n            scanf(\"%d %d\",&m, &g );\n        if(h[m]==0&&v[g]==0){\n            arr[x]=i;\n        x++;\n        h[m]=1;\n        v[g]=1;\n        }\n    }\n    for(i=0; i<x; i++)printf(\"%d \", arr[i]);\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.08820709491850431, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "06e9fa48a4bb1c0126fd5e0a8b0fe89e", "bug_code_uid": "c8fd8ca93a9887c91d5ca37190271128", "src_uid": "b5dcee7034ee2742b666aea4cbfc616f", "apr_id": "809d075904f79353ec23ad7347a72355", "difficulty": 1700, "tags": ["brute force", "dp", "math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <limits.h>\n#include <math.h>\n#include <string.h>\nint gao(int n)\n{\n    int i, a=0;\n    for(i=1;i<=n;i++)\n    {\n        if(n%i==0)\n        {\n            a+=i;\n        }\n    }\n    return a;\n}\nint main()\n{\n    int n, t, i, d, a;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        d=-1;\n        scanf(\"%d\", &n);\n        a=n;\n      for(i=n;i>=1;i--)\n      {\n          if(gao(i)==a)\n          {\n              d=i;\n              break;\n          }\n          if(i<n/3)\n          {\n              break;\n          }\n      }\n        printf(\"%d\\n\", d);\n    }\n    return 0;\n}\n\n\t\t\t \t\t  \t    \t\t      \t\t\t \t \t \t\t", "fixed": "#include<stdio.h>\n#define MAX 10000001\n#define int long long\nint temp[MAX],ans[MAX];\nvoid Init(){\n\tfor(int i=1;i<MAX;i++)\n\t\tfor(int j=1;i*j<MAX;j++)\n\t\t\ttemp[i*j]+=i;\n\tfor(int i=1;i<MAX;i++)\n\t\tif(temp[i]<MAX&&ans[temp[i]]==0)\n\t\t\tans[temp[i]]=i;\n}\nsigned main(){\n\tInit();\n\tint t;\n\tscanf(\"%lld\",&t);\n\twhile(t--){\n\t\tint n;\n\t\tscanf(\"%lld\",&n);\n\t\tprintf(\"%lld\\n\",ans[n]==0?-1:ans[n]);\n\t}\n\treturn 0;\n}\n  \t  \t   \t   \t \t\t \t\t\t\t\t \t \t"}
{"similarity_score": 0.4278481012658228, "equal_cnt": 15, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "2f807a29cca634bd02cf9cad849fa796", "bug_code_uid": "2435d7061d2dfb3adebea00aefa191d0", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "8ca543cbcae54b5e674512f99e7f1a71", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int n, number[10], i=0, j, found=0;\n    double newn=0;\n    scanf(\"%d\", &n);\n    while  (n > 0)\n    {\n        number[i]=n%10;\n        if (n%10==0)\n            found = i;\n        n = n/10;\n        i++;\n    }\n    for (j=found ; j<i ; j++)\n        number[j]=number[j+1];\n    for (j=0; j<i-1 ; j++)\n        newn +=  number[j] * pow(10, j);\n\n    printf(\"%.0lf\", newn);\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int i=0 ;\n    char number[1000000];\n    scanf(\"%s\", &number);\n    while (number[i] != NULL)\n    {\n        if (number[i]=='0')\n        {\n            number[i] = '1';\n            break;\n        }\n        i++;\n    }\n    printf(\"%s\", number+1);\n    return 0;\n}\n\n"}
{"similarity_score": 0.7507507507507507, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "36c1f50c1958eab4e8b9ee1d60749fcb", "bug_code_uid": "81b1c0b58c8afcaf372b5f7a0fb924e4", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "4ee8ab925800866291f5e3dd9eeee536", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"stdio.h\"\n#include \"stdlib.h\"\n\n\nint main(int argc, char const *argv[])\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i = 1; i <= n; i++)\n    {\n        if(i%2 == 0) printf(\"I love it\");\n        else printf(\"I hate it\");\n        printf(\" \");\n    }\n    return 0;\n}\n\n\n", "fixed": "#include \"stdio.h\"\n#include \"stdlib.h\"\n\n\nint main(int argc, char const *argv[])\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i = 1; i <= n; i++)\n    {\n        if(i%2 == 0 && (n - i) == 0) printf(\"I love it\");\n        else if(i%2 == 0) printf(\"I love that \");\n        else if((n == 1) || ((n - i) == 0)) printf(\"I hate it\");\n        else printf(\"I hate that \");\n        \n    }\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.9993476842791911, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1708b4420e027ccae858b9da3e0d564a", "bug_code_uid": "2b59183c4488d559f80ceadf2f121e2c", "src_uid": "65efbc0a1ad82436100eea7a2378d4c2", "apr_id": "624e1b61dd05969f658989c6bd073611", "difficulty": 1300, "tags": ["dsu", "meet-in-the-middle", "number theory", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n\n{\n    int n,m,i,j,b,g,k,count=0;\n    scanf(\"%d%d%d\",&n,&m,&b);\n    int x[100]={0},y[100]={0};\n\n    for(i=0; i<b; i++)\n    {\n        scanf(\"%d\",&j);\n        x[j]=1;\n    }\n\n    scanf(\"%d\",&g);\n\n    for(i=0; i<g; i++)\n    {\n        scanf(\"%d\",&j);\n        y[j]=1;\n    }\n    if(n>m)\n    {\n        j=n;\n        k=m;\n    }\n    else\n    {\n        j=m;\n        k=n;\n    }\n    for(i=0;i<10*j;i++)\n    {\n        if(x[i%n]==1)y[i%m]=1;\n        else if(y[i%m]==1)x[i%n]=1;\n    }\n    for(i=0;i<k;i++)\n    {\n        if(x[i]==0||y[i]==0)\n        {\n            printf(\"No\");\n            return 0;\n        }\n    }\n    for(i=k;i<j;i++)\n        if(x[i]==0 && y[i]==0)\n    {\n        printf(\"No\");\n        return 0;\n    }\n    printf(\"Yes\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n\n{\n    int n,m,i,j,b,g,k,count=0;\n    scanf(\"%d%d%d\",&n,&m,&b);\n    int x[100]={0},y[100]={0};\n\n    for(i=0; i<b; i++)\n    {\n        scanf(\"%d\",&j);\n        x[j]=1;\n    }\n\n    scanf(\"%d\",&g);\n\n    for(i=0; i<g; i++)\n    {\n        scanf(\"%d\",&j);\n        y[j]=1;\n    }\n    if(n>m)\n    {\n        j=n;\n        k=m;\n    }\n    else\n    {\n        j=m;\n        k=n;\n    }\n    for(i=0;i<100*j;i++)\n    {\n        if(x[i%n]==1)y[i%m]=1;\n        else if(y[i%m]==1)x[i%n]=1;\n    }\n    for(i=0;i<k;i++)\n    {\n        if(x[i]==0||y[i]==0)\n        {\n            printf(\"No\");\n            return 0;\n        }\n    }\n    for(i=k;i<j;i++)\n        if(x[i]==0 && y[i]==0)\n    {\n        printf(\"No\");\n        return 0;\n    }\n    printf(\"Yes\");\n    return 0;\n}\n"}
{"similarity_score": 0.9778761061946902, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "aea1933a6da5f02a09f54e46455769ca", "bug_code_uid": "70653f64d702f8221cbf8cca9d074799", "src_uid": "5e5dbd70c7fcedf0f965aed5bafeb06c", "apr_id": "68b21d9ced4c133402485bbe09ac3e93", "difficulty": 800, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h> \nvoid\tmain()\n{\n\tint l,i=1;\n\tchar str[10000];\n\tscanf(\"%d\",&l);\n\tscanf(\"%s\",str);\n\twhile (i<=l)\n\t{\n\t\tif (str[l-i++]=='n')\n\t\t\tprintf(\"1 \");\n\t}\n\ti=1;\n\twhile (i<=l)\n\t{\n\t\tif (str[l-i++]=='r')\n\t\t\tprintf(\"0 \");\n\t}\n}", "fixed": "#include <stdio.h> \nint main()\n{\n\tint l,i=1;\n\tchar str[100000];\n\tscanf(\"%d\",&l);\n\tscanf(\"%s\",str);\n\twhile (i<=l)\n\t{\n\t\tif (str[l-i++]=='n')\n\t\t\tprintf(\"1 \");\n\t}\n\ti=1;\n\twhile (i<=l)\n\t{\n\t\tif (str[l-i++]=='r')\n\t\t\tprintf(\"0 \");\n\t}\n}"}
{"similarity_score": 0.9883810999225406, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2f77e0dc2810d45bee858587355290d5", "bug_code_uid": "bb82f8b87199c3362862c5da51b4d212", "src_uid": "5bc07d2efb7453e51f4931cc7ec3aac7", "apr_id": "934fb239f19948d66996f000a4ba4523", "difficulty": 1000, "tags": ["chinese remainder theorem", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define N 101\n#include<string.h>\nint   main()\n{\n    int n, i, j=0, m=0, k=0, l=0;\n    char a[N];\n    scanf(\"%d\",&n);\n    do\n    {\n        m = 0;\n        k = 0;\n        scanf(\"%s\",a);\n        i = strlen(a)-1;\n        for(; i>=0; i--)\n        {\n            m=a[i]+m-48;\n            if(a[i]==48)\n            {\n                k++;\n            }\n            if((a[i]-48)%2==0)\n            {\n                l++;\n            }\n        }\n        if(m%3==0&&k>=1&&l>1)\n        {\n            printf(\"red\\n\");\n        }\n        else\n        {\n            printf(\"cyan\\n\");\n        }\n        j++;\n    }while(j<n);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define N 101\n#include<string.h>\nint   main()\n{\n    int n, i, j=0, m=0, k=0, l=0;\n    char a[N];\n    scanf(\"%d\",&n);\n    do\n    {\n        m = 0;\n        k = 0;\n        l = 0;\n        scanf(\"%s\",a);\n        i = strlen(a)-1;\n        for(; i>=0; i--)\n        {\n            m=a[i]+m-48;\n            if(a[i]==48)\n            {\n                k++;\n            }\n            if((a[i]-48)%2==0)\n            {\n                l++;\n            }\n        }\n        if(m%3==0&&k>=1&&l>1)\n        {\n            printf(\"red\\n\");\n        }\n        else\n        {\n            printf(\"cyan\\n\");\n        }\n        j++;\n    }while(j<n);\n    return 0;\n}\n"}
{"similarity_score": 0.4293537787513691, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "e1a0d739a55519b1692aab5a23dd66aa", "bug_code_uid": "20d16a0700d2ed867ec10c0e9424a60f", "src_uid": "b7aef95015e326307521fd59d4fccb64", "apr_id": "581f1c0ac51fb533268eee858f05aa0d", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int r=0,n,m,p=0,vasaya=0,petaya=0,x=1;\n    scanf (\"%I64d\",&n);\n    long long int a[n];\n    for (r=0;r<n;r++)\n    {\n        scanf (\"%I64d\",&a[r]);\n    }\n     scanf (\"%I64d\",&m);\n    long long int b[m];\n    for (r=0;r<m;r++)\n    {\n        scanf (\"%I64d\",&b[r]);\n        for (p=0;p<n;p++)\n        {\n        if (a[p]==b[r])\n        {\n            vasaya=vasaya+p+1;\n            petaya=petaya+n-p;\n        }\n        }\n    }\nprintf (\"%I64d %I64d\",vasaya,petaya);\n  }", "fixed": "#include<stdio.h>\nint main ()\n{\n    long long int n;\n    scanf (\"%I64d\",&n);\n    long long int a[n],i,m,b,x,petaya=0,vasaya=0;\n    for (i=0;i<n;i++)\n    {\n       scanf (\"%I64d\",&m);\n       a[m]=i+1;\n    }\n     scanf (\"%I64d\",&m);\n    for (i=0;i<m;i++)\n    {\n        scanf (\"%I64d\",&b);\n        x=a[b];\n        petaya=petaya+x;\n        vasaya=vasaya+n-x+1;\n\n    }\n    printf (\"%I64d %I64d\\n\",petaya,vasaya);\n\n}"}
{"similarity_score": 0.8420208500400962, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "b0a47a79848bdcd0dacf474f3e018c5a", "bug_code_uid": "4388dc375f9a4a293510b7d9d0d6abce", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "b399a0ed4ede37f45c22c8811ff65926", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint call = 0;\n\nint binary(int a,int array[],int l,int r)\n{\n\tif(a <= array[l])\n\t\treturn l;\n\tif(a == array[r])\n\t\treturn r;\n\tif(a>array[r-1] && a<array[r] )\n\t\treturn r;\n\tint mid = (r - l)/2;\n\tif(a <= array[mid])\n\t\treturn binary(a,array,l,mid);\n\telse\n\t\treturn binary(a,array,mid+1,r);\n}\n\nint main()\n{\n\tint n,m,i,a;\n\tscanf(\"%d\",&n);\n\tint array[n];\n\tscanf(\"%d\",&array[0]);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tarray[i] = array[i-1] + a; \n\t}\n\tscanf(\"%d\",&m);\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tprintf(\"%d\\n\",binary(a,array,0,n-1)+1);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint call = 0;\n\nint binary(int a,int array[],int l,int r)\n{\n\tif(a <= array[l])\n\t\treturn l;\n\tif(a == array[r])\n\t\treturn r;\n\tif(a>array[r-1] && a<array[r] )\n\t\treturn r;\n\tint mid = (r - l)/2;\n\tif(a <= array[mid])\n\t\treturn binary(a,array,l,mid);\n\telse\n\t\treturn binary(a,array,mid+1,r);\n}\n\nint main()\n{\n\tint n,m,i,a,j;\n\tscanf(\"%d\",&n);\n\tint array[1000000],t[n];\n\tt[0]=0;\n\t//scanf(\"%d\",&array[0]);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tt[i] = t[i-1]+a;\n\t\tfor(j=t[i-1]+1 ;j<=t[i]; j++)\n\t\t\tarray[j] = i; \n\t}\n\t/*for(i=0;i<t[n];i++)\n\t\tprintf(\"%d \",array[i] );\n*/\tscanf(\"%d\",&m);\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tprintf(\"%d\\n\",array[a]);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.15819209039548024, "equal_cnt": 11, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "aaeeb2e82cfed267a641d7f3834ec5c6", "bug_code_uid": "2c423df7800fc39e86ae95170554fd7d", "src_uid": "f336b622fdaf5960032268641320bb53", "apr_id": "f338022c709108d9fc98363605f32939", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint num, max, i, j, k , n, yanlis=0;\n\tscanf (\"%d %d\",&num,&max);\n\tint sag[max+1],sol[max+1], mevcut[max+1], namevcut[max+1];\n\tfor (i=0;i<num;i++)\n\t{\n\t\tscanf (\"%d %d\",&sol[i],&sag[i]);\n\t}\n\tfor (n=0;n<=max;n++)\n\t{\n\t\tnamevcut[n]=n;\n\t}\n\n\tfor (j=0;j<num;j++)\n\t{\n\t\tfor (;sol[j]<=sag[j];sol[j]++)\n\t\t{\n\t\t\tif (sol[j]==namevcut[sol[j]])\n\t\t\t{\n\t\t\t\tnamevcut[sol[j]]=0;\n\t\t\t}\n\t\t}\n\t}\n\tm=0;\n\tfor(i=0;i<max+1;i++){\n\t\tif(namevcut[i]!=0){\n\t\t\tm=m+1 ;\n\t\t}\n\t}\n\tif(m==0){\n\t\tprintf(\"0\");\n\t\treturn 0 ;\n\t}\n\tfor (j=0;j<=max;j++)\n\t{\n\t\tif (namevcut[j]!=0)\n\t\t{\n\t\t\tyanlis++;\n\t\t}\n\t}\n\tprintf (\"%d\\n\", yanlis);\n\tfor (k=0;k<=max;k++)\n\t{\n\t\tif (namevcut[k]!=0)\n\t\t{\n\t\t\tprintf (\"%d \",namevcut[k]);\n\t\t}\n\t}\n\t\n}\n", "fixed": "#include <stdio.h>\n\nint sag[1001],sol[1001], namevcut[1001];\n\nint main()\n{\n\tint num, max, i, j, k , n, yanlis=0;\n\tscanf (\"%d %d\",&num,&max);\n\t\n\tfor (i=0;i<num;i++)\n\t{\n\t\tscanf (\"%d %d\",&sol[i],&sag[i]);\n\t}\n\tfor (n=1;n<=max;n++)\n\t{\n\t\tnamevcut[n]=1;\n\t}\n\n\tfor (j=0;j<num;j++)\n\t{\n\t\tfor (;sol[j]<=sag[j];sol[j]++)\n\t\t{\n\t\t\tnamevcut[sol[j]]=0;\n\t\t}\n\t}\n\t\n\tfor (j=1;j<=max;j++)\n\t{\n\t\tif (namevcut[j] == 1)\n\t\t{\n\t\t\tyanlis++;\n\t\t}\n\t}\n\tprintf (\"%d\\n\", yanlis);\n\tfor (k=1;k<=max;k++)\n\t{\n\t\tif (namevcut[k]==1)\n\t\t{\n\t\t\tprintf (\"%d \",k);\n\t\t}\n\t}\n\tputs(\"\");\n\t\n}\n"}
{"similarity_score": 0.9439071566731141, "equal_cnt": 13, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "71610ead9ed1746c548a6f295227998c", "bug_code_uid": "eefd42ade59fca9b25a4facff0afefaa", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "c351b8495f675769257ffbe10676b676", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{   long long int n;\n    scanf(\"%lld\",&n);\n    long long int a[n],i=0,t=0,f=0,h=0;\n    for(i=0;i<n;i++)\n{\n        scanf(\"%lld\",&a[i]);\n        if(a[0]!=25)\n        {\n            printf(\"NO\");\n            return 0;\n        }\n        else\n        {\n            if(a[i]==25)\n            {\n                    t++ ;\n            continue;\n\n            }\n            else if(a[i]==50)\n            {\n                if(t==0)\n                 {\n                    i=0;\n                    break;\n                 }\n                f++;t--;\n            }\n            else if(a[i]==100)\n            {\n                if(t>=3)\n                  {\n                      t=t-3;\n                      h++;\n\n                  }\n                else if(((t>=1)&&(f>=1)))\n                {\n                    t--;f--;h++;\n\n                }\n                  else\n                  {\n\n                      i=0; break;\n\n                  }\n\n\n\n        }\n    }\n\n\n}\nif(i==0) printf(\"NO\");\nelse printf(\"YES\");\nreturn 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{   long long int n;\n    scanf(\"%lld\",&n);\n    long long int a[n],i=0,t=0,f=0,h=0;\n    for(i=0;i<n;i++)\n{\n        scanf(\"%lld\",&a[i]);\n        if(a[0]!=25)\n        {\n            printf(\"NO\");\n            return 0;\n        }\n        else\n        {\n            if(a[i]==25)\n            {\n                    t++ ;\n            continue;\n\n            }\n            else if(a[i]==50)\n            {\n                if(t==0)\n                 {\n                    i=0;\n                    break;\n                 }\n                f++;t--;\n            }\n            else if(a[i]==100)\n            {\n                if(((t>=1)&&(f>=1)))\n                {\n                    t--;f--;h++;\n\n                }\n\n                else if(t>=3)\n                  {\n                      t=t-3;\n                      h++;\n\n                  }\n\n                  else\n                  {\n\n                      i=0; break;\n\n                  }\n\n\n\n        }\n    }\n\n\n}\nif(i==0) printf(\"NO\");\nelse printf(\"YES\");\nreturn 0;\n}\n\n"}
{"similarity_score": 0.9690346083788707, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "634c48207f3205dc5dfafb73c0c7f03d", "bug_code_uid": "fb0d25f010ee495cf2128e4b23045451", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "06d9839ef43b423ae96296ccccc0aaa9", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n long int a[100000], c=1, i, m=0, n;\n scanf(\"%ld\", &n);\n scanf(\"%ld\", &a[0]);\n for(i=1;i<n;i++)\n {\n  scanf(\"%ld\", &a[i]);\n  if(a[i-1]<=a[i])\n   c++;\n  else if(m<c)\n  {\n   m=c;\n   c=1;\n  }\n }\n if(m<c)\n  m=c;\n printf(\"%ld\\n\", m);\n return 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n long int a[100000], c=1, i, m=0, n;\n scanf(\"%ld\", &n);\n scanf(\"%ld\", &a[0]);\n for(i=1;i<n;i++)\n {\n  scanf(\"%ld\", &a[i]);\n  if(a[i-1]<=a[i])\n   c++;\n  else if(m<c)\n  {\n   m=c;\n   c=1;\n  }\n  else\n   c=1;\n }\n if(m<c)\n  m=c;\n printf(\"%ld\", m);\n return 0;\n}\n"}
{"similarity_score": 0.1931216931216931, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "25f86aac6e9b236ed3c595fcbe3d45c4", "bug_code_uid": "d1017e653b5764787f4fc7f35091540b", "src_uid": "71335a9489f0985f4e16435b14d6a34a", "apr_id": "d57911ceb57a2928da5668368a48c221", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tint a,b;\n\tint n;\n\twhile(scanf(\"%d\",&n)==1)\n\t{\n\t\tfor(a=0,b=0;a<n,b<n;a++,b++){\n\t\t\tif(a+2*b==n){\n\t\t\t\tprintf(\"%d %d\",a,b);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(a+2*b==n+1){\n\t\t\t\tprintf(\"%d %d\",a+1,b);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(a+2*b==n+2){\n\t\t\t\tprintf(\"%d %d\",a,b+1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n\t \t\t  \t\t \t \t \t\t    \t \t \t\t \t\t\t\t\t", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,c1,c2,k;\n\tscanf(\"%d\",&t);\n\tint a[t];\n\tfor(int x=0;x<t;x++)\n\tscanf(\"%d\",&a[x]);\n\tfor(int i=0;i<t;i++)\n\t{\n\tk=a[i]/3;\n\tif(a[i]%3==0) c1=c2=k;\n\telse if(a[i]%3==1) {\n\t\tc1=k+1;\n\t\tc2=k;\n\t}\n\telse if(a[i]%3==2){\n\t\tc1=k;\n\t\tc2=k+1;\n\t}\n\tprintf(\"%d %d\\n\",c1,c2);\n}\n\treturn 0;\n}\n\t\t\t\t\t \t \t\t\t\t \t\t   \t \t\t\t \t\t    \t"}
{"similarity_score": 0.6078602620087337, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "bb6dc984968b1f5a63e109f986a36927", "bug_code_uid": "916f95c54baab45ba4d9b864523982f2", "src_uid": "4cf0fe49f7ebf058317ac848043031a5", "apr_id": "0a1e1893a09ad6ac5e6973232d0650c9", "difficulty": 1300, "tags": [], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void)\n{\n\tint i, n, a[200000], ans = 0, nmax = 0, b[200000], j, cnt[1000000] = { 0 };\n\tlong long int sum=0;\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t\tsum = sum + a[i];\n\t\tcnt[a[i]]++;\n\t}\n\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tsum = sum - a[i];\n\t\tcnt[a[i]]--;\n\t\tif (sum % 2 == 0 && cnt[sum / 2] > 0 && sum <= 2000000)\n\t\t{\n\t\t\tb[ans] = i+1;\n\t\t\tans++;\n\t\t}\n\t\tsum = sum + a[i];\n\t\tcnt[a[i]]++;\n\t}\n\tif (ans==0)\n\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\tprintf(\"%d\\n\", ans);\n\tfor (i = 0; i < ans; i++)\n\t\tprintf(\"%d \", b[i]);\n\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main(void)\n{\n\tint i, n, a[200000], ans = 0, nmax = 0, b[200000], j, cnt[1000000] = { 0 };\n\tlong long int sum=0;\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t\tsum = sum + a[i];\n\t\tcnt[a[i]]++;\n\t}\n\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tsum = sum - a[i];\n\t\tcnt[a[i]]--;\n\t\tif (sum % 2 == 0 && sum <= 2000000)\n\t\t\tif (cnt[sum / 2] > 0)\n\t\t\t{\n\t\t\t\tb[ans] = i+1;\n\t\t\t\tans++;\n\t\t\t}\n\t\tsum = sum + a[i];\n\t\tcnt[a[i]]++;\n\t}\n\tif (ans==0)\n\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\tprintf(\"%d\\n\", ans);\n\tfor (i = 0; i < ans; i++)\n\t\tprintf(\"%d \", b[i]);\n\n\n\treturn 0;\n}"}
{"similarity_score": 0.9985734664764622, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a85f69e814c2ee52cea2f7a88609ff77", "bug_code_uid": "5841c9f84464d74a73e7f2a889265faa", "src_uid": "646cec22d98636447038e61e7dfb9db3", "apr_id": "a8e9e1903b6c3ff1522d81a9aa13769f", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[11000];\nint main()\n{\n\tint n,k;\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\n\tint sum;\n\tint z;\n\tfor(int i=1;i<=k;i++)\n\t{   int x=0;\n\t\tfor(int j=0;j<=n/k-1;j++)\n\t\t{\n\t\t\tx+=a[i+k*j];\n\t\t}\n\t\tif(i==1) { sum=x;z=1;}\n\t\telse\n\t\t{\n\t\t\tif(x<sum) { sum=x;z=i;}\n\t\t}\n\t\t//printf(\"%d\\n\",sum);\n\t}\n\tprintf(\"%d\\n\",z);\n}\n", "fixed": "#include<stdio.h>\nint a[110000];\nint main()\n{\n\tint n,k;\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\n\tint sum;\n\tint z;\n\tfor(int i=1;i<=k;i++)\n\t{   int x=0;\n\t\tfor(int j=0;j<=n/k-1;j++)\n\t\t{\n\t\t\tx+=a[i+k*j];\n\t\t}\n\t\tif(i==1) { sum=x;z=1;}\n\t\telse\n\t\t{\n\t\t\tif(x<sum) { sum=x;z=i;}\n\t\t}\n\t\t//printf(\"%d\\n\",sum);\n\t}\n\tprintf(\"%d\\n\",z);\n}\n"}
{"similarity_score": 0.964562569213732, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d3f44cbf252bb8838e2579d2ad4a7f07", "bug_code_uid": "e61610361ea21524cca5b2400da9489e", "src_uid": "044c2a3bafe4f47036ee81f2e40f639a", "apr_id": "5bb86c8019cb3c137aabdfcdd43b6f38", "difficulty": 800, "tags": ["greedy", "implementation", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    for (int i = 1; i <= n;i++)\r\n    {\r\n         int a, b;\r\n         int x = 0;\r\n         int y = 0;\r\n        scanf(\"%d %d\", &a, &b);\r\n        int c[a];\r\n        for (int j = 1; j <= a;j++)\r\n        {\r\n            scanf(\"%d\", &c[j - 1]);\r\n        }\r\n        for (int k = 1; k <= a - 1;k++)\r\n        {\r\n            for (int j = 1; j <= a - k;j++)\r\n            {\r\n                if(c[k-1]>c[k])\r\n                {\r\n                    int p = c[k - 1];\r\n                    c[k- 1] = c[k];\r\n                    c[k] = p;\r\n                }\r\n            }\r\n        }\r\n        if(c[0]+c[1]<=b)\r\n            x = 1;\r\n        for (int k = 1; k <=a;k++)\r\n        {\r\n            if(c[k-1]>b)\r\n                y = 1;\r\n        }\r\n        if(x==1||y==0)\r\n            printf(\"YES\\n\");\r\n            else\r\n                printf(\"NO\\n\");\r\n\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    for (int i = 1; i <= n;i++)\r\n    {\r\n         int a, b;\r\n         int x = 0;\r\n         int y = 0;\r\n        scanf(\"%d %d\", &a, &b);\r\n        int c[a];\r\n        for (int j = 1; j <= a;j++)\r\n        {\r\n            scanf(\"%d\", &c[j - 1]);\r\n        }\r\n        for (int k = 1; k <= a - 1;k++)\r\n        {\r\n            for (int j = 1; j <= a - k;j++)\r\n            {\r\n                if(c[j-1]>c[j])\r\n                {\r\n                    int p = c[j - 1];\r\n                    c[j- 1] = c[j];\r\n                    c[j] = p;\r\n                }\r\n            }\r\n        }\r\n        if(c[0]+c[1]<=b)\r\n            x = 1;\r\n        for (int k = 1; k <=a;k++)\r\n        {\r\n            if(c[k-1]>b)\r\n                y = 1;\r\n        }\r\n        if(x==1||y==0)\r\n            printf(\"YES\\n\");\r\n            else\r\n                printf(\"NO\\n\");\r\n\r\n    }\r\n}"}
{"similarity_score": 0.36674259681093396, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "46746dc8280c48fc66888fd76d07ac43", "bug_code_uid": "dc7e6df0f8dbd9d5eb033210e623fe2b", "src_uid": "6854ad3597f9f41d475aacb774b823ed", "apr_id": "97d8224c501988716fdd2ab6902b8337", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t,n,k,i,j,temp;\r\n\tint x[100]; \r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++){\r\n\t\tscanf(\"%d%d\",&n,&k);\r\n\t\ttemp=0;\r\n\t\tfor(j=0;j<n;j++){\r\n\t\t\tscanf(\"%d\",&x[j]);\r\n\t\t}\r\n\t\tfor(j=0;j<k;j++){\r\n\t\t\tif(x[temp]>0)\r\n\t\t\t\tx[temp]--;\r\n\t\t\telse{\r\n\t\t\t\tif(temp==n-2) break;\r\n\t\t\t\ttemp++;\r\n\t\t\t\tif(x[temp]>0)\r\n\t\t\t\t\tx[temp]--;\r\n\t\t\t}\r\n\t\t\tx[n-1]++;\r\n\t\t}\r\n\t\tfor(i=0;i<n;i++){\r\n\t\t\tprintf(\"%d \",x[i]);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t,n,k,i,j,temp;\r\n\tint x[100]; \r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\ttemp=0;\r\n\t\tscanf(\"%d%d\",&n,&k);\r\n\t\tfor(i=0;i<n;i++)\tscanf(\"%d\",&x[i]);\r\n\t\twhile(k){\r\n\t\t\twhile(x[temp]>0){\r\n\t\t\t\tx[temp]--;\r\n\t\t\t\tx[n-1]++;\r\n\t\t\t\tif(--k<=0) break;\r\n\t\t\t}\r\n\t\t\tif(x[temp]==0) temp++;\r\n\t\t\tif(temp>n-1) break;\r\n\t\t}\r\n\t\tfor (i = 0; i < n; i++)\r\n            printf(\"%d \", x[i]);\r\n        printf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
