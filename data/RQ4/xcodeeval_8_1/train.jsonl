{"similarity_score": 0.997946611909651, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "390bf7697e04700dd31b4cef131a9dcf", "bug_code_uid": "176cff03b163fefaf7571988d6ab6fef", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "e33d4a8b067961e0ebddadd4af7d7097", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char str[100000];\n    int i=0,k,l,j;\n    scanf(\"%s\",str);\n    l=strlen(str);\n    while(str[i]!='\\0')\n    {\n        if(str[i]=='0')\n        {\n            k=1;\n            break;\n        }\n        i++;\n    }\n    if(k==1)\n    {\n        for(j=i;j<l;j++)\n        {\n            str[j]=str[j+1];\n        }\n    }\n    else\n    {\n        for(i=0;i<l;i++)\n        {\n            str[i]=str[i+1];\n        }\n    }\n    puts(str);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char str[100000];\n    int i=0,k=0,l,j;\n    scanf(\"%s\",str);\n    l=strlen(str);\n    while(str[i]!='\\0')\n    {\n        if(str[i]=='0')\n        {\n            k=1;\n            break;\n        }\n        i++;\n    }\n    if(k==1)\n    {\n        for(j=i;j<l;j++)\n        {\n            str[j]=str[j+1];\n        }\n    }\n    else\n    {\n        for(i=0;i<l;i++)\n        {\n            str[i]=str[i+1];\n        }\n    }\n    puts(str);\n    return 0;\n}"}
{"similarity_score": 0.8633093525179856, "equal_cnt": 15, "replace_cnt": 14, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "6b165beed347d939199930c7d5cf4c38", "bug_code_uid": "cf3426e3b2fbe26d85fda2fac3fcb754", "src_uid": "293f9b996eee9f76d4bfdeda85685baa", "apr_id": "3162d056090f93355a0135b6d6280d76", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define P 0\n#define A 1\n#define B 2\n#define C 3\n\nint\nmin(int n1, int n2, int n3)\n{\n\tint min = n1;\n\tif (n2 < min)\n\t\tmin = n2;\n\tif (n3 < min)\n\t\tmin = n3;\n\treturn min;\n}\n\nint\nmain(void)\n{\n\tint t;\n\tscanf(\"%i\", &t);\n\n\tint arr[t][4];\n\n\tfor (int i = 0; i < t; i ++) {\n\t\tscanf(\"%i %i %i %i\", &arr[i][P], &arr[i][A], &arr[i][B], &arr[i][C]);\n\t}\n\n\tint p, a, b, c;\n\tfor (int i = 0; i < t; i++) {\n\t\tp = arr[i][P];\n\t\ta = arr[i][A];\n\t\tb = arr[i][B];\n\t\tc = arr[i][C];\n\n\t\tif (p%a == 0 || p%b == 0 || p%c == 0) {\n\t\t\tprintf(\"0\\n\");\n\t\t\tcontinue;\n\t\t}\n\n\t\tint result = min(a - (p % a),b - (p % b), c - (p % c));\n\t\tprintf(\"%i\\n\", result);\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define P 0\n#define A 1\n#define B 2\n#define C 3\n\nlong long\nmin(long long n1, long long n2, long long n3)\n{\n\tlong long min = n1;\n\tif (n2 < min)\n\t\tmin = n2;\n\tif (n3 < min)\n\t\tmin = n3;\n\treturn min;\n}\n\nlong long\nmain(void)\n{\n\tlong long t;\n\tscanf(\"%lld\", &t);\n\n\tlong long arr[t][4];\n\n\tfor (long long i = 0; i < t; i ++) {\n\t\tscanf(\"%lld %lld %lld %lld\", &arr[i][P], &arr[i][A], &arr[i][B], &arr[i][C]);\n\t}\n\n\tlong long p, a, b, c;\n\tfor (long long i = 0; i < t; i++) {\n\t\tp = arr[i][P];\n\t\ta = arr[i][A];\n\t\tb = arr[i][B];\n\t\tc = arr[i][C];\n\n\t\tif (p%a == 0 || p%b == 0 || p%c == 0) {\n\t\t\tprintf(\"0\\n\");\n\t\t\tcontinue;\n\t\t}\n\n\t\tlong long result = min(a - (p % a),b - (p % b), c - (p % c));\n\t\tprintf(\"%lld\\n\", result);\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9232343909928352, "equal_cnt": 15, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 9, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "469a4a7c815617d42bdf2848b23c43b9", "bug_code_uid": "b889400e1b52b0cd82d3eb58b7ab49ef", "src_uid": "b0f968ca75fbea2f11a7e4b9006f136e", "apr_id": "598db33909854d9988696511370bd877", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\n\r\nint solve() {\r\n    char c[9][9];\r\n    int n = 8;\r\n    char d;\r\n    // scanf(\"%s\", &d);\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j < n; j++) {\r\n            scanf(\"%c\", &c[i][j]);\r\n\r\n        }\r\n    }\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j < n; j++) {\r\n            printf(\"%c\", c[i][j]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n\r\n    for (int i = 0; i < 8; i++) {\r\n        int count = 0;\r\n        int x,y;\r\n        for (int j = 0; j < 8; j++) {\r\n            if (c[i][j] == '#' && c[i-1][j-1] == '#' && c[i-1][j+1] == '#' && c[i+1][j-1] == '#' && c[i+1][j+1] == '#') {\r\n                printf(\"%d %d\\n\", i + 1, j + 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    printf(\"-1\\n\");\r\n    return 0;\r\n\r\n}\r\n\r\nint main() {\r\n    int n = 0;\r\n    scanf(\"%d\", &n);\r\n    for (int i = 0; i < n; i++) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\n\r\nint solve() {\r\n    char c[9][9];\r\n    int n = 8;\r\n    char d;\r\n    scanf(\"%c\", &d);\r\n    scanf(\"%c\", &d);\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j < n; j++) {\r\n            scanf(\"%c\", &c[i][j]);\r\n        }\r\n        if (i != 7) scanf(\"%c\", &d);\r\n    }\r\n\r\n    // printf(\"\\n\");\r\n\r\n    // for (int i = 0; i < n; i++) {\r\n    //     for (int j = 0; j < n; j++) {\r\n    //             printf(\"%c\", c[i][j]);\r\n    //     }\r\n    //     printf(\"\\n\");\r\n    // }\r\n    // printf(\"\\n\");\r\n\r\n    for (int i = 0; i < 8; i++) {\r\n        int count = 0;\r\n        int x,y;\r\n        for (int j = 0; j < 8; j++) {\r\n            if (c[i][j] == '#' && c[i-1][j-1] == '#' && c[i-1][j+1] == '#' && c[i+1][j-1] == '#' && c[i+1][j+1] == '#') {\r\n                printf(\"%d %d\\n\", i + 1, j + 1);\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n    printf(\"-1\\n\");\r\n    return 0;\r\n\r\n}\r\n\r\nint main() {\r\n    int n = 0;\r\n    scanf(\"%d\", &n);\r\n    for (int i = 0; i < n; i++) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.46764091858037576, "equal_cnt": 22, "replace_cnt": 15, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 22, "lang": "GNU C", "fix_code_uid": "456b9efe136f1589bb4e3c9ff0f330a3", "bug_code_uid": "7cfe16a1ae92adb2d7225ae719899fb8", "src_uid": "c6bbb16b1a3946ce38e67dc4824ecf89", "apr_id": "04e0a3a6665ce98dcd02f26a9806b37b", "difficulty": 1300, "tags": ["two pointers", "binary search", "greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,k=0,l=0,sv[100000],av[100000],n,m,x,y,ms[100000],mv[100000],c=0,low,high,mid,u,v;\n    scanf(\"%d%d%d%d\",&n,&m,&x,&y);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&sv[i]);\n    for(i=0;i<m;i++)\n        scanf(\"%d\",&av[i]);\n    for(i=0;i<n;i++)\n    {\n        low=0;\n        high=m-1;\n       while(low<=high)\n       {\n           mid=(low+high)/2;\n           u=sv[i]-x;\n           v=sv[i]+y;\n           {\n              if(av[mid]>v)\n            high=mid-1;\n           if(av[mid]<u)\n            low=mid+1;\n           if(av[mid]>=u && av[mid]<=v)\n           {\n               if(av[mid]!=0)\n               {\n                  ms[l]=i+1;\n               mv[l]=mid+1;\n               l++;\n               av[mid]=0;\n               break;\n               }\n\n\n           }\n           }\n\n       }\n    }\n    printf(\"%d\\n\",l);\n    for(i=0;i<l;i++)\n        printf(\"%d %d\\n\",ms[i],mv[i]);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,k=0,l=0,sv[100000],av[100000],n,m,x,y,p=0,c=0,low,high,mid,u[100000],v[100000],U,V,M=999999;\n    scanf(\"%d%d%d%d\",&n,&m,&x,&y);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&sv[i]);\n    for(i=0;i<m;i++)\n        scanf(\"%d\",&av[i]);\n    for(i=0;i<m;i++)\n    {\n        c=0;\n        low=k;\n        high=n-1;\n        M=999999;\n        while(low<=high)\n        {\n           mid=(low+high)/2;\n           l=sv[mid];\n           if(av[i]>=l-x && av[i]<=l+y)\n           {\n               if(mid<M)\n               {\n                   M=mid;\n                   U=mid+1;\n                   V=i+1;\n               }\n               high=mid-1;\n               c++;\n           }\n           else if(av[i]<l+y)\n                high=mid-1;\n           else low=mid+1;\n        }\n        if(c>0)\n        {\n            u[p]=U;\n            v[p]=V;\n            p++;\n            k=M+1;\n        }\n\n    }\n    printf(\"%d\\n\",p);\n    for(i=0;i<p;i++)\n        printf(\"%d %d\\n\",u[i],v[i]);\n    return(0);\n}\n"}
{"similarity_score": 0.3300970873786408, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "a0d256c0b6219c7fae615532d15656d2", "bug_code_uid": "6266a3473bed3a7ed5f74f7f76af1fb8", "src_uid": "dcc380c544225c8cadf0df8d8b6ffb4d", "apr_id": "fbcdf0ad61e1e037f17e83a554a14e70", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int n;\n    while(scanf(\"%d\", &n) != EOF){\n\t\twhile(n--){\n\t\t\tlong long a;\n\t\t\tint b,c;\n\t\t\tlong long sum = 0;\n\t\t\tscanf(\"%I64d %d %d\",&a,&b,&c);\n\t\t\tif(2*b<=c){\n\t\t\t\tsum = b * a;\n\t\t\t}else{\n\t\t\t\tsum = (a/2)*c + (a%2)*b;\n\t\t\t}\n\t\t\tprintf(\"%I64d\\n\",sum);\n\t\t}   \t\n    }\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int n;\n    int a[300000];\n    while(scanf(\"%d\", &n) != EOF){\n    \tint dan=0,shuang=0,ans=0;\n\t\tfor(int i =0; i<n ;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tif(i%2==0){\n\t\t\t\tdan += a[i]; \n\t\t\t}else{\n\t\t\t\tshuang += a[i];\n\t\t\t}\n\t\t}\n\t\tint dan1=0,shuang1=0,dan2=0,shuang2=0;\t\n\t\tfor(int i =0; i<n ;i++){\n\t\t\tif(i%2==0){\n\t\t\t\tdan1 += a[i];\n\t\t\t\tdan2 = dan1-a[i]+shuang-shuang1;\n\t\t\t\tshuang2 = shuang1+dan-dan1;\n\t\t\t}else{\n\t\t\t\tshuang1 += a[i];\n\t\t\t\tshuang2 = shuang1-a[i]+dan-dan1;\n\t\t\t\tdan2 = dan1+shuang-shuang1;\n\t\t\t}\n\t\t\tif(shuang2==dan2){\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\t\n\t\tprintf(\"%d\\n\",ans);\n\t\t   \t\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.7047619047619048, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "5ee63e2d4af4ba56e450dd33544a9351", "bug_code_uid": "efdff5f33a833eed5bf71a04579c7b59", "src_uid": "2545b6af730f99193041a8810b728cb3", "apr_id": "4a5822da644f7f9119c475bd07992798", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i,j,a[100],b[100],e;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d\",&a[i],&b[i]);\n    }\n    scanf(\"%d\",&e);\n    for(j=0;j<t;i++)\n    {\n        if(e>=a[j] && e<=b[j])\n        {\n            printf(\"%d\",i-j);\n            break;\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i=0,j=0,a[100],b[100],e;\n    scanf(\"%d\",&t);\n    while(i<t)\n    {\n        scanf(\"%d %d\",&a[i],&b[i]);\n        i++;\n    }\n    scanf(\"%d\",&e);\n    while(j<t)\n    {\n        if(e>=a[j] && e<=b[j])\n        {\n            printf(\"%d\",i-j);\n            break;\n        }\n        j++;\n    }\n}\n"}
{"similarity_score": 0.4945205479452055, "equal_cnt": 17, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "9052f1993c641944d1a9d685c90b1f79", "bug_code_uid": "aa8ec5d43571afc503c3f84b5ef7c11b", "src_uid": "f110b9351fe8ff20676d11ecfc92aee3", "apr_id": "7734b19e3c54b03d5e2c7383083e0e11", "difficulty": 1300, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N 10000\n#define M 10000\n#define K 10000\n\nint main() {\n\tstatic int kk[M], vv[M][K];\n\tstatic char rick[N + 1], morty[N + 1];\n\tint n, m, i, j, cancel;\n\n\tscanf(\"%d%d\", &n, &m);\n\tfor (i = 0; i < m; i++) {\n\t\tscanf(\"%d\", &kk[i]);\n\t\tfor (j = 0; j < kk[i]; j++)\n\t\t\tscanf(\"%d\", &vv[i][j]);\n\t}\n\tcancel = 0;\n\tfor (i = 0; i < m; i++) {\n\t\tint yes;\n\n\t\tyes = 0;\n\t\tfor (j = 0; j < kk[i]; j++) {\n\t\t\tint v;\n\n\t\t\tv = vv[i][j];\n\t\t\tif (v < 0) {\n\t\t\t\tv = -v;\n\t\t\t\trick[v] = 1;\n\t\t\t\tif (morty[v]) {\n\t\t\t\t\tyes = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmorty[v] = 1;\n\t\t\t\tif (rick[v]) {\n\t\t\t\t\tyes = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!yes) {\n\t\t\tcancel = 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(cancel ? \"YES\\n\" : \"NO\\n\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N 10000\n#define M 10000\n#define K 10000\n\nint main() {\n\tstatic char rick[N + 1], morty[N + 1];\n\tint n, m, cancel;\n\n\tscanf(\"%d%d\", &n, &m);\n\twhile (m--) {\n\t\tstatic int vv[K];\n\t\tint k, i, v, yes;\n\n\t\tscanf(\"%d\", &k);\n\t\tcancel = 0;\n\t\tfor (i = 0; i < k; i++)\n\t\t\tscanf(\"%d\", &vv[i]);\n\t\tyes = 0;\n\t\tfor (i = 0; i < k; i++) {\n\t\t\tv = vv[i];\n\t\t\tif (v < 0) {\n\t\t\t\tv = -v;\n\t\t\t\trick[v] = 1;\n\t\t\t\tif (morty[v]) {\n\t\t\t\t\tyes = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmorty[v] = 1;\n\t\t\t\tif (rick[v]) {\n\t\t\t\t\tyes = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (i = 0; i < k; i++) {\n\t\t\tv = vv[i];\n\t\t\tif (v < 0)\n\t\t\t\trick[-v] = 0;\n\t\t\telse\n\t\t\t\tmorty[v] = 0;\n\t\t}\n\t\tif (!yes) {\n\t\t\tcancel = 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(cancel ? \"YES\\n\" : \"NO\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9869565217391304, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d75e4806ca21de19742cba5a5868735d", "bug_code_uid": "a51bd2012601fd0de098eb52cf9fbb88", "src_uid": "a063705bd0ce1e17ccaafbbfc2663d93", "apr_id": "b90aff37430924676fb1d6d0b23fa7bf", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 1; i <= t; i++) {\r\n        int likes = 0;\r\n        \r\n        int users;\r\n        scanf(\"%d\", &users);\r\n\r\n        for (int j = 1; j <= users; i++) {\r\n            int userType;\r\n            scanf(\"%d\", &userType);\r\n\r\n            if (userType == 1 || userType == 3) {\r\n                likes += 1;\r\n            }\r\n        }\r\n        printf(\"%d\", likes);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 1; i <= t; i++) {\r\n        int likes = 0;\r\n\r\n        int users;\r\n        scanf(\"%d\", &users);\r\n\r\n        for (int j = 1; j <= users; j++) {\r\n            int userType;\r\n            scanf(\"%d\", &userType);\r\n\r\n            if (userType == 1 || userType == 3) {\r\n                likes += 1;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", likes);\r\n    }\r\n    return 0;\r\n}"}
